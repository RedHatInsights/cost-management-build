{"version":3,"sources":["webpack:///./src/components/charts/common/chartUtils.ts","webpack:///./src/components/charts/common/chart.styles.ts","webpack:///./src/components/charts/chartTheme/theme-koku.ts","webpack:///./src/components/charts/chartTheme/index.ts","webpack:///./src/components/charts/chartTheme/theme-utils.ts","webpack:///./src/utils/computedReport/getComputedReportItems.ts","webpack:///./src/utils/computedReport/getItemLabel.ts","webpack:///./src/testIds.ts","webpack:///./src/utils/dateRange.ts","webpack:///./src/components/state/emptyValueState/emptyValueState.styles.ts","webpack:///./src/components/state/emptyValueState/emptyValueState.tsx","webpack:///./src/utils/sort.ts","webpack:///./src/components/reports/reportSummary/reportSummary.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummary.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryAlt.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryAlt.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryDetails.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryDetails.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryItem.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryItem.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryItems.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryItems.tsx","webpack:///./src/components/charts/costChart/costChart.styles.ts","webpack:///./src/components/charts/costChart/costChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryTrend.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryCost.tsx","webpack:///./src/components/charts/trendChart/trendChart.styles.ts","webpack:///./src/components/charts/trendChart/trendChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryTrend.tsx","webpack:///./src/components/charts/usageChart/usageChart.styles.ts","webpack:///./src/components/charts/usageChart/usageChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryUsage.tsx","webpack:///./src/utils/equal.ts","webpack:///./src/pages/details/components/export/exportModal.styles.ts","webpack:///./src/pages/details/components/export/exportSubmit.tsx","webpack:///./src/pages/details/components/export/exportModal.tsx","webpack:///./src/pages/state/noProviders/noProvidersState.styles.ts","webpack:///./src/pages/state/noProviders/noProvidersState.tsx","webpack:///./src/utils/pathname.ts","webpack:///./src/pages/state/noProviders/notProviders.tsx","webpack:///./src/pages/state/noProviders/index.ts","webpack:///./src/pages/state/loading/loading.tsx","webpack:///./src/pages/state/loading/index.ts","webpack:///./src/pages/details/components/utils/groupBy.tsx","webpack:///./src/pages/state/notAvailable/index.ts","webpack:///./src/pages/details/components/cluster/cluster.styles.ts","webpack:///./src/pages/details/components/cluster/clusterModal.styles.ts","webpack:///./src/pages/details/components/cluster/clusterView.tsx","webpack:///./src/pages/details/components/cluster/clusterModal.tsx","webpack:///./src/pages/details/components/cluster/cluster.tsx","webpack:///./src/pages/details/components/costChart/costChart.styles.ts","webpack:///./src/pages/details/components/costChart/costChart.tsx","webpack:///./src/pages/details/components/summary/summaryModal.styles.ts","webpack:///./src/pages/details/components/summary/summaryModalView.tsx","webpack:///./src/pages/details/components/summary/summaryModal.tsx","webpack:///./src/pages/details/components/summary/summaryCard.styles.ts","webpack:///./src/pages/details/components/summary/summaryCard.tsx","webpack:///./src/pages/details/components/usageChart/usageChart.styles.ts","webpack:///./src/pages/details/components/usageChart/usageChart.tsx","webpack:///./src/pages/details/components/costOverview/costOverviewBase.tsx","webpack:///./src/components/charts/historicalCostChart/historicalCostChart.styles.ts","webpack:///./src/components/charts/historicalCostChart/historicalCostChart.tsx","webpack:///./src/pages/details/components/historicalData/historicalChart.styles.ts","webpack:///./src/pages/details/components/historicalData/historicalDataCostChart.tsx","webpack:///./src/components/charts/historicalTrendChart/historicalTrendChart.styles.ts","webpack:///./src/components/charts/historicalTrendChart/historicalTrendChart.tsx","webpack:///./src/pages/details/components/historicalData/historicalDataTrendChart.tsx","webpack:///./src/components/charts/historicalUsageChart/historicalUsageChart.styles.ts","webpack:///./src/components/charts/historicalUsageChart/historicalUsageChart.tsx","webpack:///./src/pages/details/components/historicalData/historicalDataUsageChart.tsx","webpack:///./src/pages/details/components/historicalData/historicalDataBase.tsx","webpack:///./src/pages/details/components/breakdown/breakdown.styles.ts","webpack:///./src/pages/details/components/tag/tag.styles.ts","webpack:///./src/pages/details/components/tag/tagView.tsx","webpack:///./src/pages/details/components/tag/tagModal.tsx","webpack:///./src/pages/details/components/tag/tagLink.tsx","webpack:///./src/pages/details/components/breakdown/breakdownHeader.styles.ts","webpack:///./src/pages/details/components/breakdown/breakdownHeader.tsx","webpack:///./src/pages/details/components/breakdown/breakdownBase.tsx","webpack:///./src/pages/details/components/priceList/noRatesState.styles.ts","webpack:///./src/pages/details/components/priceList/noRatesState.tsx","webpack:///./src/pages/details/components/priceList/priceListModal.styles.ts","webpack:///./src/pages/details/components/priceList/priceListTable.tsx","webpack:///./src/pages/details/components/priceList/priceListModal.tsx","webpack:///./src/pages/details/components/actions/actions.tsx","webpack:///./src/pages/details/components/groupBy/groupBy.styles.ts","webpack:///./src/pages/details/components/groupBy/groupByOrg.tsx","webpack:///./src/pages/details/components/groupBy/groupByTag.tsx","webpack:///./src/pages/details/components/groupBy/groupBy.tsx","webpack:///./src/pages/details/components/dataToolbar/dataToolbar.styles.ts","webpack:///./src/pages/details/components/dataToolbar/dataToolbar.tsx","webpack:///./src/utils/computedReport/getComputedOcpReportItems.ts","webpack:///./src/pages/details/ocpDetails/detailsHeader.styles.ts","webpack:///./src/pages/details/ocpDetails/detailsHeader.tsx","webpack:///./src/pages/details/ocpDetails/detailsTable.styles.ts","webpack:///./src/pages/details/ocpDetails/detailsTable.tsx","webpack:///./src/pages/details/ocpDetails/detailsToolbar.tsx","webpack:///./src/pages/details/ocpDetails/ocpDetails.styles.ts","webpack:///./src/pages/details/ocpDetails/ocpDetails.tsx","webpack:///./src/pages/details/ocpDetails/index.ts","webpack:///./src/pages/details/ocpBreakdown/costOverview.tsx","webpack:///./src/pages/details/ocpBreakdown/historicalData.tsx","webpack:///./src/pages/details/ocpBreakdown/ocpBreakdown.tsx","webpack:///./src/pages/details/ocpBreakdown/index.ts"],"names":["transformReport","report","type","key","reportItem","reportItemValue","items","idKey","sortKey","sortDirection","computedItems","result","map","i","createDatum","reduce","acc","d","prevValue","length","y","datums","firstDate","Date","lastDate","padDate","getDate","setDate","id","push","padComputedReportItems","value","computedItem","xVal","label","yVal","n","Number","parseFloat","toFixed","isInt","x","name","units","undefined","getDateRange","firstOfMonth","lastOfMonth","offset","start","end","today","setMonth","getMonth","getDatumDateRange","getMaxValue","max","forEach","datum","getTooltipContent","formatValue","unit","options","lookup","t","getCostRangeString","count","endDate","month","startDate","year","getUsageRangeString","chartOverride","LAYOUT_PROPS","padding","area","Object","assign","axis","bar","boxplot","candlestick","chart","errorbar","group","legend","line","pie","scatter","stack","tooltip","voronoi","ChartTheme","default","getComputedReportItems","labelKey","sort","getUnsortedComputedReportItems","direction","itemMap","Map","visitDataPoint","dataPoint","values","idSuffix","cluster","org_unit_id","mapId","cluster_alias","clusters","capacity","cost","total","deltaPercent","delta_percent","deltaValue","delta_value","source_uuid","supplementary","infrastructure","itemLabelKey","String","meta","group_by","keys","indexOf","tagPrefixKey","hasOwnProperty","getItemLabel","alias","account_alias","limit","request","usage","item","get","set","Array","data","from","getTestProps","testIds","details","cluster_lnk","historical_data_btn","show_more_btn","tag_lnk","view_all_btn","export","cancel_btn","submit_btn","login","alert","form","username_input","password_input","submit","masthead","username","sidebarToggle","logout","onboarding","btn_cancel","btn_back","btn_continue","btn_close","type_selector","type_opt_aws","type_opt_ocp","type_opt_non","name_input","check_box_1","check_box_2","s3_input","clusterid_input","arn_input","providers","add_btn","bucket_input","empty_state_add_btn","resource_name_input","cluster_id_input","type_input","view_all_link","sidebar","nav","link","backdrop","getNoDataForDateRangeString","getForDateRangeString","getSinceDateRangeString","styles","container","fontSize","EmptyValueState","createElement","style","getValueForItem","array","a","b","aVal","bVal","chartSkeleton","height","marginBottom","global_spacer_md","marginTop","legendSkeleton","reportSummary","subtitle","display","global_FontSize_xs","color","global_Color_200","var","ReportSummary","children","detailsLink","title","subTitle","status","Card","CardTitle","Title","headingLevel","size","Boolean","CardBody","Fragment","Skeleton","xs","md","sm","CardFooter","flexGrow","minHeight","marginRight","tops","global_spacer_lg","ReportSummaryAlt","tabs","Grid","hasGutter","GridItem","lg","xl","reportSummaryDetails","alignItems","text","paddingBottom","global_spacer_sm","lineHeight","global_LineHeight_sm","paddingLeft","global_spacer_xs","whiteSpace","global_Color_100","global_FontSize_4xl","valueContainer","width","wordWrap","ReportSummaryDetails","chartType","computedReportItem","computedReportItemValue","costLabel","formatOptions","requestFormatOptions","requestLabel","showTooltip","showUnits","showUsageFirst","usageFormatOptions","usageLabel","supplementaryCost","infrastructureCost","hasTotal","hasCost","hasCount","hasSupplementaryCost","hasInfrastructureCost","hasRequest","hasUsage","getCostLayout","Tooltip","content","enableFlip","getRequestLayout","usageUnits","_units","unitsLabel","getUsageLayout","reportSummaryItem","ReportSummaryItemBase","totalValue","percentVal","percentLabel","percent","className","Progress","defaultProps","v","ReportSummaryItem","skeleton","Component","nextProps","this","props","otherIndex","findIndex","toString","includes","slice","getItems","ReportSummaryItems","chartStyles","currentColorScale","chart_color_green_100","chart_color_green_200","chart_color_green_300","chart_color_green_400","chart_color_green_500","currentCostData","fill","currentInfrastructureCostData","strokeDasharray","itemsPerRow","previousCostData","previousInfrastructureCostData","previousColorScale","global_disabled_color_200","yAxis","axisLabel","grid","stroke","ticks","tickLabels","xAxis","super","arguments","containerRef","createRef","state","hiddenSeries","Set","initDatum","costKey","setState","CursorVoronoiContainer","series","childName","legendItem","symbol","handleNavToggle","setTimeout","handleResize","current","clientWidth","getChart","index","ChartArea","has","interpolation","getContainer","cursorDimension","labels","isDataAvailable","getTooltipLabel","labelComponent","ChartLegendTooltip","legendData","getLegendData","mouseFollowTooltips","voronoiDimension","voronoiPadding","bottom","left","right","top","getLegend","legendItemsPerRow","ChartLegend","gutter","responsive","formatDatumValue","formatDatumOptions","formatter","handleLegendClick","delete","add","unavailable","s","isSeriesHidden","getChartNames","serie","getEvents","chartNames","isHidden","legendName","onLegendClick","window","addEventListener","navToggle","insights","chrome","on","prevProps","removeEventListener","domain","maxCurrentInfrastructure","maxCurrentUsage","maxPreviousInfrastructure","maxPreviousUsage","maxValue","Math","ceil","currentInfrastructureDate","currentUsageDate","previousInfrastructureDate","previousUsageDate","adjustContainerHeight","containerHeight","getDomain","getEndDate","midDate","floor","adjustedContainerHeight","ref","Chart","containerComponent","events","legendComponent","legendPosition","theme","ChartAxis","tickValues","dependentAxis","ReportSummaryCost","currentMonthData","previousMonthData","currentData","previousData","showSupplementaryLabel","showUsageLegendLabel","orientation","maxCurrent","maxPrevious","previousDate","currentDate","ReportSummaryTrend","chartContainer","currentRequestData","currentUsageData","legendColorScale","previousRequestData","previousUsageData","maxCurrentRequest","maxPreviousRequest","currentRequestDate","previousRequestDate","ReportSummaryUsage","isEqual","obj1","obj2","JSON","stringify","split","join","marginLeft","modal","h2","global_spacer_xl","input","ul","stateProps","dispatchProps","defaultState","fetchReportClicked","getExport","reportFetchStatus","getFileName","handleClose","groupBy","reportPathsType","provider","date","onClose","handleFetchReport","exportReport","queryString","handleResolutionChange","_","event","resolution","currentTarget","bind","Button","isDisabled","onClick","variant","primary","mapStateToProps","isAllItems","query","newQuery","parse","order_by","filter","newQueryString","getQueryString","selectExport","reportError","selectExportError","selectExportFetchStatus","mapDispatchToProps","ExportSubmit","resolutionOptions","isOpen","sortedItems","selectedLabel","Modal","actions","Form","FormGroup","fieldId","option","Radio","isValid","checked","onChange","groupItem","ExportModal","viewSources","getViewSources","release","pathName","location","pathname","shift","getReleasePath","href","EmptyState","large","EmptyStateIcon","icon","EmptyStateBody","NoProvidersState","withRouter","Main","getGroupById","find","getGroupByValue","groupById","clustersContainer","global_spacer_3xl","global_spacer_2xl","textAlign","modalOverride","ClusterView","ClusterModal","showAll","handleOpen","preventDefault","charCount","someClusters","allClusters","clusterString","trim","concat","Cluster","chartHeight","fontWeight","global_FontWeight_bold","__rest","e","p","prototype","call","getOwnPropertySymbols","propertyIsEnumerable","getLegendLabel","_a","ChartLabel","getSkeleton","hasMarkup","markup","hasRaw","raw","markupUnits","rawUnits","markupValue","rawValue","usageValue","markupLabel","rawLabel","LegendLabel","Legend","dy","rowGutter","ChartPie","ariaDesc","ariaTitle","constrainToVisibleArea","legendOrientation","themeColor","green","CostChart","mainContent","fetchReport","_item","filterBy","parentGroupBy","groupByOrg","time_scope_units","time_scope_value","account","filter_by","selectReport","selectReportFetchStatus","SummaryModalView","SummaryModal","card","viewAllContainer","isBulletChartModalOpen","getSummary","getViewAll","handleBulletChartModalOpen","button","handleBulletChartModalClose","reportType","SummaryCard","getCpuChart","chartDatum","getChartDatumWithCapacity","getChartDatum","getFreeSpace","ChartBullet","comparativeErrorMeasureData","comparativeErrorMeasureLegendData","getChartHeight","getItemsPerRow","maxDomain","isDatumEmpty","minDomain","primarySegmentedMeasureData","primarySegmentedMeasureLegendData","qualitativeRangeData","ranges","qualitativeRangeLegendData","hasRange","range","hasLimit","trunc","limitUnits","requestUnits","hasCapacity","capacityUnits","unusedRequestCapacity","unusedUsageCapacity","unusedRequestCapacityPercentage","unusedUsageCapacityPercentage","percentage","UsageChart","getClusterChart","widget","showWidget","showWidgetOnGroupBy","reportGroupBy","getCostChart","getCpuUsageChart","getMemoryUsageChart","getSummaryCard","usePlaceholder","getWidgetsColumns","selectWidgets","widgets","visibleWidgets","widgetId","renderedWidget","renderWidget","rows","leftColumnWidgets","rightColumnWidgets","currentCapacityData","previousCapacityData","chart_color_blue_100","chart_color_blue_200","chart_color_blue_300","chart_color_blue_400","chart_color_blue_500","maxCurrentLimit","maxPreviousLimit","xAxisLabel","yAxisLabel","costChart","trendChart","usageChart","currentQueryString","previousQueryString","currentReport","currentReportFetchStatus","previousReport","previousReportFetchStatus","costUnits","currentQuery","previousQuery","HistoricalDataCostChart","isCostChart","isNaN","useFilter","HistoricalDataTrendChart","currentLimitData","previousLimitData","HistoricalDataUsageChart","getTrendChart","getUsageChart","paddingRight","paddingTop","dataListHeading","groupByHeading","tagLink","tagsContainer","getDataListItems","tag","val","DataListItem","DataListItemRow","DataListItemCells","dataListCells","DataListCell","dataListItems","DataList","isCompact","TagView","getTagValueCount","queryFromRoute","search","TagModal","TagLink","costValue","costLabelDate","global_FontSize_sm","header","justifyContent","backgroundColor","global_BackgroundColor_100","infoDescription","global_disabled_color_100","breadcrumbOverride","buildDetailsLink","detailsURL","groupByKey","getGroupByOrg","getTotalCost","description","filterByAccount","showTags","Link","to","BreakdownHeader","getIdKeyForTab","tab","activeTabKey","getAvailableTabs","contentRef","getTab","Tab","eventKey","tabContentId","tabContentRef","TabTitleText","getTabTitle","getTabContent","availableTabs","TabContent","getTabItem","costOverviewComponent","historicalDataComponent","emptyTab","currentTab","getTabs","Tabs","activeKey","onSelect","handleTabClick","tabIndex","updateReport","prevState","noReport","noLocation","NoRatesState","getUsageRangeText","metric","range_value","range_unit","rates","notAvailableText","Table","cells","replace","m","toUpperCase","value_unit","period","getSourceUUID","uuid","fetch","priceListStatus","priceListProvider","priceListError","priceList","error","priceListRates","close","renderContent","PriceListModal","providerType","selectProviders","providerUuid","ratesPerProvider","fetchPriceList","isDropdownOpen","isExportModalOpen","isPriceListModalOpen","getExportModal","handleExportModalClose","getPriceListModal","handlePriceListModalClose","handleExportModalOpen","handlePriceListModalOpen","handleOnSelect","handleOnToggle","showPriceListOption","redirectToCostModel","history","DropdownItem","component","unshift","Dropdown","toggle","KebabToggle","onToggle","isPlain","position","dropdownItems","Actions","costModels","redirectToCostModelFromSourceUuid","groupBySelector","groupBySelectorLabel","defaultItem","isGroupByOpen","getCurrentGroupBy","getIdKeyForGroupBy","groupByKeys","getGroupByItems","sortedData","roots","org","level","filteredOrgs","root","handleGroupByClear","currentItem","handleGroupBySelect","selection","onItemClicked","handleGroupByToggle","groupByItems","Select","onClear","placeholderText","selections","typeahead","SelectOption","GroupByOrg","hasTagKeys","keepData","tagKey","GroupByTag","groupByOrgOptions","groupByTagOptions","isGroupByOrgVisible","isGroupByTagVisible","handleGroupByClick","orgReport","tagReport","allOptions","showOrgs","DropdownToggle","orgReportFetchStatus","tagReportFetchStatus","GroupBy","toolbarContainer","global_BackgroundColor_light_100","selectOverride","defaultFilters","categoryInput","filters","isCategoryDropdownOpen","isOrgUnitSelectExpanded","isTagValueDropdownOpen","isTagKeySelectExpanded","isTagValueSelectExpanded","tagKeyValueInput","getDefaultCategory","categoryOptions","getActiveFilters","isArray","substring","onDelete","chip","filterType","_filterType","onFilterRemoved","getCurrentCategoryOption","currentCategory","onCategoryClick","onCategorySelect","currentTagKey","onCategoryToggle","getCategoryInput","categoryOption","ToolbarFilter","categoryName","chips","deleteChip","showToolbarItem","InputGroup","TextInput","onCategoryInputChange","placeholder","onKeyDown","evt","onCategoryInput","control","getDefaultCategoryOptions","prevFilters","onFilterAdded","getOrgUnitSelect","getOrgUnitOptions","compareTo","node","checkbox","onOrgUnitToggle","onOrgUnitSelect","target","prevSelections","getTagKeySelect","selectOptions","getTagKeyOptions","selectOption","ToolbarItem","onTagKeyClear","onTagKeyToggle","onTagKeySelect","isPlaceholder","getTagValueSelect","tagKeyOption","getTagValueOptions","onTagValueToggle","onTagValueSelect","onTagValueInputChange","onTagValueInput","getExportButton","isExportDisabled","handleExportClicked","plain","onExportClicked","pagination","showExport","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarContent","ToolbarToggleGroup","breakpoint","toggleIcon","ToolbarGroup","getCategoryDropdown","alignment","DataToolbar","project","costLabelUnit","info","verticalAlign","infoIcon","global_FontSize_md","infoTitle","baseQuery","delta","groupByOptions","showPopover","handlePopoverClick","show","onGroupByClicked","providersError","showContent","Popover","bodyContent","providersQueryString","selectProvidersError","providersFetchStatus","selectProvidersFetchStatus","DetailsHeader","emptyState","infoArrow","infoArrowDesc","monthOverMonthOverride","global_success_color_100","global_danger_color_100","tableOverride","columns","buildCostLink","groupByTagKey","getGroupByTagKey","orderBy","transforms","sortable","monthOverMonth","getMonthOverMonthCost","InfrastructureCost","getInfrastructureCost","getSupplementaryCost","getActions","loadingRows","heightAuto","colSpan","Bullseye","Spinner","sortBy","getEmptyState","showMargin","tagIndex","abs","showPercentage","showValue","iconOverride","ininfoArrow","getSortBy","asc","c","column","desc","isSelected","rowId","onSelected","row","selected","selectedItems","parent","handleOnSort","onSort","isLoading","gridBreakPoint","DetailsTable","getCategoryOptions","DetailsToolbar","ocpDetails","paginationContainer","tableContainer","getPagination","isBottom","page","Pagination","itemCount","onPerPageSelect","handlePerPageSelect","onSetPage","handleSetPage","perPage","getTable","handleSelected","handleSort","getToolbar","handleFilterAdded","handleFilterRemoved","filterValue","found","filteredQuery","getRouteForQuery","_event","pageNumber","sortType","isSortAscending","newItems","reset","response","selectReportError","ocpCostOverview","selectCurrentWidgets","CostOverview","ocpHistoricalData","HistoricalData"],"mappings":"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","file":"4d40f0357eae92db834a.bundle.js","sourcesContent":["import endOfMonth from 'date-fns/end_of_month';\nimport format from 'date-fns/format';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getYear from 'date-fns/get_year';\nimport startOfMonth from 'date-fns/start_of_month';\nimport i18next from 'i18next';\nimport { getComputedReportItems, } from 'utils/computedReport/getComputedReportItems';\nimport { unitLookupKey, } from 'utils/formatValue';\nexport function transformReport(report, type = 1 /* daily */, key = 'date', reportItem = 'cost', reportItemValue = 'total') {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        idKey: key,\n        report,\n        reportItemValue,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedReportItems(items);\n    let result;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        result = computedItems.map(i => createDatum(i[reportItem], i, key, reportItem));\n    }\n    else {\n        result = computedItems.reduce((acc, d) => {\n            const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n            return [\n                ...acc,\n                createDatum(prevValue + d[reportItem], d, key, reportItem),\n            ];\n        }, []);\n    }\n    return key === 'date' ? padComputedReportItems(result) : result;\n}\nexport function createDatum(value, computedItem, idKey = 'date', reportItem = 'cost') {\n    const xVal = idKey === 'date' ? getDate(computedItem.id) : computedItem.label;\n    const yVal = isFloat(value)\n        ? parseFloat(value.toFixed(2))\n        : isInt(value)\n            ? value\n            : 0;\n    return {\n        x: xVal,\n        y: value === null ? null : yVal,\n        key: computedItem.id,\n        name: computedItem.id,\n        units: computedItem.units ? computedItem.units[reportItem] : undefined,\n    };\n}\n// This pads computed report items with null datum objects, representing missing data at the begining and end of the\n// data series. The remaining data is left as is to allow for extrapolation. This allows us to display a \"no data\"\n// message in the tooltip, which helps distinguish between zero values and when there is no data available.\nexport function padComputedReportItems(datums) {\n    const result = [];\n    if (!datums || datums.length === 0) {\n        return result;\n    }\n    const firstDate = new Date(datums[0].key + 'T00:00:00');\n    const lastDate = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    // Pad start for missing data\n    let padDate = startOfMonth(firstDate);\n    for (let i = padDate.getDate(); i < firstDate.getDate(); i++) {\n        padDate.setDate(i);\n        const id = formatDate(padDate, 'YYYY-MM-DD');\n        result.push(createDatum(null, { id }, 'date', null));\n    }\n    // Fill middle with existing data\n    result.push(...datums);\n    // Pad end for missing data\n    padDate = new Date(lastDate);\n    for (let i = padDate.getDate() + 1; i <= endOfMonth(lastDate).getDate(); i++) {\n        padDate.setDate(i);\n        const id = formatDate(padDate, 'YYYY-MM-DD');\n        result.push(createDatum(null, { id }, 'date', null));\n    }\n    return result;\n}\nexport function getDatumDateRange(datums, offset = 0) {\n    if (!(datums && datums.length)) {\n        const today = new Date();\n        // If datums is empty, obtain the month based on offset (e.g., to show previous month in chart legends)\n        if (offset) {\n            today.setMonth(today.getMonth() - offset);\n        }\n        const firstOfMonth = startOfMonth(today);\n        return [firstOfMonth, today];\n    }\n    const start = new Date(datums[0].key + 'T00:00:00');\n    const end = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    return [start, end];\n}\nexport function getDateRange(datums, firstOfMonth = true, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDatumDateRange(datums, offset);\n    // Show the date range we are trying to cover (i.e., days 1-30/31)\n    if (firstOfMonth && start.setDate) {\n        start.setDate(1);\n    }\n    if (lastOfMonth && start.setDate) {\n        const lastDate = endOfMonth(start).getDate();\n        end.setDate(lastDate);\n    }\n    return [start, end];\n}\nexport function getDateRangeString(datums, firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(`chart.date_range`, {\n        count: getDate(end),\n        endDate: formatDate(end, 'DD'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'DD'),\n        year: getYear(end),\n    });\n}\nexport function getMonthRangeString(datums, key = 'chart.month_legend_label', offset = 0) {\n    const [start, end] = getDateRange(datums, true, false, offset);\n    return [\n        i18next.t(key, {\n            month: Number(formatDate(start, 'M')) - 1,\n        }),\n        i18next.t(key, {\n            month: Number(formatDate(end, 'M')) - 1,\n        }),\n    ];\n}\nexport function getMaxValue(datums) {\n    let max = 0;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            if (datum.y > max) {\n                max = datum.y;\n            }\n        });\n    }\n    return max;\n}\nexport function getTooltipContent(formatValue) {\n    return function labelFormatter(value, unit = null, options = {}) {\n        const lookup = unitLookupKey(unit);\n        switch (lookup) {\n            case 'core-hours':\n            case 'hrs':\n            case 'gb':\n            case 'gb-hours':\n            case 'gb-mo':\n            case 'vm-hours':\n                return i18next.t(`unit_tooltips.${lookup}`, {\n                    value: `${formatValue(value, unit, options)}`,\n                });\n            default:\n                return `${formatValue(value, unit, options)}`;\n        }\n    };\n}\nexport function getTooltipLabel(datum, formatValue, formatOptions, idKey = 'date', units) {\n    if (!datum.key) {\n        return '';\n    }\n    if (idKey === 'date') {\n        const date = format(datum.key, 'DD MMM YYYY');\n        return `${date} ${formatValue(datum.y, units ? units : datum.units, formatOptions)}`;\n    }\n    return datum.key.toString();\n}\nexport function getCostRangeString(datums, key = 'chart.cost_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(key, {\n        count: getDate(end),\n        endDate: formatDate(end, 'D'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'D'),\n        year: getYear(end),\n    });\n}\nexport function getUsageRangeString(datums, key = 'chart.usage_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    return getCostRangeString(datums, key, firstOfMonth, lastOfMonth, offset);\n}\nfunction isInt(n) {\n    return Number(n) === n && n % 1 === 0;\n}\nfunction isFloat(n) {\n    return Number(n) === n && n % 1 !== 0;\n}\n","import { global_Color_dark_100, global_Color_light_100, global_primary_color_100, global_primary_color_200, global_success_color_100, global_success_color_200, } from '@patternfly/react-tokens';\nimport { css } from 'emotion';\nexport const chartStyles = {\n    padding: 8,\n    group: {\n        data: { strokeWidth: 2, fillOpacity: 0.4 },\n    },\n    tooltipText: {\n        fontSize: '14px',\n        fill: global_Color_light_100.value,\n    },\n    tooltipFlyout: { fill: global_Color_dark_100.value },\n    previousMonth: {\n        data: {\n            fill: global_success_color_200.value,\n            stroke: global_success_color_100.value,\n        },\n    },\n    currentMonth: {\n        data: {\n            fill: global_primary_color_100.value,\n            stroke: global_primary_color_200.value,\n        },\n    },\n};\nexport const chartOverride = css `\n  :not(foo) svg {\n    overflow: visible;\n  }\n`;\n","// Layout\nconst LAYOUT_PROPS = {\n    padding: 8,\n};\n// Victory theme properties only\nexport default {\n    area: Object.assign({}, LAYOUT_PROPS),\n    axis: Object.assign({}, LAYOUT_PROPS),\n    bar: Object.assign({}, LAYOUT_PROPS),\n    boxplot: Object.assign({}, LAYOUT_PROPS),\n    candlestick: Object.assign({}, LAYOUT_PROPS),\n    chart: Object.assign({}, LAYOUT_PROPS),\n    errorbar: Object.assign({}, LAYOUT_PROPS),\n    group: Object.assign({}, LAYOUT_PROPS),\n    legend: {},\n    line: Object.assign({}, LAYOUT_PROPS),\n    pie: Object.assign({}, LAYOUT_PROPS),\n    scatter: Object.assign({}, LAYOUT_PROPS),\n    stack: Object.assign({}, LAYOUT_PROPS),\n    tooltip: {},\n    voronoi: Object.assign({}, LAYOUT_PROPS),\n};\n","import getTheme from './theme-utils';\nconst ChartTheme = getTheme();\nexport default ChartTheme;\n","import { ChartThemeColor, ChartThemeVariant, getCustomTheme, } from '@patternfly/react-charts';\nimport { default as ChartTheme } from './theme-koku';\n// Applies theme color and variant to base theme\nconst getTheme = () => getCustomTheme(ChartThemeColor.default, ChartThemeVariant.default, ChartTheme);\nexport default getTheme;\n","import { sort } from 'utils/sort';\nimport { getItemLabel } from './getItemLabel';\nexport function getComputedReportItems({ idKey, labelKey = idKey, report, reportItemValue = 'total', sortDirection = 0 /* asc */, sortKey = 'cost', }) {\n    return sort(getUnsortedComputedReportItems({\n        idKey,\n        labelKey,\n        report,\n        reportItemValue,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nexport function getUnsortedComputedReportItems({ report, idKey, labelKey = idKey, reportItemValue = 'total', }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint && dataPoint.values) {\n            const type = dataPoint.type;\n            dataPoint.values.forEach((value) => {\n                // Ensure unique map IDs -- https://github.com/project-koku/koku-ui/issues/706\n                const idSuffix = idKey !== 'date' && idKey !== 'cluster' && value.cluster\n                    ? `-${value.cluster}`\n                    : '';\n                // org_unit_id workaround for storage and instance-type APIs\n                const id = idKey === 'org_entities' ? value.id || value.org_unit_id : value[idKey];\n                const mapId = `${id}${idSuffix}`;\n                // clusters will either contain the cluster alias or default to cluster ID\n                const cluster_alias = value.clusters && value.clusters.length > 0\n                    ? value.clusters[0]\n                    : undefined;\n                const cluster = cluster_alias || value.cluster;\n                const clusters = value.clusters ? value.clusters : [];\n                const capacity = value.capacity ? value.capacity.value : 0;\n                const cost = value.cost && value.cost.total ? value.cost.total.value : 0;\n                const deltaPercent = value.delta_percent ? value.delta_percent : 0;\n                const deltaValue = value.delta_value ? value.delta_value : 0;\n                const source_uuid = value.source_uuid ? value.source_uuid : [];\n                const supplementary = value.supplementary && value.supplementary.total\n                    ? value.supplementary.total.value\n                    : 0;\n                const infrastructure = value.infrastructure && value.infrastructure[reportItemValue]\n                    ? value.infrastructure[reportItemValue].value\n                    : 0;\n                let label;\n                const itemLabelKey = getItemLabel({ report, labelKey, value });\n                if (itemLabelKey === 'org_entities' && value.alias) {\n                    label = value.alias;\n                }\n                else if (itemLabelKey === 'account' && value.account_alias) {\n                    label = value.account_alias;\n                }\n                else if (itemLabelKey === 'cluster' && cluster_alias) {\n                    label = cluster_alias;\n                }\n                else if (value[itemLabelKey] instanceof Object) {\n                    label = value[itemLabelKey].value;\n                }\n                else {\n                    label = value[itemLabelKey];\n                }\n                const limit = value.limit ? value.limit.value : 0;\n                const request = value.request ? value.request.value : 0;\n                const usage = value.usage ? value.usage.value : 0;\n                const units = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, (value.capacity && { capacity: value.capacity.units })), { cost: value.cost && value.cost.total ? value.cost.total.units : 'USD' }), (value.limit && { limit: value.limit.units })), (value.infrastructure &&\n                    value.infrastructure.total && {\n                    infrastructure: value.infrastructure.total.units,\n                })), (value.request && { request: value.request.units })), (value.supplementary &&\n                    value.supplementary.total && {\n                    supplementary: value.supplementary.total.units,\n                })), (value.usage && { usage: value.usage.units }));\n                const item = itemMap.get(mapId);\n                if (item) {\n                    itemMap.set(mapId, Object.assign(Object.assign({}, item), { capacity: item.capacity + capacity, cost: item.cost + cost, supplementary: item.supplementary + supplementary, infrastructure: item.infrastructure + infrastructure, limit: item.limit + limit, request: item.request + request, usage: item.usage + usage }));\n                }\n                else {\n                    itemMap.set(mapId, {\n                        capacity,\n                        cluster,\n                        clusters,\n                        cost,\n                        deltaPercent,\n                        deltaValue,\n                        source_uuid,\n                        supplementary,\n                        id,\n                        infrastructure,\n                        label,\n                        limit,\n                        request,\n                        type,\n                        units,\n                        usage,\n                    });\n                }\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\n","import { tagPrefix } from 'api/queries/query';\nexport function getItemLabel({ report, labelKey, value }) {\n    let itemLabelKey = String(labelKey);\n    if (report.meta && report.meta.group_by) {\n        const group_by = report.meta.group_by;\n        for (const key of Object.keys(group_by)) {\n            if (key.indexOf(tagPrefix)) {\n                const tagPrefixKey = tagPrefix + labelKey;\n                if (value.hasOwnProperty(tagPrefixKey)) {\n                    itemLabelKey = tagPrefixKey;\n                }\n            }\n        }\n    }\n    return itemLabelKey;\n}\n","export const testIdProp = 'data-testid';\nexport const getTestProps = (id) => ({ [testIdProp]: id });\nexport const testIds = {\n    details: {\n        cluster_lnk: 'cluster-lnk',\n        historical_data_btn: 'historical-data-btn',\n        show_more_btn: 'show-more-btn',\n        tag_lnk: 'tag-lnk',\n        view_all_btn: 'view-all-btn',\n    },\n    export: {\n        cancel_btn: 'cancel-btn',\n        submit_btn: 'submit-btn',\n    },\n    login: {\n        alert: 'alert',\n        form: 'login-form',\n        username_input: 'username-input',\n        password_input: 'password-input',\n        submit: 'submit',\n    },\n    masthead: {\n        masthead: 'masthead',\n        username: 'username',\n        sidebarToggle: 'sidebar-toggle',\n        logout: 'logout',\n    },\n    onboarding: {\n        btn_cancel: 'btn-cancel',\n        btn_back: 'btn-back',\n        btn_continue: 'btn-continue',\n        btn_close: 'btn-close',\n        type_selector: 'type-selector',\n        type_opt_aws: 'type-option-aws',\n        type_opt_ocp: 'type-option-ocp',\n        type_opt_non: 'type-option-non',\n        name_input: 'name-input',\n        check_box_1: 'check-box-1',\n        check_box_2: 'check-box-2',\n        s3_input: 's3-input',\n        clusterid_input: 'clusterid-input',\n        arn_input: 'arn-input',\n    },\n    providers: {\n        add_btn: 'add-btn',\n        bucket_input: 'bucket-input',\n        cancel_btn: 'cancel-btn',\n        empty_state_add_btn: 'empty_state_add-btn',\n        name_input: 'provider-name-input',\n        resource_name_input: 'provider-resource-name-input',\n        cluster_id_input: 'provider-cluster-id-input',\n        submit_btn: 'submit-btn',\n        type_input: 'provider-type-input',\n        view_all_link: 'view-all-lnk',\n    },\n    sidebar: {\n        nav: 'vertical-nav',\n        link: 'vertical-nav-link',\n        backdrop: 'sidebar-backdrop',\n    },\n};\n","import formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport i18next from 'i18next';\nexport function getNoDataForDateRangeString(key = 'no_data_for_date', offset = 1) {\n    const today = new Date();\n    if (offset) {\n        today.setMonth(today.getMonth() - offset);\n    }\n    const month = getMonth(today);\n    const endDate = formatDate(today, 'D');\n    const startDate = formatDate(startOfMonth(today), 'D');\n    return i18next.t(key, {\n        count: getDate(today),\n        endDate,\n        month,\n        startDate,\n    });\n}\nexport function getForDateRangeString(value, key = 'for_date', offset = 1) {\n    const today = new Date();\n    if (offset) {\n        today.setMonth(today.getMonth() - offset);\n    }\n    const month = getMonth(today);\n    const endDate = formatDate(today, 'D');\n    const startDate = formatDate(startOfMonth(today), 'D');\n    return i18next.t(key, {\n        count: getDate(today),\n        endDate,\n        month,\n        startDate,\n        value,\n    });\n}\nexport function getSinceDateRangeString(key = 'since_date') {\n    const today = new Date();\n    const month = getMonth(today);\n    const endDate = formatDate(today, 'D');\n    const startDate = formatDate(startOfMonth(today), 'D');\n    return i18next.t(key, {\n        count: getDate(today),\n        endDate,\n        month,\n        startDate,\n    });\n}\n","import { global_FontSize_sm } from '@patternfly/react-tokens';\nexport const styles = {\n    container: {\n        fontSize: global_FontSize_sm.value,\n    },\n};\n","import { MinusIcon } from '@patternfly/react-icons/dist/js/icons/minus-icon';\nimport React from 'react';\nimport { styles } from './emptyValueState.styles';\nexport const EmptyValueState = () => {\n    return (React.createElement(\"span\", { style: styles.container },\n        React.createElement(MinusIcon, null)));\n};\n","function getValueForItem(item, options) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    const sortKey = options.key;\n    return item[sortKey];\n}\nexport function sort(array, options) {\n    const { direction = 0 /* asc */ } = options || {};\n    return [...array].sort((a, b) => {\n        const aVal = direction === 0 /* asc */\n            ? getValueForItem(a, options)\n            : getValueForItem(b, options);\n        const bVal = direction === 0 /* asc */\n            ? getValueForItem(b, options)\n            : getValueForItem(a, options);\n        if (aVal > bVal) {\n            return -1;\n        }\n        if (aVal < bVal) {\n            return 1;\n        }\n        return 0;\n    });\n}\n","import { global_Color_200, global_FontSize_xs, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = {\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n};\n","import { Card, CardBody, CardFooter, CardTitle, Title, } from '@patternfly/react-core';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './reportSummary.styles';\nconst ReportSummaryBase = ({ children, detailsLink, title, subTitle, status, t, }) => (React.createElement(Card, { style: styles.reportSummary },\n    React.createElement(CardTitle, null,\n        React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { style: styles.subtitle }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { size: SkeletonSize.xs }),\n        React.createElement(Skeleton, { style: styles.chartSkeleton, size: SkeletonSize.md }),\n        React.createElement(Skeleton, { size: SkeletonSize.sm }),\n        React.createElement(Skeleton, { style: styles.legendSkeleton, size: SkeletonSize.xs }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst ReportSummary = translate()(ReportSummaryBase);\nexport { ReportSummary };\n","import { global_Color_200, global_FontSize_xs, global_spacer_lg, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = {\n    chartSkeleton: {\n        height: '175px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '470px',\n        marginRight: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { Card, CardBody, CardFooter, CardTitle, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './reportSummaryAlt.styles';\nconst OcpCloudReportSummaryAltBase = ({ children, detailsLink, status, subTitle, t, tabs, title, }) => (React.createElement(Card, { style: styles.reportSummary },\n    React.createElement(Grid, { hasGutter: true },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { style: styles.cost },\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, title),\n                    Boolean(subTitle) && React.createElement(\"p\", { style: styles.subtitle }, subTitle)),\n                React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { size: SkeletonSize.xs }),\n                    React.createElement(Skeleton, { style: styles.chartSkeleton, size: SkeletonSize.md }),\n                    React.createElement(Skeleton, { size: SkeletonSize.sm }),\n                    React.createElement(Skeleton, { style: styles.legendSkeleton, size: SkeletonSize.xs }))) : (children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { style: styles.container },\n                React.createElement(\"div\", { style: styles.tops }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst ReportSummaryAlt = translate()(OcpCloudReportSummaryAltBase);\nexport { ReportSummaryAlt };\n","import { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, global_spacer_xs, } from '@patternfly/react-tokens';\nexport const styles = {\n    reportSummaryDetails: {\n        marginBottom: global_spacer_md.value,\n        display: 'flex',\n        alignItems: 'flex-end',\n    },\n    text: {\n        paddingBottom: global_spacer_sm.value,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    units: {\n        paddingLeft: global_spacer_xs.value,\n        paddingBottom: global_spacer_sm.value,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n        whiteSpace: 'nowrap',\n    },\n    value: {\n        color: global_Color_100.var,\n        marginRight: global_spacer_sm.value,\n        fontSize: global_FontSize_4xl.value,\n    },\n    valueContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        width: '50%',\n        wordWrap: 'break-word',\n    },\n};\n","import { Tooltip } from '@patternfly/react-core';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey, } from 'utils/formatValue';\nimport { styles } from './reportSummaryDetails.styles';\nconst ReportSummaryDetailsBase = ({ chartType, computedReportItem = 'cost', computedReportItemValue = 'total', costLabel, formatValue, formatOptions, report, requestFormatOptions, requestLabel, showTooltip = false, showUnits = false, showUsageFirst = false, t, units, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let supplementaryCost = React.createElement(EmptyValueState, null);\n    let infrastructureCost = React.createElement(EmptyValueState, null);\n    let request = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    const hasTotal = report && report.meta && report.meta.total;\n    const hasCost = hasTotal && report.meta.total.cost && report.meta.total.cost.total;\n    const hasCount = hasTotal && report.meta.total.count;\n    const hasSupplementaryCost = hasTotal &&\n        report.meta.total.supplementary &&\n        report.meta.total.supplementary.total &&\n        report.meta.total.supplementary.total.value;\n    const hasInfrastructureCost = hasTotal &&\n        report.meta.total.infrastructure &&\n        report.meta.total.infrastructure[computedReportItemValue] &&\n        report.meta.total.infrastructure[computedReportItemValue].value;\n    const hasRequest = hasTotal && report.meta.total.request;\n    const hasUsage = hasTotal && report.meta.total.usage;\n    if (hasTotal) {\n        cost = formatValue(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD', formatOptions);\n        supplementaryCost = formatValue(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost\n            ? report.meta.total.supplementary.total.units\n            : 'USD', formatOptions);\n        infrastructureCost = formatValue(hasInfrastructureCost\n            ? report.meta.total.infrastructure[computedReportItemValue].value\n            : 0, hasInfrastructureCost\n            ? report.meta.total.infrastructure[computedReportItemValue].units\n            : 'USD', formatOptions);\n        request = formatValue(hasRequest ? report.meta.total.request.value : 0, hasRequest ? report.meta.total.request.units : '', requestFormatOptions ? usageFormatOptions : formatOptions);\n        if (hasUsage && report.meta.total.usage.value >= 0) {\n            usage = formatValue(hasUsage ? report.meta.total.usage.value : 0, hasUsage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n        else {\n            // Workaround for https://github.com/project-koku/koku-ui/issues/1058\n            usage = formatValue(hasUsage ? report.meta.total.usage : 0, hasCount ? report.meta.total.count.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n    }\n    const getCostLayout = () => {\n        let value = cost;\n        if (computedReportItem === \"infrastructure\" /* infrastructure */) {\n            value = infrastructureCost;\n        }\n        else if (computedReportItem === \"supplementary\" /* supplementary */) {\n            value = supplementaryCost;\n        }\n        return (React.createElement(\"div\", { style: styles.valueContainer },\n            Boolean(showTooltip) ? (React.createElement(Tooltip, { content: t('dashboard.total_cost_tooltip', {\n                    infrastructureCost,\n                    supplementaryCost,\n                }), enableFlip: true },\n                React.createElement(\"div\", { style: styles.value }, value))) : (React.createElement(\"div\", { style: styles.value }, value)),\n            React.createElement(\"div\", { style: styles.text },\n                React.createElement(\"div\", null, costLabel))));\n    };\n    const getRequestLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasRequest\n            ? report.meta.total.request.units\n            : '';\n        const _units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { style: styles.valueContainer },\n            React.createElement(\"div\", { style: styles.value },\n                request,\n                Boolean(showUnits &&\n                    (units || (hasRequest && report.meta.total.request.value >= 0))) && React.createElement(\"span\", { style: styles.units }, unitsLabel)),\n            React.createElement(\"div\", { style: styles.text },\n                React.createElement(\"div\", null, requestLabel))));\n    };\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasUsage ? report.meta.total.usage.units : '';\n        // added as a work-around for azure #1079\n        const _units = unitLookupKey(units ? units : usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { style: styles.valueContainer },\n            React.createElement(\"div\", { style: styles.value },\n                usage,\n                Boolean(showUnits &&\n                    (units || (hasUsage && report.meta.total.usage.value >= 0))) && React.createElement(\"span\", { style: styles.units }, unitsLabel)),\n            React.createElement(\"div\", { style: styles.text },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (chartType === \"cost\" /* cost */ ||\n        chartType === \"supplementary\" /* supplementary */) {\n        return React.createElement(React.Fragment, null, getCostLayout());\n    }\n    else if (chartType === \"trend\" /* trend */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getCostLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getCostLayout(),\n            getUsageLayout()));\n    }\n    else if (chartType === \"usage\" /* usage */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getRequestLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getRequestLayout(),\n            getUsageLayout()));\n    }\n    else {\n        return null;\n    }\n};\nconst ReportSummaryDetails = translate()(ReportSummaryDetailsBase);\nexport { ReportSummaryDetails };\n","import { global_spacer_md } from '@patternfly/react-tokens';\nimport { css } from 'emotion';\nexport const reportSummaryItem = css `\n  :not(:last-child) {\n    margin-bottom: ${global_spacer_md.value};\n  }\n`;\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { reportSummaryItem } from './reportSummaryItem.styles';\nconst ReportSummaryItemBase = ({ label, formatOptions, formatValue, t, totalValue, units, value, }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: reportSummaryItem },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst ReportSummaryItem = translate()(ReportSummaryItemBase);\nexport { ReportSummaryItem };\n","import { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = {\n    skeleton: {\n        marginTop: global_spacer_md.value,\n    },\n};\n","import { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { getComputedReportItems, } from 'utils/computedReport/getComputedReportItems';\nimport { styles } from './reportSummaryItems.styles';\nclass ReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { computedReportItemValue = 'total', idKey, labelKey, report, } = this.props;\n        const computedItems = getComputedReportItems({\n            report,\n            idKey,\n            labelKey,\n            reportItemValue: computedReportItemValue,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: SkeletonSize.md }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, style: styles.skeleton }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, style: styles.skeleton }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, style: styles.skeleton })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst ReportSummaryItems = translate()(ReportSummaryItemsBase);\nexport { ReportSummaryItems, };\n","import { chart_color_green_100, chart_color_green_200, chart_color_green_300, chart_color_green_400, chart_color_green_500, global_disabled_color_200, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    currentCostData: {\n        fill: 'none',\n    },\n    currentInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    itemsPerRow: 2,\n    previousCostData: {\n        fill: 'none',\n    },\n    previousInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        global_disabled_color_200.value,\n        global_disabled_color_200.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { chartOverride } from 'components/charts/common/chart.styles';\nimport { getCostRangeString, getDateRange, getMaxValue, getTooltipContent, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './costChart.styles';\nclass CostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentInfrastructureCostData, currentCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                // Note: Container order is important\n                CursorVoronoiContainer: createContainer('cursor', 'voronoi'),\n                series: [\n                    {\n                        childName: 'previousCost',\n                        data: previousCostData,\n                        legendItem: {\n                            name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.previousColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.previousCostData), { stroke: chartStyles.previousColorScale[0] }),\n                        },\n                    },\n                    {\n                        childName: 'currentCost',\n                        data: currentCostData,\n                        legendItem: {\n                            name: getCostRangeString(currentCostData, costKey, true, false),\n                            symbol: {\n                                fill: chartStyles.currentColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.currentCostData), { stroke: chartStyles.currentColorScale[0] }),\n                        },\n                    },\n                    {\n                        childName: 'previousInfrastructureCost',\n                        data: previousInfrastructureCostData,\n                        legendItem: {\n                            name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.previousColorScale[1],\n                                type: 'dash',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.previousInfrastructureCostData), { stroke: chartStyles.previousColorScale[1] }),\n                        },\n                    },\n                    {\n                        childName: 'currentInfrastructureCost',\n                        data: currentInfrastructureCostData,\n                        legendItem: {\n                            name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                            symbol: {\n                                fill: chartStyles.currentColorScale[1],\n                                type: 'dash',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.currentInfrastructureCostData), { stroke: chartStyles.currentColorScale[1] }),\n                        },\n                    },\n                ],\n            });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getContainer = () => {\n            const { CursorVoronoiContainer } = this.state;\n            if (!CursorVoronoiContainer) {\n                return undefined;\n            }\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.isDataAvailable() ? this.getTooltipLabel : undefined, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData() }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow\n                ? legendItemsPerRow\n                : width > 400\n                    ? chartStyles.itemsPerRow\n                    : 1;\n            return (React.createElement(ChartLegend, { height: 25, gutter: 10, itemsPerRow: itemsPerRow, name: \"legend\", responsive: false }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            return datum.y !== null\n                ? formatter(datum.y, datum.units, formatDatumOptions)\n                : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map((serie, index) => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign({ childName: s.childName }, s.legendItem), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n            return undefined;\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentInfrastructureCostData !==\n            this.props.currentInfrastructureCostData ||\n            prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.previousInfrastructureCostData !==\n                this.props.previousInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { currentInfrastructureCostData, currentCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentInfrastructure = currentInfrastructureCostData\n            ? getMaxValue(currentInfrastructureCostData)\n            : 0;\n        const maxCurrentUsage = currentCostData ? getMaxValue(currentCostData) : 0;\n        const maxPreviousInfrastructure = previousInfrastructureCostData\n            ? getMaxValue(previousInfrastructureCostData)\n            : 0;\n        const maxPreviousUsage = previousCostData\n            ? getMaxValue(previousCostData)\n            : 0;\n        const maxValue = Math.max(maxCurrentInfrastructure, maxCurrentUsage, maxPreviousInfrastructure, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, currentCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const currentInfrastructureDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const currentUsageDate = currentCostData\n            ? getDate(getDateRange(currentCostData, true, true)[1])\n            : 0;\n        const previousInfrastructureDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousCostData\n            ? getDate(getDateRange(previousCostData, true, true)[1])\n            : 0;\n        return currentInfrastructureDate > 0 ||\n            currentUsageDate > 0 ||\n            previousInfrastructureDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentInfrastructureDate, currentUsageDate, previousInfrastructureDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 75,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 400\n                ? containerHeight\n                : containerHeight + 75\n            : containerHeight;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: chartOverride, ref: this.containerRef, style: { height: adjustedContainerHeight } },\n                React.createElement(Chart, { containerComponent: this.getContainer(), domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                    series &&\n                        series.map((s, index) => {\n                            return this.getChart(s, index);\n                        }),\n                    React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                    React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis })))));\n    }\n}\nexport { CostChart };\n","import { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = {\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n};\n","import { CostChart } from 'components/charts/costChart';\nimport React from 'react';\nimport { styles } from './reportSummaryTrend.styles';\nconst ReportSummaryCost = props => (React.createElement(\"div\", { style: styles.chart },\n    React.createElement(CostChart, Object.assign({}, props))));\nexport { ReportSummaryCost };\n","import { chart_color_green_100, chart_color_green_200, chart_color_green_300, chart_color_green_400, chart_color_green_500, global_disabled_color_200 } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    currentMonthData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        global_disabled_color_200.value,\n        global_disabled_color_200.value,\n    ],\n    previousMonthData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { chartOverride } from 'components/charts/common/chart.styles';\nimport { getCostRangeString, getDateRange, getMaxValue, getTooltipContent, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './trendChart.styles';\nclass TrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, previousData, showSupplementaryLabel = false, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? 'chart.usage_legend_label'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_label'\n                    : 'chart.cost_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                // Note: Container order is important\n                CursorVoronoiContainer: createContainer('cursor', 'voronoi'),\n                series: [\n                    {\n                        childName: 'previousCost',\n                        data: previousData,\n                        legendItem: {\n                            name: getCostRangeString(previousData, key, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.previousColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.previousMonthData), { stroke: chartStyles.previousColorScale[0] }),\n                        },\n                    },\n                    {\n                        childName: 'currentCost',\n                        data: currentData,\n                        legendItem: {\n                            name: getCostRangeString(currentData, key, true, false),\n                            symbol: {\n                                fill: chartStyles.currentColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.currentMonthData), { stroke: chartStyles.currentColorScale[0] }),\n                        },\n                    },\n                ],\n            });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getContainer = () => {\n            const { CursorVoronoiContainer } = this.state;\n            if (!CursorVoronoiContainer) {\n                return undefined;\n            }\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.isDataAvailable() ? this.getTooltipLabel : undefined, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData() }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 50,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            return (React.createElement(ChartLegend, { data: this.getLegendData(), gutter: 10, height: 25, name: \"legend\", orientation: width > 150 ? 'horizontal' : 'vertical' }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions, units } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            return datum.y !== null\n                ? formatter(datum.y, units || datum.units, formatDatumOptions)\n                : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            // Todo: Leave one legend item visible at all times?\n            // const { hiddenSeries, series } = this.state;\n            // const leaveVisible = hiddenSeries.size === series.length - 1;\n            // if (leaveVisible && !this.isSeriesHidden(props.index)) {\n            //   return;\n            // }\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map((serie, index) => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign({ childName: s.childName }, s.legendItem), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { currentData, previousData } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrent = currentData ? getMaxValue(currentData) : 0;\n        const maxPrevious = previousData ? getMaxValue(previousData) : 0;\n        const maxValue = Math.max(maxCurrent, maxPrevious);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentData, previousData } = this.props;\n        const previousDate = previousData\n            ? getDate(getDateRange(previousData, true, true)[1])\n            : 0;\n        const currentDate = currentData\n            ? getDate(getDateRange(currentData, true, true)[1])\n            : 0;\n        return currentDate > 0 || previousDate > 0\n            ? Math.max(currentDate, previousDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 400\n                ? containerHeight\n                : containerHeight + 20\n            : containerHeight;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: chartOverride, ref: this.containerRef, style: { height: adjustedContainerHeight } },\n                React.createElement(Chart, { containerComponent: this.getContainer(), domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                    series &&\n                        series.map((s, index) => {\n                            return this.getChart(s, index);\n                        }),\n                    React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                    React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis })))));\n    }\n}\nexport { TrendChart };\n","import { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nimport { styles } from './reportSummaryTrend.styles';\nconst ReportSummaryTrend = props => (React.createElement(\"div\", { style: styles.chart },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { ReportSummaryTrend };\n","import { chart_color_green_100, chart_color_green_200, chart_color_green_300, chart_color_green_400, chart_color_green_500, global_disabled_color_200, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    chartContainer: {\n        marginTop: global_spacer_lg.value,\n    },\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: '#88D080',\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    itemsPerRow: 2,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        global_disabled_color_200.value,\n        chart_color_green_100.value,\n        global_disabled_color_200.value,\n        chart_color_green_200.value,\n    ],\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    // TBD: No grey scale, yet\n    previousColorScale: [\n        global_disabled_color_200.value,\n        global_disabled_color_200.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { chartOverride } from 'components/charts/common/chart.styles';\nimport { getDateRange, getMaxValue, getTooltipContent, getUsageRangeString, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './usageChart.styles';\nclass UsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n            const usageKey = 'chart.usage_legend_label';\n            const requestKey = 'chart.requests_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                // Note: Container order is important\n                CursorVoronoiContainer: createContainer('cursor', 'voronoi'),\n                series: [\n                    {\n                        childName: 'previousUsage',\n                        data: previousUsageData,\n                        legendItem: {\n                            name: getUsageRangeString(previousUsageData, usageKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.legendColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.previousUsageData,\n                    },\n                    {\n                        childName: 'currentUsage',\n                        data: currentUsageData,\n                        legendItem: {\n                            name: getUsageRangeString(currentUsageData, usageKey, true, false),\n                            symbol: {\n                                fill: chartStyles.legendColorScale[1],\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.currentUsageData,\n                    },\n                    {\n                        childName: 'previousRequest',\n                        data: previousRequestData,\n                        legendItem: {\n                            name: getUsageRangeString(previousRequestData, requestKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.legendColorScale[2],\n                                type: 'dash',\n                            },\n                        },\n                        style: chartStyles.previousRequestData,\n                    },\n                    {\n                        childName: 'currentRequest',\n                        data: currentRequestData,\n                        legendItem: {\n                            name: getUsageRangeString(currentRequestData, requestKey, true, false),\n                            symbol: {\n                                fill: chartStyles.legendColorScale[3],\n                                type: 'dash',\n                            },\n                        },\n                        style: chartStyles.currentRequestData,\n                    },\n                ],\n            });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getContainer = () => {\n            const { CursorVoronoiContainer } = this.state;\n            if (!CursorVoronoiContainer) {\n                return undefined;\n            }\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.isDataAvailable() ? this.getTooltipLabel : undefined, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData() }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow\n                ? legendItemsPerRow\n                : width > 300\n                    ? chartStyles.itemsPerRow\n                    : 1;\n            return (React.createElement(ChartLegend, { data: this.getLegendData(), height: 25, gutter: 10, itemsPerRow: itemsPerRow, name: \"legend\" }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            return datum.y !== null\n                ? formatter(datum.y, datum.units, formatDatumOptions)\n                : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map((serie, index) => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign({ childName: s.childName }, s.legendItem), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentRequest = currentRequestData\n            ? getMaxValue(currentRequestData)\n            : 0;\n        const maxCurrentUsage = currentUsageData\n            ? getMaxValue(currentUsageData)\n            : 0;\n        const maxPreviousRequest = previousRequestData\n            ? getMaxValue(previousRequestData)\n            : 0;\n        const maxPreviousUsage = previousUsageData\n            ? getMaxValue(previousUsageData)\n            : 0;\n        const maxValue = Math.max(maxCurrentRequest, maxCurrentUsage, maxPreviousRequest, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const currentRequestDate = currentRequestData\n            ? getDate(getDateRange(currentRequestData, true, true)[1])\n            : 0;\n        const currentUsageDate = currentUsageData\n            ? getDate(getDateRange(currentUsageData, true, true)[1])\n            : 0;\n        const previousRequestDate = previousRequestData\n            ? getDate(getDateRange(previousRequestData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousUsageData\n            ? getDate(getDateRange(previousUsageData, true, true)[1])\n            : 0;\n        return currentRequestDate > 0 ||\n            currentUsageDate > 0 ||\n            previousRequestDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 75,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 480\n                ? containerHeight\n                : containerHeight + 20\n            : containerHeight;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: chartOverride, ref: this.containerRef, style: { height: adjustedContainerHeight } },\n                React.createElement(Chart, { containerComponent: this.getContainer(), domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                    series &&\n                        series.map((s, index) => {\n                            return this.getChart(s, index);\n                        }),\n                    React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                    React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis })))));\n    }\n}\nexport { UsageChart };\n","import { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nimport { styles } from './reportSummaryTrend.styles';\nconst ReportSummaryUsage = props => (React.createElement(\"div\", { style: styles.chart },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { ReportSummaryUsage };\n","export function isEqual(obj1, obj2) {\n    let a = JSON.stringify(obj1);\n    let b = JSON.stringify(obj2);\n    if (!a) {\n        a = '';\n    }\n    if (!b) {\n        b = '';\n    }\n    return (a\n        .split('')\n        .sort()\n        .join('') ===\n        b\n            .split('')\n            .sort()\n            .join(''));\n}\n","import { global_spacer_sm, global_spacer_xl, global_spacer_xs, } from '@patternfly/react-tokens';\nexport const styles = {\n    form: {\n        marginLeft: global_spacer_sm.var,\n    },\n    modal: {\n        h2: {\n            marginBottom: global_spacer_xl.value,\n        },\n        input: {\n            marginRight: global_spacer_xs.var,\n        },\n        ul: {\n            marginLeft: global_spacer_sm.var,\n        },\n    },\n    title: {\n        paddingBottom: global_spacer_xl.var,\n    },\n};\n","import { Button, ButtonVariant } from '@patternfly/react-core';\nimport { getQuery } from 'api/queries/query';\nimport formatDate from 'date-fns/format';\nimport fileDownload from 'js-file-download';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { exportActions, exportSelectors } from 'store/exports';\nimport { getTestProps, testIds } from 'testIds';\nconst reportType = \"cost\" /* cost */;\nexport class ExportSubmitBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            fetchReportClicked: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExport = () => {\n            const { report, reportFetchStatus } = this.props;\n            if (report && reportFetchStatus === 2 /* complete */) {\n                fileDownload(report.data, this.getFileName(), 'text/csv');\n                this.handleClose();\n            }\n        };\n        this.getFileName = () => {\n            const { groupBy, reportPathsType, t } = this.props;\n            const fileName = t('export.file_name', {\n                provider: reportPathsType,\n                groupBy,\n                date: formatDate(new Date(), 'YYYY-MM-DD'),\n            });\n            return `${fileName}.csv`;\n        };\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleFetchReport = () => {\n            const { exportReport, queryString, reportPathsType } = this.props;\n            exportReport(reportPathsType, reportType, queryString);\n            this.setState({\n                fetchReportClicked: true,\n            }, () => {\n                this.getExport();\n            });\n        };\n        this.handleResolutionChange = (_, event) => {\n            this.setState({ resolution: event.currentTarget.value });\n        };\n        this.handleResolutionChange = this.handleResolutionChange.bind(this);\n    }\n    componentDidUpdate(prevProps) {\n        const { report } = this.props;\n        const { fetchReportClicked } = this.state;\n        if (prevProps.report !== report && fetchReportClicked) {\n            this.getExport();\n        }\n    }\n    render() {\n        const { reportFetchStatus, t } = this.props;\n        return (React.createElement(Button, Object.assign({}, getTestProps(testIds.export.submit_btn), { isDisabled: reportFetchStatus === 1 /* inProgress */, key: \"confirm\", onClick: this.handleFetchReport, variant: ButtonVariant.primary }), t('export.confirm')));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const { groupBy, isAllItems, items, query, reportPathsType, resolution, } = props;\n    const getQueryString = () => {\n        const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { group_by: undefined, order_by: undefined });\n        newQuery.filter.resolution = resolution;\n        let newQueryString = getQuery(newQuery);\n        if (isAllItems) {\n            newQueryString += `&group_by[${groupBy}]=*`;\n        }\n        else {\n            for (const item of items) {\n                newQueryString += `&group_by[${groupBy}]=` + item.label;\n            }\n        }\n        return newQueryString;\n    };\n    const queryString = getQueryString();\n    const report = exportSelectors.selectExport(state, reportPathsType, reportType, queryString);\n    const reportError = exportSelectors.selectExportError(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = exportSelectors.selectExportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportError,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    exportReport: exportActions.exportReport,\n};\nconst ExportSubmit = translate()(connect(mapStateToProps, mapDispatchToProps)(ExportSubmitBase));\nexport { ExportSubmit };\n","import { Button, ButtonVariant, Form, FormGroup, Modal, Radio, Title, } from '@patternfly/react-core';\nimport { tagPrefix } from 'api/queries/query';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { exportActions } from 'store/exports';\nimport { getTestProps, testIds } from 'testIds';\nimport { sort } from 'utils/sort';\nimport { styles } from './exportModal.styles';\nimport { ExportSubmit } from './exportSubmit';\nconst resolutionOptions = [\n    { label: 'Daily', value: 'daily' },\n    { label: 'Monthly', value: 'monthly' },\n];\nexport class ExportModalBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            resolution: 'daily',\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleResolutionChange = (_, event) => {\n            this.setState({ resolution: event.currentTarget.value });\n        };\n        this.handleResolutionChange = this.handleResolutionChange.bind(this);\n    }\n    componentDidUpdate(prevProps) {\n        const { isOpen } = this.props;\n        if (isOpen && !prevProps.isOpen) {\n            this.setState(Object.assign({}, this.defaultState));\n        }\n    }\n    render() {\n        const { groupBy, isAllItems, items, query, reportPathsType, t, } = this.props;\n        const { resolution } = this.state;\n        const sortedItems = [...items];\n        if (this.props.isOpen) {\n            sort(sortedItems, {\n                key: 'id',\n                direction: 0 /* asc */,\n            });\n        }\n        let selectedLabel = t('export.selected', { groupBy });\n        if (groupBy.indexOf(tagPrefix) !== -1) {\n            selectedLabel = t('export.selected_tags');\n        }\n        return (React.createElement(Modal, { style: styles.modal, isOpen: this.props.isOpen, onClose: this.handleClose, title: t('export.title'), variant: \"small\", actions: [\n                React.createElement(ExportSubmit, { groupBy: groupBy, isAllItems: isAllItems, items: items, key: \"confirm\", onClose: this.handleClose, query: query, reportPathsType: reportPathsType, resolution: resolution }),\n                React.createElement(Button, Object.assign({}, getTestProps(testIds.export.cancel_btn), { key: \"cancel\", onClick: this.handleClose, variant: ButtonVariant.link }), t('export.cancel'))\n            ] },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" }, t('export.heading', { groupBy })),\n            React.createElement(Form, { style: styles.form },\n                React.createElement(FormGroup, { label: t('export.aggregate_type'), fieldId: \"aggregate-type\" },\n                    React.createElement(React.Fragment, null, resolutionOptions.map((option, index) => (React.createElement(Radio, { key: index, id: `resolution-${index}`, isValid: option.value !== undefined, label: t(option.label), value: option.value, checked: resolution === option.value, name: \"resolution\", onChange: this.handleResolutionChange, \"aria-label\": t(option.label) }))))),\n                React.createElement(FormGroup, { label: selectedLabel, fieldId: \"selected-labels\" },\n                    React.createElement(\"ul\", null, sortedItems.map((groupItem, index) => {\n                        return React.createElement(\"li\", { key: index }, groupItem.label);\n                    }))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    exportReport: exportActions.exportReport,\n};\nconst ExportModal = translate()(connect(mapStateToProps, mapDispatchToProps)(ExportModalBase));\nexport { ExportModal };\n","import { global_spacer_lg } from '@patternfly/react-tokens';\nexport const styles = {\n    viewSources: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title, } from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons/dist/js/icons/dollar-sign-icon';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { getTestProps, testIds } from 'testIds';\nimport { getReleasePath } from 'utils/pathname';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getViewSources = () => {\n            const { t } = this.props;\n            const release = getReleasePath();\n            return (React.createElement(\"a\", Object.assign({ href: `${release}/settings/sources` }, getTestProps(testIds.providers.view_all_link)), t('providers.view_sources')));\n        };\n    }\n    render() {\n        const { t } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: DollarSignIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, t('providers.empty_state_title')),\n            React.createElement(EmptyStateBody, null, t('providers.empty_state_desc')),\n            React.createElement(\"div\", { style: styles.viewSources }, this.getViewSources())));\n    }\n}\nconst NoProvidersState = translate()(NoProvidersStateBase);\nexport { NoProvidersState };\n","export const getReleasePath = () => {\n    const pathName = window.location.pathname.split('/');\n    pathName.shift();\n    let release = '';\n    if (pathName[0] === 'beta') {\n        release = `/beta`;\n    }\n    return release;\n};\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { NoProvidersState } from './noProvidersState';\nconst NoProviders = () => {\n    return (React.createElement(Main, null,\n        React.createElement(NoProvidersState, null)));\n};\nexport default withRouter(NoProviders);\n","import NoProviders from './notProviders';\nexport default NoProviders;\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nconst NoProviders = () => {\n    return (React.createElement(Main, null,\n        React.createElement(LoadingState, null)));\n};\nexport default withRouter(NoProviders);\n","import Loading from './loading';\nexport default Loading;\n","import { orgUnitIdKey } from 'api/queries/query';\nexport const getGroupById = (query) => {\n    const groupBys = query && query.group_by ? Object.keys(query.group_by) : [];\n    return groupBys.find(key => key !== orgUnitIdKey);\n};\nexport const getGroupByValue = (query) => {\n    const groupById = getGroupById(query);\n    return groupById ? query.group_by[groupById] : undefined;\n};\n","import NotAvailable from './notAvailable';\nexport default NotAvailable;\n","import { global_spacer_3xl, global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = {\n    clustersContainer: {\n        marginRight: global_spacer_3xl.value,\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import { global_spacer_2xl, global_spacer_lg } from '@patternfly/react-tokens';\nimport { css } from 'emotion';\nexport const styles = {\n    modal: {\n        // Workaround for isLarge not working properly\n        height: '700px',\n        width: '600px',\n    },\n    subTitle: {\n        marginTop: global_spacer_2xl.value,\n        textAlign: 'right',\n    },\n};\nexport const modalOverride = css `\n  & .pf-c-modal-box__body {\n    margin-top: ${global_spacer_lg.value};\n  }\n  & .pf-c-modal-box__footer {\n    display: none;\n  }\n`;\n","import React from 'react';\nimport { translate } from 'react-i18next';\nclass ClusterViewBase extends React.Component {\n    render() {\n        const { item } = this.props;\n        if (!item.clusters) {\n            return null;\n        }\n        return item.clusters.map((cluster, index) => (React.createElement(\"div\", { key: `cluster-${index}` }, cluster)));\n    }\n}\nconst ClusterView = translate()(ClusterViewBase);\nexport { ClusterView, ClusterViewBase };\n","import { Modal } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { modalOverride, styles } from './clusterModal.styles';\nimport { ClusterView } from './clusterView';\nclass ClusterModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    shouldComponentUpdate(nextProps) {\n        const { isOpen, item } = this.props;\n        return nextProps.item !== item || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { groupBy, isOpen, item, t } = this.props;\n        return (React.createElement(Modal, { className: modalOverride, style: styles.modal, isOpen: isOpen, onClose: this.handleClose, title: t('details.clusters_modal_title', {\n                groupBy,\n                name: item.label,\n            }), width: '50%' },\n            React.createElement(ClusterView, { item: item })));\n    }\n}\nconst ClusterModal = translate()(ClusterModalBase);\nexport { ClusterModal };\n","import React from 'react';\nimport { translate } from 'react-i18next';\nimport { getTestProps, testIds } from 'testIds';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { styles } from './cluster.styles';\nimport { ClusterModal } from './clusterModal';\nclass ClusterBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isOpen: false,\n            showAll: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleClose = (isOpen) => {\n            this.setState({ isOpen });\n        };\n        this.handleOpen = event => {\n            this.setState({ isOpen: true });\n            event.preventDefault();\n            return false;\n        };\n        this.handleClose = this.handleClose.bind(this);\n        this.handleOpen = this.handleOpen.bind(this);\n    }\n    render() {\n        const { groupBy, report, t } = this.props;\n        const { isOpen, showAll } = this.state;\n        let charCount = 0;\n        const maxChars = 50;\n        const someClusters = [];\n        const allClusters = [];\n        const computedItems = getComputedReportItems({\n            report,\n            idKey: groupBy,\n        });\n        const item = computedItems && computedItems.length ? computedItems[0] : undefined;\n        if (!item) {\n            return null;\n        }\n        for (const cluster of item.clusters) {\n            const prefix = someClusters.length > 0 ? ', ' : '';\n            const clusterString = `${prefix}${cluster}`;\n            if (showAll) {\n                someClusters.push(clusterString);\n            }\n            else if (charCount <= maxChars) {\n                if (charCount + clusterString.length > maxChars) {\n                    someClusters.push(clusterString\n                        .slice(0, maxChars - charCount)\n                        .trim()\n                        .concat('...'));\n                }\n                else {\n                    someClusters.push(clusterString);\n                }\n            }\n            charCount += clusterString.length;\n            allClusters.push(cluster);\n        }\n        return (React.createElement(\"div\", { style: styles.clustersContainer },\n            Boolean(someClusters) &&\n                someClusters.map((cluster, index) => (React.createElement(\"span\", { key: index }, cluster))),\n            Boolean(someClusters.length < allClusters.length) && (React.createElement(\"a\", Object.assign({}, getTestProps(testIds.details.cluster_lnk), { href: \"#/\", onClick: this.handleOpen }), t('details.more_clusters', {\n                value: allClusters.length - someClusters.length,\n            }))),\n            React.createElement(ClusterModal, { groupBy: groupBy, isOpen: isOpen, item: item, onClose: this.handleClose })));\n    }\n}\nconst Cluster = translate()(ClusterBase);\nexport { Cluster };\n","import { global_FontWeight_bold, global_spacer_3xl, global_spacer_md, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    chartHeight: 150,\n    subTitle: {\n        fontWeight: global_FontWeight_bold.value,\n    },\n};\nexport const styles = {\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { ChartLabel, ChartLegend, ChartPie, ChartThemeColor, } from '@patternfly/react-charts';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { formatValue } from 'utils/formatValue';\nimport { chartStyles, styles } from './costChart.styles';\nclass CostChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            width: 0,\n        };\n        // Override legend layout\n        this.getLegendLabel = () => {\n            return (_a) => {\n                var { values } = _a, props = __rest(_a, [\"values\"]);\n                return (React.createElement(ChartLabel, Object.assign({}, props, { style: [{ fontWeight: chartStyles.subTitle.fontWeight }, {}], text: [values[props.index], props.text] })));\n            };\n        };\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, size: SkeletonSize.md })));\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    render() {\n        const { report, reportFetchStatus, t } = this.props;\n        const { width } = this.state;\n        const hasCost = report && report.meta && report.meta.total && report.meta.total.cost;\n        const hasMarkup = hasCost && report.meta.total.cost.markup;\n        const hasRaw = hasCost && report.meta.total.cost.raw;\n        const hasUsage = hasCost && report.meta.total.cost.usage;\n        const markupUnits = hasMarkup ? report.meta.total.cost.markup.units : 'USD';\n        const rawUnits = hasRaw ? report.meta.total.cost.raw.units : 'USD';\n        const usageUnits = hasUsage ? report.meta.total.cost.usage.units : 'USD';\n        const markupValue = hasMarkup ? report.meta.total.cost.markup.value : 0;\n        const rawValue = hasRaw ? report.meta.total.cost.raw.value : 0;\n        const usageValue = hasUsage ? report.meta.total.cost.usage.value : 0;\n        const markup = formatValue(hasMarkup ? report.meta.total.cost.markup.value : 0, markupUnits);\n        const raw = formatValue(hasRaw ? report.meta.total.cost.raw.value : 0, rawUnits);\n        const usage = formatValue(hasUsage ? report.meta.total.cost.usage.value : 0, usageUnits);\n        const markupLabel = t('breakdown.cost_chart.markup_label');\n        const rawLabel = t('breakdown.cost_chart.raw_label');\n        const usageLabel = t('breakdown.cost_chart.usage_label');\n        // Override legend label layout\n        const LegendLabel = this.getLegendLabel();\n        const Legend = (React.createElement(ChartLegend, { gutter: 25, itemsPerRow: 2, labelComponent: React.createElement(LegendLabel, { dy: 10, lineHeight: 1.5, values: [markup, raw, usage] }), rowGutter: 20 }));\n        return (React.createElement(\"div\", { ref: this.containerRef, style: { height: chartStyles.chartHeight } }, reportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(ChartPie, { ariaDesc: t('breakdown.cost_chart.aria_desc'), ariaTitle: t('breakdown.cost_chart.aria_title'), constrainToVisibleArea: true, data: [\n                { x: markupLabel, y: markupValue, units: markupUnits },\n                { x: rawLabel, y: rawValue, units: rawUnits },\n                { x: usageLabel, y: usageValue, units: usageUnits },\n            ], height: chartStyles.chartHeight, labels: ({ datum }) => t('breakdown.cost_chart.tooltip', {\n                name: datum.x,\n                value: formatValue(datum.y, datum.units),\n            }), legendComponent: Legend, legendData: [\n                {\n                    name: markupLabel,\n                },\n                {\n                    name: rawLabel,\n                },\n                {\n                    name: usageLabel,\n                },\n            ], legendOrientation: \"vertical\", legendPosition: \"right\", padding: {\n                bottom: 20,\n                left: 0,\n                right: width - chartStyles.chartHeight,\n                top: 20,\n            }, themeColor: ChartThemeColor.green, width: width }))));\n    }\n}\nconst CostChart = translate()(CostChartBase);\nexport { CostChart };\n","import { global_spacer_lg, global_spacer_xl } from '@patternfly/react-tokens';\nimport { css } from 'emotion';\nexport const styles = {\n    mainContent: {\n        marginTop: global_spacer_xl.value,\n    },\n    subTitle: {\n        textAlign: 'right',\n    },\n};\nexport const modalOverride = css `\n  /* Workaround for isLarge not working properly */\n  &.pf-c-modal-box {\n    height: 700px;\n    width: 600px;\n  }\n  & .pf-c-modal-box__body {\n    margin-top: ${global_spacer_lg.value};\n  }\n  & .pf-c-modal-box__footer {\n    display: none;\n  }\n`;\n","import { Title } from '@patternfly/react-core';\nimport { getQuery, orgUnitIdKey } from 'api/queries/query';\nimport { ReportSummaryItem, ReportSummaryItems, } from 'components/reports/reportSummary';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue } from 'utils/formatValue';\nimport { formatCurrency } from 'utils/formatValue';\nimport { styles } from './summaryModal.styles';\nconst reportType = \"cost\" /* cost */;\nclass SummaryModalViewBase extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    render() {\n        const { groupBy, report, reportFetchStatus, t } = this.props;\n        const cost = formatCurrency(report && report.meta && report.meta.total\n            ? report.meta.total.cost.total.value\n            : 0);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { style: styles.subTitle },\n                React.createElement(Title, { headingLevel: \"h2\", size: \"xl\" }, t('details.cost_value', { value: cost }))),\n            React.createElement(\"div\", { style: styles.mainContent },\n                React.createElement(ReportSummaryItems, { idKey: groupBy, report: report, status: reportFetchStatus }, ({ items }) => items.map(_item => (React.createElement(ReportSummaryItem, { key: _item.id, formatOptions: {}, formatValue: formatValue, label: _item.label ? _item.label.toString() : '', totalValue: report.meta.total.cost.total.value, units: report.meta.total.cost.total.units, value: _item.cost })))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, parentGroupBy, query, reportPathsType }) => {\n    const groupByOrg = query && query.group_by[orgUnitIdKey]\n        ? query.group_by[orgUnitIdKey]\n        : undefined;\n    const newQuery = {\n        filter: Object.assign({ time_scope_units: 'month', time_scope_value: -1, resolution: 'monthly', [parentGroupBy]: filterBy }, (query && query.filter && query.filter.account && { account: query.filter.account })),\n        filter_by: query ? query.filter_by : undefined,\n        group_by: Object.assign(Object.assign({}, (groupByOrg && { [orgUnitIdKey]: groupByOrg })), (groupBy && { [groupBy]: '*' })),\n    };\n    const queryString = getQuery(newQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst SummaryModalView = translate()(connect(mapStateToProps, mapDispatchToProps)(SummaryModalViewBase));\nexport { SummaryModalView };\n","import { Modal } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { modalOverride } from './summaryModal.styles';\nimport { SummaryModalView } from './summaryModalView';\nclass SummaryModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    shouldComponentUpdate(nextProps) {\n        const { filterBy, isOpen } = this.props;\n        return nextProps.filterBy !== filterBy || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { filterBy, groupBy, isOpen, parentGroupBy, query, reportPathsType, t, } = this.props;\n        return (React.createElement(Modal, { className: modalOverride, isOpen: isOpen, onClose: this.handleClose, title: t('details.summary_modal_title', {\n                groupBy,\n                name: filterBy,\n            }), variant: \"large\" },\n            React.createElement(SummaryModalView, { filterBy: filterBy, groupBy: groupBy, parentGroupBy: parentGroupBy, query: query, reportPathsType: reportPathsType })));\n    }\n}\nconst SummaryModal = translate()(SummaryModalBase);\nexport { SummaryModal };\n","import { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = {\n    card: {},\n    skeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    viewAllContainer: {\n        marginLeft: '-15px',\n    },\n};\n","import { Button, ButtonType, ButtonVariant, Card, CardBody, CardFooter, CardTitle, Title, } from '@patternfly/react-core';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport { getQuery, orgUnitIdKey } from 'api/queries/query';\nimport { ReportSummaryItem, ReportSummaryItems, } from 'components/reports/reportSummary';\nimport { SummaryModal } from 'pages/details/components/summary/summaryModal';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getTestProps, testIds } from 'testIds';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { formatValue } from 'utils/formatValue';\nimport { styles } from './summaryCard.styles';\nclass SummaryBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            isBulletChartModalOpen: false,\n        };\n        this.getItems = () => {\n            const { groupBy, report } = this.props;\n            const computedItems = getComputedReportItems({\n                report,\n                idKey: groupBy,\n            });\n            return computedItems;\n        };\n        this.getSummary = () => {\n            const { groupBy, report, reportFetchStatus } = this.props;\n            return (React.createElement(ReportSummaryItems, { idKey: groupBy, report: report, status: reportFetchStatus }, ({ items }) => items.map(reportItem => (React.createElement(ReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: {}, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : undefined, totalValue: report.meta.total.cost.total.value, units: report.meta.total.cost.total.units, value: reportItem.cost })))));\n        };\n        this.getViewAll = () => {\n            const { filterBy, groupBy, parentGroupBy, query, reportPathsType, t, } = this.props;\n            const { isBulletChartModalOpen } = this.state;\n            const computedItems = this.getItems();\n            const otherIndex = computedItems.findIndex(i => {\n                const id = i.id;\n                if (id && id !== null) {\n                    return id.toString().includes('Other');\n                }\n            });\n            if (otherIndex !== -1) {\n                return (React.createElement(\"div\", { style: styles.viewAllContainer },\n                    React.createElement(Button, Object.assign({}, getTestProps(testIds.details.view_all_btn), { onClick: this.handleBulletChartModalOpen, type: ButtonType.button, variant: ButtonVariant.link }), t('details.view_all', { groupBy })),\n                    React.createElement(SummaryModal, { filterBy: filterBy, groupBy: groupBy, isOpen: isBulletChartModalOpen, onClose: this.handleBulletChartModalClose, parentGroupBy: parentGroupBy, query: query, reportPathsType: reportPathsType })));\n            }\n            else {\n                return null;\n            }\n        };\n        this.handleBulletChartModalClose = (isOpen) => {\n            this.setState({ isBulletChartModalOpen: isOpen });\n        };\n        this.handleBulletChartModalOpen = event => {\n            this.setState({ isBulletChartModalOpen: true });\n            event.preventDefault();\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType, reportType, } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType, reportType, } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    render() {\n        const { groupBy, reportFetchStatus, t } = this.props;\n        return (React.createElement(Card, { style: styles.card },\n            React.createElement(CardTitle, null,\n                React.createElement(Title, { headingLevel: \"h2\", size: \"md\" }, t('breakdown.summary_title', { groupBy }))),\n            React.createElement(CardBody, null, Boolean(reportFetchStatus === 1 /* inProgress */) ? (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: SkeletonSize.md }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, style: styles.skeleton }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, style: styles.skeleton }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, style: styles.skeleton }))) : (this.getSummary())),\n            React.createElement(CardFooter, null, this.getViewAll())));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, parentGroupBy, query, reportPathsType, reportType }) => {\n    const groupByOrg = query && query.group_by[orgUnitIdKey]\n        ? query.group_by[orgUnitIdKey]\n        : undefined;\n    const newQuery = {\n        filter: Object.assign({ limit: 3, time_scope_units: 'month', time_scope_value: -1, resolution: 'monthly', [parentGroupBy]: filterBy }, (query && query.filter && query.filter.account && { account: query.filter.account })),\n        filter_by: query ? query.filter_by : undefined,\n        group_by: Object.assign(Object.assign({}, (groupByOrg && { [orgUnitIdKey]: groupByOrg })), (groupBy && { [groupBy]: '*' })),\n    };\n    const queryString = getQuery(newQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportFetchStatus,\n        reportPathsType,\n        reportType,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst SummaryCard = translate()(connect(mapStateToProps, mapDispatchToProps)(SummaryBase));\nexport { SummaryCard };\n","import { global_FontWeight_bold, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = {\n    chartSkeleton: {\n        marginBottom: global_spacer_md.value,\n    },\n    capacity: {\n        fontWeight: global_FontWeight_bold.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n};\n","import { ChartBullet } from '@patternfly/react-charts';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport { getQuery } from 'api/queries/query';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { styles } from './usageChart.styles';\nclass UsageChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            width: 0,\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current && this.containerRef.current.clientWidth) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getCpuChart = () => {\n            const { parentGroupBy, reportFetchStatus, report } = this.props;\n            const { width } = this.state;\n            const chartDatum = parentGroupBy === 'cluster'\n                ? this.getChartDatumWithCapacity()\n                : this.getChartDatum();\n            if (!report || chartDatum.usage.length === 0) {\n                return null;\n            }\n            return (React.createElement(\"div\", null, reportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(React.Fragment, null,\n                Boolean(parentGroupBy === 'cluster') && this.getFreeSpace(),\n                React.createElement(ChartBullet, { comparativeErrorMeasureData: chartDatum.limit.value\n                        ? [\n                            {\n                                tooltip: chartDatum.limit.tooltip,\n                                y: chartDatum.limit.value,\n                            },\n                        ]\n                        : [], comparativeErrorMeasureLegendData: chartDatum.limit.value\n                        ? [{ name: chartDatum.limit.legend }]\n                        : [], height: this.getChartHeight(), labels: ({ datum }) => `${datum.tooltip}`, legendPosition: \"bottom-left\", legendItemsPerRow: this.getItemsPerRow(), maxDomain: this.isDatumEmpty(chartDatum) ? 100 : undefined, minDomain: 0, padding: {\n                        bottom: 75,\n                        left: 10,\n                        right: 50,\n                        top: 0,\n                    }, primarySegmentedMeasureData: chartDatum.usage.length\n                        ? chartDatum.usage.map(datum => {\n                            return {\n                                tooltip: datum.tooltip,\n                                y: datum.value,\n                            };\n                        })\n                        : [], primarySegmentedMeasureLegendData: chartDatum.usage.length\n                        ? chartDatum.usage.map(datum => {\n                            return {\n                                name: datum.legend,\n                            };\n                        })\n                        : [], qualitativeRangeData: chartDatum.ranges.length\n                        ? [\n                            {\n                                tooltip: chartDatum.ranges[0].tooltip,\n                                y: chartDatum.ranges[0].value,\n                            },\n                        ]\n                        : [], qualitativeRangeLegendData: chartDatum.ranges.length\n                        ? [{ name: chartDatum.ranges[0].legend }]\n                        : [], width: width })))));\n        };\n        this.getChartHeight = () => {\n            const { parentGroupBy } = this.props;\n            const { width } = this.state;\n            if (parentGroupBy === 'cluster') {\n                return width > 950 ? 115 : width > 450 ? 150 : 210;\n            }\n            else {\n                return width > 700 ? 115 : width > 450 ? 150 : 180;\n            }\n        };\n        this.getItemsPerRow = () => {\n            const { width } = this.state;\n            return width > 950 ? 4 : width > 700 ? 3 : width > 450 ? 2 : 1;\n        };\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, size: SkeletonSize.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, size: SkeletonSize.xs })));\n        };\n        this.isDatumEmpty = (datum) => {\n            let hasRange = false;\n            for (const range of datum.ranges) {\n                if (range.value) {\n                    hasRange = true;\n                    break;\n                }\n            }\n            let hasUsage = false;\n            for (const usage of datum.usage) {\n                if (usage.value) {\n                    hasUsage = true;\n                    break;\n                }\n            }\n            return !(datum.limit.value || hasRange || hasUsage);\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType, reportType, } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n        window.addEventListener('resize', this.handleResize);\n        this.handleResize();\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType, reportType, } = this.props;\n        if (prevProps.queryString !== this.props.queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getChartDatum() {\n        const { report, reportType, t } = this.props;\n        const datum = {\n            limit: {},\n            ranges: [],\n            usage: [],\n        };\n        // Always show bullet chart legends https://github.com/project-koku/koku-ui/issues/963\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasLimit = hasTotal && report.meta.total.limit && report.meta.total.limit !== null;\n        const limit = Math.trunc(hasLimit ? report.meta.total.limit.value : 0);\n        const limitUnits = t(`units.${unitLookupKey(hasLimit ? report.meta.total.limit.units : '')}`);\n        datum.limit = {\n            legend: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            tooltip: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            value: Math.trunc(limit),\n        };\n        const hasRequest = hasTotal &&\n            report.meta.total.request &&\n            report.meta.total.request !== null;\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = t(`units.${unitLookupKey(hasRequest ? report.meta.total.request.units : '')}`);\n        datum.ranges = [\n            {\n                legend: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                value: Math.trunc(request),\n            },\n        ];\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = t(`units.${unitLookupKey(hasUsage ? report.meta.total.usage.units : '')}`);\n        datum.usage = [\n            {\n                legend: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                value: Math.trunc(usage),\n            },\n        ];\n        return datum;\n    }\n    getChartDatumWithCapacity() {\n        const { report, reportType, t } = this.props;\n        const datum = {\n            limit: {},\n            ranges: [],\n            usage: [],\n        };\n        // Always show bullet chart legends https://github.com/project-koku/koku-ui/issues/963\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasLimit = hasTotal && report.meta.total.limit && report.meta.total.limit !== null;\n        const limit = Math.trunc(hasLimit ? report.meta.total.limit.value : 0);\n        const limitUnits = t(`units.${unitLookupKey(hasLimit ? report.meta.total.limit.units : '')}`);\n        datum.limit = {\n            legend: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            tooltip: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            value: Math.trunc(limit),\n        };\n        const hasCapacity = hasTotal &&\n            report.meta.total.request &&\n            report.meta.total.request !== null;\n        const capacity = Math.trunc(hasCapacity ? report.meta.total.capacity.value : 0);\n        const capacityUnits = t(`units.${unitLookupKey(hasCapacity ? report.meta.total.capacity.units : '')}`);\n        datum.ranges = [\n            {\n                legend: t(`details.usage.${reportType}_capacity`, {\n                    value: capacity,\n                    units: capacityUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_capacity`, {\n                    value: capacity,\n                    units: capacityUnits,\n                }),\n                value: Math.trunc(capacity),\n            },\n        ];\n        const hasRequest = hasTotal &&\n            report.meta.total.request &&\n            report.meta.total.request !== null;\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = t(`units.${unitLookupKey(hasRequest ? report.meta.total.request.units : '')}`);\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = t(`units.${unitLookupKey(hasUsage ? report.meta.total.usage.units : '')}`);\n        datum.usage = [\n            {\n                legend: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                value: Math.trunc(usage),\n            },\n            {\n                legend: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                value: Math.trunc(request),\n            },\n        ];\n        return datum;\n    }\n    getFreeSpace() {\n        const { report, reportType, t } = this.props;\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasCapacity = hasTotal &&\n            report.meta.total.request &&\n            report.meta.total.request !== null;\n        const hasRequest = hasTotal &&\n            report.meta.total.request &&\n            report.meta.total.request !== null;\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const capacity = Math.trunc(hasCapacity ? report.meta.total.capacity.value : 0);\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = t(`units.${unitLookupKey(hasRequest ? report.meta.total.request.units : '')}`);\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = t(`units.${unitLookupKey(hasUsage ? report.meta.total.usage.units : '')}`);\n        // Show negative values https://github.com/project-koku/koku-ui/issues/1214\n        const unusedRequestCapacity = capacity - request;\n        const unusedUsageCapacity = capacity - usage;\n        let unusedRequestCapacityPercentage = request > 0 ? (request / capacity) * 100 : 0;\n        if (unusedRequestCapacityPercentage > 100) {\n            unusedRequestCapacityPercentage = 100 - unusedRequestCapacityPercentage;\n        }\n        let unusedUsageCapacityPercentage = capacity > usage ? (usage / capacity) * 100 : 0;\n        if (unusedUsageCapacityPercentage > 100) {\n            unusedUsageCapacityPercentage = 100 - unusedUsageCapacityPercentage;\n        }\n        return (React.createElement(Grid, { hasGutter: true },\n            React.createElement(GridItem, { md: 12, lg: 6 },\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_usage_unused_label`)),\n                React.createElement(\"div\", { style: styles.capacity }, formatValue(unusedUsageCapacity)),\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_usage_unused_units`, {\n                    percentage: formatValue(unusedUsageCapacityPercentage, usageUnits),\n                    units: usageUnits,\n                }))),\n            React.createElement(GridItem, { md: 12, lg: 6 },\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_requests_unused_label`)),\n                React.createElement(\"div\", { style: styles.capacity }, formatValue(unusedRequestCapacity)),\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_requests_unused_units`, {\n                    percentage: formatValue(unusedRequestCapacityPercentage, requestUnits),\n                    units: requestUnits,\n                })))));\n    }\n    render() {\n        return React.createElement(\"div\", { ref: this.containerRef }, this.getCpuChart());\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { groupBy, parentGroupBy, reportPathsType, reportType }) => {\n    const query = {\n        filter: {\n            time_scope_units: 'month',\n            time_scope_value: -1,\n            resolution: 'monthly',\n            limit: 3,\n        },\n        group_by: {\n            [parentGroupBy]: groupBy,\n        },\n    };\n    const queryString = getQuery(query);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        report,\n        reportFetchStatus,\n        queryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst UsageChart = translate()(connect(mapStateToProps, mapDispatchToProps)(UsageChartBase));\nexport { UsageChart };\n","import { Card, CardBody, CardTitle, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport { orgUnitIdKey, tagPrefix } from 'api/queries/query';\nimport { Cluster } from 'pages/details/components/cluster/cluster';\nimport { CostChart } from 'pages/details/components/costChart/costChart';\nimport { SummaryCard } from 'pages/details/components/summary/summaryCard';\nimport { UsageChart } from 'pages/details/components/usageChart/usageChart';\nimport React from 'react';\nconst PLACEHOLDER = 'placeholder';\nclass CostOverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        // Returns cluster chart\n        this.getClusterChart = (widget) => {\n            const { groupBy, report, t } = this.props;\n            let showWidget = false;\n            for (const groupById of widget.cluster.showWidgetOnGroupBy) {\n                if (groupById === groupBy ||\n                    (groupById === tagPrefix && groupBy.indexOf(tagPrefix) !== -1)) {\n                    showWidget = true;\n                    break;\n                }\n            }\n            if (showWidget) {\n                return (React.createElement(Card, null,\n                    React.createElement(CardTitle, null,\n                        React.createElement(Title, { headingLevel: \"h2\", size: \"md\" }, t('breakdown.cluster_title'))),\n                    React.createElement(CardBody, null,\n                        React.createElement(Cluster, { groupBy: widget.cluster.reportGroupBy, report: report }))));\n            }\n            return null;\n        };\n        // Returns cost breakdown chart\n        this.getCostChart = (widget) => {\n            const { report, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"md\" }, t('breakdown.cost_breakdown_title'))),\n                React.createElement(CardBody, null,\n                    React.createElement(CostChart, { report: report }))));\n        };\n        // Returns CPU usage chart\n        this.getCpuUsageChart = (widget) => {\n            const { filterBy, groupBy, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"md\" }, t(`breakdown.cpu_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(UsageChart, { groupBy: filterBy, parentGroupBy: groupBy, reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns memory usage chart\n        this.getMemoryUsageChart = (widget) => {\n            const { filterBy, groupBy, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"md\" }, t(`breakdown.memory_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(UsageChart, { groupBy: filterBy, parentGroupBy: groupBy, reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns summary card widget\n        this.getSummaryCard = (widget) => {\n            const { filterBy, groupBy, query } = this.props;\n            let showWidget = false;\n            for (const groupById of widget.reportSummary.showWidgetOnGroupBy) {\n                if (groupById === groupBy ||\n                    (query && query.group_by && query.group_by[orgUnitIdKey]) ||\n                    (groupById === tagPrefix &&\n                        groupBy &&\n                        groupBy.indexOf(tagPrefix) !== -1)) {\n                    showWidget = true;\n                    break;\n                }\n            }\n            if (showWidget) {\n                return (React.createElement(SummaryCard, { filterBy: filterBy, groupBy: widget.reportSummary.reportGroupBy, parentGroupBy: groupBy, query: query, reportPathsType: widget.reportPathsType, reportType: widget.reportType }));\n            }\n            else if (widget.reportSummary.usePlaceholder) {\n                return PLACEHOLDER;\n            }\n            return null;\n        };\n        // Helper to fill grid columns instead of rows, based on the order defined by the reducer\n        this.getWidgetsColumns = () => {\n            const { selectWidgets, widgets } = this.props;\n            const visibleWidgets = [];\n            widgets.map(widgetId => {\n                const widget = selectWidgets[widgetId];\n                const renderedWidget = this.renderWidget(widget);\n                if (renderedWidget !== null) {\n                    visibleWidgets.push(renderedWidget);\n                }\n            });\n            const rows = Math.floor(visibleWidgets.length / 2) + (visibleWidgets.length % 2);\n            const leftColumnWidgets = [];\n            const rightColumnWidgets = [];\n            for (let i = 0; i < rows; i++) {\n                if (visibleWidgets[i] !== PLACEHOLDER) {\n                    leftColumnWidgets.push(visibleWidgets[i]);\n                }\n                if (i + rows < visibleWidgets.length) {\n                    if (visibleWidgets[i + rows] !== PLACEHOLDER) {\n                        rightColumnWidgets.push(visibleWidgets[i + rows]);\n                    }\n                }\n            }\n            return { leftColumnWidgets, rightColumnWidgets };\n        };\n    }\n    // Returns rendered widget based on type\n    renderWidget(widget) {\n        switch (widget.type) {\n            case \"cluster\" /* cluster */:\n                return this.getClusterChart(widget);\n            case \"cost\" /* cost */:\n                return this.getCostChart(widget);\n            case \"cpuUsage\" /* cpuUsage */:\n                return this.getCpuUsageChart(widget);\n            case \"memoryUsage\" /* memoryUsage */:\n                return this.getMemoryUsageChart(widget);\n            case \"summary\" /* reportSummary */:\n                return this.getSummaryCard(widget);\n            default:\n                return null;\n        }\n    }\n    render() {\n        // Sort widgets vertically\n        const { leftColumnWidgets, rightColumnWidgets } = this.getWidgetsColumns();\n        return (React.createElement(Grid, { hasGutter: true },\n            React.createElement(GridItem, { lg: 12, xl: 6 },\n                React.createElement(Grid, { hasGutter: true }, leftColumnWidgets.map((widget, index) => {\n                    return React.createElement(GridItem, { key: `widget-${index}` }, widget);\n                }))),\n            React.createElement(GridItem, { lg: 12, xl: 6 },\n                React.createElement(Grid, { hasGutter: true }, rightColumnWidgets.map((widget, index) => {\n                    return React.createElement(GridItem, { key: `widget-${index}` }, widget);\n                })))));\n    }\n}\nexport { CostOverviewBase };\n","import { chart_color_blue_100, chart_color_blue_200, chart_color_blue_300, chart_color_blue_400, chart_color_blue_500, chart_color_green_100, chart_color_green_200, chart_color_green_300, chart_color_green_400, chart_color_green_500, global_spacer_lg, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    currentCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    currentInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    currentCostData: {\n        fill: 'none',\n    },\n    itemsPerRow: 0,\n    previousCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    previousCostData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { chartOverride } from 'components/charts/common/chart.styles';\nimport { getCostRangeString, getMaxValue, getTooltipContent, } from 'components/charts/common/chartUtils';\nimport { getDateRange } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles, styles } from './historicalCostChart.styles';\nclass HistoricalCostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentCostData, currentInfrastructureCostData, previousCostData, previousInfrastructureCostData, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                // Note: Container order is important\n                CursorVoronoiContainer: createContainer('cursor', 'voronoi'),\n                series: [\n                    {\n                        childName: 'previousCost',\n                        data: previousCostData,\n                        legendItem: {\n                            name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.previousColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.previousCostData), { stroke: chartStyles.previousColorScale[0] }),\n                        },\n                    },\n                    {\n                        childName: 'currentCost',\n                        data: currentCostData,\n                        legendItem: {\n                            name: getCostRangeString(currentCostData, costKey, true, false),\n                            symbol: {\n                                fill: chartStyles.currentColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.currentCostData), { stroke: chartStyles.currentColorScale[0] }),\n                        },\n                    },\n                    {\n                        childName: 'previousInfrastructureCost',\n                        data: previousInfrastructureCostData,\n                        legendItem: {\n                            name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.previousColorScale[1],\n                                type: 'dash',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.previousInfrastructureCostData), { stroke: chartStyles.previousColorScale[1] }),\n                        },\n                    },\n                    {\n                        childName: 'currentInfrastructureCost',\n                        data: currentInfrastructureCostData,\n                        legendItem: {\n                            name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                            symbol: {\n                                fill: chartStyles.currentColorScale[1],\n                                type: 'dash',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.currentInfrastructureCostData), { stroke: chartStyles.currentColorScale[1] }),\n                        },\n                    },\n                ],\n            });\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getContainer = () => {\n            const { CursorVoronoiContainer } = this.state;\n            if (!CursorVoronoiContainer) {\n                return undefined;\n            }\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.isDataAvailable() ? this.getTooltipLabel : undefined, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData() }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 120,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            const itemsPerRow = legendItemsPerRow\n                ? legendItemsPerRow\n                : width > 700\n                    ? chartStyles.itemsPerRow\n                    : 2;\n            return (React.createElement(ChartLegend, { data: this.getLegendData(), gutter: 0, height: 25, itemsPerRow: itemsPerRow, name: \"legend\" }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            return datum.y !== null\n                ? formatter(datum.y, datum.units, formatDatumOptions)\n                : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map((serie, index) => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign({ childName: s.childName }, s.legendItem), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.currentInfrastructureCostData !==\n                this.props.currentInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData ||\n            prevProps.previousInfrastructureCostData !==\n                this.props.previousInfrastructureCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentCostData, currentInfrastructureCostData, previousCostData, previousInfrastructureCostData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentLimit = currentCostData ? getMaxValue(currentCostData) : 0;\n        const maxCurrentRequest = currentInfrastructureCostData\n            ? getMaxValue(currentInfrastructureCostData)\n            : 0;\n        const maxPreviousLimit = previousCostData\n            ? getMaxValue(previousCostData)\n            : 0;\n        const maxPreviousRequest = previousInfrastructureCostData\n            ? getMaxValue(previousInfrastructureCostData)\n            : 0;\n        const maxValue = Math.max(maxCurrentLimit, maxCurrentRequest, maxPreviousLimit, maxPreviousRequest);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, previousInfrastructureCostData, } = this.props;\n        const currentRequestDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousRequestDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        return currentRequestDate > 0 || previousRequestDate > 0\n            ? Math.max(currentRequestDate, previousRequestDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 120,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 700\n                ? containerHeight - 25\n                : containerHeight\n            : containerHeight;\n        return (React.createElement(\"div\", { className: chartOverride, ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: adjustedContainerHeight }) },\n                React.createElement(Chart, { containerComponent: this.getContainer(), domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                    series &&\n                        series.map((s, index) => {\n                            return this.getChart(s, index);\n                        }),\n                    React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                    React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis })))));\n    }\n}\nexport { HistoricalCostChart };\n","import { global_spacer_3xl, global_spacer_lg, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    chartHeight: 300,\n    chartContainerHeight: 300,\n};\nexport const styles = {\n    chartContainer: {\n        marginLeft: global_spacer_lg.value,\n    },\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n    costChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    trendChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    usageChart: {\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport { getQuery } from 'api/queries/query';\nimport { transformReport, } from 'components/charts/common/chartUtils';\nimport { HistoricalCostChart } from 'components/charts/historicalCostChart';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataCostChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, size: SkeletonSize.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, size: SkeletonSize.xs })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType, } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType, } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, reportType, t, } = this.props;\n        // Current data\n        const currentData = transformReport(currentReport, 0 /* rolling */, 'date', 'cost');\n        const currentInfrastructureCostData = transformReport(currentReport, 0 /* rolling */, 'date', 'infrastructure');\n        // Previous data\n        const previousData = transformReport(previousReport, 0 /* rolling */, 'date', 'cost');\n        const previousInfrastructureCostData = transformReport(previousReport, 0 /* rolling */, 'date', 'infrastructure');\n        const costUnits = currentReport &&\n            currentReport.meta &&\n            currentReport.meta.total &&\n            currentReport.meta.total.cost\n            ? currentReport.meta.total.cost.total.units\n            : 'USD';\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.costChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalCostChart, { adjustContainerHeight: true, containerHeight: chartStyles.chartContainerHeight - 25, currentCostData: currentData, currentInfrastructureCostData: currentInfrastructureCostData, formatDatumValue: formatValue, formatDatumOptions: {}, height: chartStyles.chartHeight, previousCostData: previousData, previousInfrastructureCostData: previousInfrastructureCostData, xAxisLabel: t(`breakdown.historical_chart.day_of_month_label`), yAxisLabel: t(`breakdown.historical_chart.${reportType}_label`, {\n                    units: t(`units.${unitLookupKey(costUnits)}`),\n                }) })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, reportPathsType, reportType }) => {\n    const currentQuery = {\n        filter: {\n            time_scope_units: 'month',\n            time_scope_value: -1,\n            resolution: 'daily',\n            limit: 3,\n        },\n        group_by: {\n            [groupBy]: filterBy,\n        },\n    };\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = {\n        filter: {\n            time_scope_units: 'month',\n            time_scope_value: -2,\n            resolution: 'daily',\n            limit: 3,\n        },\n        group_by: {\n            [groupBy]: filterBy,\n        },\n    };\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataCostChart = translate()(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataCostChartBase));\nexport { HistoricalDataCostChart };\n","import { chart_color_blue_100, chart_color_blue_200, chart_color_blue_300, chart_color_blue_400, chart_color_blue_500, chart_color_green_100, chart_color_green_200, chart_color_green_300, chart_color_green_400, chart_color_green_500, global_spacer_lg, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    currentMonthData: {\n        fill: 'none',\n    },\n    itemsPerRow: 0,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousMonthData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { chartOverride } from 'components/charts/common/chart.styles';\nimport { getCostRangeString, getDateRange, getMaxValue, getTooltipContent, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles, styles } from './historicalTrendChart.styles';\nclass HistoricalTrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, previousData, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? 'chart.usage_legend_label'\n                : 'chart.cost_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                // Note: Container order is important\n                CursorVoronoiContainer: createContainer('cursor', 'voronoi'),\n                series: [\n                    {\n                        childName: 'previousCost',\n                        data: previousData,\n                        legendItem: {\n                            name: getCostRangeString(previousData, key, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.previousColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.previousMonthData), { stroke: chartStyles.previousColorScale[0] }),\n                        },\n                    },\n                    {\n                        childName: 'currentCost',\n                        data: currentData,\n                        legendItem: {\n                            name: getCostRangeString(currentData, key, true, false),\n                            symbol: {\n                                fill: chartStyles.currentColorScale[1],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.currentMonthData), { stroke: chartStyles.currentColorScale[1] }),\n                        },\n                    },\n                ],\n            });\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getContainer = () => {\n            const { CursorVoronoiContainer } = this.state;\n            if (!CursorVoronoiContainer) {\n                return undefined;\n            }\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.isDataAvailable() ? this.getTooltipLabel : undefined, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData() }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 120,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            return (React.createElement(ChartLegend, { data: this.getLegendData(), gutter: 10, height: 25, itemsPerRow: legendItemsPerRow, name: \"legend\" }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions, units } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            return datum.y !== null\n                ? formatter(datum.y, units || datum.units, formatDatumOptions)\n                : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map((serie, index) => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign({ childName: s.childName }, s.legendItem), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentData, previousData } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrent = currentData ? getMaxValue(currentData) : 0;\n        const maxPrevious = previousData ? getMaxValue(previousData) : 0;\n        const maxValue = Math.max(maxCurrent, maxPrevious);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentData, previousData } = this.props;\n        const previousDate = previousData\n            ? getDate(getDateRange(previousData, true, true)[1])\n            : 0;\n        const currentDate = currentData\n            ? getDate(getDateRange(currentData, true, true)[1])\n            : 0;\n        return currentDate > 0 || previousDate > 0\n            ? Math.max(currentDate, previousDate)\n            : 31;\n    }\n    render() {\n        const { height, containerHeight = height, padding = {\n            bottom: 120,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        return (React.createElement(\"div\", { className: chartOverride, ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: containerHeight }) },\n                React.createElement(Chart, { containerComponent: this.getContainer(), domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                    series &&\n                        series.map((s, index) => {\n                            return this.getChart(s, index);\n                        }),\n                    React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                    React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis })))));\n    }\n}\nexport { HistoricalTrendChart };\n","import { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport { getQuery, orgUnitIdKey } from 'api/queries/query';\nimport { transformReport, } from 'components/charts/common/chartUtils';\nimport { HistoricalTrendChart } from 'components/charts/historicalTrendChart';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataTrendChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, size: SkeletonSize.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, size: SkeletonSize.xs })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType, } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType, } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, reportType, t, } = this.props;\n        const isCostChart = reportType === \"cost\" /* cost */;\n        // Current data\n        const currentData = transformReport(currentReport, isCostChart ? 0 /* rolling */ : 1 /* daily */, 'date', isCostChart ? 'cost' : 'usage');\n        const previousData = transformReport(previousReport, isCostChart ? 0 /* rolling */ : 1 /* daily */, 'date', isCostChart ? 'cost' : 'usage');\n        const costUnits = currentReport &&\n            currentReport.meta &&\n            currentReport.meta.total &&\n            currentReport.meta.total.cost\n            ? currentReport.meta.total.cost.total.units\n            : 'USD';\n        let usageUnits = currentReport &&\n            currentReport.meta &&\n            currentReport.meta.total &&\n            currentReport.meta.total.usage\n            ? currentReport.meta.total.usage.units\n            : undefined;\n        let yAxisLabel;\n        if (isCostChart) {\n            yAxisLabel = t(`breakdown.historical_chart.${reportType}_label`, {\n                units: t(`units.${unitLookupKey(costUnits)}`),\n            });\n        }\n        else if (usageUnits &&\n            Number.isNaN(Number(currentReport.meta.total.usage.units))) {\n            yAxisLabel = t(`breakdown.historical_chart.units_label`, {\n                units: t(`units.${unitLookupKey(usageUnits)}`),\n            });\n        }\n        else {\n            usageUnits = t(`breakdown.historical_chart.${reportType}_label`);\n            yAxisLabel = t(`breakdown.historical_chart.units_label`, {\n                units: t(`units.${unitLookupKey(usageUnits)}`),\n            });\n        }\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.trendChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalTrendChart, { containerHeight: chartStyles.chartContainerHeight - 50, currentData: currentData, formatDatumValue: formatValue, formatDatumOptions: {}, height: chartStyles.chartHeight, previousData: previousData, units: isCostChart ? costUnits : usageUnits, xAxisLabel: t(`breakdown.historical_chart.day_of_month_label`), yAxisLabel: yAxisLabel })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, query, reportPathsType, reportType }) => {\n    const groupByOrg = query && query.group_by[orgUnitIdKey]\n        ? query.group_by[orgUnitIdKey]\n        : undefined;\n    // instance-types and storage APIs must filter org units\n    const useFilter = reportType === \"instance_type\" /* instanceType */ || reportType === \"storage\" /* storage */;\n    const currentQuery = {\n        filter: Object.assign(Object.assign({ time_scope_units: 'month', time_scope_value: -1, resolution: 'daily', limit: 3 }, (query && query.filter && query.filter.account && { account: query.filter.account })), (groupByOrg && useFilter && ({ [orgUnitIdKey]: groupByOrg }))),\n        filter_by: query ? query.filter_by : undefined,\n        group_by: Object.assign(Object.assign({}, (groupByOrg && !useFilter && { [orgUnitIdKey]: groupByOrg })), { [groupBy]: filterBy }),\n    };\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = {\n        filter: Object.assign(Object.assign({ time_scope_units: 'month', time_scope_value: -2, resolution: 'daily', limit: 3 }, (query && query.filter && query.filter.account && { account: query.filter.account })), (groupByOrg && useFilter && ({ [orgUnitIdKey]: groupByOrg }))),\n        filter_by: query ? query.filter_by : undefined,\n        group_by: Object.assign(Object.assign({}, (groupByOrg && !useFilter && { [orgUnitIdKey]: groupByOrg })), { [groupBy]: filterBy }),\n    };\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataTrendChart = translate()(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataTrendChartBase));\nexport { HistoricalDataTrendChart };\n","import { chart_color_blue_100, chart_color_blue_200, chart_color_blue_300, chart_color_blue_400, chart_color_blue_500, chart_color_green_100, chart_color_green_200, chart_color_green_300, chart_color_green_400, chart_color_green_500, global_spacer_lg, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    currentCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    currentLimitData: {\n        fill: 'none',\n    },\n    currentRequestData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    currentUsageData: {\n        fill: 'none',\n    },\n    itemsPerRow: 0,\n    previousCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousLimitData: {\n        fill: 'none',\n    },\n    previousRequestData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    previousUsageData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { chartOverride } from 'components/charts/common/chart.styles';\nimport { getDateRange } from 'components/charts/common/chartUtils';\nimport { getMaxValue, getTooltipContent, getUsageRangeString, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles, styles } from './historicalUsageChart.styles';\nclass HistoricalUsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentLimitData, currentRequestData, currentUsageData, previousLimitData, previousRequestData, previousUsageData, } = this.props;\n            const limitKey = 'chart.limit_legend_label';\n            const usageKey = 'chart.usage_legend_label';\n            const requestKey = 'chart.requests_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                // Note: Container order is important\n                CursorVoronoiContainer: createContainer('cursor', 'voronoi'),\n                series: [\n                    {\n                        childName: 'previousUsage',\n                        data: previousUsageData,\n                        legendItem: {\n                            name: getUsageRangeString(previousUsageData, usageKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.previousColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.previousUsageData), { stroke: chartStyles.previousColorScale[0] }),\n                        },\n                    },\n                    {\n                        childName: 'currentUsage',\n                        data: currentUsageData,\n                        legendItem: {\n                            name: getUsageRangeString(currentUsageData, usageKey, true, false),\n                            symbol: {\n                                fill: chartStyles.currentColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.currentUsageData), { stroke: chartStyles.currentColorScale[0] }),\n                        },\n                    },\n                    {\n                        childName: 'previousRequest',\n                        data: previousRequestData,\n                        legendItem: {\n                            name: getUsageRangeString(previousRequestData, requestKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.previousColorScale[1],\n                                type: 'dash',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.previousRequestData), { stroke: chartStyles.previousColorScale[1] }),\n                        },\n                    },\n                    {\n                        childName: 'currentRequest',\n                        data: currentRequestData,\n                        legendItem: {\n                            name: getUsageRangeString(currentRequestData, requestKey, true, false),\n                            symbol: {\n                                fill: chartStyles.currentColorScale[1],\n                                type: 'dash',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.currentRequestData), { stroke: chartStyles.currentColorScale[1] }),\n                        },\n                    },\n                    {\n                        childName: 'previousLimit',\n                        data: previousLimitData,\n                        legendItem: {\n                            name: getUsageRangeString(previousLimitData, limitKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.previousColorScale[2],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.previousLimitData), { stroke: chartStyles.previousColorScale[2] }),\n                        },\n                    },\n                    {\n                        childName: 'currentLimit',\n                        data: currentLimitData,\n                        legendItem: {\n                            name: getUsageRangeString(currentLimitData, limitKey, true, false),\n                            symbol: {\n                                fill: chartStyles.currentColorScale[2],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.currentLimitData), { stroke: chartStyles.currentColorScale[2] }),\n                        },\n                    },\n                ],\n            });\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getContainer = () => {\n            const { CursorVoronoiContainer } = this.state;\n            if (!CursorVoronoiContainer) {\n                return undefined;\n            }\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.isDataAvailable() ? this.getTooltipLabel : undefined, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData() }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 130,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            const itemsPerRow = legendItemsPerRow\n                ? legendItemsPerRow\n                : width > 800\n                    ? chartStyles.itemsPerRow\n                    : 2;\n            return (React.createElement(ChartLegend, { data: this.getLegendData(), gutter: 0, height: 25, itemsPerRow: itemsPerRow, name: \"legend\" }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            return datum.y !== null\n                ? formatter(datum.y, datum.units, formatDatumOptions)\n                : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map((serie, index) => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign({ childName: s.childName }, s.legendItem), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentLimitData !== this.props.currentLimitData ||\n            prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousLimitData !== this.props.previousLimitData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentRequestData, currentUsageData, currentLimitData, previousLimitData, previousRequestData, previousUsageData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentLimit = currentLimitData\n            ? getMaxValue(currentLimitData)\n            : 0;\n        const maxCurrentRequest = currentRequestData\n            ? getMaxValue(currentRequestData)\n            : 0;\n        const maxCurrentUsage = currentUsageData\n            ? getMaxValue(currentUsageData)\n            : 0;\n        const maxPreviousLimit = previousLimitData\n            ? getMaxValue(previousLimitData)\n            : 0;\n        const maxPreviousRequest = previousRequestData\n            ? getMaxValue(previousRequestData)\n            : 0;\n        const maxPreviousUsage = previousUsageData\n            ? getMaxValue(previousUsageData)\n            : 0;\n        const maxValue = Math.max(maxCurrentLimit, maxCurrentRequest, maxCurrentUsage, maxPreviousLimit, maxPreviousRequest, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const currentRequestDate = currentRequestData\n            ? getDate(getDateRange(currentRequestData, true, true)[1])\n            : 0;\n        const currentUsageDate = currentUsageData\n            ? getDate(getDateRange(currentUsageData, true, true)[1])\n            : 0;\n        const previousRequestDate = previousRequestData\n            ? getDate(getDateRange(previousRequestData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousUsageData\n            ? getDate(getDateRange(previousUsageData, true, true)[1])\n            : 0;\n        return currentRequestDate > 0 ||\n            currentUsageDate > 0 ||\n            previousRequestDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 130,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 800\n                ? containerHeight - 50\n                : containerHeight\n            : containerHeight;\n        return (React.createElement(\"div\", { className: chartOverride, ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: adjustedContainerHeight }) },\n                React.createElement(Chart, { containerComponent: this.getContainer(), domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                    series &&\n                        series.map((s, index) => {\n                            return this.getChart(s, index);\n                        }),\n                    React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                    React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis })))));\n    }\n}\nexport { HistoricalUsageChart };\n","import { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport { getQuery } from 'api/queries/query';\nimport { transformReport, } from 'components/charts/common/chartUtils';\nimport { HistoricalUsageChart } from 'components/charts/historicalUsageChart';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataUsageChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, size: SkeletonSize.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, size: SkeletonSize.xs })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType, } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType, } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, t, } = this.props;\n        // Current data\n        const currentLimitData = transformReport(currentReport, 1 /* daily */, 'date', 'limit');\n        const currentRequestData = transformReport(currentReport, 1 /* daily */, 'date', 'request');\n        const currentUsageData = transformReport(currentReport, 1 /* daily */, 'date', 'usage');\n        // Previous data\n        const previousLimitData = transformReport(previousReport, 1 /* daily */, 'date', 'limit');\n        const previousRequestData = transformReport(previousReport, 1 /* daily */, 'date', 'request');\n        const previousUsageData = transformReport(previousReport, 1 /* daily */, 'date', 'usage');\n        const usageUnits = currentReport &&\n            currentReport.meta &&\n            currentReport.meta.total &&\n            currentReport.meta.total.usage\n            ? currentReport.meta.total.usage.units\n            : '';\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.usageChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalUsageChart, { adjustContainerHeight: true, containerHeight: chartStyles.chartContainerHeight, currentLimitData: currentLimitData, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: {}, height: chartStyles.chartHeight, previousLimitData: previousLimitData, previousRequestData: previousRequestData, previousUsageData: previousUsageData, xAxisLabel: t(`breakdown.historical_chart.day_of_month_label`), yAxisLabel: t(`breakdown.historical_chart.units_label`, {\n                    units: t(`units.${unitLookupKey(usageUnits)}`),\n                }) })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, reportPathsType, reportType }) => {\n    const currentQuery = {\n        filter: {\n            time_scope_units: 'month',\n            time_scope_value: -1,\n            resolution: 'daily',\n            limit: 3,\n        },\n        group_by: {\n            [groupBy]: filterBy,\n        },\n    };\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = {\n        filter: {\n            time_scope_units: 'month',\n            time_scope_value: -2,\n            resolution: 'daily',\n            limit: 3,\n        },\n        group_by: {\n            [groupBy]: filterBy,\n        },\n    };\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataUsageChart = translate()(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataUsageChartBase));\nexport { HistoricalDataUsageChart };\n","import { Card, CardBody, CardTitle, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport React from 'react';\nimport { HistoricalDataCostChart } from './historicalDataCostChart';\nimport { HistoricalDataTrendChart } from './historicalDataTrendChart';\nimport { HistoricalDataUsageChart } from './historicalDataUsageChart';\nclass HistoricalDataBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        // Returns cost chart\n        this.getCostChart = (widget) => {\n            const { filterBy, groupBy, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"md\" }, t(`breakdown.historical_chart.${widget.reportType}_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataCostChart, { filterBy: filterBy, groupBy: groupBy, reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns trend chart\n        this.getTrendChart = (widget) => {\n            const { filterBy, groupBy, query, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"md\" }, t(`breakdown.historical_chart.${widget.reportType}_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataTrendChart, { filterBy: filterBy, groupBy: groupBy, query: query, reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns usage chart\n        this.getUsageChart = (widget) => {\n            const { filterBy, groupBy, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"md\" }, t(`breakdown.historical_chart.${widget.reportType}_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataUsageChart, { filterBy: filterBy, groupBy: groupBy, reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n    }\n    // Returns rendered widget based on type\n    renderWidget(widget) {\n        switch (widget.type) {\n            case \"cost\" /* cost */:\n                return this.getCostChart(widget);\n            case \"tend\" /* trend */:\n                return this.getTrendChart(widget);\n            case \"usage\" /* usage */:\n                return this.getUsageChart(widget);\n            default:\n                return null;\n        }\n    }\n    render() {\n        const { selectWidgets, widgets } = this.props;\n        return (React.createElement(Grid, { hasGutter: true }, widgets.map(widgetId => {\n            const widget = selectWidgets[widgetId];\n            return (React.createElement(GridItem, { key: `widget-${widgetId}` }, this.renderWidget(widget)));\n        })));\n    }\n}\nexport { HistoricalDataBase };\n","import { global_spacer_lg } from '@patternfly/react-tokens';\nexport const styles = {\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingLeft: global_spacer_lg.value,\n        paddingRight: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n};\n","import { global_FontWeight_bold, global_spacer_3xl, global_spacer_lg, global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = {\n    dataListHeading: {\n        fontWeight: global_FontWeight_bold.value\n    },\n    groupByHeading: {\n        marginBottom: global_spacer_lg.value\n    },\n    tagLink: {\n        marginLeft: global_spacer_sm.value,\n    },\n    tagsContainer: {\n        marginRight: global_spacer_3xl.value,\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import { DataList, DataListCell, DataListItem, DataListItemCells, DataListItemRow, } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { styles } from './tag.styles';\nclass TagViewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDataListItems = () => {\n            const { report } = this.props;\n            const result = [];\n            if (report) {\n                for (const tag of report.data) {\n                    for (const val of tag.values) {\n                        const id = `${tag.key}:${val}`;\n                        result.push(React.createElement(DataListItem, { \"aria-labelledby\": id, key: `${id}-item` },\n                            React.createElement(DataListItemRow, null,\n                                React.createElement(DataListItemCells, { dataListCells: [\n                                        React.createElement(DataListCell, { key: `${id}-cell1` },\n                                            React.createElement(\"span\", { id: id }, tag.key)),\n                                        React.createElement(DataListCell, { key: `${id}-cell2` }, val)\n                                    ] }))));\n                    }\n                }\n            }\n            return result;\n        };\n    }\n    render() {\n        const { filterBy, groupBy, t } = this.props;\n        const dataListItems = this.getDataListItems();\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", null,\n                React.createElement(\"span\", { style: styles.dataListHeading }, t(`group_by.values.${groupBy}`))),\n            React.createElement(\"div\", { style: styles.groupByHeading },\n                React.createElement(\"span\", null, filterBy)),\n            React.createElement(DataList, { \"aria-label\": \"Simple data list example\", isCompact: true },\n                React.createElement(DataListItem, { \"aria-labelledby\": \"heading1\" },\n                    React.createElement(DataListItemRow, null,\n                        React.createElement(DataListItemCells, { dataListCells: [\n                                React.createElement(DataListCell, { key: \"primary content\" },\n                                    React.createElement(\"span\", { id: \"heading1\", style: styles.dataListHeading }, t('tag.heading_key'))),\n                                React.createElement(DataListCell, { key: \"secondary content\" },\n                                    React.createElement(\"span\", { id: \"heading2\", style: styles.dataListHeading }, t('tag.heading_value')))\n                            ] }))),\n                dataListItems.map(item => item))));\n    }\n}\nconst TagView = translate()(connect()(TagViewBase));\nexport { TagView };\n","import { Modal } from '@patternfly/react-core';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { TagView } from './tagView';\nconst reportType = \"tag\" /* tag */;\nclass TagModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getTagValueCount = () => {\n            const { report } = this.props;\n            let count = 0;\n            if (report) {\n                for (const tag of report.data) {\n                    if (tag.values) {\n                        count += tag.values.length;\n                    }\n                }\n            }\n            return count;\n        };\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    shouldComponentUpdate(nextProps) {\n        const { filterBy, isOpen } = this.props;\n        return nextProps.filterBy !== filterBy || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { filterBy, groupBy, isOpen, report, t } = this.props;\n        return (React.createElement(Modal, { isOpen: isOpen, onClose: this.handleClose, title: t('tag.title', {\n                value: this.getTagValueCount()\n            }), width: '50%' },\n            React.createElement(TagView, { filterBy: filterBy, groupBy: groupBy, report: report })));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, reportPathsType }) => {\n    const queryFromRoute = parseQuery(location.search);\n    const queryString = getQuery({\n        filter: Object.assign({ [groupBy]: filterBy, resolution: 'monthly', time_scope_units: 'month', time_scope_value: -1 }, (queryFromRoute.filter.account && { account: queryFromRoute.filter.account })),\n    });\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst TagModal = translate()(connect(mapStateToProps, mapDispatchToProps)(TagModalBase));\nexport { TagModal };\n","import { TagIcon } from '@patternfly/react-icons';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getTestProps, testIds } from 'testIds';\nimport { styles } from './tag.styles';\nimport { TagModal } from './tagModal';\nconst reportType = \"tag\" /* tag */;\nclass TagLinkBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleClose = (isOpen) => {\n            this.setState({ isOpen });\n        };\n        this.handleOpen = event => {\n            this.setState({ isOpen: true });\n            event.preventDefault();\n            return false;\n        };\n        this.handleClose = this.handleClose.bind(this);\n        this.handleOpen = this.handleOpen.bind(this);\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    render() {\n        const { filterBy, groupBy, id, report, reportPathsType } = this.props;\n        const { isOpen } = this.state;\n        let count = 0;\n        if (report) {\n            for (const tag of report.data) {\n                if (tag.values) {\n                    count += tag.values.length;\n                }\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.tagsContainer, id: id },\n            Boolean(count > 0) && (React.createElement(React.Fragment, null,\n                React.createElement(TagIcon, null),\n                React.createElement(\"a\", Object.assign({}, getTestProps(testIds.details.tag_lnk), { href: \"#/\", onClick: this.handleOpen, style: styles.tagLink }), count))),\n            React.createElement(TagModal, { filterBy: filterBy, groupBy: groupBy, isOpen: isOpen, onClose: this.handleClose, reportPathsType: reportPathsType })));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, reportPathsType }) => {\n    const queryFromRoute = parseQuery(location.search);\n    const queryString = getQuery({\n        filter: Object.assign({ [groupBy]: filterBy, resolution: 'monthly', time_scope_units: 'month', time_scope_value: -1 }, (queryFromRoute.filter.account && { account: queryFromRoute.filter.account })),\n    });\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        filterBy,\n        queryString,\n        report,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst TagLink = translate()(connect(mapStateToProps, mapDispatchToProps)(TagLinkBase));\nexport { TagLink };\n","import { global_BackgroundColor_100, global_Color_200, global_disabled_color_100, global_FontSize_sm, global_FontSize_xs, global_spacer_lg, global_spacer_md, global_spacer_xl, global_spacer_xs, } from '@patternfly/react-tokens';\nimport { css } from 'emotion';\nexport const styles = {\n    cost: {\n        marginTop: global_spacer_xl.var,\n    },\n    costLabel: {\n        marginTop: global_spacer_xs.var,\n    },\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n        textAlign: 'right',\n    },\n    costLabelDate: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_200.var,\n        textAlign: 'right',\n    },\n    header: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        paddingLeft: global_spacer_xl.var,\n        paddingRight: global_spacer_xl.var,\n        paddingTop: global_spacer_xl.var,\n        backgroundColor: global_BackgroundColor_100.var,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    tabs: {\n        display: 'flex',\n    },\n    tag: {\n        marginLeft: global_spacer_lg.var,\n    },\n    title: {\n        paddingBottom: global_spacer_lg.var,\n        paddingTop: global_spacer_md.var,\n    },\n};\nexport const breadcrumbOverride = css `\n  .pf-c-breadcrumb__item:not(:last-child) {\n    margin-left: var(--pf-c-breadcrumb__item--MarginRight);\n    margin-right: 0;\n  }\n  .pf-c-breadcrumb__item-divider {\n    margin-left: 0;\n    margin-right: var(--pf-c-breadcrumb__item-divider--MarginLeft);\n  }\n`;\n","import { Title } from '@patternfly/react-core';\nimport { AngleLeftIcon } from '@patternfly/react-icons';\nimport { breakdownDescKey, breakdownTitleKey, getQueryRoute, orgUnitIdKey, } from 'api/queries/query';\nimport { TagLink } from 'pages/details/components/tag/tagLink';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { getForDateRangeString } from 'utils/dateRange';\nimport { formatValue } from 'utils/formatValue';\nimport { breadcrumbOverride, styles } from './breakdownHeader.styles';\nclass BreakdownHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.buildDetailsLink = () => {\n            const { detailsURL, groupBy, query } = this.props;\n            let groupByKey = groupBy;\n            let value = '*';\n            // Retrieve org unit used by the details page\n            if (query[orgUnitIdKey]) {\n                groupByKey = orgUnitIdKey;\n                value = query[orgUnitIdKey];\n            }\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { group_by: {\n                    [groupByKey]: value,\n                } });\n            // Don't want these params when returning to the details page\n            if (newQuery.filter) {\n                newQuery.filter.account = undefined;\n                newQuery[breakdownDescKey] = undefined;\n                newQuery[orgUnitIdKey] = undefined;\n                newQuery[breakdownTitleKey] = undefined;\n            }\n            return `${detailsURL}?${getQueryRoute(newQuery)}`;\n        };\n        this.getGroupByOrg = () => {\n            const { query } = this.props;\n            let groupByOrg;\n            for (const groupBy of Object.keys(query.group_by)) {\n                if (groupBy === orgUnitIdKey) {\n                    groupByOrg = query.group_by[orgUnitIdKey];\n                    break;\n                }\n            }\n            return groupByOrg;\n        };\n        this.getTotalCost = () => {\n            const { report } = this.props;\n            const hasCost = report &&\n                report.meta &&\n                report.meta.total &&\n                report.meta.total.cost &&\n                report.meta.total.cost.total;\n            const cost = formatValue(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD');\n            return cost;\n        };\n    }\n    render() {\n        const { description, filterBy, groupBy, reportPathsType, t, tabs, title, query } = this.props;\n        const filterByAccount = query && query.filter ? query.filter.account : undefined;\n        const groupByOrg = this.getGroupByOrg();\n        const showTags = filterByAccount ||\n            groupBy === 'account' ||\n            groupBy === 'project' ||\n            groupBy === 'subscription_guid';\n        // i18n groupBy key\n        const groupByKey = groupBy\n            ? groupBy\n            : filterByAccount\n                ? 'account'\n                : groupByOrg\n                    ? orgUnitIdKey\n                    : undefined;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", null,\n                React.createElement(\"nav\", { \"aria-label\": \"breadcrumb\", className: `pf-c-breadcrumb ${breadcrumbOverride}` },\n                    React.createElement(\"ol\", { className: \"pf-c-breadcrumb__list\" },\n                        React.createElement(\"li\", { className: \"pf-c-breadcrumb__item\" },\n                            React.createElement(\"span\", { className: \"pf-c-breadcrumb__item-divider\" },\n                                React.createElement(AngleLeftIcon, null)),\n                            React.createElement(Link, { to: this.buildDetailsLink() }, t('breakdown.back_to_details', {\n                                groupBy: groupByKey,\n                                value: reportPathsType,\n                            }))))),\n                React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" },\n                    t('breakdown.title', { value: title }),\n                    description && (React.createElement(\"div\", { style: styles.infoDescription }, description))),\n                React.createElement(\"div\", { style: styles.tabs },\n                    tabs,\n                    React.createElement(\"div\", { style: styles.tag }, Boolean(showTags) && (React.createElement(TagLink, { filterBy: filterBy, groupBy: groupByKey, id: \"tags\", reportPathsType: reportPathsType }))))),\n            React.createElement(\"div\", { style: styles.cost },\n                React.createElement(\"div\", { style: styles.costLabel },\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: \"4xl\" },\n                        React.createElement(\"span\", null, this.getTotalCost()))),\n                React.createElement(\"div\", { style: styles.costLabelDate }, getForDateRangeString(groupByKey, 'breakdown.total_cost_date')))));\n    }\n}\nconst BreakdownHeader = translate()(BreakdownHeaderBase);\nexport { BreakdownHeader };\n","import { Tab, TabContent, Tabs, TabTitleText } from '@patternfly/react-core';\nimport React from 'react';\nimport { styles } from './breakdown.styles';\nimport { BreakdownHeader } from './breakdownHeader';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"cost-overview\" /* costOverview */:\n            return 'cost-overview';\n        case \"historical-data\" /* historicalData */:\n            return 'historical-data';\n    }\n};\nclass BreakdownBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            activeTabKey: 0,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getAvailableTabs = () => {\n            const availableTabs = [\n                {\n                    contentRef: React.createRef(),\n                    tab: \"cost-overview\" /* costOverview */,\n                },\n                {\n                    contentRef: React.createRef(),\n                    tab: \"historical-data\" /* historicalData */,\n                },\n            ];\n            return availableTabs;\n        };\n        this.getTab = (tab, contentRef, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, tabContentId: `tab-${index}`, tabContentRef: contentRef, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) }));\n        };\n        this.getTabContent = (availableTabs) => {\n            return availableTabs.map((val, index) => {\n                return (React.createElement(TabContent, { eventKey: index, key: `${getIdKeyForTab(val.tab)}-tabContent`, id: `tab-${index}`, ref: val.contentRef }, this.getTabItem(val.tab, index)));\n            });\n        };\n        this.getTabItem = (tab, index) => {\n            const { costOverviewComponent, historicalDataComponent } = this.props;\n            const { activeTabKey } = this.state;\n            const emptyTab = React.createElement(React.Fragment, null); // Lazily load tabs\n            if (activeTabKey !== index) {\n                return emptyTab;\n            }\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === \"cost-overview\" /* costOverview */) {\n                return costOverviewComponent;\n            }\n            else if (currentTab === \"historical-data\" /* historicalData */) {\n                return historicalDataComponent;\n            }\n            else {\n                return emptyTab;\n            }\n        };\n        this.getTabs = (availableTabs) => {\n            const { activeTabKey } = this.state;\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((val, index) => this.getTab(val.tab, val.contentRef, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            if (tab === \"cost-overview\" /* costOverview */) {\n                return t('breakdown.cost_overview_title');\n            }\n            else if (tab === \"historical-data\" /* historicalData */) {\n                return t('breakdown.historical_data_title');\n            }\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { activeTabKey } = this.state;\n            if (activeTabKey !== tabIndex) {\n                this.setState({\n                    activeTabKey: tabIndex,\n                });\n            }\n        };\n        this.updateReport = () => {\n            const { location, fetchReport, queryString, reportPathsType, reportType, } = this.props;\n            if (location.search) {\n                fetchReport(reportPathsType, reportType, queryString);\n            }\n        };\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { location, report, reportError, queryString } = this.props;\n        const newQuery = prevProps.queryString !== queryString;\n        const noReport = !report && !reportError;\n        const noLocation = !location.search;\n        if (newQuery || noReport || noLocation) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { description, detailsURL, filterBy, groupBy, query, report, reportPathsType, title, } = this.props;\n        const availableTabs = this.getAvailableTabs();\n        return (React.createElement(React.Fragment, null,\n            React.createElement(BreakdownHeader, { description: description, detailsURL: detailsURL, filterBy: filterBy, groupBy: groupBy, query: query, report: report, reportPathsType: reportPathsType, tabs: this.getTabs(availableTabs), title: title }),\n            React.createElement(\"div\", { style: styles.content }, this.getTabContent(availableTabs))));\n    }\n}\nexport default BreakdownBase;\n","import { global_spacer_xl } from '@patternfly/react-tokens';\nexport const styles = {\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '50vh',\n        marginTop: global_spacer_xl.value,\n    },\n};\n","import { EmptyState as PfEmptyState, EmptyStateBody, EmptyStateIcon, Title, } from '@patternfly/react-core';\nimport { MoneyCheckAltIcon } from '@patternfly/react-icons/dist/js/icons/money-check-alt-icon';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './noRatesState.styles';\nconst NoRatesStateBase = ({ t, cluster }) => {\n    return (React.createElement(\"div\", { style: styles.container },\n        React.createElement(PfEmptyState, null,\n            React.createElement(EmptyStateIcon, { icon: MoneyCheckAltIcon }),\n            React.createElement(Title, { headingLevel: \"h2\", size: \"xl\" }, t('no_rates_state.title')),\n            React.createElement(EmptyStateBody, null, t('no_rates_state.desc', { cluster })))));\n};\nexport const NoRatesState = translate()(NoRatesStateBase);\n","import { global_spacer_3xl, global_spacer_md } from '@patternfly/react-tokens';\nimport { css } from 'emotion';\nexport const modalOverride = css `\n  /* Workaround for isLarge not working properly */\n  &.pf-c-modal-box {\n    height: '900px';\n    width: 1200px;\n  }\n  & .pf-c-modal-box__footer {\n    display: none;\n  }\n`;\nexport const styles = {\n    skeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n};\n","import { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport React from 'react';\nimport { formatCurrency } from 'utils/formatValue';\nfunction getUsageRangeText(metric, t) {\n    return metric.range_value[0] === null && metric.range_value[1] === null\n        ? t('details.price_list.modal.no_range_set')\n        : `${metric.range_value[0] || ' '} - ${metric.range_value[2] || ' '} ${metric.range_unit}`;\n}\nconst PriceListTable = ({ rates, t }) => {\n    const notAvailableText = t('details.price_list.modal.not_available');\n    return (React.createElement(Table, { \"aria-label\": \"price-list-table\", cells: [\n            t('details.price_list.modal.metric'),\n            t('details.price_list.modal.value'),\n            t('details.price_list.modal.applied_usage_range'),\n            t('details.price_list.modal.applied_usage_date_range'),\n        ], rows: rates.map(metric => {\n            // Avoid relying on API labels as i18n keys -- see https://issues.redhat.com/browse/COST-50\n            const s = metric.display.replace(/cpu/g, 'CPU');\n            return [\n                t(`details.price_list.modal.metric_display`, {\n                    display: s.replace(/(^\\w)/g, m => m.toUpperCase()),\n                    index: metric.index + 1,\n                    unit: metric.range_unit,\n                }),\n                metric.value\n                    ? formatCurrency(metric.value, metric.value_unit)\n                    : notAvailableText,\n                getUsageRangeText(metric, t),\n                t(`details.price_list.modal.${metric.period}`),\n            ];\n        }) },\n        React.createElement(TableHeader, null),\n        React.createElement(TableBody, null)));\n};\nexport default PriceListTable;\n","import { Modal } from '@patternfly/react-core';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport { ErrorState } from 'components/state/errorState/errorState';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { priceListActions, priceListSelectors } from 'store/priceList';\nimport { providersSelectors } from 'store/providers';\nimport { NoRatesState } from './noRatesState';\nimport { modalOverride, styles } from './priceListModal.styles';\nimport PriceListTable from './priceListTable';\n// Prune null values\nconst getSourceUUID = (item) => {\n    for (const uuid of item.source_uuid) {\n        if (uuid !== null) {\n            return uuid;\n        }\n    }\n    return '';\n};\nclass PriceListModalBase extends React.Component {\n    componentDidUpdate() {\n        const { fetch, isOpen, item, providers, priceListStatus: status, } = this.props;\n        if (isOpen && status !== 1 /* inProgress */) {\n            const priceListProvider = providers.data.find(p => p.uuid === getSourceUUID(item));\n            fetch(priceListProvider ? priceListProvider.uuid : null);\n        }\n    }\n    renderContent() {\n        const { item, priceListStatus, priceListError, priceList, providers, t, } = this.props;\n        if (priceListStatus !== 2 /* complete */) {\n            return React.createElement(Skeleton, { style: styles.skeleton, size: SkeletonSize.md });\n        }\n        if (priceListError !== null) {\n            return React.createElement(ErrorState, { error: priceListError });\n        }\n        const priceListProvider = providers.data.find(p => p.uuid === getSourceUUID(item));\n        const priceListRates = priceListProvider && priceList[priceListProvider.uuid];\n        return priceListRates ? (React.createElement(PriceListTable, { t: t, rates: priceListRates })) : (React.createElement(NoRatesState, { cluster: item.label.toString() }));\n    }\n    render() {\n        const { t, isOpen, close, item } = this.props;\n        return (React.createElement(Modal, { className: modalOverride, isOpen: isOpen, onClose: () => close(false), title: t('details.price_list.modal.title', { name: item.label }) }, this.renderContent()));\n    }\n}\nconst PriceListModal = connect(createMapStateToProps((state, { item, providerType }) => {\n    let type;\n    switch (providerType) {\n        case \"aws\" /* aws */:\n            type = 'AWS';\n            break;\n        case \"azure\" /* azure */:\n            type = 'AZURE';\n            break;\n        case \"ocp\" /* ocp */:\n            type = 'OCP';\n            break;\n    }\n    const providers = providersSelectors.selectProviders(state, providerType, `type=${type}`);\n    const priceListProvider = providers && providers.data\n        ? providers.data.find(p => p.uuid === getSourceUUID(item))\n        : undefined;\n    const providerUuid = priceListProvider ? priceListProvider.uuid : null;\n    return {\n        priceList: priceListSelectors.ratesPerProvider(state, providerUuid),\n        priceListError: priceListSelectors.error(state, providerUuid),\n        priceListStatus: priceListSelectors.status(state, providerUuid),\n        providers,\n    };\n}), {\n    fetch: priceListActions.fetchPriceList,\n})(translate()(PriceListModalBase));\nexport { PriceListModal };\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport { tagPrefix } from 'api/queries/query';\nimport { ExportModal } from 'pages/details/components/export/exportModal';\nimport { PriceListModal } from 'pages/details/components/priceList/priceListModal';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { costModelsActions } from 'store/costModels';\nclass DetailsActionsBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n            isPriceListModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, query, reportPathsType } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, query: query, reportPathsType: reportPathsType }));\n        };\n        this.getPriceListModal = () => {\n            const { item, providerType } = this.props;\n            return (React.createElement(PriceListModal, { close: this.handlePriceListModalClose, isOpen: this.state.isPriceListModalOpen, item: item, providerType: providerType }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handlePriceListModalClose = (isOpen) => {\n            this.setState({ isPriceListModalOpen: isOpen });\n        };\n        this.handlePriceListModalOpen = () => {\n            this.setState({ isPriceListModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handlePriceListModalClose = this.handlePriceListModalClose.bind(this);\n        this.handlePriceListModalOpen = this.handlePriceListModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, t, redirectToCostModel, history, item: { source_uuid } } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, t('details.actions.export')),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], history) }, t('details.actions.price_list')));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal(),\n            showPriceListOption && this.getPriceListModal()));\n    }\n}\nconst Actions = connect(undefined, {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n})(translate()(withRouter(DetailsActionsBase)));\nexport { Actions };\n","import { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = {\n    groupBySelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    groupBySelectorLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n};\n","import { Select, SelectOption, SelectVariant, } from '@patternfly/react-core';\nimport { orgUnitIdKey, orgUnitNameKey, parseQuery, } from 'api/queries/query';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './groupBy.styles';\nclass GroupByOrgBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            defaultItem: this.props.groupBy || this.props.options[0].value,\n            isGroupByOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getCurrentGroupBy = () => {\n            const { getIdKeyForGroupBy } = this.props;\n            const queryFromRoute = parseQuery(location.search);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by\n                ? Object.keys(queryFromRoute.group_by)\n                : [];\n            let groupBy = getIdKeyForGroupBy(queryFromRoute.group_by);\n            for (const key of groupByKeys) {\n                const index = key.indexOf(orgUnitIdKey);\n                if (index !== -1) {\n                    groupBy = queryFromRoute.group_by[orgUnitIdKey];\n                    break;\n                }\n            }\n            return groupBy;\n        };\n        this.getGroupByItems = () => {\n            const { report } = this.props;\n            if (!(report && report.data)) {\n                return [];\n            }\n            // Sort all names first\n            const sortedData = report.data.sort((a, b) => {\n                if (a[orgUnitNameKey] < b[orgUnitNameKey]) {\n                    return -1;\n                }\n                if (a[orgUnitNameKey] > b[orgUnitNameKey]) {\n                    return 1;\n                }\n                return 0;\n            });\n            // Move roots first\n            const roots = sortedData.filter(org => org.level === 0);\n            const filteredOrgs = sortedData.filter(org => org.level !== 0);\n            roots.map(root => {\n                const item = sortedData.find(org => org[orgUnitIdKey] === root[orgUnitIdKey]);\n                filteredOrgs.unshift(item);\n            });\n            return filteredOrgs.map(org => ({\n                id: org[orgUnitIdKey],\n                toString: () => org[orgUnitNameKey],\n            }));\n        };\n        this.handleGroupByClear = () => {\n            this.setState({\n                currentItem: undefined,\n            });\n        };\n        this.handleGroupBySelect = (event, selection) => {\n            const { onItemClicked } = this.props;\n            this.setState({\n                currentItem: selection.id,\n                isGroupByOpen: false,\n            });\n            if (onItemClicked) {\n                onItemClicked(`${orgUnitIdKey}${selection.id}`);\n            }\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({ isGroupByOpen });\n        };\n        this.handleGroupByClear = this.handleGroupByClear.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { groupBy } = this.props;\n        if (prevProps.groupBy !== groupBy) {\n            this.setState({ currentItem: this.getCurrentGroupBy() });\n        }\n    }\n    render() {\n        const { isDisabled = false, t } = this.props;\n        const { currentItem, isGroupByOpen } = this.state;\n        const groupByItems = this.getGroupByItems();\n        const selection = groupByItems.find((item) => item.id === currentItem);\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(Select, { \"aria-label\": t('group_by.org_unit_aria_label'), isDisabled: isDisabled, onClear: this.handleGroupByClear, onToggle: this.handleGroupByToggle, onSelect: this.handleGroupBySelect, isOpen: isGroupByOpen, placeholderText: t('group_by.org_unit_placeholder'), selections: selection, variant: SelectVariant.typeahead }, groupByItems.map(item => (React.createElement(SelectOption, { description: item.id, key: item.id, value: item }))))));\n    }\n}\nconst GroupByOrg = translate()(GroupByOrgBase);\nexport { GroupByOrg };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { parseQuery, tagPrefix } from 'api/queries/query';\nimport { uniq, uniqBy } from 'lodash';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './groupBy.styles';\nclass GroupByTagBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isGroupByOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getGroupByItems = () => {\n            const { report } = this.props;\n            if (!(report && report.data)) {\n                return [];\n            }\n            // If the key_only param is used, we have an array of strings\n            let hasTagKeys = false;\n            for (const item of report.data) {\n                if (item.hasOwnProperty('key')) {\n                    hasTagKeys = true;\n                    break;\n                }\n            }\n            // Workaround for https://github.com/project-koku/koku/issues/1797\n            let data = [];\n            if (hasTagKeys) {\n                const keepData = report.data.map((_a) => {\n                    var { type } = _a, keepProps = __rest(_a, [\"type\"]);\n                    return keepProps;\n                });\n                data = uniqBy(keepData, 'key');\n            }\n            else {\n                data = uniq(report.data);\n            }\n            return data.map(tag => {\n                const tagKey = hasTagKeys ? tag.key : tag;\n                return React.createElement(SelectOption, { key: tag.key, value: tagKey });\n            });\n        };\n        this.getCurrentGroupBy = () => {\n            const queryFromRoute = parseQuery(location.search);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by\n                ? Object.keys(queryFromRoute.group_by)\n                : [];\n            let groupBy;\n            for (const key of groupByKeys) {\n                const index = key.indexOf(tagPrefix);\n                if (index !== -1) {\n                    groupBy = key.slice(tagPrefix.length);\n                    break;\n                }\n            }\n            return groupBy;\n        };\n        this.handleGroupByClear = () => {\n            this.setState({\n                currentItem: undefined,\n            });\n        };\n        this.handleGroupBySelect = (event, selection) => {\n            const { onItemClicked } = this.props;\n            this.setState({\n                currentItem: selection,\n                isGroupByOpen: false,\n            });\n            if (onItemClicked) {\n                onItemClicked(`${tagPrefix}${selection}`);\n            }\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({ isGroupByOpen });\n        };\n        this.handleGroupByClear = this.handleGroupByClear.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { groupBy } = this.props;\n        if (prevProps.groupBy !== groupBy) {\n            this.setState({ currentItem: this.getCurrentGroupBy() });\n        }\n    }\n    render() {\n        const { isDisabled, t } = this.props;\n        const { currentItem, isGroupByOpen } = this.state;\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(Select, { \"aria-label\": t('group_by.tag_key_aria_label'), isDisabled: isDisabled, onClear: this.handleGroupByClear, onToggle: this.handleGroupByToggle, onSelect: this.handleGroupBySelect, isOpen: isGroupByOpen, placeholderText: t('group_by.tag_key_placeholder'), selections: currentItem, variant: SelectVariant.typeahead }, this.getGroupByItems())));\n    }\n}\nconst GroupByTag = translate()(GroupByTagBase);\nexport { GroupByTag };\n","import { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport { getQuery, orgUnitIdKey, parseQuery, tagKey, tagPrefix, } from 'api/queries/query';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { styles } from './groupBy.styles';\nimport { GroupByOrg } from './groupByOrg';\nimport { GroupByTag } from './groupByTag';\nconst groupByOrgOptions = [{ label: orgUnitIdKey, value: orgUnitIdKey }];\nconst groupByTagOptions = [{ label: tagKey, value: tagKey }];\nconst orgReportType = \"org\" /* org */;\nconst tagReportType = \"tag\" /* tag */;\nclass GroupByBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            defaultItem: this.props.groupBy || this.props.options[0].value,\n            isGroupByOpen: false,\n            isGroupByOrgVisible: false,\n            isGroupByTagVisible: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleGroupByClick = value => {\n            const { onItemClicked } = this.props;\n            if (value === orgUnitIdKey || value === tagKey) {\n                this.setState({\n                    currentItem: value,\n                    isGroupByOrgVisible: value === orgUnitIdKey,\n                    isGroupByTagVisible: value === tagKey,\n                });\n            }\n            else {\n                this.setState({\n                    currentItem: value,\n                    isGroupByOrgVisible: false,\n                    isGroupByTagVisible: false,\n                });\n                if (onItemClicked) {\n                    onItemClicked(value);\n                }\n            }\n        };\n        this.getGroupByItems = () => {\n            const { options, orgReport, tagReport, t } = this.props;\n            const allOptions = [...options];\n            if (orgReport && orgReport.data && orgReport.data.length > 0) {\n                allOptions.push(...groupByOrgOptions);\n            }\n            if (tagReport && tagReport.data && tagReport.data.length > 0) {\n                allOptions.push(...groupByTagOptions);\n            }\n            return allOptions.map(option => (React.createElement(DropdownItem, { component: \"button\", key: option.value, onClick: () => this.handleGroupByClick(option.value) }, t(`group_by.values.${option.label}`))));\n        };\n        this.getCurrentGroupBy = () => {\n            const { getIdKeyForGroupBy } = this.props;\n            const { defaultItem } = this.state;\n            const queryFromRoute = parseQuery(location.search);\n            if (!(queryFromRoute && queryFromRoute.group_by)) {\n                return defaultItem;\n            }\n            let groupBy = getIdKeyForGroupBy(queryFromRoute.group_by);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by\n                ? Object.keys(queryFromRoute.group_by)\n                : [];\n            for (const key of groupByKeys) {\n                let index = key.indexOf(tagPrefix);\n                if (index !== -1) {\n                    groupBy = tagKey;\n                    this.setState({\n                        isGroupByTagVisible: true,\n                    });\n                    break;\n                }\n                index = key.indexOf(orgUnitIdKey);\n                if (index !== -1) {\n                    groupBy = orgUnitIdKey;\n                    this.setState({\n                        isGroupByOrgVisible: true,\n                    });\n                    break;\n                }\n            }\n            return groupBy !== 'date' ? groupBy : defaultItem;\n        };\n        this.handleGroupBySelect = event => {\n            this.setState({\n                isGroupByOpen: !this.state.isGroupByOpen,\n            });\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({\n                isGroupByOpen,\n            });\n        };\n        this.handleGroupByClick = this.handleGroupByClick.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType, showOrgs, showTags, } = this.props;\n        if (showOrgs) {\n            fetchReport(reportPathsType, orgReportType, queryString);\n        }\n        if (showTags) {\n            fetchReport(reportPathsType, tagReportType, queryString);\n        }\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, groupBy, queryString, reportPathsType, showOrgs, showTags, } = this.props;\n        if (prevProps.groupBy !== groupBy) {\n            if (showOrgs) {\n                fetchReport(reportPathsType, orgReportType, queryString);\n            }\n            if (showTags) {\n                fetchReport(reportPathsType, tagReportType, queryString);\n            }\n            this.setState({ currentItem: this.getCurrentGroupBy() });\n        }\n    }\n    render() {\n        const { getIdKeyForGroupBy, groupBy, isDisabled = false, onItemClicked, orgReport, t, tagReport, } = this.props;\n        const { currentItem, isGroupByOpen, isGroupByOrgVisible, isGroupByTagVisible, } = this.state;\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(\"label\", { style: styles.groupBySelectorLabel },\n                t('group_by.view'),\n                \":\"),\n            React.createElement(Dropdown, { onSelect: this.handleGroupBySelect, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled, onToggle: this.handleGroupByToggle }, t(`group_by.values.${currentItem}`)), isOpen: isGroupByOpen, dropdownItems: [this.getGroupByItems()] }),\n            Boolean(isGroupByOrgVisible) && (React.createElement(GroupByOrg, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: isDisabled, onItemClicked: onItemClicked, options: groupByOrgOptions, report: orgReport })),\n            Boolean(isGroupByTagVisible) && (React.createElement(GroupByTag, { groupBy: groupBy, isDisabled: isDisabled, onItemClicked: onItemClicked, options: groupByTagOptions, report: tagReport }))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportPathsType }) => {\n    const queryString = getQuery({\n    // key_only: true\n    });\n    const orgReport = reportSelectors.selectReport(state, reportPathsType, orgReportType, queryString);\n    const orgReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, orgReportType, queryString);\n    const tagReport = reportSelectors.selectReport(state, reportPathsType, tagReportType, queryString);\n    const tagReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, tagReportType, queryString);\n    return {\n        queryString,\n        orgReport,\n        orgReportFetchStatus,\n        tagReport,\n        tagReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst GroupBy = translate()(connect(mapStateToProps, mapDispatchToProps)(GroupByBase));\nexport { GroupBy };\n","import { global_BackgroundColor_light_100, global_spacer_md, global_spacer_xl, } from '@patternfly/react-tokens';\nimport { css } from 'emotion';\nexport const styles = {\n    export: {\n        marginRight: global_spacer_md.value,\n    },\n    toolbarContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n        marginLeft: global_spacer_xl.value,\n        marginRight: global_spacer_xl.value,\n    },\n};\n// Workaround for https://github.com/patternfly/patternfly-react/issues/4477\nexport const selectOverride = css `\n  &.pf-c-select {\n    min-width: 250px;\n  }\n`;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Button, ButtonVariant, Dropdown, DropdownItem, DropdownPosition, DropdownToggle, InputGroup, Select, SelectOption, SelectVariant, TextInput, Toolbar, ToolbarContent, ToolbarFilter, ToolbarGroup, ToolbarItem, ToolbarToggleGroup, } from '@patternfly/react-core';\nimport { ExportIcon } from '@patternfly/react-icons/dist/js/icons/export-icon';\nimport { FilterIcon } from '@patternfly/react-icons/dist/js/icons/filter-icon';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport { orgUnitIdKey, orgUnitNameKey, tagKey, tagPrefix, } from 'api/queries/query';\nimport { cloneDeep } from 'lodash';\nimport { uniq, uniqBy } from 'lodash';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { isEqual } from 'utils/equal';\nimport { selectOverride, styles } from './dataToolbar.styles';\nconst defaultFilters = {\n    tag: {},\n};\n// If the number of tag keys are greater or equal, then show text input Vs select\n// See https://github.com/project-koku/koku/pull/2069\nconst tagKeyValueLimit = 50;\nexport class DataToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            categoryInput: '',\n            filters: cloneDeep(defaultFilters),\n            isCategoryDropdownOpen: false,\n            isOrgUnitSelectExpanded: false,\n            isTagValueDropdownOpen: false,\n            isTagKeySelectExpanded: false,\n            isTagValueSelectExpanded: false,\n            tagKeyValueInput: '',\n        };\n        this.state = Object.assign({}, this.defaultState);\n        // Initialize\n        this.getDefaultCategory = () => {\n            const { categoryOptions, groupBy, query } = this.props;\n            if (!categoryOptions) {\n                return 'name';\n            }\n            if (query && query.group_by && query.group_by[orgUnitIdKey]) {\n                return orgUnitIdKey;\n            }\n            for (const option of categoryOptions) {\n                if (groupBy === option.key ||\n                    (groupBy && groupBy.indexOf(tagPrefix) !== -1 && option.key === tagKey)) {\n                    return option.key;\n                }\n            }\n            return categoryOptions[0].key;\n        };\n        this.getActiveFilters = query => {\n            const filters = cloneDeep(defaultFilters);\n            if (query && query.filter_by) {\n                Object.keys(query.filter_by).forEach(key => {\n                    const values = Array.isArray(query.filter_by[key])\n                        ? [...query.filter_by[key]]\n                        : [query.filter_by[key]];\n                    if (key.indexOf(tagPrefix) !== -1) {\n                        filters.tag[key.substring(tagPrefix.length)] = values;\n                    }\n                    else {\n                        filters[key] = values;\n                    }\n                });\n            }\n            return filters;\n        };\n        this.onDelete = (type, chip) => {\n            // Todo: workaround for https://github.com/patternfly/patternfly-react/issues/3552\n            // This prevents us from using a localized string, if necessary\n            const filterType = type && type.key ? type.key : type;\n            const id = chip && chip.key ? chip.key : chip;\n            if (filterType) {\n                this.setState((prevState) => {\n                    if (prevState.filters.tag[filterType]) {\n                        // Todo: use ID\n                        prevState.filters.tag[filterType] = prevState.filters.tag[filterType].filter(s => s !== id);\n                    }\n                    else if (prevState.filters[filterType]) {\n                        prevState.filters[filterType] = prevState.filters[filterType].filter(s => s !== id);\n                    }\n                    return {\n                        filters: prevState.filters,\n                    };\n                }, () => {\n                    const { filters } = this.state;\n                    const _filterType = filters.tag[filterType]\n                        ? `${tagPrefix}${filterType}`\n                        : filterType; // Todo: use ID\n                    this.props.onFilterRemoved(_filterType, id);\n                });\n            }\n            else {\n                this.setState({\n                    filters: cloneDeep(defaultFilters),\n                }, () => {\n                    this.props.onFilterRemoved(null); // Clear all\n                });\n            }\n        };\n        this.getCurrentCategoryOption = () => {\n            const { categoryOptions } = this.props;\n            const { currentCategory } = this.state;\n            if (!categoryOptions) {\n                return undefined;\n            }\n            for (const option of categoryOptions) {\n                if (currentCategory === option.key) {\n                    return option;\n                }\n            }\n            return categoryOptions[0];\n        };\n        this.onCategoryClick = value => {\n            this.setState({\n                currentCategory: value,\n            });\n        };\n        this.onCategorySelect = event => {\n            this.setState({\n                categoryInput: '',\n                currentTagKey: undefined,\n                isCategoryDropdownOpen: !this.state.isCategoryDropdownOpen,\n            });\n        };\n        this.onCategoryToggle = isOpen => {\n            this.setState({\n                isCategoryDropdownOpen: isOpen,\n            });\n        };\n        // Category input\n        this.getCategoryInput = categoryOption => {\n            const { t } = this.props;\n            const { currentCategory, filters, categoryInput } = this.state;\n            return (React.createElement(ToolbarFilter, { categoryName: categoryOption, chips: filters[categoryOption.key], deleteChip: this.onDelete, key: categoryOption.key, showToolbarItem: currentCategory === categoryOption.key },\n                React.createElement(InputGroup, null,\n                    React.createElement(TextInput, { name: `${categoryOption.key}-input`, id: `${categoryOption.key}-input`, type: \"search\", \"aria-label\": t(`filter_by.${categoryOption.key}_input_aria_label`), onChange: this.onCategoryInputChange, value: categoryInput, placeholder: t(`filter_by.${categoryOption.key}_placeholder`), onKeyDown: evt => this.onCategoryInput(evt, categoryOption.key) }),\n                    React.createElement(Button, { variant: ButtonVariant.control, \"aria-label\": t(`filter_by.${categoryOption.key}_button_aria_label`), onClick: evt => this.onCategoryInput(evt, categoryOption.key) },\n                        React.createElement(SearchIcon, null)))));\n        };\n        this.getDefaultCategoryOptions = () => {\n            const { t } = this.props;\n            return [{ name: t('filter_by.values.name'), key: 'name' }];\n        };\n        this.onCategoryInputChange = value => {\n            this.setState({ categoryInput: value });\n        };\n        this.onCategoryInput = (event, key) => {\n            const { categoryInput, currentCategory } = this.state;\n            if ((event.key && event.key !== 'Enter') || categoryInput.trim() === '') {\n                return;\n            }\n            this.setState((prevState) => {\n                const prevFilters = prevState.filters[key];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { [currentCategory]: prevFilters && prevFilters.includes(categoryInput)\n                            ? prevFilters\n                            : prevFilters\n                                ? [...prevFilters, categoryInput]\n                                : [categoryInput] }),\n                    categoryInput: '',\n                };\n            }, () => {\n                this.props.onFilterAdded(currentCategory, categoryInput);\n            });\n        };\n        // Org unit select\n        this.getOrgUnitSelect = () => {\n            const { t } = this.props;\n            const { currentCategory, filters, isOrgUnitSelectExpanded } = this.state;\n            const options = this.getOrgUnitOptions().map(option => ({\n                id: option.key,\n                toString: () => option.name,\n                compareTo: value => filters[orgUnitIdKey]\n                    ? filters[orgUnitIdKey].find(val => val === value.id)\n                    : false,\n            }));\n            const chips = []; // Get selected items as PatternFly's ToolbarChip type\n            const selections = []; // Select options and selections must be same type\n            if (filters[orgUnitIdKey] && Array.isArray(filters[orgUnitIdKey])) {\n                filters[orgUnitIdKey].map(id => {\n                    const option = options.find(val => val.id === id);\n                    if (option) {\n                        selections.push(option);\n                        chips.push({\n                            key: option.id,\n                            node: option.toString(),\n                        });\n                    }\n                });\n            }\n            // Todo: selectOverride is a workaround for https://github.com/patternfly/patternfly-react/issues/4477\n            return (React.createElement(ToolbarFilter, { categoryName: {\n                    key: orgUnitIdKey,\n                    name: t('filter_by.values.org_unit_id'),\n                }, chips: chips, deleteChip: this.onDelete, key: orgUnitIdKey, showToolbarItem: currentCategory === orgUnitIdKey },\n                React.createElement(Select, { className: selectOverride, variant: SelectVariant.checkbox, \"aria-label\": t('filter_by.org_unit_aria_label'), onToggle: this.onOrgUnitToggle, onSelect: this.onOrgUnitSelect, selections: selections, isOpen: isOrgUnitSelectExpanded, placeholderText: t('filter_by.org_unit_placeholder') }, options.map(option => (React.createElement(SelectOption, { description: option.id, key: option.id, value: option }))))));\n        };\n        this.onOrgUnitSelect = (event, selection) => {\n            const checked = event.target.checked;\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters[orgUnitIdKey]\n                    ? prevState.filters[orgUnitIdKey]\n                    : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign({}, prevState.filters.tag), [orgUnitIdKey]: checked\n                            ? [...prevSelections, selection.id]\n                            : prevSelections.filter(value => value !== selection.id) }),\n                };\n            }, () => {\n                if (checked) {\n                    this.props.onFilterAdded(orgUnitIdKey, selection.id);\n                }\n                else {\n                    this.onDelete(orgUnitIdKey, selection.id);\n                }\n            });\n        };\n        this.onOrgUnitToggle = isOpen => {\n            this.setState({\n                isOrgUnitSelectExpanded: isOpen,\n            });\n        };\n        // Tag key select\n        this.getTagKeySelect = () => {\n            const { t } = this.props;\n            const { currentCategory, currentTagKey, isTagKeySelectExpanded, } = this.state;\n            if (currentCategory !== tagKey) {\n                return null;\n            }\n            const selectOptions = this.getTagKeyOptions().map(selectOption => {\n                return React.createElement(SelectOption, { key: selectOption.key, value: selectOption.key });\n            });\n            return (React.createElement(ToolbarItem, null,\n                React.createElement(Select, { variant: SelectVariant.typeahead, \"aria-label\": t('filter_by.tag_key_aria_label'), onClear: this.onTagKeyClear, onToggle: this.onTagKeyToggle, onSelect: this.onTagKeySelect, isOpen: isTagKeySelectExpanded, placeholderText: t('filter_by.tag_key_placeholder'), selections: currentTagKey }, selectOptions)));\n        };\n        this.onTagKeyClear = () => {\n            this.setState({\n                currentTagKey: undefined,\n                isTagKeySelectExpanded: false,\n            });\n        };\n        this.onTagKeySelect = (event, selection, isPlaceholder) => {\n            this.setState({\n                currentTagKey: selection,\n                isTagKeySelectExpanded: !this.state.isTagKeySelectExpanded,\n            });\n        };\n        this.onTagKeyToggle = isOpen => {\n            this.setState({\n                isTagKeySelectExpanded: isOpen,\n            });\n        };\n        // Tag value select\n        this.getTagValueSelect = tagKeyOption => {\n            const { t } = this.props;\n            const { currentCategory, currentTagKey, filters, isTagValueSelectExpanded, tagKeyValueInput, } = this.state;\n            const selectOptions = this.getTagValueOptions().map(selectOption => {\n                return React.createElement(SelectOption, { key: selectOption.key, value: selectOption.key });\n            });\n            return (React.createElement(ToolbarFilter, { categoryName: tagKeyOption, chips: filters.tag[tagKeyOption.key], deleteChip: this.onDelete, key: tagKeyOption.key, showToolbarItem: currentCategory === tagKey && currentTagKey === tagKeyOption.key }, Boolean(selectOptions.length < tagKeyValueLimit) ? (React.createElement(Select, { variant: SelectVariant.checkbox, \"aria-label\": t('filter_by.tag_value_aria_label'), onToggle: this.onTagValueToggle, onSelect: this.onTagValueSelect, selections: filters.tag[tagKeyOption.key] ? filters.tag[tagKeyOption.key] : [], isOpen: isTagValueSelectExpanded, placeholderText: t('filter_by.tag_value_placeholder') }, selectOptions)) : (React.createElement(InputGroup, null,\n                React.createElement(TextInput, { name: \"tagkeyvalue-input\", id: \"tagkeyvalue-input\", type: \"search\", \"aria-label\": t('filter_by.tag_value_aria_label'), onChange: this.onTagValueInputChange, value: tagKeyValueInput, placeholder: t('filter_by.tag_value_input_placeholder'), onKeyDown: evt => this.onTagValueInput(evt) }),\n                React.createElement(Button, { variant: ButtonVariant.control, \"aria-label\": t('filter_by.tag_value_button_aria_label'), onClick: evt => this.onTagValueInput(evt) },\n                    React.createElement(SearchIcon, null))))));\n        };\n        this.onTagValueInputChange = value => {\n            this.setState({ tagKeyValueInput: value });\n        };\n        this.onTagValueInput = event => {\n            const { currentTagKey, tagKeyValueInput } = this.state;\n            if ((event.key && event.key !== 'Enter') ||\n                tagKeyValueInput.trim() === '') {\n                return;\n            }\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters.tag[currentTagKey]\n                    ? prevState.filters.tag[currentTagKey]\n                    : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign(Object.assign({}, prevState.filters.tag), { [currentTagKey]: [...prevSelections, tagKeyValueInput] }) }),\n                    tagKeyValueInput: '',\n                };\n            }, () => {\n                this.props.onFilterAdded(`${tagPrefix}${currentTagKey}`, tagKeyValueInput);\n            });\n        };\n        this.onTagValueSelect = (event, selection) => {\n            const { currentTagKey } = this.state;\n            const checked = event.target.checked;\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters.tag[currentTagKey]\n                    ? prevState.filters.tag[currentTagKey]\n                    : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign(Object.assign({}, prevState.filters.tag), { [currentTagKey]: checked\n                                ? [...prevSelections, selection]\n                                : prevSelections.filter(value => value !== selection) }) }),\n                };\n            }, () => {\n                if (checked) {\n                    this.props.onFilterAdded(`${tagPrefix}${currentTagKey}`, selection);\n                }\n                else {\n                    this.onDelete(currentTagKey, selection);\n                }\n            });\n        };\n        this.onTagValueToggle = isOpen => {\n            this.setState({\n                isTagValueSelectExpanded: isOpen,\n            });\n        };\n        // Export button\n        this.getExportButton = () => {\n            const { isExportDisabled } = this.props;\n            return (React.createElement(ToolbarItem, null,\n                React.createElement(Button, { isDisabled: isExportDisabled, onClick: this.handleExportClicked, variant: ButtonVariant.plain },\n                    React.createElement(ExportIcon, null))));\n        };\n        this.handleExportClicked = () => {\n            this.props.onExportClicked();\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            currentCategory: this.getDefaultCategory(),\n        });\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { categoryOptions, groupBy, orgReport, query, tagReport, } = this.props;\n        if (categoryOptions !== prevProps.categoryOptions ||\n            groupBy !== prevProps.groupBy ||\n            (query && !isEqual(query, prevProps.query)) ||\n            (orgReport && !isEqual(orgReport, prevProps.orgReport)) ||\n            (tagReport && !isEqual(tagReport, prevProps.tagReport))) {\n            this.setState(() => {\n                const filters = this.getActiveFilters(query);\n                return categoryOptions !== prevProps.categoryOptions ||\n                    prevProps.groupBy !== groupBy\n                    ? {\n                        currentCategory: this.getDefaultCategory(),\n                        filters,\n                    }\n                    : {\n                        filters,\n                    };\n            });\n        }\n    }\n    // Category dropdown\n    getCategoryDropdown() {\n        const { categoryOptions } = this.props;\n        const { isCategoryDropdownOpen } = this.state;\n        if (!categoryOptions) {\n            return null;\n        }\n        return (React.createElement(ToolbarItem, null,\n            React.createElement(Dropdown, { onSelect: this.onCategorySelect, position: DropdownPosition.left, toggle: React.createElement(DropdownToggle, { onToggle: this.onCategoryToggle, style: { width: '100%' } },\n                    React.createElement(FilterIcon, null),\n                    \" \",\n                    this.getCurrentCategoryOption().name), isOpen: isCategoryDropdownOpen, dropdownItems: categoryOptions &&\n                    categoryOptions.map(option => (React.createElement(DropdownItem, { key: option.key, onClick: () => this.onCategoryClick(option.key) }, option.name))), style: { width: '100%' } })));\n    }\n    getOrgUnitOptions() {\n        const { orgReport } = this.props;\n        let options = [];\n        if (!(orgReport && orgReport.data)) {\n            return options;\n        }\n        // Sort all names first\n        const sortedData = orgReport.data.sort((a, b) => {\n            if (a[orgUnitNameKey] < b[orgUnitNameKey]) {\n                return -1;\n            }\n            if (a[orgUnitNameKey] > b[orgUnitNameKey]) {\n                return 1;\n            }\n            return 0;\n        });\n        // Move roots first\n        const roots = sortedData.filter(org => org.level === 0);\n        const filteredOrgs = sortedData.filter(org => org.level !== 0);\n        roots.map(root => {\n            const item = sortedData.find(org => org[orgUnitIdKey] === root[orgUnitIdKey]);\n            filteredOrgs.unshift(item);\n        });\n        if (filteredOrgs.length > 0) {\n            options = filteredOrgs.map(org => {\n                return {\n                    key: org[orgUnitIdKey],\n                    name: org[orgUnitNameKey],\n                };\n            });\n        }\n        return options;\n    }\n    getTagKeyOptions() {\n        const { tagReport } = this.props;\n        let data = [];\n        let options = [];\n        if (!(tagReport && tagReport.data)) {\n            return options;\n        }\n        // If the key_only param is used, we have an array of strings\n        let hasTagKeys = false;\n        for (const item of tagReport.data) {\n            if (item.hasOwnProperty('key')) {\n                hasTagKeys = true;\n                break;\n            }\n        }\n        // Workaround for https://github.com/project-koku/koku/issues/1797\n        if (hasTagKeys) {\n            const keepData = tagReport.data.map((_a) => {\n                var { type } = _a, keepProps = __rest(_a, [\"type\"]);\n                return keepProps;\n            });\n            data = uniqBy(keepData, 'key');\n        }\n        else {\n            data = uniq(tagReport.data);\n        }\n        if (data.length > 0) {\n            options = data.map(tag => {\n                const key = hasTagKeys ? tag.key : tag;\n                return {\n                    key,\n                    name: key,\n                };\n            });\n        }\n        return options;\n    }\n    getTagValueOptions() {\n        const { tagReport } = this.props;\n        const { currentTagKey } = this.state;\n        let data = [];\n        if (tagReport && tagReport.data) {\n            data = [...new Set([...tagReport.data])]; // prune duplicates\n        }\n        let options = [];\n        if (data.length > 0) {\n            for (const tag of data) {\n                if (currentTagKey === tag.key && tag.values) {\n                    options = tag.values.map(val => {\n                        return {\n                            key: val,\n                            name: val,\n                        };\n                    });\n                    break;\n                }\n            }\n        }\n        return options;\n    }\n    render() {\n        const { categoryOptions, pagination, showExport } = this.props;\n        const options = categoryOptions\n            ? categoryOptions\n            : this.getDefaultCategoryOptions();\n        // Todo: clearAllFilters workaround https://github.com/patternfly/patternfly-react/issues/4222\n        return (React.createElement(\"div\", { style: styles.toolbarContainer },\n            React.createElement(Toolbar, { id: \"details-toolbar\", clearAllFilters: this.onDelete, collapseListedFiltersBreakpoint: \"xl\" },\n                React.createElement(ToolbarContent, null,\n                    React.createElement(ToolbarToggleGroup, { breakpoint: \"xl\", toggleIcon: React.createElement(FilterIcon, null) },\n                        React.createElement(ToolbarGroup, { variant: \"filter-group\" },\n                            this.getCategoryDropdown(),\n                            this.getTagKeySelect(),\n                            this.getTagKeyOptions().map(option => this.getTagValueSelect(option)),\n                            this.getOrgUnitSelect(),\n                            options &&\n                                options\n                                    .filter(option => option.key !== tagKey && option.key !== orgUnitIdKey)\n                                    .map(option => this.getCategoryInput(option))),\n                        Boolean(showExport) && (React.createElement(ToolbarGroup, null, this.getExportButton()))),\n                    React.createElement(ToolbarItem, { alignment: { default: 'alignRight' }, variant: \"pagination\" }, pagination)))));\n    }\n}\nconst DataToolbar = translate()(DataToolbarBase);\nexport { DataToolbar };\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    return 'date';\n}\n","import { global_BackgroundColor_light_100, global_Color_100, global_Color_200, global_FontSize_md, global_FontSize_sm, global_spacer_md, global_spacer_sm, global_spacer_xl, } from '@patternfly/react-tokens';\nexport const styles = {\n    cost: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    costLabel: {},\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    costLabelDate: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_200.var,\n    },\n    header: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: global_spacer_xl.var,\n        backgroundColor: global_BackgroundColor_light_100.var,\n    },\n    info: {\n        marginLeft: global_spacer_sm.value,\n        verticalAlign: 'middle',\n    },\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Popover, Title, Tooltip } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons/dist/js/icons/info-circle-icon';\nimport { getQuery } from 'api/queries/ocpQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport { GroupBy } from 'pages/details/components/groupBy/groupBy';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpProvidersQuery, providersSelectors } from 'store/providers';\nimport { getIdKeyForGroupBy, } from 'utils/computedReport/getComputedOcpReportItems';\nimport { getSinceDateRangeString } from 'utils/dateRange';\nimport { formatValue } from 'utils/formatValue';\nimport { styles } from './detailsHeader.styles';\nconst baseQuery = {\n    delta: 'cost',\n    filter: {\n        time_scope_units: 'month',\n        time_scope_value: -1,\n        resolution: 'monthly',\n    },\n};\nconst groupByOptions = [\n    { label: 'cluster', value: 'cluster' },\n    { label: 'node', value: 'node' },\n    { label: 'project', value: 'project' },\n];\nconst reportPathsType = \"ocp\" /* ocp */;\nclass DetailsHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            showPopover: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handlePopoverClick = () => {\n            this.setState({\n                show: !this.state.showPopover,\n            });\n        };\n    }\n    render() {\n        const { groupBy, onGroupByClicked, providers, providersError, report, t, } = this.props;\n        const showContent = report &&\n            !providersError &&\n            providers &&\n            providers.meta &&\n            providers.meta.count > 0;\n        let cost = React.createElement(EmptyValueState, null);\n        let supplementaryCost = React.createElement(EmptyValueState, null);\n        let infrastructureCost = React.createElement(EmptyValueState, null);\n        if (report && report.meta && report.meta.total) {\n            const hasCost = report.meta.total.cost && report.meta.total.cost.total;\n            const hasSupplementaryCost = report.meta.total.supplementary &&\n                report.meta.total.supplementary.total;\n            const hasInfrastructureCost = report.meta.total.infrastructure &&\n                report.meta.total.infrastructure.total;\n            cost = formatValue(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD');\n            supplementaryCost = formatValue(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost\n                ? report.meta.total.supplementary.total.units\n                : 'USD');\n            infrastructureCost = formatValue(hasInfrastructureCost\n                ? report.meta.total.infrastructure.total.value\n                : 0, hasInfrastructureCost\n                ? report.meta.total.infrastructure.total.units\n                : 'USD');\n        }\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", null,\n                React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" }, t('ocp_details.title')),\n                React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: !showContent, onItemClicked: onGroupByClicked, options: groupByOptions, reportPathsType: reportPathsType, showTags: true })),\n            Boolean(showContent) && (React.createElement(\"div\", { style: styles.cost },\n                React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: \"4xl\" },\n                    React.createElement(Tooltip, { content: t('ocp_details.total_cost_tooltip', {\n                            supplementaryCost,\n                            infrastructureCost,\n                        }), enableFlip: true },\n                        React.createElement(\"span\", null, cost))),\n                React.createElement(\"div\", { style: styles.costLabel },\n                    React.createElement(\"div\", { style: styles.costLabelUnit },\n                        t('ocp_details.total_cost'),\n                        React.createElement(\"span\", { style: styles.infoIcon },\n                            React.createElement(Popover, { \"aria-label\": t('ocp_details.supplementary_aria_label'), enableFlip: true, bodyContent: React.createElement(React.Fragment, null,\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('ocp_details.supplementary_cost_title')),\n                                    React.createElement(\"p\", null, t('ocp_details.supplementary_cost_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('ocp_details.infrastructure_cost_title')),\n                                    React.createElement(\"p\", null, t('ocp_details.infrastructure_cost_desc'))) },\n                                React.createElement(InfoCircleIcon, { style: styles.info, onClick: this.handlePopoverClick })))),\n                    React.createElement(\"div\", { style: styles.costLabelDate }, getSinceDateRangeString()))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const queryString = getQuery(baseQuery);\n    const providersQueryString = getProvidersQuery(ocpProvidersQuery);\n    const providers = providersSelectors.selectProviders(state, \"ocp\" /* ocp */, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, \"ocp\" /* ocp */, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"ocp\" /* ocp */, providersQueryString);\n    return {\n        providers,\n        providersError,\n        providersFetchStatus,\n        queryString,\n    };\n});\nconst DetailsHeader = translate()(connect(mapStateToProps, {})(DetailsHeaderBase));\nexport { DetailsHeader };\n","import { global_BackgroundColor_light_100, global_danger_color_100, global_disabled_color_100, global_FontSize_xs, global_spacer_3xl, global_spacer_xs, global_success_color_100, } from '@patternfly/react-tokens';\nimport { css } from 'emotion';\nexport const styles = {\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n};\nexport const monthOverMonthOverride = css `\n  div {\n    display: block;\n    margin-right: 0;\n    margin-bottom: ${global_spacer_xs.value};\n    &.iconOverride {\n      &.decrease {\n        color: ${global_success_color_100.value};\n      }\n      &.increase {\n        color: ${global_danger_color_100.value};\n      }\n      .fa-sort-up,\n      .fa-sort-down {\n        margin-left: 10px;\n      }\n      .fa-sort-up::before {\n        color: ${global_danger_color_100.value};\n      }\n      .fa-sort-down::before {\n        color: ${global_success_color_100.value};\n      }\n      span {\n        margin-right: -17px !important;\n      }\n    }\n  }\n`;\nexport const tableOverride = css `\n  &.pf-c-table {\n    thead th + th + th {\n      .pf-c-table__button {\n        margin-left: auto\n      }\n      text-align: right;\n    }\n    tbody td + td + td + td {\n      text-align: right;\n    }\n  }\n`;\n","import { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/js/icons/calculator-icon';\nimport { sortable, SortByDirection, Table, TableBody, TableHeader, } from '@patternfly/react-table';\nimport { getQuery, getQueryRoute } from 'api/queries/ocpQuery';\nimport { tagPrefix } from 'api/queries/query';\nimport { EmptyFilterState } from 'components/state/emptyFilterState/emptyFilterState';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport { Actions } from 'pages/details/components/actions/actions';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedOcpReportItems';\nimport { getUnsortedComputedReportItems, } from 'utils/computedReport/getComputedReportItems';\nimport { getForDateRangeString, getNoDataForDateRangeString, } from 'utils/dateRange';\nimport { formatCurrency } from 'utils/formatValue';\nimport { monthOverMonthOverride, styles, tableOverride, } from './detailsTable.styles';\nconst reportPathsType = \"ocp\" /* ocp */;\nclass DetailsTableBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.buildCostLink = (label) => {\n            const { groupBy, query } = this.props;\n            const newQuery = Object.assign(Object.assign({}, query), { group_by: {\n                    [groupBy]: label,\n                } });\n            return `/details/ocp/breakdown?${getQueryRoute(newQuery)}`;\n        };\n        this.initDatum = () => {\n            const { query, report, t } = this.props;\n            if (!query || !report) {\n                return;\n            }\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = this.getGroupByTagKey();\n            const total = formatCurrency(report &&\n                report.meta &&\n                report.meta.total &&\n                report.meta.total.cost &&\n                report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0);\n            const columns = groupByTagKey\n                ? [\n                    // Sorting with tag keys is not supported\n                    {\n                        title: t('ocp_details.tag_column_title'),\n                    },\n                    {\n                        title: t('ocp_details.change_column_title'),\n                    },\n                    {\n                        title: t('ocp_details.infrastructure_cost_column_title'),\n                    },\n                    {\n                        title: t('ocp_details.supplementary_cost_column_title'),\n                    },\n                    {\n                        orderBy: 'cost',\n                        title: t('ocp_details.cost_column_title', { total }),\n                        transforms: [sortable],\n                    },\n                    {\n                        title: '',\n                    },\n                ]\n                : [\n                    {\n                        orderBy: groupById,\n                        title: t('ocp_details.name_column_title', { groupBy: groupById }),\n                        transforms: [sortable],\n                    },\n                    {\n                        title: t('ocp_details.change_column_title'),\n                    },\n                    {\n                        orderBy: 'infrastructure_cost',\n                        title: t('ocp_details.infrastructure_cost_column_title'),\n                    },\n                    {\n                        orderBy: 'supplementary_cost',\n                        title: t('ocp_details.supplementary_cost_column_title'),\n                    },\n                    {\n                        orderBy: 'cost',\n                        title: t('ocp_details.cost_column_title'),\n                        transforms: [sortable],\n                    },\n                    {\n                        title: '',\n                    },\n                ];\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey || groupById,\n            });\n            computedItems.map((item, index) => {\n                const label = item && item.label !== null ? item.label : '';\n                const monthOverMonth = this.getMonthOverMonthCost(item, index);\n                const InfrastructureCost = this.getInfrastructureCost(item, index);\n                const supplementaryCost = this.getSupplementaryCost(item, index);\n                const cost = this.getTotalCost(item, index);\n                const actions = this.getActions(item, index);\n                let name = React.createElement(Link, { to: this.buildCostLink(label.toString()) }, label);\n                if (label === `no-${groupById}` || label === `no-${groupByTagKey}`) {\n                    name = label;\n                }\n                rows.push({\n                    cells: [\n                        { title: React.createElement(\"div\", null, name) },\n                        { title: React.createElement(\"div\", null, monthOverMonth) },\n                        { title: React.createElement(\"div\", null, InfrastructureCost) },\n                        { title: React.createElement(\"div\", null, supplementaryCost) },\n                        { title: React.createElement(\"div\", null, cost) },\n                        { title: React.createElement(\"div\", null, actions) },\n                    ],\n                    isOpen: false,\n                    item,\n                });\n            });\n            const loadingRows = [{\n                    heightAuto: true,\n                    cells: [\n                        {\n                            props: { colSpan: 7 },\n                            title: (React.createElement(Bullseye, null,\n                                React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                    React.createElement(Spinner, { size: \"xl\" }))))\n                        },\n                    ]\n                }];\n            this.setState({\n                columns,\n                loadingRows,\n                rows,\n                sortBy: {},\n            });\n        };\n        this.getActions = (item, index) => {\n            const { groupBy, query } = this.props;\n            return (React.createElement(Actions, { groupBy: groupBy, item: item, providerType: \"ocp\" /* ocp */, query: query, reportPathsType: reportPathsType, showPriceListOption: groupBy === 'cluster' }));\n        };\n        this.getEmptyState = () => {\n            const { query, t } = this.props;\n            for (const val of Object.values(query.filter_by)) {\n                if (val !== '*') {\n                    return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                }\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, t('ocp_details.empty_state'))));\n        };\n        this.getSupplementaryCost = (item, index) => {\n            const { report, t } = this.props;\n            const total = report &&\n                report.meta &&\n                report.meta.total &&\n                report.meta.total.supplementary &&\n                report.meta.total.supplementary.total\n                ? report.meta.total.supplementary.total.value\n                : 0;\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.supplementary),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, t('percent_of_cost', {\n                    value: ((item.supplementary / total) * 100).toFixed(2),\n                }))));\n        };\n        this.getGroupByTagKey = () => {\n            const { query } = this.props;\n            let groupByTagKey;\n            for (const groupBy of Object.keys(query.group_by)) {\n                const tagIndex = groupBy.indexOf(tagPrefix);\n                if (tagIndex !== -1) {\n                    groupByTagKey = groupBy.substring(tagIndex + tagPrefix.length);\n                    break;\n                }\n            }\n            return groupByTagKey;\n        };\n        this.getInfrastructureCost = (item, index) => {\n            const { report, t } = this.props;\n            const total = report &&\n                report.meta &&\n                report.meta.total &&\n                report.meta.total.infrastructure &&\n                report.meta.total.infrastructure.total &&\n                report.meta.total.infrastructure.total.value\n                ? report.meta.total.infrastructure.total.value\n                : 0;\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.infrastructure),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, t('percent_of_cost', {\n                    value: ((item.infrastructure / total) * 100).toFixed(2),\n                }))));\n        };\n        this.getMonthOverMonthCost = (item, index) => {\n            const { t } = this.props;\n            const value = formatCurrency(Math.abs(item.cost - item.deltaValue));\n            const percentage = item.deltaPercent !== null ? Math.abs(item.deltaPercent).toFixed(2) : 0;\n            const showPercentage = !(percentage === 0 || percentage === '0.00');\n            const showValue = item.deltaPercent !== null; // Workaround for https://github.com/project-koku/koku/issues/1395\n            let iconOverride;\n            if (showPercentage) {\n                iconOverride = 'iconOverride';\n                if (item.deltaPercent !== null && item.deltaValue < 0) {\n                    iconOverride += ' decrease';\n                }\n                if (item.deltaPercent !== null && item.deltaValue > 0) {\n                    iconOverride += ' increase';\n                }\n            }\n            if (!showValue) {\n                return getNoDataForDateRangeString();\n            }\n            else {\n                return (React.createElement(\"div\", { className: monthOverMonthOverride },\n                    React.createElement(\"div\", { className: iconOverride, key: `month-over-month-cost-${index}` },\n                        Boolean(showPercentage) ? (t('percent', { value: percentage })) : (React.createElement(EmptyValueState, null)),\n                        Boolean(showPercentage &&\n                            item.deltaPercent !== null &&\n                            item.deltaValue > 0) && (React.createElement(\"span\", { className: \"fa fa-sort-up\", style: styles.infoArrow, key: `month-over-month-icon-${index}` })),\n                        Boolean(showPercentage &&\n                            item.deltaPercent !== null &&\n                            item.deltaValue < 0) && (React.createElement(\"span\", { className: \"fa fa-sort-down\", style: Object.assign(Object.assign({}, styles.ininfoArrow), styles.infoArrowDesc), key: `month-over-month-icon-${index}` }))),\n                    React.createElement(\"div\", { style: styles.infoDescription, key: `month-over-month-info-${index}` }, getForDateRangeString(value))));\n            }\n        };\n        this.getSortBy = () => {\n            const { query } = this.props;\n            const { columns } = this.state;\n            let index = -1;\n            let direction = SortByDirection.asc;\n            for (const key of Object.keys(query.order_by)) {\n                let c = 0;\n                for (const column of columns) {\n                    if (column.orderBy === key) {\n                        direction =\n                            query.order_by[key] === 'asc'\n                                ? SortByDirection.asc\n                                : SortByDirection.desc;\n                        index = c + 1;\n                        break;\n                    }\n                    c++;\n                }\n            }\n            return index > -1 ? { index, direction } : {};\n        };\n        this.getTotalCost = (item, index) => {\n            const { report, t } = this.props;\n            const cost = report &&\n                report.meta &&\n                report.meta.total &&\n                report.meta.total.cost &&\n                report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.cost),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, t('percent_of_cost', {\n                    value: ((item.cost / cost) * 100).toFixed(2),\n                }))));\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected } = this.props;\n            let rows;\n            if (rowId === -1) {\n                rows = this.state.rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                rows = [...this.state.rows];\n                rows[rowId].selected = isSelected;\n            }\n            if (onSelected) {\n                const selectedItems = [];\n                for (const row of rows) {\n                    if (row.selected && row.item && !row.parent) {\n                        selectedItems.push(row.item);\n                    }\n                }\n                onSelected(selectedItems);\n            }\n            this.setState({ rows });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { onSort } = this.props;\n            const { columns } = this.state;\n            if (onSort) {\n                const orderBy = columns[index - 1].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { query, report } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data\n            ? JSON.stringify(prevProps.report.data)\n            : '';\n        if (getQuery(prevProps.query) !== getQuery(query) ||\n            previousReport !== currentReport) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { isLoading } = this.props;\n        const { columns, loadingRows, rows } = this.state;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Table, { \"aria-label\": \"details-table\", cells: columns, className: tableOverride, rows: isLoading ? loadingRows : rows, sortBy: this.getSortBy(), onSelect: isLoading ? undefined : this.handleOnSelect, onSort: this.handleOnSort, gridBreakPoint: \"grid-2xl\" },\n                React.createElement(TableHeader, null),\n                React.createElement(TableBody, null)),\n            Boolean(rows.length === 0) && (React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState()))));\n    }\n}\nconst DetailsTable = translate()(DetailsTableBase);\nexport { DetailsTable };\n","import { getQuery } from 'api/queries/ocpQuery';\nimport { tagKey } from 'api/queries/query';\nimport { DataToolbar } from 'pages/details/components/dataToolbar/dataToolbar';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { isEqual } from 'utils/equal';\nconst reportType = \"tag\" /* tag */;\nconst reportPathsType = \"ocp\" /* ocp */;\nexport class DetailsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { report, t } = this.props;\n            const options = [\n                { name: t('filter_by.values.cluster'), key: 'cluster' },\n                { name: t('filter_by.values.node'), key: 'node' },\n                { name: t('filter_by.values.project'), key: 'project' },\n                { name: t('filter_by.values.tag'), key: tagKey },\n            ];\n            return report && report.data && report.data.length\n                ? options\n                : options.filter(option => option.key !== tagKey);\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, queryString } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        });\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { fetchReport, query, queryString, report } = this.props;\n        if (query && !isEqual(query, prevProps.query)) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n        if (!isEqual(report, prevProps.report)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            });\n        }\n    }\n    render() {\n        const { groupBy, isExportDisabled, onExportClicked, onFilterAdded, onFilterRemoved, pagination, query, report, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, groupBy: groupBy, isExportDisabled: isExportDisabled, onExportClicked: onExportClicked, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, pagination: pagination, query: query, tagReport: report, showExport: true }));\n    }\n}\nconst mapStateToProps = createMapStateToProps(state => {\n    // Omitting key_only to share a single request -- the toolbar needs key values\n    const queryString = getQuery({\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n    });\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst DetailsToolbar = translate()(connect(mapStateToProps, mapDispatchToProps)(DetailsToolbarBase));\nexport { DetailsToolbar };\n","import { global_BackgroundColor_light_100, global_spacer_md, global_spacer_xl, } from '@patternfly/react-tokens';\nexport const styles = {\n    content: {\n        paddingBottom: global_spacer_xl.value,\n        paddingTop: global_spacer_xl.value,\n    },\n    ocpDetails: {\n        minHeight: '100%',\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_xl.value,\n        marginRight: global_spacer_xl.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        padding: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_xl.value,\n        marginRight: global_spacer_xl.value,\n    },\n};\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { getQuery, getQueryRoute, parseQuery, } from 'api/queries/ocpQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { tagPrefix } from 'api/queries/query';\nimport { ExportModal } from 'pages/details/components/export/exportModal';\nimport Loading from 'pages/state/loading';\nimport NoProviders from 'pages/state/noProviders';\nimport NotAuthorized from 'pages/state/notAuthorized/notAuthorized';\nimport NotAvailable from 'pages/state/notAvailable';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpProvidersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedOcpReportItems';\nimport { getUnsortedComputedReportItems, } from 'utils/computedReport/getComputedReportItems';\nimport { DetailsHeader } from './detailsHeader';\nimport { DetailsTable } from './detailsTable';\nimport { DetailsToolbar } from './detailsToolbar';\nimport { styles } from './ocpDetails.styles';\nconst baseQuery = {\n    delta: 'cost',\n    filter: {\n        limit: 10,\n        offset: 0,\n        resolution: 'monthly',\n        time_scope_units: 'month',\n        time_scope_value: -1,\n    },\n    filter_by: {},\n    group_by: {\n        project: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst reportType = \"cost\" /* cost */;\nconst reportPathsType = \"ocp\" /* ocp */;\nclass OcpDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = (computedItems) => {\n            const { isExportModalOpen, selectedItems } = this.state;\n            const { query } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = this.getGroupByTagKey();\n            return (React.createElement(ExportModal, { isAllItems: selectedItems.length === computedItems.length, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: selectedItems, onClose: this.handleExportModalClose, query: query, reportPathsType: reportPathsType }));\n        };\n        this.getGroupByTagKey = () => {\n            const { query } = this.props;\n            let groupByTagKey;\n            for (const groupBy of Object.keys(query.group_by)) {\n                const tagIndex = groupBy.indexOf(tagPrefix);\n                if (tagIndex !== -1) {\n                    groupByTagKey = groupBy.substring(tagIndex + tagPrefix.length);\n                    break;\n                }\n            }\n            return groupByTagKey;\n        };\n        this.getPagination = (isBottom = false) => {\n            const { report } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = offset / limit + 1;\n            return (React.createElement(Pagination, { isCompact: true, itemCount: count, onPerPageSelect: this.handlePerPageSelect, onSetPage: this.handleSetPage, page: page, perPage: limit, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: \"`pagination${isBottom ? '-bottom' : ''}`\" }));\n        };\n        this.getTable = () => {\n            const { query, report, reportFetchStatus } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = this.getGroupByTagKey();\n            return (React.createElement(DetailsTable, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isLoading: reportFetchStatus === 1 /* inProgress */, onSelected: this.handleSelected, onSort: this.handleSort, query: query, report: report }));\n        };\n        this.getToolbar = () => {\n            const { selectedItems } = this.state;\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = this.getGroupByTagKey();\n            return (React.createElement(DetailsToolbar, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isExportDisabled: selectedItems.length === 0, onExportClicked: this.handleExportModalOpen, onFilterAdded: this.handleFilterAdded, onFilterRemoved: this.handleFilterRemoved, pagination: this.getPagination(), query: query, report: report }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleFilterAdded = (filterType, filterValue) => {\n            const { history, query } = this.props;\n            const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n            // Filter by * won't generate a new request if group_by * already exists\n            if (filterValue === '*' && newQuery.group_by[filterType] === '*') {\n                return;\n            }\n            if (newQuery.filter_by[filterType]) {\n                let found = false;\n                const filters = newQuery.filter_by[filterType];\n                if (!Array.isArray(filters)) {\n                    found = filterValue === newQuery.filter_by[filterType];\n                }\n                else {\n                    for (const filter of filters) {\n                        if (filter === filterValue) {\n                            found = true;\n                            break;\n                        }\n                    }\n                }\n                if (!found) {\n                    newQuery.filter_by[filterType] = [\n                        newQuery.filter_by[filterType],\n                        filterValue,\n                    ];\n                }\n            }\n            else {\n                newQuery.filter_by[filterType] = [filterValue];\n            }\n            const filteredQuery = this.getRouteForQuery(newQuery, true);\n            history.replace(filteredQuery);\n        };\n        this.handleFilterRemoved = (filterType, filterValue) => {\n            const { history, query } = this.props;\n            const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n            if (filterType === null) {\n                newQuery.filter_by = undefined; // Clear all\n            }\n            else if (filterValue === null) {\n                newQuery.filter_by[filterType] = undefined; // Clear all values\n            }\n            else if (Array.isArray(newQuery.filter_by[filterType])) {\n                const index = newQuery.filter_by[filterType].indexOf(filterValue);\n                if (index > -1) {\n                    newQuery.filter_by[filterType] = [\n                        ...query.filter_by[filterType].slice(0, index),\n                        ...query.filter_by[filterType].slice(index + 1),\n                    ];\n                }\n            }\n            else {\n                newQuery.filter_by[filterType] = undefined;\n            }\n            const filteredQuery = this.getRouteForQuery(newQuery, true);\n            history.replace(filteredQuery);\n        };\n        this.handleGroupByClick = groupBy => {\n            const { history, query } = this.props;\n            const groupByKey = groupBy;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { filter_by: undefined, group_by: {\n                    [groupByKey]: '*',\n                }, order_by: { cost: 'desc' } });\n            history.replace(this.getRouteForQuery(newQuery, true));\n            this.setState({ selectedItems: [] });\n        };\n        this.handlePerPageSelect = (_event, perPage) => {\n            const { history, query } = this.props;\n            const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n            newQuery.filter = Object.assign(Object.assign({}, query.filter), { limit: perPage });\n            const filteredQuery = this.getRouteForQuery(newQuery, true);\n            history.replace(filteredQuery);\n        };\n        this.handleSelected = (selectedItems) => {\n            this.setState({ selectedItems });\n        };\n        this.handleSetPage = (event, pageNumber) => {\n            const { history, query, report } = this.props;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = pageNumber * limit - limit;\n            const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n            newQuery.filter = Object.assign(Object.assign({}, query.filter), { offset });\n            const filteredQuery = this.getRouteForQuery(newQuery);\n            history.replace(filteredQuery);\n        };\n        this.handleSort = (sortType, isSortAscending) => {\n            const { history, query } = this.props;\n            const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n            newQuery.order_by = {};\n            newQuery.order_by[sortType] = isSortAscending ? 'asc' : 'desc';\n            const filteredQuery = this.getRouteForQuery(newQuery);\n            history.replace(filteredQuery);\n        };\n        this.updateReport = () => {\n            const { query, location, fetchReport, history, queryString } = this.props;\n            if (!location.search) {\n                history.replace(this.getRouteForQuery({\n                    filter_by: query ? query.filter_by : undefined,\n                    group_by: query ? query.group_by : undefined,\n                    order_by: { cost: 'desc' },\n                }));\n            }\n            else {\n                fetchReport(reportPathsType, reportType, queryString);\n            }\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleFilterAdded = this.handleFilterAdded.bind(this);\n        this.handleFilterRemoved = this.handleFilterRemoved.bind(this);\n        this.handlePerPageSelect = this.handlePerPageSelect.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n        this.handleSetPage = this.handleSetPage.bind(this);\n        this.handleSort = this.handleSort.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { location, report, reportError, queryString } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.queryString !== queryString;\n        const noReport = !report && !reportError;\n        const noLocation = !location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    getRouteForQuery(query, reset = false) {\n        const { history } = this.props;\n        // Reset pagination\n        if (reset) {\n            query.filter = Object.assign(Object.assign({}, query.filter), { offset: baseQuery.filter.offset });\n        }\n        return `${history.location.pathname}?${getQueryRoute(query)}`;\n    }\n    render() {\n        const { providers, providersFetchStatus, query, report, reportError, reportFetchStatus } = this.props;\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const groupByTagKey = this.getGroupByTagKey();\n        const computedItems = getUnsortedComputedReportItems({\n            report,\n            idKey: groupByTagKey || groupById,\n        });\n        let emptyState = null;\n        if (reportError) {\n            if (reportError.response && (reportError.response.status === 401 || reportError.response.status === 403)) {\n                emptyState = React.createElement(NotAuthorized, null);\n            }\n            else {\n                emptyState = React.createElement(NotAvailable, null);\n            }\n        }\n        else if (reportFetchStatus === 2 /* complete */) {\n            const noProviders = providers &&\n                providers.meta &&\n                providers.meta.count === 0 &&\n                providersFetchStatus === 2 /* complete */;\n            if (noProviders) {\n                emptyState = React.createElement(NoProviders, null);\n            }\n        }\n        else if (providersFetchStatus === 1 /* inProgress */) {\n            emptyState = React.createElement(Loading, null);\n        }\n        return (React.createElement(\"div\", { style: styles.ocpDetails },\n            React.createElement(DetailsHeader, { groupBy: groupById, onGroupByClicked: this.handleGroupByClick, report: report }),\n            Boolean(emptyState !== null) ? emptyState : (React.createElement(\"div\", { style: styles.content },\n                this.getToolbar(),\n                this.getExportModal(computedItems),\n                React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                React.createElement(\"div\", { style: styles.paginationContainer },\n                    React.createElement(\"div\", { style: styles.pagination }, this.getPagination(true)))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const queryFromRoute = parseQuery(location.search);\n    const query = {\n        delta: 'cost',\n        filter: Object.assign(Object.assign({}, baseQuery.filter), queryFromRoute.filter),\n        filter_by: queryFromRoute.filter_by || baseQuery.filter_by,\n        group_by: queryFromRoute.group_by || baseQuery.group_by,\n        order_by: queryFromRoute.order_by || baseQuery.order_by,\n    };\n    const queryString = getQuery(query);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    const providersQueryString = getProvidersQuery(ocpProvidersQuery);\n    const providers = providersSelectors.selectProviders(state, \"ocp\" /* ocp */, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"ocp\" /* ocp */, providersQueryString);\n    return {\n        providers,\n        providersFetchStatus,\n        query,\n        queryString,\n        report,\n        reportError,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default translate()(connect(mapStateToProps, mapDispatchToProps)(OcpDetails));\n","import OcpDetails from './ocpDetails';\nexport default OcpDetails;\n","import { CostOverviewBase } from 'pages/details/components/costOverview/costOverviewBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCostOverviewSelectors } from 'store/costOverview/ocpCostOverview';\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: ocpCostOverviewSelectors.selectWidgets(state),\n        widgets: ocpCostOverviewSelectors.selectCurrentWidgets(state),\n    };\n});\nconst CostOverview = translate()(connect(mapStateToProps, {})(CostOverviewBase));\nexport { CostOverview };\n","import { HistoricalDataBase } from 'pages/details/components/historicalData/historicalDataBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpHistoricalDataSelectors } from 'store/historicalData/ocpHistoricalData';\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: ocpHistoricalDataSelectors.selectWidgets(state),\n        widgets: ocpHistoricalDataSelectors.selectCurrentWidgets(state),\n    };\n});\nconst HistoricalData = translate()(connect(mapStateToProps, {})(HistoricalDataBase));\nexport { HistoricalData };\n","import { getQuery, parseQuery } from 'api/queries/ocpQuery';\nimport BreakdownBase from 'pages/details/components/breakdown/breakdownBase';\nimport { getGroupById, getGroupByValue, } from 'pages/details/components/utils/groupBy';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { CostOverview } from './costOverview';\nimport { HistoricalData } from './historicalData';\nconst detailsURL = '/details/ocp';\nconst reportType = \"cost\" /* cost */;\nconst reportPathsType = \"ocp\" /* ocp */;\nconst mapStateToProps = createMapStateToProps(state => {\n    const queryFromRoute = parseQuery(location.search);\n    const query = queryFromRoute;\n    const queryString = getQuery(query);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    const filterBy = getGroupByValue(query);\n    const groupBy = getGroupById(query);\n    return {\n        costOverviewComponent: (React.createElement(CostOverview, { filterBy: filterBy, groupBy: groupBy, report: report })),\n        detailsURL,\n        filterBy,\n        groupBy,\n        historicalDataComponent: (React.createElement(HistoricalData, { filterBy: filterBy, groupBy: groupBy })),\n        query,\n        queryString,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportType,\n        reportPathsType,\n        title: filterBy,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst OcpBreakdown = translate()(connect(mapStateToProps, mapDispatchToProps)(BreakdownBase));\nexport default OcpBreakdown;\n","import OcpBreakdown from './ocpBreakdown';\nexport default OcpBreakdown;\n"],"sourceRoot":""}