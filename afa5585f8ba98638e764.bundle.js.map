{"version":3,"sources":["webpack://koku-ui/./src/federatedEntry.tsx"],"names":["version","store","basename","window","location","pathname","Provider","NotificationsPortal"],"mappings":"qOAYA,OAAQ,CACJA,QAAS,OAEb,MAAMC,GAAQ,OAAe,IAK7B,OACI,MAAMC,GAAW,OAAYC,OAAOC,SAASC,UAC7C,OAAQ,kBAAoB,EAAAC,SAAU,CAAEL,MAAOA,GAC3C,kBAAoB,EAAAM,oBAAqB,MACzC,kBAAoB,gBAAQ,CAAEL,SAAUA,GACpC,kBAAoB,IAAK,CAAEA,SAAUA","file":"afa5585f8ba98638e764.bundle.js","sourcesContent":["import { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications';\nimport { initApi } from 'api/api';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { getBaseName } from 'utils/getBaseName';\nimport App from './app';\nimport { configureStore } from './store';\n// Todo: Uncomment for use with non-shared PatternFly packages\n// require.resolve('@patternfly/patternfly/patternfly.css');\nrequire.resolve('@patternfly/patternfly/patternfly-addons.css');\nimport './styles/global.css';\ninitApi({\n    version: 'v1',\n});\nconst store = configureStore({\n// session: {\n//   token: getToken(),\n// },\n});\nexport default () => {\n    const basename = getBaseName(window.location.pathname);\n    return (React.createElement(Provider, { store: store },\n        React.createElement(NotificationsPortal, null),\n        React.createElement(Router, { basename: basename },\n            React.createElement(App, { basename: basename }))));\n};\n"],"sourceRoot":""}