{"version":3,"sources":["webpack:///./src/pages/onboardingModal/index.ts","webpack:///./src/testIds.ts","webpack:///./src/pages/onboardingModal/final/loader.tsx","webpack:///./src/pages/onboardingModal/final/index.tsx","webpack:///./src/utils/validators.ts","webpack:///./src/pages/onboardingModal/awsConfigure/form.tsx","webpack:///./src/pages/onboardingModal/awsConfigure/instructions.tsx","webpack:///./src/pages/onboardingModal/awsConfigure/awsConfigure.tsx","webpack:///./src/pages/onboardingModal/awsConfigure/index.ts","webpack:///./src/components/copyClipboard/copyFunc.ts","webpack:///./src/components/copyClipboard/copyClipboard.tsx","webpack:///./src/pages/onboardingModal/configure/instructions.tsx","webpack:///./src/pages/onboardingModal/configure/index.ts","webpack:///./src/pages/onboardingModal/enableAccountAccess/form.tsx","webpack:///./src/pages/onboardingModal/enableAccountAccess/instructions.tsx","webpack:///./src/pages/onboardingModal/enableAccountAccess/enableAccountAccess.tsx","webpack:///./src/pages/onboardingModal/enableAccountAccess/index.ts","webpack:///./src/pages/onboardingModal/iamPolicy/instructions.tsx","webpack:///./src/pages/onboardingModal/iamPolicy/index.ts","webpack:///./src/pages/onboardingModal/iamRole/instructions.tsx","webpack:///./src/pages/onboardingModal/iamRole/index.ts","webpack:///./src/pages/onboardingModal/obtainLogin/instructions.tsx","webpack:///./src/pages/onboardingModal/obtainLogin/index.ts","webpack:///./src/pages/onboardingModal/sourceKind/checkList.tsx","webpack:///./src/pages/onboardingModal/sourceKind/form.tsx","webpack:///./src/pages/onboardingModal/sourceKind/instructions.tsx","webpack:///./src/pages/onboardingModal/sourceKind/sourceKind.tsx","webpack:///./src/pages/onboardingModal/sourceKind/index.tsx","webpack:///./src/pages/onboardingModal/usageCollector/form.tsx","webpack:///./src/pages/onboardingModal/usageCollector/instructions.tsx","webpack:///./src/pages/onboardingModal/usageCollector/usageCollector.tsx","webpack:///./src/pages/onboardingModal/usageCollector/index.ts","webpack:///./src/pages/onboardingModal/wizard/index.ts","webpack:///./src/pages/onboardingModal/wizard/wizard.tsx"],"names":["__webpack_exports__","Object","react_hot_loader__WEBPACK_IMPORTED_MODULE_0__","module","_wizard__WEBPACK_IMPORTED_MODULE_1__","getTestProps","id","data-testid","testIds","details","historical_data_btn","tag_lnk","show_more_btn","export","cancel_btn","submit_btn","login","alert","form","username_input","password_input","submit","masthead","username","sidebarToggle","logout","onboarding","btn_cancel","btn_back","btn_continue","btn_close","type_selector","type_opt_aws","type_opt_ocp","type_opt_non","name_input","check_box_1","check_box_2","check_box_3","check_box_4","check_box_5","check_box_all","s3_input","clusterid_input","arn_input","providers","add_btn","bucket_input","empty_state_add_btn","resource_name_input","cluster_id_input","type_input","sidebar","nav","link","backdrop","loader","react_default","a","Component","[object Object]","props","super","type","name","clusterId","arn","s3BucketName","bucket","this","provider_resource_name","billing_source_obj","billing_source","addSource","assign","authentication","mH","style","display","verticalAlign","Number","parseFloat","margin","apiStatus","createElement","in_progress_icon","className","width","height","apiErrors","err","errorMessage","response","data","Error","message","Fragment","times_circle_icon","color","marginTop","marginBottom","Title","size","check_circle_icon","t","Grid","gutter","GridItem","span","renderIcon","react_redux_es","common","state","selectOnboardingName","selectOnboardingType","selectOnboardingClusterID","selectOnboardingArn","selectOnboardingS3BucketName","selectApiErrors","selectApiStatus","es","sourceTypeValidator","value","sourceNameValidator","RegExp","test","ocpClusterIdValidator","awsS3BucketNameValidator","arnValidator","length","indexOf","awsConfigure_form","isValid","onChange","Form","FormGroup","fieldId","label","helperText","helperTextInvalid","TextInput","instructions","List","ListItem","awsConfigure","updateS3BucketName","s3BucketNameValid","_name","event","currentTarget","onboardingModal_awsConfigure","selectOnboardingValidation","copyFunc","text","clipboard","parentElement","el","document","appendChild","select","execCommand","removeChild","CopyClipboardStateless","isCopied","aria-label","ariaLabel","onCopy","isToggle","isExpanded","onExpand","position","Button","onClick","chevron_down_icon","chevron_right_icon","left","isReadOnly","variant","right","ok_icon","paste_icon","copyClipboard_CopyClipboard","wasClicked","expanded","setState","timer","setTimeout","clearTimeout","configure_instructions","configure","enableAccountAccess_form","enableAccountAccess_instructions","enableAccountAccess","updateArn","arnValid","onboardingModal_enableAccountAccess","iamPolicy_instructions","iampolicy","href","target","i18nKey","iamPolicy","iamRole_instructions","iamRole","obtainLogin_instructions","obtainLogin","actionItems","testProps","operator","insights","ansible","epel","oc","SourceKindCheckList","checkedItems","updateCheckItem","checkAll","map","actionItem","Checkbox","key","isChecked","keys","every","k","defaultProps","checkList","sourceKind_form","updateName","nameValid","updateType","typeValid","FormSelect","FormSelectOption","sourceKind_instructions","sourceKind","checked","updateCheck","Boolean","item","onboardingModal_sourceKind","selectOnboardingSourceKindChecked","updateSourceKindCheckList","checkSourceKindCheckList","usageCollector_form","usageCollector_instructions","korekuta","usageCollector","updateClusterId","clusterIdValid","selectOnboardingKorekutaChecked","updateKorekutaCheckList","checkKorekutaCheckList","updateClusterID","isModalOpen","selectOnboardingModal","isInvalid","selectOnboardingIsInvalid","dirtyMap","selectOnboardingDirty","sourceKindChecked","closeModal","cancelOnboarding","steps","onboardingModal_final","onboardingModal_usageCollector","stepMap","isDirty","dirtyStepMap","src","index","setIndex","actions","isDisabled","Modal","isLarge","title","isOpen","onClose"],"mappings":"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","file":"3363eef171affd9a8ec9.bundle.js","sourcesContent":["import { hot } from 'react-hot-loader';\nimport Wizard from './wizard';\nexport default hot(module)(Wizard);\n","export const testIdProp = 'data-testid';\nexport const getTestProps = (id) => ({ [testIdProp]: id });\nexport const testIds = {\n    details: {\n        historical_data_btn: 'historical-data-btn',\n        tag_lnk: 'tag-lnk',\n        show_more_btn: 'show-more-btn',\n    },\n    export: {\n        cancel_btn: 'cancel-btn',\n        submit_btn: 'submit-btn',\n    },\n    login: {\n        alert: 'alert',\n        form: 'login-form',\n        username_input: 'username-input',\n        password_input: 'password-input',\n        submit: 'submit',\n    },\n    masthead: {\n        masthead: 'masthead',\n        username: 'username',\n        sidebarToggle: 'sidebar-toggle',\n        logout: 'logout',\n    },\n    onboarding: {\n        btn_cancel: 'btn-cancel',\n        btn_back: 'btn-back',\n        btn_continue: 'btn-continue',\n        btn_close: 'btn-close',\n        type_selector: 'type-selector',\n        type_opt_aws: 'type-option-aws',\n        type_opt_ocp: 'type-option-ocp',\n        type_opt_non: 'type-option-non',\n        name_input: 'name-input',\n        check_box_1: 'check-box-1',\n        check_box_2: 'check-box-2',\n        check_box_3: 'check-box-3',\n        check_box_4: 'check-box-4',\n        check_box_5: 'check-box-5',\n        check_box_all: 'check-box-all',\n        s3_input: 's3-input',\n        clusterid_input: 'clusterid-input',\n        arn_input: 'arn-input',\n    },\n    providers: {\n        add_btn: 'add-btn',\n        bucket_input: 'bucket-input',\n        cancel_btn: 'cancel-btn',\n        empty_state_add_btn: 'empty_state_add-btn',\n        name_input: 'provider-name-input',\n        resource_name_input: 'provider-resource-name-input',\n        cluster_id_input: 'provider-cluster-id-input',\n        submit_btn: 'submit-btn',\n        type_input: 'provider-type-input',\n    },\n    sidebar: {\n        nav: 'vertical-nav',\n        link: 'vertical-nav-link',\n        backdrop: 'sidebar-backdrop',\n    },\n};\n","import { Grid, GridItem, Title } from '@patternfly/react-core';\nimport { CheckCircleIcon, InProgressIcon, TimesCircleIcon, } from '@patternfly/react-icons';\nimport React from 'react';\nclass Loader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        const { type, name, clusterId, arn, s3BucketName: bucket } = this.props;\n        const provider_resource_name = type === 'OCP' ? clusterId : arn;\n        const billing_source_obj = type === 'AWS' ? { billing_source: { bucket } } : null;\n        this.props.addSource(Object.assign({ type,\n            name, authentication: {\n                provider_resource_name,\n            } }, billing_source_obj));\n    }\n    renderIcon() {\n        const mH = '7em';\n        const style = {\n            display: 'block',\n            verticalAlign: `${-0.125 * Number.parseFloat(mH)}em`,\n            margin: 'auto',\n        };\n        if (this.props.apiStatus === 1 /* inProgress */) {\n            return (React.createElement(InProgressIcon, { className: \"in-progress\", style: style, width: mH, height: mH }));\n        }\n        if (this.props.apiErrors) {\n            const err = this.props.apiErrors;\n            let errorMessage = null;\n            if (err.response && err.response.data && err.response.data.Error) {\n                errorMessage = err.response.data.Error;\n            }\n            else if (err.message) {\n                errorMessage = err.message;\n            }\n            return (React.createElement(React.Fragment, null,\n                React.createElement(TimesCircleIcon, { className: \"popping\", color: \"red\", style: style, width: mH, height: mH }),\n                React.createElement(\"div\", { style: { marginTop: '20px', marginBottom: '20px' } },\n                    React.createElement(Title, { size: \"md\" }, \"Failed adding source\"),\n                    React.createElement(\"div\", null, errorMessage ? errorMessage : 'Something went wrong'))));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(CheckCircleIcon, { className: \"popping\", color: \"green\", style: style, width: mH, height: mH }),\n            React.createElement(\"div\", { style: { marginTop: '20px', marginBottom: '20px' } },\n                React.createElement(Title, { size: \"md\" }, \"Successfully added this source\"))));\n    }\n    render() {\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { size: \"xl\" }, this.props.t('onboarding.final.title')),\n            React.createElement(\"br\", null),\n            React.createElement(Grid, { gutter: \"md\" },\n                React.createElement(GridItem, { span: 2 }),\n                React.createElement(GridItem, { span: 8 }, this.renderIcon()),\n                React.createElement(GridItem, { span: 2 }),\n                React.createElement(GridItem, { span: 2 }),\n                React.createElement(GridItem, { span: 8 },\n                    React.createElement(\"div\", null,\n                        \"Source Name: \",\n                        this.props.name),\n                    React.createElement(\"div\", null,\n                        \"Source Type: \",\n                        this.props.type),\n                    this.props.type === 'AWS' && (React.createElement(\"div\", null,\n                        \"S3 Bucket: \",\n                        this.props.s3BucketName)),\n                    this.props.type === 'AWS' && React.createElement(\"div\", null,\n                        \"ARN: \",\n                        this.props.arn),\n                    this.props.type === 'OCP' && (React.createElement(\"div\", null,\n                        \"Cluster ID: \",\n                        this.props.clusterId))),\n                React.createElement(GridItem, { span: 2 }))));\n    }\n}\nexport default Loader;\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions, onboardingSelectors } from 'store/onboarding';\nimport Loader from './loader';\nimport './loader.css';\nexport default connect(createMapStateToProps(state => ({\n    name: onboardingSelectors.selectOnboardingName(state),\n    type: onboardingSelectors.selectOnboardingType(state),\n    clusterId: onboardingSelectors.selectOnboardingClusterID(state),\n    arn: onboardingSelectors.selectOnboardingArn(state),\n    s3BucketName: onboardingSelectors.selectOnboardingS3BucketName(state),\n    apiErrors: onboardingSelectors.selectApiErrors(state),\n    apiStatus: onboardingSelectors.selectApiStatus(state),\n})), {\n    addSource: onboardingActions.addSource,\n})(translate()(Loader));\n","export const sourceTypeValidator = (value) => value !== '';\nexport const sourceNameValidator = (value) => new RegExp('^.').test(value);\nexport const ocpClusterIdValidator = (value) => new RegExp('^.').test(value);\nexport const awsS3BucketNameValidator = (value) => new RegExp('^[A-Za-z0-9]+[A-Za-z0-9_-]*$').test(value);\nexport const arnValidator = (value) => {\n    const arnPrefix = 'arn:aws:';\n    if (value.length < arnPrefix.length) {\n        return false;\n    }\n    if (value.length === arnPrefix.length) {\n        return value === arnPrefix;\n    }\n    return value.indexOf(arnPrefix) === 0;\n};\n","import { Form, FormGroup, TextInput } from '@patternfly/react-core';\nimport React from 'react';\nimport { getTestProps, testIds } from 'testIds';\nconst S3BucketForm = ({ t, isValid, value, onChange }) => {\n    return (React.createElement(Form, null,\n        React.createElement(FormGroup, { isValid: isValid, fieldId: \"s3_bucket_name\", label: t('onboarding.aws_configure.s3_bucket_name_label'), helperText: t('onboarding.aws_configure.s3_bucket_name_helper_text'), helperTextInvalid: t('onboarding.aws_configure.s3_bucket_name_helper_text_invalid') },\n            React.createElement(TextInput, Object.assign({}, getTestProps(testIds.onboarding.s3_input), { isValid: isValid, id: \"s3_bucket_name\", value: value, onChange: onChange })))));\n};\nexport default S3BucketForm;\n","import { List, ListItem, Title } from '@patternfly/react-core';\nimport React from 'react';\nconst AwsConfigureInstructions = ({ t }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.aws_configure.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.aws_configure.intro')),\n        React.createElement(\"br\", null),\n        React.createElement(List, null,\n            React.createElement(ListItem, null, t('onboarding.aws_configure.s3_bucket_account')),\n            React.createElement(ListItem, null,\n                t('onboarding.aws_configure.cost_report'),\n                React.createElement(List, null,\n                    React.createElement(ListItem, null, t('onboarding.aws_configure.report_name')),\n                    React.createElement(ListItem, null, t('onboarding.aws_configure.time_unit')),\n                    React.createElement(ListItem, null, t('onboarding.aws_configure.include')),\n                    React.createElement(ListItem, null, t('onboarding.aws_configure.support')),\n                    React.createElement(ListItem, null, t('onboarding.aws_configure.prefix')))),\n            React.createElement(ListItem, null, t('onboarding.aws_configure.enter_s3_bucket')))));\n};\nexport default AwsConfigureInstructions;\n","import React from 'react';\nimport { awsS3BucketNameValidator } from 'utils/validators';\nimport S3BucketForm from './form';\nimport AwsConfigureInstructions from './instructions';\nconst AwsConfigure = ({ t, s3BucketName, updateS3BucketName, s3BucketNameValid, }) => {\n    const onChange = (_name, event) => {\n        updateS3BucketName(event.currentTarget.value, awsS3BucketNameValidator);\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(AwsConfigureInstructions, { t: t }),\n        React.createElement(\"br\", null),\n        React.createElement(\"br\", null),\n        React.createElement(S3BucketForm, { t: t, onChange: onChange, isValid: s3BucketNameValid, value: s3BucketName })));\n};\nexport default AwsConfigure;\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions, onboardingSelectors } from 'store/onboarding';\nimport AwsConfigure from './awsConfigure';\nexport default connect(createMapStateToProps(state => ({\n    s3BucketName: onboardingSelectors.selectOnboardingS3BucketName(state),\n    s3BucketNameValid: onboardingSelectors.selectOnboardingValidation(state)\n        .s3BucketNameValid,\n})), {\n    updateS3BucketName: onboardingActions.updateS3BucketName,\n})(translate()(AwsConfigure));\n","const copy = (event, text) => {\n    const clipboard = event.currentTarget.parentElement;\n    const el = document.createElement('input');\n    el.value = text;\n    clipboard.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    clipboard.removeChild(el);\n};\nexport default copy;\n","import { Button, TextInput } from '@patternfly/react-core';\nimport { ChevronDownIcon, ChevronRightIcon, OkIcon, PasteIcon, } from '@patternfly/react-icons';\nimport React from 'react';\nimport copyfnc from './copyFunc';\nexport const CopyClipboardStateless = ({ text, isCopied, 'aria-label': ariaLabel, onCopy, isToggle, isExpanded, onExpand, }) => (React.createElement(\"div\", { style: { position: 'relative' } },\n    isToggle && (React.createElement(Button, { style: { width: 48 }, onClick: onExpand }, isExpanded ? React.createElement(ChevronDownIcon, null) : React.createElement(ChevronRightIcon, null))),\n    React.createElement(TextInput, { style: isToggle ? { position: 'absolute', left: '48px' } : null, onChange: () => null, isReadOnly: true, value: text, \"aria-label\": ariaLabel }),\n    React.createElement(Button, { onClick: onCopy, variant: \"primary\", style: { position: 'absolute', right: '1px' } }, isCopied ? React.createElement(OkIcon, null) : React.createElement(PasteIcon, null)),\n    isToggle && isExpanded && React.createElement(\"div\", { className: \"pf-c-form-control\" }, text)));\nexport class CopyClipboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { wasClicked: false, expanded: false };\n    }\n    render() {\n        return (React.createElement(CopyClipboardStateless, { isToggle: this.props.isToggle, isExpanded: this.state.expanded, onExpand: () => {\n                this.setState({ expanded: !this.state.expanded });\n            }, text: this.props.text, isCopied: this.state.wasClicked, \"aria-label\": this.props['aria-label'], onCopy: (event) => {\n                copyfnc(event, this.props.text);\n                this.setState({ wasClicked: true }, () => {\n                    const timer = setTimeout(() => {\n                        this.setState({ wasClicked: false }, () => {\n                            clearTimeout(timer);\n                        });\n                    }, 2000);\n                });\n            } }));\n    }\n}\n","import { Title } from '@patternfly/react-core';\nimport CopyClipboard from 'components/copyClipboard';\nimport React from 'react';\nconst ConfigureInstructions = ({ t }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.configure.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.configure.instructions_text')),\n        React.createElement(\"br\", null),\n        React.createElement(Title, { size: \"md\" }, t('onboarding.configure.edit_contrab_title')),\n        React.createElement(\"div\", null, t('onboarding.configure.edit_contrab')),\n        React.createElement(CopyClipboard, { text: \"# contrab -u <username> -e\", \"aria-label\": \"command line to edit contrab\" }),\n        React.createElement(\"br\", null),\n        React.createElement(Title, { size: \"md\" }, t('onboarding.configure.create_entry_title')),\n        React.createElement(\"div\", null, t('onboarding.configure.create_entry')),\n        React.createElement(CopyClipboard, { text: \"*/45 * * * * /path/to/ocp_usage.sh --collect\", \"aria-label\": \"entry to run OCP Usage collector every 45 minutes\" }),\n        React.createElement(\"br\", null),\n        React.createElement(Title, { size: \"md\" }, t('onboarding.configure.note_title')),\n        React.createElement(\"div\", null, t('onboarding.configure.note')),\n        React.createElement(CopyClipboard, { text: \"ocpcollector ALL=(ALL) NOPASSWD: ALL\", \"aria-label\": \"set sudo authority to interact with Red Hat Insights Client\" }),\n        React.createElement(\"br\", null)));\n};\nexport default ConfigureInstructions;\n","import { translate } from 'react-i18next';\nimport ConfigureInstructions from './instructions';\nexport default translate()(ConfigureInstructions);\n","import { Form, FormGroup, TextInput } from '@patternfly/react-core';\nimport React from 'react';\nimport { getTestProps, testIds } from 'testIds';\nconst ArnForm = ({ t, isValid, value, onChange }) => {\n    return (React.createElement(Form, null,\n        React.createElement(FormGroup, { isValid: isValid, fieldId: \"arn\", label: t('onboarding.enable_account_access.arn_label'), helperText: t('onboarding.enable_account_access.arn_helper_text'), helperTextInvalid: t('onboarding.enable_account_access.arn_helper_text_invalid') },\n            React.createElement(TextInput, Object.assign({}, getTestProps(testIds.onboarding.arn_input), { isValid: isValid, id: \"arn\", value: value, onChange: onChange })))));\n};\nexport default ArnForm;\n","import { List, ListItem, Title } from '@patternfly/react-core';\nimport React from 'react';\nconst EnableAccountAccessInstructions = ({ t, }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.enable_account_access.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.enable_account_access.intro')),\n        React.createElement(\"br\", null),\n        React.createElement(List, null,\n            React.createElement(ListItem, null, t('onboarding.enable_account_access.select_role')),\n            React.createElement(ListItem, null, t('onboarding.enable_account_access.copy_arn')))));\n};\nexport default EnableAccountAccessInstructions;\n","import React from 'react';\nimport { arnValidator } from 'utils/validators';\nimport ArnForm from './form';\nimport EnableAccountAccessInstructions from './instructions';\nconst EnableAccountAccess = ({ t, arn, updateArn, arnValid, }) => {\n    const onChange = (_name, event) => {\n        updateArn(event.currentTarget.value, arnValidator);\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(EnableAccountAccessInstructions, { t: t }),\n        React.createElement(\"br\", null),\n        React.createElement(\"br\", null),\n        React.createElement(ArnForm, { t: t, onChange: onChange, isValid: arnValid, value: arn })));\n};\nexport default EnableAccountAccess;\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions, onboardingSelectors } from 'store/onboarding';\nimport EnableAccountAccess from './enableAccountAccess';\nexport default connect(createMapStateToProps(state => ({\n    arn: onboardingSelectors.selectOnboardingArn(state),\n    arnValid: onboardingSelectors.selectOnboardingValidation(state).arnValid,\n})), {\n    updateArn: onboardingActions.updateArn,\n})(translate()(EnableAccountAccess));\n","import { List, ListItem, Title } from '@patternfly/react-core';\nimport CopyClipboard from 'components/copyClipboard';\nimport React from 'react';\nimport { Interpolate } from 'react-i18next';\nconst IamPolicyInstructions = ({ t }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.iam_policy.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.iam_policy.intro')),\n        React.createElement(\"br\", null),\n        React.createElement(List, null,\n            React.createElement(ListItem, null,\n                React.createElement(Interpolate, { iampolicy: React.createElement(\"a\", { href: \"https://koku.readthedocs.io/en/latest/providers.html#download-and-configure-ocp-usage-collector-korekuta\", target: \"_blank\" }, \"AWS Identity Access Management* (IAM) console\"), i18nKey: \"onboarding.iam_policy.sign_in\" })),\n            React.createElement(ListItem, null,\n                t('onboarding.iam_policy.new_policy'),\n                React.createElement(\"br\", null),\n                React.createElement(CopyClipboard, { isToggle: true, text: `{\n\t\"Version\": \"2012-10-17\",\n\t\"Statement\": [{\n\t\t\t\"Sid\": \"VisualEditor0\",\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"s3:Get*\",\n\t\t\t\t\"s3:List*\"\n\t\t\t],\n\t\t\t\"Resource\": [\n\t\t\t\t\"arn:aws:s3:::bucket_name\",\n\t\t\t\t\"arn:aws:s3:::bucket_name/*\"\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"Sid\": \"VisualEditor1\",\n\t\t\t\"Effect\": \"Allow\",\n\t\t\t\"Action\": [\n\t\t\t\t\"s3:ListAllMyBuckets\",\n\t\t\t\t\"iam:ListAccountAliases\",\n\t\t\t\t\"cur:DescribeReportDefinitions\"\n\t\t\t],\n\t\t\t\"Resource\": \"*\"\n\t\t}\n\t]\n}`, \"aria-label\": \"command line to obtain the token\" })),\n            React.createElement(ListItem, null, t('onboarding.iam_policy.complete_process'))),\n        React.createElement(\"br\", null),\n        React.createElement(\"br\", null),\n        React.createElement(\"div\", null,\n            React.createElement(\"b\", null, t('onboarding.iam_policy.donot_close_browser')),\n            t('onboarding.iam_policy.note'))));\n};\nexport default IamPolicyInstructions;\n","import { translate } from 'react-i18next';\nimport IamPolicyInstructions from './instructions';\nexport default translate()(IamPolicyInstructions);\n","import { List, ListItem, Title } from '@patternfly/react-core';\nimport CopyClipboard from 'components/copyClipboard';\nimport React from 'react';\nconst IamRoleInstructions = ({ t }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.iam_role.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.iam_role.intro')),\n        React.createElement(\"br\", null),\n        React.createElement(List, null,\n            React.createElement(ListItem, null, t('onboarding.iam_role.create_new_role')),\n            React.createElement(ListItem, null,\n                t('onboarding.iam_role.paste_account_id'),\n                React.createElement(\"br\", null),\n                React.createElement(CopyClipboard, { text: \"589173575009\", \"aria-label\": \"account id to paste\" })),\n            React.createElement(ListItem, null, t('onboarding.iam_role.attach_permissions')),\n            React.createElement(ListItem, null, t('onboarding.iam_role.complete_process')))));\n};\nexport default IamRoleInstructions;\n","import { translate } from 'react-i18next';\nimport IamRole from './instructions';\nexport default translate()(IamRole);\n","import { List, ListItem, Title } from '@patternfly/react-core';\nimport CopyClipboard from 'components/copyClipboard';\nimport React from 'react';\nconst ObtainLoginInstructions = ({ t }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.obtain_login.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.obtain_login.intro')),\n        React.createElement(\"br\", null),\n        React.createElement(List, null,\n            React.createElement(ListItem, null, t('onboarding.obtain_login.obtain_token')),\n            React.createElement(ListItem, null,\n                t('onboarding.obtain_login.run_command'),\n                React.createElement(\"br\", null),\n                React.createElement(CopyClipboard, { text: \"# oc serviceaccounts get-token metering-operator > ocp_usage_token\", \"aria-label\": \"command line to obtain the token\" })),\n            React.createElement(ListItem, null, t('onboarding.obtain_login.security')))));\n};\nexport default ObtainLoginInstructions;\n","import { translate } from 'react-i18next';\nimport ObtainLogin from './instructions';\nexport default translate()(ObtainLogin);\n","import { Checkbox } from '@patternfly/react-core';\nimport React from 'react';\nimport { Interpolate } from 'react-i18next';\nimport { getTestProps, testIds } from 'testIds';\nconst actionItems = [\n    {\n        id: 'check-ocp-version',\n        label: React.createElement(Interpolate, { i18nKey: \"onboarding.source_kind.checkbox_1\" }),\n        ariaLabel: 'OCP version 3.11 or newer',\n        testProps: getTestProps(testIds.onboarding.check_box_1),\n    },\n    {\n        id: 'check-operator-metering',\n        label: (React.createElement(Interpolate, { i18nKey: \"onboarding.source_kind.checkbox_2\", operator: React.createElement(\"a\", { target: \"_blank\", href: \"https://github.com/operator-framework/operator-metering/blob/master/Documentation/install-metering.md\" }, \"Operator Metering\") })),\n        ariaLabel: 'Install operator metering',\n        testProps: getTestProps(testIds.onboarding.check_box_2),\n    },\n    {\n        id: 'check-insights-client',\n        label: (React.createElement(Interpolate, { i18nKey: \"onboarding.source_kind.checkbox_3\", insights: React.createElement(\"a\", { target: \"_blank\", href: \"https://access.redhat.com/products/red-hat-insights/#getstarted\" }, \"Red Hat Insights Client\") })),\n        ariaLabel: 'Setup Red Hat Insights Client',\n        testProps: getTestProps(testIds.onboarding.check_box_3),\n    },\n    {\n        id: 'check-ansible-epel',\n        label: (React.createElement(Interpolate, { i18nKey: \"onboarding.source_kind.checkbox_4\", ansible: React.createElement(\"a\", { target: \"_blank\", href: \"https://docs.ansible.com/ansible/2.7/installation_guide/intro_installation.html\" }, \"Ansible\"), epel: React.createElement(\"a\", { target: \"_blank\", href: \"https://fedoraproject.org/wiki/EPEL#Quickstart\" }, \"EPEL repository\") })),\n        ariaLabel: 'Install Ansible and EPEL',\n        testProps: getTestProps(testIds.onboarding.check_box_4),\n    },\n    {\n        id: 'check-oc',\n        label: (React.createElement(Interpolate, { i18nKey: \"onboarding.source_kind.checkbox_5\", oc: React.createElement(\"a\", { target: \"_blank\", href: \"https://docs.openshift.com/container-platform/3.3/cli_reference/get_started_cli.html#cli-linux\" }, \"OCP command-line (oc)\") })),\n        ariaLabel: 'Install OCP command line',\n        testProps: getTestProps(testIds.onboarding.check_box_5),\n    },\n];\nconst SourceKindCheckList = ({ t, checkedItems, updateCheckItem, checkAll, }) => {\n    return (React.createElement(React.Fragment, null,\n        t('onboarding.source_kind.checklist_title'),\n        actionItems.map(actionItem => (React.createElement(Checkbox, Object.assign({}, actionItem.testProps, { key: `checkbox-key-${actionItem.id}`, isChecked: checkedItems[actionItem.id] || false, onChange: updateCheckItem, label: actionItem.label, \"aria-label\": actionItem.ariaLabel, id: actionItem.id })))),\n        React.createElement(Checkbox, Object.assign({}, getTestProps(testIds.onboarding.check_box_all), { key: 'checkbox-all-sourcekind', onChange: checkAll, isChecked: Object.keys(checkedItems).every(k => checkedItems[k]), label: t('onboarding.source_kind.checkbox_6'), \"aria-label\": t('onboarding.source_kind.check them all'), id: \"check-them-all\" }))));\n};\nSourceKindCheckList.defaultProps = {\n    updateCheckItem: () => null,\n    checkAll: () => null,\n};\nexport default SourceKindCheckList;\n","import { Form, FormGroup, FormSelect, FormSelectOption, TextInput, } from '@patternfly/react-core';\nimport React from 'react';\nimport { getTestProps, testIds } from 'testIds';\nconst SourceKindForm = ({ t, name, updateName, nameValid, type, updateType, typeValid, }) => {\n    return (React.createElement(Form, null,\n        React.createElement(FormGroup, { isValid: typeValid, fieldId: \"source_type\", label: t('onboarding.type_label') },\n            React.createElement(FormSelect, Object.assign({}, getTestProps(testIds.onboarding.type_selector), { isValid: typeValid, value: type, id: \"source_type\", onChange: updateType }),\n                React.createElement(FormSelectOption, Object.assign({}, getTestProps(testIds.onboarding.type_opt_non), { label: t('onboarding.select_type_label'), value: \"\" })),\n                React.createElement(FormSelectOption, Object.assign({}, getTestProps(testIds.onboarding.type_opt_aws), { label: \"Amazon Web Services (AWS)\", value: \"AWS\" })),\n                React.createElement(FormSelectOption, Object.assign({}, getTestProps(testIds.onboarding.type_opt_ocp), { label: \"Red Hat OpenShift (RH OCP)\", value: \"OCP\" })))),\n        React.createElement(FormGroup, { isValid: nameValid, helperTextInvalid: t('onboarding.name_helper_invalid_text'), helperText: t('onboarding.name_helper_text'), fieldId: \"source_name\", label: t('onboarding.name_label') },\n            React.createElement(TextInput, Object.assign({}, getTestProps(testIds.onboarding.name_input), { isValid: nameValid, id: \"source_name\", value: name, onChange: updateName })))));\n};\nexport default SourceKindForm;\n","import { Title } from '@patternfly/react-core';\nimport React from 'react';\nconst SourceKindInstructions = ({ t }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.source_kind.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.source_kind.instructions_text')),\n        React.createElement(\"br\", null)));\n};\nexport default SourceKindInstructions;\n","import React from 'react';\nimport { sourceNameValidator, sourceTypeValidator } from 'utils/validators';\nimport SourceKindCheckList from './checkList';\nimport SourceKindForm from './form';\nimport SourceKindInstructions from './instructions';\nconst SourceKind = ({ t, name, updateName, nameValid, type, updateType, typeValid, checked, updateCheck, checkAll, }) => {\n    const updateNameText = (_name, event) => {\n        updateName(event.currentTarget.value, sourceNameValidator);\n    };\n    const updateTypeOption = (event) => {\n        updateType(event, sourceTypeValidator);\n    };\n    const updateCheckItem = (value, event) => {\n        updateCheck({ item: event.currentTarget.id, value });\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(SourceKindInstructions, { t: t }),\n        React.createElement(SourceKindForm, { updateName: updateNameText, updateType: updateTypeOption, name: name, nameValid: nameValid, type: type, typeValid: typeValid, t: t }),\n        React.createElement(\"br\", null),\n        Boolean(type === 'OCP') && (React.createElement(SourceKindCheckList, { t: t, checkedItems: checked, updateCheckItem: updateCheckItem, checkAll: () => {\n                checkAll();\n            } }))));\n};\nexport default SourceKind;\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions, onboardingSelectors } from 'store/onboarding';\nimport SourceKind from './sourceKind';\nexport default connect(createMapStateToProps(state => (Object.assign({ name: onboardingSelectors.selectOnboardingName(state), type: onboardingSelectors.selectOnboardingType(state), checked: onboardingSelectors.selectOnboardingSourceKindChecked(state) }, onboardingSelectors.selectOnboardingValidation(state)))), {\n    updateName: onboardingActions.updateName,\n    updateType: onboardingActions.updateType,\n    updateCheck: onboardingActions.updateSourceKindCheckList,\n    checkAll: onboardingActions.checkSourceKindCheckList,\n})(translate()(SourceKind));\n","import { Form, FormGroup, TextInput } from '@patternfly/react-core';\nimport React from 'react';\nimport { getTestProps, testIds } from 'testIds';\nconst ClusterForm = ({ t, isValid, value, onChange }) => {\n    return (React.createElement(Form, null,\n        React.createElement(FormGroup, { isValid: isValid, fieldId: \"cluster_id\", label: t('onboarding.korekuta.cluster_id_label') },\n            React.createElement(TextInput, Object.assign({}, getTestProps(testIds.onboarding.clusterid_input), { isValid: isValid, id: \"cluster_id\", value: value, onChange: onChange })))));\n};\nexport default ClusterForm;\n","import { List, ListItem, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport { Interpolate } from 'react-i18next';\nconst UsageCollectorInstructions = ({ t, }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.korekuta.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.korekuta.instructions_text')),\n        React.createElement(\"br\", null),\n        t('onboarding.korekuta.checklist_title'),\n        React.createElement(List, null,\n            React.createElement(ListItem, null,\n                React.createElement(React.Fragment, null,\n                    React.createElement(Interpolate, { i18nKey: \"onboarding.korekuta.download_and_install\", korekuta: React.createElement(\"a\", { href: \"https://koku.readthedocs.io/en/latest/providers.html#download-and-configure-ocp-usage-collector-korekuta\", target: \"_blank\" }, \"OCP Usage Collector\") }),\n                    React.createElement(\"br\", null),\n                    t('onboarding.korekuta.checklist_title'),\n                    React.createElement(\"br\", null),\n                    React.createElement(List, null,\n                        React.createElement(ListItem, null, t('onboarding.korekuta.checkbox_1')),\n                        React.createElement(ListItem, null, t('onboarding.korekuta.checkbox_2')),\n                        React.createElement(ListItem, null, t('onboarding.korekuta.checkbox_3')),\n                        React.createElement(ListItem, null, t('onboarding.korekuta.checkbox_4'))),\n                    React.createElement(\"div\", null, t('onboarding.korekuta.for_example')),\n                    React.createElement(\"br\", null),\n                    React.createElement(\"div\", null, \"# ./ocp_usage.sh --setup -e OCP_API=\\\"https://api.openshift-prod.mycompany.com\\\" -e OCP_METERING_NAMESPACE=\\\"metering\\\" -e OCP_TOKEN_PATH=\\\"/path/to/ocp_usage_token\\\"\"))),\n            React.createElement(ListItem, null, t('onboarding.korekuta.post_installation')))));\n};\nexport default UsageCollectorInstructions;\n","import React from 'react';\nimport { ocpClusterIdValidator } from 'utils/validators';\nimport ClusterIdForm from './form';\nimport Instructions from './instructions';\nconst UsageCollector = ({ t, clusterId, updateClusterId, clusterIdValid, }) => {\n    const onChange = (_name, event) => {\n        updateClusterId(event.currentTarget.value, ocpClusterIdValidator);\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Instructions, { t: t }),\n        React.createElement(\"br\", null),\n        React.createElement(\"br\", null),\n        React.createElement(ClusterIdForm, { t: t, onChange: onChange, isValid: clusterIdValid, value: clusterId })));\n};\nexport default UsageCollector;\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions, onboardingSelectors } from 'store/onboarding';\nimport UsageCollector from './usageCollector';\nexport default connect(createMapStateToProps(state => ({\n    checked: onboardingSelectors.selectOnboardingKorekutaChecked(state),\n    clusterId: onboardingSelectors.selectOnboardingClusterID(state),\n    clusterIdValid: onboardingSelectors.selectOnboardingValidation(state)\n        .clusterIdValid,\n})), {\n    updateCheck: onboardingActions.updateKorekutaCheckList,\n    checkAll: onboardingActions.checkKorekutaCheckList,\n    updateClusterId: onboardingActions.updateClusterID,\n})(translate()(UsageCollector));\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions, onboardingSelectors } from 'store/onboarding';\nimport { WizardBase } from './wizard';\nexport default connect(createMapStateToProps(state => ({\n    isModalOpen: onboardingSelectors.selectOnboardingModal(state),\n    isInvalid: onboardingSelectors.selectOnboardingIsInvalid(state),\n    dirtyMap: onboardingSelectors.selectOnboardingDirty(state),\n    sourceKindChecked: onboardingSelectors.selectOnboardingSourceKindChecked(state),\n    type: onboardingSelectors.selectOnboardingType(state),\n})), {\n    closeModal: onboardingActions.closeModal,\n    cancelOnboarding: onboardingActions.cancelOnboarding,\n})(translate()(WizardBase));\n","import { Button, Modal } from '@patternfly/react-core';\nimport Final from 'pages/onboardingModal//final';\nimport AwsConfigure from 'pages/onboardingModal/awsConfigure';\nimport Configure from 'pages/onboardingModal/configure';\nimport EnableAccountAccess from 'pages/onboardingModal/enableAccountAccess';\nimport IamPolicy from 'pages/onboardingModal/iamPolicy';\nimport IamRole from 'pages/onboardingModal/iamRole';\nimport ObtainLogin from 'pages/onboardingModal/obtainLogin';\nimport SourceKind from 'pages/onboardingModal/sourceKind';\nimport UsageCollector from 'pages/onboardingModal/usageCollector';\nimport React from 'react';\nimport Merlin from 'react-merlin';\nimport { getTestProps, testIds } from 'testIds';\nconst stepMap = type => {\n    switch (type) {\n        case 'AWS':\n            return [\n                React.createElement(SourceKind, { key: \"source_kind\" }),\n                React.createElement(AwsConfigure, { key: \"aws_configure\" }),\n                React.createElement(IamPolicy, { key: \"aws_iam_policy\" }),\n                React.createElement(IamRole, { key: \"aws_iam_role\" }),\n                React.createElement(EnableAccountAccess, { key: \"enable_account_access\" }),\n                React.createElement(Final, { key: \"aws_final\" }),\n            ];\n        case 'OCP':\n            return [\n                React.createElement(SourceKind, { key: \"source_kind\" }),\n                React.createElement(ObtainLogin, { key: \"obtain_login\" }),\n                React.createElement(UsageCollector, { key: \"usage_collector\" }),\n                React.createElement(Configure, { key: \"configure\" }),\n                React.createElement(Final, { key: \"final\" }),\n            ];\n        default:\n            return [\n                React.createElement(SourceKind, { key: \"source_kind\" }),\n                React.createElement(ObtainLogin, { key: \"obtain_login\" }),\n            ];\n    }\n};\nconst dirtyStepMap = (dirtyMap, sourceKindChecked) => type => {\n    switch (type) {\n        case 'AWS':\n            return [\n                dirtyMap.name && dirtyMap.type,\n                dirtyMap.s3BucketName,\n                true,\n                true,\n                dirtyMap.arn,\n                true,\n            ];\n        case 'OCP':\n            return [\n                dirtyMap.name &&\n                    dirtyMap.type &&\n                    Object.keys(sourceKindChecked).every(k => sourceKindChecked[k]),\n                true,\n                dirtyMap.clusterId,\n                true,\n                true,\n            ];\n        default:\n            return [];\n    }\n};\nexport const WizardBase = ({ t, closeModal, cancelOnboarding, isModalOpen, isInvalid, dirtyMap, sourceKindChecked, type, }) => {\n    const steps = stepMap(type);\n    const isDirty = dirtyStepMap(dirtyMap, sourceKindChecked)(type);\n    return (React.createElement(Merlin, null, ({ index, setIndex }) => {\n        const actions = [\n            index < steps.length - 1 && (React.createElement(Button, Object.assign({}, getTestProps(testIds.onboarding.btn_cancel), { key: \"wizard_cancel\", variant: \"secondary\", id: \"wizard_cancel_button\", onClick: () => {\n                    setIndex(0);\n                    cancelOnboarding();\n                } }), \"Cancel\")),\n            index > 0 && index < steps.length - 1 && (React.createElement(Button, Object.assign({}, getTestProps(testIds.onboarding.btn_back), { key: \"wizard_back\", variant: \"secondary\", id: \"wizard_back_button\", onClick: () => setIndex(index - 1) }), \"Back\")),\n            index < steps.length - 1 && (React.createElement(Button, Object.assign({}, getTestProps(testIds.onboarding.btn_continue), { isDisabled: !isDirty[index] || isInvalid, key: \"wizard_continue\", variant: \"primary\", id: \"wizard_continue_button\", onClick: () => {\n                    setIndex(index + 1);\n                } }), 'Continue')),\n            index + 1 === steps.length && (React.createElement(Button, Object.assign({}, getTestProps(testIds.onboarding.btn_close), { key: \"wizard_close\", variant: \"primary\", id: \"wizard_close_button\", onClick: () => {\n                    setIndex(0);\n                    cancelOnboarding();\n                } }), \"Close\")),\n        ];\n        return (React.createElement(Modal, { style: {\n                height: '700px',\n                width: '800px',\n            }, isLarge: true, title: t('onboarding.wizard.title'), isOpen: isModalOpen, actions: actions, onClose: closeModal }, steps[index]));\n    }));\n};\n"],"sourceRoot":""}