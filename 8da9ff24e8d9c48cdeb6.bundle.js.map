{"version":3,"sources":["webpack://koku-ui/./src/pages/state/noData/index.ts","webpack://koku-ui/./src/pages/state/notAvailable/notAvailable.tsx","webpack://koku-ui/./src/pages/state/notAvailable/index.ts","webpack://koku-ui/./src/pages/views/components/resourceTypeahead/resourceSelect.tsx","webpack://koku-ui/./src/pages/views/components/resourceTypeahead/resourceTypeahead.tsx","webpack://koku-ui/./src/pages/views/components/dataToolbar/dataToolbar.styles.ts","webpack://koku-ui/./src/pages/views/components/dataToolbar/dataToolbar.tsx","webpack://koku-ui/./src/pages/views/components/export/exportModal.styles.ts","webpack://koku-ui/./src/pages/views/components/export/exportSubmit.tsx","webpack://koku-ui/./src/pages/views/components/export/exportModal.tsx","webpack://koku-ui/./src/pages/views/components/groupBy/groupBy.styles.ts","webpack://koku-ui/./src/pages/views/components/groupBy/groupByOrg.tsx","webpack://koku-ui/./src/pages/views/components/groupBy/groupByTag.tsx","webpack://koku-ui/./src/pages/views/components/groupBy/groupBy.tsx","webpack://koku-ui/./src/pages/views/details/components/actions/actions.tsx","webpack://koku-ui/./src/pages/views/details/components/breakdown/breakdown.styles.ts","webpack://koku-ui/./src/pages/views/details/components/tag/tag.styles.ts","webpack://koku-ui/./src/pages/views/details/components/tag/tagView.tsx","webpack://koku-ui/./src/pages/views/details/components/tag/tagModal.tsx","webpack://koku-ui/./src/pages/views/details/components/tag/tagLink.tsx","webpack://koku-ui/./src/pages/views/details/components/breakdown/breakdownHeader.styles.ts","webpack://koku-ui/./src/pages/views/details/components/breakdown/breakdownHeader.tsx","webpack://koku-ui/./src/pages/views/details/components/breakdown/breakdownBase.tsx","webpack://koku-ui/./src/pages/views/details/components/cluster/cluster.styles.ts","webpack://koku-ui/./src/pages/views/details/components/cluster/clusterModal.styles.ts","webpack://koku-ui/./src/pages/views/details/components/cluster/clusterView.tsx","webpack://koku-ui/./src/pages/views/details/components/cluster/clusterModal.tsx","webpack://koku-ui/./src/pages/views/details/components/cluster/cluster.tsx","webpack://koku-ui/./src/pages/views/details/components/costChart/costChart.styles.ts","webpack://koku-ui/./src/pages/views/details/components/costChart/costChart.tsx","webpack://koku-ui/./src/pages/views/details/components/summary/summaryModal.styles.ts","webpack://koku-ui/./src/pages/views/details/components/summary/summaryModalView.tsx","webpack://koku-ui/./src/pages/views/details/components/summary/summaryModal.tsx","webpack://koku-ui/./src/pages/views/details/components/summary/summaryCard.styles.ts","webpack://koku-ui/./src/pages/views/details/components/summary/summaryCard.tsx","webpack://koku-ui/./src/pages/views/details/components/usageChart/usageChart.styles.ts","webpack://koku-ui/./src/pages/views/details/components/usageChart/usageChart.tsx","webpack://koku-ui/./src/pages/views/details/components/costOverview/costOverviewBase.tsx","webpack://koku-ui/./src/components/charts/historicalCostChart/historicalCostChart.styles.ts","webpack://koku-ui/./src/components/charts/historicalCostChart/historicalCostChart.tsx","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalChart.styles.ts","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalDataCostChart.tsx","webpack://koku-ui/./src/components/charts/historicalTrendChart/historicalTrendChart.styles.ts","webpack://koku-ui/./src/components/charts/historicalTrendChart/historicalTrendChart.tsx","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalDataTrendChart.tsx","webpack://koku-ui/./src/components/charts/historicalUsageChart/historicalUsageChart.styles.ts","webpack://koku-ui/./src/components/charts/historicalUsageChart/historicalUsageChart.tsx","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalDataUsageChart.tsx","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalDataBase.tsx","webpack://koku-ui/./src/pages/views/details/ocpDetails/detailsHeader.styles.ts","webpack://koku-ui/./src/pages/views/utils/groupBy.ts","webpack://koku-ui/./src/pages/views/utils/paths.ts","webpack://koku-ui/./src/pages/views/utils/query.ts","webpack://koku-ui/./src/testIds.ts","webpack://koku-ui/./src/utils/equal.ts"],"names":["withRouter","title","PageHeader","PageHeaderTitle","Main","Unavailable","ResourceSelectBase","constructor","props","super","this","defaultState","createdOptions","isSelectExpanded","state","Object","assign","getOptions","resource","resourceFetchStatus","search","options","data","length","map","item","value","isNaN","account_alias","cluster_alias","key","name","moreOptions","val","getSelectOptions","option","SelectOption","handleOnCreateOption","trim","slice","push","setState","handleOnClear","onSearchChanged","undefined","handleOnFilter","event","handleOnSelect","onSelect","handleOnToggle","isOpen","handleOnTypeaheadInputChanged","bind","componentDidUpdate","prevProps","fetchResource","resourcePathsType","resourceType","query","render","intl","isDisabled","selectOptions","Select","isCreatable","isInputValuePersisted","onCreateOption","onClear","onFilter","onToggle","onTypeaheadInputChanged","placeholderText","formatMessage","messages","typeAheadAriaLabel","variant","SelectVariant","mapStateToProps","queryString","mapDispatchToProps","ResourceSelect","injectIntl","connect","ResourceTypeahead","searchTimeout","noop","handleOnSearch","clearTimeout","setTimeout","currentSearch","styles","export","marginRight","global_spacer_md","toolbarContainer","backgroundColor","global_BackgroundColor_light_100","paddingBottom","paddingTop","marginLeft","global_spacer_lg","defaultFilters","tag","DataToolbarBase","arguments","categoryInput","filters","cloneDeep","isBulkSelectOpen","isCategoryDropdownOpen","isOrgUnitSelectExpanded","isTagValueDropdownOpen","isTagKeySelectExpanded","isTagValueSelectExpanded","tagKeyValueInput","getDefaultCategory","categoryOptions","groupBy","group_by","indexOf","getActiveFilters","filter_by","keys","forEach","values","Array","isArray","substring","onDelete","type","chip","filterType","id","prevState","filter","s","_filterType","onFilterRemoved","getBulkSelect","isAllSelected","isBulkSelectDisabled","itemsPerPage","itemsTotal","selectedItems","numSelected","anySelected","isChecked","dropdownItems","DropdownItem","onClick","handleOnBulkSelectClicked","Dropdown","handleOnBulkSelect","position","DropdownPosition","toggle","DropdownToggle","splitButtonItems","DropdownToggleCheckbox","handleOnBulkSelectToggle","action","onBulkSelected","getCurrentCategoryOption","currentCategory","handleOnCategoryClick","handleOnCategorySelect","currentTagKey","handleOnCategoryToggle","getCategoryInput","categoryOption","ToolbarFilter","categoryName","chips","deleteChip","showToolbarItem","InputGroup","onCategoryInputSelect","TextInput","onChange","handleOnCategoryInputChange","placeholder","onKeyDown","evt","onCategoryInput","Button","ButtonVariant","getDefaultCategoryOptions","count","prevFilters","includes","onFilterAdded","getOrgUnitSelect","getOrgUnitOptions","toString","compareTo","find","selections","node","className","handleOnOrgUnitToggle","handleOnOrgUnitSelect","description","selection","checked","target","prevSelections","getTagKeySelect","getTagKeyOptions","selectOption","ToolbarItem","handleOnTagKeyClear","handleOnTagKeyToggle","handleOnTagKeySelect","getTagValueSelect","tagKeyOption","getTagValueOptions","onTagValueToggle","onTagValueSelect","onTagValueInputChange","onTagValueInput","getColumnManagement","handleColumnManagementClicked","getExportButton","isExportDisabled","spacer","default","handleExportClicked","onColumnManagementClicked","onExportClicked","componentDidMount","orgReport","tagReport","currentOrgUnit","getCategoryDropdown","style","width","sortedData","sort","a","b","roots","org","level","filteredOrgs","root","unshift","hasTagKeys","hasOwnProperty","keepData","_a","e","t","p","prototype","call","getOwnPropertySymbols","i","propertyIsEnumerable","__rest","uniqBy","uniq","Set","dateRange","pagination","showBulkSelect","showColumnManagement","showExport","showFilter","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarContent","ToolbarToggleGroup","breakpoint","toggleIcon","ToolbarGroup","Boolean","alignment","DataToolbar","alert","marginBottom","form","global_spacer_sm","modal","input","global_spacer_xs","ul","reportType","ExportSubmitBase","stateProps","dispatchProps","fetchReportClicked","getExport","report","reportFetchStatus","getFileName","handleClose","reportPathsType","resolution","timeScope","thisMonth","Date","lastMonth","setMonth","getMonth","currentMonth","format","previousMonth","provider","date","reportError","onClose","handleFetchReport","exportReport","onError","testIds","isAllItems","items","newQuery","JSON","parse","stringify","limit","offset","time_scope_value","order_by","perspective","getQueryString","ExportSubmitConnect","ExportSubmit","resolutionOptions","label","timeScopeOptions","ExportModalBase","error","handleError","handleMonthChange","_","currentTarget","handleResolutionChange","showAggregateType","showTimeScope","sortedItems","orderBy","selectedLabel","Modal","actions","Alert","Form","FormGroup","fieldId","index","Radio","isValid","groupItem","ExportModalConnect","ExportModal","groupBySelector","display","alignItems","groupBySelectorLabel","GroupByOrgBase","defaultItem","isGroupByOpen","getCurrentGroupBy","getIdKeyForGroupBy","queryFromRoute","location","groupByKeys","getGroupByItems","handleGroupByClear","currentItem","handleGroupBySelect","onItemClicked","handleGroupByToggle","groupByItems","GroupByOrg","GroupByTagBase","tagKey","GroupByTag","groupByOrgOptions","groupByTagOptions","orgReportType","tagReportType","GroupByBase","isGroupByOrgVisible","isGroupByTagVisible","handleGroupByClick","allOptions","component","fetchOrg","fetchTag","orgQueryString","orgReportPathsType","showOrgs","showTags","tagQueryString","tagReportPathsType","Title","headingLevel","size","endDate","startDate","tagQuery","start_date","end_date","time_scope_units","tagReportFetchStatus","orgReportFetchStatus","GroupByConnect","GroupBy","DetailsActionsBase","isDropdownOpen","isExportModalOpen","getExportModal","handleExportModalClose","handleExportModalOpen","showPriceListOption","redirectToCostModel","history","source_uuid","KebabToggle","isPlain","DetailsActionsConnect","Actions","content","paddingLeft","paddingRight","dataListHeading","fontWeight","global_FontWeight_bold","groupByHeading","tagLink","tagsContainer","global_spacer_3xl","marginTop","TagViewBase","getDataListItems","result","DataListItem","DataListItemRow","DataListItemCells","dataListCells","DataListCell","groupByValue","dataListItems","DataList","isCompact","TagView","TagModalBase","getTagValueCount","shouldComponentUpdate","nextProps","account","groupByOrgValue","TagModal","TagLinkBase","handleOpen","preventDefault","href","TagLink","cost","global_spacer_xl","costLabel","costValue","textAlign","costLabelDate","header","justifyContent","global_BackgroundColor_100","infoDescription","color","global_disabled_color_100","fontSize","global_FontSize_xs","tabs","BreakdownHeaderBase","buildDetailsLink","detailsURL","groupByKey","getTotalCost","hasCost","meta","total","units","filterByAccount","groupByOrg","Link","to","TitleSizes","BreakdownHeader","getIdKeyForTab","tab","BreakdownBase","activeTabKey","getAvailableTabs","contentRef","getTab","Tab","eventKey","tabContentId","tabContentRef","TabTitleText","getTabTitle","getTabContent","availableTabs","TabContent","ref","getTabItem","costOverviewComponent","historicalDataComponent","emptyTab","currentTab","getTabs","Tabs","activeKey","handleTabClick","tabIndex","updateReport","fetchReport","noReport","noLocation","emptyStateTitle","providers","providersFetchStatus","providerType","clustersContainer","height","subTitle","ClusterViewBase","clusters","cluster","ClusterView","ClusterModalBase","ClusterModal","ClusterBase","showAll","charCount","someClusters","allClusters","computedItems","getComputedReportItems","idKey","clusterString","concat","Cluster","chartStyles","chartHeight","chartWidth","chartSkeleton","CostChartBase","getLegendLabel","ChartLabel","text","getSkeleton","Skeleton","skeleton","hasMarkup","markup","hasRaw","raw","hasUsage","usage","markupUnits","rawUnits","usageUnits","markupValue","rawValue","usageValue","markupLabel","rawLabel","usageLabel","LegendLabel","Legend","ChartLegend","gutter","itemsPerRow","labelComponent","dy","lineHeight","rowGutter","ChartPie","ariaDesc","ariaTitle","constrainToVisibleArea","x","y","labels","datum","legendComponent","legendData","legendOrientation","legendPosition","padding","bottom","left","right","top","themeColor","ChartTheme","CostChart","mainContent","SummaryModalViewBase","reportGroupBy","hasTotal","status","_item","valueFormatterOptions","totalValue","valueFormatter","SummaryModalView","SummaryModalBase","SummaryModal","card","viewAllContainer","SummaryBase","isBulletChartModalOpen","getItems","getSummary","reportItem","getViewAll","findIndex","handleBulletChartModalOpen","ButtonType","handleBulletChartModalClose","Card","CardTitle","CardBody","CardFooter","SummaryCard","capacity","legendSkeleton","UsageChartBase","containerRef","observer","handleResize","clientWidth","current","getCpuChart","chartDatum","getChartDatumWithCapacity","getChartDatum","getFreeSpace","ChartBullet","comparativeErrorMeasureData","tooltip","comparativeErrorMeasureLegendData","legend","getChartHeight","legendItemsPerRow","getItemsPerRow","maxDomain","isDatumEmpty","minDomain","primarySegmentedMeasureData","primarySegmentedMeasureLegendData","qualitativeRangeData","ranges","qualitativeRangeLegendData","hasRange","range","componentWillUnmount","hasLimit","Math","trunc","limitUnits","hasRequest","request","requestUnits","hasCapacity","capacityUnits","unusedRequestCapacity","unusedUsageCapacity","unusedRequestCapacityPercentage","unusedUsageCapacityPercentage","Grid","hasGutter","GridItem","md","lg","percentage","UsageChart","PLACEHOLDER","CostOverviewsBase","getClusterChart","widget","showWidget","groupById","showWidgetOnGroupBy","getCostChart","Popover","enableFlip","bodyContent","rel","getCpuUsageChart","getMemoryUsageChart","getSummaryCard","reportSummary","usePlaceholder","getWidgetsColumns","selectWidgets","widgets","visibleWidgets","widgetId","renderedWidget","renderWidget","rows","floor","leftColumnWidgets","rightColumnWidgets","xl","CostOverviewBase","currentCapacityData","fill","currentColorScale","chart_color_green_400","chart_color_green_300","chart_color_green_200","chart_color_green_100","chart_color_green_500","currentInfrastructureCostData","strokeDasharray","currentCostData","previousCapacityData","previousColorScale","chart_color_blue_100","chart_color_blue_200","chart_color_blue_300","chart_color_blue_400","chart_color_blue_500","previousInfrastructureCostData","previousCostData","yAxis","axisLabel","grid","stroke","ticks","tickLabels","xAxis","chart","HistoricalCostChartBase","hiddenSeries","initDatum","costKey","costInfrastructureKey","costInfrastructureTooltipKey","costTooltipKey","series","childName","legendItem","symbol","cursorVoronoiContainer","getCursorVoronoiContainer","getChart","ChartArea","has","interpolation","CursorVoronoiContainer","cursorDimension","mouseFollowTooltips","voronoiDimension","voronoiPadding","getLegend","handleLegendClick","getEndDate","currentRequestDate","getDate","previousRequestDate","max","getEvents","chartNames","isHidden","legendName","onLegendClick","adjustContainerHeight","containerHeight","xAxisLabel","yAxisLabel","domain","ge","midDate","adjustedContainerHeight","container","disable","ChartLegendTooltip","day","Chart","containerComponent","events","theme","ChartAxis","C","tickValues","dependentAxis","HistoricalCostChart","chartContainer","costChart","trendChart","usageChart","HistoricalDataCostChartBase","currentQueryString","previousQueryString","currentReport","currentReportFetchStatus","previousReport","previousReportFetchStatus","currentData","previousData","costUnits","test","baseQuery","currentQuery","previousQuery","HistoricalDataCostChart","currentMonthData","previousMonthData","HistoricalTrendChartBase","showUsageLegendLabel","toolTipKey","previousDate","currentDate","HistoricalTrendChart","HistoricalDataTrendChartBase","isCostChart","Number","HistoricalDataTrendChart","currentLimitData","currentRequestData","currentUsageData","previousLimitData","previousRequestData","previousUsageData","HistoricalUsageChartBase","limitKey","limitTooltipKey","requestKey","requestTooltipKey","usageKey","usageTooltipKey","currentUsageDate","previousUsageDate","HistoricalUsageChart","HistoricalDataUsageChartBase","useFilter","HistoricalDataUsageChart","HistoricalDatasBase","getTrendChart","getUsageChart","HistoricalDataBase","costLabelUnit","dateTitle","info","verticalAlign","infoIcon","infoTitle","getGroupById","getGroupByValue","getGroupByOrgValue","getGroupByTagKey","groupByTagKey","tagIndex","getBreakdownPath","basePath","getOrgBreakdownPath","orgUnitId","addQueryFilter","filterValue","found","removeQueryFilter","getTestProps","details","cluster_lnk","historical_data_btn","show_more_btn","tag_lnk","view_all_btn","cancel_btn","submit_btn","login","username_input","password_input","submit","masthead","username","sidebarToggle","logout","onboarding","btn_cancel","btn_back","btn_continue","btn_close","type_selector","type_opt_aws","type_opt_ocp","type_opt_non","name_input","check_box_1","check_box_2","s3_input","clusterid_input","arn_input","add_btn","bucket_input","empty_state_add_btn","resource_name_input","cluster_id_input","type_input","sidebar","nav","link","backdrop","isEqual","obj1","obj2","split","join"],"mappings":"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","file":"8da9ff24e8d9c48cdeb6.bundle.js","sourcesContent":["import NoData from './noData';\nexport default NoData;\n","import Main from '@redhat-cloud-services/frontend-components/Main';\nimport PageHeader, { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Unavailable from '@redhat-cloud-services/frontend-components/Unavailable';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nconst NotAvailable = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(Unavailable, null))));\n};\nexport default withRouter(NotAvailable);\n","import NotAvailable from './notAvailable';\nexport default NotAvailable;\n","import { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { getQuery } from 'api/queries/query';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { resourceActions, resourceSelectors } from 'store/resources';\nclass ResourceSelectBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            createdOptions: [],\n            isSelectExpanded: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getOptions = () => {\n            const { resource, resourceFetchStatus, search } = this.props;\n            const { createdOptions } = this.state;\n            let options = [];\n            if (resource && resource.data && resource.data.length > 0 && resourceFetchStatus !== 1 /* inProgress */) {\n                options = resource.data.map(item => {\n                    const value = !isNaN(search) ? item.value : item.account_alias || item.cluster_alias || item.value;\n                    return {\n                        key: value,\n                        name: value,\n                    };\n                });\n            }\n            if (createdOptions && createdOptions.length) {\n                const moreOptions = createdOptions.map(val => {\n                    return {\n                        key: val,\n                        name: val,\n                    };\n                });\n                options = [...options, ...moreOptions];\n            }\n            return options;\n        };\n        this.getSelectOptions = () => {\n            const options = this.getOptions();\n            return options.map(option => {\n                return React.createElement(SelectOption, { key: option.key, value: option.key });\n            });\n        };\n        this.handleOnCreateOption = value => {\n            const { createdOptions } = this.state;\n            if (value.trim() === '') {\n                return;\n            }\n            let options = [...createdOptions];\n            if (options.length > 4) {\n                options = options.slice(1, options.length);\n            }\n            options.push(value);\n            this.setState({\n                createdOptions: options,\n            });\n        };\n        this.handleOnClear = () => {\n            const { onSearchChanged } = this.props;\n            if (onSearchChanged) {\n                onSearchChanged(undefined);\n            }\n            this.setState({\n                isSelectExpanded: false,\n            });\n        };\n        this.handleOnFilter = event => {\n            if (event === null) {\n                return null;\n            }\n            return this.getSelectOptions();\n        };\n        this.handleOnSelect = (event, value) => {\n            const { onSelect } = this.props;\n            if (value.trim() === '') {\n                return;\n            }\n            if (onSelect) {\n                onSelect(value);\n            }\n            this.setState({\n                isSelectExpanded: !this.state.isSelectExpanded,\n            });\n        };\n        this.handleOnToggle = isOpen => {\n            this.setState({\n                isSelectExpanded: isOpen,\n            });\n        };\n        this.handleOnTypeaheadInputChanged = value => {\n            const { onSearchChanged } = this.props;\n            onSearchChanged(value);\n        };\n        this.handleOnClear = this.handleOnClear.bind(this);\n        this.handleOnCreateOption = this.handleOnCreateOption.bind(this);\n        this.handleOnFilter = this.handleOnFilter.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnTypeaheadInputChanged = this.handleOnTypeaheadInputChanged.bind(this);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchResource, resourceFetchStatus, resourcePathsType, resourceType, search } = this.props;\n        if (search && prevProps.search !== search && resourceFetchStatus !== 1 /* inProgress */) {\n            const query = {\n                search,\n            };\n            const queryString = getQuery(query);\n            fetchResource(resourcePathsType, resourceType, queryString);\n        }\n    }\n    render() {\n        const { intl, isDisabled, resourceType } = this.props;\n        const { isSelectExpanded } = this.state;\n        const selectOptions = this.getSelectOptions();\n        return (React.createElement(Select, { isCreatable: true, isDisabled: isDisabled, isInputValuePersisted: false, isOpen: isSelectExpanded, onCreateOption: this.handleOnCreateOption, onClear: this.handleOnClear, onFilter: this.handleOnFilter, onSelect: this.handleOnSelect, onToggle: this.handleOnToggle, onTypeaheadInputChanged: this.handleOnTypeaheadInputChanged, placeholderText: intl.formatMessage(messages.FilterByPlaceholder, { value: resourceType }), typeAheadAriaLabel: intl.formatMessage(messages.FilterByInputAriaLabel, { value: resourceType }), variant: SelectVariant.typeahead }, selectOptions));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { resourcePathsType, resourceType, search }) => {\n    const query = {\n        search,\n    };\n    const queryString = getQuery(query);\n    const resource = resourceSelectors.selectResource(state, resourcePathsType, resourceType, queryString);\n    const resourceFetchStatus = resourceSelectors.selectResourceFetchStatus(state, resourcePathsType, resourceType, queryString);\n    return {\n        resource,\n        resourceFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchResource: resourceActions.fetchResource,\n};\nconst ResourceSelect = injectIntl(connect(mapStateToProps, mapDispatchToProps)(ResourceSelectBase));\nexport { ResourceSelect };\n","import React from 'react';\nimport { noop } from 'utils/noop';\nimport { ResourceSelect } from './resourceSelect';\nexport class ResourceTypeahead extends React.Component {\n    constructor(props) {\n        super(props);\n        this.searchTimeout = noop;\n        this.defaultState = {\n        // TBD ...\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleOnSearch = (value) => {\n            clearTimeout(this.searchTimeout);\n            // Delay was 750ms, but reduced -- https://issues.redhat.com/browse/COST-1742\n            this.searchTimeout = setTimeout(() => {\n                this.setState({\n                    currentSearch: value,\n                });\n            }, 625);\n        };\n        this.handleOnSelect = (value) => {\n            const { onSelect } = this.props;\n            if (onSelect) {\n                onSelect(value);\n            }\n            this.setState({\n                currentSearch: undefined,\n            });\n        };\n        this.handleOnSearch = this.handleOnSearch.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { isDisabled, resourcePathsType, resourceType } = this.props;\n        const { currentSearch } = this.state;\n        return (React.createElement(ResourceSelect, { isDisabled: isDisabled, onSearchChanged: this.handleOnSearch, onSelect: this.handleOnSelect, resourcePathsType: resourcePathsType, resourceType: resourceType, search: currentSearch }));\n    }\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    export: {\n        marginRight: global_spacer_md.value,\n    },\n    toolbarContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport './dataToolbar.scss';\nimport { Button, ButtonVariant, Dropdown, DropdownItem, DropdownPosition, DropdownToggle, DropdownToggleCheckbox, InputGroup, Select, SelectOption, SelectVariant, TextInput, Toolbar, ToolbarContent, ToolbarFilter, ToolbarGroup, ToolbarItem, ToolbarToggleGroup, } from '@patternfly/react-core';\nimport { ExportIcon } from '@patternfly/react-icons/dist/esm/icons/export-icon';\nimport { FilterIcon } from '@patternfly/react-icons/dist/esm/icons/filter-icon';\nimport { SearchIcon } from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport { orgUnitIdKey, orgUnitNameKey, tagKey, tagPrefix } from 'api/queries/query';\nimport { isResourceTypeValid } from 'api/resources/resourceUtils';\nimport messages from 'locales/messages';\nimport { cloneDeep } from 'lodash';\nimport { uniq, uniqBy } from 'lodash';\nimport { ResourceTypeahead } from 'pages/views/components/resourceTypeahead/resourceTypeahead';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { isEqual } from 'utils/equal';\nimport { styles } from './dataToolbar.styles';\nconst defaultFilters = {\n    tag: {},\n};\n// If the number of tag keys are greater or equal, then show text input Vs select\n// See https://github.com/project-koku/koku/pull/2069\nconst tagKeyValueLimit = 50;\nexport class DataToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            categoryInput: '',\n            filters: cloneDeep(defaultFilters),\n            isBulkSelectOpen: false,\n            isCategoryDropdownOpen: false,\n            isOrgUnitSelectExpanded: false,\n            isTagValueDropdownOpen: false,\n            isTagKeySelectExpanded: false,\n            isTagValueSelectExpanded: false,\n            tagKeyValueInput: '',\n        };\n        this.state = Object.assign({}, this.defaultState);\n        // Initialize\n        this.getDefaultCategory = () => {\n            const { categoryOptions, groupBy, query } = this.props;\n            if (!categoryOptions) {\n                return 'name';\n            }\n            if (query && query.group_by && query.group_by[orgUnitIdKey]) {\n                return orgUnitIdKey;\n            }\n            for (const option of categoryOptions) {\n                if (groupBy === option.key || (groupBy && groupBy.indexOf(tagPrefix) !== -1 && option.key === tagKey)) {\n                    return option.key;\n                }\n            }\n            return categoryOptions[0].key;\n        };\n        this.getActiveFilters = query => {\n            const filters = cloneDeep(defaultFilters);\n            if (query && query.filter_by) {\n                Object.keys(query.filter_by).forEach(key => {\n                    const values = Array.isArray(query.filter_by[key]) ? [...query.filter_by[key]] : [query.filter_by[key]];\n                    if (key.indexOf(tagPrefix) !== -1) {\n                        filters.tag[key.substring(tagPrefix.length)] = values;\n                    }\n                    else {\n                        filters[key] = values;\n                    }\n                });\n            }\n            return filters;\n        };\n        this.onDelete = (type, chip) => {\n            // Todo: workaround for https://github.com/patternfly/patternfly-react/issues/3552\n            // This prevents us from using a localized string, if necessary\n            const filterType = type && type.key ? type.key : type;\n            const id = chip && chip.key ? chip.key : chip;\n            if (filterType) {\n                this.setState((prevState) => {\n                    if (prevState.filters.tag[filterType]) {\n                        // Todo: use ID\n                        prevState.filters.tag[filterType] = prevState.filters.tag[filterType].filter(s => s !== id);\n                    }\n                    else if (prevState.filters[filterType]) {\n                        prevState.filters[filterType] = prevState.filters[filterType].filter(s => s !== id);\n                    }\n                    return {\n                        filters: prevState.filters,\n                    };\n                }, () => {\n                    const { filters } = this.state;\n                    const _filterType = filters.tag[filterType] ? `${tagPrefix}${filterType}` : filterType; // Todo: use ID\n                    this.props.onFilterRemoved(_filterType, id);\n                });\n            }\n            else {\n                this.setState({\n                    filters: cloneDeep(defaultFilters),\n                }, () => {\n                    this.props.onFilterRemoved(null); // Clear all\n                });\n            }\n        };\n        // Bulk select\n        this.getBulkSelect = () => {\n            const { intl, isAllSelected, isBulkSelectDisabled, isDisabled, itemsPerPage, itemsTotal, selectedItems } = this.props;\n            const { isBulkSelectOpen } = this.state;\n            const numSelected = isAllSelected ? itemsTotal : selectedItems ? selectedItems.length : 0;\n            const allSelected = (isAllSelected || numSelected === itemsTotal) && itemsTotal > 0;\n            const anySelected = numSelected > 0;\n            const someChecked = anySelected ? null : false;\n            const isChecked = allSelected ? true : someChecked;\n            const dropdownItems = [\n                React.createElement(DropdownItem, { key: \"item-1\", onClick: () => this.handleOnBulkSelectClicked('none') }, intl.formatMessage(messages.ToolBarBulkSelectNone)),\n                React.createElement(DropdownItem, { key: \"item-2\", onClick: () => this.handleOnBulkSelectClicked('page') }, intl.formatMessage(messages.ToolBarBulkSelectPage, { value: itemsPerPage })),\n                React.createElement(DropdownItem, { key: \"item-3\", onClick: () => this.handleOnBulkSelectClicked('all') }, intl.formatMessage(messages.ToolBarBulkSelectAll, { value: itemsTotal })),\n            ];\n            return (React.createElement(Dropdown, { onSelect: this.handleOnBulkSelect, position: DropdownPosition.left, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled || isBulkSelectDisabled, splitButtonItems: [\n                        React.createElement(DropdownToggleCheckbox, { id: \"bulk-select\", key: \"bulk-select\", \"aria-label\": intl.formatMessage(anySelected ? messages.ToolBarBulkSelectAriaDeselect : messages.ToolBarBulkSelectAriaSelect), isChecked: isChecked, onClick: () => {\n                                anySelected ? this.handleOnBulkSelectClicked('none') : this.handleOnBulkSelectClicked('all');\n                            } }),\n                    ], onToggle: this.handleOnBulkSelectToggle }, numSelected !== 0 && (React.createElement(React.Fragment, null, intl.formatMessage(messages.Selected, { value: numSelected })))), isOpen: isBulkSelectOpen, dropdownItems: dropdownItems }));\n        };\n        this.handleOnBulkSelectClicked = (action) => {\n            const { onBulkSelected } = this.props;\n            if (onBulkSelected) {\n                onBulkSelected(action);\n            }\n        };\n        this.handleOnBulkSelect = () => {\n            this.setState({\n                isBulkSelectOpen: !this.state.isBulkSelectOpen,\n            });\n        };\n        this.handleOnBulkSelectToggle = isOpen => {\n            this.setState({\n                isBulkSelectOpen: isOpen,\n            });\n        };\n        this.getCurrentCategoryOption = () => {\n            const { categoryOptions } = this.props;\n            const { currentCategory } = this.state;\n            if (!categoryOptions) {\n                return undefined;\n            }\n            for (const option of categoryOptions) {\n                if (currentCategory === option.key) {\n                    return option;\n                }\n            }\n            return categoryOptions[0];\n        };\n        this.handleOnCategoryClick = value => {\n            this.setState({\n                currentCategory: value,\n            });\n        };\n        this.handleOnCategorySelect = () => {\n            this.setState({\n                categoryInput: '',\n                currentTagKey: undefined,\n                isCategoryDropdownOpen: !this.state.isCategoryDropdownOpen,\n            });\n        };\n        this.handleOnCategoryToggle = isOpen => {\n            this.setState({\n                isCategoryDropdownOpen: isOpen,\n            });\n        };\n        // Category input\n        this.getCategoryInput = categoryOption => {\n            const { intl, isDisabled, resourcePathsType } = this.props;\n            const { currentCategory, filters, categoryInput } = this.state;\n            return (React.createElement(ToolbarFilter, { categoryName: categoryOption, chips: filters[categoryOption.key], deleteChip: this.onDelete, key: categoryOption.key, showToolbarItem: currentCategory === categoryOption.key },\n                React.createElement(InputGroup, null, isResourceTypeValid(resourcePathsType, categoryOption.key) ? (React.createElement(ResourceTypeahead, { isDisabled: isDisabled, onSelect: value => this.onCategoryInputSelect(value, categoryOption.key), resourcePathsType: resourcePathsType, resourceType: categoryOption.key })) : (React.createElement(React.Fragment, null,\n                    React.createElement(TextInput, { isDisabled: isDisabled, name: `${categoryOption.key}-input`, id: `${categoryOption.key}-input`, type: \"search\", \"aria-label\": intl.formatMessage(messages.FilterByInputAriaLabel, { value: categoryOption.key }), onChange: this.handleOnCategoryInputChange, value: categoryInput, placeholder: intl.formatMessage(messages.FilterByPlaceholder, { value: categoryOption.key }), onKeyDown: evt => this.onCategoryInput(evt, categoryOption.key) }),\n                    React.createElement(Button, { isDisabled: isDisabled, variant: ButtonVariant.control, \"aria-label\": intl.formatMessage(messages.FilterByButtonAriaLabel, { value: categoryOption.key }), onClick: evt => this.onCategoryInput(evt, categoryOption.key) },\n                        React.createElement(SearchIcon, null)))))));\n        };\n        this.getDefaultCategoryOptions = () => {\n            const { intl } = this.props;\n            return [{ name: intl.formatMessage(messages.Names, { count: 1 }), key: 'name' }];\n        };\n        this.handleOnCategoryInputChange = (value) => {\n            this.setState({ categoryInput: value });\n        };\n        this.onCategoryInput = (event, key) => {\n            const { categoryInput, currentCategory } = this.state;\n            if ((event && event.key && event.key !== 'Enter') || categoryInput.trim() === '') {\n                return;\n            }\n            this.setState((prevState) => {\n                const prevFilters = prevState.filters[key];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { [currentCategory]: prevFilters && prevFilters.includes(categoryInput)\n                            ? prevFilters\n                            : prevFilters\n                                ? [...prevFilters, categoryInput]\n                                : [categoryInput] }),\n                    categoryInput: '',\n                };\n            }, () => {\n                this.props.onFilterAdded(currentCategory, categoryInput);\n            });\n        };\n        this.onCategoryInputSelect = (value, key) => {\n            const { currentCategory } = this.state;\n            this.setState((prevState) => {\n                const prevFilters = prevState.filters[key];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { [currentCategory]: prevFilters && prevFilters.includes(value)\n                            ? prevFilters\n                            : prevFilters\n                                ? [...prevFilters, value]\n                                : [value] }),\n                    categoryInput: '',\n                };\n            }, () => {\n                this.props.onFilterAdded(currentCategory, value);\n            });\n        };\n        // Org unit select\n        this.getOrgUnitSelect = () => {\n            const { intl, isDisabled } = this.props;\n            const { currentCategory, filters, isOrgUnitSelectExpanded } = this.state;\n            const options = this.getOrgUnitOptions().map(option => ({\n                id: option.key,\n                toString: () => option.name,\n                compareTo: value => filters[orgUnitIdKey] ? filters[orgUnitIdKey].find(val => val === value.id) : false,\n            }));\n            const chips = []; // Get selected items as PatternFly's ToolbarChip type\n            const selections = []; // Select options and selections must be same type\n            if (filters[orgUnitIdKey] && Array.isArray(filters[orgUnitIdKey])) {\n                filters[orgUnitIdKey].map(id => {\n                    const option = options.find(val => val.id === id);\n                    if (option) {\n                        selections.push(option);\n                        chips.push({\n                            key: option.id,\n                            node: option.toString(),\n                        });\n                    }\n                });\n            }\n            // Todo: selectOverride is a workaround for https://github.com/patternfly/patternfly-react/issues/4477\n            return (React.createElement(ToolbarFilter, { categoryName: {\n                    key: orgUnitIdKey,\n                    name: intl.formatMessage(messages.FilterByValues, { value: 'org_unit_id' }),\n                }, chips: chips, deleteChip: this.onDelete, key: orgUnitIdKey, showToolbarItem: currentCategory === orgUnitIdKey },\n                React.createElement(Select, { isDisabled: isDisabled, className: \"selectOverride\", variant: SelectVariant.checkbox, \"aria-label\": intl.formatMessage(messages.FilterByOrgUnitAriaLabel), onToggle: this.handleOnOrgUnitToggle, onSelect: this.handleOnOrgUnitSelect, selections: selections, isOpen: isOrgUnitSelectExpanded, placeholderText: intl.formatMessage(messages.FilterByOrgUnitPlaceholder) }, options.map(option => (React.createElement(SelectOption, { description: option.id, key: option.id, value: option }))))));\n        };\n        this.handleOnOrgUnitSelect = (event, selection) => {\n            const checked = event.target.checked;\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters[orgUnitIdKey] ? prevState.filters[orgUnitIdKey] : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign({}, prevState.filters.tag), [orgUnitIdKey]: checked\n                            ? [...prevSelections, selection.id]\n                            : prevSelections.filter(value => value !== selection.id) }),\n                };\n            }, () => {\n                if (checked) {\n                    this.props.onFilterAdded(orgUnitIdKey, selection.id);\n                }\n                else {\n                    this.onDelete(orgUnitIdKey, selection.id);\n                }\n            });\n        };\n        this.handleOnOrgUnitToggle = isOpen => {\n            this.setState({\n                isOrgUnitSelectExpanded: isOpen,\n            });\n        };\n        // Tag key select\n        this.getTagKeySelect = () => {\n            const { intl, isDisabled } = this.props;\n            const { currentCategory, currentTagKey, isTagKeySelectExpanded } = this.state;\n            if (currentCategory !== tagKey) {\n                return null;\n            }\n            const selectOptions = this.getTagKeyOptions().map(selectOption => {\n                return React.createElement(SelectOption, { key: selectOption.key, value: selectOption.key });\n            });\n            return (React.createElement(ToolbarItem, null,\n                React.createElement(Select, { isDisabled: isDisabled, variant: SelectVariant.typeahead, typeAheadAriaLabel: intl.formatMessage(messages.FilterByTagKeyAriaLabel), onClear: this.handleOnTagKeyClear, onToggle: this.handleOnTagKeyToggle, onSelect: this.handleOnTagKeySelect, isOpen: isTagKeySelectExpanded, placeholderText: intl.formatMessage(messages.FilterByTagKeyPlaceholder), selections: currentTagKey }, selectOptions)));\n        };\n        this.handleOnTagKeyClear = () => {\n            this.setState({\n                currentTagKey: undefined,\n                isTagKeySelectExpanded: false,\n            });\n        };\n        this.handleOnTagKeySelect = (event, selection) => {\n            this.setState({\n                currentTagKey: selection,\n                isTagKeySelectExpanded: !this.state.isTagKeySelectExpanded,\n            });\n        };\n        this.handleOnTagKeyToggle = isOpen => {\n            this.setState({\n                isTagKeySelectExpanded: isOpen,\n            });\n        };\n        // Tag value select\n        this.getTagValueSelect = tagKeyOption => {\n            const { intl, isDisabled } = this.props;\n            const { currentCategory, currentTagKey, filters, isTagValueSelectExpanded, tagKeyValueInput } = this.state;\n            const selectOptions = this.getTagValueOptions().map(selectOption => {\n                return React.createElement(SelectOption, { key: selectOption.key, value: selectOption.key });\n            });\n            return (React.createElement(ToolbarFilter, { categoryName: tagKeyOption, chips: filters.tag[tagKeyOption.key], deleteChip: this.onDelete, key: tagKeyOption.key, showToolbarItem: currentCategory === tagKey && currentTagKey === tagKeyOption.key }, selectOptions.length < tagKeyValueLimit ? (React.createElement(Select, { isDisabled: isDisabled, variant: SelectVariant.checkbox, \"aria-label\": intl.formatMessage(messages.FilterByTagValueAriaLabel), onToggle: this.onTagValueToggle, onSelect: this.onTagValueSelect, selections: filters.tag[tagKeyOption.key] ? filters.tag[tagKeyOption.key] : [], isOpen: isTagValueSelectExpanded, placeholderText: intl.formatMessage(messages.FilterByTagValuePlaceholder) }, selectOptions)) : (React.createElement(InputGroup, null,\n                React.createElement(TextInput, { isDisabled: isDisabled, name: \"tagkeyvalue-input\", id: \"tagkeyvalue-input\", type: \"search\", \"aria-label\": intl.formatMessage(messages.FilterByTagValueAriaLabel), onChange: this.onTagValueInputChange, value: tagKeyValueInput, placeholder: intl.formatMessage(messages.FilterByTagValueInputPlaceholder), onKeyDown: evt => this.onTagValueInput(evt) }),\n                React.createElement(Button, { isDisabled: isDisabled, variant: ButtonVariant.control, \"aria-label\": intl.formatMessage(messages.FilterByTagValueButtonAriaLabel), onClick: evt => this.onTagValueInput(evt) },\n                    React.createElement(SearchIcon, null))))));\n        };\n        this.onTagValueInputChange = value => {\n            this.setState({ tagKeyValueInput: value });\n        };\n        this.onTagValueInput = event => {\n            const { currentTagKey, tagKeyValueInput } = this.state;\n            if ((event.key && event.key !== 'Enter') || tagKeyValueInput.trim() === '') {\n                return;\n            }\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters.tag[currentTagKey] ? prevState.filters.tag[currentTagKey] : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign(Object.assign({}, prevState.filters.tag), { [currentTagKey]: [...prevSelections, tagKeyValueInput] }) }),\n                    tagKeyValueInput: '',\n                };\n            }, () => {\n                this.props.onFilterAdded(`${tagPrefix}${currentTagKey}`, tagKeyValueInput);\n            });\n        };\n        this.onTagValueSelect = (event, selection) => {\n            const { currentTagKey } = this.state;\n            const checked = event.target.checked;\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters.tag[currentTagKey] ? prevState.filters.tag[currentTagKey] : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign(Object.assign({}, prevState.filters.tag), { [currentTagKey]: checked\n                                ? [...prevSelections, selection]\n                                : prevSelections.filter(value => value !== selection) }) }),\n                };\n            }, () => {\n                if (checked) {\n                    this.props.onFilterAdded(`${tagPrefix}${currentTagKey}`, selection);\n                }\n                else {\n                    this.onDelete(currentTagKey, selection);\n                }\n            });\n        };\n        this.onTagValueToggle = isOpen => {\n            this.setState({\n                isTagValueSelectExpanded: isOpen,\n            });\n        };\n        // Column management\n        this.getColumnManagement = () => {\n            const { intl } = this.props;\n            return (React.createElement(ToolbarItem, null,\n                React.createElement(Button, { onClick: this.handleColumnManagementClicked, variant: ButtonVariant.link }, intl.formatMessage(messages.DetailsColumnManagementTitle))));\n        };\n        // Export button\n        this.getExportButton = () => {\n            const { isDisabled, isExportDisabled } = this.props;\n            return (React.createElement(ToolbarItem, { spacer: {\n                    default: 'spacerNone',\n                } },\n                React.createElement(Button, { isDisabled: isDisabled || isExportDisabled, onClick: this.handleExportClicked, variant: ButtonVariant.plain },\n                    React.createElement(ExportIcon, null))));\n        };\n        this.handleColumnManagementClicked = () => {\n            this.props.onColumnManagementClicked();\n        };\n        this.handleExportClicked = () => {\n            this.props.onExportClicked();\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            currentCategory: this.getDefaultCategory(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { categoryOptions, groupBy, orgReport, query, tagReport } = this.props;\n        if (categoryOptions !== prevProps.categoryOptions ||\n            groupBy !== prevProps.groupBy ||\n            (query && !isEqual(query, prevProps.query)) ||\n            (orgReport && !isEqual(orgReport, prevProps.orgReport)) ||\n            (tagReport && !isEqual(tagReport, prevProps.tagReport))) {\n            this.setState(() => {\n                const filters = this.getActiveFilters(query);\n                return categoryOptions !== prevProps.categoryOptions || prevProps.groupBy !== groupBy\n                    ? {\n                        categoryInput: '',\n                        currentCategory: this.getDefaultCategory(),\n                        currentOrgUnit: '',\n                        currentTagKey: '',\n                        tagKeyValueInput: '',\n                        filters,\n                    }\n                    : {\n                        filters,\n                    };\n            });\n        }\n    }\n    // Category dropdown\n    getCategoryDropdown() {\n        const { categoryOptions, isDisabled } = this.props;\n        const { isCategoryDropdownOpen } = this.state;\n        if (!categoryOptions) {\n            return null;\n        }\n        return (React.createElement(ToolbarItem, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnCategorySelect, position: DropdownPosition.left, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled, onToggle: this.handleOnCategoryToggle, style: { width: '100%' } },\n                    React.createElement(FilterIcon, null),\n                    \" \",\n                    this.getCurrentCategoryOption().name), isOpen: isCategoryDropdownOpen, dropdownItems: categoryOptions &&\n                    categoryOptions.map(option => (React.createElement(DropdownItem, { key: option.key, onClick: () => this.handleOnCategoryClick(option.key) }, option.name))), style: { width: '100%' } })));\n    }\n    getOrgUnitOptions() {\n        const { orgReport } = this.props;\n        let options = [];\n        if (!(orgReport && orgReport.data)) {\n            return options;\n        }\n        // Sort all names first\n        const sortedData = orgReport.data.sort((a, b) => {\n            if (a[orgUnitNameKey] < b[orgUnitNameKey]) {\n                return -1;\n            }\n            if (a[orgUnitNameKey] > b[orgUnitNameKey]) {\n                return 1;\n            }\n            return 0;\n        });\n        // Move roots first\n        const roots = sortedData.filter(org => org.level === 0);\n        const filteredOrgs = sortedData.filter(org => org.level !== 0);\n        roots.map(root => {\n            const item = sortedData.find(org => org[orgUnitIdKey] === root[orgUnitIdKey]);\n            filteredOrgs.unshift(item);\n        });\n        if (filteredOrgs.length > 0) {\n            options = filteredOrgs.map(org => {\n                return {\n                    key: org[orgUnitIdKey],\n                    name: org[orgUnitNameKey],\n                };\n            });\n        }\n        return options;\n    }\n    getTagKeyOptions() {\n        const { tagReport } = this.props;\n        let data = [];\n        let options = [];\n        if (!(tagReport && tagReport.data)) {\n            return options;\n        }\n        // If the key_only param is used, we have an array of strings\n        let hasTagKeys = false;\n        for (const item of tagReport.data) {\n            if (item.hasOwnProperty('key')) {\n                hasTagKeys = true;\n                break;\n            }\n        }\n        // Workaround for https://github.com/project-koku/koku/issues/1797\n        if (hasTagKeys) {\n            const keepData = tagReport.data.map(\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            (_a) => {\n                var { type } = _a, keepProps = __rest(_a, [\"type\"]);\n                return keepProps;\n            });\n            data = uniqBy(keepData, 'key');\n        }\n        else {\n            data = uniq(tagReport.data);\n        }\n        if (data.length > 0) {\n            options = data.map(item => {\n                const key = hasTagKeys ? item.key : item;\n                return {\n                    key,\n                    name: key,\n                };\n            });\n        }\n        return options;\n    }\n    getTagValueOptions() {\n        const { tagReport } = this.props;\n        const { currentTagKey } = this.state;\n        let data = [];\n        if (tagReport && tagReport.data) {\n            data = [...new Set([...tagReport.data])]; // prune duplicates\n        }\n        let options = [];\n        if (data.length > 0) {\n            for (const tag of data) {\n                if (currentTagKey === tag.key && tag.values) {\n                    options = tag.values.map(val => {\n                        return {\n                            key: val,\n                            name: val,\n                        };\n                    });\n                    break;\n                }\n            }\n        }\n        return options;\n    }\n    render() {\n        const { categoryOptions, dateRange, pagination, showBulkSelect, showColumnManagement, showExport, showFilter, style, } = this.props;\n        const options = categoryOptions ? categoryOptions : this.getDefaultCategoryOptions();\n        // Todo: clearAllFilters workaround https://github.com/patternfly/patternfly-react/issues/4222\n        return (React.createElement(\"div\", { style: style ? style : styles.toolbarContainer },\n            React.createElement(Toolbar, { id: \"details-toolbar\", clearAllFilters: this.onDelete, collapseListedFiltersBreakpoint: \"xl\" },\n                React.createElement(ToolbarContent, null,\n                    React.createElement(ToolbarToggleGroup, { breakpoint: \"xl\", toggleIcon: React.createElement(FilterIcon, null) },\n                        showBulkSelect && React.createElement(ToolbarItem, { variant: \"bulk-select\" }, this.getBulkSelect()),\n                        showFilter && (React.createElement(ToolbarGroup, { variant: \"filter-group\" },\n                            this.getCategoryDropdown(),\n                            this.getTagKeySelect(),\n                            this.getTagKeyOptions().map(option => this.getTagValueSelect(option)),\n                            this.getOrgUnitSelect(),\n                            options &&\n                                options\n                                    .filter(option => option.key !== tagKey && option.key !== orgUnitIdKey)\n                                    .map(option => this.getCategoryInput(option)))),\n                        (Boolean(showExport) || Boolean(showColumnManagement)) && (React.createElement(ToolbarGroup, null,\n                            Boolean(showExport) && this.getExportButton(),\n                            Boolean(showColumnManagement) && this.getColumnManagement())),\n                        dateRange && React.createElement(ToolbarGroup, null, dateRange)),\n                    React.createElement(ToolbarItem, { alignment: { default: 'alignRight' }, variant: \"pagination\" }, pagination)))));\n    }\n}\nconst DataToolbar = injectIntl(DataToolbarBase);\nexport { DataToolbar };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    alert: {\n        marginBottom: global_spacer_md.var,\n    },\n    form: {\n        marginLeft: global_spacer_sm.var,\n    },\n    modal: {\n        input: {\n            marginRight: global_spacer_xs.var,\n        },\n        ul: {\n            marginLeft: global_spacer_sm.var,\n        },\n    },\n    title: {\n        marginBottom: global_spacer_md.var,\n    },\n};\n","import { Button, ButtonVariant } from '@patternfly/react-core';\nimport { getQuery, orgUnitIdKey } from 'api/queries/query';\nimport { format } from 'date-fns';\nimport fileDownload from 'js-file-download';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { exportActions, exportSelectors } from 'store/exports';\nimport { getTestProps, testIds } from 'testIds';\nconst reportType = \"cost\" /* cost */;\nexport class ExportSubmitBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            fetchReportClicked: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExport = () => {\n            const { report, reportFetchStatus } = this.props;\n            if (report && reportFetchStatus === 2 /* complete */) {\n                fileDownload(report.data, this.getFileName(), 'text/csv');\n                this.handleClose();\n            }\n        };\n        this.getFileName = () => {\n            const { groupBy, intl, reportPathsType, resolution, timeScope } = this.props;\n            const thisMonth = new Date();\n            const lastMonth = new Date().setMonth(thisMonth.getMonth() - 1);\n            const currentMonth = format(thisMonth, 'MMMM_yyyy');\n            const previousMonth = format(lastMonth - 1, 'MMMM_yyyy');\n            // defaultMessage: '{provider}-{groupBy}-{resolution}-{date}',\n            const fileName = intl.formatMessage(messages.ExportFileName, {\n                provider: reportPathsType,\n                groupBy,\n                resolution,\n                date: timeScope && timeScope === 'previous' ? previousMonth : currentMonth,\n            });\n            return `${fileName}.csv`;\n        };\n        this.handleClose = () => {\n            const { reportError } = this.props;\n            this.setState(Object.assign({}, this.defaultState), () => {\n                if (!reportError) {\n                    this.props.onClose(false);\n                }\n            });\n        };\n        this.handleFetchReport = () => {\n            const { exportReport, queryString, reportPathsType } = this.props;\n            exportReport(reportPathsType, reportType, queryString);\n            this.setState({\n                fetchReportClicked: true,\n            }, () => {\n                this.getExport();\n            });\n        };\n    }\n    componentDidUpdate(prevProps) {\n        const { report, reportError } = this.props;\n        const { fetchReportClicked } = this.state;\n        if (prevProps.report !== report && fetchReportClicked) {\n            this.getExport();\n        }\n        if (reportError) {\n            this.props.onError(reportError);\n        }\n    }\n    render() {\n        const { intl, reportFetchStatus } = this.props;\n        return (React.createElement(Button, Object.assign({}, getTestProps(testIds.export.submit_btn), { isDisabled: reportFetchStatus === 1 /* inProgress */, key: \"confirm\", onClick: this.handleFetchReport, variant: ButtonVariant.primary }), intl.formatMessage(messages.ExportDownload)));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const { groupBy, isAllItems, items, query, reportPathsType, resolution, timeScope } = props;\n    const getQueryString = () => {\n        const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { filter: {\n                limit: undefined,\n                offset: undefined,\n                resolution: resolution ? resolution : undefined,\n                time_scope_value: timeScope === 'previous' ? -2 : -1,\n            }, filter_by: {}, limit: 0, order_by: undefined, perspective: undefined, dateRange: undefined });\n        // Store filter_by as an array so we can add to it below\n        if (query.filter_by) {\n            for (const key of Object.keys(query.filter_by)) {\n                if (newQuery.filter_by[key] === undefined) {\n                    newQuery.filter_by[key] = [];\n                }\n                newQuery.filter_by[key].push(query.filter_by[key]);\n            }\n        }\n        if (isAllItems) {\n            // Ensure group_by isn't overridden -- org_unit_id is not unique\n            if (groupBy === orgUnitIdKey) {\n                if (newQuery.filter_by[orgUnitIdKey] === undefined) {\n                    newQuery.filter_by[orgUnitIdKey] = [];\n                }\n                newQuery.filter_by[orgUnitIdKey].push(query.group_by[orgUnitIdKey]);\n            }\n        }\n        else {\n            if (groupBy === orgUnitIdKey) {\n                for (const item of items) {\n                    // Note that type only exists when grouping by org units\n                    const type = item.type === 'organizational_unit' ? orgUnitIdKey : item.type;\n                    if (newQuery.filter_by[type] === undefined) {\n                        newQuery.filter_by[type] = [];\n                    }\n                    newQuery.filter_by[type].push(item.id);\n                }\n            }\n            else {\n                for (const item of items) {\n                    if (newQuery.filter_by[groupBy] === undefined) {\n                        newQuery.filter_by[groupBy] = [];\n                    }\n                    newQuery.filter_by[groupBy].push(item.id);\n                }\n            }\n        }\n        return getQuery(newQuery);\n    };\n    const queryString = getQueryString();\n    const report = exportSelectors.selectExport(state, reportPathsType, reportType, queryString);\n    const reportError = exportSelectors.selectExportError(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = exportSelectors.selectExportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportError,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    exportReport: exportActions.exportReport,\n};\nconst ExportSubmitConnect = connect(mapStateToProps, mapDispatchToProps)(ExportSubmitBase);\nconst ExportSubmit = injectIntl(ExportSubmitConnect);\nexport { ExportSubmit };\n","import { Alert, Button, ButtonVariant, Form, FormGroup, Modal, Radio } from '@patternfly/react-core';\nimport { tagPrefix } from 'api/queries/query';\nimport { format } from 'date-fns';\nimport messages from 'locales/messages';\nimport { orderBy } from 'lodash';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { exportActions } from 'store/exports';\nimport { getTestProps, testIds } from 'testIds';\nimport { styles } from './exportModal.styles';\nimport { ExportSubmit } from './exportSubmit';\nconst resolutionOptions = [\n    { label: messages.ExportResolution, value: 'daily' },\n    { label: messages.ExportResolution, value: 'monthly' },\n];\nconst timeScopeOptions = [\n    { label: messages.ExportTimeScope, value: 'current' },\n    { label: messages.ExportTimeScope, value: 'previous' },\n];\nexport class ExportModalBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            error: undefined,\n            timeScope: 'current',\n            resolution: this.props.resolution || 'monthly',\n        };\n        this.state = Object.assign({}, this.defaultState);\n        // Reset defult state upon close -- see https://issues.redhat.com/browse/COST-1134\n        this.handleClose = () => {\n            this.setState(Object.assign({}, this.defaultState), () => {\n                this.props.onClose(false);\n            });\n        };\n        this.handleError = (error) => {\n            this.setState({ error });\n        };\n        this.handleMonthChange = (_, event) => {\n            this.setState({ timeScope: event.currentTarget.value });\n        };\n        this.handleResolutionChange = (_, event) => {\n            this.setState({ resolution: event.currentTarget.value });\n        };\n        this.handleMonthChange = this.handleMonthChange.bind(this);\n        this.handleResolutionChange = this.handleResolutionChange.bind(this);\n    }\n    render() {\n        const { groupBy, intl, isAllItems, items, query, reportPathsType, showAggregateType = true, showTimeScope = true, } = this.props;\n        const { error, resolution, timeScope } = this.state;\n        let sortedItems = [...items];\n        if (this.props.isOpen) {\n            if (items && items.length === 0 && isAllItems) {\n                sortedItems = [\n                    {\n                        label: intl.formatMessage(messages.ExportAll),\n                    },\n                ];\n            }\n            else {\n                sortedItems = orderBy(sortedItems, ['label'], ['asc']);\n            }\n        }\n        let selectedLabel = intl.formatMessage(messages.ExportSelected, { groupBy });\n        if (groupBy.indexOf(tagPrefix) !== -1) {\n            selectedLabel = intl.formatMessage(messages.ExportSelected, { groupBy: 'tag' });\n        }\n        const thisMonth = new Date();\n        const lastMonth = new Date().setMonth(thisMonth.getMonth() - 1);\n        const currentMonth = format(thisMonth, 'MMMM yyyy');\n        const previousMonth = format(lastMonth - 1, 'MMMM yyyy');\n        return (React.createElement(Modal, { style: styles.modal, isOpen: this.props.isOpen, onClose: this.handleClose, title: intl.formatMessage(messages.ExportTitle), variant: \"small\", actions: [\n                React.createElement(ExportSubmit, { groupBy: groupBy, isAllItems: isAllItems, items: items, key: \"confirm\", timeScope: showTimeScope ? timeScope : undefined, onClose: this.handleClose, onError: this.handleError, query: query, reportPathsType: reportPathsType, resolution: resolution }),\n                React.createElement(Button, Object.assign({}, getTestProps(testIds.export.cancel_btn), { key: \"cancel\", onClick: this.handleClose, variant: ButtonVariant.link }), intl.formatMessage(messages.Cancel)),\n            ] },\n            error && React.createElement(Alert, { variant: \"danger\", style: styles.alert, title: intl.formatMessage(messages.ExportError) }),\n            React.createElement(\"div\", { style: styles.title },\n                React.createElement(\"span\", null, intl.formatMessage(messages.ExportHeading, { groupBy }))),\n            React.createElement(Form, { style: styles.form },\n                showAggregateType && (React.createElement(FormGroup, { label: intl.formatMessage(messages.ExportAggregateType), fieldId: \"aggregate-type\" },\n                    React.createElement(React.Fragment, null, resolutionOptions.map((option, index) => (React.createElement(Radio, { key: index, id: `resolution-${index}`, isValid: option.value !== undefined, label: intl.formatMessage(option.label, { value: option.value }), value: option.value, checked: resolution === option.value, name: \"resolution\", onChange: this.handleResolutionChange, \"aria-label\": intl.formatMessage(option.label, { value: option.value }) })))))),\n                showTimeScope && (React.createElement(FormGroup, { label: intl.formatMessage(messages.ExportTimeScopeTitle), fieldId: \"timeScope\" },\n                    React.createElement(React.Fragment, null, timeScopeOptions.map((option, index) => (React.createElement(Radio, { key: index, id: `timeScope-${index}`, isValid: option.value !== undefined, label: intl.formatMessage(option.label, {\n                            date: option.value === 'previous' ? previousMonth : currentMonth,\n                            value: option.value,\n                        }), value: option.value, checked: timeScope === option.value, name: \"timeScope\", onChange: this.handleMonthChange, \"aria-label\": intl.formatMessage(option.label, {\n                            date: option.value === 'previous' ? previousMonth : currentMonth,\n                            value: option.value,\n                        }) })))))),\n                React.createElement(FormGroup, { label: selectedLabel, fieldId: \"selected-labels\" },\n                    React.createElement(\"ul\", null, sortedItems.map((groupItem, index) => {\n                        return React.createElement(\"li\", { key: index }, groupItem.label);\n                    }))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {};\n});\nconst mapDispatchToProps = {\n    exportReport: exportActions.exportReport,\n};\nconst ExportModalConnect = connect(mapStateToProps, mapDispatchToProps)(ExportModalBase);\nconst ExportModal = injectIntl(ExportModalConnect);\nexport { ExportModal };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    groupBySelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    groupBySelectorLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n};\n","import { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { orgUnitIdKey, orgUnitNameKey, parseQuery } from 'api/queries/query';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { styles } from './groupBy.styles';\nclass GroupByOrgBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            defaultItem: this.props.groupBy || this.props.options[0].value,\n            isGroupByOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getCurrentGroupBy = () => {\n            const { getIdKeyForGroupBy } = this.props;\n            const queryFromRoute = parseQuery(location.search);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by ? Object.keys(queryFromRoute.group_by) : [];\n            let groupBy = getIdKeyForGroupBy(queryFromRoute.group_by);\n            for (const key of groupByKeys) {\n                const index = key.indexOf(orgUnitIdKey);\n                if (index !== -1) {\n                    groupBy = queryFromRoute.group_by[orgUnitIdKey];\n                    break;\n                }\n            }\n            return groupBy;\n        };\n        this.getGroupByItems = () => {\n            const { orgReport } = this.props;\n            if (!(orgReport && orgReport.data)) {\n                return [];\n            }\n            // Sort all names first\n            const sortedData = orgReport.data.sort((a, b) => {\n                if (a[orgUnitNameKey] < b[orgUnitNameKey]) {\n                    return -1;\n                }\n                if (a[orgUnitNameKey] > b[orgUnitNameKey]) {\n                    return 1;\n                }\n                return 0;\n            });\n            // Move roots first\n            const roots = sortedData.filter(org => org.level === 0);\n            const filteredOrgs = sortedData.filter(org => org.level !== 0);\n            roots.map(root => {\n                const item = sortedData.find(org => org[orgUnitIdKey] === root[orgUnitIdKey]);\n                filteredOrgs.unshift(item);\n            });\n            return filteredOrgs.map(org => ({\n                id: org[orgUnitIdKey],\n                toString: () => org[orgUnitNameKey],\n            }));\n        };\n        this.handleGroupByClear = () => {\n            this.setState({\n                currentItem: undefined,\n            });\n        };\n        this.handleGroupBySelect = (event, selection) => {\n            const { onItemClicked } = this.props;\n            this.setState({\n                currentItem: selection.id,\n                isGroupByOpen: false,\n            });\n            if (onItemClicked) {\n                onItemClicked(`${orgUnitIdKey}${selection.id}`);\n            }\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({ isGroupByOpen });\n        };\n        this.handleGroupByClear = this.handleGroupByClear.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { groupBy } = this.props;\n        if (prevProps.groupBy !== groupBy) {\n            this.setState({ currentItem: this.getCurrentGroupBy() });\n        }\n    }\n    render() {\n        const { isDisabled = false, intl } = this.props;\n        const { currentItem, isGroupByOpen } = this.state;\n        const groupByItems = this.getGroupByItems();\n        const selection = groupByItems.find((item) => item.id === currentItem);\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(Select, { \"aria-label\": intl.formatMessage(messages.FilterByOrgUnitAriaLabel), isDisabled: isDisabled, onClear: this.handleGroupByClear, onToggle: this.handleGroupByToggle, onSelect: this.handleGroupBySelect, isOpen: isGroupByOpen, placeholderText: intl.formatMessage(messages.FilterByOrgUnitPlaceholder), selections: selection, variant: SelectVariant.typeahead }, groupByItems.map(item => (React.createElement(SelectOption, { description: item.id, key: item.id, value: item }))))));\n    }\n}\nconst GroupByOrg = injectIntl(GroupByOrgBase);\nexport { GroupByOrg };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { parseQuery, tagPrefix } from 'api/queries/query';\nimport messages from 'locales/messages';\nimport { uniq, uniqBy } from 'lodash';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { styles } from './groupBy.styles';\nclass GroupByTagBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isGroupByOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getGroupByItems = () => {\n            const { tagReport } = this.props;\n            if (!(tagReport && tagReport.data)) {\n                return [];\n            }\n            // If the key_only param is used, we have an array of strings\n            let hasTagKeys = false;\n            for (const item of tagReport.data) {\n                if (item.hasOwnProperty('key')) {\n                    hasTagKeys = true;\n                    break;\n                }\n            }\n            // Workaround for https://github.com/project-koku/koku/issues/1797\n            let data = [];\n            if (hasTagKeys) {\n                const keepData = tagReport.data.map(\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                (_a) => {\n                    var { type } = _a, keepProps = __rest(_a, [\"type\"]);\n                    return keepProps;\n                });\n                data = uniqBy(keepData, 'key');\n            }\n            else {\n                data = uniq(tagReport.data);\n            }\n            return data.map(item => {\n                const tagKey = hasTagKeys ? item.key : item;\n                return React.createElement(SelectOption, { key: item.key, value: tagKey });\n            });\n        };\n        this.getCurrentGroupBy = () => {\n            const queryFromRoute = parseQuery(location.search);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by ? Object.keys(queryFromRoute.group_by) : [];\n            let groupBy;\n            for (const key of groupByKeys) {\n                const index = key.indexOf(tagPrefix);\n                if (index !== -1) {\n                    groupBy = key.slice(tagPrefix.length);\n                    break;\n                }\n            }\n            return groupBy;\n        };\n        this.handleGroupByClear = () => {\n            this.setState({\n                currentItem: undefined,\n            });\n        };\n        this.handleGroupBySelect = (event, selection) => {\n            const { onItemClicked } = this.props;\n            this.setState({\n                currentItem: selection,\n                isGroupByOpen: false,\n            });\n            if (onItemClicked) {\n                onItemClicked(`${tagPrefix}${selection}`);\n            }\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({ isGroupByOpen });\n        };\n        this.handleGroupByClear = this.handleGroupByClear.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { groupBy } = this.props;\n        if (prevProps.groupBy !== groupBy) {\n            this.setState({ currentItem: this.getCurrentGroupBy() });\n        }\n    }\n    render() {\n        const { isDisabled, intl } = this.props;\n        const { currentItem, isGroupByOpen } = this.state;\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(Select, { \"aria-label\": intl.formatMessage(messages.FilterByTagKeyAriaLabel), isDisabled: isDisabled, onClear: this.handleGroupByClear, onToggle: this.handleGroupByToggle, onSelect: this.handleGroupBySelect, isOpen: isGroupByOpen, placeholderText: intl.formatMessage(messages.FilterByTagKeyPlaceholder), selections: currentItem, variant: SelectVariant.typeahead }, this.getGroupByItems())));\n    }\n}\nconst GroupByTag = injectIntl(GroupByTagBase);\nexport { GroupByTag };\n","import { Dropdown, DropdownItem, DropdownToggle, Title } from '@patternfly/react-core';\nimport { getQuery, orgUnitIdKey, parseQuery, tagKey, tagPrefix } from 'api/queries/query';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { orgActions, orgSelectors } from 'store/orgs';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { styles } from './groupBy.styles';\nimport { GroupByOrg } from './groupByOrg';\nimport { GroupByTag } from './groupByTag';\nconst groupByOrgOptions = [{ label: orgUnitIdKey, value: orgUnitIdKey }];\nconst groupByTagOptions = [{ label: tagKey, value: tagKey }];\nconst orgReportType = \"org\" /* org */;\nconst tagReportType = \"tag\" /* tag */;\nclass GroupByBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            defaultItem: this.props.groupBy || this.props.options[0].value,\n            isGroupByOpen: false,\n            isGroupByOrgVisible: false,\n            isGroupByTagVisible: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleGroupByClick = value => {\n            const { onItemClicked } = this.props;\n            if (value === orgUnitIdKey || value === tagKey) {\n                this.setState({\n                    currentItem: value,\n                    isGroupByOrgVisible: value === orgUnitIdKey,\n                    isGroupByTagVisible: value === tagKey,\n                });\n            }\n            else {\n                this.setState({\n                    currentItem: value,\n                    isGroupByOrgVisible: false,\n                    isGroupByTagVisible: false,\n                });\n                if (onItemClicked) {\n                    onItemClicked(value);\n                }\n            }\n        };\n        this.getGroupByItems = () => {\n            const { options, orgReport, tagReport, intl } = this.props;\n            const allOptions = [...options];\n            if (orgReport && orgReport.data && orgReport.data.length > 0) {\n                allOptions.push(...groupByOrgOptions);\n            }\n            if (tagReport && tagReport.data && tagReport.data.length > 0) {\n                allOptions.push(...groupByTagOptions);\n            }\n            return allOptions.map(option => (React.createElement(DropdownItem, { component: \"button\", key: option.value, onClick: () => this.handleGroupByClick(option.value) }, intl.formatMessage(messages.GroupByValuesTitleCase, { value: option.label, count: 1 }))));\n        };\n        this.getCurrentGroupBy = () => {\n            const { getIdKeyForGroupBy } = this.props;\n            const { defaultItem } = this.state;\n            const queryFromRoute = parseQuery(location.search);\n            if (!(queryFromRoute && queryFromRoute.group_by)) {\n                return defaultItem;\n            }\n            let groupBy = getIdKeyForGroupBy(queryFromRoute.group_by);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by ? Object.keys(queryFromRoute.group_by) : [];\n            for (const key of groupByKeys) {\n                let index = key.indexOf(tagPrefix);\n                if (index !== -1) {\n                    groupBy = tagKey;\n                    this.setState({\n                        isGroupByTagVisible: true,\n                    });\n                    break;\n                }\n                index = key.indexOf(orgUnitIdKey);\n                if (index !== -1) {\n                    groupBy = orgUnitIdKey;\n                    this.setState({\n                        isGroupByOrgVisible: true,\n                    });\n                    break;\n                }\n            }\n            return groupBy !== 'date' ? groupBy : defaultItem;\n        };\n        this.handleGroupBySelect = () => {\n            this.setState({\n                isGroupByOpen: !this.state.isGroupByOpen,\n            });\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({\n                isGroupByOpen,\n            });\n        };\n        this.handleGroupByClick = this.handleGroupByClick.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        const { fetchOrg, fetchTag, orgQueryString, orgReportPathsType, showOrgs, showTags, tagQueryString, tagReportPathsType, } = this.props;\n        if (showOrgs) {\n            fetchOrg(orgReportPathsType, orgReportType, orgQueryString);\n        }\n        if (showTags) {\n            fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n        }\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchOrg, fetchTag, groupBy, orgQueryString, orgReportPathsType, perspective, showOrgs, showTags, tagQueryString, tagReportPathsType, } = this.props;\n        if (prevProps.groupBy !== groupBy || prevProps.perspective !== perspective) {\n            if (showOrgs) {\n                fetchOrg(orgReportPathsType, orgReportType, orgQueryString);\n            }\n            if (showTags) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n            let options;\n            if (prevProps.perspective !== perspective) {\n                options = {\n                    isGroupByOrgVisible: false,\n                    isGroupByTagVisible: false,\n                };\n            }\n            this.setState(Object.assign({ currentItem: this.getCurrentGroupBy() }, (options ? options : {})));\n        }\n    }\n    render() {\n        const { getIdKeyForGroupBy, groupBy, isDisabled = false, onItemClicked, orgReport, intl, tagReport } = this.props;\n        const { currentItem, isGroupByOpen, isGroupByOrgVisible, isGroupByTagVisible } = this.state;\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\", style: styles.groupBySelectorLabel }, intl.formatMessage(messages.GroupByLabel)),\n            React.createElement(Dropdown, { onSelect: this.handleGroupBySelect, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled, onToggle: this.handleGroupByToggle }, intl.formatMessage(messages.GroupByValuesTitleCase, { value: currentItem, count: 1 })), isOpen: isGroupByOpen, dropdownItems: [this.getGroupByItems()] }),\n            Boolean(isGroupByOrgVisible) && (React.createElement(GroupByOrg, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: isDisabled, onItemClicked: onItemClicked, options: groupByOrgOptions, orgReport: orgReport })),\n            Boolean(isGroupByTagVisible) && (React.createElement(GroupByTag, { groupBy: groupBy, isDisabled: isDisabled, onItemClicked: onItemClicked, options: groupByTagOptions, tagReport: tagReport }))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { endDate, startDate, orgReportPathsType, tagReportPathsType }) => {\n    const tagQuery = endDate && startDate\n        ? {\n            start_date: startDate,\n            end_date: endDate,\n        }\n        : {\n            filter: {\n                resolution: 'monthly',\n                time_scope_units: 'month',\n                time_scope_value: -1,\n            },\n        };\n    // Omitting key_only to share a single, cached request -- although the header doesn't need key values, the toolbar does\n    const tagQueryString = getQuery(Object.assign({}, tagQuery));\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, tagQueryString);\n    const orgQueryString = getQuery({\n    // TBD...\n    });\n    const orgReport = orgSelectors.selectOrg(state, orgReportPathsType, orgReportType, orgQueryString);\n    const orgReportFetchStatus = orgSelectors.selectOrgFetchStatus(state, orgReportPathsType, orgReportType, orgQueryString);\n    return {\n        orgQueryString,\n        orgReport,\n        orgReportFetchStatus,\n        tagQueryString,\n        tagReport,\n        tagReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchOrg: orgActions.fetchOrg,\n    fetchTag: tagActions.fetchTag,\n};\nconst GroupByConnect = connect(mapStateToProps, mapDispatchToProps)(GroupByBase);\nconst GroupBy = injectIntl(GroupByConnect);\nexport { GroupBy };\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport { tagPrefix } from 'api/queries/query';\nimport messages from 'locales/messages';\nimport { ExportModal } from 'pages/views/components/export/exportModal';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, query, reportPathsType } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, query: query, reportPathsType: reportPathsType }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, intl, redirectToCostModel, history, item: { source_uuid }, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, intl.formatMessage(messages.DetailsActionsExport)),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], history) }, intl.formatMessage(messages.DetailsActionsPriceList)));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = injectIntl(withRouter(DetailsActionsConnect));\nexport { Actions };\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const styles = {\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingLeft: global_spacer_lg.value,\n        paddingRight: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n};\n","import global_FontWeight_bold from '@patternfly/react-tokens/dist/js/global_FontWeight_bold';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    dataListHeading: {\n        fontWeight: global_FontWeight_bold.value,\n    },\n    groupByHeading: {\n        marginBottom: global_spacer_lg.value,\n    },\n    tagLink: {\n        marginLeft: global_spacer_sm.value,\n    },\n    tagsContainer: {\n        marginRight: global_spacer_3xl.value,\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import { DataList, DataListCell, DataListItem, DataListItemCells, DataListItemRow } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { styles } from './tag.styles';\nclass TagViewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDataListItems = () => {\n            const { tagReport } = this.props;\n            const result = [];\n            if (tagReport) {\n                for (const item of tagReport.data) {\n                    for (const val of item.values) {\n                        const id = `${item.key}:${val}`;\n                        result.push(React.createElement(DataListItem, { \"aria-labelledby\": id, key: `${id}-item` },\n                            React.createElement(DataListItemRow, null,\n                                React.createElement(DataListItemCells, { dataListCells: [\n                                        React.createElement(DataListCell, { key: `${id}-cell1` },\n                                            React.createElement(\"span\", { id: id }, item.key)),\n                                        React.createElement(DataListCell, { key: `${id}-cell2` }, val),\n                                    ] }))));\n                    }\n                }\n            }\n            return result;\n        };\n    }\n    render() {\n        const { groupBy, groupByValue, intl } = this.props;\n        const dataListItems = this.getDataListItems();\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", null,\n                React.createElement(\"span\", { style: styles.dataListHeading }, intl.formatMessage(messages.GroupByValues, { value: groupBy, count: 1 }))),\n            React.createElement(\"div\", { style: styles.groupByHeading },\n                React.createElement(\"span\", null, groupByValue)),\n            React.createElement(DataList, { \"aria-label\": intl.formatMessage(messages.TagNames), isCompact: true },\n                React.createElement(DataListItem, { \"aria-labelledby\": \"heading1\" },\n                    React.createElement(DataListItemRow, null,\n                        React.createElement(DataListItemCells, { dataListCells: [\n                                React.createElement(DataListCell, { key: \"primary content\" },\n                                    React.createElement(\"span\", { id: \"heading1\", style: styles.dataListHeading }, intl.formatMessage(messages.TagHeadingKey))),\n                                React.createElement(DataListCell, { key: \"secondary content\" },\n                                    React.createElement(\"span\", { id: \"heading2\", style: styles.dataListHeading }, intl.formatMessage(messages.TagHeadingValue))),\n                            ] }))),\n                dataListItems.map(item => item))));\n    }\n}\nconst TagView = injectIntl(connect()(TagViewBase));\nexport { TagView };\n","import { Modal } from '@patternfly/react-core';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport messages from 'locales/messages';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { TagView } from './tagView';\nconst tagReportType = \"tag\" /* tag */;\nclass TagModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getTagValueCount = () => {\n            const { tagReport } = this.props;\n            let count = 0;\n            if (tagReport) {\n                for (const item of tagReport.data) {\n                    if (item.values) {\n                        count += item.values.length;\n                    }\n                }\n            }\n            return count;\n        };\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    componentDidMount() {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        fetchTag(tagReportPathsType, tagReportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchTag(tagReportPathsType, tagReportType, queryString);\n        }\n    }\n    shouldComponentUpdate(nextProps) {\n        const { groupByValue, isOpen } = this.props;\n        return nextProps.groupByValue !== groupByValue || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { groupBy, isOpen, query, tagReport, intl } = this.props;\n        // Match page header description\n        const groupByValue = query && query.filter && query.filter.account ? query.filter.account : this.props.groupByValue;\n        return (React.createElement(Modal, { isOpen: isOpen, onClose: this.handleClose, title: intl.formatMessage(messages.TagHeadingTitle, { value: this.getTagValueCount() }), width: '50%' },\n            React.createElement(TagView, { groupBy: groupBy, groupByValue: groupByValue, tagReport: tagReport })));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { tagReportPathsType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = groupByOrgValue ? orgUnitIdKey : getGroupById(query);\n    const groupByValue = groupByOrgValue ? groupByOrgValue : getGroupByValue(query);\n    const newQuery = {\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        filter_by: Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: groupByValue })),\n    };\n    const queryString = getQuery(newQuery);\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, queryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, queryString);\n    return {\n        groupBy,\n        groupByValue,\n        query,\n        queryString,\n        tagReport,\n        tagReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst TagModal = injectIntl(connect(mapStateToProps, mapDispatchToProps)(TagModalBase));\nexport { TagModal };\n","import { TagIcon } from '@patternfly/react-icons/dist/esm/icons/tag-icon';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { getTestProps, testIds } from 'testIds';\nimport { styles } from './tag.styles';\nimport { TagModal } from './tagModal';\nconst tagReportType = \"tag\" /* tag */;\nclass TagLinkBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleClose = (isOpen) => {\n            this.setState({ isOpen });\n        };\n        this.handleOpen = event => {\n            this.setState({ isOpen: true });\n            event.preventDefault();\n            return false;\n        };\n        this.handleClose = this.handleClose.bind(this);\n        this.handleOpen = this.handleOpen.bind(this);\n    }\n    componentDidMount() {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        fetchTag(tagReportPathsType, tagReportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchTag(tagReportPathsType, tagReportType, queryString);\n        }\n    }\n    render() {\n        const { id, tagReport, tagReportPathsType } = this.props;\n        const { isOpen } = this.state;\n        let count = 0;\n        if (tagReport) {\n            for (const item of tagReport.data) {\n                if (item.values) {\n                    count += item.values.length;\n                }\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.tagsContainer, id: id },\n            Boolean(count > 0) && (React.createElement(React.Fragment, null,\n                React.createElement(TagIcon, null),\n                React.createElement(\"a\", Object.assign({}, getTestProps(testIds.details.tag_lnk), { href: \"#/\", onClick: this.handleOpen, style: styles.tagLink }), count))),\n            React.createElement(TagModal, { isOpen: isOpen, onClose: this.handleClose, tagReportPathsType: tagReportPathsType })));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { tagReportPathsType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = groupByOrgValue ? orgUnitIdKey : getGroupById(query);\n    const groupByValue = groupByOrgValue ? groupByOrgValue : getGroupByValue(query);\n    const newQuery = {\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        filter_by: Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: groupByValue })),\n    };\n    const queryString = getQuery(newQuery);\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, queryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, queryString);\n    return {\n        groupBy,\n        groupByValue,\n        query,\n        queryString,\n        tagReport,\n        tagReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst TagLink = injectIntl(connect(mapStateToProps, mapDispatchToProps)(TagLinkBase));\nexport { TagLink };\n","import global_BackgroundColor_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_xl from '@patternfly/react-tokens/dist/js/global_spacer_xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    cost: {\n        marginTop: global_spacer_xl.var,\n    },\n    costLabel: {\n        marginTop: global_spacer_xs.var,\n    },\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n        textAlign: 'right',\n    },\n    costLabelDate: {\n        textAlign: 'right',\n    },\n    header: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        paddingLeft: global_spacer_lg.var,\n        paddingRight: global_spacer_lg.var,\n        paddingTop: global_spacer_lg.var,\n        backgroundColor: global_BackgroundColor_100.var,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    tabs: {\n        display: 'flex',\n    },\n    tag: {\n        marginLeft: global_spacer_lg.var,\n    },\n    title: {\n        paddingBottom: global_spacer_lg.var,\n        paddingTop: global_spacer_md.var,\n    },\n};\n","import './breakdownHeader.scss';\nimport { Title, TitleSizes } from '@patternfly/react-core';\nimport { AngleLeftIcon } from '@patternfly/react-icons/dist/esm/icons/angle-left-icon';\nimport { breakdownDescKey, breakdownTitleKey, getQueryRoute, orgUnitIdKey } from 'api/queries/query';\nimport messages from 'locales/messages';\nimport { TagLink } from 'pages/views/details/components/tag/tagLink';\nimport { getGroupByOrgValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { getForDateRangeString } from 'utils/dateRange';\nimport { formatCurrency } from 'utils/valueFormatter';\nimport { styles } from './breakdownHeader.styles';\nclass BreakdownHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.buildDetailsLink = () => {\n            const { detailsURL, groupBy, query } = this.props;\n            let groupByKey = groupBy;\n            let value = '*';\n            // Retrieve org unit used by the details page\n            if (query[orgUnitIdKey]) {\n                groupByKey = orgUnitIdKey;\n                value = query[orgUnitIdKey];\n            }\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { group_by: {\n                    [groupByKey]: value,\n                } });\n            // Don't want these params when returning to the details page\n            if (newQuery.filter) {\n                newQuery.filter.account = undefined;\n                newQuery[breakdownDescKey] = undefined;\n                newQuery[orgUnitIdKey] = undefined;\n                newQuery[breakdownTitleKey] = undefined;\n            }\n            return `${detailsURL}?${getQueryRoute(newQuery)}`;\n        };\n        this.getTotalCost = () => {\n            const { report } = this.props;\n            const hasCost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total;\n            const cost = formatCurrency(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD');\n            return cost;\n        };\n    }\n    render() {\n        const { description, groupBy, query, intl, tabs, tagReportPathsType, title } = this.props;\n        const filterByAccount = query && query.filter ? query.filter.account : undefined;\n        const groupByOrg = getGroupByOrgValue(query);\n        const showTags = filterByAccount || groupBy === 'account' || groupBy === 'project' || groupBy === 'subscription_guid';\n        // i18n groupBy key\n        const groupByKey = groupBy ? groupBy : filterByAccount ? 'account' : groupByOrg ? orgUnitIdKey : undefined;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", null,\n                React.createElement(\"nav\", { \"aria-label\": intl.formatMessage(messages.BreakdownBackToDetailsAriaLabel), className: \"breadcrumbOverride\" },\n                    React.createElement(\"ol\", { className: \"pf-c-breadcrumb__list\" },\n                        React.createElement(\"li\", { className: \"pf-c-breadcrumb__item\" },\n                            React.createElement(\"span\", { className: \"pf-c-breadcrumb__item-divider\" },\n                                React.createElement(AngleLeftIcon, null)),\n                            React.createElement(Link, { to: this.buildDetailsLink() }, intl.formatMessage(messages.BreakdownBackToDetails, {\n                                value: tagReportPathsType,\n                                groupBy: groupByKey,\n                            }))))),\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] },\n                    intl.formatMessage(messages.BreakdownTitle, { value: title }),\n                    description && React.createElement(\"div\", { style: styles.infoDescription }, description)),\n                React.createElement(\"div\", { style: styles.tabs },\n                    tabs,\n                    React.createElement(\"div\", { style: styles.tag }, Boolean(showTags) && React.createElement(TagLink, { id: \"tags\", tagReportPathsType: tagReportPathsType })))),\n            React.createElement(\"div\", { style: styles.cost },\n                React.createElement(\"div\", { style: styles.costLabel },\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: TitleSizes['4xl'] },\n                        React.createElement(\"span\", null, this.getTotalCost()))),\n                React.createElement(\"div\", { style: styles.costLabelDate }, getForDateRangeString(intl.formatMessage(messages.GroupByValuesTitleCase, { value: groupByKey, count: 2 }), messages.BreakdownTotalCostDate, 0)))));\n    }\n}\nconst BreakdownHeader = injectIntl(BreakdownHeaderBase);\nexport { BreakdownHeader };\n","import { Tab, TabContent, Tabs, TabTitleText } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport Loading from 'pages/state/loading';\nimport NoData from 'pages/state/noData';\nimport NoProviders from 'pages/state/noProviders';\nimport NotAvailable from 'pages/state/notAvailable';\nimport { hasCurrentMonthData } from 'pages/views/utils/providers';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { styles } from './breakdown.styles';\nimport { BreakdownHeader } from './breakdownHeader';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"cost-overview\" /* costOverview */:\n            return 'cost-overview';\n        case \"historical-data\" /* historicalData */:\n            return 'historical-data';\n    }\n};\nclass BreakdownBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            activeTabKey: 0,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getAvailableTabs = () => {\n            const availableTabs = [\n                {\n                    contentRef: React.createRef(),\n                    tab: \"cost-overview\" /* costOverview */,\n                },\n                {\n                    contentRef: React.createRef(),\n                    tab: \"historical-data\" /* historicalData */,\n                },\n            ];\n            return availableTabs;\n        };\n        this.getTab = (tab, contentRef, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, tabContentId: `tab-${index}`, tabContentRef: contentRef, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) }));\n        };\n        this.getTabContent = (availableTabs) => {\n            return availableTabs.map((val, index) => {\n                return (React.createElement(TabContent, { eventKey: index, key: `${getIdKeyForTab(val.tab)}-tabContent`, id: `tab-${index}`, ref: val.contentRef }, this.getTabItem(val.tab, index)));\n            });\n        };\n        this.getTabItem = (tab, index) => {\n            const { costOverviewComponent, historicalDataComponent } = this.props;\n            const { activeTabKey } = this.state;\n            const emptyTab = React.createElement(React.Fragment, null); // Lazily load tabs\n            if (activeTabKey !== index) {\n                return emptyTab;\n            }\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === \"cost-overview\" /* costOverview */) {\n                return costOverviewComponent;\n            }\n            else if (currentTab === \"historical-data\" /* historicalData */) {\n                return historicalDataComponent;\n            }\n            else {\n                return emptyTab;\n            }\n        };\n        this.getTabs = (availableTabs) => {\n            const { activeTabKey } = this.state;\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((val, index) => this.getTab(val.tab, val.contentRef, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { intl } = this.props;\n            if (tab === \"cost-overview\" /* costOverview */) {\n                return intl.formatMessage(messages.BreakdownCostOverviewTitle);\n            }\n            else if (tab === \"historical-data\" /* historicalData */) {\n                return intl.formatMessage(messages.BreakdownHistoricalDataTitle);\n            }\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { activeTabKey } = this.state;\n            if (activeTabKey !== tabIndex) {\n                this.setState({\n                    activeTabKey: tabIndex,\n                });\n            }\n        };\n        this.updateReport = () => {\n            const { location, fetchReport, queryString, reportPathsType, reportType } = this.props;\n            if (location.search) {\n                fetchReport(reportPathsType, reportType, queryString);\n            }\n        };\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps) {\n        const { location, report, reportError, queryString } = this.props;\n        const newQuery = prevProps.queryString !== queryString;\n        const noReport = !report && !reportError;\n        const noLocation = !location.search;\n        if (newQuery || noReport || noLocation) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { description, detailsURL, emptyStateTitle, groupBy, providers, providersFetchStatus, providerType, query, report, reportError, reportFetchStatus, tagReportPathsType, title, } = this.props;\n        const availableTabs = this.getAvailableTabs();\n        // Note: Providers are fetched via the InactiveSources component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: emptyStateTitle });\n        }\n        else if (providersFetchStatus === 1 /* inProgress */ && reportFetchStatus === 1 /* inProgress */) {\n            return React.createElement(Loading, { title: emptyStateTitle });\n        }\n        else if (providersFetchStatus === 2 /* complete */ && reportFetchStatus === 2 /* complete */) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0 && providersFetchStatus === 2 /* complete */;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: providerType, title: emptyStateTitle });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(BreakdownHeader, { description: description, detailsURL: detailsURL, groupBy: groupBy, query: query, report: report, tabs: this.getTabs(availableTabs), tagReportPathsType: tagReportPathsType, title: title }),\n            React.createElement(\"div\", { style: styles.content }, this.getTabContent(availableTabs))));\n    }\n}\nexport default injectIntl(BreakdownBase);\n","import global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    clustersContainer: {\n        marginRight: global_spacer_3xl.value,\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import global_spacer_2xl from '@patternfly/react-tokens/dist/js/global_spacer_2xl';\nexport const styles = {\n    modal: {\n        // Workaround for isLarge not working properly\n        height: '700px',\n        width: '600px',\n    },\n    subTitle: {\n        marginTop: global_spacer_2xl.value,\n        textAlign: 'right',\n    },\n};\n","import React from 'react';\nimport { injectIntl } from 'react-intl';\nclass ClusterViewBase extends React.Component {\n    render() {\n        const { item } = this.props;\n        if (!item.clusters) {\n            return null;\n        }\n        return item.clusters.map((cluster, index) => React.createElement(\"div\", { key: `cluster-${index}` }, cluster));\n    }\n}\nconst ClusterView = injectIntl(ClusterViewBase);\nexport { ClusterView, ClusterViewBase };\n","import './clusterModal.scss';\nimport { Modal } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { styles } from './clusterModal.styles';\nimport { ClusterView } from './clusterView';\nclass ClusterModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    shouldComponentUpdate(nextProps) {\n        const { isOpen, item } = this.props;\n        return nextProps.item !== item || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { groupBy, isOpen, item, intl } = this.props;\n        return (React.createElement(Modal, { className: \"modalOverride\", style: styles.modal, isOpen: isOpen, onClose: this.handleClose, title: intl.formatMessage(messages.DetailsClustersModalTitle, { groupBy, name: item.label }), width: '50%' },\n            React.createElement(ClusterView, { item: item })));\n    }\n}\nconst ClusterModal = injectIntl(ClusterModalBase);\nexport { ClusterModal };\n","import messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { getTestProps, testIds } from 'testIds';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { styles } from './cluster.styles';\nimport { ClusterModal } from './clusterModal';\nclass ClusterBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isOpen: false,\n            showAll: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleClose = (isOpen) => {\n            this.setState({ isOpen });\n        };\n        this.handleOpen = event => {\n            this.setState({ isOpen: true });\n            event.preventDefault();\n            return false;\n        };\n        this.handleClose = this.handleClose.bind(this);\n        this.handleOpen = this.handleOpen.bind(this);\n    }\n    render() {\n        const { groupBy, report, intl } = this.props;\n        const { isOpen, showAll } = this.state;\n        let charCount = 0;\n        const maxChars = 50;\n        const someClusters = [];\n        const allClusters = [];\n        const computedItems = getComputedReportItems({\n            report,\n            idKey: groupBy,\n        });\n        const item = computedItems && computedItems.length ? computedItems[0] : undefined;\n        if (!item) {\n            return null;\n        }\n        for (const cluster of item.clusters) {\n            const prefix = someClusters.length > 0 ? ', ' : '';\n            const clusterString = `${prefix}${cluster}`;\n            if (showAll) {\n                someClusters.push(clusterString);\n            }\n            else if (charCount <= maxChars) {\n                if (charCount + clusterString.length > maxChars) {\n                    someClusters.push(clusterString\n                        .slice(0, maxChars - charCount)\n                        .trim()\n                        .concat('...'));\n                }\n                else {\n                    someClusters.push(clusterString);\n                }\n            }\n            charCount += clusterString.length;\n            allClusters.push(cluster);\n        }\n        return (React.createElement(\"div\", { style: styles.clustersContainer },\n            Boolean(someClusters) && someClusters.map((cluster, index) => React.createElement(\"span\", { key: index }, cluster)),\n            Boolean(someClusters.length < allClusters.length) && (React.createElement(\"a\", Object.assign({}, getTestProps(testIds.details.cluster_lnk), { href: \"#/\", onClick: this.handleOpen }), intl.formatMessage(messages.DetailsMoreClusters, { value: allClusters.length - someClusters.length }))),\n            React.createElement(ClusterModal, { groupBy: groupBy, isOpen: isOpen, item: item, onClose: this.handleClose })));\n    }\n}\nconst Cluster = injectIntl(ClusterBase);\nexport { Cluster };\n","import global_FontWeight_bold from '@patternfly/react-tokens/dist/js/global_FontWeight_bold';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const chartStyles = {\n    chartHeight: 150,\n    chartWidth: 400,\n    subTitle: {\n        fontWeight: global_FontWeight_bold.value,\n    },\n};\nexport const styles = {\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { ChartLabel, ChartLegend, ChartPie, ChartThemeColor } from '@patternfly/react-charts';\nimport { Skeleton } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { formatCurrency } from 'utils/valueFormatter';\nimport { chartStyles, styles } from './costChart.styles';\nclass CostChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        // Override legend layout\n        this.getLegendLabel = () => {\n            return (_a) => {\n                var { values } = _a, props = __rest(_a, [\"values\"]);\n                return (React.createElement(ChartLabel, Object.assign({}, props, { style: [{ fontWeight: chartStyles.subTitle.fontWeight }, {}], text: [values[props.index], props.text] })));\n            };\n        };\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md })));\n        };\n    }\n    render() {\n        const { report, reportFetchStatus, intl } = this.props;\n        const hasCost = report && report.meta && report.meta.total && report.meta.total.cost;\n        const hasMarkup = hasCost && report.meta.total.cost.markup;\n        const hasRaw = hasCost && report.meta.total.cost.raw;\n        const hasUsage = hasCost && report.meta.total.cost.usage;\n        const markupUnits = hasMarkup ? report.meta.total.cost.markup.units : 'USD';\n        const rawUnits = hasRaw ? report.meta.total.cost.raw.units : 'USD';\n        const usageUnits = hasUsage ? report.meta.total.cost.usage.units : 'USD';\n        const markupValue = hasMarkup ? report.meta.total.cost.markup.value : 0;\n        const rawValue = hasRaw ? report.meta.total.cost.raw.value : 0;\n        const usageValue = hasUsage ? report.meta.total.cost.usage.value : 0;\n        const markup = formatCurrency(hasMarkup ? report.meta.total.cost.markup.value : 0, markupUnits);\n        const raw = formatCurrency(hasRaw ? report.meta.total.cost.raw.value : 0, rawUnits);\n        const usage = formatCurrency(hasUsage ? report.meta.total.cost.usage.value : 0, usageUnits);\n        const markupLabel = intl.formatMessage(messages.MarkupTitle);\n        const rawLabel = intl.formatMessage(messages.RawCostTitle);\n        const usageLabel = intl.formatMessage(messages.UsageCostTitle);\n        // Override legend label layout\n        const LegendLabel = this.getLegendLabel();\n        const Legend = (React.createElement(ChartLegend, { gutter: 25, itemsPerRow: 2, labelComponent: React.createElement(LegendLabel, { dy: 10, lineHeight: 1.5, values: [raw, markup, usage] }), rowGutter: 20 }));\n        return (React.createElement(\"div\", { style: { height: chartStyles.chartHeight, width: chartStyles.chartWidth } }, reportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(ChartPie, { ariaDesc: intl.formatMessage(messages.BreakdownCostChartAriaDesc), ariaTitle: intl.formatMessage(messages.BreakdownCostBreakdownTitle), constrainToVisibleArea: true, data: [\n                { x: rawLabel, y: rawValue, units: rawUnits },\n                { x: markupLabel, y: markupValue, units: markupUnits },\n                { x: usageLabel, y: usageValue, units: usageUnits },\n            ], height: chartStyles.chartHeight, labels: ({ datum }) => intl.formatMessage(messages.BreakdownCostChartTooltip, {\n                name: datum.x,\n                value: formatCurrency(datum.y, datum.units),\n            }), legendComponent: Legend, legendData: [\n                {\n                    name: rawLabel,\n                },\n                {\n                    name: markupLabel,\n                },\n                {\n                    name: usageLabel,\n                },\n            ], legendOrientation: \"vertical\", legendPosition: \"right\", padding: {\n                bottom: 20,\n                left: 0,\n                right: 275,\n                top: 20,\n            }, themeColor: ChartThemeColor.green, width: chartStyles.chartWidth }))));\n    }\n}\nconst CostChart = injectIntl(CostChartBase);\nexport { CostChart };\n","import global_spacer_xl from '@patternfly/react-tokens/dist/js/global_spacer_xl';\nexport const styles = {\n    mainContent: {\n        marginTop: global_spacer_xl.value,\n    },\n    subTitle: {\n        textAlign: 'right',\n    },\n};\n","import { Title, TitleSizes } from '@patternfly/react-core';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { ReportSummaryItem, ReportSummaryItems } from 'components/reports/reportSummary';\nimport messages from 'locales/messages';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatCurrency } from 'utils/valueFormatter';\nimport { styles } from './summaryModal.styles';\nconst reportType = \"cost\" /* cost */;\nclass SummaryModalViewBase extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    render() {\n        const { intl, report, reportGroupBy, reportFetchStatus } = this.props;\n        const hasTotal = report && report.meta && report.meta.total;\n        const cost = formatCurrency(hasTotal ? report.meta.total.cost.total.value : 0, hasTotal ? report.meta.total.cost.total.units : 'USD');\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { style: styles.subTitle },\n                React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.xl }, intl.formatMessage(messages.DetailsCostValue, { value: cost }))),\n            React.createElement(\"div\", { style: styles.mainContent },\n                React.createElement(ReportSummaryItems, { idKey: reportGroupBy, report: report, status: reportFetchStatus }, ({ items }) => items.map(_item => (React.createElement(ReportSummaryItem, { key: _item.id, valueFormatterOptions: {}, label: _item.label ? _item.label.toString() : '', totalValue: report.meta.total.cost.total.value, units: report.meta.total.cost.total.units, value: _item.cost.total.value, valueFormatter: formatCurrency })))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportGroupBy, reportPathsType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = groupByOrgValue ? orgUnitIdKey : getGroupById(query);\n    const groupByValue = groupByOrgValue ? groupByOrgValue : getGroupByValue(query);\n    const newQuery = {\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        filter_by: Object.assign(Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: undefined })), (groupBy && { [groupBy]: groupByValue })),\n        group_by: Object.assign({}, (reportGroupBy && { [reportGroupBy]: '*' })),\n    };\n    const queryString = getQuery(newQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst SummaryModalView = injectIntl(connect(mapStateToProps, mapDispatchToProps)(SummaryModalViewBase));\nexport { SummaryModalView };\n","import './summaryModal.scss';\nimport { Modal } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { SummaryModalView } from './summaryModalView';\nclass SummaryModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    shouldComponentUpdate(nextProps) {\n        const { groupByValue, isOpen } = this.props;\n        return nextProps.groupByValue !== groupByValue || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { groupByValue, intl, isOpen, reportGroupBy, reportPathsType } = this.props;\n        return (React.createElement(Modal, { className: \"modalOverride\", isOpen: isOpen, onClose: this.handleClose, title: intl.formatMessage(messages.DetailsSummaryModalTitle, {\n                groupBy: reportGroupBy,\n                name: groupByValue,\n            }), variant: \"large\" },\n            React.createElement(SummaryModalView, { reportGroupBy: reportGroupBy, reportPathsType: reportPathsType })));\n    }\n}\nconst SummaryModal = injectIntl(SummaryModalBase);\nexport { SummaryModal };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    card: {},\n    skeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    viewAllContainer: {\n        marginLeft: '-15px',\n    },\n};\n","import { Button, ButtonType, ButtonVariant, Card, CardBody, CardFooter, CardTitle, Skeleton, Title, TitleSizes, } from '@patternfly/react-core';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { ReportSummaryItem, ReportSummaryItems } from 'components/reports/reportSummary';\nimport messages from 'locales/messages';\nimport { SummaryModal } from 'pages/views/details/components/summary/summaryModal';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getTestProps, testIds } from 'testIds';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { formatCurrency } from 'utils/valueFormatter';\nimport { styles } from './summaryCard.styles';\nclass SummaryBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            isBulletChartModalOpen: false,\n        };\n        this.getItems = () => {\n            const { report, reportGroupBy } = this.props;\n            const computedItems = getComputedReportItems({\n                report,\n                idKey: reportGroupBy,\n            });\n            return computedItems;\n        };\n        this.getSummary = () => {\n            const { report, reportGroupBy, reportFetchStatus } = this.props;\n            return (React.createElement(ReportSummaryItems, { idKey: reportGroupBy, report: report, status: reportFetchStatus }, ({ items }) => items.map(reportItem => (React.createElement(ReportSummaryItem, { key: `${reportItem.id}-item`, valueFormatterOptions: {}, label: reportItem.label ? reportItem.label.toString() : undefined, totalValue: report.meta.total.cost.total.value, units: report.meta.total.cost.total.units, value: reportItem.cost.total.value, valueFormatter: formatCurrency })))));\n        };\n        this.getViewAll = () => {\n            const { groupBy, query, reportGroupBy, reportPathsType, intl } = this.props;\n            const { isBulletChartModalOpen } = this.state;\n            const computedItems = this.getItems();\n            const otherIndex = computedItems.findIndex(i => {\n                const id = i.id;\n                if (id && id !== null) {\n                    return id === 'Other' || id === 'Others';\n                }\n            });\n            if (otherIndex !== -1) {\n                // Match page header description\n                const groupByValue = query && query.filter && query.filter.account ? query.filter.account : this.props.groupByValue;\n                return (React.createElement(\"div\", { style: styles.viewAllContainer },\n                    React.createElement(Button, Object.assign({}, getTestProps(testIds.details.view_all_btn), { onClick: this.handleBulletChartModalOpen, type: ButtonType.button, variant: ButtonVariant.link }), intl.formatMessage(messages.DetailsViewAll, { value: reportGroupBy })),\n                    React.createElement(SummaryModal, { groupBy: groupBy, groupByValue: groupByValue, isOpen: isBulletChartModalOpen, onClose: this.handleBulletChartModalClose, query: query, reportGroupBy: reportGroupBy, reportPathsType: reportPathsType })));\n            }\n            else {\n                return null;\n            }\n        };\n        this.handleBulletChartModalClose = (isOpen) => {\n            this.setState({ isBulletChartModalOpen: isOpen });\n        };\n        this.handleBulletChartModalOpen = event => {\n            this.setState({ isBulletChartModalOpen: true });\n            event.preventDefault();\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    render() {\n        const { reportGroupBy, reportFetchStatus, intl } = this.props;\n        return (React.createElement(Card, { style: styles.card },\n            React.createElement(CardTitle, null,\n                React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, intl.formatMessage(messages.BreakdownSummaryTitle, { value: reportGroupBy }))),\n            React.createElement(CardBody, null, reportFetchStatus === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.skeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.skeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.skeleton, width: skeletonWidth.md }))) : (this.getSummary())),\n            React.createElement(CardFooter, null, this.getViewAll())));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportGroupBy, reportPathsType, reportType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = groupByOrgValue ? orgUnitIdKey : getGroupById(query);\n    const groupByValue = groupByOrgValue ? groupByOrgValue : getGroupByValue(query);\n    const newQuery = {\n        filter: {\n            limit: 3,\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        filter_by: Object.assign(Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: undefined })), (groupBy && { [groupBy]: groupByValue })),\n        group_by: Object.assign({}, (reportGroupBy && { [reportGroupBy]: '*' })),\n    };\n    const queryString = getQuery(newQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        groupBy,\n        groupByValue,\n        query,\n        queryString,\n        report,\n        reportFetchStatus,\n        reportPathsType,\n        reportType,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst SummaryCard = injectIntl(connect(mapStateToProps, mapDispatchToProps)(SummaryBase));\nexport { SummaryCard };\n","import global_FontWeight_bold from '@patternfly/react-tokens/dist/js/global_FontWeight_bold';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    chartSkeleton: {\n        marginBottom: global_spacer_md.value,\n    },\n    capacity: {\n        fontWeight: global_FontWeight_bold.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { ChartBullet } from '@patternfly/react-charts';\nimport { Grid, GridItem, Skeleton } from '@patternfly/react-core';\nimport { parseQuery } from 'api/queries/ocpQuery';\nimport { getQuery } from 'api/queries/query';\nimport { getResizeObserver } from 'components/charts/common/chartUtils';\nimport messages from 'locales/messages';\nimport { getGroupById, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { noop } from 'utils/noop';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { formatValue, unitLookupKey } from 'utils/valueFormatter';\nimport { styles } from './usageChart.styles';\nclass UsageChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            width: 0,\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n        this.getCpuChart = () => {\n            const { groupBy, reportFetchStatus, report } = this.props;\n            const { width } = this.state;\n            const chartDatum = groupBy === 'cluster' ? this.getChartDatumWithCapacity() : this.getChartDatum();\n            if (!report || chartDatum.usage.length === 0) {\n                return null;\n            }\n            return (React.createElement(\"div\", { className: \"chartOverride\" }, reportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(React.Fragment, null,\n                Boolean(groupBy === 'cluster') && this.getFreeSpace(),\n                React.createElement(ChartBullet, { comparativeErrorMeasureData: chartDatum.limit.value\n                        ? [\n                            {\n                                tooltip: chartDatum.limit.tooltip,\n                                y: chartDatum.limit.value,\n                            },\n                        ]\n                        : [], comparativeErrorMeasureLegendData: chartDatum.limit.value ? [{ name: chartDatum.limit.legend }] : [], height: this.getChartHeight(), labels: ({ datum }) => `${datum.tooltip}`, legendPosition: \"bottom-left\", legendItemsPerRow: this.getItemsPerRow(), maxDomain: this.isDatumEmpty(chartDatum) ? 100 : undefined, minDomain: 0, padding: {\n                        bottom: 75,\n                        left: 10,\n                        right: 50,\n                        top: 0,\n                    }, primarySegmentedMeasureData: chartDatum.usage.length\n                        ? chartDatum.usage.map(datum => {\n                            return {\n                                tooltip: datum.tooltip,\n                                y: datum.value,\n                            };\n                        })\n                        : [], primarySegmentedMeasureLegendData: chartDatum.usage.length\n                        ? chartDatum.usage.map(datum => {\n                            return {\n                                name: datum.legend,\n                            };\n                        })\n                        : [], qualitativeRangeData: chartDatum.ranges.length\n                        ? [\n                            {\n                                tooltip: chartDatum.ranges[0].tooltip,\n                                y: chartDatum.ranges[0].value,\n                            },\n                        ]\n                        : [], qualitativeRangeLegendData: chartDatum.ranges.length ? [{ name: chartDatum.ranges[0].legend }] : [], width: width })))));\n        };\n        this.getChartHeight = () => {\n            const { groupBy } = this.props;\n            const { width } = this.state;\n            if (groupBy === 'cluster') {\n                return width > 950 ? 115 : width > 450 ? 150 : 210;\n            }\n            else {\n                return width > 700 ? 115 : width > 450 ? 150 : 180;\n            }\n        };\n        this.getItemsPerRow = () => {\n            const { width } = this.state;\n            return width > 950 ? 4 : width > 700 ? 3 : width > 450 ? 2 : 1;\n        };\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, width: skeletonWidth.xs })));\n        };\n        this.isDatumEmpty = (datum) => {\n            let hasRange = false;\n            for (const range of datum.ranges) {\n                if (range.value) {\n                    hasRange = true;\n                    break;\n                }\n            }\n            let hasUsage = false;\n            for (const usage of datum.usage) {\n                if (usage.value) {\n                    hasUsage = true;\n                    break;\n                }\n            }\n            return !(datum.limit.value || hasRange || hasUsage);\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        if (prevProps.queryString !== this.props.queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getChartDatum() {\n        const { report, intl } = this.props;\n        const datum = {\n            limit: {},\n            ranges: [],\n            usage: [],\n        };\n        // Always show bullet chart legends https://github.com/project-koku/koku-ui/issues/963\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasLimit = hasTotal && report.meta.total.limit && report.meta.total.limit !== null;\n        const limit = Math.trunc(hasLimit ? report.meta.total.limit.value : 0);\n        const limitUnits = intl.formatMessage(messages.Units, {\n            units: unitLookupKey(hasLimit ? report.meta.total.limit.units : undefined),\n        });\n        datum.limit = {\n            legend: intl.formatMessage(messages.DetailsUsageLimit, {\n                value: limit,\n                units: limitUnits,\n            }),\n            tooltip: intl.formatMessage(messages.DetailsUsageLimit, {\n                value: limit,\n                units: limitUnits,\n            }),\n            value: Math.trunc(limit),\n        };\n        const hasRequest = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = intl.formatMessage(messages.Units, {\n            units: unitLookupKey(hasRequest ? report.meta.total.request.units : undefined),\n        });\n        datum.ranges = [\n            {\n                legend: intl.formatMessage(messages.DetailsUsageRequests, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                tooltip: intl.formatMessage(messages.DetailsUsageRequests, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                value: Math.trunc(request),\n            },\n        ];\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = intl.formatMessage(messages.Units, {\n            units: unitLookupKey(hasUsage ? report.meta.total.usage.units : undefined),\n        });\n        datum.usage = [\n            {\n                legend: intl.formatMessage(messages.DetailsUsageUsage, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                tooltip: intl.formatMessage(messages.DetailsUsageUsage, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                value: Math.trunc(usage),\n            },\n        ];\n        return datum;\n    }\n    getChartDatumWithCapacity() {\n        const { report, intl } = this.props;\n        const datum = {\n            limit: {},\n            ranges: [],\n            usage: [],\n        };\n        // Always show bullet chart legends https://github.com/project-koku/koku-ui/issues/963\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasLimit = hasTotal && report.meta.total.limit && report.meta.total.limit !== null;\n        const limit = Math.trunc(hasLimit ? report.meta.total.limit.value : 0);\n        const limitUnits = intl.formatMessage(messages.Units, {\n            units: unitLookupKey(hasLimit ? report.meta.total.limit.units : undefined),\n        });\n        datum.limit = {\n            legend: intl.formatMessage(messages.DetailsUsageLimit, {\n                value: limit,\n                units: limitUnits,\n            }),\n            tooltip: intl.formatMessage(messages.DetailsUsageLimit, {\n                value: limit,\n                units: limitUnits,\n            }),\n            value: Math.trunc(limit),\n        };\n        const hasCapacity = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const capacity = Math.trunc(hasCapacity ? report.meta.total.capacity.value : 0);\n        const capacityUnits = intl.formatMessage(messages.Units, {\n            units: unitLookupKey(hasCapacity ? report.meta.total.capacity.units : undefined),\n        });\n        datum.ranges = [\n            {\n                legend: intl.formatMessage(messages.DetailsUsageCapacity, {\n                    value: capacity,\n                    units: capacityUnits,\n                }),\n                tooltip: intl.formatMessage(messages.DetailsUsageCapacity, {\n                    value: capacity,\n                    units: capacityUnits,\n                }),\n                value: Math.trunc(capacity),\n            },\n        ];\n        const hasRequest = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = intl.formatMessage(messages.Units, {\n            units: unitLookupKey(hasRequest ? report.meta.total.request.units : undefined),\n        });\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = intl.formatMessage(messages.Units, {\n            units: unitLookupKey(hasUsage ? report.meta.total.usage.units : undefined),\n        });\n        datum.usage = [\n            {\n                legend: intl.formatMessage(messages.DetailsUsageUsage, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                tooltip: intl.formatMessage(messages.DetailsUsageUsage, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                value: Math.trunc(usage),\n            },\n            {\n                legend: intl.formatMessage(messages.DetailsUsageRequests, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                tooltip: intl.formatMessage(messages.DetailsUsageRequests, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                value: Math.trunc(request),\n            },\n        ];\n        return datum;\n    }\n    getFreeSpace() {\n        const { report, intl } = this.props;\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasCapacity = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const hasRequest = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const capacity = Math.trunc(hasCapacity ? report.meta.total.capacity.value : 0);\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = intl.formatMessage(messages.Units, {\n            units: unitLookupKey(hasRequest ? report.meta.total.request.units : undefined),\n        });\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = intl.formatMessage(messages.Units, {\n            units: unitLookupKey(hasUsage ? report.meta.total.usage.units : undefined),\n        });\n        // Show negative values https://github.com/project-koku/koku-ui/issues/1214\n        const unusedRequestCapacity = capacity - request;\n        const unusedUsageCapacity = capacity - usage;\n        let unusedRequestCapacityPercentage = request > 0 ? (request / capacity) * 100 : 0;\n        if (unusedRequestCapacityPercentage > 100) {\n            unusedRequestCapacityPercentage = 100 - unusedRequestCapacityPercentage;\n        }\n        let unusedUsageCapacityPercentage = capacity > usage ? (usage / capacity) * 100 : 0;\n        if (unusedUsageCapacityPercentage > 100) {\n            unusedUsageCapacityPercentage = 100 - unusedUsageCapacityPercentage;\n        }\n        return (React.createElement(Grid, { hasGutter: true },\n            React.createElement(GridItem, { md: 12, lg: 6 },\n                React.createElement(\"div\", null, intl.formatMessage(messages.DetailsUnusedUsageLabel)),\n                React.createElement(\"div\", { style: styles.capacity }, formatValue(unusedUsageCapacity, usageUnits)),\n                React.createElement(\"div\", null, intl.formatMessage(messages.DetailsUnusedUnits, {\n                    percentage: formatValue(unusedUsageCapacityPercentage, usageUnits),\n                    units: usageUnits,\n                }))),\n            React.createElement(GridItem, { md: 12, lg: 6 },\n                React.createElement(\"div\", null, intl.formatMessage(messages.DetailsUnusedRequestsLabel)),\n                React.createElement(\"div\", { style: styles.capacity }, formatValue(unusedRequestCapacity, requestUnits)),\n                React.createElement(\"div\", null, intl.formatMessage(messages.DetailsUnusedUnits, {\n                    percentage: formatValue(unusedRequestCapacityPercentage, requestUnits),\n                    units: usageUnits,\n                })))));\n    }\n    render() {\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef }, this.getCpuChart()));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportPathsType, reportType }) => {\n    const query = parseQuery(location.search);\n    const groupBy = getGroupById(query);\n    const groupByValue = getGroupByValue(query);\n    const newQuery = {\n        filter: {\n            time_scope_units: 'month',\n            time_scope_value: -1,\n            resolution: 'monthly',\n        },\n        filter_by: Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (groupBy && { [groupBy]: undefined })),\n        group_by: Object.assign({}, (groupBy && { [groupBy]: groupByValue })),\n    };\n    const queryString = getQuery(newQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        groupBy,\n        report,\n        reportFetchStatus,\n        queryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst UsageChart = injectIntl(connect(mapStateToProps, mapDispatchToProps)(UsageChartBase));\nexport { UsageChart };\n","import { Button, ButtonVariant, Card, CardBody, CardTitle, Grid, GridItem, Popover, Title, TitleSizes, } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon';\nimport { orgUnitIdKey, tagPrefix } from 'api/queries/query';\nimport messages from 'locales/messages';\nimport { Cluster } from 'pages/views/details/components/cluster/cluster';\nimport { CostChart } from 'pages/views/details/components/costChart/costChart';\nimport { SummaryCard } from 'pages/views/details/components/summary/summaryCard';\nimport { UsageChart } from 'pages/views/details/components/usageChart/usageChart';\nimport { styles } from 'pages/views/details/ocpDetails/detailsHeader.styles';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nconst PLACEHOLDER = 'placeholder';\nclass CostOverviewsBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        // Returns cluster chart\n        this.getClusterChart = (widget) => {\n            const { groupBy, report, intl } = this.props;\n            let showWidget = false;\n            for (const groupById of widget.cluster.showWidgetOnGroupBy) {\n                if (groupById === groupBy || (groupById === tagPrefix && groupBy.indexOf(tagPrefix) !== -1)) {\n                    showWidget = true;\n                    break;\n                }\n            }\n            if (showWidget) {\n                return (React.createElement(Card, null,\n                    React.createElement(CardTitle, null,\n                        React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, intl.formatMessage(messages.Clusters))),\n                    React.createElement(CardBody, null,\n                        React.createElement(Cluster, { groupBy: widget.cluster.reportGroupBy, report: report }))));\n            }\n            return null;\n        };\n        // Returns cost breakdown chart\n        this.getCostChart = () => {\n            const { report, intl } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg },\n                        intl.formatMessage(messages.BreakdownCostBreakdownTitle),\n                        React.createElement(Popover, { \"aria-label\": intl.formatMessage(messages.BreakdownCostBreakdownAriaLabel), enableFlip: true, bodyContent: React.createElement(React.Fragment, null,\n                                React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.RawCostTitle)),\n                                React.createElement(\"p\", null, intl.formatMessage(messages.RawCostDescription)),\n                                React.createElement(\"br\", null),\n                                React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.UsageCostTitle)),\n                                React.createElement(\"p\", null, intl.formatMessage(messages.UsageCostDescription)),\n                                React.createElement(\"br\", null),\n                                React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.MarkupTitle)),\n                                React.createElement(\"p\", null, intl.formatMessage(messages.MarkupDescription)),\n                                React.createElement(\"br\", null),\n                                React.createElement(\"a\", { href: intl.formatMessage(messages.DocsCostModelTerminology), rel: \"noreferrer\", target: \"_blank\" }, intl.formatMessage(messages.LearnMore))) },\n                            React.createElement(Button, { variant: ButtonVariant.plain },\n                                React.createElement(OutlinedQuestionCircleIcon, { style: styles.info }))))),\n                React.createElement(CardBody, null,\n                    React.createElement(CostChart, { report: report }))));\n        };\n        // Returns CPU usage chart\n        this.getCpuUsageChart = (widget) => {\n            const { intl } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, intl.formatMessage(messages.CpuTitle))),\n                React.createElement(CardBody, null,\n                    React.createElement(UsageChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns memory usage chart\n        this.getMemoryUsageChart = (widget) => {\n            const { intl } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, intl.formatMessage(messages.MemoryTitle))),\n                React.createElement(CardBody, null,\n                    React.createElement(UsageChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns summary card widget\n        this.getSummaryCard = (widget) => {\n            const { groupBy, query } = this.props;\n            let showWidget = false;\n            for (const groupById of widget.reportSummary.showWidgetOnGroupBy) {\n                if (groupById === groupBy ||\n                    (query && query.group_by && query.group_by[orgUnitIdKey]) ||\n                    (groupById === tagPrefix && groupBy && groupBy.indexOf(tagPrefix) !== -1)) {\n                    showWidget = true;\n                    break;\n                }\n            }\n            if (showWidget) {\n                return (React.createElement(SummaryCard, { reportGroupBy: widget.reportSummary.reportGroupBy, reportPathsType: widget.reportPathsType, reportType: widget.reportType }));\n            }\n            else if (widget.reportSummary.usePlaceholder) {\n                return PLACEHOLDER;\n            }\n            return null;\n        };\n        // Helper to fill grid columns instead of rows, based on the order defined by the reducer\n        this.getWidgetsColumns = () => {\n            const { selectWidgets, widgets } = this.props;\n            const visibleWidgets = [];\n            widgets.map(widgetId => {\n                const widget = selectWidgets[widgetId];\n                const renderedWidget = this.renderWidget(widget);\n                if (renderedWidget !== null) {\n                    visibleWidgets.push(renderedWidget);\n                }\n            });\n            const rows = Math.floor(visibleWidgets.length / 2) + (visibleWidgets.length % 2);\n            const leftColumnWidgets = [];\n            const rightColumnWidgets = [];\n            for (let i = 0; i < rows; i++) {\n                if (visibleWidgets[i] !== PLACEHOLDER) {\n                    leftColumnWidgets.push(visibleWidgets[i]);\n                }\n                if (i + rows < visibleWidgets.length) {\n                    if (visibleWidgets[i + rows] !== PLACEHOLDER) {\n                        rightColumnWidgets.push(visibleWidgets[i + rows]);\n                    }\n                }\n            }\n            return { leftColumnWidgets, rightColumnWidgets };\n        };\n    }\n    // Returns rendered widget based on type\n    renderWidget(widget) {\n        switch (widget.type) {\n            case \"cluster\" /* cluster */:\n                return this.getClusterChart(widget);\n            case \"cost\" /* cost */:\n                return this.getCostChart();\n            case \"cpuUsage\" /* cpuUsage */:\n                return this.getCpuUsageChart(widget);\n            case \"memoryUsage\" /* memoryUsage */:\n                return this.getMemoryUsageChart(widget);\n            case \"summary\" /* reportSummary */:\n                return this.getSummaryCard(widget);\n            default:\n                return null;\n        }\n    }\n    render() {\n        // Sort widgets vertically\n        const { leftColumnWidgets, rightColumnWidgets } = this.getWidgetsColumns();\n        return (React.createElement(Grid, { hasGutter: true },\n            React.createElement(GridItem, { lg: 12, xl: 6 },\n                React.createElement(Grid, { hasGutter: true }, leftColumnWidgets.map((widget, index) => {\n                    return React.createElement(GridItem, { key: `widget-${index}` }, widget);\n                }))),\n            React.createElement(GridItem, { lg: 12, xl: 6 },\n                React.createElement(Grid, { hasGutter: true }, rightColumnWidgets.map((widget, index) => {\n                    return React.createElement(GridItem, { key: `widget-${index}` }, widget);\n                })))));\n    }\n}\nconst CostOverviewBase = injectIntl(CostOverviewsBase);\nexport { CostOverviewBase };\n","import { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { global_spacer_lg } from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport { global_spacer_sm } from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    currentCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    currentCostData: {\n        fill: 'none',\n    },\n    itemsPerRow: 0,\n    previousCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    previousCostData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title, TitleSizes } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString } from 'components/charts/common/chartDatumUtils';\nimport { getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { noop } from 'utils/noop';\nimport { chartStyles, styles } from './historicalCostChart.styles';\nclass HistoricalCostChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentCostData, currentInfrastructureCostData, previousCostData, previousInfrastructureCostData } = this.props;\n            const costKey = messages.ChartCostLegendLabel;\n            const costInfrastructureKey = messages.ChartCostInfrastructureLegendLabel;\n            const costInfrastructureTooltipKey = messages.ChartCostInfrastructureLegendTooltip;\n            const costTooltipKey = messages.ChartCostLegendTooltip;\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1, messages.ChartCostLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousCostData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false, 0, messages.ChartCostLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentCostData, costTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentCostData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'previousInfrastructureCost',\n                    data: previousInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1, messages.ChartCostInfrastructureLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(previousInfrastructureCostData, costInfrastructureTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousInfrastructureCostData), { stroke: chartStyles.previousColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'currentInfrastructureCost',\n                    data: currentInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false, 0, messages.ChartCostInfrastructureLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(currentInfrastructureCostData, costInfrastructureTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentInfrastructureCostData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { valueFormatter, valueFormatterOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, valueFormatter, valueFormatterOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 120,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 700 ? chartStyles.itemsPerRow : 2;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\" }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.currentInfrastructureCostData !== this.props.currentInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData ||\n            prevProps.previousInfrastructureCostData !== this.props.previousInfrastructureCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, previousInfrastructureCostData } = this.props;\n        const currentRequestDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousRequestDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        return currentRequestDate > 0 || previousRequestDate > 0 ? Math.max(currentRequestDate, previousRequestDate) : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { adjustContainerHeight, height, intl, containerHeight = height, padding = {\n            bottom: 120,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 700\n                ? containerHeight - 25\n                : containerHeight\n            : containerHeight;\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => intl.formatMessage(messages.ChartDayOfTheMonth, { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: TitleSizes.xl }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: adjustedContainerHeight }) },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis }))))));\n    }\n}\nconst HistoricalCostChart = injectIntl(HistoricalCostChartBase);\nexport { HistoricalCostChart };\n","import global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    chartHeight: 300,\n    chartContainerHeight: 300,\n};\nexport const styles = {\n    chartContainer: {\n        marginLeft: global_spacer_lg.value,\n    },\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n    costChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    trendChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    usageChart: {\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import { Skeleton } from '@patternfly/react-core';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { transformReport } from 'components/charts/common/chartDatumUtils';\nimport { HistoricalCostChart } from 'components/charts/historicalCostChart';\nimport messages from 'locales/messages';\nimport { getGroupById, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { formatValue } from 'utils/valueFormatter';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataCostChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, width: skeletonWidth.xs })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, intl } = this.props;\n        // Current data\n        const currentData = transformReport(currentReport, 0 /* rolling */, 'date', 'cost');\n        const currentInfrastructureCostData = transformReport(currentReport, 0 /* rolling */, 'date', 'infrastructure');\n        // Previous data\n        const previousData = transformReport(previousReport, 0 /* rolling */, 'date', 'cost');\n        const previousInfrastructureCostData = transformReport(previousReport, 0 /* rolling */, 'date', 'infrastructure');\n        const costUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.cost\n            ? currentReport.meta.total.cost.total.units\n            : 'USD';\n        const test = intl.formatMessage(messages.CurrencyUnits, { units: costUnits });\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.costChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalCostChart, { adjustContainerHeight: true, containerHeight: chartStyles.chartContainerHeight - 25, currentCostData: currentData, currentInfrastructureCostData: currentInfrastructureCostData, valueFormatter: formatValue, valueFormatterOptions: {}, height: chartStyles.chartHeight, previousCostData: previousData, previousInfrastructureCostData: previousInfrastructureCostData, xAxisLabel: intl.formatMessage(messages.HistoricalChartDayOfMonthLabel), yAxisLabel: intl.formatMessage(messages.HistoricalChartCostLabel, {\n                    units: test,\n                }) })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportPathsType, reportType }) => {\n    const query = parseQuery(location.search);\n    const groupBy = getGroupById(query);\n    const groupByValue = getGroupByValue(query);\n    const baseQuery = {\n        filter_by: Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (groupBy && { [groupBy]: undefined })),\n        group_by: Object.assign({}, (groupBy && { [groupBy]: groupByValue })),\n    };\n    const currentQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        } });\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -2,\n        } });\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataCostChart = injectIntl(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataCostChartBase));\nexport { HistoricalDataCostChart };\n","import { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { global_spacer_lg } from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport { global_spacer_sm } from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentMonthData: {\n        fill: 'none',\n    },\n    itemsPerRow: 0,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousMonthData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title, TitleSizes } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { noop } from 'utils/noop';\nimport { chartStyles, styles } from './historicalTrendChart.styles';\nclass HistoricalTrendChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, previousData, showUsageLegendLabel = false } = this.props;\n            const key = showUsageLegendLabel ? messages.ChartUsageLegendLabel : messages.ChartCostLegendLabel;\n            const toolTipKey = showUsageLegendLabel ? messages.ChartUsageLegendTooltip : messages.ChartCostLegendTooltip;\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousData,\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1, messages.ChartUsageLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousData, toolTipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousMonthData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentData,\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false, 0, messages.ChartUsageLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentData, toolTipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentMonthData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { valueFormatter, valueFormatterOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, valueFormatter, valueFormatterOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 120,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: legendItemsPerRow, name: \"legend\" }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData || prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0 ? Math.max(currentDate, previousDate) : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, intl, containerHeight = height, padding = {\n            bottom: 120,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => intl.formatMessage(messages.ChartDayOfTheMonth, { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: TitleSizes.xl }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: containerHeight }) },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis }))))));\n    }\n}\nconst HistoricalTrendChart = injectIntl(HistoricalTrendChartBase);\nexport { HistoricalTrendChart };\n","import { Skeleton } from '@patternfly/react-core';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { transformReport } from 'components/charts/common/chartDatumUtils';\nimport { HistoricalTrendChart } from 'components/charts/historicalTrendChart';\nimport messages from 'locales/messages';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { formatValue, unitLookupKey } from 'utils/valueFormatter';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataTrendChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, width: skeletonWidth.xs })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, reportType, intl } = this.props;\n        const isCostChart = reportType === \"cost\" /* cost */;\n        // Current data\n        const currentData = transformReport(currentReport, isCostChart ? 0 /* rolling */ : 1 /* daily */, 'date', isCostChart ? 'cost' : 'usage');\n        const previousData = transformReport(previousReport, isCostChart ? 0 /* rolling */ : 1 /* daily */, 'date', isCostChart ? 'cost' : 'usage');\n        const costUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.cost\n            ? currentReport.meta.total.cost.total.units\n            : 'USD';\n        const usageUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.usage\n            ? currentReport.meta.total.usage.units\n            : undefined;\n        let yAxisLabel;\n        if (isCostChart) {\n            const units = intl.formatMessage(messages.CurrencyUnits, { units: costUnits });\n            yAxisLabel = intl.formatMessage(messages.HistoricalChartCostLabel, { units });\n        }\n        else if (usageUnits && Number.isNaN(Number(currentReport.meta.total.usage.units))) {\n            yAxisLabel = intl.formatMessage(messages.Units, { units: unitLookupKey(usageUnits) });\n        }\n        else {\n            const units = intl.formatMessage(messages.HistoricalChartUsageLabel, { value: reportType });\n            yAxisLabel = intl.formatMessage(messages.Units, { units });\n        }\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.trendChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalTrendChart, { containerHeight: chartStyles.chartContainerHeight - 50, currentData: currentData, valueFormatter: formatValue, valueFormatterOptions: {}, height: chartStyles.chartHeight, previousData: previousData, units: isCostChart ? costUnits : usageUnits, xAxisLabel: intl.formatMessage(messages.HistoricalChartDayOfMonthLabel), yAxisLabel: yAxisLabel })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportPathsType, reportType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = groupByOrgValue ? orgUnitIdKey : getGroupById(query);\n    const groupByValue = groupByOrgValue ? groupByOrgValue : getGroupByValue(query);\n    const baseQuery = {\n        filter_by: Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: undefined })),\n        group_by: Object.assign({}, (groupBy && { [groupBy]: groupByValue })),\n    };\n    const currentQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        } });\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -2,\n        } });\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataTrendChart = injectIntl(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataTrendChartBase));\nexport { HistoricalDataTrendChart };\n","import { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { global_spacer_lg } from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport { global_spacer_sm } from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    currentCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentLimitData: {\n        fill: 'none',\n    },\n    currentRequestData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    currentUsageData: {\n        fill: 'none',\n    },\n    itemsPerRow: 0,\n    previousCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousLimitData: {\n        fill: 'none',\n    },\n    previousRequestData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    previousUsageData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title, TitleSizes } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getUsageRangeString } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { noop } from 'utils/noop';\nimport { chartStyles, styles } from './historicalUsageChart.styles';\nclass HistoricalUsageChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentLimitData, currentRequestData, currentUsageData, previousLimitData, previousRequestData, previousUsageData, } = this.props;\n            const limitKey = messages.ChartLimitLegendLabel;\n            const limitTooltipKey = messages.ChartLimitLegendTooltip;\n            const requestKey = messages.ChartRequestsLegendLabel;\n            const requestTooltipKey = messages.ChartRequestsLegendTooltip;\n            const usageKey = messages.ChartUsageLegendLabel;\n            const usageTooltipKey = messages.ChartUsageLegendTooltip;\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousUsage',\n                    data: previousUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(previousUsageData, usageKey, true, true, 1, messages.ChartUsageLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(previousUsageData, usageTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousUsageData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentUsage',\n                    data: currentUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(currentUsageData, usageKey, true, false, 0, messages.ChartUsageLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(currentUsageData, usageTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentUsageData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'previousRequest',\n                    data: previousRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(previousRequestData, requestKey, true, true, 1, messages.ChartRequestsLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(previousRequestData, requestTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousRequestData), { stroke: chartStyles.previousColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'currentRequest',\n                    data: currentRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(currentRequestData, requestKey, true, false, 0, messages.ChartRequestsLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(currentRequestData, requestTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentRequestData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'previousLimit',\n                    data: previousLimitData,\n                    legendItem: {\n                        name: getUsageRangeString(previousLimitData, limitKey, true, true, 1, messages.ChartLimitLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[2],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(previousLimitData, limitTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousLimitData), { stroke: chartStyles.previousColorScale[2] }),\n                    },\n                },\n                {\n                    childName: 'currentLimit',\n                    data: currentLimitData,\n                    legendItem: {\n                        name: getUsageRangeString(currentLimitData, limitKey, true, false, 0, messages.ChartLimitLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[2],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(currentLimitData, limitTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentLimitData), { stroke: chartStyles.currentColorScale[2] }),\n                    },\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { valueFormatter, valueFormatterOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, valueFormatter, valueFormatterOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 130,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 900 ? chartStyles.itemsPerRow : 2;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\" }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentLimitData !== this.props.currentLimitData ||\n            prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousLimitData !== this.props.previousLimitData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n        const currentRequestDate = currentRequestData ? getDate(getDateRange(currentRequestData, true, true)[1]) : 0;\n        const currentUsageDate = currentUsageData ? getDate(getDateRange(currentUsageData, true, true)[1]) : 0;\n        const previousRequestDate = previousRequestData ? getDate(getDateRange(previousRequestData, true, true)[1]) : 0;\n        const previousUsageDate = previousUsageData ? getDate(getDateRange(previousUsageData, true, true)[1]) : 0;\n        return currentRequestDate > 0 || currentUsageDate > 0 || previousRequestDate > 0 || previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { adjustContainerHeight, height, intl, containerHeight = height, padding = {\n            bottom: 130,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 900\n                ? containerHeight - 50\n                : containerHeight\n            : containerHeight;\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => intl.formatMessage(messages.ChartDayOfTheMonth, { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: TitleSizes.xl }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: adjustedContainerHeight }) },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis }))))));\n    }\n}\nconst HistoricalUsageChart = injectIntl(HistoricalUsageChartBase);\nexport { HistoricalUsageChart };\n","import { Skeleton } from '@patternfly/react-core';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { transformReport } from 'components/charts/common/chartDatumUtils';\nimport { HistoricalUsageChart } from 'components/charts/historicalUsageChart';\nimport messages from 'locales/messages';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { formatValue, unitLookupKey } from 'utils/valueFormatter';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataUsageChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, width: skeletonWidth.xs })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, intl } = this.props;\n        // Current data\n        const currentLimitData = transformReport(currentReport, 1 /* daily */, 'date', 'limit');\n        const currentRequestData = transformReport(currentReport, 1 /* daily */, 'date', 'request');\n        const currentUsageData = transformReport(currentReport, 1 /* daily */, 'date', 'usage');\n        // Previous data\n        const previousLimitData = transformReport(previousReport, 1 /* daily */, 'date', 'limit');\n        const previousRequestData = transformReport(previousReport, 1 /* daily */, 'date', 'request');\n        const previousUsageData = transformReport(previousReport, 1 /* daily */, 'date', 'usage');\n        const usageUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.usage\n            ? currentReport.meta.total.usage.units\n            : '';\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.usageChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalUsageChart, { adjustContainerHeight: true, containerHeight: chartStyles.chartContainerHeight, currentLimitData: currentLimitData, currentRequestData: currentRequestData, currentUsageData: currentUsageData, valueFormatter: formatValue, valueFormatterOptions: {}, height: chartStyles.chartHeight, previousLimitData: previousLimitData, previousRequestData: previousRequestData, previousUsageData: previousUsageData, xAxisLabel: intl.formatMessage(messages.HistoricalChartDayOfMonthLabel), yAxisLabel: intl.formatMessage(messages.Units, { units: unitLookupKey(usageUnits) }) })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportPathsType, reportType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = getGroupById(query);\n    const groupByValue = getGroupByValue(query);\n    // instance-types and storage APIs must filter org units\n    const useFilter = reportType === \"instance_type\" /* instanceType */ || reportType === \"storage\" /* storage */;\n    const baseQuery = {\n        filter_by: Object.assign(Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: undefined })), (groupByOrgValue && useFilter && { [orgUnitIdKey]: groupByOrgValue })),\n        group_by: Object.assign(Object.assign({}, (groupByOrgValue && !useFilter && { [orgUnitIdKey]: groupByOrgValue })), (groupBy && !groupByOrgValue && { [groupBy]: groupByValue })),\n    };\n    const currentQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        } });\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -2,\n        } });\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataUsageChart = injectIntl(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataUsageChartBase));\nexport { HistoricalDataUsageChart };\n","import { Card, CardBody, CardTitle, Grid, GridItem, Title, TitleSizes } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { HistoricalDataCostChart } from './historicalDataCostChart';\nimport { HistoricalDataTrendChart } from './historicalDataTrendChart';\nimport { HistoricalDataUsageChart } from './historicalDataUsageChart';\nclass HistoricalDatasBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        // Returns cost chart\n        this.getCostChart = (widget) => {\n            const { intl } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, intl.formatMessage(messages.HistoricalChartTitle, { value: widget.reportType }))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataCostChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns trend chart\n        this.getTrendChart = (widget) => {\n            const { intl } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, intl.formatMessage(messages.HistoricalChartTitle, { value: widget.reportType }))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataTrendChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns usage chart\n        this.getUsageChart = (widget) => {\n            const { intl } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, intl.formatMessage(messages.HistoricalChartTitle, { value: widget.reportType }))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataUsageChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n    }\n    // Returns rendered widget based on type\n    renderWidget(widget) {\n        switch (widget.type) {\n            case \"cost\" /* cost */:\n                return this.getCostChart(widget);\n            case \"trend\" /* trend */:\n                return this.getTrendChart(widget);\n            case \"usage\" /* usage */:\n                return this.getUsageChart(widget);\n            default:\n                return null;\n        }\n    }\n    render() {\n        const { selectWidgets, widgets } = this.props;\n        return (React.createElement(Grid, { hasGutter: true }, widgets.map(widgetId => {\n            const widget = selectWidgets[widgetId];\n            return React.createElement(GridItem, { key: `widget-${widgetId}` }, this.renderWidget(widget));\n        })));\n    }\n}\nconst HistoricalDataBase = injectIntl(HistoricalDatasBase);\nexport { HistoricalDataBase };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    dateTitle: {\n        textAlign: 'end',\n    },\n    header: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: global_spacer_lg.var,\n        backgroundColor: global_BackgroundColor_light_100.var,\n    },\n    info: {\n        verticalAlign: 'middle',\n    },\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { orgUnitIdKey, tagPrefix } from 'api/queries/query';\nexport const getGroupById = (query) => {\n    const groupBys = query && query.group_by ? Object.keys(query.group_by) : [];\n    return groupBys.find(key => key !== orgUnitIdKey);\n};\nexport const getGroupByValue = (query) => {\n    const groupById = getGroupById(query);\n    return groupById ? query.group_by[groupById] : undefined;\n};\nexport const getGroupByOrgValue = (query) => {\n    let groupByOrg;\n    if (query && query.group_by) {\n        for (const groupBy of Object.keys(query.group_by)) {\n            if (groupBy === orgUnitIdKey) {\n                groupByOrg = query.group_by[orgUnitIdKey];\n                break;\n            }\n        }\n    }\n    return groupByOrg;\n};\nexport const getGroupByTagKey = (query) => {\n    let groupByTagKey;\n    if (query && query.group_by) {\n        for (const groupBy of Object.keys(query.group_by)) {\n            const tagIndex = groupBy.indexOf(tagPrefix);\n            if (tagIndex !== -1) {\n                groupByTagKey = groupBy.substring(tagIndex + tagPrefix.length);\n                break;\n            }\n        }\n    }\n    return groupByTagKey;\n};\n","import { getQueryRoute } from 'api/queries/query';\nimport { breakdownDescKey, breakdownTitleKey, orgUnitIdKey } from 'api/queries/query';\nexport const getBreakdownPath = ({ basePath, label, description, groupBy, query, }) => {\n    const newQuery = Object.assign(Object.assign(Object.assign({}, query), (description && description !== label && { [breakdownDescKey]: description })), { group_by: {\n            [groupBy]: label,\n        } });\n    return `${basePath}?${getQueryRoute(newQuery)}`;\n};\nexport const getOrgBreakdownPath = ({ basePath, description, groupBy, groupByOrg, id, orgUnitId, query, title, type, }) => {\n    const newQuery = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), (description && description !== title && { [breakdownDescKey]: description })), (title && { [breakdownTitleKey]: title })), (groupByOrg && orgUnitId && { [orgUnitIdKey]: orgUnitId })), { group_by: {\n            [groupBy]: id,\n        } });\n    if (!newQuery.filter) {\n        newQuery.filter = {};\n    }\n    if (type === 'account') {\n        newQuery.filter.account = id;\n        newQuery.group_by = {\n            [orgUnitIdKey]: groupByOrg,\n        };\n    }\n    else if (type === 'organizational_unit') {\n        newQuery.group_by = {\n            [orgUnitIdKey]: id,\n        };\n    }\n    return `${basePath}?${getQueryRoute(newQuery)}`;\n};\n","export const addQueryFilter = (query, filterType, filterValue) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    // Filter by * won't generate a new request if group_by * already exists\n    if (filterValue === '*' && newQuery.group_by[filterType] === '*') {\n        return;\n    }\n    if (newQuery.filter_by[filterType]) {\n        let found = false;\n        const filters = newQuery.filter_by[filterType];\n        if (!Array.isArray(filters)) {\n            found = filterValue === newQuery.filter_by[filterType];\n        }\n        else {\n            for (const filter of filters) {\n                if (filter === filterValue) {\n                    found = true;\n                    break;\n                }\n            }\n        }\n        if (!found) {\n            newQuery.filter_by[filterType] = [newQuery.filter_by[filterType], filterValue];\n        }\n    }\n    else {\n        newQuery.filter_by[filterType] = [filterValue];\n    }\n    return newQuery;\n};\nexport const removeQueryFilter = (query, filterType, filterValue) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    if (filterType === null) {\n        newQuery.filter_by = undefined; // Clear all\n    }\n    else if (filterValue === null) {\n        newQuery.filter_by[filterType] = undefined; // Clear all values\n    }\n    else if (Array.isArray(newQuery.filter_by[filterType])) {\n        const index = newQuery.filter_by[filterType].indexOf(filterValue);\n        if (index > -1) {\n            newQuery.filter_by[filterType] = [\n                ...query.filter_by[filterType].slice(0, index),\n                ...query.filter_by[filterType].slice(index + 1),\n            ];\n        }\n    }\n    else {\n        newQuery.filter_by[filterType] = undefined;\n    }\n    return newQuery;\n};\n","export const testIdProp = 'data-testid';\nexport const getTestProps = (id) => ({ [testIdProp]: id });\nexport const testIds = {\n    details: {\n        cluster_lnk: 'cluster-lnk',\n        historical_data_btn: 'historical-data-btn',\n        show_more_btn: 'show-more-btn',\n        tag_lnk: 'tag-lnk',\n        view_all_btn: 'view-all-btn',\n    },\n    export: {\n        cancel_btn: 'cancel-btn',\n        submit_btn: 'submit-btn',\n    },\n    login: {\n        alert: 'alert',\n        form: 'login-form',\n        username_input: 'username-input',\n        password_input: 'password-input',\n        submit: 'submit',\n    },\n    masthead: {\n        masthead: 'masthead',\n        username: 'username',\n        sidebarToggle: 'sidebar-toggle',\n        logout: 'logout',\n    },\n    onboarding: {\n        btn_cancel: 'btn-cancel',\n        btn_back: 'btn-back',\n        btn_continue: 'btn-continue',\n        btn_close: 'btn-close',\n        type_selector: 'type-selector',\n        type_opt_aws: 'type-option-aws',\n        type_opt_ocp: 'type-option-ocp',\n        type_opt_non: 'type-option-non',\n        name_input: 'name-input',\n        check_box_1: 'check-box-1',\n        check_box_2: 'check-box-2',\n        s3_input: 's3-input',\n        clusterid_input: 'clusterid-input',\n        arn_input: 'arn-input',\n    },\n    providers: {\n        add_btn: 'add-btn',\n        bucket_input: 'bucket-input',\n        cancel_btn: 'cancel-btn',\n        empty_state_add_btn: 'empty_state_add-btn',\n        name_input: 'provider-name-input',\n        resource_name_input: 'provider-resource-name-input',\n        cluster_id_input: 'provider-cluster-id-input',\n        submit_btn: 'submit-btn',\n        type_input: 'provider-type-input',\n    },\n    sidebar: {\n        nav: 'vertical-nav',\n        link: 'vertical-nav-link',\n        backdrop: 'sidebar-backdrop',\n    },\n};\n","export function isEqual(obj1, obj2) {\n    let a = JSON.stringify(obj1);\n    let b = JSON.stringify(obj2);\n    if (!a) {\n        a = '';\n    }\n    if (!b) {\n        b = '';\n    }\n    return a.split('').sort().join('') === b.split('').sort().join('');\n}\n"],"sourceRoot":""}