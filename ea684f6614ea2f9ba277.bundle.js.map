{"version":3,"sources":["webpack:///./src/pages/dashboard/components/dashboardBase.tsx","webpack:///./src/pages/dashboard/components/dashboardWidget.styles.ts","webpack:///./src/pages/dashboard/components/dashboardWidgetBase.tsx","webpack:///./src/pages/dashboard/awsCloudDashboard/awsCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/awsCloudDashboard/awsCloudDashboard.tsx","webpack:///./src/pages/dashboard/awsDashboard/awsDashboardWidget.tsx","webpack:///./src/pages/dashboard/awsDashboard/awsDashboard.tsx","webpack:///./src/pages/dashboard/azureCloudDashboard/azureCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/azureCloudDashboard/azureCloudDashboard.tsx","webpack:///./src/pages/dashboard/azureDashboard/azureDashboardWidget.tsx","webpack:///./src/pages/dashboard/azureDashboard/azureDashboard.tsx","webpack:///./src/pages/dashboard/gcpDashboard/gcpDashboardWidget.tsx","webpack:///./src/pages/dashboard/gcpDashboard/gcpDashboard.tsx","webpack:///./src/pages/dashboard/ocpCloudDashboard/ocpCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpCloudDashboard/ocpCloudDashboard.tsx","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboardWidget.styles.ts","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboard.tsx","webpack:///./src/pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboard.tsx","webpack:///./src/pages/dashboard/ocpUsageDashboard/ocpUsageDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpUsageDashboard/ocpUsageDashboard.tsx","webpack:///./src/pages/overview/overview.styles.ts","webpack:///./src/pages/overview/perspective.styles.ts","webpack:///./src/pages/overview/perspective.tsx","webpack:///./src/pages/overview/overview.tsx","webpack:///./src/pages/overview/index.ts","webpack:///./src/utils/formatValue.ts","webpack:///./src/utils/computedForecast/getComputedForecastItems.ts","webpack:///./src/components/charts/common/chartUtils.ts","webpack:///./src/components/charts/chartTheme/theme-koku.ts","webpack:///./src/components/charts/chartTheme/index.ts","webpack:///./src/components/charts/chartTheme/theme-utils.ts","webpack:///./src/utils/computedReport/getComputedReportItems.ts","webpack:///./src/utils/computedReport/getItemLabel.ts","webpack:///./src/components/state/loadingState/loadingState.tsx","webpack:///./src/api/queries/providersQuery.ts","webpack:///./src/utils/sort.ts","webpack:///./src/components/state/emptyValueState/emptyValueState.tsx","webpack:///./src/components/reports/reportSummary/reportSummary.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryAlt.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryDetails.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryItem.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryItems.tsx","webpack:///./src/components/charts/costChart/costChart.styles.ts","webpack:///./src/components/charts/costChart/costChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryCost.tsx","webpack:///./src/components/charts/trendChart/trendChart.styles.ts","webpack:///./src/components/charts/trendChart/trendChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryTrend.tsx","webpack:///./src/components/charts/usageChart/usageChart.styles.ts","webpack:///./src/components/charts/usageChart/usageChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryUsage.tsx","webpack:///./src/utils/pathname.ts","webpack:///./src/pages/state/loading/loading.tsx","webpack:///./src/pages/state/loading/index.ts","webpack:///./src/components/icons/costIcon/Cost-icon.svg","webpack:///./src/components/icons/costIcon/costIcon.tsx","webpack:///./src/components/icons/costIcon/index.ts","webpack:///./src/pages/state/noProviders/noProvidersState.styles.ts","webpack:///./src/pages/state/noProviders/noProvidersState.tsx","webpack:///./src/pages/state/noProviders/noProviders.tsx","webpack:///./src/pages/state/noProviders/index.ts"],"names":["DashboardBase","DashboardWidget","selectWidgets","widgets","createElement","Grid","hasGutter","map","widgetId","details","showHorizontal","GridItem","sm","key","lg","xl","xl2","chartStyles","chartAltHeight","chartHeight","containerAltHeight","containerTrendHeight","containerUsageHeight","styles","tabs","marginTop","value","tabItems","Component","super","arguments","this","state","activeTabKey","forecastAuthorized","buildDetailsLink","tab","getIdKeyForTab","props","currentTab","viewAllPath","group_by","order_by","cost","getChart","containerHeight","height","adjustContainerHeight","chartType","getCostChart","getTrendChart","getUsageChart","currentReport","previousReport","t","trend","units","getUnits","title","titleKey","computedReportItem","computedReportItemValue","currentInfrastructureData","type","previousInfrastructureData","currentCostData","previousCostData","forecastData","forecastConeData","getForecastData","currentInfrastructureCostData","formatDatumValue","formatValue","formatDatumOptions","formatOptions","previousInfrastructureCostData","showForecast","undefined","computedForecastItem","forecast","newForecast","data","total","meta","reportedValues","filter","val","values","length","lastReported","date","lastReportedDate","Date","lastReportedMonth","getMonth","i","forecastDate","forecastMonth","push","unshift","confidence_max","confidence_min","infrastructure","supplementary","showSupplementaryLabel","currentData","previousData","showUsageLegendLabel","currentRequestData","previousRequestData","currentUsageData","previousUsageData","getDetails","reportType","costLabel","getDetailsLabel","costKey","report","requestLabel","requestKey","showTooltip","showUnits","showUsageFirst","usageFormatOptions","usageLabel","usageKey","getDetailsLink","Link","to","onClick","handleInsightsNavClick","getDetailsLinkTitle","groupBy","getHorizontalLayout","currentReportFetchStatus","detailsLink","status","subTitle","getSubTitle","getTabs","getTitle","today","month","endDate","startDate","count","getTab","index","tabsReport","tabsReportFetchStatus","Tab","eventKey","TabTitleText","getTabTitle","style","idKey","items","reportItem","getTabItem","availableTabs","topItems","activeTab","totalValue","hasTotal","usage","id","label","toString","Tabs","isFilled","activeKey","onSelect","handleTabClick","getVerticalLayout","Boolean","appNavId","insights","chrome","appNavClick","secondaryNav","event","tabIndex","updateTab","setState","fetchForecasts","fetchReports","async","_insights","window","auth","getUser","username","identity","user","isForecastAuthorized","then","mapStateToProps","widget","awsCloudDashboard","selectWidget","queries","selectWidgetQueries","Object","assign","selectReport","reportPathsType","current","selectReportFetchStatus","selectForecast","forecastPathsType","forecastType","previous","mapDispatchToProps","fetchWidgetForecasts","fetchWidgetReports","changeWidgetTab","AwsCloudDashboardWidget","withTranslation","selectCurrentWidgets","awsDashboard","forecastFetchStatus","selectForecastFetchStatus","AwsDashboardWidget","azureCloudDashboard","AzureCloudDashboardWidget","azureDashboard","AzureDashboardWidget","gcpDashboard","GcpDashboardWidget","ocpCloudDashboard","OcpCloudDashboardWidget","ocpDashboard","currentQuery","forecastQuery","previousQuery","tabsQuery","OcpDashboardWidget","ocpSupplementaryDashboard","OcpSupplementaryDashboardWidget","ocpUsageDashboard","OcpUsageDashboardWidget","infoIcon","fontSize","infoTitle","fontWeight","perspective","perspectiveSelector","display","alignItems","perspectiveLabel","marginBottom","marginRight","var","defaultState","isPerspectiveOpen","getDropDownItems","options","option","DropdownItem","component","handleClick","getCurrentLabel","currentItem","onItemClicked","handleSelect","handleToggle","dropdownItems","Dropdown","toggle","DropdownToggle","onToggle","isOpen","Perspective","ocpOptions","infrastructureAllCloudOptions","infrastructureAwsOptions","infrastructureAwsCloudOptions","infrastructureAzureOptions","infrastructureAzureCloudOptions","infrastructureGcpOptions","infrastructureOcpOptions","isAwsAccessAllowed","isAzureAccessAllowed","isGcpAccessAllowed","isOcpAccessAllowed","getAvailableTabs","isAwsAvailable","isAzureAvailable","isGcpAvailable","isOcpAvailable","isOcpCloudAvailable","contentRef","createRef","getCurrentTab","getDefaultInfrastructurePerspective","getDefaultOcpPerspective","getPerspective","currentInfrastructurePerspective","currentOcpPerspective","handlePerspectiveClick","tabContentId","tabContentRef","getTabContent","TabContent","ref","emptyTab","Fragment","awsProviders","azureProviders","gcpProviders","ocpProviders","isEntitled","isOrgAdmin","getPermissions","prevProps","awsProvidersFetchStatus","azureProvidersFetchStatus","gcpProvidersFetchStatus","ocpProvidersFetchStatus","isLoading","noAwsProviders","noAzureProviders","noGcpProviders","noOcpProviders","noProviders","className","Title","headingLevel","size","Popover","enableFlip","bodyContent","Button","variant","plain","awsProvidersQueryString","providers","selectProviders","selectProvidersFetchStatus","azureProvidersQueryString","gcpProvidersQueryString","ocpProvidersQueryString","unitLookupKey","unit","lookup","toLowerCase","fValue","formatCurrency","formatUsageGb","formatUsageHrs","unknownTypeFormatter","_unit","fractionDigits","toLocaleString","minimumFractionDigits","maximumFractionDigits","currency","getComputedForecastItems","sortDirection","sortKey","sort","itemMap","Map","visitDataPoint","dataPoint","forEach","item","get","set","getCostData","Array","from","getUnsortedComputedForecastItems","direction","pvalues","Number","rsquared","transformForecast","forecastItem","forecastItemValue","computedItems","chartDatums","createForecastDatum","reduce","acc","d","prevValue","y","padChartDatums","transformForecastCone","createForecastConeDatum","prevMaxValue","prevMinValue","y0","transformReport","reportItemValue","getComputedReportItems","createReportDatum","computedItem","xVal","yVal","isFloat","parseFloat","toFixed","isInt","x","maxValue","minValue","y0Val","datums","result","firstDate","lastDate","padDate","getDate","setDate","prevChartDatum","chartDatum","find","fillChartDatums","getDateRange","firstOfMonth","lastOfMonth","offset","start","end","setMonth","getDatumDateRange","getMaxValue","max","datum","getTooltipContent","i18next","getCostRangeString","year","getUsageRangeString","n","LAYOUT_PROPS","padding","area","axis","bar","boxplot","candlestick","chart","errorbar","group","legend","line","pie","scatter","stack","tooltip","voronoi","ChartTheme","default","getUnsortedComputedReportItems","markup","raw","getUsageData","capacity","limit","request","idSuffix","cluster","org_unit_id","mapId","cluster_alias","clusters","delta_percent","delta_value","source_uuid","itemLabelKey","String","keys","indexOf","tagPrefixKey","hasOwnProperty","getItemLabel","alias","account_alias","LoadingState","large","getProvidersQuery","query","encode","indices","getValueForItem","array","a","b","aVal","bVal","EmptyValueState","ReportSummary","children","Card","CardTitle","CardBody","Skeleton","CardFooter","ReportSummaryAlt","ReportSummaryDetails","requestFormatOptions","supplementaryCost","infrastructureCost","hasCost","hasCount","hasSupplementaryCost","hasInfrastructureCost","hasRequest","hasUsage","getCostLayout","showAltHeroFont","altHeroFont","Tooltip","content","getRequestLayout","usageUnits","_units","unitsLabel","getUsageLayout","ReportSummaryItemBase","percentVal","percentLabel","percent","Progress","defaultProps","v","ReportSummaryItem","nextProps","otherIndex","findIndex","includes","slice","getItems","ReportSummaryItems","currentColorScale","chart_color_green_400","chart_color_green_300","chart_color_green_200","chart_color_green_100","chart_color_green_500","fill","strokeDasharray","forecastColorScale","forecastConeColorScale","strokeWidth","previousColorScale","chart_color_black_200","yAxis","axisLabel","grid","stroke","ticks","tickLabels","xAxis","containerRef","hiddenSeries","Set","width","initDatum","series","childName","legendItem","name","symbol","cursorVoronoiContainer","getCursorVoronoiContainer","handleNavToggle","setTimeout","handleResize","clientWidth","ChartArea","has","interpolation","CursorVoronoiContainer","cursorDimension","labels","getTooltipLabel","mouseFollowTooltips","voronoiDimension","voronoiPadding","bottom","left","right","top","getLegend","ChartLegend","getLegendData","gutter","responsive","formatter","dy","dy0","value0","value1","handleLegendClick","delete","add","isDataAvailable","unavailable","s","isSeriesHidden","getChartNames","serie","getAdjustedContainerHeight","adjustedContainerHeight","getEvents","chartNames","isHidden","legendName","onLegendClick","addEventListener","navToggle","on","removeEventListener","domain","Math","ceil","currentInfrastructureDate","currentCostDate","forecastCostDate","previousInfrastructureDate","previousUsageDate","getDomain","getEndDate","midDate","floor","container","cloneElement","disable","labelComponent","ChartLegendTooltip","legendData","day","Chart","containerComponent","events","legendAllowWrap","legendComponent","legendPosition","theme","ChartAxis","tickValues","dependentAxis","ReportSummaryCost","currentMonthData","itemsPerRow","previousMonthData","tooltipKey","legendItemsPerRow","orientation","previousDate","currentDate","ReportSummaryTrend","chartContainer","legendColorScale","currentRequestDate","currentUsageDate","previousRequestDate","ReportSummaryUsage","getReleasePath","pathName","location","pathname","split","shift","release","withRouter","PageHeader","Main","module","exports","src","alt","iconSpacer","marginLeft","viewSources","getDocLink","textKey","urlKey","href","rel","target","getRouteToSources","providerType","docUrlKey","icon","descKey","EmptyState","EmptyStateIcon","EmptyStateBody","NoProvidersState"],"mappings":"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","file":"ea684f6614ea2f9ba277.bundle.js","sourcesContent":["import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nconst DashboardBase = ({ DashboardWidget, selectWidgets, widgets }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { hasGutter: true }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return widget.details.showHorizontal ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(DashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { lg: 12, xl: 6, xl2: 4, key: widgetId },\n            React.createElement(DashboardWidget, { widgetId: widgetId })));\n    }))));\nexport { DashboardBase };\n","import global_spacer_2xl from '@patternfly/react-tokens/dist/js/global_spacer_2xl';\nimport global_spacer_xl from '@patternfly/react-tokens/dist/js/global_spacer_xl';\nexport const chartStyles = {\n    chartAltHeight: 250,\n    chartHeight: 180,\n    containerAltHeight: 250,\n    containerTrendHeight: 180,\n    containerUsageHeight: 180,\n};\nexport const styles = {\n    tabs: {\n        marginTop: global_spacer_2xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n};\n","import { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { getQuery } from 'api/queries/awsQuery';\nimport { transformForecast, transformForecastCone, transformReport, } from 'components/charts/common/chartUtils';\nimport { ReportSummary, ReportSummaryAlt, ReportSummaryCost, ReportSummaryDetails, ReportSummaryItem, ReportSummaryItems, ReportSummaryTrend, ReportSummaryUsage, } from 'components/reports/reportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport { cloneDeep } from 'lodash';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './dashboardWidget.styles';\n// Todo: Temporary check until forecast feature is ready for prod\nconst isForecastAuthorized = async () => {\n    const _insights = window.insights;\n    if (_insights && _insights.chrome && _insights.chrome.auth && _insights.chrome.auth.getUser) {\n        const user = await _insights.chrome.auth.getUser();\n        const username = user.identity.user.username;\n        return username === 'cost-demo' || username === 'insights-qa';\n    }\n    return false;\n};\nclass DashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n            forecastAuthorized: false,\n        };\n        this.buildDetailsLink = (tab) => {\n            const { details, getIdKeyForTab } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return `${details.viewAllPath}?${getQuery({\n                group_by: {\n                    [currentTab]: '*',\n                },\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.getChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { chartType } = this.props;\n            if (chartType === \"cost\" /* cost */) {\n                return this.getCostChart(containerHeight, height, adjustContainerHeight);\n            }\n            else if (chartType === \"supplementary\" /* supplementary */) {\n                return this.getTrendChart(containerHeight, height, adjustContainerHeight, true);\n            }\n            else if (chartType === \"trend\" /* trend */) {\n                return this.getTrendChart(containerHeight, height, adjustContainerHeight);\n            }\n            else if (chartType === \"usage\" /* usage */) {\n                return this.getUsageChart(height, adjustContainerHeight);\n            }\n            else {\n                return null;\n            }\n        };\n        // This chart displays cost and infrastructure cost\n        this.getCostChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { currentReport, previousReport, t, trend } = this.props;\n            const { forecastAuthorized } = this.state;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            const computedReportItem = trend.computedReportItem; // cost, supplementary cost, etc.\n            const computedReportItemValue = trend.computedReportItemValue; // infrastructure usage cost\n            // Infrastructure data\n            const currentInfrastructureData = transformReport(currentReport, trend.type, 'date', 'infrastructure', computedReportItemValue);\n            const previousInfrastructureData = transformReport(previousReport, trend.type, 'date', 'infrastructure', computedReportItemValue);\n            // Cost data\n            const currentCostData = transformReport(currentReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            const previousCostData = transformReport(previousReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            // Forecast data\n            const { forecastData, forecastConeData } = this.getForecastData();\n            return (React.createElement(ReportSummaryCost, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentCostData: currentCostData, currentInfrastructureCostData: currentInfrastructureData, forecastData: forecastData, forecastConeData: forecastConeData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousCostData: previousCostData, previousInfrastructureCostData: previousInfrastructureData, showForecast: trend.computedForecastItem !== undefined && forecastAuthorized, title: title }));\n        };\n        this.getForecastData = () => {\n            const { currentReport, forecast, trend } = this.props;\n            const computedForecastItem = trend.computedForecastItem;\n            let forecastData;\n            let forecastConeData;\n            if (computedForecastItem) {\n                const newForecast = cloneDeep(forecast);\n                if (newForecast) {\n                    newForecast.data = [];\n                }\n                if (forecast && currentReport && currentReport.data) {\n                    const total = currentReport.meta && currentReport.meta.total && currentReport.meta.total.cost\n                        ? currentReport.meta.total.cost.total.value\n                        : 0;\n                    // Find last currentData date with values\n                    const reportedValues = currentReport.data.filter(val => val.values.length);\n                    const lastReported = reportedValues[reportedValues.length - 1]\n                        ? reportedValues[reportedValues.length - 1].date\n                        : undefined;\n                    // Remove overlapping forecast dates, if any\n                    if (forecast && forecast.data) {\n                        const lastReportedDate = new Date(lastReported);\n                        const lastReportedMonth = lastReportedDate.getMonth() + 1;\n                        for (let i = 0; i < forecast.data.length - 1; i++) {\n                            const forecastDate = new Date(forecast.data[i].date);\n                            const forecastMonth = forecastDate.getMonth() + 1;\n                            // Ensure month match. AWS forecast currently starts with \"2020-12-04\", but ends on \"2021-01-01\"\n                            if (forecastDate > lastReportedDate && lastReportedMonth === forecastMonth) {\n                                newForecast.data.push(forecast.data[i]);\n                            }\n                        }\n                    }\n                    // Show continuous line from current report to forecast\n                    newForecast.data.unshift({\n                        date: lastReported,\n                        values: [\n                            {\n                                date: lastReported,\n                                cost: {\n                                    confidence_max: {\n                                        value: 0,\n                                    },\n                                    confidence_min: {\n                                        value: 0,\n                                    },\n                                    total: {\n                                        value: total,\n                                        units: 'USD',\n                                    },\n                                },\n                                infrastructure: {\n                                    confidence_max: {\n                                        value: 0,\n                                    },\n                                    confidence_min: {\n                                        value: 0,\n                                    },\n                                    total: {\n                                        value: total,\n                                        units: 'USD',\n                                    },\n                                },\n                                supplementary: {\n                                    confidence_max: {\n                                        value: 0,\n                                    },\n                                    confidence_min: {\n                                        value: 0,\n                                    },\n                                    total: {\n                                        value: total,\n                                        units: 'USD',\n                                    },\n                                },\n                            },\n                        ],\n                    });\n                }\n                forecastData = transformForecast(newForecast, trend.type, computedForecastItem);\n                forecastConeData = transformForecastCone(newForecast, trend.type, computedForecastItem);\n            }\n            return { forecastData, forecastConeData };\n        };\n        // This chart displays cost only\n        this.getTrendChart = (containerHeight, height, adjustContainerHeight = false, showSupplementaryLabel = false) => {\n            const { currentReport, details, previousReport, t, trend } = this.props;\n            const { forecastAuthorized } = this.state;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            const computedReportItem = trend.computedReportItem; // cost, supplementary cost, etc.\n            const computedReportItemValue = trend.computedReportItemValue; // infrastructure usage cost\n            // Cost data\n            const currentData = transformReport(currentReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            const previousData = transformReport(previousReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            // Forecast data\n            const { forecastData, forecastConeData } = this.getForecastData();\n            return (React.createElement(ReportSummaryTrend, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentData: currentData, forecastData: forecastData, forecastConeData: forecastConeData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousData, showForecast: trend.computedForecastItem !== undefined && forecastAuthorized, showSupplementaryLabel: showSupplementaryLabel, showUsageLegendLabel: details.showUsageLegendLabel, title: title, units: units }));\n        };\n        // This chart displays usage and requests\n        this.getUsageChart = (height, adjustContainerHeight = false) => {\n            const { currentReport, previousReport, t, trend } = this.props;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            // Request data\n            const currentRequestData = transformReport(currentReport, trend.type, 'date', 'request');\n            const previousRequestData = transformReport(previousReport, trend.type, 'date', 'request');\n            // Usage data\n            const currentUsageData = transformReport(currentReport, trend.type, 'date', 'usage');\n            const previousUsageData = transformReport(previousReport, trend.type, 'date', 'usage');\n            return (React.createElement(ReportSummaryUsage, { adjustContainerHeight: adjustContainerHeight, containerHeight: chartStyles.containerUsageHeight, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousRequestData: previousRequestData, previousUsageData: previousUsageData, title: title }));\n        };\n        this.getDetails = () => {\n            const { chartType, currentReport, details, reportType, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            const units = this.getUnits();\n            return (React.createElement(ReportSummaryDetails, { chartType: chartType, computedReportItem: computedReportItem, computedReportItemValue: computedReportItemValue, costLabel: this.getDetailsLabel(details.costKey, units), formatOptions: details.formatOptions, formatValue: formatValue, report: currentReport, reportType: reportType, requestLabel: this.getDetailsLabel(details.requestKey, units), showTooltip: details.showTooltip, showUnits: details.showUnits, showUsageFirst: details.showUsageFirst, units: details.units, usageFormatOptions: details.usageFormatOptions, usageLabel: this.getDetailsLabel(details.usageKey, units) }));\n        };\n        this.getDetailsLabel = (key, units) => {\n            const { t } = this.props;\n            return key ? t(key, { units: t(`units.${units}`) }) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, details } = this.props;\n            if (details.viewAllPath) {\n                return (React.createElement(Link, { to: this.buildDetailsLink(currentTab), onClick: this.handleInsightsNavClick }, this.getDetailsLinkTitle(currentTab)));\n            }\n            return null;\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { getIdKeyForTab, t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { containerAltHeight = chartStyles.containerAltHeight, chartAltHeight = chartStyles.chartAltHeight, currentReportFetchStatus, details, } = this.props;\n            return (React.createElement(ReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(containerAltHeight, chartAltHeight, details.adjustContainerHeight)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'D');\n            const startDate = formatDate(startOfMonth(today), 'D');\n            return t('aws_dashboard.widget_subtitle', {\n                count: getDate(today),\n                endDate,\n                month,\n                startDate,\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { getIdKeyForTab, tabsReport, tabsReportFetchStatus } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) },\n                React.createElement(\"div\", { style: styles.tabItems },\n                    React.createElement(ReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport, status: tabsReportFetchStatus }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, details, getIdKeyForTab, tabsReport, topItems, trend } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            let totalValue;\n            const hasTotal = tabsReport && tabsReport.meta && tabsReport.meta.total;\n            if (computedReportItem === \"usage\" /* usage */) {\n                if (hasTotal && tabsReport.meta.total.usage) {\n                    totalValue = tabsReport.meta.total.usage.value;\n                }\n            }\n            else {\n                if (hasTotal &&\n                    tabsReport.meta.total[computedReportItem] &&\n                    tabsReport.meta.total[computedReportItem][computedReportItemValue]) {\n                    totalValue = tabsReport.meta.total[computedReportItem][computedReportItemValue].value;\n                }\n            }\n            if (activeTab === currentTab) {\n                return (React.createElement(ReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: totalValue, units: details.units ? details.units : this.getUnits(), value: reportItem[computedReportItem][computedReportItemValue].value }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { getIdKeyForTab, t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getUnits = () => {\n            const { currentReport, details, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            if (details.units) {\n                return details.units;\n            }\n            let units;\n            const hasTotal = currentReport && currentReport.meta && currentReport.meta.total;\n            if (computedReportItem === \"usage\" /* usage */) {\n                const hasUsage = hasTotal && currentReport.meta.total.usage;\n                units = hasUsage ? unitLookupKey(currentReport.meta.total.usage.units) : '';\n            }\n            else {\n                const hasCost = hasTotal &&\n                    currentReport.meta.total[computedReportItem] &&\n                    currentReport.meta.total[computedReportItem][computedReportItemValue];\n                units = hasCost ? unitLookupKey(currentReport.meta.total[computedReportItem][computedReportItemValue].units) : '';\n            }\n            return units;\n        };\n        this.getVerticalLayout = () => {\n            const { availableTabs, currentReportFetchStatus, details } = this.props;\n            return (React.createElement(ReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerTrendHeight, chartStyles.chartHeight, details.adjustContainerHeight),\n                Boolean(availableTabs) && React.createElement(\"div\", { style: styles.tabs }, this.getTabs())));\n        };\n        this.handleInsightsNavClick = () => {\n            const { details } = this.props;\n            if (details.appNavId) {\n                insights.chrome.appNavClick({\n                    id: details.appNavId,\n                    secondaryNav: true,\n                });\n            }\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchForecasts, fetchReports, id, trend, updateTab, widgetId } = this.props;\n        if (availableTabs) {\n            updateTab(id, availableTabs[0]);\n        }\n        if (fetchReports) {\n            fetchReports(widgetId);\n        }\n        if (trend.computedForecastItem !== undefined) {\n            isForecastAuthorized().then(val => {\n                if (val && fetchForecasts) {\n                    fetchForecasts(widgetId);\n                }\n                this.setState({ forecastAuthorized: val });\n            });\n        }\n    }\n    render() {\n        const { details } = this.props;\n        return details.showHorizontal ? this.getHorizontalLayout() : this.getVerticalLayout();\n    }\n}\nexport { DashboardWidgetBase };\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsCloudDashboardActions, awsCloudDashboardSelectors, } from 'store/dashboard/awsCloudDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: awsCloudDashboardActions.fetchWidgetForecasts,\n    fetchReports: awsCloudDashboardActions.fetchWidgetReports,\n    updateTab: awsCloudDashboardActions.changeWidgetTab,\n};\nconst AwsCloudDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AwsCloudDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsCloudDashboardSelectors } from 'store/dashboard/awsCloudDashboard';\nimport { AwsCloudDashboardWidget } from './awsCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: AwsCloudDashboardWidget,\n        selectWidgets: awsCloudDashboardSelectors.selectWidgets(state),\n        widgets: awsCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsCloudDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default AwsCloudDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsDashboardActions, awsDashboardSelectors } from 'store/dashboard/awsDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: awsDashboardActions.fetchWidgetForecasts,\n    fetchReports: awsDashboardActions.fetchWidgetReports,\n    updateTab: awsDashboardActions.changeWidgetTab,\n};\nconst AwsDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AwsDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsDashboardSelectors } from 'store/dashboard/awsDashboard';\nimport { AwsDashboardWidget } from './awsDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: AwsDashboardWidget,\n        selectWidgets: awsDashboardSelectors.selectWidgets(state),\n        widgets: awsDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default AwsDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureCloudDashboardActions, azureCloudDashboardSelectors, } from 'store/dashboard/azureCloudDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"service_names\" /* service_names */:\n            return 'service_name';\n        case \"subscription_guids\" /* subscription_guids */:\n            return 'subscription_guid';\n        case \"resource_locations\" /* resource_locations */:\n            return 'resource_location';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = azureCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = azureCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: azureCloudDashboardActions.fetchWidgetForecasts,\n    fetchReports: azureCloudDashboardActions.fetchWidgetReports,\n    updateTab: azureCloudDashboardActions.changeWidgetTab,\n};\nconst AzureCloudDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AzureCloudDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureCloudDashboardSelectors } from 'store/dashboard/azureCloudDashboard';\nimport { AzureCloudDashboardWidget } from './azureCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: AzureCloudDashboardWidget,\n        selectWidgets: azureCloudDashboardSelectors.selectWidgets(state),\n        widgets: azureCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AzureCloudDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default AzureCloudDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureDashboardActions, azureDashboardSelectors } from 'store/dashboard/azureDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"service_names\" /* service_names */:\n            return 'service_name';\n        case \"subscription_guids\" /* subscription_guids */:\n            return 'subscription_guid';\n        case \"resource_locations\" /* resource_locations */:\n            return 'resource_location';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = azureDashboardSelectors.selectWidget(state, widgetId);\n    const queries = azureDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: azureDashboardActions.fetchWidgetForecasts,\n    fetchReports: azureDashboardActions.fetchWidgetReports,\n    updateTab: azureDashboardActions.changeWidgetTab,\n};\nconst AzureDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AzureDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureDashboardSelectors } from 'store/dashboard/azureDashboard';\nimport { AzureDashboardWidget } from './azureDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: AzureDashboardWidget,\n        selectWidgets: azureDashboardSelectors.selectWidgets(state),\n        widgets: azureDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AzureDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default AzureDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { gcpDashboardActions, gcpDashboardSelectors } from 'store/dashboard/gcpDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = gcpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = gcpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: gcpDashboardActions.fetchWidgetReports,\n    updateTab: gcpDashboardActions.changeWidgetTab,\n};\nconst GcpDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { GcpDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { gcpDashboardSelectors } from 'store/dashboard/gcpDashboard';\nimport { GcpDashboardWidget } from './gcpDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: GcpDashboardWidget,\n        selectWidgets: gcpDashboardSelectors.selectWidgets(state),\n        widgets: gcpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst GcpDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default GcpDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardActions, ocpCloudDashboardSelectors, } from 'store/dashboard/ocpCloudDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"services\" /* services */:\n            return 'service';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: ocpCloudDashboardActions.fetchWidgetForecasts,\n    fetchReports: ocpCloudDashboardActions.fetchWidgetReports,\n    updateTab: ocpCloudDashboardActions.changeWidgetTab,\n};\nconst OcpCloudDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpCloudDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardSelectors } from 'store/dashboard/ocpCloudDashboard';\nimport { OcpCloudDashboardWidget } from './ocpCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: OcpCloudDashboardWidget,\n        selectWidgets: ocpCloudDashboardSelectors.selectWidgets(state),\n        widgets: ocpCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpCloudDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpCloudDashboard;\n","export const chartStyles = {\n    chartAltHeight: 250,\n    containerAltHeight: 250,\n};\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardActions, ocpDashboardSelectors } from 'store/dashboard/ocpDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { chartStyles } from './ocpDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, chartAltHeight: chartStyles.chartAltHeight, containerAltHeight: chartStyles.containerAltHeight, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: ocpDashboardActions.fetchWidgetForecasts,\n    fetchReports: ocpDashboardActions.fetchWidgetReports,\n    updateTab: ocpDashboardActions.changeWidgetTab,\n};\nconst OcpDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardSelectors } from 'store/dashboard/ocpDashboard';\nimport { OcpDashboardWidget } from './ocpDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: OcpDashboardWidget,\n        selectWidgets: ocpDashboardSelectors.selectWidgets(state),\n        widgets: ocpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpSupplementaryDashboardActions, ocpSupplementaryDashboardSelectors, } from 'store/dashboard/ocpSupplementaryDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpSupplementaryDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpSupplementaryDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: ocpSupplementaryDashboardActions.fetchWidgetForecasts,\n    fetchReports: ocpSupplementaryDashboardActions.fetchWidgetReports,\n    updateTab: ocpSupplementaryDashboardActions.changeWidgetTab,\n};\nconst OcpSupplementaryDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpSupplementaryDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpSupplementaryDashboardSelectors } from 'store/dashboard/ocpSupplementaryDashboard';\nimport { OcpSupplementaryDashboardWidget } from './ocpSupplementaryDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: OcpSupplementaryDashboardWidget,\n        selectWidgets: ocpSupplementaryDashboardSelectors.selectWidgets(state),\n        widgets: ocpSupplementaryDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpSupplementaryDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpSupplementaryDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpUsageDashboardActions, ocpUsageDashboardSelectors, } from 'store/dashboard/ocpUsageDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpUsageDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpUsageDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpUsageDashboardActions.fetchWidgetReports,\n    updateTab: ocpUsageDashboardActions.changeWidgetTab,\n};\nconst OcpUsageDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpUsageDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpUsageDashboardSelectors } from 'store/dashboard/ocpUsageDashboard';\nimport { OcpUsageDashboardWidget } from './ocpUsageDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: OcpUsageDashboardWidget,\n        selectWidgets: ocpUsageDashboardSelectors.selectWidgets(state),\n        widgets: ocpUsageDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpUsageDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpUsageDashboard;\n","import global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const styles = {\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    perspective: {\n        marginTop: global_spacer_lg.value,\n    },\n    tabs: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    perspectiveSelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    perspectiveLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n};\n","import { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './perspective.styles';\nclass PerspectiveBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isPerspectiveOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getDropDownItems = () => {\n            const { options, t } = this.props;\n            return options.map(option => (React.createElement(DropdownItem, { component: \"button\", key: option.value, onClick: () => this.handleClick(option.value) }, t(option.label))));\n        };\n        this.getCurrentLabel = () => {\n            const { currentItem, options, t } = this.props;\n            let label = '';\n            for (const option of options) {\n                if (currentItem === option.value) {\n                    label = t(option.label);\n                    break;\n                }\n            }\n            return label;\n        };\n        this.handleClick = value => {\n            const { onItemClicked } = this.props;\n            if (onItemClicked) {\n                onItemClicked(value);\n            }\n        };\n        this.handleSelect = () => {\n            this.setState({\n                isPerspectiveOpen: !this.state.isPerspectiveOpen,\n            });\n        };\n        this.handleToggle = isPerspectiveOpen => {\n            this.setState({\n                isPerspectiveOpen,\n            });\n        };\n    }\n    render() {\n        const { t } = this.props;\n        const { isPerspectiveOpen } = this.state;\n        const dropdownItems = this.getDropDownItems();\n        return (React.createElement(\"div\", { style: styles.perspectiveSelector },\n            React.createElement(\"label\", { style: styles.perspectiveLabel }, t('overview.perspective.label')),\n            React.createElement(Dropdown, { onSelect: this.handleSelect, toggle: React.createElement(DropdownToggle, { onToggle: this.handleToggle }, this.getCurrentLabel()), isOpen: isPerspectiveOpen, dropdownItems: dropdownItems })));\n    }\n}\nconst Perspective = withTranslation()(PerspectiveBase);\nexport { Perspective };\n","import './overview.scss';\nimport { Button, ButtonVariant, Popover, Tab, TabContent, Tabs, TabTitleText, Title } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport AwsCloudDashboard from 'pages/dashboard/awsCloudDashboard/awsCloudDashboard';\nimport AwsDashboard from 'pages/dashboard/awsDashboard/awsDashboard';\nimport AzureCloudDashboard from 'pages/dashboard/azureCloudDashboard/azureCloudDashboard';\nimport AzureDashboard from 'pages/dashboard/azureDashboard/azureDashboard';\nimport GcpDashboard from 'pages/dashboard/gcpDashboard/gcpDashboard';\nimport OcpCloudDashboard from 'pages/dashboard/ocpCloudDashboard/ocpCloudDashboard';\nimport OcpDashboard from 'pages/dashboard/ocpDashboard/ocpDashboard';\nimport OcpSupplementaryDashboard from 'pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboard';\nimport OcpUsageDashboard from 'pages/dashboard/ocpUsageDashboard/ocpUsageDashboard';\nimport Loading from 'pages/state/loading';\nimport NoProviders from 'pages/state/noProviders';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsProvidersQuery, azureProvidersQuery, gcpProvidersQuery, ocpProvidersQuery, providersSelectors, } from 'store/providers';\nimport { hasAwsPermissions, hasAzurePermissions, hasEntitledPermissions, hasGcpPermissions, hasOcpPermissions, hasOrgAdminPermissions, } from 'utils/permissions';\nimport { styles } from './overview.styles';\nimport { Perspective } from './perspective';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"infrastructure\" /* infrastructure */:\n            return 'infrastructure';\n        case \"ocp\" /* ocp */:\n            return 'ocp';\n    }\n};\n// Ocp options\nconst ocpOptions = [\n    { label: 'overview.perspective.all', value: 'all' },\n    { label: 'overview.perspective.supplementary', value: 'supplementary' },\n];\n// Infrastructure all cloud options\nconst infrastructureAllCloudOptions = [{ label: 'overview.perspective.all_cloud', value: 'all_cloud' }];\n// Infrastructure AWS options\nconst infrastructureAwsOptions = [{ label: 'overview.perspective.aws', value: 'aws' }];\n// Infrastructure AWS cloud options\nconst infrastructureAwsCloudOptions = [{ label: 'overview.perspective.aws_cloud', value: 'aws_cloud' }];\n// Infrastructure Azure options\nconst infrastructureAzureOptions = [{ label: 'overview.perspective.azure', value: 'azure' }];\n// Infrastructure Azure cloud options\nconst infrastructureAzureCloudOptions = [{ label: 'overview.perspective.azure_cloud', value: 'azure_cloud' }];\n// Infrastructure GCP options\nconst infrastructureGcpOptions = [{ label: 'overview.perspective.gcp', value: 'gcp' }];\n// Infrastructure Ocp options\nconst infrastructureOcpOptions = [{ label: 'overview.perspective.ocp_usage', value: 'ocp_usage' }];\nconst getPermissions = async () => {\n    const isEntitled = await hasEntitledPermissions();\n    const isOrgAdmin = await hasOrgAdminPermissions();\n    const isAwsAccessAllowed = isEntitled && (isOrgAdmin || (await hasAwsPermissions()));\n    const isAzureAccessAllowed = isEntitled && (isOrgAdmin || (await hasAzurePermissions()));\n    const isGcpAccessAllowed = isEntitled && (isOrgAdmin || (await hasGcpPermissions()));\n    const isOcpAccessAllowed = isEntitled && (isOrgAdmin || (await hasOcpPermissions()));\n    return {\n        isAwsAccessAllowed,\n        isAzureAccessAllowed,\n        isGcpAccessAllowed,\n        isOcpAccessAllowed,\n    };\n};\nclass OverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            activeTabKey: 0,\n            isAwsAccessAllowed: false,\n            isAzureAccessAllowed: false,\n            isGcpAccessAllowed: false,\n            isOcpAccessAllowed: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getAvailableTabs = () => {\n            const availableTabs = [];\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isGcpAvailable = this.isGcpAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            const isOcpCloudAvailable = this.isOcpCloudAvailable();\n            if (isOcpAvailable) {\n                availableTabs.push({\n                    contentRef: React.createRef(),\n                    tab: \"ocp\" /* ocp */,\n                });\n            }\n            if (isAwsAvailable || isAzureAvailable || isGcpAvailable || isOcpCloudAvailable) {\n                availableTabs.push({\n                    contentRef: React.createRef(),\n                    tab: \"infrastructure\" /* infrastructure */,\n                });\n            }\n            return availableTabs;\n        };\n        this.getCurrentTab = () => {\n            const { activeTabKey } = this.state;\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isGcpAvailable = this.isGcpAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            const isOcpCloudAvailable = this.isOcpCloudAvailable();\n            const showOcpOnly = isOcpAvailable && !(isAwsAvailable || isAzureAvailable || isGcpAvailable || isOcpCloudAvailable);\n            const showInfrastructureOnly = !isOcpAvailable && (isAwsAvailable || isAzureAvailable || isGcpAvailable || isOcpCloudAvailable);\n            if (showOcpOnly) {\n                return \"ocp\" /* ocp */;\n            }\n            else if (showInfrastructureOnly) {\n                return \"infrastructure\" /* infrastructure */;\n            }\n            else {\n                return activeTabKey === 0 ? \"ocp\" /* ocp */ : \"infrastructure\" /* infrastructure */;\n            }\n        };\n        this.getDefaultInfrastructurePerspective = () => {\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isGcpAvailable = this.isGcpAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            if (isOcpAvailable) {\n                return \"all_cloud\" /* allCloud */;\n            }\n            if (isAwsAvailable) {\n                return \"aws\" /* aws */;\n            }\n            if (isAzureAvailable) {\n                return \"azure\" /* azure */;\n            }\n            if (isGcpAvailable) {\n                return \"gcp\" /* gcp */;\n            }\n            return undefined;\n        };\n        this.getDefaultOcpPerspective = () => {\n            const isOcpAvailable = this.isOcpAvailable();\n            if (isOcpAvailable) {\n                return \"all\" /* all */;\n            }\n            return undefined;\n        };\n        this.getPerspective = () => {\n            const { currentInfrastructurePerspective, currentOcpPerspective } = this.state;\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isGcpAvailable = this.isGcpAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            if (!(isAwsAvailable || isAzureAvailable || isGcpAvailable || isOcpAvailable)) {\n                return null;\n            }\n            // Dynamically show options if providers are available\n            const options = [];\n            if (this.getCurrentTab() === \"infrastructure\" /* infrastructure */) {\n                if (isOcpAvailable) {\n                    options.push(...infrastructureAllCloudOptions);\n                }\n                if (isAwsAvailable) {\n                    options.push(...infrastructureAwsOptions);\n                }\n                if (isOcpAvailable && isAwsAvailable) {\n                    options.push(...infrastructureAwsCloudOptions);\n                }\n                if (isGcpAvailable) {\n                    options.push(...infrastructureGcpOptions);\n                }\n                if (isAzureAvailable) {\n                    options.push(...infrastructureAzureOptions);\n                }\n                if (isOcpAvailable && isAzureAvailable) {\n                    options.push(...infrastructureAzureCloudOptions);\n                }\n                if (isOcpAvailable) {\n                    options.push(...infrastructureOcpOptions);\n                }\n            }\n            else {\n                options.push(...ocpOptions);\n            }\n            const currentItem = this.getCurrentTab() === \"infrastructure\" /* infrastructure */ ? currentInfrastructurePerspective : currentOcpPerspective;\n            return (React.createElement(Perspective, { currentItem: currentItem || options[0].value, onItemClicked: this.handlePerspectiveClick, options: options }));\n        };\n        this.getTab = (tab, contentRef, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, tabContentId: `tab-${index}`, tabContentRef: contentRef, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) }));\n        };\n        this.getTabContent = (availableTabs) => {\n            return availableTabs.map((val, index) => {\n                return (React.createElement(TabContent, { eventKey: index, key: `${getIdKeyForTab(val.tab)}-tabContent`, id: `tab-${index}`, ref: val.contentRef }, this.getTabItem(val.tab, index)));\n            });\n        };\n        this.getTabItem = (tab, index) => {\n            const { activeTabKey, currentInfrastructurePerspective, currentOcpPerspective } = this.state;\n            const emptyTab = React.createElement(React.Fragment, null); // Lazily load tabs\n            if (activeTabKey !== index) {\n                return emptyTab;\n            }\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === \"infrastructure\" /* infrastructure */) {\n                if (currentInfrastructurePerspective === \"all_cloud\" /* allCloud */) {\n                    return React.createElement(OcpCloudDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"aws\" /* aws */) {\n                    return React.createElement(AwsDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"aws_cloud\" /* awsFiltered */) {\n                    return React.createElement(AwsCloudDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"gcp\" /* gcp */) {\n                    return React.createElement(GcpDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"azure\" /* azure */) {\n                    return React.createElement(AzureDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"azure_cloud\" /* azureCloud */) {\n                    return React.createElement(AzureCloudDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"ocp_usage\" /* ocpUsage */) {\n                    return React.createElement(OcpUsageDashboard, null);\n                }\n                else {\n                    return React.createElement(OcpCloudDashboard, null); // default\n                }\n            }\n            else if (currentTab === \"ocp\" /* ocp */) {\n                if (currentOcpPerspective === \"all\" /* all */) {\n                    return React.createElement(OcpDashboard, null);\n                }\n                else if (currentOcpPerspective === \"supplementary\" /* supplementary */) {\n                    return React.createElement(OcpSupplementaryDashboard, null);\n                }\n                else {\n                    return React.createElement(OcpDashboard, null); // default\n                }\n            }\n            else {\n                return emptyTab;\n            }\n        };\n        this.getTabs = (availableTabs) => {\n            const { activeTabKey } = this.state;\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((val, index) => this.getTab(val.tab, val.contentRef, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            if (tab === \"infrastructure\" /* infrastructure */) {\n                return t('overview.infrastructure');\n            }\n            else if (tab === \"ocp\" /* ocp */) {\n                return t('overview.ocp');\n            }\n        };\n        this.handlePerspectiveClick = (value) => {\n            const currentTab = this.getCurrentTab();\n            this.setState(Object.assign(Object.assign({}, (currentTab === \"infrastructure\" /* infrastructure */ && {\n                currentInfrastructurePerspective: value,\n            })), (currentTab === \"ocp\" /* ocp */ && { currentOcpPerspective: value })));\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { activeTabKey } = this.state;\n            if (activeTabKey !== tabIndex) {\n                this.setState({\n                    activeTabKey: tabIndex,\n                });\n            }\n        };\n        this.isAwsAvailable = () => {\n            const { awsProviders } = this.props;\n            const { isAwsAccessAllowed } = this.state;\n            return (\n            // API returns empty data array for no sources\n            isAwsAccessAllowed && awsProviders !== undefined && awsProviders.meta !== undefined && awsProviders.meta.count > 0);\n        };\n        this.isAzureAvailable = () => {\n            const { azureProviders } = this.props;\n            const { isAzureAccessAllowed } = this.state;\n            return (\n            // API returns empty data array for no sources\n            isAzureAccessAllowed &&\n                azureProviders !== undefined &&\n                azureProviders.meta !== undefined &&\n                azureProviders.meta.count > 0);\n        };\n        this.isGcpAvailable = () => {\n            const { gcpProviders } = this.props;\n            const { isGcpAccessAllowed } = this.state;\n            return (\n            // API returns empty data array for no sources\n            isGcpAccessAllowed && gcpProviders !== undefined && gcpProviders.meta !== undefined && gcpProviders.meta.count > 0);\n        };\n        this.isOcpAvailable = () => {\n            const { ocpProviders } = this.props;\n            const { isOcpAccessAllowed } = this.state;\n            return (\n            // API returns empty data array for no sources\n            isOcpAccessAllowed && ocpProviders !== undefined && ocpProviders.meta !== undefined && ocpProviders.meta.count > 0);\n        };\n        this.isOcpCloudAvailable = () => {\n            return this.isAwsAvailable() && this.isOcpAvailable();\n        };\n    }\n    componentDidMount() {\n        getPermissions().then(({ isAwsAccessAllowed, isAzureAccessAllowed, isGcpAccessAllowed, isOcpAccessAllowed }) => {\n            this.setState({\n                currentInfrastructurePerspective: this.getDefaultInfrastructurePerspective(),\n                currentOcpPerspective: this.getDefaultOcpPerspective(),\n                isAwsAccessAllowed,\n                isAzureAccessAllowed,\n                isGcpAccessAllowed,\n                isOcpAccessAllowed,\n            });\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { awsProviders, azureProviders, gcpProviders, ocpProviders } = this.props;\n        if (prevProps.awsProviders !== awsProviders ||\n            prevProps.azureProviders !== azureProviders ||\n            prevProps.gcpProviders !== gcpProviders ||\n            prevProps.ocpProviders !== ocpProviders) {\n            this.setState({\n                currentInfrastructurePerspective: this.getDefaultInfrastructurePerspective(),\n                currentOcpPerspective: this.getDefaultOcpPerspective(),\n            });\n        }\n    }\n    render() {\n        const { awsProvidersFetchStatus, azureProvidersFetchStatus, gcpProvidersFetchStatus, ocpProvidersFetchStatus, t, } = this.props;\n        const availableTabs = this.getAvailableTabs();\n        const isLoading = awsProvidersFetchStatus === 1 /* inProgress */ ||\n            azureProvidersFetchStatus === 1 /* inProgress */ ||\n            gcpProvidersFetchStatus === 1 /* inProgress */ ||\n            ocpProvidersFetchStatus === 1 /* inProgress */;\n        // Test for no providers\n        const noAwsProviders = !this.isAwsAvailable() && awsProvidersFetchStatus === 2 /* complete */;\n        const noAzureProviders = !this.isAzureAvailable() && azureProvidersFetchStatus === 2 /* complete */;\n        const noGcpProviders = !this.isGcpAvailable() && gcpProvidersFetchStatus === 2 /* complete */;\n        const noOcpProviders = !this.isOcpAvailable() && ocpProvidersFetchStatus === 2 /* complete */;\n        const noProviders = noAwsProviders && noAzureProviders && noGcpProviders && noOcpProviders;\n        const title = t('navigation.overview');\n        if (noProviders) {\n            return React.createElement(NoProviders, { title: title });\n        }\n        else if (isLoading) {\n            return React.createElement(Loading, { title: title });\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"section\", { className: `pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light headerOverride}` },\n                React.createElement(\"header\", { className: \"pf-u-display-flex pf-u-justify-content-space-between pf-u-align-items-center\" },\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"2xl\" },\n                        t('overview.title'),\n                        React.createElement(\"span\", { style: styles.infoIcon },\n                            React.createElement(Popover, { \"aria-label\": t('ocp_details.supplementary_aria_label'), enableFlip: true, bodyContent: React.createElement(React.Fragment, null,\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.ocp_cloud')),\n                                    React.createElement(\"p\", null, t('overview.ocp_cloud_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.ocp')),\n                                    React.createElement(\"p\", null, t('overview.ocp_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.gcp')),\n                                    React.createElement(\"p\", null, t('overview.gcp_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.aws')),\n                                    React.createElement(\"p\", null, t('overview.aws_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.azure')),\n                                    React.createElement(\"p\", null, t('overview.azure_desc'))) },\n                                React.createElement(Button, { variant: ButtonVariant.plain },\n                                    React.createElement(OutlinedQuestionCircleIcon, null)))))),\n                React.createElement(\"div\", { style: styles.tabs }, this.getTabs(availableTabs)),\n                React.createElement(\"div\", { style: styles.perspective }, this.getPerspective())),\n            React.createElement(\"section\", { className: \"pf-l-page__main-section pf-c-page__main-section\", \"page-type\": \"cost-management-overview\" }, this.getTabContent(availableTabs))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const awsProvidersQueryString = getProvidersQuery(awsProvidersQuery);\n    const awsProviders = providersSelectors.selectProviders(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const awsProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const azureProvidersQueryString = getProvidersQuery(azureProvidersQuery);\n    const azureProviders = providersSelectors.selectProviders(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const azureProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const gcpProvidersQueryString = getProvidersQuery(gcpProvidersQuery);\n    const gcpProviders = providersSelectors.selectProviders(state, \"gcp\" /* gcp */, gcpProvidersQueryString);\n    const gcpProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"gcp\" /* gcp */, gcpProvidersQueryString);\n    const ocpProvidersQueryString = getProvidersQuery(ocpProvidersQuery);\n    const ocpProviders = providersSelectors.selectProviders(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    const ocpProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    return {\n        awsProviders,\n        awsProvidersFetchStatus,\n        awsProvidersQueryString,\n        azureProviders,\n        azureProvidersFetchStatus,\n        azureProvidersQueryString,\n        gcpProviders,\n        gcpProvidersFetchStatus,\n        gcpProvidersQueryString,\n        ocpProviders,\n        ocpProvidersFetchStatus,\n        ocpProvidersQueryString,\n    };\n});\nconst Overview = withTranslation()(connect(mapStateToProps)(OverviewBase));\nexport default Overview;\n","import Overview from './overview';\nexport default Overview;\n","export const unitLookupKey = unit => {\n    const lookup = unit ? unit.toLowerCase() : '';\n    switch (lookup) {\n        case 'usd':\n        case 'gb':\n        case 'gb-hours':\n        case 'gb-mo':\n        case 'core-hours':\n        case 'hrs':\n        case 'tag-mo':\n        case 'vm-hours':\n            return lookup;\n        default:\n            return '';\n    }\n};\nexport const formatValue = (value, unit, options = {}) => {\n    const lookup = unitLookupKey(unit);\n    const fValue = value || 0;\n    switch (lookup) {\n        case 'usd':\n            return formatCurrency(fValue, lookup, options);\n        case 'gb':\n        case 'gb-hours':\n        case 'gb-mo':\n        case 'tag-mo':\n        case 'vm-hours':\n            return formatUsageGb(fValue, lookup, options);\n        case 'core-hours':\n        case 'hrs':\n            return formatUsageHrs(fValue, lookup, options);\n        default:\n            return unknownTypeFormatter(fValue, lookup, options);\n    }\n};\nconst unknownTypeFormatter = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatCurrency = (value, unit, { fractionDigits = 2 } = {}) => {\n    let fValue = value;\n    if (!value) {\n        fValue = 0;\n    }\n    return fValue.toLocaleString('en', {\n        style: 'currency',\n        currency: unit || 'USD',\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatUsageGb = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatUsageHrs = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\n","import { sort } from 'utils/sort';\nexport function getComputedForecastItems({ forecast, sortDirection = 0 /* asc */, sortKey = 'date', }) {\n    return sort(getUnsortedComputedForecastItems({\n        forecast,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nfunction getCostData(val, key, item) {\n    return {\n        confidence_max: {\n            value: item\n                ? item[key].confidence_max.value\n                : 0 + val[key] && val[key].confidence_max\n                    ? val[key].confidence_max.value\n                    : 0,\n            units: val[key] && val[key].confidence_max ? val[key].confidence_max.units : 'USD',\n        },\n        confidence_min: {\n            value: item\n                ? item[key].confidence_min.value\n                : 0 + val[key] && val[key].confidence_min\n                    ? val[key].confidence_min.value\n                    : 0,\n            units: val[key] && val[key].confidence_min ? val[key].confidence_min.units : 'USD',\n        },\n        pvalues: {\n            value: val[key] && val[key].pvalues ? Number(val[key].pvalues.value) : 0,\n            units: val[key] && val[key].pvalues ? val[key].pvalues.units : null,\n        },\n        rsquared: {\n            value: val[key] && val[key].rsquared ? Number(val[key].rsquared.value) : 0,\n            units: val[key] && val[key].rsquared ? val[key].rsquared.units : null,\n        },\n        total: {\n            value: item ? item[key].total.value : 0 + val[key] && val[key].total ? val[key].total.value : 0,\n            units: val[key] && val[key].total ? val[key].total.units : 'USD',\n        },\n    };\n}\nexport function getUnsortedComputedForecastItems({ forecast, }) {\n    if (!forecast) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint && dataPoint.values) {\n            dataPoint.values.forEach((val) => {\n                const date = val.date;\n                const item = itemMap.get(date);\n                if (item) {\n                    // This code block is typically entered with filter[resolution]=monthly\n                    itemMap.set(date, Object.assign(Object.assign({}, item), { date, cost: getCostData(val, 'cost', item), infrastructure: getCostData(val, 'infrastructure', item), supplementary: getCostData(val, 'supplementary', item) }));\n                }\n                else {\n                    // This code block is typically entered with filter[resolution]=daily\n                    itemMap.set(date, {\n                        date,\n                        cost: getCostData(val, 'cost'),\n                        infrastructure: getCostData(val, 'infrastructure'),\n                        supplementary: getCostData(val, 'supplementary'),\n                    });\n                }\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (forecast && forecast.data) {\n        forecast.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\n","import endOfMonth from 'date-fns/end_of_month';\nimport format from 'date-fns/format';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getYear from 'date-fns/get_year';\nimport startOfMonth from 'date-fns/start_of_month';\nimport i18next from 'i18next';\nimport { getComputedForecastItems } from 'utils/computedForecast/getComputedForecastItems';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { unitLookupKey } from 'utils/formatValue';\nexport function transformForecast(forecast, type = 1 /* daily */, forecastItem = 'cost', forecastItemValue = 'total') {\n    if (!forecast) {\n        return [];\n    }\n    const items = {\n        forecast,\n        sortKey: 'date',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedForecastItems(items);\n    let chartDatums;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        chartDatums = computedItems.map(i => createForecastDatum(i[forecastItem][forecastItemValue].value, i));\n    }\n    else {\n        chartDatums = computedItems.reduce((acc, d) => {\n            const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n            return [...acc, createForecastDatum(prevValue + d[forecastItem][forecastItemValue].value, d)];\n        }, []);\n    }\n    return padChartDatums(chartDatums);\n}\nexport function transformForecastCone(forecast, type = 1 /* daily */, forecastItem = 'cost', forecastItemValue = 'total') {\n    if (!forecast) {\n        return [];\n    }\n    const items = {\n        forecast,\n        sortKey: 'date',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedForecastItems(items);\n    let chartDatums;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        chartDatums = computedItems.map(i => createForecastConeDatum(i[forecastItem].confidence_max.value, i[forecastItem].confidence_min.value, i));\n    }\n    else {\n        chartDatums = computedItems.reduce((acc, d) => {\n            const prevMaxValue = acc.length ? acc[acc.length - 1].y : d[forecastItem][forecastItemValue].value;\n            const prevMinValue = acc.length ? acc[acc.length - 1].y0 : d[forecastItem][forecastItemValue].value;\n            return [\n                ...acc,\n                createForecastConeDatum(prevMaxValue + d[forecastItem].confidence_max.value, prevMinValue + d[forecastItem].confidence_min.value, d),\n            ];\n        }, []);\n    }\n    return padChartDatums(chartDatums);\n}\nexport function transformReport(report, type = 1 /* daily */, idKey = 'date', reportItem = 'cost', reportItemValue = 'total' // useful for infrastructure.usage values\n) {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        idKey,\n        report,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedReportItems(items);\n    let chartDatums;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        chartDatums = computedItems.map(i => {\n            const val = i[reportItem][reportItemValue] ? i[reportItem][reportItemValue].value : i[reportItem].value;\n            return createReportDatum(val, i, idKey, reportItem, reportItemValue);\n        });\n    }\n    else {\n        chartDatums = computedItems.reduce((acc, d) => {\n            const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n            const val = d[reportItem][reportItemValue] ? d[reportItem][reportItemValue].value : d[reportItem].value;\n            return [...acc, createReportDatum(prevValue + val, d, idKey, reportItem, reportItemValue)];\n        }, []);\n    }\n    return idKey === 'date' ? padChartDatums(chartDatums) : chartDatums;\n}\nexport function createForecastDatum(value, computedItem, forecastItem = 'cost', forecastItemValue = 'total') {\n    const xVal = getDate(computedItem.date);\n    const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n    return {\n        x: xVal,\n        y: value === null ? null : yVal,\n        key: computedItem.date,\n        units: computedItem[forecastItem] && computedItem[forecastItem][forecastItemValue]\n            ? computedItem[forecastItem][forecastItemValue].units\n            : undefined,\n    };\n}\nexport function createForecastConeDatum(maxValue, minValue, computedItem, forecastItem = 'cost', forecastItemValue = 'total') {\n    const xVal = getDate(computedItem.date);\n    const yVal = isFloat(maxValue) ? parseFloat(maxValue.toFixed(2)) : isInt(maxValue) ? maxValue : 0;\n    const y0Val = isFloat(minValue) ? parseFloat(minValue.toFixed(2)) : isInt(minValue) ? minValue : 0;\n    return {\n        x: xVal,\n        y: maxValue === null ? null : yVal,\n        y0: minValue === null ? null : y0Val,\n        key: computedItem.date,\n        units: computedItem[forecastItem] && computedItem[forecastItem][forecastItemValue]\n            ? computedItem[forecastItem][forecastItemValue].units\n            : undefined,\n    };\n}\nexport function createReportDatum(value, computedItem, idKey = 'date', reportItem = 'cost', reportItemValue = 'total' // useful for infrastructure.usage values\n) {\n    const xVal = idKey === 'date' ? getDate(computedItem.id) : computedItem.label;\n    const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n    return {\n        x: xVal,\n        y: value === null ? null : yVal,\n        key: computedItem.id,\n        units: computedItem[reportItem]\n            ? computedItem[reportItem][reportItemValue]\n                ? computedItem[reportItem][reportItemValue].units // cost, infrastructure, supplementary\n                : computedItem[reportItem].units // capacity, limit, request, usage\n            : undefined,\n    };\n}\n// Fill in missing data with previous value to represent cumulative daily cost\nexport function fillChartDatums(datums) {\n    const result = [];\n    if (!datums || datums.length === 0) {\n        return result;\n    }\n    const firstDate = new Date(datums[0].key + 'T00:00:00');\n    const lastDate = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    const padDate = startOfMonth(firstDate);\n    let prevChartDatum;\n    for (let i = padDate.getDate(); i <= endOfMonth(lastDate).getDate(); i++) {\n        padDate.setDate(i);\n        const id = formatDate(padDate, 'YYYY-MM-DD');\n        const chartDatum = datums.find(val => val.key === id);\n        if (chartDatum) {\n            result.push(chartDatum);\n        }\n        else if (prevChartDatum) {\n            result.push(Object.assign(Object.assign({}, prevChartDatum), { key: id, x: getDate(id) }));\n        }\n        if (chartDatum) {\n            prevChartDatum = chartDatum;\n        }\n    }\n    return result;\n}\n// This pads chart datums with null datum objects, representing missing data at the beginning and end of the\n// data series. The remaining data is left as is to allow for extrapolation. This allows us to display a \"no data\"\n// message in the tooltip, which helps distinguish between zero values and when there is no data available.\nexport function padChartDatums(datums) {\n    const result = [];\n    if (!datums || datums.length === 0) {\n        return result;\n    }\n    const firstDate = new Date(datums[0].key + 'T00:00:00');\n    const lastDate = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    // Pad start for missing data\n    let padDate = startOfMonth(firstDate);\n    for (let i = padDate.getDate(); i < firstDate.getDate(); i++) {\n        padDate.setDate(i);\n        const id = formatDate(padDate, 'YYYY-MM-DD');\n        result.push(createReportDatum(null, { id }, 'date', null));\n    }\n    // Fill middle with existing data\n    result.push(...datums);\n    // Pad end for missing data\n    padDate = new Date(lastDate);\n    for (let i = padDate.getDate() + 1; i <= endOfMonth(lastDate).getDate(); i++) {\n        padDate.setDate(i);\n        const id = formatDate(padDate, 'YYYY-MM-DD');\n        result.push(createReportDatum(null, { id }, 'date', null));\n    }\n    return fillChartDatums(result);\n}\nexport function getDatumDateRange(datums, offset = 0) {\n    if (!(datums && datums.length)) {\n        const today = new Date();\n        // If datums is empty, obtain the month based on offset (e.g., to show previous month in chart legends)\n        if (offset) {\n            today.setMonth(today.getMonth() - offset);\n        }\n        const firstOfMonth = startOfMonth(today);\n        return [firstOfMonth, today];\n    }\n    const start = new Date(datums[0].key + 'T00:00:00');\n    const end = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    return [start, end];\n}\nexport function getDateRange(datums, firstOfMonth = true, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDatumDateRange(datums, offset);\n    // Show the date range we are trying to cover (i.e., days 1-30/31)\n    if (firstOfMonth && start.setDate) {\n        start.setDate(1);\n    }\n    if (lastOfMonth && start.setDate) {\n        const lastDate = endOfMonth(start).getDate();\n        end.setDate(lastDate);\n    }\n    return [start, end];\n}\nexport function getDateRangeString(datums, firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(`chart.date_range`, {\n        count: getDate(end),\n        endDate: formatDate(end, 'DD'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'DD'),\n        year: getYear(end),\n    });\n}\nexport function getMonthRangeString(datums, key = 'chart.month_legend_label', offset = 0) {\n    const [start, end] = getDateRange(datums, true, false, offset);\n    return [\n        i18next.t(key, {\n            month: Number(formatDate(start, 'M')) - 1,\n        }),\n        i18next.t(key, {\n            month: Number(formatDate(end, 'M')) - 1,\n        }),\n    ];\n}\nexport function getMaxValue(datums) {\n    let max = 0;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            if (datum.y > max) {\n                max = datum.y;\n            }\n        });\n    }\n    return max;\n}\nexport function getTooltipContent(formatValue) {\n    return function labelFormatter(value, unit = null, options = {}) {\n        const lookup = unitLookupKey(unit);\n        switch (lookup) {\n            case 'core-hours':\n            case 'hrs':\n            case 'gb':\n            case 'gb-hours':\n            case 'gb-mo':\n            case 'vm-hours':\n                return i18next.t(`unit_tooltips.${lookup}`, {\n                    value: `${formatValue(value, unit, options)}`,\n                });\n            default:\n                return `${formatValue(value, unit, options)}`;\n        }\n    };\n}\nexport function getTooltipLabel(datum, formatValue, formatOptions, idKey = 'date', units) {\n    if (!datum.key) {\n        return '';\n    }\n    if (idKey === 'date') {\n        const date = format(datum.key, 'DD MMM YYYY');\n        return `${date} ${formatValue(datum.y, units ? units : datum.units, formatOptions)}`;\n    }\n    return datum.key.toString();\n}\nexport function getCostRangeString(datums, key = 'chart.cost_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(key, {\n        count: getDate(end),\n        endDate: formatDate(end, 'D'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'D'),\n        year: getYear(end),\n    });\n}\nexport function getUsageRangeString(datums, key = 'chart.usage_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    return getCostRangeString(datums, key, firstOfMonth, lastOfMonth, offset);\n}\nfunction isInt(n) {\n    return Number(n) === n && n % 1 === 0;\n}\nfunction isFloat(n) {\n    return Number(n) === n && n % 1 !== 0;\n}\n","// Layout\nconst LAYOUT_PROPS = {\n    padding: 8,\n};\n// Victory theme properties only\nexport default {\n    area: Object.assign({}, LAYOUT_PROPS),\n    axis: Object.assign({}, LAYOUT_PROPS),\n    bar: Object.assign({}, LAYOUT_PROPS),\n    boxplot: Object.assign({}, LAYOUT_PROPS),\n    candlestick: Object.assign({}, LAYOUT_PROPS),\n    chart: Object.assign({}, LAYOUT_PROPS),\n    errorbar: Object.assign({}, LAYOUT_PROPS),\n    group: Object.assign({}, LAYOUT_PROPS),\n    legend: {},\n    line: Object.assign({}, LAYOUT_PROPS),\n    pie: Object.assign({}, LAYOUT_PROPS),\n    scatter: Object.assign({}, LAYOUT_PROPS),\n    stack: Object.assign({}, LAYOUT_PROPS),\n    tooltip: {},\n    voronoi: Object.assign({}, LAYOUT_PROPS),\n};\n","import getTheme from './theme-utils';\nconst ChartTheme = getTheme();\nexport default ChartTheme;\n","import { ChartThemeColor, ChartThemeVariant, getCustomTheme } from '@patternfly/react-charts';\nimport { default as ChartTheme } from './theme-koku';\n// Applies theme color and variant to base theme\nconst getTheme = () => getCustomTheme(ChartThemeColor.default, ChartThemeVariant.default, ChartTheme);\nexport default getTheme;\n","import { sort } from 'utils/sort';\nimport { getItemLabel } from './getItemLabel';\nexport function getComputedReportItems({ idKey, report, sortDirection = 0 /* asc */, sortKey = 'date', }) {\n    return sort(getUnsortedComputedReportItems({\n        idKey,\n        report,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nfunction getCostData(val, key, item) {\n    return {\n        markup: {\n            value: item ? item[key].markup.value : 0 + val[key] && val[key].markup ? val[key].markup.value : 0,\n            units: val[key] && val[key].markup ? val[key].markup.units : 'USD',\n        },\n        raw: {\n            value: item ? item[key].raw.value : 0 + val[key] && val[key].raw ? val[key].raw.value : 0,\n            units: val[key] && val[key].raw ? val[key].raw.units : 'USD',\n        },\n        total: {\n            value: item ? item[key].total.value : 0 + val[key] && val[key].total ? Number(val[key].total.value) : 0,\n            units: val[key] && val[key].total ? val[key].total.units : null,\n        },\n        usage: {\n            value: item ? item[key].usage.value : 0 + val[key] && val[key].usage ? Number(val[key].usage.value) : 0,\n            units: val[key] && val[key].usage ? val[key].usage.units : null,\n        },\n    };\n}\nfunction getUsageData(val, item) {\n    return {\n        capacity: {\n            value: item ? item.capacity.value : 0 + val.capacity ? val.capacity.value : 0,\n            units: val.capacity ? val.capacity.units : 'Core-Hours',\n        },\n        limit: {\n            value: item ? item.limit.value : 0 + val.limit ? val.limit.value : 0,\n            units: val.limit ? val.limit.units : 'Core-Hours',\n        },\n        request: {\n            value: item ? item.request.value : 0 + val.request ? val.request.value : 0,\n            units: val.request ? val.request.units : 'Core-Hours',\n        },\n        usage: {\n            value: item ? item.usage.value : 0 + val.usage ? val.usage.value : 0,\n            units: val.usage ? val.usage.units : 'Core-Hours',\n        },\n    };\n}\nexport function getUnsortedComputedReportItems({ report, idKey, }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint && dataPoint.values) {\n            const type = dataPoint.type;\n            dataPoint.values.forEach((val) => {\n                // Ensure unique map IDs -- https://github.com/project-koku/koku-ui/issues/706\n                const idSuffix = idKey !== 'date' && idKey !== 'cluster' && val.cluster ? `-${val.cluster}` : '';\n                // org_unit_id workaround for storage and instance-type APIs\n                let id = idKey === 'org_entities' ? val.org_unit_id : val[idKey];\n                if (id === undefined) {\n                    id = val.id || val.date;\n                }\n                const mapId = `${id}${idSuffix}`;\n                // 'clusters' will contain either the cluster alias or default cluster ID\n                const cluster_alias = val.clusters && val.clusters.length > 0 ? val.clusters[0] : undefined;\n                const cluster = cluster_alias || val.cluster;\n                const clusters = val.clusters ? val.clusters : [];\n                const date = val.date;\n                const delta_percent = val.delta_percent ? val.delta_percent : 0;\n                const delta_value = val.delta_value ? val.delta_value : 0;\n                const source_uuid = val.source_uuid ? val.source_uuid : [];\n                let label;\n                const itemLabelKey = getItemLabel({ report, idKey, value: val });\n                if (itemLabelKey === 'org_entities' && val.alias) {\n                    label = val.alias;\n                }\n                else if (itemLabelKey === 'account' && val.account_alias) {\n                    label = val.account_alias;\n                }\n                else if (itemLabelKey === 'cluster' && cluster_alias) {\n                    label = cluster_alias;\n                }\n                else if (val[itemLabelKey] instanceof Object) {\n                    label = val[itemLabelKey].value;\n                }\n                else {\n                    label = val[itemLabelKey];\n                }\n                if (label === undefined) {\n                    label = val.alias ? val.alias : val.id;\n                }\n                const item = itemMap.get(mapId);\n                if (item) {\n                    // This code block is typically entered with filter[resolution]=monthly\n                    itemMap.set(mapId, Object.assign(Object.assign(Object.assign({}, item), getUsageData(val, item)), { // capacity, limit, request, & usage\n                        cluster,\n                        clusters,\n                        date,\n                        delta_percent,\n                        delta_value, cost: getCostData(val, 'cost', item), id, infrastructure: getCostData(val, 'infrastructure', item), label,\n                        source_uuid, supplementary: getCostData(val, 'supplementary', item), type }));\n                }\n                else {\n                    // This code block is typically entered with filter[resolution]=daily\n                    itemMap.set(mapId, Object.assign(Object.assign({}, getUsageData(val)), { // capacity, limit, request, & usage\n                        cluster,\n                        clusters, cost: getCostData(val, 'cost'), date,\n                        delta_percent,\n                        delta_value,\n                        id, infrastructure: getCostData(val, 'infrastructure'), label,\n                        source_uuid, supplementary: getCostData(val, 'supplementary'), type }));\n                }\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\n","import { tagPrefix } from 'api/queries/query';\nexport function getItemLabel({ idKey, report, value }) {\n    let itemLabelKey = String(idKey);\n    if (report.meta && report.meta.group_by) {\n        const group_by = report.meta.group_by;\n        for (const key of Object.keys(group_by)) {\n            if (key.indexOf(tagPrefix)) {\n                const tagPrefixKey = tagPrefix + idKey;\n                if (value.hasOwnProperty(tagPrefixKey)) {\n                    itemLabelKey = tagPrefixKey;\n                }\n            }\n        }\n    }\n    return itemLabelKey;\n}\n","import { EmptyState, EmptyStateBody, EmptyStateVariant, Spinner, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst LoadingStateBase = ({ t }) => {\n    const title = t('loading_state.sources_title');\n    const subTitle = t('loading_state.sources_desc');\n    return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n        React.createElement(Spinner, { size: \"lg\" }),\n        React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, title),\n        React.createElement(EmptyStateBody, null, subTitle)));\n};\nconst LoadingState = withTranslation()(LoadingStateBase);\nexport { LoadingState };\n","import { parse, stringify } from 'qs';\nexport function getProvidersQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseProvidersQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","function getValueForItem(item, options) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    const sortKey = options.key;\n    return item[sortKey];\n}\nexport function sort(array, options) {\n    const { direction = 0 /* asc */ } = options || {};\n    return [...array].sort((a, b) => {\n        const aVal = direction === 0 /* asc */ ? getValueForItem(a, options) : getValueForItem(b, options);\n        const bVal = direction === 0 /* asc */ ? getValueForItem(b, options) : getValueForItem(a, options);\n        if (aVal > bVal) {\n            return -1;\n        }\n        if (aVal < bVal) {\n            return 1;\n        }\n        return 0;\n    });\n}\n","import './emptyValueState.scss';\nimport { MinusIcon } from '@patternfly/react-icons/dist/js/icons/minus-icon';\nimport React from 'react';\nexport const EmptyValueState = () => {\n    return (React.createElement(\"span\", { className: \"emptyValueContainer\" },\n        React.createElement(MinusIcon, null)));\n};\n","import './reportSummary.scss';\nimport { Card, CardBody, CardFooter, CardTitle, Title } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst ReportSummaryBase = ({ children, detailsLink, title, subTitle, status }) => (React.createElement(Card, { className: \"reportSummary\" },\n    React.createElement(CardTitle, null,\n        React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: \"subtitle\" }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { size: \"xs\" }),\n        React.createElement(Skeleton, { className: \"chartSkeleton\", size: \"md\" }),\n        React.createElement(Skeleton, { size: \"sm\" }),\n        React.createElement(Skeleton, { className: \"legendSkeleton\", size: \"xs\" }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst ReportSummary = withTranslation()(ReportSummaryBase);\nexport { ReportSummary };\n","import './reportSummaryAlt.scss';\nimport { Card, CardBody, CardFooter, CardTitle, Grid, GridItem, Title } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst OcpCloudReportSummaryAltBase = ({ children, detailsLink, status, subTitle, tabs, title, }) => (React.createElement(Card, { className: \"reportSummary\" },\n    React.createElement(Grid, { hasGutter: true },\n        React.createElement(GridItem, { xl: 8 },\n            React.createElement(\"div\", { className: \"cost\" },\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, title),\n                    Boolean(subTitle) && React.createElement(\"p\", { className: \"subtitle\" }, subTitle)),\n                React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { size: \"xs\" }),\n                    React.createElement(Skeleton, { className: \"chartSkeleton\", size: \"md\" }),\n                    React.createElement(Skeleton, { size: \"sm\" }),\n                    React.createElement(Skeleton, { className: \"legendSkeleton\", size: \"xs\" }))) : (children)))),\n        React.createElement(GridItem, { xl: 4 },\n            React.createElement(\"div\", { className: \"tops\" }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink))))))));\nconst ReportSummaryAlt = withTranslation()(OcpCloudReportSummaryAltBase);\nexport { ReportSummaryAlt };\n","import './reportSummaryDetails.scss';\nimport { Tooltip } from '@patternfly/react-core';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nconst ReportSummaryDetailsBase = ({ chartType, computedReportItem = 'cost', computedReportItemValue = 'total', costLabel, formatValue, formatOptions, report, requestFormatOptions, requestLabel, reportType, showTooltip = false, showUnits = false, showUsageFirst = false, t, units, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let supplementaryCost = React.createElement(EmptyValueState, null);\n    let infrastructureCost = React.createElement(EmptyValueState, null);\n    let request = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    const hasTotal = report && report.meta && report.meta.total;\n    const hasCost = hasTotal && report.meta.total.cost && report.meta.total.cost.total;\n    const hasCount = hasTotal && report.meta.total.count;\n    const hasSupplementaryCost = hasTotal &&\n        report.meta.total.supplementary &&\n        report.meta.total.supplementary.total &&\n        report.meta.total.supplementary.total.value;\n    const hasInfrastructureCost = hasTotal &&\n        report.meta.total.infrastructure &&\n        report.meta.total.infrastructure[computedReportItemValue] &&\n        report.meta.total.infrastructure[computedReportItemValue].value;\n    const hasRequest = hasTotal && report.meta.total.request;\n    const hasUsage = hasTotal && report.meta.total.usage;\n    if (hasTotal) {\n        cost = formatValue(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD', formatOptions);\n        supplementaryCost = formatValue(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost ? report.meta.total.supplementary.total.units : 'USD', formatOptions);\n        infrastructureCost = formatValue(hasInfrastructureCost ? report.meta.total.infrastructure[computedReportItemValue].value : 0, hasInfrastructureCost ? report.meta.total.infrastructure[computedReportItemValue].units : 'USD', formatOptions);\n        request = formatValue(hasRequest ? report.meta.total.request.value : 0, hasRequest ? report.meta.total.request.units : '', requestFormatOptions ? usageFormatOptions : formatOptions);\n        if (hasUsage && report.meta.total.usage.value >= 0) {\n            usage = formatValue(hasUsage ? report.meta.total.usage.value : 0, hasUsage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n        else {\n            // Workaround for https://github.com/project-koku/koku-ui/issues/1058\n            usage = formatValue(hasUsage ? report.meta.total.usage : 0, hasCount ? report.meta.total.count.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n    }\n    const getCostLayout = (showAltHeroFont = false) => {\n        let value = cost;\n        if (computedReportItem === \"infrastructure\" /* infrastructure */) {\n            value = infrastructureCost;\n        }\n        else if (computedReportItem === \"supplementary\" /* supplementary */) {\n            value = supplementaryCost;\n        }\n        const altHeroFont = showAltHeroFont ? 'Alt' : '';\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            showTooltip ? (React.createElement(Tooltip, { content: t('dashboard.total_cost_tooltip', {\n                    infrastructureCost,\n                    supplementaryCost,\n                }), enableFlip: true },\n                React.createElement(\"div\", { className: `value${altHeroFont}` }, value))) : (React.createElement(\"div\", { className: `value${altHeroFont}` }, value)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, costLabel))));\n    };\n    const getRequestLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasRequest ? report.meta.total.request.units : '';\n        const _units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            React.createElement(\"span\", { className: \"value\" }, request),\n            Boolean(showUnits && (units || (hasRequest && report.meta.total.request.value >= 0))) && (React.createElement(\"span\", { className: \"units\" }, unitsLabel)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, requestLabel))));\n    };\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasUsage ? report.meta.total.usage.units : '';\n        // added as a work-around for azure #1079\n        const _units = unitLookupKey(units ? units : usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            React.createElement(\"span\", { className: \"value\" }, usage),\n            Boolean(showUnits && (units || (hasUsage && report.meta.total.usage.value >= 0))) && (React.createElement(\"span\", { className: \"units\" }, unitsLabel)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (chartType === \"cost\" /* cost */ || chartType === \"supplementary\" /* supplementary */) {\n        return React.createElement(React.Fragment, null, getCostLayout(reportType === \"cost\" /* cost */));\n    }\n    else if (chartType === \"trend\" /* trend */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getCostLayout(reportType === \"cost\" /* cost */)));\n        }\n        return (React.createElement(React.Fragment, null,\n            getCostLayout(reportType === \"cost\" /* cost */),\n            getUsageLayout()));\n    }\n    else if (chartType === \"usage\" /* usage */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getRequestLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getRequestLayout(),\n            getUsageLayout()));\n    }\n    else {\n        return null;\n    }\n};\nconst ReportSummaryDetails = withTranslation()(ReportSummaryDetailsBase);\nexport { ReportSummaryDetails };\n","import './reportSummaryItem.scss';\nimport { Progress, ProgressSize } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nconst ReportSummaryItemBase = ({ label, formatOptions, formatValue, t, totalValue, units, value, }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: \"reportSummaryItem\" },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst ReportSummaryItem = withTranslation()(ReportSummaryItemBase);\nexport { ReportSummaryItem };\n","import './reportSummaryItems.scss';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { getComputedReportItems, } from 'utils/computedReport/getComputedReportItems';\nclass ReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { idKey, report } = this.props;\n        const computedItems = getComputedReportItems({\n            report,\n            idKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [...computedItems.slice(0, otherIndex), ...computedItems.slice(otherIndex + 1), computedItems[otherIndex]];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: \"md\" }),\n                React.createElement(Skeleton, { size: \"md\", className: \"skeleton\" }),\n                React.createElement(Skeleton, { size: \"md\", className: \"skeleton\" }),\n                React.createElement(Skeleton, { size: \"md\", className: \"skeleton\" })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst ReportSummaryItems = withTranslation()(ReportSummaryItemsBase);\nexport { ReportSummaryItems };\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentCostData: {\n        fill: 'none',\n    },\n    currentInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    forecastColorScale: [chart_color_green_200.value],\n    forecastConeColorScale: [chart_color_green_100.value],\n    forecastData: {\n        fill: 'none',\n    },\n    forecastConeData: {\n        fill: chart_color_green_100.value,\n        strokeWidth: 0,\n    },\n    previousCostData: {\n        fill: 'none',\n    },\n    previousInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange, getMaxValue, getTooltipContent } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './costChart.styles';\nclass CostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentInfrastructureCostData, currentCostData, forecastData, forecastConeData, previousInfrastructureCostData, previousCostData, showForecast, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            const costInfrastructureTooltipKey = 'chart.cost_infrastructure_legend_tooltip';\n            const costTooltipKey = 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousCostData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentCostData, costTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentCostData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'previousInfrastructureCost',\n                    data: previousInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(previousInfrastructureCostData, costInfrastructureTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousInfrastructureCostData), { stroke: chartStyles.previousColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'currentInfrastructureCost',\n                    data: currentInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(currentInfrastructureCostData, costInfrastructureTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentInfrastructureCostData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: forecastData,\n                    legendItem: {\n                        name: getCostRangeString(forecastData, 'chart.cost_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, 'chart.cost_forecast_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastData), { stroke: chartStyles.forecastColorScale[0] }),\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: forecastConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastConeColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastConeData), { stroke: chartStyles.forecastConeColorScale[0] }),\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.getTooltipLabel, mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            return React.createElement(ChartLegend, { data: this.getLegendData(), height: 25, gutter: 20, name: \"legend\", responsive: false });\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            const dy = datum.y !== undefined && datum.y !== null ? formatter(datum.y, datum.units, formatDatumOptions) : undefined;\n            const dy0 = datum.y0 !== undefined && datum.y0 !== null ? formatter(datum.y0, datum.units, formatDatumOptions) : undefined;\n            if (dy !== undefined && dy0 !== undefined) {\n                return i18next.t('chart.cost_forecast_cone_tooltip', { value0: dy0, value1: dy });\n            }\n            return dy !== undefined ? dy : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            const unavailable = []; // API data may not be available (e.g., on 1st of month)\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map(serie => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    if (width > 650 && width < 1130) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width > 450 && width < 650) {\n                        adjustedContainerHeight += 50;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 75;\n                    }\n                }\n                else {\n                    if (width > 450 && width < 725) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 50;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = (tooltip = false) => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    const data = Object.assign(Object.assign(Object.assign({ childName: s.childName }, s.legendItem), (tooltip && { name: s.legendItem.tooltip })), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                    return data;\n                });\n                return result;\n            }\n            return undefined;\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentInfrastructureCostData !== this.props.currentInfrastructureCostData ||\n            prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.previousInfrastructureCostData !== this.props.previousInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { series } = this.state;\n        const domain = { x: [1, 31] };\n        let maxValue = 0;\n        if (series) {\n            series.forEach((s, index) => {\n                if (!this.isSeriesHidden(index) && s.data && s.data.length !== 0) {\n                    const max = getMaxValue(s.data);\n                    maxValue = Math.max(maxValue, max);\n                }\n            });\n        }\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, currentCostData, forecastData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const currentInfrastructureDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const currentCostDate = currentCostData ? getDate(getDateRange(currentCostData, true, true)[1]) : 0;\n        const forecastCostDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        const previousInfrastructureDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousCostData ? getDate(getDateRange(previousCostData, true, true)[1]) : 0;\n        return currentInfrastructureDate > 0 ||\n            currentCostDate > 0 ||\n            previousInfrastructureDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentInfrastructureDate, currentCostDate, forecastCostDate, previousInfrastructureDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !this.isDataAvailable(),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: this.getLegendData(true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { CostChart };\n","import './reportSummaryCost.scss';\nimport { CostChart } from 'components/charts/costChart';\nimport React from 'react';\nconst ReportSummaryCost = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(CostChart, Object.assign({}, props))));\nexport { ReportSummaryCost };\n","import chart_color_black_200 from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport chart_color_green_100 from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport chart_color_green_200 from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport chart_color_green_300 from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_green_500 from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentMonthData: {\n        fill: 'none',\n    },\n    forecastColorScale: [chart_color_green_200.value],\n    forecastConeColorScale: [chart_color_green_100.value],\n    forecastData: {\n        fill: 'none',\n    },\n    forecastConeData: {\n        fill: chart_color_green_100.value,\n        strokeWidth: 0,\n    },\n    itemsPerRow: 4,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    previousMonthData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange, getMaxValue, getTooltipContent } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './trendChart.styles';\nclass TrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, forecastData, forecastConeData, previousData, showForecast, showSupplementaryLabel = false, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? 'chart.usage_legend_label'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_label'\n                    : 'chart.cost_legend_label';\n            const tooltipKey = showUsageLegendLabel\n                ? 'chart.usage_legend_tooltip'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_tooltip'\n                    : 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousData,\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousData, tooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousMonthData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentData,\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentData, tooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentMonthData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: forecastData,\n                    legendItem: {\n                        name: getCostRangeString(forecastData, 'chart.cost_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, 'chart.cost_forecast_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastData), { stroke: chartStyles.forecastColorScale[0] }),\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: forecastConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastConeColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastConeData), { stroke: chartStyles.forecastConeColorScale[0] }),\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.getTooltipLabel, mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 50,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            return (React.createElement(ChartLegend, { data: this.getLegendData(), gutter: 20, height: 25, itemsPerRow: legendItemsPerRow, name: \"legend\", orientation: width > 150 ? 'horizontal' : 'vertical' }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            const dy = datum.y !== undefined && datum.y !== null ? formatter(datum.y, datum.units, formatDatumOptions) : undefined;\n            const dy0 = datum.y0 !== undefined && datum.y0 !== null ? formatter(datum.y0, datum.units, formatDatumOptions) : undefined;\n            if (dy !== undefined && dy0 !== undefined) {\n                return i18next.t('chart.cost_forecast_cone_tooltip', { value0: dy0, value1: dy });\n            }\n            return dy !== undefined ? dy : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            // Todo: Leave one legend item visible at all times?\n            // const { hiddenSeries, series } = this.state;\n            // const leaveVisible = hiddenSeries.size === series.length - 1;\n            // if (leaveVisible && !this.isSeriesHidden(props.index)) {\n            //   return;\n            // }\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            const unavailable = []; // API data may not be available (e.g., on 1st of month)\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map(serie => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    if (width < 700) {\n                        adjustedContainerHeight += 25;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = (tooltip = false) => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign(Object.assign({ childName: s.childName }, s.legendItem), (tooltip && { name: s.legendItem.tooltip })), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { series } = this.state;\n        const domain = { x: [1, 31] };\n        let maxValue = 0;\n        if (series) {\n            series.forEach((s, index) => {\n                if (!this.isSeriesHidden(index) && s.data && s.data.length !== 0) {\n                    const max = getMaxValue(s.data);\n                    maxValue = Math.max(maxValue, max);\n                }\n            });\n        }\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentData, forecastData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        const forecastDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0 ? Math.max(currentDate, forecastDate, previousDate) : 31;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !this.isDataAvailable(),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: this.getLegendData(true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { TrendChart };\n","import './reportSummaryTrend.scss';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nconst ReportSummaryTrend = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { ReportSummaryTrend };\n","import chart_color_black_200 from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport chart_color_green_100 from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport chart_color_green_200 from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport chart_color_green_300 from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_green_500 from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const chartStyles = {\n    chartContainer: {\n        marginTop: global_spacer_lg.value,\n    },\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_green_300.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_green_400.value,\n        },\n    },\n    itemsPerRow: 2,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        chart_color_black_200.value,\n        chart_color_green_400.value,\n        chart_color_black_200.value,\n        chart_color_green_300.value,\n    ],\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_black_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_black_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    // TBD: No grey scale, yet\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getDateRange, getMaxValue, getTooltipContent, getUsageRangeString } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './usageChart.styles';\nclass UsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n            const usageKey = 'chart.usage_legend_label';\n            const usageTooltipKey = 'chart.usage_legend_tooltip';\n            const requestKey = 'chart.requests_legend_label';\n            const requestTooltipKey = 'chart.requests_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousUsage',\n                    data: previousUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(previousUsageData, usageKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(previousUsageData, usageTooltipKey, false, false, 1),\n                    },\n                    style: chartStyles.previousUsageData,\n                },\n                {\n                    childName: 'currentUsage',\n                    data: currentUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(currentUsageData, usageKey, true, false),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[1],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(currentUsageData, usageTooltipKey, false, false),\n                    },\n                    style: chartStyles.currentUsageData,\n                },\n                {\n                    childName: 'previousRequest',\n                    data: previousRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(previousRequestData, requestKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[2],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(previousRequestData, requestTooltipKey, false, false, 1),\n                    },\n                    style: chartStyles.previousRequestData,\n                },\n                {\n                    childName: 'currentRequest',\n                    data: currentRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(currentRequestData, requestKey, true, false),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[3],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(currentRequestData, requestTooltipKey, false, false),\n                    },\n                    style: chartStyles.currentRequestData,\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.getTooltipLabel, mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 300 ? chartStyles.itemsPerRow : 1;\n            return React.createElement(ChartLegend, { data: this.getLegendData(), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\" });\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            return datum.y !== undefined && datum.y !== null\n                ? formatter(datum.y, datum.units, formatDatumOptions)\n                : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            const unavailable = []; // API data may not be available (e.g., on 1st of month)\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (width < 480) {\n                    adjustedContainerHeight += 20;\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map(serie => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = (tooltip = false) => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign(Object.assign({ childName: s.childName }, s.legendItem), (tooltip && { name: s.legendItem.tooltip })), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { series } = this.state;\n        const domain = { x: [1, 31] };\n        let maxValue = 0;\n        if (series) {\n            series.forEach((s, index) => {\n                if (!this.isSeriesHidden(index) && s.data && s.data.length !== 0) {\n                    const max = getMaxValue(s.data);\n                    maxValue = Math.max(maxValue, max);\n                }\n            });\n        }\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n        const currentRequestDate = currentRequestData ? getDate(getDateRange(currentRequestData, true, true)[1]) : 0;\n        const currentUsageDate = currentUsageData ? getDate(getDateRange(currentUsageData, true, true)[1]) : 0;\n        const previousRequestDate = previousRequestData ? getDate(getDateRange(previousRequestData, true, true)[1]) : 0;\n        const previousUsageDate = previousUsageData ? getDate(getDateRange(previousUsageData, true, true)[1]) : 0;\n        return currentRequestDate > 0 || currentUsageDate > 0 || previousRequestDate > 0 || previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 75,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !this.isDataAvailable(),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: this.getLegendData(true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { UsageChart };\n","import './reportSummaryUsage.scss';\nimport { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nconst ReportSummaryUsage = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { ReportSummaryUsage };\n","export const getReleasePath = () => {\n    const pathName = window.location.pathname.split('/');\n    pathName.shift();\n    let release = '';\n    if (pathName[0] === 'beta') {\n        release = `/beta`;\n    }\n    return release;\n};\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nconst Loading = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(LoadingState, null))));\n};\nexport default withRouter(Loading);\n","import Loading from './loading';\nexport default Loading;\n","module.exports = __webpack_public_path__ + \"8a2acb5e9233030023f599e0f04ebd7f.svg\";","import './costIcon.scss';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst icon = require('./Cost-icon.svg');\nconst CostIcon = ({ className, t }) => {\n    return React.createElement(\"img\", { className: `cost-icon ${className}`, src: icon, alt: t('cost_management'), \"aria-hidden\": \"true\" });\n};\nexport default withTranslation()(CostIcon);\n","import CostIcon from './costIcon';\nexport default CostIcon;\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    iconSpacer: {\n        marginLeft: global_spacer_xs.value,\n    },\n    viewSources: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/js/icons/plus-circle-icon';\nimport CostIcon from 'components/icons/costIcon';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { withRouter } from 'react-router';\nimport { getReleasePath } from 'utils/pathname';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDocLink = (textKey, urlKey) => {\n            const { t } = this.props;\n            return (React.createElement(\"a\", { href: t(urlKey), rel: \"noreferrer\", target: \"_blank\" },\n                t(textKey),\n                React.createElement(\"span\", { style: styles.iconSpacer },\n                    React.createElement(ExternalLinkAltIcon, null))));\n        };\n        this.getRouteToSources = () => {\n            const release = getReleasePath();\n            return `${release}/settings/sources`;\n        };\n    }\n    render() {\n        const { providerType, t } = this.props;\n        let descKey = 'no_providers_state.overview_desc';\n        let titleKey = 'no_providers_state.overview_title';\n        let docUrlKey;\n        let icon;\n        let textKey;\n        switch (providerType) {\n            case \"aws\" /* aws */:\n                descKey = 'no_providers_state.aws_desc';\n                titleKey = 'no_providers_state.aws_title';\n                break;\n            case \"azure\" /* azure */:\n                descKey = 'no_providers_state.azure_desc';\n                titleKey = 'no_providers_state.azure_title';\n                break;\n            case \"gcp\" /* gcp */:\n                descKey = 'no_providers_state.gcp_desc';\n                titleKey = 'no_providers_state.gcp_title';\n                break;\n            case \"ocp\" /* ocp */:\n                descKey = 'no_providers_state.ocp_desc';\n                docUrlKey = 'docs.add_ocp_sources';\n                textKey = 'no_providers_state.ocp_add_sources';\n                titleKey = 'no_providers_state.ocp_title';\n                break;\n            default:\n                icon = CostIcon;\n        }\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: icon ? icon : PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, t(titleKey)),\n            React.createElement(EmptyStateBody, null, t(descKey)),\n            docUrlKey && textKey ? (React.createElement(\"div\", { style: styles.viewSources }, this.getDocLink(textKey, docUrlKey))) : (React.createElement(Button, { variant: \"primary\", component: \"a\", href: this.getRouteToSources() }, t('no_providers_state.get_started')))));\n    }\n}\nconst NoProvidersState = withRouter(withTranslation()(NoProvidersStateBase));\nexport { NoProvidersState };\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { NoProvidersState } from './noProvidersState';\nconst NoProviders = ({ providerType, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(NoProvidersState, { providerType: providerType }))));\n};\nexport default withRouter(NoProviders);\n","import NoProviders from './noProviders';\nexport default NoProviders;\n"],"sourceRoot":""}