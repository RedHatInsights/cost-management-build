{"version":3,"sources":["webpack:///./src/pages/dashboard/components/dashboardBase.tsx","webpack:///./src/pages/dashboard/components/chartComparison.tsx","webpack:///./src/pages/dashboard/components/dashboardWidget.styles.ts","webpack:///./src/pages/dashboard/components/dashboardWidgetBase.tsx","webpack:///./src/pages/dashboard/awsCloudDashboard/awsCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/awsCloudDashboard/awsCloudDashboard.tsx","webpack:///./src/pages/dashboard/awsDashboard/awsDashboardWidget.tsx","webpack:///./src/pages/dashboard/awsDashboard/awsDashboard.tsx","webpack:///./src/pages/dashboard/azureCloudDashboard/azureCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/azureCloudDashboard/azureCloudDashboard.tsx","webpack:///./src/pages/dashboard/azureDashboard/azureDashboardWidget.tsx","webpack:///./src/pages/dashboard/azureDashboard/azureDashboard.tsx","webpack:///./src/pages/dashboard/gcpDashboard/gcpDashboardWidget.tsx","webpack:///./src/pages/dashboard/gcpDashboard/gcpDashboard.tsx","webpack:///./src/pages/dashboard/ocpCloudDashboard/ocpCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpCloudDashboard/ocpCloudDashboard.tsx","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboardWidget.styles.ts","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboard.tsx","webpack:///./src/pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboard.tsx","webpack:///./src/pages/dashboard/ocpUsageDashboard/ocpUsageDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpUsageDashboard/ocpUsageDashboard.tsx","webpack:///./src/pages/overview/overview.styles.ts","webpack:///./src/pages/overview/overview.tsx","webpack:///./src/pages/overview/index.ts","webpack:///./src/utils/formatValue.ts","webpack:///./src/utils/computedForecast/getComputedForecastItems.ts","webpack:///./src/components/charts/common/chartDatumUtils.ts","webpack:///./src/components/charts/common/chartUtils.ts","webpack:///./src/components/charts/chartTheme/theme-koku.ts","webpack:///./src/components/charts/chartTheme/index.ts","webpack:///./src/components/charts/chartTheme/theme-utils.ts","webpack:///./src/utils/computedReport/getComputedReportItems.ts","webpack:///./src/utils/computedReport/getItemLabel.ts","webpack:///./src/api/queries/providersQuery.ts","webpack:///./src/components/state/loadingState/loadingState.tsx","webpack:///./src/pages/state/loading/loading.tsx","webpack:///./src/pages/state/loading/index.ts","webpack:///./src/utils/sort.ts","webpack:///./src/components/state/emptyValueState/emptyValueState.tsx","webpack:///./src/components/icons/costIcon/costIcon.tsx","webpack:///./src/components/icons/costIcon/index.ts","webpack:///./src/pages/state/noProviders/noProvidersState.styles.ts","webpack:///./src/pages/state/noProviders/noProvidersState.tsx","webpack:///./src/pages/state/noProviders/noProviders.tsx","webpack:///./src/pages/state/noProviders/index.ts","webpack:///./src/components/reports/reportSummary/reportSummary.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryAlt.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryDetails.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryItem.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryItems.tsx","webpack:///./src/components/charts/costChart/costChart.styles.ts","webpack:///./src/components/charts/costChart/costChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryCost.tsx","webpack:///./src/components/charts/dailyCostChart/dailyCostChart.styles.ts","webpack:///./src/components/charts/dailyCostChart/dailyCostChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryDailyCost.tsx","webpack:///./src/components/charts/dailyTrendChart/dailyTrendChart.styles.ts","webpack:///./src/components/charts/dailyTrendChart/dailyTrendChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryDailyTrend.tsx","webpack:///./src/components/charts/trendChart/trendChart.styles.ts","webpack:///./src/components/charts/trendChart/trendChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryTrend.tsx","webpack:///./src/components/charts/usageChart/usageChart.styles.ts","webpack:///./src/components/charts/usageChart/usageChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryUsage.tsx","webpack:///./src/utils/pathname.ts","webpack:///./src/components/icons/costIcon/Cost-icon.svg","webpack:///./src/pages/state/noData/noDataState.tsx","webpack:///./src/pages/state/noData/noData.tsx","webpack:///./src/api/queries/userAccessQuery.ts","webpack:///./src/pages/overview/perspective.styles.ts","webpack:///./src/pages/overview/perspective.tsx"],"names":["DashboardBase","DashboardWidget","selectWidgets","widgets","createElement","Grid","hasGutter","map","widgetId","details","showHorizontal","GridItem","sm","key","lg","xl","xl2","Component","super","arguments","this","defaultState","isChartComparisonOpen","state","Object","assign","getDropDownItems","options","t","props","option","DropdownItem","component","value","onClick","handleClick","label","getCurrentLabel","currentItem","onItemClicked","handleSelect","setState","handleToggle","dropdownItems","Dropdown","onSelect","toggle","DropdownToggle","onToggle","isOpen","ChartComparison","withTranslation","chartStyles","chartAltHeight","chartHeight","containerAltHeight","containerTrendHeight","containerUsageHeight","styles","comparison","marginBottom","tabs","marginTop","tabItems","activeTabKey","currentComparison","buildDetailsLink","tab","getIdKeyForTab","currentTab","viewAllPath","group_by","order_by","cost","getChart","containerHeight","height","adjustContainerHeight","chartType","trend","getDailyTrendChart","showSupplementaryLabel","getDailyCostChart","getTrendChart","getUsageChart","getChartComparison","units","getUnits","cumulativeTitle","titleKey","dailyTitleKey","handleComparisonClick","currentReport","previousReport","computedReportItem","computedReportItemValue","daily","type","currentInfrastructureData","previousInfrastructureData","currentCostData","previousCostData","forecastData","getForecastData","computedForecastItem","forecastInfrastructureData","computedForecastInfrastructureItem","ReportSummaryComponent","Fragment","style","currentInfrastructureCostData","forecastConeData","forecastInfrastructureConeData","formatDatumValue","formatValue","formatDatumOptions","formatOptions","previousInfrastructureCostData","showForecast","undefined","currentData","previousData","showUsageLegendLabel","report","forecast","newForecast","data","total","meta","reportedValues","filter","val","values","length","lastReported","date","lastReportedDate","Date","lastReportedMonth","getMonth","item","forecastDate","forecastMonth","push","unshift","confidence_max","confidence_min","infrastructure","supplementary","title","currentRequestData","previousRequestData","currentUsageData","previousUsageData","getDetails","reportType","costLabel","getDetailsLabel","costKey","requestLabel","requestKey","showTooltip","showUnits","showUsageFirst","usageFormatOptions","usageLabel","usageKey","getDetailsLink","Link","to","handleInsightsNavClick","getDetailsLinkTitle","groupBy","getHorizontalLayout","currentReportFetchStatus","detailsLink","status","subTitle","getSubTitle","getTabs","getTitle","today","month","endDate","startDate","count","getTab","index","tabsReport","tabsReportFetchStatus","Tab","eventKey","TabTitleText","getTabTitle","idKey","items","reportItem","getTabItem","availableTabs","topItems","activeTab","totalValue","hasTotal","usage","id","toString","Tabs","isFilled","activeKey","handleTabClick","getVerticalLayout","Boolean","appNavId","insights","chrome","appNavClick","secondaryNav","event","tabIndex","updateTab","fetchForecasts","fetchReports","mapStateToProps","widget","awsCloudDashboard","selectWidget","queries","selectWidgetQueries","selectReport","reportPathsType","current","selectReportFetchStatus","selectForecast","forecastPathsType","forecastType","previous","mapDispatchToProps","fetchWidgetForecasts","fetchWidgetReports","changeWidgetTab","AwsCloudDashboardWidget","selectCurrentWidgets","awsDashboard","AwsDashboardWidget","azureCloudDashboard","AzureCloudDashboardWidget","azureDashboard","AzureDashboardWidget","gcpDashboard","GcpDashboardWidget","ocpCloudDashboard","OcpCloudDashboardWidget","ocpDashboard","currentQuery","forecastQuery","previousQuery","tabsQuery","OcpDashboardWidget","ocpSupplementaryDashboard","OcpSupplementaryDashboardWidget","ocpUsageDashboard","OcpUsageDashboardWidget","infoIcon","fontSize","infoTitle","fontWeight","perspective","ocpOptions","infrastructureAllCloudOptions","infrastructureAwsOptions","infrastructureAwsCloudOptions","infrastructureAzureOptions","infrastructureAzureCloudOptions","infrastructureGcpOptions","infrastructureOcpOptions","getAvailableTabs","isAwsAvailable","isAzureAvailable","isGcpAvailable","isOcpAvailable","isOcpCloudAvailable","contentRef","createRef","getCurrentTab","getDefaultInfrastructurePerspective","getDefaultOcpPerspective","getPerspective","currentInfrastructurePerspective","currentOcpPerspective","handlePerspectiveClick","tabContentId","tabContentRef","getTabContent","TabContent","ref","hasCurrentMonthData","providers","result","provider","current_month_data","awsProviders","azureProviders","gcpProviders","ocpProviders","emptyTab","noData","showReload","userAccess","find","d","access","prevProps","awsProvidersFetchStatus","azureProvidersFetchStatus","gcpProvidersFetchStatus","ocpProvidersFetchStatus","userAccessFetchStatus","isLoading","noAwsProviders","noAzureProviders","noGcpProviders","noOcpProviders","noProviders","className","Title","headingLevel","size","Popover","enableFlip","bodyContent","Button","variant","plain","awsProvidersQueryString","selectProviders","selectProvidersFetchStatus","azureProvidersQueryString","gcpProvidersQueryString","ocpProvidersQueryString","userAccessQueryString","selectUserAccess","userAccessError","selectUserAccessError","selectUserAccessFetchStatus","unitLookupKey","unit","lookup","toLowerCase","fValue","formatCurrency","formatUsageGb","formatUsageHrs","unknownTypeFormatter","_unit","fractionDigits","toLocaleString","minimumFractionDigits","maximumFractionDigits","currency","getComputedForecastItems","sortDirection","sortKey","sort","itemMap","Map","visitDataPoint","dataPoint","forEach","get","set","getCostData","Array","from","getUnsortedComputedForecastItems","direction","pvalues","Number","rsquared","transformForecast","forecastItem","forecastItemValue","computedItems","chartDatums","i","createForecastDatum","reduce","acc","prevValue","y","padChartDatums","transformForecastCone","createForecastConeDatum","prevMaxValue","prevMinValue","y0","transformReport","reportItemValue","getComputedReportItems","createReportDatum","computedItem","xVal","yVal","isFloat","parseFloat","toFixed","isInt","x","maxValue","minValue","y0Val","datums","firstDate","lastDate","padDate","getDate","setDate","prevChartDatum","chartDatum","fillChartDatums","getDateRange","firstOfMonth","lastOfMonth","offset","start","end","setMonth","firstDay","lastDay","getDatumDateRange","getMaxValue","max","datum","getMaxMinValues","min","maxY","Math","minY","getTooltipContent","i18next","getCostRangeString","year","getUsageRangeString","n","getChartNames","series","serie","childName","getDomain","hiddenSeries","domain","s","isSeriesHidden","threshold","ceil","_min","floor","getLegendData","tooltip","legendItem","name","has","indexOf","getTooltipLabel","formatter","dy","dy0","value0","value1","initHiddenSeries","Set","delete","add","_index","isDataAvailable","unavailable","isDataHidden","keys","next","done","dataChildName","serieChildName","LAYOUT_PROPS","padding","area","axis","bar","boxplot","candlestick","chart","errorbar","group","legend","line","pie","scatter","stack","voronoi","ChartTheme","default","getUnsortedComputedReportItems","markup","raw","getUsageData","capacity","limit","request","idSuffix","cluster","org_unit_id","mapId","cluster_alias","clusters","delta_percent","delta_value","source_uuid","itemLabelKey","String","tagPrefixKey","hasOwnProperty","getItemLabel","alias","account_alias","dateMap","getProvidersQuery","query","encode","indices","LoadingState","large","withRouter","PageHeader","Main","getValueForItem","array","a","b","aVal","bVal","EmptyValueState","src","alt","iconSpacer","marginLeft","viewSources","getDocLink","textKey","urlKey","href","rel","target","getRouteToSources","providerType","docUrlKey","icon","descKey","EmptyState","EmptyStateIcon","EmptyStateBody","NoProvidersState","ReportSummary","children","Card","CardTitle","CardBody","Skeleton","CardFooter","ReportSummaryAlt","ReportSummaryDetails","requestFormatOptions","supplementaryCost","infrastructureCost","hasCost","hasCount","hasSupplementaryCost","hasInfrastructureCost","hasRequest","hasUsage","getCostLayout","showAltHeroFont","altHeroFont","Tooltip","content","getRequestLayout","usageUnits","_units","unitsLabel","getUsageLayout","ReportSummaryItemBase","percentVal","percentLabel","percent","Progress","defaultProps","v","ReportSummaryItem","nextProps","otherIndex","findIndex","includes","slice","getItems","ReportSummaryItems","currentColorScale","chart_color_green_400","chart_color_green_300","chart_color_green_200","chart_color_green_100","chart_color_green_500","fill","currentInfrastructureColorScale","chart_color_blue_400","chart_color_blue_300","chart_color_blue_200","chart_color_blue_100","chart_color_blue_500","strokeDasharray","strokeWidth","forecastConeDataColorScale","forecastDataColorScale","forecastInfrastructureConeDataColorScale","forecastInfrastructureDataColorScale","previousColorScale","chart_color_black_200","yAxis","axisLabel","grid","stroke","ticks","tickLabels","xAxis","containerRef","width","initDatum","symbol","cursorVoronoiContainer","getCursorVoronoiContainer","handleNavToggle","setTimeout","handleResize","clientWidth","ChartArea","interpolation","CursorVoronoiContainer","cursorDimension","labels","mouseFollowTooltips","voronoiDimension","voronoiPadding","bottom","left","right","top","getLegend","ChartLegend","gutter","responsive","handleLegendClick","getAdjustedContainerHeight","adjustedContainerHeight","window","addEventListener","navToggle","on","removeEventListener","chartNames","isHidden","legendName","onLegendClick","currentInfrastructureDate","currentCostDate","forecastCostDate","previousInfrastructureDate","previousUsageDate","getEndDate","half","_2ndDay","_3rdDay","_4thDay","container","cloneElement","disable","labelComponent","ChartLegendTooltip","legendData","day","Chart","containerComponent","events","getEvents","legendAllowWrap","legendComponent","legendPosition","theme","ChartAxis","tickValues","dependentAxis","ReportSummaryCost","chart_color_orange_300","initDatumChildName","isLine","isBar","isForecast","ChartBar","alignment","ChartLine","getForecastBarChart","getForecastLineChart","barWidth","ChartGroup","ReportSummaryDailyCost","itemsPerRow","tooltipKey","legendItemsPerRow","orientation","previousDate","currentDate","ReportSummaryDailyTrend","currentMonthData","previousMonthData","midDate","ReportSummaryTrend","chartContainer","legendColorScale","currentRequestDate","currentUsageDate","previousRequestDate","ReportSummaryUsage","getReleasePath","pathName","location","pathname","split","shift","release","module","exports","reload","NoDataState","getUserAccessQuery","perspectiveSelector","display","alignItems","perspectiveLabel","marginRight","var","isPerspectiveOpen","isDisabled","Perspective"],"mappings":"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","file":"472fd40cb4f5ac7e36d0.bundle.js","sourcesContent":["import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nconst DashboardBase = ({ DashboardWidget, selectWidgets, widgets }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { hasGutter: true }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return widget.details.showHorizontal ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(DashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { lg: 12, xl: 6, xl2: 4, key: widgetId },\n            React.createElement(DashboardWidget, { widgetId: widgetId })));\n    }))));\nexport { DashboardBase };\n","import { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nclass ChartComparisonBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isChartComparisonOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getDropDownItems = () => {\n            const { options, t } = this.props;\n            return options.map(option => (React.createElement(DropdownItem, { component: \"button\", key: option.value, onClick: () => this.handleClick(option.value) }, t(option.label))));\n        };\n        this.getCurrentLabel = () => {\n            const { currentItem, options, t } = this.props;\n            let label = '';\n            for (const option of options) {\n                if (currentItem === option.value) {\n                    label = t(option.label);\n                    break;\n                }\n            }\n            return label;\n        };\n        this.handleClick = value => {\n            const { onItemClicked } = this.props;\n            if (onItemClicked) {\n                onItemClicked(value);\n            }\n        };\n        this.handleSelect = () => {\n            this.setState({\n                isChartComparisonOpen: !this.state.isChartComparisonOpen,\n            });\n        };\n        this.handleToggle = isChartComparisonOpen => {\n            this.setState({\n                isChartComparisonOpen,\n            });\n        };\n    }\n    render() {\n        // const { t } = this.props;\n        const { isChartComparisonOpen } = this.state;\n        const dropdownItems = this.getDropDownItems();\n        return (React.createElement(Dropdown, { onSelect: this.handleSelect, toggle: React.createElement(DropdownToggle, { onToggle: this.handleToggle }, this.getCurrentLabel()), isOpen: isChartComparisonOpen, dropdownItems: dropdownItems }));\n    }\n}\nconst ChartComparison = withTranslation()(ChartComparisonBase);\nexport { ChartComparison };\n","import global_spacer_2xl from '@patternfly/react-tokens/dist/js/global_spacer_2xl';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_xl from '@patternfly/react-tokens/dist/js/global_spacer_xl';\nexport const chartStyles = {\n    chartAltHeight: 250,\n    chartHeight: 180,\n    containerAltHeight: 250,\n    containerTrendHeight: 180,\n    containerUsageHeight: 180,\n};\nexport const styles = {\n    comparison: {\n        marginBottom: global_spacer_md.value,\n    },\n    tabs: {\n        marginTop: global_spacer_2xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n};\n","import { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { getQuery } from 'api/queries/awsQuery';\nimport { transformForecast, transformForecastCone, transformReport, } from 'components/charts/common/chartDatumUtils';\nimport { ReportSummary, ReportSummaryAlt, ReportSummaryCost, ReportSummaryDailyCost, ReportSummaryDailyTrend, ReportSummaryDetails, ReportSummaryItem, ReportSummaryItems, ReportSummaryTrend, ReportSummaryUsage, } from 'components/reports/reportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport { cloneDeep } from 'lodash';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { ChartComparison } from './chartComparison';\nimport { chartStyles, styles } from './dashboardWidget.styles';\nclass DashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n            currentComparison: \"cumulative\" /* cumulative */,\n        };\n        this.buildDetailsLink = (tab) => {\n            const { details, getIdKeyForTab } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return `${details.viewAllPath}?${getQuery({\n                group_by: {\n                    [currentTab]: '*',\n                },\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.getChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { chartType, trend } = this.props;\n            if (chartType === \"dailyTrend\" /* dailyTrend */) {\n                return this.getDailyTrendChart(containerHeight, height, adjustContainerHeight, trend.showSupplementaryLabel);\n            }\n            else if (chartType === \"dailyCost\" /* dailyCost */) {\n                return this.getDailyCostChart(containerHeight, height, adjustContainerHeight);\n            }\n            else if (chartType === \"trend\" /* trend */) {\n                return this.getTrendChart(containerHeight, height, adjustContainerHeight, trend.showSupplementaryLabel);\n            }\n            else if (chartType === \"usage\" /* usage */) {\n                return this.getUsageChart(height, adjustContainerHeight);\n            }\n            else {\n                return null;\n            }\n        };\n        this.getChartComparison = () => {\n            const { t, trend } = this.props;\n            const { currentComparison } = this.state;\n            const units = this.getUnits();\n            const cumulativeTitle = t(trend.titleKey, { units: t(`units.${units}`) });\n            const dailyTitle = t(trend.dailyTitleKey, { units: t(`units.${units}`) });\n            const options = [\n                { label: dailyTitle, value: \"daily\" /* daily */ },\n                { label: cumulativeTitle, value: \"cumulative\" /* cumulative */ },\n            ];\n            return (React.createElement(ChartComparison, { currentItem: currentComparison || options[0].value, onItemClicked: this.handleComparisonClick, options: options }));\n        };\n        // This chart displays cumulative and daily cost compared to infrastructure cost\n        this.getDailyCostChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { currentReport, previousReport, trend } = this.props;\n            const { currentComparison } = this.state;\n            const computedReportItem = trend.computedReportItem; // cost, supplementary cost, etc.\n            const computedReportItemValue = trend.computedReportItemValue; // infrastructure usage cost\n            const daily = currentComparison === \"daily\" /* daily */;\n            const type = daily ? 1 /* daily */ : trend.type;\n            // Infrastructure data\n            const currentInfrastructureData = transformReport(currentReport, type, 'date', 'infrastructure', computedReportItemValue);\n            const previousInfrastructureData = transformReport(previousReport, type, 'date', 'infrastructure', computedReportItemValue);\n            // Cost data\n            const currentCostData = transformReport(currentReport, type, 'date', computedReportItem, computedReportItemValue);\n            const previousCostData = transformReport(previousReport, type, 'date', computedReportItem, computedReportItemValue);\n            // Forecast data\n            const forecastData = this.getForecastData(currentReport, trend.computedForecastItem);\n            const forecastInfrastructureData = this.getForecastData(currentReport, trend.computedForecastInfrastructureItem);\n            const ReportSummaryComponent = daily ? ReportSummaryDailyCost : ReportSummaryCost;\n            return (React.createElement(React.Fragment, null,\n                React.createElement(\"div\", { style: styles.comparison }, this.getChartComparison()),\n                React.createElement(ReportSummaryComponent, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentCostData: currentCostData, currentInfrastructureCostData: currentInfrastructureData, forecastConeData: forecastData.forecastConeData, forecastData: forecastData.forecastData, forecastInfrastructureConeData: forecastInfrastructureData.forecastConeData, forecastInfrastructureData: forecastInfrastructureData.forecastData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousCostData: previousCostData, previousInfrastructureCostData: previousInfrastructureData, showForecast: trend.computedForecastItem !== undefined })));\n        };\n        // This chart displays cumulative and daily cost\n        this.getDailyTrendChart = (containerHeight, height, adjustContainerHeight = false, showSupplementaryLabel = false) => {\n            const { currentReport, details, previousReport, trend } = this.props;\n            const { currentComparison } = this.state;\n            const units = this.getUnits();\n            const computedReportItem = trend.computedReportItem; // cost, supplementary cost, etc.\n            const computedReportItemValue = trend.computedReportItemValue; // infrastructure usage cost\n            const daily = currentComparison === \"daily\" /* daily */;\n            const type = daily ? 1 /* daily */ : trend.type;\n            // Cost data\n            const currentData = transformReport(currentReport, type, 'date', computedReportItem, computedReportItemValue);\n            const previousData = transformReport(previousReport, type, 'date', computedReportItem, computedReportItemValue);\n            // Forecast data\n            const { forecastData, forecastConeData } = this.getForecastData(currentReport, trend.computedForecastItem);\n            const ReportSummaryComponent = daily ? ReportSummaryDailyTrend : ReportSummaryTrend;\n            return (React.createElement(React.Fragment, null,\n                React.createElement(\"div\", { style: styles.comparison }, this.getChartComparison()),\n                React.createElement(ReportSummaryComponent, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentData: currentData, forecastData: forecastData, forecastConeData: forecastConeData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousData, showForecast: trend.computedForecastItem !== undefined, showSupplementaryLabel: showSupplementaryLabel, showUsageLegendLabel: details.showUsageLegendLabel, units: units })));\n        };\n        this.getForecastData = (report, computedForecastItem = 'cost') => {\n            const { forecast, trend } = this.props;\n            const { currentComparison } = this.state;\n            // Todo: Add cumulative / daily prop\n            const daily = currentComparison === \"daily\" /* daily */;\n            const type = daily ? 1 /* daily */ : trend.type;\n            let forecastData;\n            let forecastConeData;\n            if (computedForecastItem) {\n                const newForecast = cloneDeep(forecast);\n                if (newForecast) {\n                    newForecast.data = [];\n                }\n                if (forecast && report && report.data) {\n                    const total = report.meta && report.meta.total && report.meta.total[computedForecastItem]\n                        ? report.meta.total[computedForecastItem].total.value\n                        : 0;\n                    // Find last currentData date with values\n                    const reportedValues = report.data.filter(val => val.values.length);\n                    const lastReported = reportedValues[reportedValues.length - 1]\n                        ? reportedValues[reportedValues.length - 1].date\n                        : undefined;\n                    // Remove overlapping forecast dates, if any\n                    if (forecast && forecast.data) {\n                        const lastReportedDate = new Date(lastReported);\n                        const lastReportedMonth = lastReportedDate.getMonth() + 1;\n                        for (const item of forecast.data) {\n                            const forecastDate = new Date(item.date);\n                            const forecastMonth = forecastDate.getMonth() + 1;\n                            // Ensure month match. AWS forecast may begin with \"2020-12-04\", but ends on \"2021-01-01\"\n                            if (forecastDate > lastReportedDate && lastReportedMonth === forecastMonth) {\n                                newForecast.data.push(item);\n                            }\n                        }\n                    }\n                    // For cumulative data, show continuous line from current report to forecast\n                    if (type === 0 /* rolling */) {\n                        newForecast.data.unshift({\n                            date: lastReported,\n                            values: [\n                                {\n                                    date: lastReported,\n                                    cost: {\n                                        confidence_max: {\n                                            value: 0,\n                                        },\n                                        confidence_min: {\n                                            value: 0,\n                                        },\n                                        total: {\n                                            value: total,\n                                            units: 'USD',\n                                        },\n                                    },\n                                    infrastructure: {\n                                        confidence_max: {\n                                            value: 0,\n                                        },\n                                        confidence_min: {\n                                            value: 0,\n                                        },\n                                        total: {\n                                            value: total,\n                                            units: 'USD',\n                                        },\n                                    },\n                                    supplementary: {\n                                        confidence_max: {\n                                            value: 0,\n                                        },\n                                        confidence_min: {\n                                            value: 0,\n                                        },\n                                        total: {\n                                            value: total,\n                                            units: 'USD',\n                                        },\n                                    },\n                                },\n                            ],\n                        });\n                    }\n                }\n                forecastData = transformForecast(newForecast, type, computedForecastItem);\n                forecastConeData = transformForecastCone(newForecast, type, computedForecastItem);\n            }\n            return { forecastData, forecastConeData };\n        };\n        // This chart displays cumulative cost only\n        this.getTrendChart = (containerHeight, height, adjustContainerHeight = false, showSupplementaryLabel = false) => {\n            const { currentReport, details, previousReport, t, trend } = this.props;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            const computedReportItem = trend.computedReportItem; // cost, supplementary cost, etc.\n            const computedReportItemValue = trend.computedReportItemValue; // infrastructure usage cost\n            // Cost data\n            const currentData = transformReport(currentReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            const previousData = transformReport(previousReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            // Forecast data\n            const { forecastData, forecastConeData } = this.getForecastData(currentReport, trend.computedForecastItem);\n            return (React.createElement(ReportSummaryTrend, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentData: currentData, forecastData: forecastData, forecastConeData: forecastConeData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousData, showForecast: trend.computedForecastItem !== undefined, showSupplementaryLabel: showSupplementaryLabel, showUsageLegendLabel: details.showUsageLegendLabel, title: title, units: units }));\n        };\n        // This chart displays usage and requests\n        this.getUsageChart = (height, adjustContainerHeight = false) => {\n            const { currentReport, previousReport, t, trend } = this.props;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            // Request data\n            const currentRequestData = transformReport(currentReport, trend.type, 'date', 'request');\n            const previousRequestData = transformReport(previousReport, trend.type, 'date', 'request');\n            // Usage data\n            const currentUsageData = transformReport(currentReport, trend.type, 'date', 'usage');\n            const previousUsageData = transformReport(previousReport, trend.type, 'date', 'usage');\n            return (React.createElement(ReportSummaryUsage, { adjustContainerHeight: adjustContainerHeight, containerHeight: chartStyles.containerUsageHeight, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousRequestData: previousRequestData, previousUsageData: previousUsageData, title: title }));\n        };\n        this.getDetails = () => {\n            const { chartType, currentReport, details, reportType, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            const units = this.getUnits();\n            return (React.createElement(ReportSummaryDetails, { chartType: chartType, computedReportItem: computedReportItem, computedReportItemValue: computedReportItemValue, costLabel: this.getDetailsLabel(details.costKey, units), formatOptions: details.formatOptions, formatValue: formatValue, report: currentReport, reportType: reportType, requestLabel: this.getDetailsLabel(details.requestKey, units), showTooltip: details.showTooltip, showUnits: details.showUnits, showUsageFirst: details.showUsageFirst, units: details.units, usageFormatOptions: details.usageFormatOptions, usageLabel: this.getDetailsLabel(details.usageKey, units) }));\n        };\n        this.getDetailsLabel = (key, units) => {\n            const { t } = this.props;\n            return key ? t(key, { units: t(`units.${units}`) }) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, details } = this.props;\n            if (details.viewAllPath) {\n                return (React.createElement(Link, { to: this.buildDetailsLink(currentTab), onClick: this.handleInsightsNavClick }, this.getDetailsLinkTitle(currentTab)));\n            }\n            return null;\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { getIdKeyForTab, t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { containerAltHeight = chartStyles.containerAltHeight, chartAltHeight = chartStyles.chartAltHeight, currentReportFetchStatus, details, } = this.props;\n            return (React.createElement(ReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(containerAltHeight, chartAltHeight, details.adjustContainerHeight)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'D');\n            const startDate = formatDate(startOfMonth(today), 'D');\n            return t('dashboard.widget_subtitle', {\n                count: getDate(today),\n                endDate,\n                month,\n                startDate,\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { getIdKeyForTab, tabsReport, tabsReportFetchStatus } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) },\n                React.createElement(\"div\", { style: styles.tabItems },\n                    React.createElement(ReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport, status: tabsReportFetchStatus }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, details, getIdKeyForTab, tabsReport, topItems, trend } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            let totalValue;\n            const hasTotal = tabsReport && tabsReport.meta && tabsReport.meta.total;\n            if (computedReportItem === \"usage\" /* usage */) {\n                if (hasTotal && tabsReport.meta.total.usage) {\n                    totalValue = tabsReport.meta.total.usage.value;\n                }\n            }\n            else {\n                if (hasTotal &&\n                    tabsReport.meta.total[computedReportItem] &&\n                    tabsReport.meta.total[computedReportItem][computedReportItemValue]) {\n                    totalValue = tabsReport.meta.total[computedReportItem][computedReportItemValue].value;\n                }\n            }\n            if (activeTab === currentTab) {\n                return (React.createElement(ReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: totalValue, units: details.units ? details.units : this.getUnits(), value: reportItem[computedReportItem][computedReportItemValue].value }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { getIdKeyForTab, t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getUnits = () => {\n            const { currentReport, details, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            if (details.units) {\n                return details.units;\n            }\n            let units;\n            const hasTotal = currentReport && currentReport.meta && currentReport.meta.total;\n            if (computedReportItem === \"usage\" /* usage */) {\n                const hasUsage = hasTotal && currentReport.meta.total.usage;\n                units = hasUsage ? unitLookupKey(currentReport.meta.total.usage.units) : '';\n            }\n            else {\n                const hasCost = hasTotal &&\n                    currentReport.meta.total[computedReportItem] &&\n                    currentReport.meta.total[computedReportItem][computedReportItemValue];\n                units = hasCost ? unitLookupKey(currentReport.meta.total[computedReportItem][computedReportItemValue].units) : '';\n            }\n            return units;\n        };\n        this.getVerticalLayout = () => {\n            const { availableTabs, currentReportFetchStatus, details } = this.props;\n            return (React.createElement(ReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerTrendHeight, chartStyles.chartHeight, details.adjustContainerHeight),\n                Boolean(availableTabs) && React.createElement(\"div\", { style: styles.tabs }, this.getTabs())));\n        };\n        this.handleComparisonClick = (value) => {\n            this.setState({ currentComparison: value });\n        };\n        this.handleInsightsNavClick = () => {\n            const { details } = this.props;\n            if (details.appNavId) {\n                insights.chrome.appNavClick({\n                    id: details.appNavId,\n                    secondaryNav: true,\n                });\n            }\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchForecasts, fetchReports, id, trend, updateTab, widgetId } = this.props;\n        if (availableTabs) {\n            updateTab(id, availableTabs[0]);\n        }\n        if (fetchReports) {\n            fetchReports(widgetId);\n        }\n        if (trend.computedForecastItem !== undefined) {\n            fetchForecasts(widgetId);\n        }\n    }\n    render() {\n        const { details } = this.props;\n        return details.showHorizontal ? this.getHorizontalLayout() : this.getVerticalLayout();\n    }\n}\nexport { DashboardWidgetBase };\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsCloudDashboardActions, awsCloudDashboardSelectors, } from 'store/dashboard/awsCloudDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: awsCloudDashboardActions.fetchWidgetForecasts,\n    fetchReports: awsCloudDashboardActions.fetchWidgetReports,\n    updateTab: awsCloudDashboardActions.changeWidgetTab,\n};\nconst AwsCloudDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AwsCloudDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsCloudDashboardSelectors } from 'store/dashboard/awsCloudDashboard';\nimport { AwsCloudDashboardWidget } from './awsCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: AwsCloudDashboardWidget,\n        selectWidgets: awsCloudDashboardSelectors.selectWidgets(state),\n        widgets: awsCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsCloudDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default AwsCloudDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsDashboardActions, awsDashboardSelectors } from 'store/dashboard/awsDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: awsDashboardActions.fetchWidgetForecasts,\n    fetchReports: awsDashboardActions.fetchWidgetReports,\n    updateTab: awsDashboardActions.changeWidgetTab,\n};\nconst AwsDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AwsDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsDashboardSelectors } from 'store/dashboard/awsDashboard';\nimport { AwsDashboardWidget } from './awsDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: AwsDashboardWidget,\n        selectWidgets: awsDashboardSelectors.selectWidgets(state),\n        widgets: awsDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default AwsDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureCloudDashboardActions, azureCloudDashboardSelectors, } from 'store/dashboard/azureCloudDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"service_names\" /* service_names */:\n            return 'service_name';\n        case \"subscription_guids\" /* subscription_guids */:\n            return 'subscription_guid';\n        case \"resource_locations\" /* resource_locations */:\n            return 'resource_location';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = azureCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = azureCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: azureCloudDashboardActions.fetchWidgetForecasts,\n    fetchReports: azureCloudDashboardActions.fetchWidgetReports,\n    updateTab: azureCloudDashboardActions.changeWidgetTab,\n};\nconst AzureCloudDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AzureCloudDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureCloudDashboardSelectors } from 'store/dashboard/azureCloudDashboard';\nimport { AzureCloudDashboardWidget } from './azureCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: AzureCloudDashboardWidget,\n        selectWidgets: azureCloudDashboardSelectors.selectWidgets(state),\n        widgets: azureCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AzureCloudDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default AzureCloudDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureDashboardActions, azureDashboardSelectors } from 'store/dashboard/azureDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"service_names\" /* service_names */:\n            return 'service_name';\n        case \"subscription_guids\" /* subscription_guids */:\n            return 'subscription_guid';\n        case \"resource_locations\" /* resource_locations */:\n            return 'resource_location';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = azureDashboardSelectors.selectWidget(state, widgetId);\n    const queries = azureDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: azureDashboardActions.fetchWidgetForecasts,\n    fetchReports: azureDashboardActions.fetchWidgetReports,\n    updateTab: azureDashboardActions.changeWidgetTab,\n};\nconst AzureDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AzureDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureDashboardSelectors } from 'store/dashboard/azureDashboard';\nimport { AzureDashboardWidget } from './azureDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: AzureDashboardWidget,\n        selectWidgets: azureDashboardSelectors.selectWidgets(state),\n        widgets: azureDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AzureDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default AzureDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { gcpDashboardActions, gcpDashboardSelectors } from 'store/dashboard/gcpDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"projects\" /* projects */:\n            return 'project';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = gcpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = gcpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: gcpDashboardActions.fetchWidgetForecasts,\n    fetchReports: gcpDashboardActions.fetchWidgetReports,\n    updateTab: gcpDashboardActions.changeWidgetTab,\n};\nconst GcpDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { GcpDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { gcpDashboardSelectors } from 'store/dashboard/gcpDashboard';\nimport { GcpDashboardWidget } from './gcpDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: GcpDashboardWidget,\n        selectWidgets: gcpDashboardSelectors.selectWidgets(state),\n        widgets: gcpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst GcpDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default GcpDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardActions, ocpCloudDashboardSelectors, } from 'store/dashboard/ocpCloudDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"services\" /* services */:\n            return 'service';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: ocpCloudDashboardActions.fetchWidgetForecasts,\n    fetchReports: ocpCloudDashboardActions.fetchWidgetReports,\n    updateTab: ocpCloudDashboardActions.changeWidgetTab,\n};\nconst OcpCloudDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpCloudDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardSelectors } from 'store/dashboard/ocpCloudDashboard';\nimport { OcpCloudDashboardWidget } from './ocpCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: OcpCloudDashboardWidget,\n        selectWidgets: ocpCloudDashboardSelectors.selectWidgets(state),\n        widgets: ocpCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpCloudDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpCloudDashboard;\n","export const chartStyles = {\n    chartAltHeight: 250,\n    containerAltHeight: 250,\n};\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardActions, ocpDashboardSelectors } from 'store/dashboard/ocpDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { chartStyles } from './ocpDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, chartAltHeight: chartStyles.chartAltHeight, containerAltHeight: chartStyles.containerAltHeight, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: ocpDashboardActions.fetchWidgetForecasts,\n    fetchReports: ocpDashboardActions.fetchWidgetReports,\n    updateTab: ocpDashboardActions.changeWidgetTab,\n};\nconst OcpDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardSelectors } from 'store/dashboard/ocpDashboard';\nimport { OcpDashboardWidget } from './ocpDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: OcpDashboardWidget,\n        selectWidgets: ocpDashboardSelectors.selectWidgets(state),\n        widgets: ocpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpSupplementaryDashboardActions, ocpSupplementaryDashboardSelectors, } from 'store/dashboard/ocpSupplementaryDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpSupplementaryDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpSupplementaryDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: ocpSupplementaryDashboardActions.fetchWidgetForecasts,\n    fetchReports: ocpSupplementaryDashboardActions.fetchWidgetReports,\n    updateTab: ocpSupplementaryDashboardActions.changeWidgetTab,\n};\nconst OcpSupplementaryDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpSupplementaryDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpSupplementaryDashboardSelectors } from 'store/dashboard/ocpSupplementaryDashboard';\nimport { OcpSupplementaryDashboardWidget } from './ocpSupplementaryDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: OcpSupplementaryDashboardWidget,\n        selectWidgets: ocpSupplementaryDashboardSelectors.selectWidgets(state),\n        widgets: ocpSupplementaryDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpSupplementaryDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpSupplementaryDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpUsageDashboardActions, ocpUsageDashboardSelectors, } from 'store/dashboard/ocpUsageDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpUsageDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpUsageDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpUsageDashboardActions.fetchWidgetReports,\n    updateTab: ocpUsageDashboardActions.changeWidgetTab,\n};\nconst OcpUsageDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpUsageDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpUsageDashboardSelectors } from 'store/dashboard/ocpUsageDashboard';\nimport { OcpUsageDashboardWidget } from './ocpUsageDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: OcpUsageDashboardWidget,\n        selectWidgets: ocpUsageDashboardSelectors.selectWidgets(state),\n        widgets: ocpUsageDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpUsageDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpUsageDashboard;\n","import global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const styles = {\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    perspective: {\n        marginTop: global_spacer_lg.value,\n    },\n    tabs: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import './overview.scss';\nimport { Button, ButtonVariant, Popover, Tab, TabContent, Tabs, TabTitleText, Title } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { getUserAccessQuery } from 'api/queries/userAccessQuery';\nimport AwsCloudDashboard from 'pages/dashboard/awsCloudDashboard/awsCloudDashboard';\nimport AwsDashboard from 'pages/dashboard/awsDashboard/awsDashboard';\nimport AzureCloudDashboard from 'pages/dashboard/azureCloudDashboard/azureCloudDashboard';\nimport AzureDashboard from 'pages/dashboard/azureDashboard/azureDashboard';\nimport GcpDashboard from 'pages/dashboard/gcpDashboard/gcpDashboard';\nimport OcpCloudDashboard from 'pages/dashboard/ocpCloudDashboard/ocpCloudDashboard';\nimport OcpDashboard from 'pages/dashboard/ocpDashboard/ocpDashboard';\nimport OcpSupplementaryDashboard from 'pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboard';\nimport OcpUsageDashboard from 'pages/dashboard/ocpUsageDashboard/ocpUsageDashboard';\nimport Loading from 'pages/state/loading';\nimport NoProviders from 'pages/state/noProviders';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsProvidersQuery, azureProvidersQuery, gcpProvidersQuery, ocpProvidersQuery, providersSelectors, } from 'store/providers';\nimport { allUserAccessQuery, userAccessSelectors } from 'store/userAccess';\nimport NoData from '../state/noData/noData';\nimport { styles } from './overview.styles';\nimport { Perspective } from './perspective';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"infrastructure\" /* infrastructure */:\n            return 'infrastructure';\n        case \"ocp\" /* ocp */:\n            return 'ocp';\n    }\n};\n// Ocp options\nconst ocpOptions = [\n    { label: 'overview.perspective.all', value: 'all' },\n    { label: 'overview.perspective.supplementary', value: 'supplementary' },\n];\n// Infrastructure all cloud options\nconst infrastructureAllCloudOptions = [{ label: 'overview.perspective.all_cloud', value: 'all_cloud' }];\n// Infrastructure AWS options\nconst infrastructureAwsOptions = [{ label: 'overview.perspective.aws', value: 'aws' }];\n// Infrastructure AWS cloud options\nconst infrastructureAwsCloudOptions = [{ label: 'overview.perspective.aws_cloud', value: 'aws_cloud' }];\n// Infrastructure Azure options\nconst infrastructureAzureOptions = [{ label: 'overview.perspective.azure', value: 'azure' }];\n// Infrastructure Azure cloud options\nconst infrastructureAzureCloudOptions = [{ label: 'overview.perspective.azure_cloud', value: 'azure_cloud' }];\n// Infrastructure GCP options\nconst infrastructureGcpOptions = [{ label: 'overview.perspective.gcp', value: 'gcp' }];\n// Infrastructure Ocp options\nconst infrastructureOcpOptions = [{ label: 'overview.perspective.ocp_usage', value: 'ocp_usage' }];\nclass OverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            activeTabKey: 0,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getAvailableTabs = () => {\n            const availableTabs = [];\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isGcpAvailable = this.isGcpAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            const isOcpCloudAvailable = this.isOcpCloudAvailable();\n            if (isOcpAvailable) {\n                availableTabs.push({\n                    contentRef: React.createRef(),\n                    tab: \"ocp\" /* ocp */,\n                });\n            }\n            if (isAwsAvailable || isAzureAvailable || isGcpAvailable || isOcpCloudAvailable) {\n                availableTabs.push({\n                    contentRef: React.createRef(),\n                    tab: \"infrastructure\" /* infrastructure */,\n                });\n            }\n            return availableTabs;\n        };\n        this.getCurrentTab = () => {\n            const { activeTabKey } = this.state;\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isGcpAvailable = this.isGcpAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            const isOcpCloudAvailable = this.isOcpCloudAvailable();\n            const showOcpOnly = isOcpAvailable && !(isAwsAvailable || isAzureAvailable || isGcpAvailable || isOcpCloudAvailable);\n            const showInfrastructureOnly = !isOcpAvailable && (isAwsAvailable || isAzureAvailable || isGcpAvailable || isOcpCloudAvailable);\n            if (showOcpOnly) {\n                return \"ocp\" /* ocp */;\n            }\n            else if (showInfrastructureOnly) {\n                return \"infrastructure\" /* infrastructure */;\n            }\n            else {\n                return activeTabKey === 0 ? \"ocp\" /* ocp */ : \"infrastructure\" /* infrastructure */;\n            }\n        };\n        this.getDefaultInfrastructurePerspective = () => {\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isGcpAvailable = this.isGcpAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            if (isOcpAvailable) {\n                return \"all_cloud\" /* allCloud */;\n            }\n            if (isAwsAvailable) {\n                return \"aws\" /* aws */;\n            }\n            if (isAzureAvailable) {\n                return \"azure\" /* azure */;\n            }\n            if (isGcpAvailable) {\n                return \"gcp\" /* gcp */;\n            }\n            return undefined;\n        };\n        this.getDefaultOcpPerspective = () => {\n            const isOcpAvailable = this.isOcpAvailable();\n            if (isOcpAvailable) {\n                return \"all\" /* all */;\n            }\n            return undefined;\n        };\n        this.getPerspective = () => {\n            const { currentInfrastructurePerspective, currentOcpPerspective } = this.state;\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isGcpAvailable = this.isGcpAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            if (!(isAwsAvailable || isAzureAvailable || isGcpAvailable || isOcpAvailable)) {\n                return null;\n            }\n            // Dynamically show options if providers are available\n            const options = [];\n            if (this.getCurrentTab() === \"infrastructure\" /* infrastructure */) {\n                if (isOcpAvailable) {\n                    options.push(...infrastructureAllCloudOptions);\n                }\n                if (isAwsAvailable) {\n                    options.push(...infrastructureAwsOptions);\n                }\n                if (isOcpAvailable && isAwsAvailable) {\n                    options.push(...infrastructureAwsCloudOptions);\n                }\n                if (isGcpAvailable) {\n                    options.push(...infrastructureGcpOptions);\n                }\n                if (isAzureAvailable) {\n                    options.push(...infrastructureAzureOptions);\n                }\n                if (isOcpAvailable && isAzureAvailable) {\n                    options.push(...infrastructureAzureCloudOptions);\n                }\n                if (isOcpAvailable) {\n                    options.push(...infrastructureOcpOptions);\n                }\n            }\n            else {\n                options.push(...ocpOptions);\n            }\n            const currentItem = this.getCurrentTab() === \"infrastructure\" /* infrastructure */ ? currentInfrastructurePerspective : currentOcpPerspective;\n            return (React.createElement(Perspective, { currentItem: currentItem || options[0].value, onItemClicked: this.handlePerspectiveClick, options: options }));\n        };\n        this.getTab = (tab, contentRef, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, tabContentId: `tab-${index}`, tabContentRef: contentRef, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) }));\n        };\n        this.getTabContent = (availableTabs) => {\n            return availableTabs.map((val, index) => {\n                return (React.createElement(TabContent, { eventKey: index, key: `${getIdKeyForTab(val.tab)}-tabContent`, id: `tab-${index}`, ref: val.contentRef }, this.getTabItem(val.tab, index)));\n            });\n        };\n        // Ensure at least one source provider has data available\n        this.hasCurrentMonthData = (providers) => {\n            let result = false;\n            if (providers && providers.data) {\n                for (const provider of providers.data) {\n                    if (provider.current_month_data) {\n                        result = true;\n                        break;\n                    }\n                }\n            }\n            return result;\n        };\n        this.getTabItem = (tab, index) => {\n            const { awsProviders, azureProviders, gcpProviders, ocpProviders } = this.props;\n            const { activeTabKey, currentInfrastructurePerspective, currentOcpPerspective } = this.state;\n            const emptyTab = React.createElement(React.Fragment, null); // Lazily load tabs\n            const noData = React.createElement(NoData, { showReload: false });\n            if (activeTabKey !== index) {\n                return emptyTab;\n            }\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === \"infrastructure\" /* infrastructure */) {\n                if (currentInfrastructurePerspective === \"all_cloud\" /* allCloud */) {\n                    return this.hasCurrentMonthData(ocpProviders) ? React.createElement(OcpCloudDashboard, null) : noData;\n                }\n                else if (currentInfrastructurePerspective === \"aws\" /* aws */) {\n                    return this.hasCurrentMonthData(awsProviders) ? React.createElement(AwsDashboard, null) : noData;\n                }\n                else if (currentInfrastructurePerspective === \"aws_cloud\" /* awsCloud */) {\n                    return this.hasCurrentMonthData(awsProviders) ? React.createElement(AwsCloudDashboard, null) : noData;\n                }\n                else if (currentInfrastructurePerspective === \"gcp\" /* gcp */) {\n                    return this.hasCurrentMonthData(gcpProviders) ? React.createElement(GcpDashboard, null) : noData;\n                }\n                else if (currentInfrastructurePerspective === \"azure\" /* azure */) {\n                    return this.hasCurrentMonthData(azureProviders) ? React.createElement(AzureDashboard, null) : noData;\n                }\n                else if (currentInfrastructurePerspective === \"azure_cloud\" /* azureCloud */) {\n                    return this.hasCurrentMonthData(azureProviders) ? React.createElement(AzureCloudDashboard, null) : noData;\n                }\n                else if (currentInfrastructurePerspective === \"ocp_usage\" /* ocpUsage */) {\n                    return this.hasCurrentMonthData(ocpProviders) ? React.createElement(OcpUsageDashboard, null) : noData;\n                }\n                else {\n                    return this.hasCurrentMonthData(ocpProviders) ? React.createElement(OcpCloudDashboard, null) : noData; // default\n                }\n            }\n            else if (currentTab === \"ocp\" /* ocp */) {\n                if (currentOcpPerspective === \"all\" /* all */) {\n                    return this.hasCurrentMonthData(ocpProviders) ? React.createElement(OcpDashboard, null) : noData;\n                }\n                else if (currentOcpPerspective === \"supplementary\" /* supplementary */) {\n                    return this.hasCurrentMonthData(ocpProviders) ? React.createElement(OcpSupplementaryDashboard, null) : noData;\n                }\n                else {\n                    return this.hasCurrentMonthData(ocpProviders) ? React.createElement(OcpDashboard, null) : noData; // default\n                }\n            }\n            else {\n                return emptyTab;\n            }\n        };\n        this.getTabs = (availableTabs) => {\n            const { activeTabKey } = this.state;\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((val, index) => this.getTab(val.tab, val.contentRef, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            if (tab === \"infrastructure\" /* infrastructure */) {\n                return t('overview.infrastructure');\n            }\n            else if (tab === \"ocp\" /* ocp */) {\n                return t('overview.ocp');\n            }\n        };\n        this.handlePerspectiveClick = (value) => {\n            const currentTab = this.getCurrentTab();\n            this.setState(Object.assign(Object.assign({}, (currentTab === \"infrastructure\" /* infrastructure */ && {\n                currentInfrastructurePerspective: value,\n            })), (currentTab === \"ocp\" /* ocp */ && { currentOcpPerspective: value })));\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { activeTabKey } = this.state;\n            if (activeTabKey !== tabIndex) {\n                this.setState({\n                    activeTabKey: tabIndex,\n                });\n            }\n        };\n        this.isAwsAvailable = () => {\n            const { awsProviders, userAccess } = this.props;\n            const data = userAccess.data.find(d => d.type === \"aws\" /* aws */);\n            const isUserAccessAllowed = data && data.access;\n            // providers API returns empty data array for no sources\n            return (isUserAccessAllowed &&\n                awsProviders !== undefined &&\n                awsProviders.meta !== undefined &&\n                awsProviders.meta.count > 0);\n        };\n        this.isAzureAvailable = () => {\n            const { azureProviders, userAccess } = this.props;\n            const data = userAccess.data.find(d => d.type === \"azure\" /* azure */);\n            const isUserAccessAllowed = data && data.access;\n            // providers API returns empty data array for no sources\n            return (isUserAccessAllowed &&\n                azureProviders !== undefined &&\n                azureProviders.meta !== undefined &&\n                azureProviders.meta.count > 0);\n        };\n        this.isGcpAvailable = () => {\n            const { gcpProviders, userAccess } = this.props;\n            const data = userAccess.data.find(d => d.type === \"gcp\" /* gcp */);\n            const isUserAccessAllowed = data && data.access;\n            // providers API returns empty data array for no sources\n            return (isUserAccessAllowed &&\n                gcpProviders !== undefined &&\n                gcpProviders.meta !== undefined &&\n                gcpProviders.meta.count > 0);\n        };\n        this.isOcpAvailable = () => {\n            const { ocpProviders, userAccess } = this.props;\n            const data = userAccess.data.find(d => d.type === \"ocp\" /* ocp */);\n            const isUserAccessAllowed = data && data.access;\n            // providers API returns empty data array for no sources\n            return (isUserAccessAllowed &&\n                ocpProviders !== undefined &&\n                ocpProviders.meta !== undefined &&\n                ocpProviders.meta.count > 0);\n        };\n        this.isOcpCloudAvailable = () => {\n            return this.isAwsAvailable() && this.isOcpAvailable();\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            currentInfrastructurePerspective: this.getDefaultInfrastructurePerspective(),\n            currentOcpPerspective: this.getDefaultOcpPerspective(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { awsProviders, azureProviders, gcpProviders, ocpProviders, userAccess } = this.props;\n        // Note: User access and providers are fetched via the Permissions and InactiveSources components used by all routes\n        if (prevProps.userAccess !== userAccess ||\n            prevProps.awsProviders !== awsProviders ||\n            prevProps.azureProviders !== azureProviders ||\n            prevProps.gcpProviders !== gcpProviders ||\n            prevProps.ocpProviders !== ocpProviders) {\n            this.setState({\n                currentInfrastructurePerspective: this.getDefaultInfrastructurePerspective(),\n                currentOcpPerspective: this.getDefaultOcpPerspective(),\n            });\n        }\n    }\n    render() {\n        const { awsProvidersFetchStatus, azureProvidersFetchStatus, gcpProvidersFetchStatus, ocpProvidersFetchStatus, userAccessFetchStatus, t, } = this.props;\n        const availableTabs = this.getAvailableTabs();\n        const isLoading = awsProvidersFetchStatus === 1 /* inProgress */ ||\n            azureProvidersFetchStatus === 1 /* inProgress */ ||\n            gcpProvidersFetchStatus === 1 /* inProgress */ ||\n            ocpProvidersFetchStatus === 1 /* inProgress */ ||\n            userAccessFetchStatus === 1 /* inProgress */;\n        // Test for no providers\n        const noAwsProviders = !this.isAwsAvailable() && awsProvidersFetchStatus === 2 /* complete */;\n        const noAzureProviders = !this.isAzureAvailable() && azureProvidersFetchStatus === 2 /* complete */;\n        const noGcpProviders = !this.isGcpAvailable() && gcpProvidersFetchStatus === 2 /* complete */;\n        const noOcpProviders = !this.isOcpAvailable() && ocpProvidersFetchStatus === 2 /* complete */;\n        const noProviders = noAwsProviders && noAzureProviders && noGcpProviders && noOcpProviders;\n        const title = t('navigation.overview');\n        if (noProviders) {\n            return React.createElement(NoProviders, { title: title });\n        }\n        else if (isLoading) {\n            return React.createElement(Loading, { title: title });\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"section\", { className: `pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light headerOverride}` },\n                React.createElement(\"header\", { className: \"pf-u-display-flex pf-u-justify-content-space-between pf-u-align-items-center\" },\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"2xl\" },\n                        t('overview.title'),\n                        React.createElement(\"span\", { style: styles.infoIcon },\n                            React.createElement(Popover, { \"aria-label\": t('ocp_details.supplementary_aria_label'), enableFlip: true, bodyContent: React.createElement(React.Fragment, null,\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.ocp_cloud')),\n                                    React.createElement(\"p\", null, t('overview.ocp_cloud_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.ocp')),\n                                    React.createElement(\"p\", null, t('overview.ocp_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.gcp')),\n                                    React.createElement(\"p\", null, t('overview.gcp_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.aws')),\n                                    React.createElement(\"p\", null, t('overview.aws_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.azure')),\n                                    React.createElement(\"p\", null, t('overview.azure_desc'))) },\n                                React.createElement(Button, { variant: ButtonVariant.plain },\n                                    React.createElement(OutlinedQuestionCircleIcon, null)))))),\n                React.createElement(\"div\", { style: styles.tabs }, this.getTabs(availableTabs)),\n                React.createElement(\"div\", { style: styles.perspective }, this.getPerspective())),\n            React.createElement(\"section\", { className: \"pf-l-page__main-section pf-c-page__main-section\", \"page-type\": \"cost-management-overview\" }, this.getTabContent(availableTabs))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const awsProvidersQueryString = getProvidersQuery(awsProvidersQuery);\n    const awsProviders = providersSelectors.selectProviders(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const awsProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const azureProvidersQueryString = getProvidersQuery(azureProvidersQuery);\n    const azureProviders = providersSelectors.selectProviders(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const azureProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const gcpProvidersQueryString = getProvidersQuery(gcpProvidersQuery);\n    const gcpProviders = providersSelectors.selectProviders(state, \"gcp\" /* gcp */, gcpProvidersQueryString);\n    const gcpProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"gcp\" /* gcp */, gcpProvidersQueryString);\n    const ocpProvidersQueryString = getProvidersQuery(ocpProvidersQuery);\n    const ocpProviders = providersSelectors.selectProviders(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    const ocpProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    const userAccessQueryString = getUserAccessQuery(allUserAccessQuery);\n    const userAccess = userAccessSelectors.selectUserAccess(state, \"\" /* all */, userAccessQueryString);\n    const userAccessError = userAccessSelectors.selectUserAccessError(state, \"\" /* all */, userAccessQueryString);\n    const userAccessFetchStatus = userAccessSelectors.selectUserAccessFetchStatus(state, \"\" /* all */, userAccessQueryString);\n    return {\n        awsProviders,\n        awsProvidersFetchStatus,\n        awsProvidersQueryString,\n        azureProviders,\n        azureProvidersFetchStatus,\n        azureProvidersQueryString,\n        gcpProviders,\n        gcpProvidersFetchStatus,\n        gcpProvidersQueryString,\n        ocpProviders,\n        ocpProvidersFetchStatus,\n        ocpProvidersQueryString,\n        userAccess,\n        userAccessError,\n        userAccessFetchStatus,\n        userAccessQueryString,\n    };\n});\nconst Overview = withTranslation()(connect(mapStateToProps)(OverviewBase));\nexport default Overview;\n","import Overview from './overview';\nexport default Overview;\n","export const unitLookupKey = unit => {\n    const lookup = unit ? unit.toLowerCase() : '';\n    switch (lookup) {\n        case 'usd':\n        case 'gb':\n        case 'gb-hours':\n        case 'gb-mo':\n        case 'core-hours':\n        case 'hrs':\n        case 'tag-mo':\n        case 'vm-hours':\n            return lookup;\n        default:\n            return '';\n    }\n};\nexport const formatValue = (value, unit, options = {}) => {\n    const lookup = unitLookupKey(unit);\n    const fValue = value || 0;\n    switch (lookup) {\n        case 'usd':\n            return formatCurrency(fValue, lookup, options);\n        case 'gb':\n        case 'gb-hours':\n        case 'gb-mo':\n        case 'tag-mo':\n        case 'vm-hours':\n            return formatUsageGb(fValue, lookup, options);\n        case 'core-hours':\n        case 'hrs':\n            return formatUsageHrs(fValue, lookup, options);\n        default:\n            return unknownTypeFormatter(fValue, lookup, options);\n    }\n};\nconst unknownTypeFormatter = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatCurrency = (value, unit, { fractionDigits = 2 } = {}) => {\n    let fValue = value;\n    if (!value) {\n        fValue = 0;\n    }\n    return fValue.toLocaleString('en', {\n        style: 'currency',\n        currency: unit || 'USD',\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatUsageGb = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatUsageHrs = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\n","import { sort } from 'utils/sort';\nexport function getComputedForecastItems({ forecast, sortDirection = 0 /* asc */, sortKey = 'date', }) {\n    return sort(getUnsortedComputedForecastItems({\n        forecast,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nfunction getCostData(val, key, item) {\n    return {\n        confidence_max: {\n            value: item\n                ? item[key].confidence_max.value\n                : 0 + val[key] && val[key].confidence_max\n                    ? val[key].confidence_max.value\n                    : 0,\n            units: val[key] && val[key].confidence_max ? val[key].confidence_max.units : 'USD',\n        },\n        confidence_min: {\n            value: item\n                ? item[key].confidence_min.value\n                : 0 + val[key] && val[key].confidence_min\n                    ? val[key].confidence_min.value\n                    : 0,\n            units: val[key] && val[key].confidence_min ? val[key].confidence_min.units : 'USD',\n        },\n        pvalues: {\n            value: val[key] && val[key].pvalues ? Number(val[key].pvalues.value) : 0,\n            units: val[key] && val[key].pvalues ? val[key].pvalues.units : null,\n        },\n        rsquared: {\n            value: val[key] && val[key].rsquared ? Number(val[key].rsquared.value) : 0,\n            units: val[key] && val[key].rsquared ? val[key].rsquared.units : null,\n        },\n        total: {\n            value: item ? item[key].total.value : 0 + val[key] && val[key].total ? val[key].total.value : 0,\n            units: val[key] && val[key].total ? val[key].total.units : 'USD',\n        },\n    };\n}\nexport function getUnsortedComputedForecastItems({ forecast, }) {\n    if (!forecast) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint && dataPoint.values) {\n            dataPoint.values.forEach((val) => {\n                const date = val.date;\n                const item = itemMap.get(date);\n                if (item) {\n                    // This code block is typically entered with filter[resolution]=monthly\n                    itemMap.set(date, Object.assign(Object.assign({}, item), { date, cost: getCostData(val, 'cost', item), infrastructure: getCostData(val, 'infrastructure', item), supplementary: getCostData(val, 'supplementary', item) }));\n                }\n                else {\n                    // This code block is typically entered with filter[resolution]=daily\n                    itemMap.set(date, {\n                        date,\n                        cost: getCostData(val, 'cost'),\n                        infrastructure: getCostData(val, 'infrastructure'),\n                        supplementary: getCostData(val, 'supplementary'),\n                    });\n                }\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (forecast && forecast.data) {\n        forecast.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\n","import endOfMonth from 'date-fns/end_of_month';\nimport format from 'date-fns/format';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getYear from 'date-fns/get_year';\nimport startOfMonth from 'date-fns/start_of_month';\nimport i18next from 'i18next';\nimport { getComputedForecastItems } from 'utils/computedForecast/getComputedForecastItems';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { unitLookupKey } from 'utils/formatValue';\nexport function transformForecast(forecast, type = 1 /* daily */, forecastItem = 'cost', forecastItemValue = 'total') {\n    if (!forecast) {\n        return [];\n    }\n    const items = {\n        forecast,\n        sortKey: 'date',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedForecastItems(items);\n    let chartDatums;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        chartDatums = computedItems.map(i => createForecastDatum(i[forecastItem][forecastItemValue].value, i));\n    }\n    else {\n        chartDatums = computedItems.reduce((acc, d) => {\n            const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n            return [...acc, createForecastDatum(prevValue + d[forecastItem][forecastItemValue].value, d)];\n        }, []);\n    }\n    return padChartDatums(chartDatums, type);\n}\nexport function transformForecastCone(forecast, type = 1 /* daily */, forecastItem = 'cost', forecastItemValue = 'total') {\n    if (!forecast) {\n        return [];\n    }\n    const items = {\n        forecast,\n        sortKey: 'date',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedForecastItems(items);\n    let chartDatums;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        chartDatums = computedItems.map(i => createForecastConeDatum(i[forecastItem].confidence_max.value, i[forecastItem].confidence_min.value, i));\n    }\n    else {\n        chartDatums = computedItems.reduce((acc, d) => {\n            const prevMaxValue = acc.length ? acc[acc.length - 1].y : d[forecastItem][forecastItemValue].value;\n            const prevMinValue = acc.length ? acc[acc.length - 1].y0 : d[forecastItem][forecastItemValue].value;\n            return [\n                ...acc,\n                createForecastConeDatum(prevMaxValue + d[forecastItem].confidence_max.value, prevMinValue + d[forecastItem].confidence_min.value, d),\n            ];\n        }, []);\n    }\n    return padChartDatums(chartDatums, type);\n}\nexport function transformReport(report, type = 1 /* daily */, idKey = 'date', reportItem = 'cost', reportItemValue = 'total' // useful for infrastructure.usage values\n) {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        idKey,\n        report,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedReportItems(items);\n    let chartDatums;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        chartDatums = computedItems.map(i => {\n            const val = i[reportItem][reportItemValue] ? i[reportItem][reportItemValue].value : i[reportItem].value;\n            return createReportDatum(val, i, idKey, reportItem, reportItemValue);\n        });\n    }\n    else {\n        chartDatums = computedItems.reduce((acc, d) => {\n            const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n            const val = d[reportItem][reportItemValue] ? d[reportItem][reportItemValue].value : d[reportItem].value;\n            return [...acc, createReportDatum(prevValue + val, d, idKey, reportItem, reportItemValue)];\n        }, []);\n    }\n    return idKey === 'date' ? padChartDatums(chartDatums, type) : chartDatums;\n}\nexport function createForecastDatum(value, computedItem, forecastItem = 'cost', forecastItemValue = 'total') {\n    const xVal = getDate(computedItem.date);\n    const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n    return {\n        x: xVal,\n        y: value === null ? null : yVal,\n        key: computedItem.date,\n        units: computedItem[forecastItem] && computedItem[forecastItem][forecastItemValue]\n            ? computedItem[forecastItem][forecastItemValue].units\n            : undefined,\n    };\n}\nexport function createForecastConeDatum(maxValue, minValue, computedItem, forecastItem = 'cost', forecastItemValue = 'total') {\n    const xVal = getDate(computedItem.date);\n    const yVal = isFloat(maxValue) ? parseFloat(maxValue.toFixed(2)) : isInt(maxValue) ? maxValue : 0;\n    const y0Val = isFloat(minValue) ? parseFloat(minValue.toFixed(2)) : isInt(minValue) ? minValue : 0;\n    return {\n        x: xVal,\n        y: maxValue === null ? null : yVal,\n        y0: minValue === null ? null : y0Val,\n        key: computedItem.date,\n        units: computedItem[forecastItem] && computedItem[forecastItem][forecastItemValue]\n            ? computedItem[forecastItem][forecastItemValue].units\n            : undefined,\n    };\n}\nexport function createReportDatum(value, computedItem, idKey = 'date', reportItem = 'cost', reportItemValue = 'total' // useful for infrastructure.usage values\n) {\n    const xVal = idKey === 'date' ? getDate(computedItem.id) : computedItem.label;\n    const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n    return {\n        x: xVal,\n        y: value === null ? null : yVal,\n        key: computedItem.id,\n        units: computedItem[reportItem]\n            ? computedItem[reportItem][reportItemValue]\n                ? computedItem[reportItem][reportItemValue].units // cost, infrastructure, supplementary\n                : computedItem[reportItem].units // capacity, limit, request, usage\n            : undefined,\n    };\n}\n// Fill in missing data with previous value to represent cumulative daily cost\nexport function fillChartDatums(datums, type = 1 /* daily */) {\n    const result = [];\n    if (!datums || datums.length === 0) {\n        return result;\n    }\n    const firstDate = new Date(datums[0].key + 'T00:00:00');\n    const lastDate = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    const padDate = startOfMonth(firstDate);\n    let prevChartDatum;\n    for (let i = padDate.getDate(); i <= endOfMonth(lastDate).getDate(); i++) {\n        padDate.setDate(i);\n        const id = formatDate(padDate, 'YYYY-MM-DD');\n        const chartDatum = datums.find(val => val.key === id);\n        if (chartDatum) {\n            result.push(chartDatum);\n        }\n        else if (prevChartDatum) {\n            result.push(Object.assign(Object.assign({}, prevChartDatum), { key: id, x: getDate(id) }));\n        }\n        if (chartDatum) {\n            // Note: We want to identify missing data, but charts won't extrapolate (connect data points) if we return null here\n            // for missing daily values. For example, if there is only data for the first and last day of the month, charts would\n            // typically draw a line between two points by default. However, showing \"no data\" is more obvious there was a problem.\n            if (type === 1 /* daily */) {\n                prevChartDatum = {\n                    key: id,\n                    x: getDate(id),\n                    y: null,\n                };\n            }\n            else {\n                prevChartDatum = chartDatum;\n            }\n        }\n    }\n    return result;\n}\n// This pads chart datums with null datum objects, representing missing data at the beginning and end of the\n// data series. The remaining data is left as is to allow for extrapolation. This allows us to display a \"no data\"\n// message in the tooltip, which helps distinguish between zero values and when there is no data available.\nexport function padChartDatums(datums, type = 1 /* daily */) {\n    const result = [];\n    if (!datums || datums.length === 0) {\n        return result;\n    }\n    const firstDate = new Date(datums[0].key + 'T00:00:00');\n    const lastDate = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    // Pad start for missing data\n    let padDate = startOfMonth(firstDate);\n    for (let i = padDate.getDate(); i < firstDate.getDate(); i++) {\n        padDate.setDate(i);\n        const id = formatDate(padDate, 'YYYY-MM-DD');\n        result.push(createReportDatum(null, { id }, 'date', null));\n    }\n    // Fill middle with existing data\n    result.push(...datums);\n    // Pad end for missing data\n    padDate = new Date(lastDate);\n    for (let i = padDate.getDate() + 1; i <= endOfMonth(lastDate).getDate(); i++) {\n        padDate.setDate(i);\n        const id = formatDate(padDate, 'YYYY-MM-DD');\n        result.push(createReportDatum(null, { id }, 'date', null));\n    }\n    return fillChartDatums(result, type);\n}\nexport function getDatumDateRange(datums, offset = 0) {\n    if (!(datums && datums.length)) {\n        const today = new Date();\n        // If datums is empty, obtain the month based on offset (e.g., to show previous month in chart legends)\n        if (offset) {\n            today.setMonth(today.getMonth() - offset);\n        }\n        const firstOfMonth = startOfMonth(today);\n        return [firstOfMonth, today];\n    }\n    // Find the first populated (non-null) day\n    let firstDay = 0;\n    for (let i = firstDay; i < datums.length; i++) {\n        if (datums[i].y && datums[i].y !== null) {\n            firstDay = i;\n            break;\n        }\n    }\n    // Find the last populated (non-null) day\n    let lastDay = datums.length - 1;\n    for (let i = lastDay; i >= 0; i--) {\n        if (datums[i].y && datums[i].y !== null) {\n            lastDay = i;\n            break;\n        }\n    }\n    const start = new Date(datums[firstDay].key + 'T00:00:00');\n    const end = new Date(datums[lastDay].key + 'T00:00:00');\n    return [start, end];\n}\nexport function getDateRange(datums, firstOfMonth = true, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDatumDateRange(datums, offset);\n    // Show the date range we are trying to cover (i.e., days 1-30/31)\n    if (firstOfMonth && start.setDate) {\n        start.setDate(1);\n    }\n    if (lastOfMonth && start.setDate) {\n        const lastDate = endOfMonth(start).getDate();\n        end.setDate(lastDate);\n    }\n    return [start, end];\n}\nexport function getDateRangeString(datums, firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(`chart.date_range`, {\n        count: getDate(end),\n        endDate: formatDate(end, 'DD'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'DD'),\n        year: getYear(end),\n    });\n}\nexport function getMonthRangeString(datums, key = 'chart.month_legend_label', offset = 0) {\n    const [start, end] = getDateRange(datums, true, false, offset);\n    return [\n        i18next.t(key, {\n            month: Number(formatDate(start, 'M')) - 1,\n        }),\n        i18next.t(key, {\n            month: Number(formatDate(end, 'M')) - 1,\n        }),\n    ];\n}\nexport function getMaxValue(datums) {\n    let max = 0;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            if (datum.y > max) {\n                max = datum.y;\n            }\n        });\n    }\n    return max;\n}\nexport function getMaxMinValues(datums) {\n    let max = -1;\n    let min = -1;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            const maxY = datum.y0 !== undefined ? Math.max(datum.y, datum.y0) : datum.y;\n            const minY = datum.y0 !== undefined ? Math.min(datum.y, datum.y0) : datum.y;\n            if (maxY > max) {\n                max = maxY;\n            }\n            if ((min === -1 || minY < min) && minY !== null) {\n                min = minY;\n            }\n        });\n    }\n    return { max, min };\n}\nexport function getTooltipContent(formatValue) {\n    return function labelFormatter(value, unit = null, options = {}) {\n        const lookup = unitLookupKey(unit);\n        switch (lookup) {\n            case 'core-hours':\n            case 'hrs':\n            case 'gb':\n            case 'gb-hours':\n            case 'gb-mo':\n            case 'vm-hours':\n                return i18next.t(`unit_tooltips.${lookup}`, {\n                    value: `${formatValue(value, unit, options)}`,\n                });\n            default:\n                return `${formatValue(value, unit, options)}`;\n        }\n    };\n}\nexport function getTooltipLabel(datum, formatValue, formatOptions, idKey = 'date', units) {\n    if (!datum.key) {\n        return '';\n    }\n    if (idKey === 'date') {\n        const date = format(datum.key, 'DD MMM YYYY');\n        return `${date} ${formatValue(datum.y, units ? units : datum.units, formatOptions)}`;\n    }\n    return datum.key.toString();\n}\nexport function getCostRangeString(datums, key = 'chart.cost_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    if (!(datums && datums.length)) {\n        return i18next.t(`${key}_no_data`);\n    }\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(key, {\n        count: getDate(end),\n        endDate: formatDate(end, 'D'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'D'),\n        year: getYear(end),\n    });\n}\nexport function getUsageRangeString(datums, key = 'chart.usage_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    return getCostRangeString(datums, key, firstOfMonth, lastOfMonth, offset);\n}\nexport function isInt(n) {\n    return Number(n) === n && n % 1 === 0;\n}\nexport function isFloat(n) {\n    return Number(n) === n && n % 1 !== 0;\n}\n","import { getInteractiveLegendItemStyles } from '@patternfly/react-charts';\nimport i18next from 'i18next';\nimport { getMaxMinValues, getTooltipContent } from './chartDatumUtils';\n// Returns groups of chart names associated with each data series\nexport const getChartNames = (series) => {\n    const result = [];\n    if (series) {\n        series.map(serie => {\n            // Each group of chart names are hidden / shown together\n            result.push(serie.childName);\n        });\n    }\n    return result;\n};\nexport const getDomain = (series, hiddenSeries) => {\n    const domain = { x: [1, 31] };\n    let maxValue = -1;\n    let minValue = -1;\n    if (series) {\n        series.forEach((s, index) => {\n            if (!isSeriesHidden(hiddenSeries, index) && s.data && s.data.length !== 0) {\n                const { max, min } = getMaxMinValues(s.data);\n                maxValue = Math.max(maxValue, max);\n                if (minValue === -1) {\n                    minValue = min;\n                }\n                else {\n                    minValue = Math.min(minValue, min);\n                }\n            }\n        });\n    }\n    const threshold = maxValue * 0.1;\n    const max = maxValue > 0 ? Math.ceil(maxValue + threshold) : 0;\n    const _min = minValue > 0 ? Math.max(0, Math.floor(minValue - threshold)) : 0;\n    const min = _min > 0 ? _min : 0;\n    if (max > 0) {\n        domain.y = [min, max];\n    }\n    return domain;\n};\n// Returns legend data styled per hiddenSeries\nexport const getLegendData = (series, hiddenSeries, tooltip = false) => {\n    if (!series) {\n        return undefined;\n    }\n    const result = series.map((s, index) => {\n        const data = Object.assign(Object.assign(Object.assign({ childName: s.childName }, s.legendItem), (tooltip && { name: s.legendItem.tooltip })), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n        return data;\n    });\n    return tooltip ? result : result.filter(d => d.childName.indexOf('Cone') === -1);\n};\n// Note: Forecast is expected to use both datum.y and datum.y0\nexport const getTooltipLabel = (datum, formatDatumValue, formatDatumOptions) => {\n    const formatter = getTooltipContent(formatDatumValue);\n    const dy = datum.y !== undefined && datum.y !== null ? formatter(datum.y, datum.units, formatDatumOptions) : undefined;\n    const dy0 = datum.y0 !== undefined && datum.y0 !== null ? formatter(datum.y0, datum.units, formatDatumOptions) : undefined;\n    if (dy !== undefined && dy0 !== undefined) {\n        return i18next.t('chart.cost_forecast_cone_tooltip', { value0: dy0, value1: dy });\n    }\n    return dy !== undefined ? dy : i18next.t('chart.no_data');\n};\nexport const initHiddenSeries = (series, hiddenSeries, index) => {\n    const result = new Set(hiddenSeries);\n    if (!result.delete(index)) {\n        result.add(index);\n    }\n    // Toggle forecast confidence\n    const childName = series[index].childName;\n    if (childName.indexOf('forecast') !== -1) {\n        let _index;\n        for (let i = 0; i < series.length; i++) {\n            if (series[i].childName === `${childName}Cone`) {\n                _index = i;\n                break;\n            }\n        }\n        if (index !== undefined && !result.delete(_index)) {\n            result.add(_index);\n        }\n    }\n    return result;\n};\n// Returns true if at least one data series is available\nexport const isDataAvailable = (series, hiddenSeries) => {\n    const unavailable = []; // API data may not be available (e.g., on 1st of month)\n    if (series) {\n        series.forEach((s, index) => {\n            if (isSeriesHidden(hiddenSeries, index) || (s.data && s.data.length === 0)) {\n                unavailable.push(index);\n            }\n        });\n    }\n    return unavailable.length !== (series ? series.length : 0);\n};\n// Returns true if data series is hidden\nexport const isDataHidden = (series, hiddenSeries, data) => {\n    if (data && data.length) {\n        for (let keys = hiddenSeries.keys(), key; !(key = keys.next()).done;) {\n            let dataChildName;\n            let serieChildName;\n            for (const item of data) {\n                if (item.childName) {\n                    dataChildName = item.childName;\n                    break;\n                }\n            }\n            for (const item of series[key.value].data) {\n                if (item.childName) {\n                    serieChildName = item.childName;\n                    break;\n                }\n            }\n            if (serieChildName && dataChildName && serieChildName === dataChildName) {\n                return true;\n            }\n        }\n    }\n    return false;\n};\n// Returns true if data series is hidden\nexport const isSeriesHidden = (hiddenSeries, index) => {\n    return hiddenSeries.has(index);\n};\n","// Layout\nconst LAYOUT_PROPS = {\n    padding: 8,\n};\n// Victory theme properties only\nexport default {\n    area: Object.assign({}, LAYOUT_PROPS),\n    axis: Object.assign({}, LAYOUT_PROPS),\n    bar: Object.assign({}, LAYOUT_PROPS),\n    boxplot: Object.assign({}, LAYOUT_PROPS),\n    candlestick: Object.assign({}, LAYOUT_PROPS),\n    chart: Object.assign({}, LAYOUT_PROPS),\n    errorbar: Object.assign({}, LAYOUT_PROPS),\n    group: Object.assign({}, LAYOUT_PROPS),\n    legend: {},\n    line: Object.assign({}, LAYOUT_PROPS),\n    pie: Object.assign({}, LAYOUT_PROPS),\n    scatter: Object.assign({}, LAYOUT_PROPS),\n    stack: Object.assign({}, LAYOUT_PROPS),\n    tooltip: {},\n    voronoi: Object.assign({}, LAYOUT_PROPS),\n};\n","import getTheme from './theme-utils';\nconst ChartTheme = getTheme();\nexport default ChartTheme;\n","import { ChartThemeColor, ChartThemeVariant, getCustomTheme } from '@patternfly/react-charts';\nimport { default as ChartTheme } from './theme-koku';\n// Applies theme color and variant to base theme\nconst getTheme = () => getCustomTheme(ChartThemeColor.default, ChartThemeVariant.default, ChartTheme);\nexport default getTheme;\n","import { sort } from 'utils/sort';\nimport { getItemLabel } from './getItemLabel';\nexport function getComputedReportItems({ daily, idKey, report, sortDirection = 0 /* asc */, sortKey = 'date', }) {\n    return sort(getUnsortedComputedReportItems({\n        daily,\n        idKey,\n        report,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nfunction getCostData(val, key, item) {\n    return {\n        markup: {\n            value: (item ? item[key].markup.value : 0) + val[key] && val[key].markup ? val[key].markup.value : 0,\n            units: val[key] && val[key].markup ? val[key].markup.units : 'USD',\n        },\n        raw: {\n            value: (item ? item[key].raw.value : 0) + val[key] && val[key].raw ? val[key].raw.value : 0,\n            units: val[key] && val[key].raw ? val[key].raw.units : 'USD',\n        },\n        total: {\n            value: (item ? item[key].total.value : 0) + val[key] && val[key].total ? Number(val[key].total.value) : 0,\n            units: val[key] && val[key].total ? val[key].total.units : null,\n        },\n        usage: {\n            value: (item ? item[key].usage.value : 0) + val[key] && val[key].usage ? Number(val[key].usage.value) : 0,\n            units: val[key] && val[key].usage ? val[key].usage.units : null,\n        },\n    };\n}\nfunction getUsageData(val, item) {\n    return {\n        capacity: {\n            value: (item ? item.capacity.value : 0) + val.capacity ? val.capacity.value : 0,\n            units: val.capacity ? val.capacity.units : 'Core-Hours',\n        },\n        limit: {\n            value: (item ? item.limit.value : 0) + val.limit ? val.limit.value : 0,\n            units: val.limit ? val.limit.units : 'Core-Hours',\n        },\n        request: {\n            value: (item ? item.request.value : 0) + val.request ? val.request.value : 0,\n            units: val.request ? val.request.units : 'Core-Hours',\n        },\n        usage: {\n            value: (item ? item.usage.value : 0) + val.usage ? val.usage.value : 0,\n            units: val.usage ? val.usage.units : 'Core-Hours',\n        },\n    };\n}\n// Details pages typically use this function with filter[resolution]=monthly\nexport function getUnsortedComputedReportItems({ daily = false, report, idKey, }) {\n    if (!report) {\n        return [];\n    }\n    // Map<string | number, ComputedReportItem | Map<string | number, ComputedReportItem>\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint && dataPoint.values) {\n            const type = dataPoint.type;\n            dataPoint.values.forEach((val) => {\n                // Ensure unique map IDs -- https://github.com/project-koku/koku-ui/issues/706\n                const idSuffix = idKey !== 'date' && idKey !== 'cluster' && val.cluster ? `-${val.cluster}` : '';\n                // org_unit_id workaround for storage and instance-type APIs\n                let id = idKey === 'org_entities' ? val.org_unit_id : val[idKey];\n                if (id === undefined) {\n                    id = val.date; // Note: There is no longer val.id\n                }\n                const mapId = `${id}${idSuffix}`;\n                // 'clusters' will contain either the cluster alias or default cluster ID\n                const cluster_alias = val.clusters && val.clusters.length > 0 ? val.clusters[0] : undefined;\n                const cluster = cluster_alias || val.cluster;\n                const clusters = val.clusters ? val.clusters : [];\n                const date = val.date;\n                const delta_percent = val.delta_percent ? val.delta_percent : 0;\n                const delta_value = val.delta_value ? val.delta_value : 0;\n                const source_uuid = val.source_uuid ? val.source_uuid : [];\n                let label;\n                const itemLabelKey = getItemLabel({ report, idKey, value: val });\n                if (itemLabelKey === 'org_entities' && val.alias) {\n                    label = val.alias;\n                }\n                else if (itemLabelKey === 'account' && val.account_alias) {\n                    label = val.account_alias;\n                }\n                else if (itemLabelKey === 'cluster' && cluster_alias) {\n                    label = cluster_alias;\n                }\n                else if (val[itemLabelKey] instanceof Object) {\n                    label = val[itemLabelKey].value;\n                }\n                else {\n                    label = val[itemLabelKey];\n                }\n                if (label === undefined) {\n                    label = val.alias ? val.alias : val[idKey];\n                }\n                if (daily) {\n                    const data = Object.assign(Object.assign({}, getUsageData(val)), { // capacity, limit, request, & usage\n                        cluster,\n                        clusters, cost: getCostData(val, 'cost'), date,\n                        delta_percent,\n                        delta_value,\n                        id, infrastructure: getCostData(val, 'infrastructure'), label,\n                        source_uuid, supplementary: getCostData(val, 'supplementary'), type });\n                    const item = itemMap.get(mapId);\n                    if (item) {\n                        item.set(date, data);\n                    }\n                    else {\n                        const dateMap = new Map();\n                        dateMap.set(date, data);\n                        itemMap.set(mapId, dateMap);\n                    }\n                }\n                else {\n                    const item = itemMap.get(mapId);\n                    if (item) {\n                        itemMap.set(mapId, Object.assign(Object.assign(Object.assign({}, item), getUsageData(val, item)), { // capacity, limit, request, & usage\n                            cluster,\n                            clusters,\n                            date,\n                            delta_percent,\n                            delta_value, cost: getCostData(val, 'cost', item), id, infrastructure: getCostData(val, 'infrastructure', item), label,\n                            source_uuid, supplementary: getCostData(val, 'supplementary', item), type }));\n                    }\n                    else {\n                        itemMap.set(mapId, Object.assign(Object.assign({}, getUsageData(val)), { // capacity, limit, request, & usage\n                            cluster,\n                            clusters, cost: getCostData(val, 'cost'), date,\n                            delta_percent,\n                            delta_value,\n                            id, infrastructure: getCostData(val, 'infrastructure'), label,\n                            source_uuid, supplementary: getCostData(val, 'supplementary'), type }));\n                    }\n                }\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\n","import { tagPrefix } from 'api/queries/query';\nexport function getItemLabel({ idKey, report, value }) {\n    let itemLabelKey = String(idKey);\n    if (report.meta && report.meta.group_by) {\n        const group_by = report.meta.group_by;\n        for (const key of Object.keys(group_by)) {\n            if (key.indexOf(tagPrefix)) {\n                const tagPrefixKey = tagPrefix + idKey;\n                if (value.hasOwnProperty(tagPrefixKey)) {\n                    itemLabelKey = tagPrefixKey;\n                }\n            }\n        }\n    }\n    return itemLabelKey;\n}\n","import { parse, stringify } from 'qs';\nexport function getProvidersQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseProvidersQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","import { EmptyState, EmptyStateBody, EmptyStateVariant, Spinner, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst LoadingStateBase = ({ t }) => {\n    const title = t('loading_state.sources_title');\n    const subTitle = t('loading_state.sources_desc');\n    return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n        React.createElement(Spinner, { size: \"lg\" }),\n        React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, title),\n        React.createElement(EmptyStateBody, null, subTitle)));\n};\nconst LoadingState = withTranslation()(LoadingStateBase);\nexport { LoadingState };\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nconst Loading = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(LoadingState, null))));\n};\nexport default withRouter(Loading);\n","import Loading from './loading';\nexport default Loading;\n","function getValueForItem(item, options) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    const sortKey = options.key;\n    return item[sortKey];\n}\nexport function sort(array, options) {\n    const { direction = 0 /* asc */ } = options || {};\n    return [...array].sort((a, b) => {\n        const aVal = direction === 0 /* asc */ ? getValueForItem(a, options) : getValueForItem(b, options);\n        const bVal = direction === 0 /* asc */ ? getValueForItem(b, options) : getValueForItem(a, options);\n        if (aVal > bVal) {\n            return -1;\n        }\n        if (aVal < bVal) {\n            return 1;\n        }\n        return 0;\n    });\n}\n","import './emptyValueState.scss';\nimport { MinusIcon } from '@patternfly/react-icons/dist/js/icons/minus-icon';\nimport React from 'react';\nexport const EmptyValueState = () => {\n    return (React.createElement(\"span\", { className: \"emptyValueContainer\" },\n        React.createElement(MinusIcon, null)));\n};\n","import './costIcon.scss';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst icon = require('./Cost-icon.svg');\nconst CostIcon = ({ className, t }) => {\n    return React.createElement(\"img\", { className: `cost-icon ${className}`, src: icon, alt: t('cost_management'), \"aria-hidden\": \"true\" });\n};\nexport default withTranslation()(CostIcon);\n","import CostIcon from './costIcon';\nexport default CostIcon;\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    iconSpacer: {\n        marginLeft: global_spacer_xs.value,\n    },\n    viewSources: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/js/icons/plus-circle-icon';\nimport CostIcon from 'components/icons/costIcon';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { withRouter } from 'react-router';\nimport { getReleasePath } from 'utils/pathname';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDocLink = (textKey, urlKey) => {\n            const { t } = this.props;\n            return (React.createElement(\"a\", { href: t(urlKey), rel: \"noreferrer\", target: \"_blank\" },\n                t(textKey),\n                React.createElement(\"span\", { style: styles.iconSpacer },\n                    React.createElement(ExternalLinkAltIcon, null))));\n        };\n        this.getRouteToSources = () => {\n            const release = getReleasePath();\n            return `${release}/settings/sources`;\n        };\n    }\n    render() {\n        const { providerType, t } = this.props;\n        let descKey = 'no_providers_state.overview_desc';\n        let titleKey = 'no_providers_state.overview_title';\n        let docUrlKey;\n        let icon;\n        let textKey;\n        switch (providerType) {\n            case \"aws\" /* aws */:\n                descKey = 'no_providers_state.aws_desc';\n                titleKey = 'no_providers_state.aws_title';\n                break;\n            case \"azure\" /* azure */:\n                descKey = 'no_providers_state.azure_desc';\n                titleKey = 'no_providers_state.azure_title';\n                break;\n            case \"gcp\" /* gcp */:\n                descKey = 'no_providers_state.gcp_desc';\n                titleKey = 'no_providers_state.gcp_title';\n                break;\n            case \"ocp\" /* ocp */:\n                descKey = 'no_providers_state.ocp_desc';\n                docUrlKey = 'docs.add_ocp_sources';\n                textKey = 'no_providers_state.ocp_add_sources';\n                titleKey = 'no_providers_state.ocp_title';\n                break;\n            default:\n                icon = CostIcon;\n        }\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: icon ? icon : PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, t(titleKey)),\n            React.createElement(EmptyStateBody, null, t(descKey)),\n            docUrlKey && textKey ? (React.createElement(\"div\", { style: styles.viewSources }, this.getDocLink(textKey, docUrlKey))) : (React.createElement(Button, { variant: \"primary\", component: \"a\", href: this.getRouteToSources() }, t('no_providers_state.get_started')))));\n    }\n}\nconst NoProvidersState = withRouter(withTranslation()(NoProvidersStateBase));\nexport { NoProvidersState };\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { NoProvidersState } from './noProvidersState';\nconst NoProviders = ({ providerType, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(NoProvidersState, { providerType: providerType }))));\n};\nexport default withRouter(NoProviders);\n","import NoProviders from './noProviders';\nexport default NoProviders;\n","import './reportSummary.scss';\nimport { Card, CardBody, CardFooter, CardTitle, Title } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst ReportSummaryBase = ({ children, detailsLink, title, subTitle, status }) => (React.createElement(Card, { className: \"reportSummary\" },\n    React.createElement(CardTitle, null,\n        React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: \"subtitle\" }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { size: \"xs\" }),\n        React.createElement(Skeleton, { className: \"chartSkeleton\", size: \"md\" }),\n        React.createElement(Skeleton, { size: \"sm\" }),\n        React.createElement(Skeleton, { className: \"legendSkeleton\", size: \"xs\" }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst ReportSummary = withTranslation()(ReportSummaryBase);\nexport { ReportSummary };\n","import './reportSummaryAlt.scss';\nimport { Card, CardBody, CardFooter, CardTitle, Grid, GridItem, Title } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst OcpCloudReportSummaryAltBase = ({ children, detailsLink, status, subTitle, tabs, title, }) => (React.createElement(Card, { className: \"reportSummary\" },\n    React.createElement(Grid, { hasGutter: true },\n        React.createElement(GridItem, { xl: 8 },\n            React.createElement(\"div\", { className: \"cost\" },\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, title),\n                    Boolean(subTitle) && React.createElement(\"p\", { className: \"subtitle\" }, subTitle)),\n                React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { size: \"xs\" }),\n                    React.createElement(Skeleton, { className: \"chartSkeleton\", size: \"md\" }),\n                    React.createElement(Skeleton, { size: \"sm\" }),\n                    React.createElement(Skeleton, { className: \"legendSkeleton\", size: \"xs\" }))) : (children)))),\n        React.createElement(GridItem, { xl: 4 },\n            React.createElement(\"div\", { className: \"tops\" }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink))))))));\nconst ReportSummaryAlt = withTranslation()(OcpCloudReportSummaryAltBase);\nexport { ReportSummaryAlt };\n","import './reportSummaryDetails.scss';\nimport { Tooltip } from '@patternfly/react-core';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nconst ReportSummaryDetailsBase = ({ chartType, computedReportItem = 'cost', computedReportItemValue = 'total', costLabel, formatValue, formatOptions, report, requestFormatOptions, requestLabel, reportType, showTooltip = false, showUnits = false, showUsageFirst = false, t, units, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let supplementaryCost = React.createElement(EmptyValueState, null);\n    let infrastructureCost = React.createElement(EmptyValueState, null);\n    let request = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    const hasTotal = report && report.meta && report.meta.total;\n    const hasCost = hasTotal && report.meta.total.cost && report.meta.total.cost.total;\n    const hasCount = hasTotal && report.meta.total.count;\n    const hasSupplementaryCost = hasTotal &&\n        report.meta.total.supplementary &&\n        report.meta.total.supplementary.total &&\n        report.meta.total.supplementary.total.value;\n    const hasInfrastructureCost = hasTotal &&\n        report.meta.total.infrastructure &&\n        report.meta.total.infrastructure[computedReportItemValue] &&\n        report.meta.total.infrastructure[computedReportItemValue].value;\n    const hasRequest = hasTotal && report.meta.total.request;\n    const hasUsage = hasTotal && report.meta.total.usage;\n    if (hasTotal) {\n        cost = formatValue(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD', formatOptions);\n        supplementaryCost = formatValue(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost ? report.meta.total.supplementary.total.units : 'USD', formatOptions);\n        infrastructureCost = formatValue(hasInfrastructureCost ? report.meta.total.infrastructure[computedReportItemValue].value : 0, hasInfrastructureCost ? report.meta.total.infrastructure[computedReportItemValue].units : 'USD', formatOptions);\n        request = formatValue(hasRequest ? report.meta.total.request.value : 0, hasRequest ? report.meta.total.request.units : '', requestFormatOptions ? usageFormatOptions : formatOptions);\n        if (hasUsage && report.meta.total.usage.value >= 0) {\n            usage = formatValue(hasUsage ? report.meta.total.usage.value : 0, hasUsage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n        else {\n            // Workaround for https://github.com/project-koku/koku-ui/issues/1058\n            usage = formatValue(hasUsage ? report.meta.total.usage : 0, hasCount ? report.meta.total.count.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n    }\n    const getCostLayout = (showAltHeroFont = false) => {\n        let value = cost;\n        if (computedReportItem === \"infrastructure\" /* infrastructure */) {\n            value = infrastructureCost;\n        }\n        else if (computedReportItem === \"supplementary\" /* supplementary */) {\n            value = supplementaryCost;\n        }\n        const altHeroFont = showAltHeroFont ? 'Alt' : '';\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            showTooltip ? (React.createElement(Tooltip, { content: t('dashboard.total_cost_tooltip', {\n                    infrastructureCost,\n                    supplementaryCost,\n                }), enableFlip: true },\n                React.createElement(\"div\", { className: `value${altHeroFont}` }, value))) : (React.createElement(\"div\", { className: `value${altHeroFont}` }, value)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, costLabel))));\n    };\n    const getRequestLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasRequest ? report.meta.total.request.units : '';\n        const _units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            React.createElement(\"span\", { className: \"value\" }, request),\n            Boolean(showUnits && (units || (hasRequest && report.meta.total.request.value >= 0))) && (React.createElement(\"span\", { className: \"units\" }, unitsLabel)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, requestLabel))));\n    };\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasUsage ? report.meta.total.usage.units : '';\n        // added as a work-around for azure #1079\n        const _units = unitLookupKey(units ? units : usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            React.createElement(\"span\", { className: \"value\" }, usage),\n            Boolean(showUnits && (units || (hasUsage && report.meta.total.usage.value >= 0))) && (React.createElement(\"span\", { className: \"units\" }, unitsLabel)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (chartType === \"dailyCost\" /* dailyCost */ ||\n        chartType === \"dailyTrend\" /* dailyTrend */ ||\n        chartType === \"cost\" /* cost */) {\n        return React.createElement(React.Fragment, null, getCostLayout(reportType === \"cost\" /* cost */));\n    }\n    else if (chartType === \"trend\" /* trend */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getCostLayout(reportType === \"cost\" /* cost */)));\n        }\n        return (React.createElement(React.Fragment, null,\n            getCostLayout(reportType === \"cost\" /* cost */),\n            getUsageLayout()));\n    }\n    else if (chartType === \"usage\" /* usage */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getRequestLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getRequestLayout(),\n            getUsageLayout()));\n    }\n    else {\n        return null;\n    }\n};\nconst ReportSummaryDetails = withTranslation()(ReportSummaryDetailsBase);\nexport { ReportSummaryDetails };\n","import './reportSummaryItem.scss';\nimport { Progress, ProgressSize } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nconst ReportSummaryItemBase = ({ label, formatOptions, formatValue, t, totalValue, units, value, }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: \"reportSummaryItem\" },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst ReportSummaryItem = withTranslation()(ReportSummaryItemBase);\nexport { ReportSummaryItem };\n","import './reportSummaryItems.scss';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { getComputedReportItems, } from 'utils/computedReport/getComputedReportItems';\nclass ReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { idKey, report } = this.props;\n        const computedItems = getComputedReportItems({\n            report,\n            idKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [...computedItems.slice(0, otherIndex), ...computedItems.slice(otherIndex + 1), computedItems[otherIndex]];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: \"md\" }),\n                React.createElement(Skeleton, { size: \"md\", className: \"skeleton\" }),\n                React.createElement(Skeleton, { size: \"md\", className: \"skeleton\" }),\n                React.createElement(Skeleton, { size: \"md\", className: \"skeleton\" })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst ReportSummaryItems = withTranslation()(ReportSummaryItemsBase);\nexport { ReportSummaryItems };\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentCostData: {\n        fill: 'none',\n    },\n    currentInfrastructureColorScale: [\n        chart_color_blue_400.value,\n        chart_color_blue_300.value,\n        chart_color_blue_200.value,\n        chart_color_blue_100.value,\n        chart_color_blue_500.value,\n    ],\n    currentInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    forecastConeData: {\n        fill: chart_color_green_100.value,\n        strokeWidth: 0,\n    },\n    forecastConeDataColorScale: [chart_color_green_100.value],\n    forecastData: {\n        fill: 'none',\n    },\n    forecastDataColorScale: [chart_color_green_200.value],\n    forecastInfrastructureConeData: {\n        fill: chart_color_blue_100.value,\n        strokeWidth: 0,\n    },\n    forecastInfrastructureConeDataColorScale: [chart_color_blue_100.value],\n    forecastInfrastructureData: {\n        fill: 'none',\n    },\n    forecastInfrastructureDataColorScale: [chart_color_blue_200.value],\n    previousCostData: {\n        fill: 'none',\n    },\n    previousInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './costChart.styles';\nclass CostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentInfrastructureCostData, currentCostData, forecastConeData, forecastData, forecastInfrastructureConeData, forecastInfrastructureData, previousInfrastructureCostData, previousCostData, showForecast, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            const costInfrastructureTooltipKey = 'chart.cost_infrastructure_legend_tooltip';\n            const costTooltipKey = 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousCostData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentCostData, costTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentCostData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'previousInfrastructureCost',\n                    data: previousInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(previousInfrastructureCostData, costInfrastructureTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousInfrastructureCostData), { stroke: chartStyles.previousColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'currentInfrastructureCost',\n                    data: currentInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentInfrastructureColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(currentInfrastructureCostData, costInfrastructureTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentInfrastructureCostData), { stroke: chartStyles.currentInfrastructureColorScale[1] }),\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: forecastData,\n                    legendItem: {\n                        name: getCostRangeString(forecastData, 'chart.cost_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, 'chart.cost_forecast_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastData), { stroke: chartStyles.forecastDataColorScale[0] }),\n                    },\n                });\n                series.push({\n                    childName: 'forecastInfrastructure',\n                    data: forecastInfrastructureData,\n                    legendItem: {\n                        name: getCostRangeString(forecastInfrastructureData, 'chart.cost_infrastructure_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastInfrastructureDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastInfrastructureData, 'chart.cost_infrastructure_forecast_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastInfrastructureData), { stroke: chartStyles.forecastInfrastructureDataColorScale[0] }),\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: forecastConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastConeData), { stroke: chartStyles.forecastConeDataColorScale[0] }),\n                    },\n                });\n                series.push({\n                    childName: 'forecastInfrastructureCone',\n                    data: forecastInfrastructureConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastInfrastructureConeData, 'chart.cost_infrastructure_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastInfrastructureConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastInfrastructureConeData, 'chart.cost_infrastructure_forecast_cone_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastInfrastructureConeData), { stroke: chartStyles.forecastInfrastructureConeDataColorScale[0] }),\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, name: \"legend\", responsive: false }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    if (width > 675 && width < 1175) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width > 450 && width < 675) {\n                        adjustedContainerHeight += 50;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 75;\n                    }\n                }\n                else {\n                    if (width > 450 && width < 725) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 50;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentInfrastructureCostData !== this.props.currentInfrastructureCostData ||\n            prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastInfrastructureConeData !== this.props.forecastInfrastructureConeData ||\n            prevProps.forecastInfrastructureData !== this.props.forecastInfrastructureData ||\n            prevProps.previousInfrastructureCostData !== this.props.previousInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, currentCostData, forecastData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const currentInfrastructureDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const currentCostDate = currentCostData ? getDate(getDateRange(currentCostData, true, true)[1]) : 0;\n        const forecastCostDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        const previousInfrastructureDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousCostData ? getDate(getDateRange(previousCostData, true, true)[1]) : 0;\n        return currentInfrastructureDate > 0 ||\n            currentCostDate > 0 ||\n            previousInfrastructureDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentInfrastructureDate, currentCostDate, forecastCostDate, previousInfrastructureDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const lastDate = this.getEndDate();\n        const half = Math.floor(lastDate / 2);\n        const _1stDay = 1;\n        const _2ndDay = _1stDay + Math.floor(half / 2);\n        const _3rdDay = _1stDay + half;\n        const _4thDay = lastDate - Math.floor(half / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            title && (React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [_1stDay, _2ndDay, _3rdDay, _4thDay, lastDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { CostChart };\n","import './reportSummaryCost.scss';\nimport { CostChart } from 'components/charts/costChart';\nimport React from 'react';\nconst ReportSummaryCost = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(CostChart, Object.assign({}, props))));\nexport { ReportSummaryCost };\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { chart_color_orange_300 } from '@patternfly/react-tokens/dist/js/chart_color_orange_300';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentInfrastructureColorScale: [\n        chart_color_blue_400.value,\n        chart_color_blue_300.value,\n        chart_color_blue_200.value,\n        chart_color_blue_100.value,\n        chart_color_blue_500.value,\n    ],\n    currentInfrastructureCostData: {\n        strokeDasharray: '3,3',\n    },\n    forecastConeDataColorScale: [chart_color_orange_300.value],\n    forecastDataColorScale: [chart_color_green_200.value],\n    forecastInfrastructureConeDataColorScale: [chart_color_orange_300.value],\n    forecastInfrastructureDataColorScale: [chart_color_blue_200.value],\n    previousInfrastructureCostData: {\n        strokeDasharray: '3,3',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartAxis, ChartBar, ChartGroup, ChartLegend, ChartLegendTooltip, ChartLine, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getTooltipLabel, initHiddenSeries, isDataAvailable, isDataHidden, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './dailyCostChart.styles';\nclass DailyCostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentInfrastructureCostData, currentCostData, forecastConeData, forecastData, forecastInfrastructureConeData, forecastInfrastructureData, previousInfrastructureCostData, previousCostData, showForecast, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            const costInfrastructureTooltipKey = 'chart.cost_infrastructure_legend_tooltip';\n            const costTooltipKey = 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: this.initDatumChildName(previousCostData, 'previousCost'),\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    isLine: true,\n                    style: {\n                        data: {\n                            stroke: chartStyles.previousColorScale[0],\n                        },\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: this.initDatumChildName(currentCostData, 'currentCost'),\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentCostData, costTooltipKey, false, false),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.currentColorScale[0],\n                        },\n                    },\n                },\n                {\n                    childName: 'previousInfrastructureCost',\n                    data: this.initDatumChildName(previousInfrastructureCostData, 'previousInfrastructureCost'),\n                    legendItem: {\n                        name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(previousInfrastructureCostData, costInfrastructureTooltipKey, false, false, 1),\n                    },\n                    isLine: true,\n                    style: {\n                        data: {\n                            stroke: chartStyles.previousColorScale[1],\n                        },\n                    },\n                },\n                {\n                    childName: 'currentInfrastructureCost',\n                    data: this.initDatumChildName(currentInfrastructureCostData, 'currentInfrastructureCost'),\n                    legendItem: {\n                        name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentInfrastructureColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(currentInfrastructureCostData, costInfrastructureTooltipKey, false, false),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.currentInfrastructureColorScale[1],\n                        },\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: this.initDatumChildName(forecastData, 'forecast'),\n                    legendItem: {\n                        name: getCostRangeString(forecastData, 'chart.cost_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, 'chart.cost_forecast_legend_tooltip', false, false),\n                    },\n                    isBar: true,\n                    isForecast: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                        },\n                    },\n                });\n                series.push({\n                    childName: 'forecastInfrastructure',\n                    data: this.initDatumChildName(forecastInfrastructureData, 'forecastInfrastructure'),\n                    legendItem: {\n                        name: getCostRangeString(forecastInfrastructureData, 'chart.cost_infrastructure_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastInfrastructureDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastInfrastructureData, 'chart.cost_infrastructure_forecast_legend_tooltip', false, false),\n                    },\n                    isBar: true,\n                    isForecast: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastInfrastructureDataColorScale[0],\n                        },\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: this.initDatumChildName(forecastConeData, 'forecastCone'),\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_tooltip', false, false),\n                    },\n                    isForecast: true,\n                    isLine: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                        },\n                    },\n                });\n                series.push({\n                    childName: 'forecastInfrastructureCone',\n                    data: this.initDatumChildName(forecastInfrastructureConeData, 'forecastInfrastructureCone'),\n                    legendItem: {\n                        name: getCostRangeString(forecastInfrastructureConeData, 'chart.cost_infrastructure_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastInfrastructureConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastInfrastructureConeData, 'chart.cost_infrastructure_forecast_cone_legend_tooltip', false, false),\n                    },\n                    isForecast: true,\n                    isLine: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastInfrastructureConeDataColorScale[0],\n                        },\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        // Adds a child name to help identify hidden data series\n        this.initDatumChildName = (data, childName) => {\n            data.map(datum => (datum.childName = childName));\n            return data;\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (!hiddenSeries.has(index) && !series.isForecast) {\n                if (series.isBar) {\n                    return (React.createElement(ChartBar, { alignment: \"middle\", data: series.data, key: series.childName, name: series.childName, style: series.style }));\n                }\n                else if (series.isLine) {\n                    return React.createElement(ChartLine, { data: series.data, key: series.childName, name: series.childName, style: series.style });\n                }\n            }\n            return null;\n        };\n        this.getForecastBarChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (!hiddenSeries.has(index) && series.isForecast && series.isBar) {\n                return (React.createElement(ChartBar, { alignment: \"middle\", data: series.data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        this.getForecastLineChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (!hiddenSeries.has(index) && series.isForecast && series.isLine) {\n                return (React.createElement(ChartBar, { alignment: \"middle\", barWidth: 1, data: series.data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, name: \"legend\", responsive: false }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    if (width > 675 && width < 1175) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width > 450 && width < 675) {\n                        adjustedContainerHeight += 50;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 75;\n                    }\n                }\n                else {\n                    if (width > 450 && width < 725) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 50;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentInfrastructureCostData !== this.props.currentInfrastructureCostData ||\n            prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastInfrastructureConeData !== this.props.forecastInfrastructureConeData ||\n            prevProps.forecastInfrastructureData !== this.props.forecastInfrastructureData ||\n            prevProps.previousInfrastructureCostData !== this.props.previousInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, currentCostData, forecastData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const currentInfrastructureDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const currentCostDate = currentCostData ? getDate(getDateRange(currentCostData, true, true)[1]) : 0;\n        const forecastCostDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        const previousInfrastructureDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousCostData ? getDate(getDateRange(previousCostData, true, true)[1]) : 0;\n        return currentInfrastructureDate > 0 ||\n            currentCostDate > 0 ||\n            previousInfrastructureDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentInfrastructureDate, currentCostDate, forecastCostDate, previousInfrastructureDate, previousUsageDate)\n            : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isDataHidden: data => isDataHidden(series, hiddenSeries, data),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const lastDate = this.getEndDate();\n        const half = Math.floor(lastDate / 2);\n        const _1stDay = 1;\n        const _2ndDay = _1stDay + Math.floor(half / 2);\n        const _3rdDay = _1stDay + half;\n        const _4thDay = lastDate - Math.floor(half / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        // Note: For tooltip values to match properly, chart groups must be rendered in the order given as legend data\n        return (React.createElement(React.Fragment, null,\n            title && (React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 5.5 }, series.map((s, index) => this.getChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 5.5 }, series.map((s, index) => this.getForecastBarChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 5.5 }, series.map((s, index) => this.getForecastLineChart(s, index)))),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [_1stDay, _2ndDay, _3rdDay, _4thDay, lastDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { DailyCostChart };\n","import './reportSummaryDailyCost.scss';\nimport { DailyCostChart } from 'components/charts/dailyCostChart';\nimport React from 'react';\nconst ReportSummaryDailyCost = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(DailyCostChart, Object.assign({}, props))));\nexport { ReportSummaryDailyCost };\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { chart_color_orange_300 } from '@patternfly/react-tokens/dist/js/chart_color_orange_300';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    forecastConeDataColorScale: [chart_color_orange_300.value],\n    forecastDataColorScale: [chart_color_green_200.value],\n    itemsPerRow: 4,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartAxis, ChartBar, ChartGroup, ChartLegend, ChartLegendTooltip, ChartLine, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getTooltipLabel, initHiddenSeries, isDataAvailable, isDataHidden, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './dailyTrendChart.styles';\nclass DailyTrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, forecastData, forecastConeData, previousData, showForecast, showSupplementaryLabel = false, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? 'chart.usage_legend_label'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_label'\n                    : 'chart.cost_legend_label';\n            const tooltipKey = showUsageLegendLabel\n                ? 'chart.usage_legend_tooltip'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_tooltip'\n                    : 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: this.initDatumChildName(previousData, 'previousCost'),\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousData, tooltipKey, false, false, 1),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.previousColorScale[0],\n                        },\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: this.initDatumChildName(currentData, 'currentCost'),\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentData, tooltipKey, false, false),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.currentColorScale[0],\n                        },\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: this.initDatumChildName(forecastData, 'forecast'),\n                    legendItem: {\n                        name: getCostRangeString(forecastData, 'chart.cost_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, 'chart.cost_forecast_legend_tooltip', false, false),\n                    },\n                    isBar: true,\n                    isForecast: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                        },\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: this.initDatumChildName(forecastConeData, 'forecastCone'),\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_tooltip', false, false),\n                    },\n                    isForecast: true,\n                    isLine: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                        },\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        // Adds a child name to help identify hidden data series\n        this.initDatumChildName = (data, childName) => {\n            data.map(datum => (datum.childName = childName));\n            return data;\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (!series.isForecast) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                if (series.isBar) {\n                    return (React.createElement(ChartBar, { alignment: \"middle\", data: data, key: series.childName, name: series.childName, style: series.style }));\n                }\n                else if (series.isLine) {\n                    return React.createElement(ChartLine, { data: data, key: series.childName, name: series.childName, style: series.style });\n                }\n            }\n            return null;\n        };\n        this.getForecastBarChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (series.isForecast && series.isBar) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                return (React.createElement(ChartBar, { alignment: \"middle\", data: data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        this.getForecastLineChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (series.isForecast && series.isLine) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                return (React.createElement(ChartBar, { alignment: \"middle\", barWidth: 1, data: data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 50,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), gutter: 20, height: 25, itemsPerRow: legendItemsPerRow, name: \"legend\", orientation: width > 150 ? 'horizontal' : 'vertical' }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    if (width < 700) {\n                        adjustedContainerHeight += 25;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getEndDate() {\n        const { currentData, forecastData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        const forecastDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0 ? Math.max(currentDate, forecastDate, previousDate) : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isDataHidden: data => isDataHidden(series, hiddenSeries, data),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const lastDate = this.getEndDate();\n        const half = Math.floor(lastDate / 2);\n        const _1stDay = 1;\n        const _2ndDay = _1stDay + Math.floor(half / 2);\n        const _3rdDay = _1stDay + half;\n        const _4thDay = lastDate - Math.floor(half / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        // Note: For tooltip values to match properly, chart groups must be rendered in the order given as legend data\n        return (React.createElement(React.Fragment, null,\n            title && (React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 11 }, series.map((s, index) => this.getChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 11 },\n                            React.createElement(ChartBar, { data: [{ y: null }], name: \"forcast_spacer\" }),\n                            series.map((s, index) => this.getForecastBarChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 11 },\n                            React.createElement(ChartBar, { data: [{ y: null }], name: \"forcast_cone_spacer\" }),\n                            series.map((s, index) => this.getForecastLineChart(s, index)))),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [_1stDay, _2ndDay, _3rdDay, _4thDay, lastDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { DailyTrendChart };\n","import './reportSummaryDailyTrend.scss';\nimport { DailyTrendChart } from 'components/charts/dailyTrendChart';\nimport React from 'react';\nconst ReportSummaryDailyTrend = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(DailyTrendChart, Object.assign({}, props))));\nexport { ReportSummaryDailyTrend };\n","import chart_color_black_200 from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport chart_color_green_100 from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport chart_color_green_200 from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport chart_color_green_300 from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_green_500 from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentMonthData: {\n        fill: 'none',\n    },\n    forecastConeData: {\n        fill: chart_color_green_100.value,\n        strokeWidth: 0,\n    },\n    forecastConeDataColorScale: [chart_color_green_100.value],\n    forecastData: {\n        fill: 'none',\n    },\n    forecastDataColorScale: [chart_color_green_200.value],\n    itemsPerRow: 4,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    previousMonthData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './trendChart.styles';\nclass TrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, forecastData, forecastConeData, previousData, showForecast, showSupplementaryLabel = false, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? 'chart.usage_legend_label'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_label'\n                    : 'chart.cost_legend_label';\n            const tooltipKey = showUsageLegendLabel\n                ? 'chart.usage_legend_tooltip'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_tooltip'\n                    : 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousData,\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousData, tooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousMonthData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentData,\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentData, tooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentMonthData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: forecastData,\n                    legendItem: {\n                        name: getCostRangeString(forecastData, 'chart.cost_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, 'chart.cost_forecast_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastData), { stroke: chartStyles.forecastDataColorScale[0] }),\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: forecastConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastConeData), { stroke: chartStyles.forecastConeDataColorScale[0] }),\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 50,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), gutter: 20, height: 25, itemsPerRow: legendItemsPerRow, name: \"legend\", orientation: width > 150 ? 'horizontal' : 'vertical' }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    if (width < 700) {\n                        adjustedContainerHeight += 25;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getEndDate() {\n        const { currentData, forecastData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        const forecastDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0 ? Math.max(currentDate, forecastDate, previousDate) : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { TrendChart };\n","import './reportSummaryTrend.scss';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nconst ReportSummaryTrend = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { ReportSummaryTrend };\n","import chart_color_black_200 from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport chart_color_green_100 from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport chart_color_green_200 from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport chart_color_green_300 from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_green_500 from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const chartStyles = {\n    chartContainer: {\n        marginTop: global_spacer_lg.value,\n    },\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_green_300.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_green_400.value,\n        },\n    },\n    itemsPerRow: 2,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        chart_color_black_200.value,\n        chart_color_green_400.value,\n        chart_color_black_200.value,\n        chart_color_green_300.value,\n    ],\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_black_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_black_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    // TBD: No grey scale, yet\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getDateRange, getUsageRangeString } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './usageChart.styles';\nclass UsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n            const usageKey = 'chart.usage_legend_label';\n            const usageTooltipKey = 'chart.usage_legend_tooltip';\n            const requestKey = 'chart.requests_legend_label';\n            const requestTooltipKey = 'chart.requests_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousUsage',\n                    data: previousUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(previousUsageData, usageKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(previousUsageData, usageTooltipKey, false, false, 1),\n                    },\n                    style: chartStyles.previousUsageData,\n                },\n                {\n                    childName: 'currentUsage',\n                    data: currentUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(currentUsageData, usageKey, true, false),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[1],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(currentUsageData, usageTooltipKey, false, false),\n                    },\n                    style: chartStyles.currentUsageData,\n                },\n                {\n                    childName: 'previousRequest',\n                    data: previousRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(previousRequestData, requestKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[2],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(previousRequestData, requestTooltipKey, false, false, 1),\n                    },\n                    style: chartStyles.previousRequestData,\n                },\n                {\n                    childName: 'currentRequest',\n                    data: currentRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(currentRequestData, requestKey, true, false),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[3],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(currentRequestData, requestTooltipKey, false, false),\n                    },\n                    style: chartStyles.currentRequestData,\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 300 ? chartStyles.itemsPerRow : 1;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\" }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (width < 480) {\n                    adjustedContainerHeight += 20;\n                }\n            }\n            return adjustedContainerHeight;\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n        const currentRequestDate = currentRequestData ? getDate(getDateRange(currentRequestData, true, true)[1]) : 0;\n        const currentUsageDate = currentUsageData ? getDate(getDateRange(currentUsageData, true, true)[1]) : 0;\n        const previousRequestDate = previousRequestData ? getDate(getDateRange(previousRequestData, true, true)[1]) : 0;\n        const previousUsageDate = previousUsageData ? getDate(getDateRange(previousUsageData, true, true)[1]) : 0;\n        return currentRequestDate > 0 || currentUsageDate > 0 || previousRequestDate > 0 || previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 75,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { UsageChart };\n","import './reportSummaryUsage.scss';\nimport { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nconst ReportSummaryUsage = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { ReportSummaryUsage };\n","export const getReleasePath = () => {\n    const pathName = window.location.pathname.split('/');\n    pathName.shift();\n    let release = '';\n    if (pathName[0] === 'beta') {\n        release = `/beta`;\n    }\n    return release;\n};\n","module.exports = __webpack_public_path__ + \"8a2acb5e9233030023f599e0f04ebd7f.svg\";","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { FileInvoiceDollarIcon } from '@patternfly/react-icons/dist/js/icons/file-invoice-dollar-icon';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { withRouter } from 'react-router';\nclass NoDataStateBase extends React.Component {\n    render() {\n        const { showReload = true, t } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: FileInvoiceDollarIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, t('no_data_state.title')),\n            React.createElement(EmptyStateBody, null, t('no_data_state.desc')),\n            showReload && (React.createElement(Button, { variant: \"primary\", onClick: () => window.location.reload() }, t('no_data_state.refresh')))));\n    }\n}\nconst NoDataState = withRouter(withTranslation()(NoDataStateBase));\nexport { NoDataState };\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { NoDataState } from './noDataState';\nconst NoData = ({ showReload, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(NoDataState, { showReload: showReload }))));\n};\nexport default withRouter(NoData);\n","import { parse, stringify } from 'qs';\nexport function getUserAccessQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseUserAccessQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    perspectiveSelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    perspectiveLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n};\n","import { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './perspective.styles';\nclass PerspectiveBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isPerspectiveOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getDropDownItems = () => {\n            const { options, t } = this.props;\n            return options.map(option => (React.createElement(DropdownItem, { component: \"button\", key: option.value, onClick: () => this.handleClick(option.value) }, t(option.label))));\n        };\n        this.getCurrentLabel = () => {\n            const { currentItem, options, t } = this.props;\n            let label = '';\n            for (const option of options) {\n                if (currentItem === option.value) {\n                    label = t(option.label);\n                    break;\n                }\n            }\n            return label;\n        };\n        this.handleClick = value => {\n            const { onItemClicked } = this.props;\n            if (onItemClicked) {\n                onItemClicked(value);\n            }\n        };\n        this.handleSelect = () => {\n            this.setState({\n                isPerspectiveOpen: !this.state.isPerspectiveOpen,\n            });\n        };\n        this.handleToggle = isPerspectiveOpen => {\n            this.setState({\n                isPerspectiveOpen,\n            });\n        };\n    }\n    render() {\n        const { isDisabled, t } = this.props;\n        const { isPerspectiveOpen } = this.state;\n        const dropdownItems = this.getDropDownItems();\n        return (React.createElement(\"div\", { style: styles.perspectiveSelector },\n            React.createElement(\"label\", { style: styles.perspectiveLabel }, t('overview.perspective.label')),\n            React.createElement(Dropdown, { onSelect: this.handleSelect, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled, onToggle: this.handleToggle }, this.getCurrentLabel()), isOpen: isPerspectiveOpen, dropdownItems: dropdownItems })));\n    }\n}\nconst Perspective = withTranslation()(PerspectiveBase);\nexport { Perspective };\n"],"sourceRoot":""}