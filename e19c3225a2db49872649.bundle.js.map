{"version":3,"sources":["webpack:///./src/pages/overview/overview.scss?a989","webpack:///./src/pages/overview/overview.scss","webpack:///./src/pages/dashboard/components/dashboardBase.tsx","webpack:///./src/pages/dashboard/components/dashboardWidget.styles.ts","webpack:///./src/pages/dashboard/components/dashboardWidgetBase.tsx","webpack:///./src/pages/dashboard/awsCloudDashboard/awsCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/awsCloudDashboard/awsCloudDashboard.tsx","webpack:///./src/pages/dashboard/awsDashboard/awsDashboardWidget.tsx","webpack:///./src/pages/dashboard/awsDashboard/awsDashboard.tsx","webpack:///./src/pages/dashboard/azureCloudDashboard/azureCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/azureCloudDashboard/azureCloudDashboard.tsx","webpack:///./src/pages/dashboard/azureDashboard/azureDashboardWidget.tsx","webpack:///./src/pages/dashboard/azureDashboard/azureDashboard.tsx","webpack:///./src/pages/dashboard/gcpDashboard/gcpDashboardWidget.tsx","webpack:///./src/pages/dashboard/gcpDashboard/gcpDashboard.tsx","webpack:///./src/pages/dashboard/ocpCloudDashboard/ocpCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpCloudDashboard/ocpCloudDashboard.tsx","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboardWidget.styles.ts","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboard.tsx","webpack:///./src/pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboard.tsx","webpack:///./src/pages/dashboard/ocpUsageDashboard/ocpUsageDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpUsageDashboard/ocpUsageDashboard.tsx","webpack:///./src/pages/overview/overview.styles.ts","webpack:///./src/pages/overview/perspective.styles.ts","webpack:///./src/pages/overview/perspective.tsx","webpack:///./src/pages/overview/overview.tsx","webpack:///./src/pages/overview/index.ts","webpack:///./src/utils/formatValue.ts","webpack:///./src/utils/computedForecast/getComputedForecastItems.ts","webpack:///./src/components/charts/common/chartUtils.ts","webpack:///./src/components/charts/common/charts-common.scss?2cec","webpack:///./src/components/charts/chartTheme/theme-koku.ts","webpack:///./src/components/charts/chartTheme/index.ts","webpack:///./src/components/charts/chartTheme/theme-utils.ts","webpack:///./src/utils/computedReport/getComputedReportItems.ts","webpack:///./src/utils/computedReport/getItemLabel.ts","webpack:///./src/components/state/loadingState/loadingState.tsx","webpack:///./src/api/queries/providersQuery.ts","webpack:///./src/utils/sort.ts","webpack:///./src/components/state/emptyValueState/emptyValueState.tsx","webpack:///./src/components/reports/reportSummary/reportSummary.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryAlt.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryDetails.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryItem.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryItems.tsx","webpack:///./src/components/charts/costChart/costChart.styles.ts","webpack:///./src/components/charts/costChart/costChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryCost.tsx","webpack:///./src/components/charts/trendChart/trendChart.styles.ts","webpack:///./src/components/charts/trendChart/trendChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryTrend.tsx","webpack:///./src/components/charts/usageChart/usageChart.styles.ts","webpack:///./src/components/charts/usageChart/usageChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryUsage.tsx","webpack:///./src/utils/pathname.ts","webpack:///./src/pages/state/loading/loading.tsx","webpack:///./src/pages/state/loading/index.ts","webpack:///./src/components/reports/reportSummary/reportSummary.scss?97f8","webpack:///./src/components/reports/reportSummary/reportSummary.scss","webpack:///./src/components/reports/reportSummary/reportSummaryAlt.scss?964b","webpack:///./src/components/reports/reportSummary/reportSummaryAlt.scss","webpack:///./src/components/reports/reportSummary/reportSummaryDetails.scss?0d10","webpack:///./src/components/reports/reportSummary/reportSummaryDetails.scss","webpack:///./src/components/state/emptyValueState/emptyValueState.scss?e614","webpack:///./src/components/state/emptyValueState/emptyValueState.scss","webpack:///./src/components/reports/reportSummary/reportSummaryItem.scss?0e2c","webpack:///./src/components/reports/reportSummary/reportSummaryItem.scss","webpack:///./src/components/reports/reportSummary/reportSummaryItems.scss?00c0","webpack:///./src/components/reports/reportSummary/reportSummaryItems.scss","webpack:///./src/components/reports/reportSummary/reportSummaryCost.scss?4e01","webpack:///./src/components/reports/reportSummary/reportSummaryCost.scss","webpack:///./src/components/charts/common/charts-common.scss","webpack:///./src/components/reports/reportSummary/reportSummaryTrend.scss?6066","webpack:///./src/components/reports/reportSummary/reportSummaryTrend.scss","webpack:///./src/components/reports/reportSummary/reportSummaryUsage.scss?37e6","webpack:///./src/components/reports/reportSummary/reportSummaryUsage.scss","webpack:///./src/components/icons/costIcon/costIcon.scss?e2d0","webpack:///./src/components/icons/costIcon/costIcon.scss","webpack:///./src/components/icons/costIcon/Cost-icon.svg","webpack:///./src/components/icons/costIcon/costIcon.tsx","webpack:///./src/components/icons/costIcon/index.ts","webpack:///./src/pages/state/noProviders/noProvidersState.styles.ts","webpack:///./src/pages/state/noProviders/noProvidersState.tsx","webpack:///./src/pages/state/noProviders/noProviders.tsx","webpack:///./src/pages/state/noProviders/index.ts"],"names":["content","module","i","options","transform","undefined","locals","exports","___CSS_LOADER_API_IMPORT___","push","DashboardBase","DashboardWidget","selectWidgets","widgets","createElement","Grid","hasGutter","map","widgetId","details","showHorizontal","GridItem","sm","key","lg","xl","xl2","chartStyles","chartAltHeight","chartHeight","containerAltHeight","containerTrendHeight","containerUsageHeight","styles","tabs","marginTop","value","tabItems","Component","super","arguments","this","state","activeTabKey","buildDetailsLink","tab","getIdKeyForTab","props","currentTab","viewAllPath","group_by","order_by","cost","getChart","containerHeight","height","adjustContainerHeight","chartType","getCostChart","getTrendChart","getUsageChart","currentReport","previousReport","t","trend","units","getUnits","title","titleKey","computedReportItem","computedReportItemValue","currentInfrastructureData","type","previousInfrastructureData","currentCostData","previousCostData","forecastData","forecastConeData","getForecastData","currentInfrastructureCostData","formatDatumValue","formatValue","formatDatumOptions","formatOptions","previousInfrastructureCostData","showForecast","computedForecastItem","forecast","newForecast","data","total","meta","populatedValues","filter","val","values","length","date","item","Date","shift","unshift","confidence_max","confidence_min","showSupplementaryLabel","currentData","previousData","showUsageLegendLabel","currentRequestData","previousRequestData","currentUsageData","previousUsageData","getDetails","costLabel","getDetailsLabel","costKey","report","requestLabel","requestKey","showTooltip","showUnits","showUsageFirst","usageFormatOptions","usageLabel","usageKey","getDetailsLink","Link","to","onClick","handleInsightsNavClick","getDetailsLinkTitle","groupBy","getHorizontalLayout","currentReportFetchStatus","detailsLink","status","subTitle","getSubTitle","getTabs","getTitle","today","month","endDate","startDate","count","getTab","index","tabsReport","tabsReportFetchStatus","Tab","eventKey","TabTitleText","getTabTitle","style","idKey","items","reportItem","getTabItem","availableTabs","topItems","activeTab","totalValue","hasTotal","usage","id","label","toString","Tabs","isFilled","activeKey","onSelect","handleTabClick","getVerticalLayout","Boolean","appNavId","insights","chrome","appNavClick","secondaryNav","event","tabIndex","updateTab","setState","fetchForecasts","fetchReports","mapStateToProps","widget","awsCloudDashboard","selectWidget","queries","selectWidgetQueries","Object","assign","selectReport","reportPathsType","reportType","current","selectReportFetchStatus","previous","mapDispatchToProps","fetchWidgetReports","changeWidgetTab","AwsCloudDashboardWidget","withTranslation","selectCurrentWidgets","awsDashboard","selectForecast","forecastPathsType","forecastType","forecastFetchStatus","selectForecastFetchStatus","fetchWidgetForecasts","AwsDashboardWidget","azureCloudDashboard","AzureCloudDashboardWidget","azureDashboard","AzureDashboardWidget","gcpDashboard","GcpDashboardWidget","ocpCloudDashboard","OcpCloudDashboardWidget","ocpDashboard","currentQuery","forecastQuery","previousQuery","tabsQuery","OcpDashboardWidget","ocpSupplementaryDashboard","OcpSupplementaryDashboardWidget","ocpUsageDashboard","OcpUsageDashboardWidget","infoIcon","fontSize","infoTitle","fontWeight","perspective","perspectiveSelector","display","alignItems","perspectiveLabel","marginBottom","marginRight","var","defaultState","isPerspectiveOpen","getDropDownItems","option","DropdownItem","component","handleClick","getCurrentLabel","currentItem","onItemClicked","handleSelect","handleToggle","dropdownItems","Dropdown","toggle","DropdownToggle","onToggle","isOpen","Perspective","ocpOptions","infrastructureAllCloudOptions","infrastructureAwsOptions","infrastructureAwsCloudOptions","infrastructureAzureOptions","infrastructureAzureCloudOptions","infrastructureGcpOptions","infrastructureOcpOptions","isAwsAccessAllowed","isAzureAccessAllowed","isGcpAccessAllowed","isOcpAccessAllowed","getAvailableTabs","isAwsAvailable","isAzureAvailable","isGcpAvailable","isOcpAvailable","isOcpCloudAvailable","contentRef","createRef","getCurrentTab","getDefaultInfrastructurePerspective","getDefaultOcpPerspective","getPerspective","currentInfrastructurePerspective","currentOcpPerspective","handlePerspectiveClick","tabContentId","tabContentRef","getTabContent","TabContent","ref","emptyTab","Fragment","awsProviders","azureProviders","gcpProviders","ocpProviders","async","isEntitled","isOrgAdmin","getPermissions","then","prevProps","awsProvidersFetchStatus","azureProvidersFetchStatus","gcpProvidersFetchStatus","ocpProvidersFetchStatus","isLoading","noAwsProviders","noAzureProviders","noGcpProviders","noOcpProviders","noProviders","className","Title","headingLevel","size","Popover","enableFlip","bodyContent","Button","variant","plain","awsProvidersQueryString","providers","selectProviders","selectProvidersFetchStatus","azureProvidersQueryString","gcpProvidersQueryString","ocpProvidersQueryString","unitLookupKey","unit","lookup","toLowerCase","fValue","formatCurrency","formatUsageGb","formatUsageHrs","unknownTypeFormatter","_unit","fractionDigits","toLocaleString","minimumFractionDigits","maximumFractionDigits","currency","getComputedForecastItems","sortDirection","sortKey","sort","itemMap","Map","visitDataPoint","dataPoint","forEach","get","set","getCostData","infrastructure","supplementary","Array","from","getUnsortedComputedForecastItems","direction","pvalues","Number","rsquared","transformForecast","forecastItem","forecastItemValue","computedItems","result","createForecastDatum","reduce","acc","d","prevValue","y","padComputedReportItems","transformForecastCone","createForecastConeDatum","prevMaxValue","prevMinValue","y0","transformReport","reportItemValue","getComputedReportItems","createReportDatum","computedItem","xVal","yVal","isFloat","parseFloat","toFixed","isInt","x","maxValue","minValue","y0Val","datums","firstDate","lastDate","padDate","getDate","setDate","getDateRange","firstOfMonth","lastOfMonth","offset","start","end","setMonth","getMonth","getDatumDateRange","getMaxValue","max","datum","getTooltipContent","i18next","getCostRangeString","year","getUsageRangeString","n","LAYOUT_PROPS","padding","area","axis","bar","boxplot","candlestick","chart","errorbar","group","legend","line","pie","scatter","stack","tooltip","voronoi","ChartTheme","default","getUnsortedComputedReportItems","markup","raw","getUsageData","capacity","limit","request","idSuffix","cluster","org_unit_id","mapId","cluster_alias","clusters","delta_percent","delta_value","source_uuid","itemLabelKey","String","keys","indexOf","tagPrefixKey","hasOwnProperty","getItemLabel","alias","account_alias","LoadingState","large","getProvidersQuery","query","encode","indices","getValueForItem","array","a","b","aVal","bVal","EmptyValueState","ReportSummary","children","Card","CardTitle","CardBody","Skeleton","CardFooter","ReportSummaryAlt","ReportSummaryDetails","requestFormatOptions","supplementaryCost","infrastructureCost","hasCost","hasCount","hasSupplementaryCost","hasInfrastructureCost","hasRequest","hasUsage","getCostLayout","showAltHeroFont","altHeroFont","Tooltip","getRequestLayout","usageUnits","_units","unitsLabel","getUsageLayout","ReportSummaryItemBase","percentVal","percentLabel","percent","Progress","defaultProps","v","ReportSummaryItem","nextProps","otherIndex","findIndex","includes","slice","getItems","ReportSummaryItems","currentColorScale","chart_color_green_400","chart_color_green_300","chart_color_green_200","chart_color_green_100","chart_color_green_500","fill","strokeDasharray","forecastColorScale","forecastConeColorScale","strokeWidth","itemsPerRow","previousColorScale","chart_color_black_200","yAxis","axisLabel","grid","stroke","ticks","tickLabels","xAxis","containerRef","hiddenSeries","Set","width","initDatum","series","childName","legendItem","name","symbol","cursorVoronoiContainer","getCursorVoronoiContainer","handleNavToggle","setTimeout","handleResize","clientWidth","ChartArea","has","interpolation","CursorVoronoiContainer","cursorDimension","labels","getTooltipLabel","labelComponent","ChartLegendTooltip","legendData","getLegendData","day","mouseFollowTooltips","voronoiDimension","voronoiPadding","bottom","left","right","top","getLegend","legendItemsPerRow","ChartLegend","gutter","responsive","formatter","handleLegendClick","delete","add","isDataAvailable","unavailable","s","isSeriesHidden","getChartNames","serie","getEvents","chartNames","isHidden","legendName","onLegendClick","splice","window","addEventListener","navToggle","on","removeEventListener","domain","maxCurrentInfrastructure","maxCurrentCost","maxForecast","maxForecastCone","maxPreviousInfrastructure","maxPreviousUsage","Math","ceil","currentInfrastructureDate","currentCostDate","forecastCostDate","previousInfrastructureDate","previousUsageDate","getDomain","getEndDate","midDate","floor","adjustedContainerHeight","container","cloneElement","disable","Chart","containerComponent","events","legendComponent","legendPosition","theme","ChartAxis","tickValues","dependentAxis","ReportSummaryCost","currentMonthData","previousMonthData","tooltipKey","orientation","dy","dy0","value0","value1","maxCurrent","maxPrevious","previousDate","currentDate","forecastDate","ReportSummaryTrend","chartContainer","legendColorScale","maxCurrentRequest","maxCurrentUsage","maxPreviousRequest","currentRequestDate","currentUsageDate","previousRequestDate","ReportSummaryUsage","getReleasePath","pathName","location","pathname","split","release","withRouter","PageHeader","Main","___CSS_LOADER_AT_RULE_IMPORT_0___","src","alt","iconSpacer","marginLeft","viewSources","getDocLink","textKey","urlKey","href","rel","target","getRouteToSources","providerType","docUrlKey","icon","descKey","EmptyState","EmptyStateIcon","EmptyStateBody","NoProvidersState"],"mappings":"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","file":"e19c3225a2db49872649.bundle.js","sourcesContent":["\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./overview.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./overview.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./overview.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".headerOverride.pf-c-page__main-section{--pf-c-page__main-section--PaddingBottom: 0}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nconst DashboardBase = ({ DashboardWidget, selectWidgets, widgets }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { hasGutter: true }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return widget.details.showHorizontal ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(DashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { lg: 12, xl: 6, xl2: 4, key: widgetId },\n            React.createElement(DashboardWidget, { widgetId: widgetId })));\n    }))));\nexport { DashboardBase };\n","import global_spacer_2xl from '@patternfly/react-tokens/dist/js/global_spacer_2xl';\nimport global_spacer_xl from '@patternfly/react-tokens/dist/js/global_spacer_xl';\nexport const chartStyles = {\n    chartAltHeight: 250,\n    chartHeight: 180,\n    containerAltHeight: 250,\n    containerTrendHeight: 180,\n    containerUsageHeight: 180,\n};\nexport const styles = {\n    tabs: {\n        marginTop: global_spacer_2xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n};\n","import { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { getQuery } from 'api/queries/awsQuery';\nimport { transformForecast, transformForecastCone, transformReport, } from 'components/charts/common/chartUtils';\nimport { ReportSummary, ReportSummaryAlt, ReportSummaryCost, ReportSummaryDetails, ReportSummaryItem, ReportSummaryItems, ReportSummaryTrend, ReportSummaryUsage, } from 'components/reports/reportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport { cloneDeep } from 'lodash';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './dashboardWidget.styles';\nclass DashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = (tab) => {\n            const { details, getIdKeyForTab } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return `${details.viewAllPath}?${getQuery({\n                group_by: {\n                    [currentTab]: '*',\n                },\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.getChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { chartType } = this.props;\n            if (chartType === \"cost\" /* cost */) {\n                return this.getCostChart(containerHeight, height, adjustContainerHeight);\n            }\n            else if (chartType === \"supplementary\" /* supplementary */) {\n                return this.getTrendChart(containerHeight, height, adjustContainerHeight, true);\n            }\n            else if (chartType === \"trend\" /* trend */) {\n                return this.getTrendChart(containerHeight, height, adjustContainerHeight);\n            }\n            else if (chartType === \"usage\" /* usage */) {\n                return this.getUsageChart(height, adjustContainerHeight);\n            }\n            else {\n                return null;\n            }\n        };\n        // This chart displays cost and infrastructure cost\n        this.getCostChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { currentReport, previousReport, t, trend } = this.props;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            const computedReportItem = trend.computedReportItem; // cost, supplementary cost, etc.\n            const computedReportItemValue = trend.computedReportItemValue; // infrastructure usage cost\n            // Infrastructure data\n            const currentInfrastructureData = transformReport(currentReport, trend.type, 'date', 'infrastructure', computedReportItemValue);\n            const previousInfrastructureData = transformReport(previousReport, trend.type, 'date', 'infrastructure', computedReportItemValue);\n            // Cost data\n            const currentCostData = transformReport(currentReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            const previousCostData = transformReport(previousReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            // Forecast data\n            const { forecastData, forecastConeData } = this.getForecastData();\n            return (React.createElement(ReportSummaryCost, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentCostData: currentCostData, currentInfrastructureCostData: currentInfrastructureData, forecastData: forecastData, forecastConeData: forecastConeData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousCostData: previousCostData, previousInfrastructureCostData: previousInfrastructureData, showForecast: trend.computedForecastItem !== undefined, title: title }));\n        };\n        this.getForecastData = () => {\n            const { currentReport, forecast, trend } = this.props;\n            const computedForecastItem = trend.computedForecastItem;\n            let forecastData;\n            let forecastConeData;\n            if (computedForecastItem) {\n                const newForecast = cloneDeep(forecast);\n                if (forecast && currentReport && currentReport.data) {\n                    const total = currentReport.meta && currentReport.meta.total && currentReport.meta.total.cost\n                        ? currentReport.meta.total.cost.total.value\n                        : 0;\n                    // Find last currentData date with values\n                    const populatedValues = currentReport.data.filter(val => val.values.length);\n                    const date = populatedValues[populatedValues.length - 1].date;\n                    // Remove overlapping forecast dates, if any\n                    for (const item of forecast.data) {\n                        if (new Date(date) >= new Date(item.date)) {\n                            newForecast.data.shift();\n                        }\n                    }\n                    // Show continuous line from current report to forecast\n                    newForecast.data.unshift({\n                        date,\n                        values: [\n                            {\n                                date,\n                                cost: {\n                                    confidence_max: {\n                                        value: 0,\n                                    },\n                                    confidence_min: {\n                                        value: 0,\n                                    },\n                                    total: {\n                                        value: total,\n                                        units: 'USD',\n                                    },\n                                },\n                            },\n                        ],\n                    });\n                }\n                forecastData = transformForecast(newForecast, trend.type, computedForecastItem);\n                forecastConeData = transformForecastCone(newForecast, trend.type, computedForecastItem);\n            }\n            return { forecastData, forecastConeData };\n        };\n        // This chart displays cost only\n        this.getTrendChart = (containerHeight, height, adjustContainerHeight = false, showSupplementaryLabel = false) => {\n            const { currentReport, details, previousReport, t, trend } = this.props;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            const computedReportItem = trend.computedReportItem; // cost, supplementary cost, etc.\n            const computedReportItemValue = trend.computedReportItemValue; // infrastructure usage cost\n            // Cost data\n            const currentData = transformReport(currentReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            const previousData = transformReport(previousReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            // Forecast data\n            const { forecastData, forecastConeData } = this.getForecastData();\n            return (React.createElement(ReportSummaryTrend, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentData: currentData, forecastData: forecastData, forecastConeData: forecastConeData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousData, showForecast: trend.computedForecastItem !== undefined, showSupplementaryLabel: showSupplementaryLabel, showUsageLegendLabel: details.showUsageLegendLabel, title: title, units: units }));\n        };\n        // This chart displays usage and requests\n        this.getUsageChart = (height, adjustContainerHeight = false) => {\n            const { currentReport, previousReport, t, trend } = this.props;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            // Request data\n            const currentRequestData = transformReport(currentReport, trend.type, 'date', 'request');\n            const previousRequestData = transformReport(previousReport, trend.type, 'date', 'request');\n            // Usage data\n            const currentUsageData = transformReport(currentReport, trend.type, 'date', 'usage');\n            const previousUsageData = transformReport(previousReport, trend.type, 'date', 'usage');\n            return (React.createElement(ReportSummaryUsage, { adjustContainerHeight: adjustContainerHeight, containerHeight: chartStyles.containerUsageHeight, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousRequestData: previousRequestData, previousUsageData: previousUsageData, title: title }));\n        };\n        this.getDetails = () => {\n            const { chartType, currentReport, details, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            const units = this.getUnits();\n            return (React.createElement(ReportSummaryDetails, { chartType: chartType, computedReportItem: computedReportItem, computedReportItemValue: computedReportItemValue, costLabel: this.getDetailsLabel(details.costKey, units), formatOptions: details.formatOptions, formatValue: formatValue, report: currentReport, requestLabel: this.getDetailsLabel(details.requestKey, units), showTooltip: details.showTooltip, showUnits: details.showUnits, showUsageFirst: details.showUsageFirst, units: details.units, usageFormatOptions: details.usageFormatOptions, usageLabel: this.getDetailsLabel(details.usageKey, units) }));\n        };\n        this.getDetailsLabel = (key, units) => {\n            const { t } = this.props;\n            return key ? t(key, { units: t(`units.${units}`) }) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, details } = this.props;\n            if (details.viewAllPath) {\n                return (React.createElement(Link, { to: this.buildDetailsLink(currentTab), onClick: this.handleInsightsNavClick }, this.getDetailsLinkTitle(currentTab)));\n            }\n            return null;\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { getIdKeyForTab, t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { containerAltHeight = chartStyles.containerAltHeight, chartAltHeight = chartStyles.chartAltHeight, currentReportFetchStatus, details, } = this.props;\n            return (React.createElement(ReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(containerAltHeight, chartAltHeight, details.adjustContainerHeight)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'D');\n            const startDate = formatDate(startOfMonth(today), 'D');\n            return t('aws_dashboard.widget_subtitle', {\n                count: getDate(today),\n                endDate,\n                month,\n                startDate,\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { getIdKeyForTab, tabsReport, tabsReportFetchStatus } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) },\n                React.createElement(\"div\", { style: styles.tabItems },\n                    React.createElement(ReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport, status: tabsReportFetchStatus }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, details, getIdKeyForTab, tabsReport, topItems, trend } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            let totalValue;\n            const hasTotal = tabsReport && tabsReport.meta && tabsReport.meta.total;\n            if (computedReportItem === \"usage\" /* usage */) {\n                if (hasTotal && tabsReport.meta.total.usage) {\n                    totalValue = tabsReport.meta.total.usage.value;\n                }\n            }\n            else {\n                if (hasTotal &&\n                    tabsReport.meta.total[computedReportItem] &&\n                    tabsReport.meta.total[computedReportItem][computedReportItemValue]) {\n                    totalValue = tabsReport.meta.total[computedReportItem][computedReportItemValue].value;\n                }\n            }\n            if (activeTab === currentTab) {\n                return (React.createElement(ReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: totalValue, units: details.units ? details.units : this.getUnits(), value: reportItem[computedReportItem][computedReportItemValue].value }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { getIdKeyForTab, t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getUnits = () => {\n            const { currentReport, details, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            if (details.units) {\n                return details.units;\n            }\n            let units;\n            const hasTotal = currentReport && currentReport.meta && currentReport.meta.total;\n            if (computedReportItem === \"usage\" /* usage */) {\n                const hasUsage = hasTotal && currentReport.meta.total.usage;\n                units = hasUsage ? unitLookupKey(currentReport.meta.total.usage.units) : '';\n            }\n            else {\n                const hasCost = hasTotal &&\n                    currentReport.meta.total[computedReportItem] &&\n                    currentReport.meta.total[computedReportItem][computedReportItemValue];\n                units = hasCost ? unitLookupKey(currentReport.meta.total[computedReportItem][computedReportItemValue].units) : '';\n            }\n            return units;\n        };\n        this.getVerticalLayout = () => {\n            const { availableTabs, currentReportFetchStatus, details } = this.props;\n            return (React.createElement(ReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerTrendHeight, chartStyles.chartHeight, details.adjustContainerHeight),\n                Boolean(availableTabs) && React.createElement(\"div\", { style: styles.tabs }, this.getTabs())));\n        };\n        this.handleInsightsNavClick = () => {\n            const { details } = this.props;\n            if (details.appNavId) {\n                insights.chrome.appNavClick({\n                    id: details.appNavId,\n                    secondaryNav: true,\n                });\n            }\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchForecasts, fetchReports, id, updateTab, widgetId } = this.props;\n        if (availableTabs) {\n            updateTab(id, availableTabs[0]);\n        }\n        if (fetchForecasts) {\n            fetchForecasts(widgetId);\n        }\n        if (fetchReports) {\n            fetchReports(widgetId);\n        }\n    }\n    render() {\n        const { details } = this.props;\n        return details.showHorizontal ? this.getHorizontalLayout() : this.getVerticalLayout();\n    }\n}\nexport { DashboardWidgetBase };\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsCloudDashboardActions, awsCloudDashboardSelectors, } from 'store/dashboard/awsCloudDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: awsCloudDashboardActions.fetchWidgetReports,\n    updateTab: awsCloudDashboardActions.changeWidgetTab,\n};\nconst AwsCloudDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AwsCloudDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsCloudDashboardSelectors } from 'store/dashboard/awsCloudDashboard';\nimport { AwsCloudDashboardWidget } from './awsCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: AwsCloudDashboardWidget,\n        selectWidgets: awsCloudDashboardSelectors.selectWidgets(state),\n        widgets: awsCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsCloudDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default AwsCloudDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsDashboardActions, awsDashboardSelectors } from 'store/dashboard/awsDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: awsDashboardActions.fetchWidgetForecasts,\n    fetchReports: awsDashboardActions.fetchWidgetReports,\n    updateTab: awsDashboardActions.changeWidgetTab,\n};\nconst AwsDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AwsDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsDashboardSelectors } from 'store/dashboard/awsDashboard';\nimport { AwsDashboardWidget } from './awsDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: AwsDashboardWidget,\n        selectWidgets: awsDashboardSelectors.selectWidgets(state),\n        widgets: awsDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default AwsDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureCloudDashboardActions, azureCloudDashboardSelectors, } from 'store/dashboard/azureCloudDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"service_names\" /* service_names */:\n            return 'service_name';\n        case \"subscription_guids\" /* subscription_guids */:\n            return 'subscription_guid';\n        case \"resource_locations\" /* resource_locations */:\n            return 'resource_location';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = azureCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = azureCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: azureCloudDashboardActions.fetchWidgetReports,\n    updateTab: azureCloudDashboardActions.changeWidgetTab,\n};\nconst AzureCloudDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AzureCloudDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureCloudDashboardSelectors } from 'store/dashboard/azureCloudDashboard';\nimport { AzureCloudDashboardWidget } from './azureCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: AzureCloudDashboardWidget,\n        selectWidgets: azureCloudDashboardSelectors.selectWidgets(state),\n        widgets: azureCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AzureCloudDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default AzureCloudDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureDashboardActions, azureDashboardSelectors } from 'store/dashboard/azureDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"service_names\" /* service_names */:\n            return 'service_name';\n        case \"subscription_guids\" /* subscription_guids */:\n            return 'subscription_guid';\n        case \"resource_locations\" /* resource_locations */:\n            return 'resource_location';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = azureDashboardSelectors.selectWidget(state, widgetId);\n    const queries = azureDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: azureDashboardActions.fetchWidgetForecasts,\n    fetchReports: azureDashboardActions.fetchWidgetReports,\n    updateTab: azureDashboardActions.changeWidgetTab,\n};\nconst AzureDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AzureDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureDashboardSelectors } from 'store/dashboard/azureDashboard';\nimport { AzureDashboardWidget } from './azureDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: AzureDashboardWidget,\n        selectWidgets: azureDashboardSelectors.selectWidgets(state),\n        widgets: azureDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AzureDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default AzureDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { gcpDashboardActions, gcpDashboardSelectors } from 'store/dashboard/gcpDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = gcpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = gcpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: gcpDashboardActions.fetchWidgetReports,\n    updateTab: gcpDashboardActions.changeWidgetTab,\n};\nconst GcpDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { GcpDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { gcpDashboardSelectors } from 'store/dashboard/gcpDashboard';\nimport { GcpDashboardWidget } from './gcpDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: GcpDashboardWidget,\n        selectWidgets: gcpDashboardSelectors.selectWidgets(state),\n        widgets: gcpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst GcpDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default GcpDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardActions, ocpCloudDashboardSelectors, } from 'store/dashboard/ocpCloudDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"services\" /* services */:\n            return 'service';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpCloudDashboardActions.fetchWidgetReports,\n    updateTab: ocpCloudDashboardActions.changeWidgetTab,\n};\nconst OcpCloudDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpCloudDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardSelectors } from 'store/dashboard/ocpCloudDashboard';\nimport { OcpCloudDashboardWidget } from './ocpCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: OcpCloudDashboardWidget,\n        selectWidgets: ocpCloudDashboardSelectors.selectWidgets(state),\n        widgets: ocpCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpCloudDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpCloudDashboard;\n","export const chartStyles = {\n    chartAltHeight: 250,\n    containerAltHeight: 250,\n};\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardActions, ocpDashboardSelectors } from 'store/dashboard/ocpDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { chartStyles } from './ocpDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, chartAltHeight: chartStyles.chartAltHeight, containerAltHeight: chartStyles.containerAltHeight, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: ocpDashboardActions.fetchWidgetForecasts,\n    fetchReports: ocpDashboardActions.fetchWidgetReports,\n    updateTab: ocpDashboardActions.changeWidgetTab,\n};\nconst OcpDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardSelectors } from 'store/dashboard/ocpDashboard';\nimport { OcpDashboardWidget } from './ocpDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: OcpDashboardWidget,\n        selectWidgets: ocpDashboardSelectors.selectWidgets(state),\n        widgets: ocpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpSupplementaryDashboardActions, ocpSupplementaryDashboardSelectors, } from 'store/dashboard/ocpSupplementaryDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpSupplementaryDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpSupplementaryDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpSupplementaryDashboardActions.fetchWidgetReports,\n    updateTab: ocpSupplementaryDashboardActions.changeWidgetTab,\n};\nconst OcpSupplementaryDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpSupplementaryDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpSupplementaryDashboardSelectors } from 'store/dashboard/ocpSupplementaryDashboard';\nimport { OcpSupplementaryDashboardWidget } from './ocpSupplementaryDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: OcpSupplementaryDashboardWidget,\n        selectWidgets: ocpSupplementaryDashboardSelectors.selectWidgets(state),\n        widgets: ocpSupplementaryDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpSupplementaryDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpSupplementaryDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpUsageDashboardActions, ocpUsageDashboardSelectors, } from 'store/dashboard/ocpUsageDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpUsageDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpUsageDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpUsageDashboardActions.fetchWidgetReports,\n    updateTab: ocpUsageDashboardActions.changeWidgetTab,\n};\nconst OcpUsageDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpUsageDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpUsageDashboardSelectors } from 'store/dashboard/ocpUsageDashboard';\nimport { OcpUsageDashboardWidget } from './ocpUsageDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: OcpUsageDashboardWidget,\n        selectWidgets: ocpUsageDashboardSelectors.selectWidgets(state),\n        widgets: ocpUsageDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpUsageDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpUsageDashboard;\n","import global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const styles = {\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    perspective: {\n        marginTop: global_spacer_lg.value,\n    },\n    tabs: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    perspectiveSelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    perspectiveLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n};\n","import { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './perspective.styles';\nclass PerspectiveBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isPerspectiveOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getDropDownItems = () => {\n            const { options, t } = this.props;\n            return options.map(option => (React.createElement(DropdownItem, { component: \"button\", key: option.value, onClick: () => this.handleClick(option.value) }, t(option.label))));\n        };\n        this.getCurrentLabel = () => {\n            const { currentItem, options, t } = this.props;\n            let label = '';\n            for (const option of options) {\n                if (currentItem === option.value) {\n                    label = t(option.label);\n                    break;\n                }\n            }\n            return label;\n        };\n        this.handleClick = value => {\n            const { onItemClicked } = this.props;\n            if (onItemClicked) {\n                onItemClicked(value);\n            }\n        };\n        this.handleSelect = () => {\n            this.setState({\n                isPerspectiveOpen: !this.state.isPerspectiveOpen,\n            });\n        };\n        this.handleToggle = isPerspectiveOpen => {\n            this.setState({\n                isPerspectiveOpen,\n            });\n        };\n    }\n    render() {\n        const { t } = this.props;\n        const { isPerspectiveOpen } = this.state;\n        const dropdownItems = this.getDropDownItems();\n        return (React.createElement(\"div\", { style: styles.perspectiveSelector },\n            React.createElement(\"label\", { style: styles.perspectiveLabel }, t('overview.perspective.label')),\n            React.createElement(Dropdown, { onSelect: this.handleSelect, toggle: React.createElement(DropdownToggle, { onToggle: this.handleToggle }, this.getCurrentLabel()), isOpen: isPerspectiveOpen, dropdownItems: dropdownItems })));\n    }\n}\nconst Perspective = withTranslation()(PerspectiveBase);\nexport { Perspective };\n","import './overview.scss';\nimport { Button, ButtonVariant, Popover, Tab, TabContent, Tabs, TabTitleText, Title } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport AwsCloudDashboard from 'pages/dashboard/awsCloudDashboard/awsCloudDashboard';\nimport AwsDashboard from 'pages/dashboard/awsDashboard/awsDashboard';\nimport AzureCloudDashboard from 'pages/dashboard/azureCloudDashboard/azureCloudDashboard';\nimport AzureDashboard from 'pages/dashboard/azureDashboard/azureDashboard';\nimport GcpDashboard from 'pages/dashboard/gcpDashboard/gcpDashboard';\nimport OcpCloudDashboard from 'pages/dashboard/ocpCloudDashboard/ocpCloudDashboard';\nimport OcpDashboard from 'pages/dashboard/ocpDashboard/ocpDashboard';\nimport OcpSupplementaryDashboard from 'pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboard';\nimport OcpUsageDashboard from 'pages/dashboard/ocpUsageDashboard/ocpUsageDashboard';\nimport Loading from 'pages/state/loading';\nimport NoProviders from 'pages/state/noProviders';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsProvidersQuery, azureProvidersQuery, gcpProvidersQuery, ocpProvidersQuery, providersSelectors, } from 'store/providers';\nimport { hasAwsPermissions, hasAzurePermissions, hasEntitledPermissions, hasGcpPermissions, hasOcpPermissions, hasOrgAdminPermissions, } from 'utils/permissions';\nimport { styles } from './overview.styles';\nimport { Perspective } from './perspective';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"infrastructure\" /* infrastructure */:\n            return 'infrastructure';\n        case \"ocp\" /* ocp */:\n            return 'ocp';\n    }\n};\n// Ocp options\nconst ocpOptions = [\n    { label: 'overview.perspective.all', value: 'all' },\n    { label: 'overview.perspective.supplementary', value: 'supplementary' },\n];\n// Infrastructure all cloud options\nconst infrastructureAllCloudOptions = [{ label: 'overview.perspective.all_cloud', value: 'all_cloud' }];\n// Infrastructure AWS options\nconst infrastructureAwsOptions = [{ label: 'overview.perspective.aws', value: 'aws' }];\n// Infrastructure AWS cloud options\nconst infrastructureAwsCloudOptions = [{ label: 'overview.perspective.aws_cloud', value: 'aws_cloud' }];\n// Infrastructure Azure options\nconst infrastructureAzureOptions = [{ label: 'overview.perspective.azure', value: 'azure' }];\n// Infrastructure Azure cloud options\nconst infrastructureAzureCloudOptions = [{ label: 'overview.perspective.azure_cloud', value: 'azure_cloud' }];\n// Infrastructure GCP options\nconst infrastructureGcpOptions = [{ label: 'overview.perspective.gcp', value: 'gcp' }];\n// Infrastructure Ocp options\nconst infrastructureOcpOptions = [{ label: 'overview.perspective.ocp_usage', value: 'ocp_usage' }];\nconst getPermissions = async () => {\n    const isEntitled = await hasEntitledPermissions();\n    const isOrgAdmin = await hasOrgAdminPermissions();\n    const isAwsAccessAllowed = isEntitled && (isOrgAdmin || (await hasAwsPermissions()));\n    const isAzureAccessAllowed = isEntitled && (isOrgAdmin || (await hasAzurePermissions()));\n    const isGcpAccessAllowed = isEntitled && (isOrgAdmin || (await hasGcpPermissions()));\n    const isOcpAccessAllowed = isEntitled && (isOrgAdmin || (await hasOcpPermissions()));\n    return {\n        isAwsAccessAllowed,\n        isAzureAccessAllowed,\n        isGcpAccessAllowed,\n        isOcpAccessAllowed,\n    };\n};\nclass OverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            activeTabKey: 0,\n            isAwsAccessAllowed: false,\n            isAzureAccessAllowed: false,\n            isGcpAccessAllowed: false,\n            isOcpAccessAllowed: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getAvailableTabs = () => {\n            const availableTabs = [];\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isGcpAvailable = this.isGcpAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            const isOcpCloudAvailable = this.isOcpCloudAvailable();\n            if (isOcpAvailable) {\n                availableTabs.push({\n                    contentRef: React.createRef(),\n                    tab: \"ocp\" /* ocp */,\n                });\n            }\n            if (isAwsAvailable || isAzureAvailable || isGcpAvailable || isOcpCloudAvailable) {\n                availableTabs.push({\n                    contentRef: React.createRef(),\n                    tab: \"infrastructure\" /* infrastructure */,\n                });\n            }\n            return availableTabs;\n        };\n        this.getCurrentTab = () => {\n            const { activeTabKey } = this.state;\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isGcpAvailable = this.isGcpAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            const isOcpCloudAvailable = this.isOcpCloudAvailable();\n            const showOcpOnly = isOcpAvailable && !(isAwsAvailable || isAzureAvailable || isGcpAvailable || isOcpCloudAvailable);\n            const showInfrastructureOnly = !isOcpAvailable && (isAwsAvailable || isAzureAvailable || isGcpAvailable || isOcpCloudAvailable);\n            if (showOcpOnly) {\n                return \"ocp\" /* ocp */;\n            }\n            else if (showInfrastructureOnly) {\n                return \"infrastructure\" /* infrastructure */;\n            }\n            else {\n                return activeTabKey === 0 ? \"ocp\" /* ocp */ : \"infrastructure\" /* infrastructure */;\n            }\n        };\n        this.getDefaultInfrastructurePerspective = () => {\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isGcpAvailable = this.isGcpAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            if (isOcpAvailable) {\n                return \"all_cloud\" /* allCloud */;\n            }\n            if (isAwsAvailable) {\n                return \"aws\" /* aws */;\n            }\n            if (isAzureAvailable) {\n                return \"azure\" /* azure */;\n            }\n            if (isGcpAvailable) {\n                return \"gcp\" /* gcp */;\n            }\n            return undefined;\n        };\n        this.getDefaultOcpPerspective = () => {\n            const isOcpAvailable = this.isOcpAvailable();\n            if (isOcpAvailable) {\n                return \"all\" /* all */;\n            }\n            return undefined;\n        };\n        this.getPerspective = () => {\n            const { currentInfrastructurePerspective, currentOcpPerspective } = this.state;\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isGcpAvailable = this.isGcpAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            if (!(isAwsAvailable || isAzureAvailable || isGcpAvailable || isOcpAvailable)) {\n                return null;\n            }\n            // Dynamically show options if providers are available\n            const options = [];\n            if (this.getCurrentTab() === \"infrastructure\" /* infrastructure */) {\n                if (isOcpAvailable) {\n                    options.push(...infrastructureAllCloudOptions);\n                }\n                if (isAwsAvailable) {\n                    options.push(...infrastructureAwsOptions);\n                }\n                if (isOcpAvailable && isAwsAvailable) {\n                    options.push(...infrastructureAwsCloudOptions);\n                }\n                if (isGcpAvailable) {\n                    options.push(...infrastructureGcpOptions);\n                }\n                if (isAzureAvailable) {\n                    options.push(...infrastructureAzureOptions);\n                }\n                if (isOcpAvailable && isAzureAvailable) {\n                    options.push(...infrastructureAzureCloudOptions);\n                }\n                if (isOcpAvailable) {\n                    options.push(...infrastructureOcpOptions);\n                }\n            }\n            else {\n                options.push(...ocpOptions);\n            }\n            const currentItem = this.getCurrentTab() === \"infrastructure\" /* infrastructure */ ? currentInfrastructurePerspective : currentOcpPerspective;\n            return (React.createElement(Perspective, { currentItem: currentItem || options[0].value, onItemClicked: this.handlePerspectiveClick, options: options }));\n        };\n        this.getTab = (tab, contentRef, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, tabContentId: `tab-${index}`, tabContentRef: contentRef, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) }));\n        };\n        this.getTabContent = (availableTabs) => {\n            return availableTabs.map((val, index) => {\n                return (React.createElement(TabContent, { eventKey: index, key: `${getIdKeyForTab(val.tab)}-tabContent`, id: `tab-${index}`, ref: val.contentRef }, this.getTabItem(val.tab, index)));\n            });\n        };\n        this.getTabItem = (tab, index) => {\n            const { activeTabKey, currentInfrastructurePerspective, currentOcpPerspective } = this.state;\n            const emptyTab = React.createElement(React.Fragment, null); // Lazily load tabs\n            if (activeTabKey !== index) {\n                return emptyTab;\n            }\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === \"infrastructure\" /* infrastructure */) {\n                if (currentInfrastructurePerspective === \"all_cloud\" /* allCloud */) {\n                    return React.createElement(OcpCloudDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"aws\" /* aws */) {\n                    return React.createElement(AwsDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"aws_cloud\" /* awsFiltered */) {\n                    return React.createElement(AwsCloudDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"gcp\" /* gcp */) {\n                    return React.createElement(GcpDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"azure\" /* azure */) {\n                    return React.createElement(AzureDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"azure_cloud\" /* azureCloud */) {\n                    return React.createElement(AzureCloudDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"ocp_usage\" /* ocpUsage */) {\n                    return React.createElement(OcpUsageDashboard, null);\n                }\n                else {\n                    return React.createElement(OcpCloudDashboard, null); // default\n                }\n            }\n            else if (currentTab === \"ocp\" /* ocp */) {\n                if (currentOcpPerspective === \"all\" /* all */) {\n                    return React.createElement(OcpDashboard, null);\n                }\n                else if (currentOcpPerspective === \"supplementary\" /* supplementary */) {\n                    return React.createElement(OcpSupplementaryDashboard, null);\n                }\n                else {\n                    return React.createElement(OcpDashboard, null); // default\n                }\n            }\n            else {\n                return emptyTab;\n            }\n        };\n        this.getTabs = (availableTabs) => {\n            const { activeTabKey } = this.state;\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((val, index) => this.getTab(val.tab, val.contentRef, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            if (tab === \"infrastructure\" /* infrastructure */) {\n                return t('overview.infrastructure');\n            }\n            else if (tab === \"ocp\" /* ocp */) {\n                return t('overview.ocp');\n            }\n        };\n        this.handlePerspectiveClick = (value) => {\n            const currentTab = this.getCurrentTab();\n            this.setState(Object.assign(Object.assign({}, (currentTab === \"infrastructure\" /* infrastructure */ && {\n                currentInfrastructurePerspective: value,\n            })), (currentTab === \"ocp\" /* ocp */ && { currentOcpPerspective: value })));\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { activeTabKey } = this.state;\n            if (activeTabKey !== tabIndex) {\n                this.setState({\n                    activeTabKey: tabIndex,\n                });\n            }\n        };\n        this.isAwsAvailable = () => {\n            const { awsProviders } = this.props;\n            const { isAwsAccessAllowed } = this.state;\n            return (\n            // API returns empty data array for no sources\n            isAwsAccessAllowed && awsProviders !== undefined && awsProviders.meta !== undefined && awsProviders.meta.count > 0);\n        };\n        this.isAzureAvailable = () => {\n            const { azureProviders } = this.props;\n            const { isAzureAccessAllowed } = this.state;\n            return (\n            // API returns empty data array for no sources\n            isAzureAccessAllowed &&\n                azureProviders !== undefined &&\n                azureProviders.meta !== undefined &&\n                azureProviders.meta.count > 0);\n        };\n        this.isGcpAvailable = () => {\n            const { gcpProviders } = this.props;\n            const { isGcpAccessAllowed } = this.state;\n            return (\n            // API returns empty data array for no sources\n            isGcpAccessAllowed && gcpProviders !== undefined && gcpProviders.meta !== undefined && gcpProviders.meta.count > 0);\n        };\n        this.isOcpAvailable = () => {\n            const { ocpProviders } = this.props;\n            const { isOcpAccessAllowed } = this.state;\n            return (\n            // API returns empty data array for no sources\n            isOcpAccessAllowed && ocpProviders !== undefined && ocpProviders.meta !== undefined && ocpProviders.meta.count > 0);\n        };\n        this.isOcpCloudAvailable = () => {\n            return this.isAwsAvailable() && this.isOcpAvailable();\n        };\n    }\n    componentDidMount() {\n        getPermissions().then(({ isAwsAccessAllowed, isAzureAccessAllowed, isGcpAccessAllowed, isOcpAccessAllowed }) => {\n            this.setState({\n                currentInfrastructurePerspective: this.getDefaultInfrastructurePerspective(),\n                currentOcpPerspective: this.getDefaultOcpPerspective(),\n                isAwsAccessAllowed,\n                isAzureAccessAllowed,\n                isGcpAccessAllowed,\n                isOcpAccessAllowed,\n            });\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { awsProviders, azureProviders, gcpProviders, ocpProviders } = this.props;\n        if (prevProps.awsProviders !== awsProviders ||\n            prevProps.azureProviders !== azureProviders ||\n            prevProps.gcpProviders !== gcpProviders ||\n            prevProps.ocpProviders !== ocpProviders) {\n            this.setState({\n                currentInfrastructurePerspective: this.getDefaultInfrastructurePerspective(),\n                currentOcpPerspective: this.getDefaultOcpPerspective(),\n            });\n        }\n    }\n    render() {\n        const { awsProvidersFetchStatus, azureProvidersFetchStatus, gcpProvidersFetchStatus, ocpProvidersFetchStatus, t, } = this.props;\n        const availableTabs = this.getAvailableTabs();\n        const isLoading = awsProvidersFetchStatus === 1 /* inProgress */ ||\n            azureProvidersFetchStatus === 1 /* inProgress */ ||\n            gcpProvidersFetchStatus === 1 /* inProgress */ ||\n            ocpProvidersFetchStatus === 1 /* inProgress */;\n        // Test for no providers\n        const noAwsProviders = !this.isAwsAvailable() && awsProvidersFetchStatus === 2 /* complete */;\n        const noAzureProviders = !this.isAzureAvailable() && azureProvidersFetchStatus === 2 /* complete */;\n        const noGcpProviders = !this.isGcpAvailable() && gcpProvidersFetchStatus === 2 /* complete */;\n        const noOcpProviders = !this.isOcpAvailable() && ocpProvidersFetchStatus === 2 /* complete */;\n        const noProviders = noAwsProviders && noAzureProviders && noGcpProviders && noOcpProviders;\n        const title = t('navigation.overview');\n        if (noProviders) {\n            return React.createElement(NoProviders, { title: title });\n        }\n        else if (isLoading) {\n            return React.createElement(Loading, { title: title });\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"section\", { className: `pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light headerOverride}` },\n                React.createElement(\"header\", { className: \"pf-u-display-flex pf-u-justify-content-space-between pf-u-align-items-center\" },\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"2xl\" },\n                        t('overview.title'),\n                        React.createElement(\"span\", { style: styles.infoIcon },\n                            React.createElement(Popover, { \"aria-label\": t('ocp_details.supplementary_aria_label'), enableFlip: true, bodyContent: React.createElement(React.Fragment, null,\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.ocp_cloud')),\n                                    React.createElement(\"p\", null, t('overview.ocp_cloud_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.ocp')),\n                                    React.createElement(\"p\", null, t('overview.ocp_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.gcp')),\n                                    React.createElement(\"p\", null, t('overview.gcp_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.aws')),\n                                    React.createElement(\"p\", null, t('overview.aws_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.azure')),\n                                    React.createElement(\"p\", null, t('overview.azure_desc'))) },\n                                React.createElement(Button, { variant: ButtonVariant.plain },\n                                    React.createElement(OutlinedQuestionCircleIcon, null)))))),\n                React.createElement(\"div\", { style: styles.tabs }, this.getTabs(availableTabs)),\n                React.createElement(\"div\", { style: styles.perspective }, this.getPerspective())),\n            React.createElement(\"section\", { className: \"pf-l-page__main-section pf-c-page__main-section\", \"page-type\": \"cost-management-overview\" }, this.getTabContent(availableTabs))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const awsProvidersQueryString = getProvidersQuery(awsProvidersQuery);\n    const awsProviders = providersSelectors.selectProviders(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const awsProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const azureProvidersQueryString = getProvidersQuery(azureProvidersQuery);\n    const azureProviders = providersSelectors.selectProviders(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const azureProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const gcpProvidersQueryString = getProvidersQuery(gcpProvidersQuery);\n    const gcpProviders = providersSelectors.selectProviders(state, \"gcp\" /* gcp */, gcpProvidersQueryString);\n    const gcpProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"gcp\" /* gcp */, gcpProvidersQueryString);\n    const ocpProvidersQueryString = getProvidersQuery(ocpProvidersQuery);\n    const ocpProviders = providersSelectors.selectProviders(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    const ocpProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    return {\n        awsProviders,\n        awsProvidersFetchStatus,\n        awsProvidersQueryString,\n        azureProviders,\n        azureProvidersFetchStatus,\n        azureProvidersQueryString,\n        gcpProviders,\n        gcpProvidersFetchStatus,\n        gcpProvidersQueryString,\n        ocpProviders,\n        ocpProvidersFetchStatus,\n        ocpProvidersQueryString,\n    };\n});\nconst Overview = withTranslation()(connect(mapStateToProps)(OverviewBase));\nexport default Overview;\n","import Overview from './overview';\nexport default Overview;\n","export const unitLookupKey = unit => {\n    const lookup = unit ? unit.toLowerCase() : '';\n    switch (lookup) {\n        case 'usd':\n        case 'gb':\n        case 'gb-hours':\n        case 'gb-mo':\n        case 'core-hours':\n        case 'hrs':\n        case 'tag-mo':\n        case 'vm-hours':\n            return lookup;\n        default:\n            return '';\n    }\n};\nexport const formatValue = (value, unit, options = {}) => {\n    const lookup = unitLookupKey(unit);\n    const fValue = value || 0;\n    switch (lookup) {\n        case 'usd':\n            return formatCurrency(fValue, lookup, options);\n        case 'gb':\n        case 'gb-hours':\n        case 'gb-mo':\n        case 'tag-mo':\n        case 'vm-hours':\n            return formatUsageGb(fValue, lookup, options);\n        case 'core-hours':\n        case 'hrs':\n            return formatUsageHrs(fValue, lookup, options);\n        default:\n            return unknownTypeFormatter(fValue, lookup, options);\n    }\n};\nconst unknownTypeFormatter = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatCurrency = (value, unit, { fractionDigits = 2 } = {}) => {\n    let fValue = value;\n    if (!value) {\n        fValue = 0;\n    }\n    return fValue.toLocaleString('en', {\n        style: 'currency',\n        currency: unit || 'USD',\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatUsageGb = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatUsageHrs = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\n","import { sort } from 'utils/sort';\nexport function getComputedForecastItems({ forecast, sortDirection = 0 /* asc */, sortKey = 'date', }) {\n    return sort(getUnsortedComputedForecastItems({\n        forecast,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nfunction getCostData(val, key, item) {\n    return {\n        confidence_max: {\n            value: item\n                ? item[key].confidence_max.value\n                : 0 + val[key] && val[key].confidence_max\n                    ? val[key].confidence_max.value\n                    : 0,\n            units: val[key] && val[key].confidence_max ? val[key].confidence_max.units : 'USD',\n        },\n        confidence_min: {\n            value: item\n                ? item[key].confidence_min.value\n                : 0 + val[key] && val[key].confidence_min\n                    ? val[key].confidence_min.value\n                    : 0,\n            units: val[key] && val[key].confidence_min ? val[key].confidence_min.units : 'USD',\n        },\n        pvalues: {\n            value: val[key] && val[key].pvalues ? Number(val[key].pvalues.value) : 0,\n            units: val[key] && val[key].pvalues ? val[key].pvalues.units : null,\n        },\n        rsquared: {\n            value: val[key] && val[key].rsquared ? Number(val[key].rsquared.value) : 0,\n            units: val[key] && val[key].rsquared ? val[key].rsquared.units : null,\n        },\n        total: {\n            value: item ? item[key].total.value : 0 + val[key] && val[key].total ? val[key].total.value : 0,\n            units: val[key] && val[key].total ? val[key].total.units : 'USD',\n        },\n    };\n}\nexport function getUnsortedComputedForecastItems({ forecast, }) {\n    if (!forecast) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint && dataPoint.values) {\n            dataPoint.values.forEach((val) => {\n                const date = val.date;\n                const item = itemMap.get(date);\n                if (item) {\n                    // This code block is typically entered with filter[resolution]=monthly\n                    itemMap.set(date, Object.assign(Object.assign({}, item), { date, cost: getCostData(val, 'cost', item), infrastructure: getCostData(val, 'infrastructure', item), supplementary: getCostData(val, 'supplementary', item) }));\n                }\n                else {\n                    // This code block is typically entered with filter[resolution]=daily\n                    itemMap.set(date, {\n                        date,\n                        cost: getCostData(val, 'cost'),\n                        infrastructure: getCostData(val, 'infrastructure'),\n                        supplementary: getCostData(val, 'supplementary'),\n                    });\n                }\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (forecast && forecast.data) {\n        forecast.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\n","import endOfMonth from 'date-fns/end_of_month';\nimport format from 'date-fns/format';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getYear from 'date-fns/get_year';\nimport startOfMonth from 'date-fns/start_of_month';\nimport i18next from 'i18next';\nimport { getComputedForecastItems } from 'utils/computedForecast/getComputedForecastItems';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { unitLookupKey } from 'utils/formatValue';\nexport function transformForecast(forecast, type = 1 /* daily */, forecastItem = 'cost', forecastItemValue = 'total') {\n    if (!forecast) {\n        return [];\n    }\n    const items = {\n        forecast,\n        sortKey: 'date',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedForecastItems(items);\n    let result;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        result = computedItems.map(i => createForecastDatum(i[forecastItem][forecastItemValue].value, i));\n    }\n    else {\n        result = computedItems.reduce((acc, d) => {\n            const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n            return [...acc, createForecastDatum(prevValue + d[forecastItem][forecastItemValue].value, d)];\n        }, []);\n    }\n    return padComputedReportItems(result);\n}\nexport function transformForecastCone(forecast, type = 1 /* daily */, forecastItem = 'cost', forecastItemValue = 'total') {\n    if (!forecast) {\n        return [];\n    }\n    const items = {\n        forecast,\n        sortKey: 'date',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedForecastItems(items);\n    let result;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        result = computedItems.map(i => createForecastConeDatum(i[forecastItem].confidence_max.value, i[forecastItem].confidence_min.value, i));\n    }\n    else {\n        result = computedItems.reduce((acc, d) => {\n            const prevMaxValue = acc.length ? acc[acc.length - 1].y : d[forecastItem][forecastItemValue].value;\n            const prevMinValue = acc.length ? acc[acc.length - 1].y0 : d[forecastItem][forecastItemValue].value;\n            return [\n                ...acc,\n                createForecastConeDatum(prevMaxValue + d[forecastItem].confidence_max.value, prevMinValue + d[forecastItem].confidence_min.value, d),\n            ];\n        }, []);\n    }\n    return padComputedReportItems(result);\n}\nexport function transformReport(report, type = 1 /* daily */, idKey = 'date', reportItem = 'cost', reportItemValue = 'total' // useful for infrastructure.usage values\n) {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        idKey,\n        report,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedReportItems(items);\n    let result;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        result = computedItems.map(i => {\n            const val = i[reportItem][reportItemValue] ? i[reportItem][reportItemValue].value : i[reportItem].value;\n            return createReportDatum(val, i, idKey, reportItem, reportItemValue);\n        });\n    }\n    else {\n        result = computedItems.reduce((acc, d) => {\n            const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n            const val = d[reportItem][reportItemValue] ? d[reportItem][reportItemValue].value : d[reportItem].value;\n            return [...acc, createReportDatum(prevValue + val, d, idKey, reportItem, reportItemValue)];\n        }, []);\n    }\n    return idKey === 'date' ? padComputedReportItems(result) : result;\n}\nexport function createForecastDatum(value, computedItem, forecastItem = 'cost', forecastItemValue = 'total') {\n    const xVal = getDate(computedItem.date);\n    const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n    return {\n        x: xVal,\n        y: value === null ? null : yVal,\n        key: computedItem.date,\n        units: computedItem[forecastItem] && computedItem[forecastItem][forecastItemValue]\n            ? computedItem[forecastItem][forecastItemValue].units\n            : undefined,\n    };\n}\nexport function createForecastConeDatum(maxValue, minValue, computedItem, forecastItem = 'cost', forecastItemValue = 'total') {\n    const xVal = getDate(computedItem.date);\n    const yVal = isFloat(maxValue) ? parseFloat(maxValue.toFixed(2)) : isInt(maxValue) ? maxValue : 0;\n    const y0Val = isFloat(minValue) ? parseFloat(minValue.toFixed(2)) : isInt(minValue) ? minValue : 0;\n    return {\n        x: xVal,\n        y: maxValue === null ? null : yVal,\n        y0: minValue === null ? null : y0Val,\n        key: computedItem.date,\n        units: computedItem[forecastItem] && computedItem[forecastItem][forecastItemValue]\n            ? computedItem[forecastItem][forecastItemValue].units\n            : undefined,\n    };\n}\nexport function createReportDatum(value, computedItem, idKey = 'date', reportItem = 'cost', reportItemValue = 'total' // useful for infrastructure.usage values\n) {\n    const xVal = idKey === 'date' ? getDate(computedItem.id) : computedItem.label;\n    const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n    return {\n        x: xVal,\n        y: value === null ? null : yVal,\n        key: computedItem.id,\n        units: computedItem[reportItem]\n            ? computedItem[reportItem][reportItemValue]\n                ? computedItem[reportItem][reportItemValue].units // cost, infrastructure, supplementary\n                : computedItem[reportItem].units // capacity, limit, request, usage\n            : undefined,\n    };\n}\n// This pads computed report items with null datum objects, representing missing data at the begining and end of the\n// data series. The remaining data is left as is to allow for extrapolation. This allows us to display a \"no data\"\n// message in the tooltip, which helps distinguish between zero values and when there is no data available.\nexport function padComputedReportItems(datums) {\n    const result = [];\n    if (!datums || datums.length === 0) {\n        return result;\n    }\n    const firstDate = new Date(datums[0].key + 'T00:00:00');\n    const lastDate = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    // Pad start for missing data\n    let padDate = startOfMonth(firstDate);\n    for (let i = padDate.getDate(); i < firstDate.getDate(); i++) {\n        padDate.setDate(i);\n        const id = formatDate(padDate, 'YYYY-MM-DD');\n        result.push(createReportDatum(null, { id }, 'date', null));\n    }\n    // Fill middle with existing data\n    result.push(...datums);\n    // Pad end for missing data\n    padDate = new Date(lastDate);\n    for (let i = padDate.getDate() + 1; i <= endOfMonth(lastDate).getDate(); i++) {\n        padDate.setDate(i);\n        const id = formatDate(padDate, 'YYYY-MM-DD');\n        result.push(createReportDatum(null, { id }, 'date', null));\n    }\n    return result;\n}\nexport function getDatumDateRange(datums, offset = 0) {\n    if (!(datums && datums.length)) {\n        const today = new Date();\n        // If datums is empty, obtain the month based on offset (e.g., to show previous month in chart legends)\n        if (offset) {\n            today.setMonth(today.getMonth() - offset);\n        }\n        const firstOfMonth = startOfMonth(today);\n        return [firstOfMonth, today];\n    }\n    const start = new Date(datums[0].key + 'T00:00:00');\n    const end = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    return [start, end];\n}\nexport function getDateRange(datums, firstOfMonth = true, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDatumDateRange(datums, offset);\n    // Show the date range we are trying to cover (i.e., days 1-30/31)\n    if (firstOfMonth && start.setDate) {\n        start.setDate(1);\n    }\n    if (lastOfMonth && start.setDate) {\n        const lastDate = endOfMonth(start).getDate();\n        end.setDate(lastDate);\n    }\n    return [start, end];\n}\nexport function getDateRangeString(datums, firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(`chart.date_range`, {\n        count: getDate(end),\n        endDate: formatDate(end, 'DD'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'DD'),\n        year: getYear(end),\n    });\n}\nexport function getMonthRangeString(datums, key = 'chart.month_legend_label', offset = 0) {\n    const [start, end] = getDateRange(datums, true, false, offset);\n    return [\n        i18next.t(key, {\n            month: Number(formatDate(start, 'M')) - 1,\n        }),\n        i18next.t(key, {\n            month: Number(formatDate(end, 'M')) - 1,\n        }),\n    ];\n}\nexport function getMaxValue(datums) {\n    let max = 0;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            if (datum.y > max) {\n                max = datum.y;\n            }\n        });\n    }\n    return max;\n}\nexport function getTooltipContent(formatValue) {\n    return function labelFormatter(value, unit = null, options = {}) {\n        const lookup = unitLookupKey(unit);\n        switch (lookup) {\n            case 'core-hours':\n            case 'hrs':\n            case 'gb':\n            case 'gb-hours':\n            case 'gb-mo':\n            case 'vm-hours':\n                return i18next.t(`unit_tooltips.${lookup}`, {\n                    value: `${formatValue(value, unit, options)}`,\n                });\n            default:\n                return `${formatValue(value, unit, options)}`;\n        }\n    };\n}\nexport function getTooltipLabel(datum, formatValue, formatOptions, idKey = 'date', units) {\n    if (!datum.key) {\n        return '';\n    }\n    if (idKey === 'date') {\n        const date = format(datum.key, 'DD MMM YYYY');\n        return `${date} ${formatValue(datum.y, units ? units : datum.units, formatOptions)}`;\n    }\n    return datum.key.toString();\n}\nexport function getCostRangeString(datums, key = 'chart.cost_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(key, {\n        count: getDate(end),\n        endDate: formatDate(end, 'D'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'D'),\n        year: getYear(end),\n    });\n}\nexport function getUsageRangeString(datums, key = 'chart.usage_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    return getCostRangeString(datums, key, firstOfMonth, lastOfMonth, offset);\n}\nfunction isInt(n) {\n    return Number(n) === n && n % 1 === 0;\n}\nfunction isFloat(n) {\n    return Number(n) === n && n % 1 !== 0;\n}\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./charts-common.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./charts-common.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./charts-common.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Layout\nconst LAYOUT_PROPS = {\n    padding: 8,\n};\n// Victory theme properties only\nexport default {\n    area: Object.assign({}, LAYOUT_PROPS),\n    axis: Object.assign({}, LAYOUT_PROPS),\n    bar: Object.assign({}, LAYOUT_PROPS),\n    boxplot: Object.assign({}, LAYOUT_PROPS),\n    candlestick: Object.assign({}, LAYOUT_PROPS),\n    chart: Object.assign({}, LAYOUT_PROPS),\n    errorbar: Object.assign({}, LAYOUT_PROPS),\n    group: Object.assign({}, LAYOUT_PROPS),\n    legend: {},\n    line: Object.assign({}, LAYOUT_PROPS),\n    pie: Object.assign({}, LAYOUT_PROPS),\n    scatter: Object.assign({}, LAYOUT_PROPS),\n    stack: Object.assign({}, LAYOUT_PROPS),\n    tooltip: {},\n    voronoi: Object.assign({}, LAYOUT_PROPS),\n};\n","import getTheme from './theme-utils';\nconst ChartTheme = getTheme();\nexport default ChartTheme;\n","import { ChartThemeColor, ChartThemeVariant, getCustomTheme } from '@patternfly/react-charts';\nimport { default as ChartTheme } from './theme-koku';\n// Applies theme color and variant to base theme\nconst getTheme = () => getCustomTheme(ChartThemeColor.default, ChartThemeVariant.default, ChartTheme);\nexport default getTheme;\n","import { sort } from 'utils/sort';\nimport { getItemLabel } from './getItemLabel';\nexport function getComputedReportItems({ idKey, report, sortDirection = 0 /* asc */, sortKey = 'date', }) {\n    return sort(getUnsortedComputedReportItems({\n        idKey,\n        report,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nfunction getCostData(val, key, item) {\n    return {\n        markup: {\n            value: item ? item[key].markup.value : 0 + val[key] && val[key].markup ? val[key].markup.value : 0,\n            units: val[key] && val[key].markup ? val[key].markup.units : 'USD',\n        },\n        raw: {\n            value: item ? item[key].raw.value : 0 + val[key] && val[key].raw ? val[key].raw.value : 0,\n            units: val[key] && val[key].raw ? val[key].raw.units : 'USD',\n        },\n        total: {\n            value: item ? item[key].total.value : 0 + val[key] && val[key].total ? Number(val[key].total.value) : 0,\n            units: val[key] && val[key].total ? val[key].total.units : null,\n        },\n        usage: {\n            value: item ? item[key].usage.value : 0 + val[key] && val[key].usage ? Number(val[key].usage.value) : 0,\n            units: val[key] && val[key].usage ? val[key].usage.units : null,\n        },\n    };\n}\nfunction getUsageData(val, item) {\n    return {\n        capacity: {\n            value: item ? item.capacity.value : 0 + val.capacity ? val.capacity.value : 0,\n            units: val.capacity ? val.capacity.units : 'Core-Hours',\n        },\n        limit: {\n            value: item ? item.limit.value : 0 + val.limit ? val.limit.value : 0,\n            units: val.limit ? val.limit.units : 'Core-Hours',\n        },\n        request: {\n            value: item ? item.request.value : 0 + val.request ? val.request.value : 0,\n            units: val.request ? val.request.units : 'Core-Hours',\n        },\n        usage: {\n            value: item ? item.usage.value : 0 + val.usage ? val.usage.value : 0,\n            units: val.usage ? val.usage.units : 'Core-Hours',\n        },\n    };\n}\nexport function getUnsortedComputedReportItems({ report, idKey, }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint && dataPoint.values) {\n            const type = dataPoint.type;\n            dataPoint.values.forEach((val) => {\n                // Ensure unique map IDs -- https://github.com/project-koku/koku-ui/issues/706\n                const idSuffix = idKey !== 'date' && idKey !== 'cluster' && val.cluster ? `-${val.cluster}` : '';\n                // org_unit_id workaround for storage and instance-type APIs\n                let id = idKey === 'org_entities' ? val.org_unit_id : val[idKey];\n                if (id === undefined) {\n                    id = val.id || val.date;\n                }\n                const mapId = `${id}${idSuffix}`;\n                // 'clusters' will contain either the cluster alias or default cluster ID\n                const cluster_alias = val.clusters && val.clusters.length > 0 ? val.clusters[0] : undefined;\n                const cluster = cluster_alias || val.cluster;\n                const clusters = val.clusters ? val.clusters : [];\n                const date = val.date;\n                const delta_percent = val.delta_percent ? val.delta_percent : 0;\n                const delta_value = val.delta_value ? val.delta_value : 0;\n                const source_uuid = val.source_uuid ? val.source_uuid : [];\n                let label;\n                const itemLabelKey = getItemLabel({ report, idKey, value: val });\n                if (itemLabelKey === 'org_entities' && val.alias) {\n                    label = val.alias;\n                }\n                else if (itemLabelKey === 'account' && val.account_alias) {\n                    label = val.account_alias;\n                }\n                else if (itemLabelKey === 'cluster' && cluster_alias) {\n                    label = cluster_alias;\n                }\n                else if (val[itemLabelKey] instanceof Object) {\n                    label = val[itemLabelKey].value;\n                }\n                else {\n                    label = val[itemLabelKey];\n                }\n                if (label === undefined) {\n                    label = val.alias ? val.alias : val.id;\n                }\n                const item = itemMap.get(mapId);\n                if (item) {\n                    // This code block is typically entered with filter[resolution]=monthly\n                    itemMap.set(mapId, Object.assign(Object.assign(Object.assign({}, item), getUsageData(val, item)), { // capacity, limit, request, & usage\n                        cluster,\n                        clusters,\n                        date,\n                        delta_percent,\n                        delta_value, cost: getCostData(val, 'cost', item), id, infrastructure: getCostData(val, 'infrastructure', item), label,\n                        source_uuid, supplementary: getCostData(val, 'supplementary', item), type }));\n                }\n                else {\n                    // This code block is typically entered with filter[resolution]=daily\n                    itemMap.set(mapId, Object.assign(Object.assign({}, getUsageData(val)), { // capacity, limit, request, & usage\n                        cluster,\n                        clusters, cost: getCostData(val, 'cost'), date,\n                        delta_percent,\n                        delta_value,\n                        id, infrastructure: getCostData(val, 'infrastructure'), label,\n                        source_uuid, supplementary: getCostData(val, 'supplementary'), type }));\n                }\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\n","import { tagPrefix } from 'api/queries/query';\nexport function getItemLabel({ idKey, report, value }) {\n    let itemLabelKey = String(idKey);\n    if (report.meta && report.meta.group_by) {\n        const group_by = report.meta.group_by;\n        for (const key of Object.keys(group_by)) {\n            if (key.indexOf(tagPrefix)) {\n                const tagPrefixKey = tagPrefix + idKey;\n                if (value.hasOwnProperty(tagPrefixKey)) {\n                    itemLabelKey = tagPrefixKey;\n                }\n            }\n        }\n    }\n    return itemLabelKey;\n}\n","import { EmptyState, EmptyStateBody, EmptyStateVariant, Spinner, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst LoadingStateBase = ({ t }) => {\n    const title = t('loading_state.sources_title');\n    const subTitle = t('loading_state.sources_desc');\n    return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n        React.createElement(Spinner, { size: \"lg\" }),\n        React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, title),\n        React.createElement(EmptyStateBody, null, subTitle)));\n};\nconst LoadingState = withTranslation()(LoadingStateBase);\nexport { LoadingState };\n","import { parse, stringify } from 'qs';\nexport function getProvidersQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseProvidersQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","function getValueForItem(item, options) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    const sortKey = options.key;\n    return item[sortKey];\n}\nexport function sort(array, options) {\n    const { direction = 0 /* asc */ } = options || {};\n    return [...array].sort((a, b) => {\n        const aVal = direction === 0 /* asc */ ? getValueForItem(a, options) : getValueForItem(b, options);\n        const bVal = direction === 0 /* asc */ ? getValueForItem(b, options) : getValueForItem(a, options);\n        if (aVal > bVal) {\n            return -1;\n        }\n        if (aVal < bVal) {\n            return 1;\n        }\n        return 0;\n    });\n}\n","import './emptyValueState.scss';\nimport { MinusIcon } from '@patternfly/react-icons/dist/js/icons/minus-icon';\nimport React from 'react';\nexport const EmptyValueState = () => {\n    return (React.createElement(\"span\", { className: \"emptyValueContainer\" },\n        React.createElement(MinusIcon, null)));\n};\n","import './reportSummary.scss';\nimport { Card, CardBody, CardFooter, CardTitle, Title } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst ReportSummaryBase = ({ children, detailsLink, title, subTitle, status }) => (React.createElement(Card, { className: \"reportSummary\" },\n    React.createElement(CardTitle, null,\n        React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: \"subtitle\" }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { size: \"xs\" }),\n        React.createElement(Skeleton, { className: \"chartSkeleton\", size: \"md\" }),\n        React.createElement(Skeleton, { size: \"sm\" }),\n        React.createElement(Skeleton, { className: \"legendSkeleton\", size: \"xs\" }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst ReportSummary = withTranslation()(ReportSummaryBase);\nexport { ReportSummary };\n","import './reportSummaryAlt.scss';\nimport { Card, CardBody, CardFooter, CardTitle, Grid, GridItem, Title } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst OcpCloudReportSummaryAltBase = ({ children, detailsLink, status, subTitle, tabs, title, }) => (React.createElement(Card, { className: \"reportSummary\" },\n    React.createElement(Grid, { hasGutter: true },\n        React.createElement(GridItem, { xl: 8 },\n            React.createElement(\"div\", { className: \"cost\" },\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, title),\n                    Boolean(subTitle) && React.createElement(\"p\", { className: \"subtitle\" }, subTitle)),\n                React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { size: \"xs\" }),\n                    React.createElement(Skeleton, { className: \"chartSkeleton\", size: \"md\" }),\n                    React.createElement(Skeleton, { size: \"sm\" }),\n                    React.createElement(Skeleton, { className: \"legendSkeleton\", size: \"xs\" }))) : (children)))),\n        React.createElement(GridItem, { xl: 4 },\n            React.createElement(\"div\", { className: \"tops\" }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink))))))));\nconst ReportSummaryAlt = withTranslation()(OcpCloudReportSummaryAltBase);\nexport { ReportSummaryAlt };\n","import './reportSummaryDetails.scss';\nimport { Tooltip } from '@patternfly/react-core';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nconst ReportSummaryDetailsBase = ({ chartType, computedReportItem = 'cost', computedReportItemValue = 'total', costLabel, formatValue, formatOptions, report, requestFormatOptions, requestLabel, showTooltip = false, showUnits = false, showUsageFirst = false, t, units, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let supplementaryCost = React.createElement(EmptyValueState, null);\n    let infrastructureCost = React.createElement(EmptyValueState, null);\n    let request = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    const hasTotal = report && report.meta && report.meta.total;\n    const hasCost = hasTotal && report.meta.total.cost && report.meta.total.cost.total;\n    const hasCount = hasTotal && report.meta.total.count;\n    const hasSupplementaryCost = hasTotal &&\n        report.meta.total.supplementary &&\n        report.meta.total.supplementary.total &&\n        report.meta.total.supplementary.total.value;\n    const hasInfrastructureCost = hasTotal &&\n        report.meta.total.infrastructure &&\n        report.meta.total.infrastructure[computedReportItemValue] &&\n        report.meta.total.infrastructure[computedReportItemValue].value;\n    const hasRequest = hasTotal && report.meta.total.request;\n    const hasUsage = hasTotal && report.meta.total.usage;\n    if (hasTotal) {\n        cost = formatValue(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD', formatOptions);\n        supplementaryCost = formatValue(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost ? report.meta.total.supplementary.total.units : 'USD', formatOptions);\n        infrastructureCost = formatValue(hasInfrastructureCost ? report.meta.total.infrastructure[computedReportItemValue].value : 0, hasInfrastructureCost ? report.meta.total.infrastructure[computedReportItemValue].units : 'USD', formatOptions);\n        request = formatValue(hasRequest ? report.meta.total.request.value : 0, hasRequest ? report.meta.total.request.units : '', requestFormatOptions ? usageFormatOptions : formatOptions);\n        if (hasUsage && report.meta.total.usage.value >= 0) {\n            usage = formatValue(hasUsage ? report.meta.total.usage.value : 0, hasUsage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n        else {\n            // Workaround for https://github.com/project-koku/koku-ui/issues/1058\n            usage = formatValue(hasUsage ? report.meta.total.usage : 0, hasCount ? report.meta.total.count.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n    }\n    const getCostLayout = (showAltHeroFont = false) => {\n        let value = cost;\n        if (computedReportItem === \"infrastructure\" /* infrastructure */) {\n            value = infrastructureCost;\n        }\n        else if (computedReportItem === \"supplementary\" /* supplementary */) {\n            value = supplementaryCost;\n        }\n        const altHeroFont = showAltHeroFont ? 'Alt' : '';\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            showTooltip ? (React.createElement(Tooltip, { content: t('dashboard.total_cost_tooltip', {\n                    infrastructureCost,\n                    supplementaryCost,\n                }), enableFlip: true },\n                React.createElement(\"div\", { className: `value${altHeroFont}` }, value))) : (React.createElement(\"div\", { className: `value${altHeroFont}` }, value)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, costLabel))));\n    };\n    const getRequestLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasRequest ? report.meta.total.request.units : '';\n        const _units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            React.createElement(\"span\", { className: \"value\" }, request),\n            Boolean(showUnits && (units || (hasRequest && report.meta.total.request.value >= 0))) && (React.createElement(\"span\", { className: \"units\" }, unitsLabel)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, requestLabel))));\n    };\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasUsage ? report.meta.total.usage.units : '';\n        // added as a work-around for azure #1079\n        const _units = unitLookupKey(units ? units : usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            React.createElement(\"span\", { className: \"value\" }, usage),\n            Boolean(showUnits && (units || (hasUsage && report.meta.total.usage.value >= 0))) && (React.createElement(\"span\", { className: \"units\" }, unitsLabel)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (chartType === \"cost\" /* cost */ || chartType === \"supplementary\" /* supplementary */) {\n        return React.createElement(React.Fragment, null, getCostLayout(true));\n    }\n    else if (chartType === \"trend\" /* trend */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getCostLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getCostLayout(),\n            getUsageLayout()));\n    }\n    else if (chartType === \"usage\" /* usage */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getRequestLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getRequestLayout(),\n            getUsageLayout()));\n    }\n    else {\n        return null;\n    }\n};\nconst ReportSummaryDetails = withTranslation()(ReportSummaryDetailsBase);\nexport { ReportSummaryDetails };\n","import './reportSummaryItem.scss';\nimport { Progress, ProgressSize } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nconst ReportSummaryItemBase = ({ label, formatOptions, formatValue, t, totalValue, units, value, }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: \"reportSummaryItem\" },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst ReportSummaryItem = withTranslation()(ReportSummaryItemBase);\nexport { ReportSummaryItem };\n","import './reportSummaryItems.scss';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { getComputedReportItems, } from 'utils/computedReport/getComputedReportItems';\nclass ReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { idKey, report } = this.props;\n        const computedItems = getComputedReportItems({\n            report,\n            idKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [...computedItems.slice(0, otherIndex), ...computedItems.slice(otherIndex + 1), computedItems[otherIndex]];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: \"md\" }),\n                React.createElement(Skeleton, { size: \"md\", className: \"skeleton\" }),\n                React.createElement(Skeleton, { size: \"md\", className: \"skeleton\" }),\n                React.createElement(Skeleton, { size: \"md\", className: \"skeleton\" })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst ReportSummaryItems = withTranslation()(ReportSummaryItemsBase);\nexport { ReportSummaryItems };\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentCostData: {\n        fill: 'none',\n    },\n    currentInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    forecastColorScale: [chart_color_green_200.value],\n    forecastConeColorScale: [chart_color_green_100.value],\n    forecastData: {\n        fill: 'none',\n    },\n    forecastConeData: {\n        fill: chart_color_green_100.value,\n        strokeWidth: 0,\n    },\n    itemsPerRow: 3,\n    previousCostData: {\n        fill: 'none',\n    },\n    previousInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange, getMaxValue, getTooltipContent } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './costChart.styles';\nclass CostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentInfrastructureCostData, currentCostData, forecastData, forecastConeData, previousInfrastructureCostData, previousCostData, showForecast, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            const costInfrastructureTooltipKey = 'chart.cost_infrastructure_legend_tooltip';\n            const costTooltipKey = 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousCostData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentCostData, costTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentCostData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'previousInfrastructureCost',\n                    data: previousInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(previousInfrastructureCostData, costInfrastructureTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousInfrastructureCostData), { stroke: chartStyles.previousColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'currentInfrastructureCost',\n                    data: currentInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(currentInfrastructureCostData, costInfrastructureTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentInfrastructureCostData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n            ];\n            if (showForecast || (forecastData && forecastData.length)) {\n                series.push({\n                    childName: 'forecast',\n                    data: forecastData,\n                    legendItem: {\n                        name: getCostRangeString(forecastData, 'chart.cost_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, 'chart.cost_forecast_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastData), { stroke: chartStyles.forecastColorScale[0] }),\n                    },\n                });\n            }\n            if (showForecast || (forecastConeData && forecastConeData.length)) {\n                series.push({\n                    childName: 'forecastCone',\n                    data: forecastConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastConeColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastConeData), { stroke: chartStyles.forecastConeColorScale[0] }),\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer(series);\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = (series) => {\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.getTooltipLabel, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData(series, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { forecastData, legendItemsPerRow, showForecast } = this.props;\n            const { series, width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow\n                ? legendItemsPerRow\n                : width > (showForecast || (forecastData && forecastData.length) ? 650 : 450)\n                    ? chartStyles.itemsPerRow - (showForecast || (forecastData && forecastData.length) ? 0 : 1)\n                    : 1;\n            return (React.createElement(ChartLegend, { data: this.getLegendData(series), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\", responsive: false }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            return datum.y !== null ? formatter(datum.y, datum.units, formatDatumOptions) : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            const unavailable = []; // API data may not be available (e.g., on 1st of month)\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map(serie => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = (series, tooltip = false) => {\n            const { hiddenSeries, width } = this.state;\n            if (series) {\n                // Reorder forecast legend item\n                if (series.length > 4 && series[4].childName === 'forecast' && width > 650) {\n                    series.splice(2, 0, series.splice(4, 1)[0]);\n                }\n                if (series.length > 4 && series[2].childName === 'forecast' && width <= 650) {\n                    series.splice(4, 0, series.splice(2, 1)[0]);\n                }\n                const result = series.map((s, index) => {\n                    const data = Object.assign(Object.assign(Object.assign({ childName: s.childName }, s.legendItem), (tooltip && { name: s.legendItem.tooltip })), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                    return data;\n                });\n                return result;\n            }\n            return undefined;\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentInfrastructureCostData !== this.props.currentInfrastructureCostData ||\n            prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.previousInfrastructureCostData !== this.props.previousInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { currentInfrastructureCostData, currentCostData, forecastData, forecastConeData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentInfrastructure = currentInfrastructureCostData ? getMaxValue(currentInfrastructureCostData) : 0;\n        const maxCurrentCost = currentCostData ? getMaxValue(currentCostData) : 0;\n        const maxForecast = forecastData ? getMaxValue(forecastData) : 0;\n        const maxForecastCone = forecastConeData ? getMaxValue(forecastConeData) : 0;\n        const maxPreviousInfrastructure = previousInfrastructureCostData ? getMaxValue(previousInfrastructureCostData) : 0;\n        const maxPreviousUsage = previousCostData ? getMaxValue(previousCostData) : 0;\n        const maxValue = Math.max(maxCurrentInfrastructure, maxCurrentCost, maxForecast, maxForecastCone, maxPreviousInfrastructure, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, currentCostData, forecastData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const currentInfrastructureDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const currentCostDate = currentCostData ? getDate(getDateRange(currentCostData, true, true)[1]) : 0;\n        const forecastCostDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        const previousInfrastructureDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousCostData ? getDate(getDateRange(previousCostData, true, true)[1]) : 0;\n        return currentInfrastructureDate > 0 ||\n            currentCostDate > 0 ||\n            previousInfrastructureDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentInfrastructureDate, currentCostDate, forecastCostDate, previousInfrastructureDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, forecastData, padding = {\n            bottom: 75,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, showForecast, title, } = this.props;\n        const { cursorVoronoiContainer, series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > (showForecast || (forecastData && forecastData.length) ? 650 : 450)\n                ? containerHeight\n                : containerHeight + (showForecast || (forecastData && forecastData.length) ? 125 : 75)\n            : containerHeight;\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !this.isDataAvailable(),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: adjustedContainerHeight } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(series), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { CostChart };\n","import './reportSummaryCost.scss';\nimport { CostChart } from 'components/charts/costChart';\nimport React from 'react';\nconst ReportSummaryCost = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(CostChart, Object.assign({}, props))));\nexport { ReportSummaryCost };\n","import chart_color_black_200 from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport chart_color_green_100 from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport chart_color_green_200 from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport chart_color_green_300 from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_green_500 from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentMonthData: {\n        fill: 'none',\n    },\n    forecastColorScale: [chart_color_green_200.value],\n    forecastConeColorScale: [chart_color_green_100.value],\n    forecastData: {\n        fill: 'none',\n    },\n    forecastConeData: {\n        fill: chart_color_green_100.value,\n        strokeWidth: 0,\n    },\n    itemsPerRow: 4,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    previousMonthData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange, getMaxValue, getTooltipContent } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './trendChart.styles';\nclass TrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, forecastData, forecastConeData, previousData, showForecast, showSupplementaryLabel = false, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? 'chart.usage_legend_label'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_label'\n                    : 'chart.cost_legend_label';\n            const tooltipKey = showUsageLegendLabel\n                ? 'chart.usage_legend_tooltip'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_tooltip'\n                    : 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousData,\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousData, tooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousMonthData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentData,\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentData, tooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentMonthData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n            ];\n            if (showForecast || (forecastData && forecastData.length)) {\n                series.push({\n                    childName: 'forecast',\n                    data: forecastData,\n                    legendItem: {\n                        name: getCostRangeString(forecastData, 'chart.cost_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, 'chart.cost_forecast_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastData), { stroke: chartStyles.forecastColorScale[0] }),\n                    },\n                });\n            }\n            if (showForecast || (forecastConeData && forecastConeData.length)) {\n                series.push({\n                    childName: 'forecastCone',\n                    data: forecastConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastConeColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastConeData), { stroke: chartStyles.forecastConeColorScale[0] }),\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer(series);\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = (series) => {\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.getTooltipLabel, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData(series, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 50,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { series, width } = this.state;\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 700 ? chartStyles.itemsPerRow : 2;\n            // Todo: use PF legendAllowWrap feature\n            return (React.createElement(ChartLegend, { data: this.getLegendData(series), gutter: 20, height: 25, itemsPerRow: itemsPerRow, name: \"legend\", orientation: width > 150 ? 'horizontal' : 'vertical' }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions, units } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            const dy = datum.y !== null ? formatter(datum.y, units || datum.units, formatDatumOptions) : undefined;\n            const dy0 = datum.y0 && datum.y0 !== null ? formatter(datum.y0, units || datum.units, formatDatumOptions) : undefined;\n            if (dy && dy0) {\n                return i18next.t('chart.cost_forecast_cone_tooltip', { value0: dy0, value1: dy });\n            }\n            return dy ? dy : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            // Todo: Leave one legend item visible at all times?\n            // const { hiddenSeries, series } = this.state;\n            // const leaveVisible = hiddenSeries.size === series.length - 1;\n            // if (leaveVisible && !this.isSeriesHidden(props.index)) {\n            //   return;\n            // }\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            const unavailable = []; // API data may not be available (e.g., on 1st of month)\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map(serie => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = (series, tooltip = false) => {\n            const { hiddenSeries } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign(Object.assign({ childName: s.childName }, s.legendItem), (tooltip && { name: s.legendItem.tooltip })), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { currentData, forecastData, forecastConeData, previousData } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrent = currentData ? getMaxValue(currentData) : 0;\n        const maxForecast = forecastData ? getMaxValue(forecastData) : 0;\n        const maxForecastCone = forecastConeData ? getMaxValue(forecastConeData) : 0;\n        const maxPrevious = previousData ? getMaxValue(previousData) : 0;\n        const maxValue = Math.max(maxCurrent, maxForecast, maxForecastCone, maxPrevious);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentData, forecastData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        const forecastDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0 ? Math.max(currentDate, forecastDate, previousDate) : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 700\n                ? containerHeight\n                : containerHeight + 20\n            : containerHeight;\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !this.isDataAvailable(),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: adjustedContainerHeight } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(series), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { TrendChart };\n","import './reportSummaryTrend.scss';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nconst ReportSummaryTrend = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { ReportSummaryTrend };\n","import chart_color_black_200 from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport chart_color_green_100 from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport chart_color_green_200 from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport chart_color_green_300 from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_green_500 from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const chartStyles = {\n    chartContainer: {\n        marginTop: global_spacer_lg.value,\n    },\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_green_300.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_green_400.value,\n        },\n    },\n    itemsPerRow: 2,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        chart_color_black_200.value,\n        chart_color_green_400.value,\n        chart_color_black_200.value,\n        chart_color_green_300.value,\n    ],\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_black_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_black_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    // TBD: No grey scale, yet\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getDateRange, getMaxValue, getTooltipContent, getUsageRangeString } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './usageChart.styles';\nclass UsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n            const usageKey = 'chart.usage_legend_label';\n            const usageTooltipKey = 'chart.usage_legend_tooltip';\n            const requestKey = 'chart.requests_legend_label';\n            const requestTooltipKey = 'chart.requests_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousUsage',\n                    data: previousUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(previousUsageData, usageKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(previousUsageData, usageTooltipKey, false, false, 1),\n                    },\n                    style: chartStyles.previousUsageData,\n                },\n                {\n                    childName: 'currentUsage',\n                    data: currentUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(currentUsageData, usageKey, true, false),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[1],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(currentUsageData, usageTooltipKey, false, false),\n                    },\n                    style: chartStyles.currentUsageData,\n                },\n                {\n                    childName: 'previousRequest',\n                    data: previousRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(previousRequestData, requestKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[2],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(previousRequestData, requestTooltipKey, false, false, 1),\n                    },\n                    style: chartStyles.previousRequestData,\n                },\n                {\n                    childName: 'currentRequest',\n                    data: currentRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(currentRequestData, requestKey, true, false),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[3],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(currentRequestData, requestTooltipKey, false, false),\n                    },\n                    style: chartStyles.currentRequestData,\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer(series);\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = (series) => {\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.getTooltipLabel, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData(series, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { series, width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 300 ? chartStyles.itemsPerRow : 1;\n            return (React.createElement(ChartLegend, { data: this.getLegendData(series), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\" }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            return datum.y !== null ? formatter(datum.y, datum.units, formatDatumOptions) : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            const unavailable = []; // API data may not be available (e.g., on 1st of month)\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map(serie => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = (series, tooltip = false) => {\n            const { hiddenSeries } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign(Object.assign({ childName: s.childName }, s.legendItem), (tooltip && { name: s.legendItem.tooltip })), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentRequest = currentRequestData ? getMaxValue(currentRequestData) : 0;\n        const maxCurrentUsage = currentUsageData ? getMaxValue(currentUsageData) : 0;\n        const maxPreviousRequest = previousRequestData ? getMaxValue(previousRequestData) : 0;\n        const maxPreviousUsage = previousUsageData ? getMaxValue(previousUsageData) : 0;\n        const maxValue = Math.max(maxCurrentRequest, maxCurrentUsage, maxPreviousRequest, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n        const currentRequestDate = currentRequestData ? getDate(getDateRange(currentRequestData, true, true)[1]) : 0;\n        const currentUsageDate = currentUsageData ? getDate(getDateRange(currentUsageData, true, true)[1]) : 0;\n        const previousRequestDate = previousRequestData ? getDate(getDateRange(previousRequestData, true, true)[1]) : 0;\n        const previousUsageDate = previousUsageData ? getDate(getDateRange(previousUsageData, true, true)[1]) : 0;\n        return currentRequestDate > 0 || currentUsageDate > 0 || previousRequestDate > 0 || previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 75,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 480\n                ? containerHeight\n                : containerHeight + 20\n            : containerHeight;\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !this.isDataAvailable(),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: adjustedContainerHeight } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(series), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { UsageChart };\n","import './reportSummaryUsage.scss';\nimport { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nconst ReportSummaryUsage = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { ReportSummaryUsage };\n","export const getReleasePath = () => {\n    const pathName = window.location.pathname.split('/');\n    pathName.shift();\n    let release = '';\n    if (pathName[0] === 'beta') {\n        release = `/beta`;\n    }\n    return release;\n};\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nconst Loading = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(LoadingState, null))));\n};\nexport default withRouter(Loading);\n","import Loading from './loading';\nexport default Loading;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummary.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummary.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummary.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".chartSkeleton{height:125px;margin-bottom:var(--pf-global--spacer--md);margin-top:var(--pf-global--spacer--md)}.legendSkeleton{margin-top:var(--pf-global--spacer--md)}.reportSummary{height:100%}.subtitle{display:inline-block;font-size:var(--pf-global--FontSize--xs);color:var(--pf-global--Color--200);margin-bottom:0}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryAlt.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryAlt.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryAlt.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".chartSkeleton{height:175px;margin-bottom:var(--pf-global--spacer--md);margin-top:var(--pf-global--spacer--md)}.cost{flex-grow:1;min-height:470px;margin-tight:var(--pf-global--spacer--md)}.legendSkeleton{margin-top:var(--pf-global--spacer--md)}.reportSummary{height:100%}.subtitle{display:inline-block;font-size:var(--pf-global--FontSize--xs);color:var(--pf-global--Color--200);margin-bottom:0}.tops{margin-top:var(--pf-global--spacer--lg)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryDetails.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryDetails.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryDetails.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".reportSummaryDetails{margin-bottom:var(--pf-global--spacer--md);display:flex;align-Items:flex-end}.text{padding-bottom:var(--pf-global--spacer--sm);line-height:var(--pf-global--LineHeight--sm);font-size:var(--pf-global--FontSize--xs)}.units{padding-left:var(--pf-global--spacer--xs);padding-bottom:var(--pf-global--spacer--sm);line-height:var(--pf-global--LineHeight--sm);font-size:var(--pf-global--FontSize--xs);white-space:nowrap}.value{color:var(--pf-global--Color--100);margin-right:var(--pf-global--spacer--sm);font-size:var(--pf-global--FontSize--2xl)}.valueAlt{color:var(--pf-global--Color--100);margin-right:var(--pf-global--spacer--sm);font-size:var(--pf-global--FontSize--4xl)}.valueContainer{display:inline-block;margin-bottom:var(--pf-global--spacer--md);width:50%;word-Wrap:break-word}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./emptyValueState.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./emptyValueState.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./emptyValueState.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".emptyValueContainer{font-size:var(--pf-global--FontSize--sm)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryItem.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryItem.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryItem.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".reportSummaryItem:not(:last-child){margin-bottom:var(--pf-global--spacer--md)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryItems.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryItems.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryItems.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".skeleton{margin-top:var(--pf-global--spacer--md)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryCost.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryCost.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryCost.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".chart{margin-bottom:var(--pf-global--spacer--sm)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".chartOverride :not(foo) svg{overflow:visible}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryTrend.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryTrend.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryTrend.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".chart{margin-nottom:var(--pf-global--spacer--sm)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryUsage.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryUsage.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryUsage.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".chart{margin-bottom:var(--pf-global--spacer--sm)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./costIcon.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./costIcon.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./costIcon.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".cost-icon{height:120px}.cost-icon.st0{fill:blue !important}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","module.exports = __webpack_public_path__ + \"8a2acb5e9233030023f599e0f04ebd7f.svg\";","import './costIcon.scss';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst icon = require('./Cost-icon.svg');\nconst CostIcon = ({ className, t }) => {\n    return React.createElement(\"img\", { className: `cost-icon ${className}`, src: icon, alt: t('cost_management'), \"aria-hidden\": \"true\" });\n};\nexport default withTranslation()(CostIcon);\n","import CostIcon from './costIcon';\nexport default CostIcon;\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    iconSpacer: {\n        marginLeft: global_spacer_xs.value,\n    },\n    viewSources: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/js/icons/plus-circle-icon';\nimport CostIcon from 'components/icons/costIcon';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { withRouter } from 'react-router';\nimport { getReleasePath } from 'utils/pathname';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDocLink = (textKey, urlKey) => {\n            const { t } = this.props;\n            return (React.createElement(\"a\", { href: t(urlKey), rel: \"noreferrer\", target: \"_blank\" },\n                t(textKey),\n                React.createElement(\"span\", { style: styles.iconSpacer },\n                    React.createElement(ExternalLinkAltIcon, null))));\n        };\n        this.getRouteToSources = () => {\n            const release = getReleasePath();\n            return `${release}/settings/sources`;\n        };\n    }\n    render() {\n        const { providerType, t } = this.props;\n        let descKey = 'no_providers_state.overview_desc';\n        let titleKey = 'no_providers_state.overview_title';\n        let docUrlKey;\n        let icon;\n        let textKey;\n        switch (providerType) {\n            case \"aws\" /* aws */:\n                descKey = 'no_providers_state.aws_desc';\n                titleKey = 'no_providers_state.aws_title';\n                break;\n            case \"azure\" /* azure */:\n                descKey = 'no_providers_state.azure_desc';\n                titleKey = 'no_providers_state.azure_title';\n                break;\n            case \"gcp\" /* gcp */:\n                descKey = 'no_providers_state.gcp_desc';\n                titleKey = 'no_providers_state.gcp_title';\n                break;\n            case \"ocp\" /* ocp */:\n                descKey = 'no_providers_state.ocp_desc';\n                docUrlKey = 'docs.add_ocp_sources';\n                textKey = 'no_providers_state.ocp_add_sources';\n                titleKey = 'no_providers_state.ocp_title';\n                break;\n            default:\n                icon = CostIcon;\n        }\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: icon ? icon : PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, t(titleKey)),\n            React.createElement(EmptyStateBody, null, t(descKey)),\n            docUrlKey && textKey ? (React.createElement(\"div\", { style: styles.viewSources }, this.getDocLink(textKey, docUrlKey))) : (React.createElement(Button, { variant: \"primary\", component: \"a\", href: this.getRouteToSources() }, t('no_providers_state.get_started')))));\n    }\n}\nconst NoProvidersState = withRouter(withTranslation()(NoProvidersStateBase));\nexport { NoProvidersState };\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { NoProvidersState } from './noProvidersState';\nconst NoProviders = ({ providerType, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(NoProvidersState, { providerType: providerType }))));\n};\nexport default withRouter(NoProviders);\n","import NoProviders from './noProviders';\nexport default NoProviders;\n"],"sourceRoot":""}