{"version":3,"sources":["webpack:///./src/pages/dashboard/components/dashboardBase.tsx","webpack:///./src/pages/dashboard/components/dashboardWidget.styles.ts","webpack:///./src/pages/dashboard/components/dashboardWidgetBase.tsx","webpack:///./src/pages/dashboard/awsCloudDashboard/awsCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/awsCloudDashboard/awsCloudDashboard.tsx","webpack:///./src/pages/dashboard/awsDashboard/awsDashboardWidget.tsx","webpack:///./src/pages/dashboard/awsDashboard/awsDashboard.tsx","webpack:///./src/pages/dashboard/azureCloudDashboard/azureCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/azureCloudDashboard/azureCloudDashboard.tsx","webpack:///./src/pages/dashboard/azureDashboard/azureDashboardWidget.tsx","webpack:///./src/pages/dashboard/azureDashboard/azureDashboard.tsx","webpack:///./src/pages/dashboard/ocpCloudDashboard/ocpCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpCloudDashboard/ocpCloudDashboard.tsx","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboardWidget.styles.ts","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboard.tsx","webpack:///./src/pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboard.tsx","webpack:///./src/pages/dashboard/ocpUsageDashboard/ocpUsageDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpUsageDashboard/ocpUsageDashboard.tsx","webpack:///./src/pages/overview/overview.styles.ts","webpack:///./src/pages/overview/perspective.styles.ts","webpack:///./src/pages/overview/perspective.tsx","webpack:///./src/pages/overview/overview.tsx","webpack:///./src/pages/overview/index.ts","webpack:///./src/utils/formatValue.ts","webpack:///./src/components/charts/common/chartUtils.ts","webpack:///./src/components/charts/common/chart.styles.ts","webpack:///./src/components/charts/chartTheme/theme-koku.ts","webpack:///./src/components/charts/chartTheme/index.ts","webpack:///./src/components/charts/chartTheme/theme-utils.ts","webpack:///./src/utils/sort.ts","webpack:///./src/utils/computedReport/getComputedReportItems.ts","webpack:///./src/utils/computedReport/getItemLabel.ts","webpack:///./src/testIds.ts","webpack:///./src/components/state/loadingState/loadingState.tsx","webpack:///./src/components/state/emptyValueState/emptyValueState.styles.ts","webpack:///./src/components/state/emptyValueState/emptyValueState.tsx","webpack:///./src/components/reports/reportSummary/reportSummary.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummary.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryAlt.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryAlt.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryDetails.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryDetails.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryItem.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryItem.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryItems.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryItems.tsx","webpack:///./src/components/charts/costChart/costChart.styles.ts","webpack:///./src/components/charts/costChart/costChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryTrend.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryCost.tsx","webpack:///./src/components/charts/trendChart/trendChart.styles.ts","webpack:///./src/components/charts/trendChart/trendChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryTrend.tsx","webpack:///./src/components/charts/usageChart/usageChart.styles.ts","webpack:///./src/components/charts/usageChart/usageChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryUsage.tsx","webpack:///./src/pages/state/noProviders/noProvidersState.styles.ts","webpack:///./src/pages/state/noProviders/noProvidersState.tsx","webpack:///./src/pages/state/noProviders/notProviders.tsx","webpack:///./src/pages/state/noProviders/index.ts","webpack:///./src/pages/state/loading/loading.tsx","webpack:///./src/pages/state/loading/index.ts"],"names":["DashboardBase","DashboardWidget","selectWidgets","widgets","createElement","Grid","hasGutter","map","widgetId","details","showHorizontal","GridItem","sm","key","lg","xl","xl2","chartStyles","chartAltHeight","chartHeight","containerAltHeight","containerTrendHeight","containerUsageHeight","styles","tabs","marginTop","value","tabItems","Component","super","arguments","this","state","activeTabKey","buildDetailsLink","tab","getIdKeyForTab","props","currentTab","viewAllPath","group_by","order_by","cost","getChart","containerHeight","height","adjustContainerHeight","chartType","getCostChart","getTrendChart","getUsageChart","currentReport","previousReport","t","trend","units","getUnits","title","titleKey","computedReportItem","computedReportItemValue","currentInfrastructureData","type","previousInfrastructureData","currentUsageData","previousUsageData","currentCostData","currentInfrastructureCostData","formatDatumValue","formatValue","formatDatumOptions","formatOptions","previousCostData","previousInfrastructureCostData","showSupplementaryLabel","currentData","previousData","showUsageLegendLabel","currentRequestData","previousRequestData","getDetails","costLabel","getDetailsLabel","costKey","report","requestLabel","requestKey","showTooltip","showUnits","showUsageFirst","usageFormatOptions","usageLabel","usageKey","undefined","getDetailsLink","Link","to","onClick","handleInsightsNavClick","getDetailsLinkTitle","groupBy","getHorizontalLayout","currentReportFetchStatus","detailsLink","status","subTitle","getSubTitle","getTabs","getTitle","adjustChartContainerHeight","today","Date","month","endDate","startDate","count","getTab","index","tabsReport","tabsReportFetchStatus","Tab","eventKey","TabTitleText","getTabTitle","style","idKey","items","reportItem","getTabItem","availableTabs","topItems","activeTab","totalValue","hasTotal","meta","total","usage","id","label","toString","Tabs","isFilled","activeKey","onSelect","handleTabClick","getVerticalLayout","Boolean","appNavId","insights","chrome","appNavClick","secondaryNav","event","tabIndex","updateTab","setState","fetchReports","mapStateToProps","widget","awsCloudDashboard","selectWidget","queries","selectWidgetQueries","Object","assign","selectReport","reportPathsType","reportType","current","selectReportFetchStatus","previous","mapDispatchToProps","fetchWidgetReports","changeWidgetTab","AwsCloudDashboardWidget","selectCurrentWidgets","awsDashboard","AwsDashboardWidget","azureCloudDashboard","AzureCloudDashboardWidget","azureDashboard","AzureDashboardWidget","ocpCloudDashboard","OcpCloudDashboardWidget","ocpDashboard","currentQuery","previousQuery","tabsQuery","OcpDashboardWidget","ocpSupplementaryDashboard","OcpSupplementaryDashboardWidget","ocpUsageDashboard","OcpUsageDashboardWidget","info","marginLeft","verticalAlign","infoIcon","fontSize","infoTitle","fontWeight","perspective","marginBottom","headerOverride","perspectiveSelector","display","alignItems","perspectiveLabel","marginRight","var","defaultState","isPerspectiveOpen","getDropDownItems","options","option","DropdownItem","component","handleClick","getCurrentLabel","currentItem","onItemClicked","handleSelect","handleToggle","dropdownItems","Dropdown","toggle","DropdownToggle","onToggle","isOpen","Perspective","ocpOptions","infrastructureAllCloudOptions","infrastructureAwsOptions","infrastructureAzureOptions","infrastructureOcpOptions","showPopover","getAvailableTabs","isAwsAvailable","isAzureAvailable","isOcpAvailable","isOcpCloudAvailable","push","contentRef","createRef","getCurrentTab","getDefaultInfrastructurePerspective","getDefaultOcpPerspective","getPerspective","currentInfrastructurePerspective","currentOcpPerspective","handlePerspectiveClick","tabContentId","tabContentRef","getTabContent","val","TabContent","ref","emptyTab","Fragment","handlePopoverClick","show","awsProviders","azureProviders","ocpProviders","prevProps","awsProvidersFetchStatus","azureProvidersFetchStatus","ocpProvidersFetchStatus","isLoading","noAwsProviders","noAzureProviders","noOcpProviders","noProviders","showTabs","className","Title","headingLevel","size","Popover","enableFlip","bodyContent","awsProvidersQueryString","providers","selectProviders","selectProvidersFetchStatus","azureProvidersQueryString","ocpProvidersQueryString","unitLookupKey","unit","lookup","toLowerCase","fValue","formatCurrency","formatUsageGb","formatUsageHrs","unknownTypeFormatter","_unit","fractionDigits","toLocaleString","minimumFractionDigits","maximumFractionDigits","currency","transformReport","reportItemValue","sortKey","sortDirection","computedItems","result","i","createDatum","reduce","acc","d","prevValue","length","y","datums","firstDate","lastDate","padDate","getDate","setDate","padComputedReportItems","computedItem","xVal","yVal","n","Number","parseFloat","toFixed","isInt","x","name","getDateRange","firstOfMonth","lastOfMonth","offset","start","end","setMonth","getMonth","getDatumDateRange","getMaxValue","max","forEach","datum","getTooltipContent","getCostRangeString","year","getUsageRangeString","chartOverride","LAYOUT_PROPS","padding","area","axis","bar","boxplot","candlestick","chart","errorbar","group","legend","line","pie","scatter","stack","tooltip","voronoi","ChartTheme","default","getValueForItem","item","getComputedReportItems","labelKey","array","direction","sort","a","b","aVal","bVal","getUnsortedComputedReportItems","itemMap","Map","visitDataPoint","dataPoint","values","idSuffix","cluster","org_unit_id","mapId","cluster_alias","clusters","capacity","deltaPercent","delta_percent","deltaValue","delta_value","source_uuid","supplementary","infrastructure","itemLabelKey","String","keys","indexOf","tagPrefixKey","hasOwnProperty","getItemLabel","alias","account_alias","limit","request","get","set","Array","data","from","getTestProps","testIds","cluster_lnk","historical_data_btn","show_more_btn","tag_lnk","view_all_btn","export","cancel_btn","submit_btn","login","alert","form","username_input","password_input","submit","masthead","username","sidebarToggle","logout","onboarding","btn_cancel","btn_back","btn_continue","btn_close","type_selector","type_opt_aws","type_opt_ocp","type_opt_non","name_input","check_box_1","check_box_2","s3_input","clusterid_input","arn_input","add_btn","bucket_input","empty_state_add_btn","resource_name_input","cluster_id_input","type_input","view_all_link","sidebar","nav","link","backdrop","LoadingState","variant","large","container","EmptyValueState","chartSkeleton","legendSkeleton","reportSummary","subtitle","color","ReportSummary","children","Card","CardTitle","CardBody","Skeleton","CardFooter","flexGrow","minHeight","tops","ReportSummaryAlt","reportSummaryDetails","text","paddingBottom","lineHeight","paddingLeft","whiteSpace","valueContainer","width","wordWrap","ReportSummaryDetails","requestFormatOptions","supplementaryCost","infrastructureCost","hasCost","hasCount","hasSupplementaryCost","hasInfrastructureCost","hasRequest","hasUsage","getCostLayout","Tooltip","content","getRequestLayout","usageUnits","_units","unitsLabel","getUsageLayout","reportSummaryItem","ReportSummaryItemBase","percentVal","percentLabel","percent","Progress","defaultProps","v","ReportSummaryItem","skeleton","nextProps","otherIndex","findIndex","includes","slice","getItems","ReportSummaryItems","currentColorScale","chart_color_green_100","chart_color_green_200","chart_color_green_300","chart_color_green_400","chart_color_green_500","fill","strokeDasharray","itemsPerRow","previousColorScale","global_disabled_color_200","yAxis","axisLabel","grid","stroke","ticks","tickLabels","xAxis","containerRef","hiddenSeries","Set","initDatum","CursorVoronoiContainer","series","childName","legendItem","symbol","handleNavToggle","setTimeout","handleResize","clientWidth","ChartArea","has","interpolation","getContainer","cursorDimension","labels","isDataAvailable","getTooltipLabel","labelComponent","ChartLegendTooltip","legendData","getLegendData","mouseFollowTooltips","voronoiDimension","voronoiPadding","bottom","left","right","top","getLegend","legendItemsPerRow","ChartLegend","gutter","responsive","formatter","handleLegendClick","delete","add","unavailable","s","isSeriesHidden","getChartNames","serie","getEvents","chartNames","isHidden","legendName","onLegendClick","window","addEventListener","navToggle","on","removeEventListener","domain","maxCurrentInfrastructure","maxCurrentUsage","maxPreviousInfrastructure","maxPreviousUsage","maxValue","Math","ceil","currentInfrastructureDate","currentUsageDate","previousInfrastructureDate","previousUsageDate","getDomain","getEndDate","midDate","floor","adjustedContainerHeight","Chart","containerComponent","events","legendComponent","legendPosition","theme","ChartAxis","tickValues","dependentAxis","ReportSummaryCost","currentMonthData","previousMonthData","orientation","maxCurrent","maxPrevious","previousDate","currentDate","ReportSummaryTrend","chartContainer","legendColorScale","maxCurrentRequest","maxPreviousRequest","currentRequestDate","previousRequestDate","ReportSummaryUsage","viewSources","getViewSources","release","href","EmptyState","EmptyStateIcon","icon","EmptyStateBody","NoProvidersState","withRouter","Main"],"mappings":"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","file":"5f9be00cb61e758afc39.bundle.js","sourcesContent":["import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nconst DashboardBase = ({ DashboardWidget, selectWidgets, widgets }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { hasGutter: true }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return widget.details.showHorizontal ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(DashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { lg: 12, xl: 6, xl2: 4, key: widgetId },\n            React.createElement(DashboardWidget, { widgetId: widgetId })));\n    }))));\nexport { DashboardBase };\n","import global_spacer_2xl from '@patternfly/react-tokens/dist/js/global_spacer_2xl';\nimport global_spacer_xl from '@patternfly/react-tokens/dist/js/global_spacer_xl';\nexport const chartStyles = {\n    chartAltHeight: 250,\n    chartHeight: 180,\n    containerAltHeight: 250,\n    containerTrendHeight: 180,\n    containerUsageHeight: 180,\n};\nexport const styles = {\n    tabs: {\n        marginTop: global_spacer_2xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n};\n","import { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { getQuery } from 'api/queries/awsQuery';\nimport { transformReport } from 'components/charts/common/chartUtils';\nimport { ReportSummary, ReportSummaryAlt, ReportSummaryCost, ReportSummaryDetails, ReportSummaryItem, ReportSummaryItems, ReportSummaryTrend, ReportSummaryUsage, } from 'components/reports/reportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './dashboardWidget.styles';\nclass DashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = (tab) => {\n            const { details, getIdKeyForTab } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return `${details.viewAllPath}?${getQuery({\n                group_by: {\n                    [currentTab]: '*',\n                },\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.getChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { chartType } = this.props;\n            if (chartType === \"cost\" /* cost */) {\n                return this.getCostChart(containerHeight, height, adjustContainerHeight);\n            }\n            else if (chartType === \"supplementary\" /* supplementary */) {\n                return this.getTrendChart(containerHeight, height, adjustContainerHeight, true);\n            }\n            else if (chartType === \"trend\" /* trend */) {\n                return this.getTrendChart(containerHeight, height, adjustContainerHeight);\n            }\n            else if (chartType === \"usage\" /* usage */) {\n                return this.getUsageChart(height, adjustContainerHeight);\n            }\n            else {\n                return null;\n            }\n        };\n        // This chart displays cost and infrastructure cost\n        this.getCostChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { currentReport, previousReport, t, trend } = this.props;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            const computedReportItem = trend.computedReportItem || 'cost'; // cost, supplementaryCost, etc.\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            // Infrastructure data\n            const currentInfrastructureData = transformReport(currentReport, trend.type, 'date', 'infrastructure', computedReportItemValue);\n            const previousInfrastructureData = transformReport(previousReport, trend.type, 'date', 'infrastructure', computedReportItemValue);\n            // Usage data\n            const currentUsageData = transformReport(currentReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            const previousUsageData = transformReport(previousReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            return (React.createElement(ReportSummaryCost, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentCostData: currentUsageData, currentInfrastructureCostData: currentInfrastructureData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousCostData: previousUsageData, previousInfrastructureCostData: previousInfrastructureData, title: title }));\n        };\n        // This chart displays cost only\n        this.getTrendChart = (containerHeight, height, adjustContainerHeight = false, showSupplementaryLabel = false) => {\n            const { currentReport, details, previousReport, t, trend } = this.props;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            const computedReportItem = trend.computedReportItem || 'cost'; // cost, supplementaryCost, etc.\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            // Data\n            const currentData = transformReport(currentReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            const previousData = transformReport(previousReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            return (React.createElement(ReportSummaryTrend, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentData: currentData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousData, showSupplementaryLabel: showSupplementaryLabel, showUsageLegendLabel: details.showUsageLegendLabel, title: title, units: units }));\n        };\n        // This chart displays usage and requests\n        this.getUsageChart = (height, adjustContainerHeight = false) => {\n            const { currentReport, previousReport, t, trend } = this.props;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            // Request data\n            const currentRequestData = transformReport(currentReport, trend.type, 'date', 'request');\n            const previousRequestData = transformReport(previousReport, trend.type, 'date', 'request');\n            // Usage data\n            const currentUsageData = transformReport(currentReport, trend.type, 'date', 'usage');\n            const previousUsageData = transformReport(previousReport, trend.type, 'date', 'usage');\n            return (React.createElement(ReportSummaryUsage, { adjustContainerHeight: adjustContainerHeight, containerHeight: chartStyles.containerUsageHeight, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousRequestData: previousRequestData, previousUsageData: previousUsageData, title: title }));\n        };\n        this.getDetails = () => {\n            const { chartType, currentReport, details, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            const units = this.getUnits();\n            return (React.createElement(ReportSummaryDetails, { chartType: chartType, computedReportItem: computedReportItem, computedReportItemValue: computedReportItemValue, costLabel: this.getDetailsLabel(details.costKey, units), formatOptions: details.formatOptions, formatValue: formatValue, report: currentReport, requestLabel: this.getDetailsLabel(details.requestKey, units), showTooltip: details.showTooltip, showUnits: details.showUnits, showUsageFirst: details.showUsageFirst, units: details.units, usageFormatOptions: details.usageFormatOptions, usageLabel: this.getDetailsLabel(details.usageKey, units) }));\n        };\n        this.getDetailsLabel = (key, units) => {\n            const { t } = this.props;\n            return key ? t(key, { units: t(`units.${units}`) }) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, details } = this.props;\n            if (details.viewAllPath) {\n                return (React.createElement(Link, { to: this.buildDetailsLink(currentTab), onClick: this.handleInsightsNavClick }, this.getDetailsLinkTitle(currentTab)));\n            }\n            return null;\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { getIdKeyForTab, t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { containerAltHeight = chartStyles.containerAltHeight, chartAltHeight = chartStyles.chartAltHeight, currentReportFetchStatus, details, } = this.props;\n            return (React.createElement(ReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(containerAltHeight, chartAltHeight, details.adjustChartContainerHeight)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'D');\n            const startDate = formatDate(startOfMonth(today), 'D');\n            return t('aws_dashboard.widget_subtitle', {\n                count: getDate(today),\n                endDate,\n                month,\n                startDate,\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { getIdKeyForTab, tabsReport, tabsReportFetchStatus, trend } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) },\n                React.createElement(\"div\", { style: styles.tabItems },\n                    React.createElement(ReportSummaryItems, { computedReportItemValue: computedReportItemValue, idKey: currentTab, key: `${currentTab}-items`, report: tabsReport, status: tabsReportFetchStatus }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, details, getIdKeyForTab, tabsReport, topItems, trend } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            let totalValue;\n            const hasTotal = tabsReport && tabsReport.meta && tabsReport.meta.total;\n            if (computedReportItem === \"usage\" /* usage */) {\n                if (hasTotal && tabsReport.meta.total.usage) {\n                    totalValue = tabsReport.meta.total.usage.value;\n                }\n            }\n            else {\n                if (hasTotal &&\n                    tabsReport.meta.total[computedReportItem] &&\n                    tabsReport.meta.total[computedReportItem][computedReportItemValue]) {\n                    totalValue = tabsReport.meta.total[computedReportItem][computedReportItemValue].value;\n                }\n            }\n            if (activeTab === currentTab) {\n                return (React.createElement(ReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: totalValue, units: details.units ? details.units : this.getUnits(), value: reportItem[computedReportItem] }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { getIdKeyForTab, t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getUnits = () => {\n            const { currentReport, details, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            if (details.units) {\n                return details.units;\n            }\n            let units;\n            const hasTotal = currentReport && currentReport.meta && currentReport.meta.total;\n            if (computedReportItem === \"usage\" /* usage */) {\n                const hasUsage = hasTotal && currentReport.meta.total.usage;\n                units = hasUsage ? unitLookupKey(currentReport.meta.total.usage.units) : '';\n            }\n            else {\n                const hasCost = hasTotal &&\n                    currentReport.meta.total[computedReportItem] &&\n                    currentReport.meta.total[computedReportItem][computedReportItemValue];\n                units = hasCost ? unitLookupKey(currentReport.meta.total[computedReportItem][computedReportItemValue].units) : '';\n            }\n            return units;\n        };\n        this.getVerticalLayout = () => {\n            const { availableTabs, currentReportFetchStatus, details } = this.props;\n            return (React.createElement(ReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerTrendHeight, chartStyles.chartHeight, details.adjustChartContainerHeight),\n                Boolean(availableTabs) && React.createElement(\"div\", { style: styles.tabs }, this.getTabs())));\n        };\n        this.handleInsightsNavClick = () => {\n            const { details } = this.props;\n            if (details.appNavId) {\n                insights.chrome.appNavClick({\n                    id: details.appNavId,\n                    secondaryNav: true,\n                });\n            }\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, updateTab, widgetId } = this.props;\n        if (availableTabs) {\n            updateTab(id, availableTabs[0]);\n        }\n        fetchReports(widgetId);\n    }\n    render() {\n        const { details } = this.props;\n        return details.showHorizontal ? this.getHorizontalLayout() : this.getVerticalLayout();\n    }\n}\nexport { DashboardWidgetBase };\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsCloudDashboardActions, awsCloudDashboardSelectors, } from 'store/dashboard/awsCloudDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: awsCloudDashboardActions.fetchWidgetReports,\n    updateTab: awsCloudDashboardActions.changeWidgetTab,\n};\nconst AwsCloudDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AwsCloudDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsCloudDashboardSelectors } from 'store/dashboard/awsCloudDashboard';\nimport { AwsCloudDashboardWidget } from './awsCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: AwsCloudDashboardWidget,\n        selectWidgets: awsCloudDashboardSelectors.selectWidgets(state),\n        widgets: awsCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsCloudDashboard = translate()(connect(mapStateToProps, {})(DashboardBase));\nexport default AwsCloudDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsDashboardActions, awsDashboardSelectors } from 'store/dashboard/awsDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: awsDashboardActions.fetchWidgetReports,\n    updateTab: awsDashboardActions.changeWidgetTab,\n};\nconst AwsDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AwsDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsDashboardSelectors } from 'store/dashboard/awsDashboard';\nimport { AwsDashboardWidget } from './awsDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: AwsDashboardWidget,\n        selectWidgets: awsDashboardSelectors.selectWidgets(state),\n        widgets: awsDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsDashboard = translate()(connect(mapStateToProps, {})(DashboardBase));\nexport default AwsDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureCloudDashboardActions, azureCloudDashboardSelectors, } from 'store/dashboard/azureCloudDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"service_names\" /* service_names */:\n            return 'service_name';\n        case \"subscription_guids\" /* subscription_guids */:\n            return 'subscription_guid';\n        case \"resource_locations\" /* resource_locations */:\n            return 'resource_location';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = azureCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = azureCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: azureCloudDashboardActions.fetchWidgetReports,\n    updateTab: azureCloudDashboardActions.changeWidgetTab,\n};\nconst AzureCloudDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AzureCloudDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureCloudDashboardSelectors } from 'store/dashboard/azureCloudDashboard';\nimport { AzureCloudDashboardWidget } from './azureCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: AzureCloudDashboardWidget,\n        selectWidgets: azureCloudDashboardSelectors.selectWidgets(state),\n        widgets: azureCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AzureCloudDashboard = translate()(connect(mapStateToProps, {})(DashboardBase));\nexport default AzureCloudDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureDashboardActions, azureDashboardSelectors } from 'store/dashboard/azureDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"service_names\" /* service_names */:\n            return 'service_name';\n        case \"subscription_guids\" /* subscription_guids */:\n            return 'subscription_guid';\n        case \"resource_locations\" /* resource_locations */:\n            return 'resource_location';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = azureDashboardSelectors.selectWidget(state, widgetId);\n    const queries = azureDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: azureDashboardActions.fetchWidgetReports,\n    updateTab: azureDashboardActions.changeWidgetTab,\n};\nconst AzureDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AzureDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureDashboardSelectors } from 'store/dashboard/azureDashboard';\nimport { AzureDashboardWidget } from './azureDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: AzureDashboardWidget,\n        selectWidgets: azureDashboardSelectors.selectWidgets(state),\n        widgets: azureDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AzureDashboard = translate()(connect(mapStateToProps, {})(DashboardBase));\nexport default AzureDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardActions, ocpCloudDashboardSelectors, } from 'store/dashboard/ocpCloudDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"services\" /* services */:\n            return 'service';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpCloudDashboardActions.fetchWidgetReports,\n    updateTab: ocpCloudDashboardActions.changeWidgetTab,\n};\nconst OcpCloudDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpCloudDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardSelectors } from 'store/dashboard/ocpCloudDashboard';\nimport { OcpCloudDashboardWidget } from './ocpCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: OcpCloudDashboardWidget,\n        selectWidgets: ocpCloudDashboardSelectors.selectWidgets(state),\n        widgets: ocpCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpCloudDashboard = translate()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpCloudDashboard;\n","export const chartStyles = {\n    chartAltHeight: 250,\n    containerAltHeight: 250,\n};\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardActions, ocpDashboardSelectors } from 'store/dashboard/ocpDashboard';\nimport { reportSelectors } from 'store/reports';\nimport { chartStyles } from './ocpDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, chartAltHeight: chartStyles.chartAltHeight, containerAltHeight: chartStyles.containerAltHeight, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpDashboardActions.fetchWidgetReports,\n    updateTab: ocpDashboardActions.changeWidgetTab,\n};\nconst OcpDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardSelectors } from 'store/dashboard/ocpDashboard';\nimport { OcpDashboardWidget } from './ocpDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: OcpDashboardWidget,\n        selectWidgets: ocpDashboardSelectors.selectWidgets(state),\n        widgets: ocpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpDashboard = translate()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpSupplementaryDashboardActions, ocpSupplementaryDashboardSelectors, } from 'store/dashboard/ocpSupplementaryDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpSupplementaryDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpSupplementaryDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpSupplementaryDashboardActions.fetchWidgetReports,\n    updateTab: ocpSupplementaryDashboardActions.changeWidgetTab,\n};\nconst OcpSupplementaryDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpSupplementaryDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpSupplementaryDashboardSelectors } from 'store/dashboard/ocpSupplementaryDashboard';\nimport { OcpSupplementaryDashboardWidget } from './ocpSupplementaryDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: OcpSupplementaryDashboardWidget,\n        selectWidgets: ocpSupplementaryDashboardSelectors.selectWidgets(state),\n        widgets: ocpSupplementaryDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpSupplementaryDashboard = translate()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpSupplementaryDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpUsageDashboardActions, ocpUsageDashboardSelectors, } from 'store/dashboard/ocpUsageDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpUsageDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpUsageDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpUsageDashboardActions.fetchWidgetReports,\n    updateTab: ocpUsageDashboardActions.changeWidgetTab,\n};\nconst OcpUsageDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpUsageDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpUsageDashboardSelectors } from 'store/dashboard/ocpUsageDashboard';\nimport { OcpUsageDashboardWidget } from './ocpUsageDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: OcpUsageDashboardWidget,\n        selectWidgets: ocpUsageDashboardSelectors.selectWidgets(state),\n        widgets: ocpUsageDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpUsageDashboard = translate()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpUsageDashboard;\n","import global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nimport { css } from 'emotion';\nexport const styles = {\n    info: {\n        marginLeft: global_spacer_sm.value,\n        verticalAlign: 'middle',\n    },\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    perspective: {\n        marginBottom: global_spacer_lg.value,\n        marginTop: global_spacer_lg.value,\n    },\n    tabs: {\n        marginTop: global_spacer_lg.value,\n    },\n};\nexport const headerOverride = css `\n  &.pf-c-page__main-section {\n    --pf-c-page__main-section--PaddingBottom: 0;\n  }\n`;\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    perspectiveSelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    perspectiveLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n};\n","import { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './perspective.styles';\nclass PerspectiveBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isPerspectiveOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getDropDownItems = () => {\n            const { options, t } = this.props;\n            return options.map(option => (React.createElement(DropdownItem, { component: \"button\", key: option.value, onClick: () => this.handleClick(option.value) }, t(option.label))));\n        };\n        this.getCurrentLabel = () => {\n            const { currentItem, options, t } = this.props;\n            let label = '';\n            for (const option of options) {\n                if (currentItem === option.value) {\n                    label = t(option.label);\n                    break;\n                }\n            }\n            return label;\n        };\n        this.handleClick = value => {\n            const { onItemClicked } = this.props;\n            if (onItemClicked) {\n                onItemClicked(value);\n            }\n        };\n        this.handleSelect = () => {\n            this.setState({\n                isPerspectiveOpen: !this.state.isPerspectiveOpen,\n            });\n        };\n        this.handleToggle = isPerspectiveOpen => {\n            this.setState({\n                isPerspectiveOpen,\n            });\n        };\n    }\n    render() {\n        const { t } = this.props;\n        const { isPerspectiveOpen } = this.state;\n        const dropdownItems = this.getDropDownItems();\n        return (React.createElement(\"div\", { style: styles.perspectiveSelector },\n            React.createElement(\"label\", { style: styles.perspectiveLabel }, t('overview.perspective.label')),\n            React.createElement(Dropdown, { onSelect: this.handleSelect, toggle: React.createElement(DropdownToggle, { onToggle: this.handleToggle }, this.getCurrentLabel()), isOpen: isPerspectiveOpen, dropdownItems: dropdownItems })));\n    }\n}\nconst Perspective = translate()(PerspectiveBase);\nexport { Perspective };\n","import { Popover, Tab, TabContent, Tabs, TabTitleText, Title } from '@patternfly/react-core';\nimport { InfoCircleIcon } from '@patternfly/react-icons/dist/js/icons/info-circle-icon';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport AwsCloudDashboard from 'pages/dashboard/awsCloudDashboard/awsCloudDashboard';\nimport AwsDashboard from 'pages/dashboard/awsDashboard/awsDashboard';\nimport AzureCloudDashboard from 'pages/dashboard/azureCloudDashboard/azureCloudDashboard';\nimport AzureDashboard from 'pages/dashboard/azureDashboard/azureDashboard';\nimport OcpCloudDashboard from 'pages/dashboard/ocpCloudDashboard/ocpCloudDashboard';\nimport OcpDashboard from 'pages/dashboard/ocpDashboard/ocpDashboard';\nimport OcpSupplementaryDashboard from 'pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboard';\nimport OcpUsageDashboard from 'pages/dashboard/ocpUsageDashboard/ocpUsageDashboard';\nimport Loading from 'pages/state/loading';\nimport NoProviders from 'pages/state/noProviders';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsProvidersQuery, azureProvidersQuery, ocpProvidersQuery, providersSelectors } from 'store/providers';\nimport { headerOverride, styles } from './overview.styles';\nimport { Perspective } from './perspective';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"infrastructure\" /* infrastructure */:\n            return 'infrastructure';\n        case \"ocp\" /* ocp */:\n            return 'ocp';\n    }\n};\n// Ocp options\nconst ocpOptions = [\n    { label: 'overview.perspective.all', value: 'all' },\n    { label: 'overview.perspective.supplementary', value: 'supplementary' },\n];\n// Infrastructure all cloud options\nconst infrastructureAllCloudOptions = [{ label: 'overview.perspective.all_cloud', value: 'all_cloud' }];\n// Infrastructure AWS options\nconst infrastructureAwsOptions = [\n    { label: 'overview.perspective.aws', value: 'aws' },\n    { label: 'overview.perspective.aws_cloud', value: 'aws_cloud' },\n];\n// Infrastructure Azure options\nconst infrastructureAzureOptions = [\n    { label: 'overview.perspective.azure', value: 'azure' },\n    { label: 'overview.perspective.azure_cloud', value: 'azure_cloud' },\n];\n// Infrastructure Ocp options\nconst infrastructureOcpOptions = [{ label: 'overview.perspective.ocp_usage', value: 'ocp_usage' }];\nclass OverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            activeTabKey: 0,\n            showPopover: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getAvailableTabs = () => {\n            const availableTabs = [];\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            const isOcpCloudAvailable = this.isOcpCloudAvailable();\n            if (isOcpAvailable) {\n                availableTabs.push({\n                    contentRef: React.createRef(),\n                    tab: \"ocp\" /* ocp */,\n                });\n            }\n            if (isAwsAvailable || isAzureAvailable || isOcpCloudAvailable) {\n                availableTabs.push({\n                    contentRef: React.createRef(),\n                    tab: \"infrastructure\" /* infrastructure */,\n                });\n            }\n            return availableTabs;\n        };\n        this.getCurrentTab = () => {\n            const { activeTabKey } = this.state;\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            const isOcpCloudAvailable = this.isOcpCloudAvailable();\n            const showOcpOnly = isOcpAvailable && !(isAwsAvailable || isAzureAvailable || isOcpCloudAvailable);\n            const showInfrastructureOnly = !isOcpAvailable && (isAwsAvailable || isAzureAvailable || isOcpCloudAvailable);\n            if (showOcpOnly) {\n                return \"ocp\" /* ocp */;\n            }\n            else if (showInfrastructureOnly) {\n                return \"infrastructure\" /* infrastructure */;\n            }\n            else {\n                return activeTabKey === 0 ? \"ocp\" /* ocp */ : \"infrastructure\" /* infrastructure */;\n            }\n        };\n        this.getDefaultInfrastructurePerspective = () => {\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            if (isOcpAvailable) {\n                return \"all_cloud\" /* allCloud */;\n            }\n            if (isAwsAvailable) {\n                return \"aws\" /* aws */;\n            }\n            if (isAzureAvailable) {\n                return \"azure\" /* azure */;\n            }\n            return undefined;\n        };\n        this.getDefaultOcpPerspective = () => {\n            const isOcpAvailable = this.isOcpAvailable();\n            if (isOcpAvailable) {\n                return \"all\" /* all */;\n            }\n            return undefined;\n        };\n        this.getPerspective = () => {\n            const { currentInfrastructurePerspective, currentOcpPerspective } = this.state;\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            if (!(isAwsAvailable || isAzureAvailable || isOcpAvailable)) {\n                return null;\n            }\n            // Dynamically show options if providers are available\n            const options = [];\n            if (this.getCurrentTab() === \"infrastructure\" /* infrastructure */) {\n                if (isOcpAvailable) {\n                    options.push(...infrastructureAllCloudOptions);\n                }\n                if (isAwsAvailable) {\n                    options.push(...infrastructureAwsOptions);\n                }\n                if (isAzureAvailable) {\n                    options.push(...infrastructureAzureOptions);\n                }\n                if (isOcpAvailable) {\n                    options.push(...infrastructureOcpOptions);\n                }\n            }\n            else {\n                options.push(...ocpOptions);\n            }\n            const currentItem = this.getCurrentTab() === \"infrastructure\" /* infrastructure */ ? currentInfrastructurePerspective : currentOcpPerspective;\n            return (React.createElement(Perspective, { currentItem: currentItem || options[0].value, onItemClicked: this.handlePerspectiveClick, options: options }));\n        };\n        this.getTab = (tab, contentRef, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, tabContentId: `tab-${index}`, tabContentRef: contentRef, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) }));\n        };\n        this.getTabContent = (availableTabs) => {\n            return availableTabs.map((val, index) => {\n                return (React.createElement(TabContent, { eventKey: index, key: `${getIdKeyForTab(val.tab)}-tabContent`, id: `tab-${index}`, ref: val.contentRef }, this.getTabItem(val.tab, index)));\n            });\n        };\n        this.getTabItem = (tab, index) => {\n            const { activeTabKey, currentInfrastructurePerspective, currentOcpPerspective } = this.state;\n            const emptyTab = React.createElement(React.Fragment, null); // Lazily load tabs\n            if (activeTabKey !== index) {\n                return emptyTab;\n            }\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === \"infrastructure\" /* infrastructure */) {\n                if (currentInfrastructurePerspective === \"all_cloud\" /* allCloud */) {\n                    return React.createElement(OcpCloudDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"aws\" /* aws */) {\n                    return React.createElement(AwsDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"aws_cloud\" /* awsFiltered */) {\n                    return React.createElement(AwsCloudDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"azure\" /* azure */) {\n                    return React.createElement(AzureDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"azure_cloud\" /* azureCloud */) {\n                    return React.createElement(AzureCloudDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"ocp_usage\" /* ocpUsage */) {\n                    return React.createElement(OcpUsageDashboard, null);\n                }\n                else {\n                    return React.createElement(OcpCloudDashboard, null); // default\n                }\n            }\n            else if (currentTab === \"ocp\" /* ocp */) {\n                if (currentOcpPerspective === \"all\" /* all */) {\n                    return React.createElement(OcpDashboard, null);\n                }\n                else if (currentOcpPerspective === \"supplementary\" /* supplementary */) {\n                    return React.createElement(OcpSupplementaryDashboard, null);\n                }\n                else {\n                    return React.createElement(OcpDashboard, null); // default\n                }\n            }\n            else {\n                return emptyTab;\n            }\n        };\n        this.getTabs = (availableTabs) => {\n            const { activeTabKey } = this.state;\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((val, index) => this.getTab(val.tab, val.contentRef, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            if (tab === \"infrastructure\" /* infrastructure */) {\n                return t('overview.infrastructure');\n            }\n            else if (tab === \"ocp\" /* ocp */) {\n                return t('overview.ocp');\n            }\n        };\n        this.handlePerspectiveClick = (value) => {\n            const currentTab = this.getCurrentTab();\n            this.setState(Object.assign(Object.assign({}, (currentTab === \"infrastructure\" /* infrastructure */ && {\n                currentInfrastructurePerspective: value,\n            })), (currentTab === \"ocp\" /* ocp */ && { currentOcpPerspective: value })));\n        };\n        this.handlePopoverClick = () => {\n            this.setState({\n                show: !this.state.showPopover,\n            });\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { activeTabKey } = this.state;\n            if (activeTabKey !== tabIndex) {\n                this.setState({\n                    activeTabKey: tabIndex,\n                });\n            }\n        };\n        this.isAwsAvailable = () => {\n            const { awsProviders } = this.props;\n            return awsProviders !== undefined && awsProviders.meta !== undefined && awsProviders.meta.count > 0;\n        };\n        this.isAzureAvailable = () => {\n            const { azureProviders } = this.props;\n            return azureProviders !== undefined && azureProviders.meta !== undefined && azureProviders.meta.count > 0;\n        };\n        this.isOcpAvailable = () => {\n            const { ocpProviders } = this.props;\n            return ocpProviders !== undefined && ocpProviders.meta !== undefined && ocpProviders.meta.count > 0;\n        };\n        this.isOcpCloudAvailable = () => {\n            return this.isAwsAvailable() && this.isOcpAvailable();\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            currentInfrastructurePerspective: this.getDefaultInfrastructurePerspective(),\n            currentOcpPerspective: this.getDefaultOcpPerspective(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { awsProviders, azureProviders, ocpProviders } = this.props;\n        if (prevProps.awsProviders !== awsProviders ||\n            prevProps.azureProviders !== azureProviders ||\n            prevProps.ocpProviders !== ocpProviders) {\n            this.setState({\n                currentInfrastructurePerspective: this.getDefaultInfrastructurePerspective(),\n                currentOcpPerspective: this.getDefaultOcpPerspective(),\n            });\n        }\n    }\n    render() {\n        const { awsProvidersFetchStatus, azureProvidersFetchStatus, ocpProvidersFetchStatus, t } = this.props;\n        const availableTabs = this.getAvailableTabs();\n        const isLoading = awsProvidersFetchStatus === 1 /* inProgress */ ||\n            azureProvidersFetchStatus === 1 /* inProgress */ ||\n            ocpProvidersFetchStatus === 1 /* inProgress */;\n        const noAwsProviders = !this.isAwsAvailable() && awsProvidersFetchStatus === 2 /* complete */;\n        const noAzureProviders = !this.isAzureAvailable() && azureProvidersFetchStatus === 2 /* complete */;\n        const noOcpProviders = !this.isOcpAvailable() && ocpProvidersFetchStatus === 2 /* complete */;\n        const noProviders = noAwsProviders && noAzureProviders && noOcpProviders;\n        const showTabs = !(noProviders || isLoading);\n        if (noProviders) {\n            return React.createElement(NoProviders, null);\n        }\n        else if (isLoading) {\n            return React.createElement(Loading, null);\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"section\", { className: `pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light ${showTabs ? headerOverride : ''}` },\n                React.createElement(\"header\", { className: \"pf-u-display-flex pf-u-justify-content-space-between pf-u-align-items-center\" },\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"xl\" },\n                        t('overview.title'),\n                        Boolean(showTabs) && (React.createElement(\"span\", { style: styles.infoIcon },\n                            React.createElement(Popover, { \"aria-label\": t('ocp_details.supplementary_aria_label'), enableFlip: true, bodyContent: React.createElement(React.Fragment, null,\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.ocp_cloud')),\n                                    React.createElement(\"p\", null, t('overview.ocp_cloud_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.ocp')),\n                                    React.createElement(\"p\", null, t('overview.ocp_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.aws')),\n                                    React.createElement(\"p\", null, t('overview.aws_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.azure')),\n                                    React.createElement(\"p\", null, t('overview.azure_desc'))) },\n                                React.createElement(InfoCircleIcon, { style: styles.info, onClick: this.handlePopoverClick })))))),\n                Boolean(showTabs) && (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tabs }, this.getTabs(availableTabs)),\n                    React.createElement(\"div\", { style: styles.perspective }, this.getPerspective())))),\n            React.createElement(\"section\", { className: \"pf-l-page__main-section pf-c-page__main-section\", \"page-type\": \"cost-management-overview\" }, this.getTabContent(availableTabs))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const awsProvidersQueryString = getProvidersQuery(awsProvidersQuery);\n    const awsProviders = providersSelectors.selectProviders(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const awsProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const azureProvidersQueryString = getProvidersQuery(azureProvidersQuery);\n    const azureProviders = providersSelectors.selectProviders(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const azureProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const ocpProvidersQueryString = getProvidersQuery(ocpProvidersQuery);\n    const ocpProviders = providersSelectors.selectProviders(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    const ocpProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    return {\n        awsProviders,\n        awsProvidersFetchStatus,\n        awsProvidersQueryString,\n        azureProviders,\n        azureProvidersFetchStatus,\n        azureProvidersQueryString,\n        ocpProviders,\n        ocpProvidersFetchStatus,\n        ocpProvidersQueryString,\n    };\n});\nconst Overview = translate()(connect(mapStateToProps)(OverviewBase));\nexport default Overview;\n","import Overview from './overview';\nexport default Overview;\n","export const unitLookupKey = unit => {\n    const lookup = unit ? unit.toLowerCase() : '';\n    switch (lookup) {\n        case 'usd':\n        case 'gb':\n        case 'gb-hours':\n        case 'gb-mo':\n        case 'core-hours':\n        case 'hrs':\n        case 'tag-mo':\n        case 'vm-hours':\n            return lookup;\n        default:\n            return '';\n    }\n};\nexport const formatValue = (value, unit, options = {}) => {\n    const lookup = unitLookupKey(unit);\n    const fValue = value || 0;\n    switch (lookup) {\n        case 'usd':\n            return formatCurrency(fValue, lookup, options);\n        case 'gb':\n        case 'gb-hours':\n        case 'gb-mo':\n        case 'tag-mo':\n        case 'vm-hours':\n            return formatUsageGb(fValue, lookup, options);\n        case 'core-hours':\n        case 'hrs':\n            return formatUsageHrs(fValue, lookup, options);\n        default:\n            return unknownTypeFormatter(fValue, lookup, options);\n    }\n};\nconst unknownTypeFormatter = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatCurrency = (value, unit, { fractionDigits = 2 } = {}) => {\n    let fValue = value;\n    if (!value) {\n        fValue = 0;\n    }\n    return fValue.toLocaleString('en', {\n        style: 'currency',\n        currency: unit || 'USD',\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatUsageGb = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatUsageHrs = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\n","import endOfMonth from 'date-fns/end_of_month';\nimport format from 'date-fns/format';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getYear from 'date-fns/get_year';\nimport startOfMonth from 'date-fns/start_of_month';\nimport i18next from 'i18next';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { unitLookupKey } from 'utils/formatValue';\nexport function transformReport(report, type = 1 /* daily */, key = 'date', reportItem = 'cost', reportItemValue = 'total') {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        idKey: key,\n        report,\n        reportItemValue,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedReportItems(items);\n    let result;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        result = computedItems.map(i => createDatum(i[reportItem], i, key, reportItem));\n    }\n    else {\n        result = computedItems.reduce((acc, d) => {\n            const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n            return [...acc, createDatum(prevValue + d[reportItem], d, key, reportItem)];\n        }, []);\n    }\n    return key === 'date' ? padComputedReportItems(result) : result;\n}\nexport function createDatum(value, computedItem, idKey = 'date', reportItem = 'cost') {\n    const xVal = idKey === 'date' ? getDate(computedItem.id) : computedItem.label;\n    const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n    return {\n        x: xVal,\n        y: value === null ? null : yVal,\n        key: computedItem.id,\n        name: computedItem.id,\n        units: computedItem.units ? computedItem.units[reportItem] : undefined,\n    };\n}\n// This pads computed report items with null datum objects, representing missing data at the begining and end of the\n// data series. The remaining data is left as is to allow for extrapolation. This allows us to display a \"no data\"\n// message in the tooltip, which helps distinguish between zero values and when there is no data available.\nexport function padComputedReportItems(datums) {\n    const result = [];\n    if (!datums || datums.length === 0) {\n        return result;\n    }\n    const firstDate = new Date(datums[0].key + 'T00:00:00');\n    const lastDate = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    // Pad start for missing data\n    let padDate = startOfMonth(firstDate);\n    for (let i = padDate.getDate(); i < firstDate.getDate(); i++) {\n        padDate.setDate(i);\n        const id = formatDate(padDate, 'YYYY-MM-DD');\n        result.push(createDatum(null, { id }, 'date', null));\n    }\n    // Fill middle with existing data\n    result.push(...datums);\n    // Pad end for missing data\n    padDate = new Date(lastDate);\n    for (let i = padDate.getDate() + 1; i <= endOfMonth(lastDate).getDate(); i++) {\n        padDate.setDate(i);\n        const id = formatDate(padDate, 'YYYY-MM-DD');\n        result.push(createDatum(null, { id }, 'date', null));\n    }\n    return result;\n}\nexport function getDatumDateRange(datums, offset = 0) {\n    if (!(datums && datums.length)) {\n        const today = new Date();\n        // If datums is empty, obtain the month based on offset (e.g., to show previous month in chart legends)\n        if (offset) {\n            today.setMonth(today.getMonth() - offset);\n        }\n        const firstOfMonth = startOfMonth(today);\n        return [firstOfMonth, today];\n    }\n    const start = new Date(datums[0].key + 'T00:00:00');\n    const end = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    return [start, end];\n}\nexport function getDateRange(datums, firstOfMonth = true, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDatumDateRange(datums, offset);\n    // Show the date range we are trying to cover (i.e., days 1-30/31)\n    if (firstOfMonth && start.setDate) {\n        start.setDate(1);\n    }\n    if (lastOfMonth && start.setDate) {\n        const lastDate = endOfMonth(start).getDate();\n        end.setDate(lastDate);\n    }\n    return [start, end];\n}\nexport function getDateRangeString(datums, firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(`chart.date_range`, {\n        count: getDate(end),\n        endDate: formatDate(end, 'DD'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'DD'),\n        year: getYear(end),\n    });\n}\nexport function getMonthRangeString(datums, key = 'chart.month_legend_label', offset = 0) {\n    const [start, end] = getDateRange(datums, true, false, offset);\n    return [\n        i18next.t(key, {\n            month: Number(formatDate(start, 'M')) - 1,\n        }),\n        i18next.t(key, {\n            month: Number(formatDate(end, 'M')) - 1,\n        }),\n    ];\n}\nexport function getMaxValue(datums) {\n    let max = 0;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            if (datum.y > max) {\n                max = datum.y;\n            }\n        });\n    }\n    return max;\n}\nexport function getTooltipContent(formatValue) {\n    return function labelFormatter(value, unit = null, options = {}) {\n        const lookup = unitLookupKey(unit);\n        switch (lookup) {\n            case 'core-hours':\n            case 'hrs':\n            case 'gb':\n            case 'gb-hours':\n            case 'gb-mo':\n            case 'vm-hours':\n                return i18next.t(`unit_tooltips.${lookup}`, {\n                    value: `${formatValue(value, unit, options)}`,\n                });\n            default:\n                return `${formatValue(value, unit, options)}`;\n        }\n    };\n}\nexport function getTooltipLabel(datum, formatValue, formatOptions, idKey = 'date', units) {\n    if (!datum.key) {\n        return '';\n    }\n    if (idKey === 'date') {\n        const date = format(datum.key, 'DD MMM YYYY');\n        return `${date} ${formatValue(datum.y, units ? units : datum.units, formatOptions)}`;\n    }\n    return datum.key.toString();\n}\nexport function getCostRangeString(datums, key = 'chart.cost_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(key, {\n        count: getDate(end),\n        endDate: formatDate(end, 'D'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'D'),\n        year: getYear(end),\n    });\n}\nexport function getUsageRangeString(datums, key = 'chart.usage_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    return getCostRangeString(datums, key, firstOfMonth, lastOfMonth, offset);\n}\nfunction isInt(n) {\n    return Number(n) === n && n % 1 === 0;\n}\nfunction isFloat(n) {\n    return Number(n) === n && n % 1 !== 0;\n}\n","import global_Color_dark_100 from '@patternfly/react-tokens/dist/js/global_Color_dark_100';\nimport global_Color_light_100 from '@patternfly/react-tokens/dist/js/global_Color_light_100';\nimport global_primary_color_100 from '@patternfly/react-tokens/dist/js/global_primary_color_100';\nimport global_primary_color_200 from '@patternfly/react-tokens/dist/js/global_primary_color_200';\nimport global_success_color_100 from '@patternfly/react-tokens/dist/js/global_success_color_100';\nimport global_success_color_200 from '@patternfly/react-tokens/dist/js/global_success_color_200';\nimport { css } from 'emotion';\nexport const chartStyles = {\n    padding: 8,\n    group: {\n        data: { strokeWidth: 2, fillOpacity: 0.4 },\n    },\n    tooltipText: {\n        fontSize: '14px',\n        fill: global_Color_light_100.value,\n    },\n    tooltipFlyout: { fill: global_Color_dark_100.value },\n    previousMonth: {\n        data: {\n            fill: global_success_color_200.value,\n            stroke: global_success_color_100.value,\n        },\n    },\n    currentMonth: {\n        data: {\n            fill: global_primary_color_100.value,\n            stroke: global_primary_color_200.value,\n        },\n    },\n};\nexport const chartOverride = css `\n  :not(foo) svg {\n    overflow: visible;\n  }\n`;\n","// Layout\nconst LAYOUT_PROPS = {\n    padding: 8,\n};\n// Victory theme properties only\nexport default {\n    area: Object.assign({}, LAYOUT_PROPS),\n    axis: Object.assign({}, LAYOUT_PROPS),\n    bar: Object.assign({}, LAYOUT_PROPS),\n    boxplot: Object.assign({}, LAYOUT_PROPS),\n    candlestick: Object.assign({}, LAYOUT_PROPS),\n    chart: Object.assign({}, LAYOUT_PROPS),\n    errorbar: Object.assign({}, LAYOUT_PROPS),\n    group: Object.assign({}, LAYOUT_PROPS),\n    legend: {},\n    line: Object.assign({}, LAYOUT_PROPS),\n    pie: Object.assign({}, LAYOUT_PROPS),\n    scatter: Object.assign({}, LAYOUT_PROPS),\n    stack: Object.assign({}, LAYOUT_PROPS),\n    tooltip: {},\n    voronoi: Object.assign({}, LAYOUT_PROPS),\n};\n","import getTheme from './theme-utils';\nconst ChartTheme = getTheme();\nexport default ChartTheme;\n","import { ChartThemeColor, ChartThemeVariant, getCustomTheme } from '@patternfly/react-charts';\nimport { default as ChartTheme } from './theme-koku';\n// Applies theme color and variant to base theme\nconst getTheme = () => getCustomTheme(ChartThemeColor.default, ChartThemeVariant.default, ChartTheme);\nexport default getTheme;\n","function getValueForItem(item, options) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    const sortKey = options.key;\n    return item[sortKey];\n}\nexport function sort(array, options) {\n    const { direction = 0 /* asc */ } = options || {};\n    return [...array].sort((a, b) => {\n        const aVal = direction === 0 /* asc */ ? getValueForItem(a, options) : getValueForItem(b, options);\n        const bVal = direction === 0 /* asc */ ? getValueForItem(b, options) : getValueForItem(a, options);\n        if (aVal > bVal) {\n            return -1;\n        }\n        if (aVal < bVal) {\n            return 1;\n        }\n        return 0;\n    });\n}\n","import { sort } from 'utils/sort';\nimport { getItemLabel } from './getItemLabel';\nexport function getComputedReportItems({ idKey, labelKey = idKey, report, reportItemValue = 'total', sortDirection = 0 /* asc */, sortKey = 'cost', }) {\n    return sort(getUnsortedComputedReportItems({\n        idKey,\n        labelKey,\n        report,\n        reportItemValue,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nexport function getUnsortedComputedReportItems({ report, idKey, labelKey = idKey, reportItemValue = 'total', }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint && dataPoint.values) {\n            const type = dataPoint.type;\n            dataPoint.values.forEach((value) => {\n                // Ensure unique map IDs -- https://github.com/project-koku/koku-ui/issues/706\n                const idSuffix = idKey !== 'date' && idKey !== 'cluster' && value.cluster ? `-${value.cluster}` : '';\n                // org_unit_id workaround for storage and instance-type APIs\n                const id = idKey === 'org_entities' ? value.id || value.org_unit_id : value[idKey];\n                const mapId = `${id}${idSuffix}`;\n                // clusters will either contain the cluster alias or default to cluster ID\n                const cluster_alias = value.clusters && value.clusters.length > 0 ? value.clusters[0] : undefined;\n                const cluster = cluster_alias || value.cluster;\n                const clusters = value.clusters ? value.clusters : [];\n                const capacity = value.capacity ? value.capacity.value : 0;\n                const cost = value.cost && value.cost.total ? value.cost.total.value : 0;\n                const deltaPercent = value.delta_percent ? value.delta_percent : 0;\n                const deltaValue = value.delta_value ? value.delta_value : 0;\n                const source_uuid = value.source_uuid ? value.source_uuid : [];\n                const supplementary = value.supplementary && value.supplementary.total ? value.supplementary.total.value : 0;\n                const infrastructure = value.infrastructure && value.infrastructure[reportItemValue]\n                    ? value.infrastructure[reportItemValue].value\n                    : 0;\n                let label;\n                const itemLabelKey = getItemLabel({ report, labelKey, value });\n                if (itemLabelKey === 'org_entities' && value.alias) {\n                    label = value.alias;\n                }\n                else if (itemLabelKey === 'account' && value.account_alias) {\n                    label = value.account_alias;\n                }\n                else if (itemLabelKey === 'cluster' && cluster_alias) {\n                    label = cluster_alias;\n                }\n                else if (value[itemLabelKey] instanceof Object) {\n                    label = value[itemLabelKey].value;\n                }\n                else {\n                    label = value[itemLabelKey];\n                }\n                const limit = value.limit ? value.limit.value : 0;\n                const request = value.request ? value.request.value : 0;\n                const usage = value.usage ? value.usage.value : 0;\n                const units = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, (value.capacity && { capacity: value.capacity.units })), { cost: value.cost && value.cost.total ? value.cost.total.units : 'USD' }), (value.limit && { limit: value.limit.units })), (value.infrastructure &&\n                    value.infrastructure.total && {\n                    infrastructure: value.infrastructure.total.units,\n                })), (value.request && { request: value.request.units })), (value.supplementary &&\n                    value.supplementary.total && {\n                    supplementary: value.supplementary.total.units,\n                })), (value.usage && { usage: value.usage.units }));\n                const item = itemMap.get(mapId);\n                if (item) {\n                    itemMap.set(mapId, Object.assign(Object.assign({}, item), { capacity: item.capacity + capacity, cost: item.cost + cost, supplementary: item.supplementary + supplementary, infrastructure: item.infrastructure + infrastructure, limit: item.limit + limit, request: item.request + request, usage: item.usage + usage }));\n                }\n                else {\n                    itemMap.set(mapId, {\n                        capacity,\n                        cluster,\n                        clusters,\n                        cost,\n                        deltaPercent,\n                        deltaValue,\n                        source_uuid,\n                        supplementary,\n                        id,\n                        infrastructure,\n                        label,\n                        limit,\n                        request,\n                        type,\n                        units,\n                        usage,\n                    });\n                }\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\n","import { tagPrefix } from 'api/queries/query';\nexport function getItemLabel({ report, labelKey, value }) {\n    let itemLabelKey = String(labelKey);\n    if (report.meta && report.meta.group_by) {\n        const group_by = report.meta.group_by;\n        for (const key of Object.keys(group_by)) {\n            if (key.indexOf(tagPrefix)) {\n                const tagPrefixKey = tagPrefix + labelKey;\n                if (value.hasOwnProperty(tagPrefixKey)) {\n                    itemLabelKey = tagPrefixKey;\n                }\n            }\n        }\n    }\n    return itemLabelKey;\n}\n","export const testIdProp = 'data-testid';\nexport const getTestProps = (id) => ({ [testIdProp]: id });\nexport const testIds = {\n    details: {\n        cluster_lnk: 'cluster-lnk',\n        historical_data_btn: 'historical-data-btn',\n        show_more_btn: 'show-more-btn',\n        tag_lnk: 'tag-lnk',\n        view_all_btn: 'view-all-btn',\n    },\n    export: {\n        cancel_btn: 'cancel-btn',\n        submit_btn: 'submit-btn',\n    },\n    login: {\n        alert: 'alert',\n        form: 'login-form',\n        username_input: 'username-input',\n        password_input: 'password-input',\n        submit: 'submit',\n    },\n    masthead: {\n        masthead: 'masthead',\n        username: 'username',\n        sidebarToggle: 'sidebar-toggle',\n        logout: 'logout',\n    },\n    onboarding: {\n        btn_cancel: 'btn-cancel',\n        btn_back: 'btn-back',\n        btn_continue: 'btn-continue',\n        btn_close: 'btn-close',\n        type_selector: 'type-selector',\n        type_opt_aws: 'type-option-aws',\n        type_opt_ocp: 'type-option-ocp',\n        type_opt_non: 'type-option-non',\n        name_input: 'name-input',\n        check_box_1: 'check-box-1',\n        check_box_2: 'check-box-2',\n        s3_input: 's3-input',\n        clusterid_input: 'clusterid-input',\n        arn_input: 'arn-input',\n    },\n    providers: {\n        add_btn: 'add-btn',\n        bucket_input: 'bucket-input',\n        cancel_btn: 'cancel-btn',\n        empty_state_add_btn: 'empty_state_add-btn',\n        name_input: 'provider-name-input',\n        resource_name_input: 'provider-resource-name-input',\n        cluster_id_input: 'provider-cluster-id-input',\n        submit_btn: 'submit-btn',\n        type_input: 'provider-type-input',\n        view_all_link: 'view-all-lnk',\n    },\n    sidebar: {\n        nav: 'vertical-nav',\n        link: 'vertical-nav-link',\n        backdrop: 'sidebar-backdrop',\n    },\n};\n","import { EmptyState, EmptyStateBody, EmptyStateVariant, Spinner, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nconst LoadingStateBase = ({ t }) => {\n    const title = t('loading_state.sources_title');\n    const subTitle = t('loading_state.sources_desc');\n    return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n        React.createElement(Spinner, { size: \"lg\" }),\n        React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, title),\n        React.createElement(EmptyStateBody, null, subTitle)));\n};\nconst LoadingState = translate()(LoadingStateBase);\nexport { LoadingState };\n","import global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nexport const styles = {\n    container: {\n        fontSize: global_FontSize_sm.value,\n    },\n};\n","import { MinusIcon } from '@patternfly/react-icons/dist/js/icons/minus-icon';\nimport React from 'react';\nimport { styles } from './emptyValueState.styles';\nexport const EmptyValueState = () => {\n    return (React.createElement(\"span\", { style: styles.container },\n        React.createElement(MinusIcon, null)));\n};\n","import global_Color_200 from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n};\n","import { Card, CardBody, CardFooter, CardTitle, Title } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './reportSummary.styles';\nconst ReportSummaryBase = ({ children, detailsLink, title, subTitle, status }) => (React.createElement(Card, { style: styles.reportSummary },\n    React.createElement(CardTitle, null,\n        React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { style: styles.subtitle }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { size: \"xs\" }),\n        React.createElement(Skeleton, { style: styles.chartSkeleton, size: \"md\" }),\n        React.createElement(Skeleton, { size: \"sm\" }),\n        React.createElement(Skeleton, { style: styles.legendSkeleton, size: \"xs\" }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst ReportSummary = translate()(ReportSummaryBase);\nexport { ReportSummary };\n","import global_Color_200 from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    chartSkeleton: {\n        height: '175px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '470px',\n        marginRight: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { Card, CardBody, CardFooter, CardTitle, Grid, GridItem, Title } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './reportSummaryAlt.styles';\nconst OcpCloudReportSummaryAltBase = ({ children, detailsLink, status, subTitle, tabs, title, }) => (React.createElement(Card, { style: styles.reportSummary },\n    React.createElement(Grid, { hasGutter: true },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { style: styles.cost },\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, title),\n                    Boolean(subTitle) && React.createElement(\"p\", { style: styles.subtitle }, subTitle)),\n                React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { size: \"xs\" }),\n                    React.createElement(Skeleton, { style: styles.chartSkeleton, size: \"md\" }),\n                    React.createElement(Skeleton, { size: \"sm\" }),\n                    React.createElement(Skeleton, { style: styles.legendSkeleton, size: \"xs\" }))) : (children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { style: styles.container },\n                React.createElement(\"div\", { style: styles.tops }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst ReportSummaryAlt = translate()(OcpCloudReportSummaryAltBase);\nexport { ReportSummaryAlt };\n","import global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_FontSize_4xl from '@patternfly/react-tokens/dist/js/global_FontSize_4xl';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_LineHeight_sm from '@patternfly/react-tokens/dist/js/global_LineHeight_sm';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    reportSummaryDetails: {\n        marginBottom: global_spacer_md.value,\n        display: 'flex',\n        alignItems: 'flex-end',\n    },\n    text: {\n        paddingBottom: global_spacer_sm.value,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    units: {\n        paddingLeft: global_spacer_xs.value,\n        paddingBottom: global_spacer_sm.value,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n        whiteSpace: 'nowrap',\n    },\n    value: {\n        color: global_Color_100.var,\n        marginRight: global_spacer_sm.value,\n        fontSize: global_FontSize_4xl.value,\n    },\n    valueContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        width: '50%',\n        wordWrap: 'break-word',\n    },\n};\n","import { Tooltip } from '@patternfly/react-core';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { styles } from './reportSummaryDetails.styles';\nconst ReportSummaryDetailsBase = ({ chartType, computedReportItem = 'cost', computedReportItemValue = 'total', costLabel, formatValue, formatOptions, report, requestFormatOptions, requestLabel, showTooltip = false, showUnits = false, showUsageFirst = false, t, units, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let supplementaryCost = React.createElement(EmptyValueState, null);\n    let infrastructureCost = React.createElement(EmptyValueState, null);\n    let request = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    const hasTotal = report && report.meta && report.meta.total;\n    const hasCost = hasTotal && report.meta.total.cost && report.meta.total.cost.total;\n    const hasCount = hasTotal && report.meta.total.count;\n    const hasSupplementaryCost = hasTotal &&\n        report.meta.total.supplementary &&\n        report.meta.total.supplementary.total &&\n        report.meta.total.supplementary.total.value;\n    const hasInfrastructureCost = hasTotal &&\n        report.meta.total.infrastructure &&\n        report.meta.total.infrastructure[computedReportItemValue] &&\n        report.meta.total.infrastructure[computedReportItemValue].value;\n    const hasRequest = hasTotal && report.meta.total.request;\n    const hasUsage = hasTotal && report.meta.total.usage;\n    if (hasTotal) {\n        cost = formatValue(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD', formatOptions);\n        supplementaryCost = formatValue(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost ? report.meta.total.supplementary.total.units : 'USD', formatOptions);\n        infrastructureCost = formatValue(hasInfrastructureCost ? report.meta.total.infrastructure[computedReportItemValue].value : 0, hasInfrastructureCost ? report.meta.total.infrastructure[computedReportItemValue].units : 'USD', formatOptions);\n        request = formatValue(hasRequest ? report.meta.total.request.value : 0, hasRequest ? report.meta.total.request.units : '', requestFormatOptions ? usageFormatOptions : formatOptions);\n        if (hasUsage && report.meta.total.usage.value >= 0) {\n            usage = formatValue(hasUsage ? report.meta.total.usage.value : 0, hasUsage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n        else {\n            // Workaround for https://github.com/project-koku/koku-ui/issues/1058\n            usage = formatValue(hasUsage ? report.meta.total.usage : 0, hasCount ? report.meta.total.count.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n    }\n    const getCostLayout = () => {\n        let value = cost;\n        if (computedReportItem === \"infrastructure\" /* infrastructure */) {\n            value = infrastructureCost;\n        }\n        else if (computedReportItem === \"supplementary\" /* supplementary */) {\n            value = supplementaryCost;\n        }\n        return (React.createElement(\"div\", { style: styles.valueContainer },\n            showTooltip ? (React.createElement(Tooltip, { content: t('dashboard.total_cost_tooltip', {\n                    infrastructureCost,\n                    supplementaryCost,\n                }), enableFlip: true },\n                React.createElement(\"div\", { style: styles.value }, value))) : (React.createElement(\"div\", { style: styles.value }, value)),\n            React.createElement(\"div\", { style: styles.text },\n                React.createElement(\"div\", null, costLabel))));\n    };\n    const getRequestLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasRequest ? report.meta.total.request.units : '';\n        const _units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { style: styles.valueContainer },\n            React.createElement(\"div\", { style: styles.value },\n                request,\n                Boolean(showUnits && (units || (hasRequest && report.meta.total.request.value >= 0))) && (React.createElement(\"span\", { style: styles.units }, unitsLabel))),\n            React.createElement(\"div\", { style: styles.text },\n                React.createElement(\"div\", null, requestLabel))));\n    };\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasUsage ? report.meta.total.usage.units : '';\n        // added as a work-around for azure #1079\n        const _units = unitLookupKey(units ? units : usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { style: styles.valueContainer },\n            React.createElement(\"div\", { style: styles.value },\n                usage,\n                Boolean(showUnits && (units || (hasUsage && report.meta.total.usage.value >= 0))) && (React.createElement(\"span\", { style: styles.units }, unitsLabel))),\n            React.createElement(\"div\", { style: styles.text },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (chartType === \"cost\" /* cost */ || chartType === \"supplementary\" /* supplementary */) {\n        return React.createElement(React.Fragment, null, getCostLayout());\n    }\n    else if (chartType === \"trend\" /* trend */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getCostLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getCostLayout(),\n            getUsageLayout()));\n    }\n    else if (chartType === \"usage\" /* usage */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getRequestLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getRequestLayout(),\n            getUsageLayout()));\n    }\n    else {\n        return null;\n    }\n};\nconst ReportSummaryDetails = translate()(ReportSummaryDetailsBase);\nexport { ReportSummaryDetails };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport { css } from 'emotion';\nexport const reportSummaryItem = css `\n  :not(:last-child) {\n    margin-bottom: ${global_spacer_md.value};\n  }\n`;\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { reportSummaryItem } from './reportSummaryItem.styles';\nconst ReportSummaryItemBase = ({ label, formatOptions, formatValue, t, totalValue, units, value, }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: reportSummaryItem },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst ReportSummaryItem = translate()(ReportSummaryItemBase);\nexport { ReportSummaryItem };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    skeleton: {\n        marginTop: global_spacer_md.value,\n    },\n};\n","import { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { getComputedReportItems, } from 'utils/computedReport/getComputedReportItems';\nimport { styles } from './reportSummaryItems.styles';\nclass ReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { computedReportItemValue = 'total', idKey, labelKey, report } = this.props;\n        const computedItems = getComputedReportItems({\n            report,\n            idKey,\n            labelKey,\n            reportItemValue: computedReportItemValue,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [...computedItems.slice(0, otherIndex), ...computedItems.slice(otherIndex + 1), computedItems[otherIndex]];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: \"md\" }),\n                React.createElement(Skeleton, { size: \"md\", style: styles.skeleton }),\n                React.createElement(Skeleton, { size: \"md\", style: styles.skeleton }),\n                React.createElement(Skeleton, { size: \"md\", style: styles.skeleton })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst ReportSummaryItems = translate()(ReportSummaryItemsBase);\nexport { ReportSummaryItems };\n","import { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { global_disabled_color_200 } from '@patternfly/react-tokens/dist/js/global_disabled_color_200';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    currentCostData: {\n        fill: 'none',\n    },\n    currentInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    itemsPerRow: 2,\n    previousCostData: {\n        fill: 'none',\n    },\n    previousInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [global_disabled_color_200.value, global_disabled_color_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { chartOverride } from 'components/charts/common/chart.styles';\nimport { getCostRangeString, getDateRange, getMaxValue, getTooltipContent } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './costChart.styles';\nclass CostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentInfrastructureCostData, currentCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                // Note: Container order is important\n                CursorVoronoiContainer: createContainer('cursor', 'voronoi'),\n                series: [\n                    {\n                        childName: 'previousCost',\n                        data: previousCostData,\n                        legendItem: {\n                            name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.previousColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.previousCostData), { stroke: chartStyles.previousColorScale[0] }),\n                        },\n                    },\n                    {\n                        childName: 'currentCost',\n                        data: currentCostData,\n                        legendItem: {\n                            name: getCostRangeString(currentCostData, costKey, true, false),\n                            symbol: {\n                                fill: chartStyles.currentColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.currentCostData), { stroke: chartStyles.currentColorScale[0] }),\n                        },\n                    },\n                    {\n                        childName: 'previousInfrastructureCost',\n                        data: previousInfrastructureCostData,\n                        legendItem: {\n                            name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.previousColorScale[1],\n                                type: 'dash',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.previousInfrastructureCostData), { stroke: chartStyles.previousColorScale[1] }),\n                        },\n                    },\n                    {\n                        childName: 'currentInfrastructureCost',\n                        data: currentInfrastructureCostData,\n                        legendItem: {\n                            name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                            symbol: {\n                                fill: chartStyles.currentColorScale[1],\n                                type: 'dash',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.currentInfrastructureCostData), { stroke: chartStyles.currentColorScale[1] }),\n                        },\n                    },\n                ],\n            });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getContainer = () => {\n            const { CursorVoronoiContainer } = this.state;\n            if (!CursorVoronoiContainer) {\n                return undefined;\n            }\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.isDataAvailable() ? this.getTooltipLabel : undefined, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData() }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 400 ? chartStyles.itemsPerRow : 1;\n            return React.createElement(ChartLegend, { height: 25, gutter: 10, itemsPerRow: itemsPerRow, name: \"legend\", responsive: false });\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            return datum.y !== null ? formatter(datum.y, datum.units, formatDatumOptions) : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map(serie => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign({ childName: s.childName }, s.legendItem), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n            return undefined;\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentInfrastructureCostData !== this.props.currentInfrastructureCostData ||\n            prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.previousInfrastructureCostData !== this.props.previousInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { currentInfrastructureCostData, currentCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentInfrastructure = currentInfrastructureCostData ? getMaxValue(currentInfrastructureCostData) : 0;\n        const maxCurrentUsage = currentCostData ? getMaxValue(currentCostData) : 0;\n        const maxPreviousInfrastructure = previousInfrastructureCostData ? getMaxValue(previousInfrastructureCostData) : 0;\n        const maxPreviousUsage = previousCostData ? getMaxValue(previousCostData) : 0;\n        const maxValue = Math.max(maxCurrentInfrastructure, maxCurrentUsage, maxPreviousInfrastructure, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, currentCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const currentInfrastructureDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const currentUsageDate = currentCostData ? getDate(getDateRange(currentCostData, true, true)[1]) : 0;\n        const previousInfrastructureDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousCostData ? getDate(getDateRange(previousCostData, true, true)[1]) : 0;\n        return currentInfrastructureDate > 0 ||\n            currentUsageDate > 0 ||\n            previousInfrastructureDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentInfrastructureDate, currentUsageDate, previousInfrastructureDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 75,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 400\n                ? containerHeight\n                : containerHeight + 75\n            : containerHeight;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: chartOverride, ref: this.containerRef, style: { height: adjustedContainerHeight } },\n                React.createElement(Chart, { containerComponent: this.getContainer(), domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                    series &&\n                        series.map((s, index) => {\n                            return this.getChart(s, index);\n                        }),\n                    React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                    React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis })))));\n    }\n}\nexport { CostChart };\n","import global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n};\n","import { CostChart } from 'components/charts/costChart';\nimport React from 'react';\nimport { styles } from './reportSummaryTrend.styles';\nconst ReportSummaryCost = props => (React.createElement(\"div\", { style: styles.chart },\n    React.createElement(CostChart, Object.assign({}, props))));\nexport { ReportSummaryCost };\n","import chart_color_green_100 from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport chart_color_green_200 from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport chart_color_green_300 from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_green_500 from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport global_disabled_color_200 from '@patternfly/react-tokens/dist/js/global_disabled_color_200';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    currentMonthData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [global_disabled_color_200.value, global_disabled_color_200.value],\n    previousMonthData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { chartOverride } from 'components/charts/common/chart.styles';\nimport { getCostRangeString, getDateRange, getMaxValue, getTooltipContent } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './trendChart.styles';\nclass TrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, previousData, showSupplementaryLabel = false, showUsageLegendLabel = false } = this.props;\n            const key = showUsageLegendLabel\n                ? 'chart.usage_legend_label'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_label'\n                    : 'chart.cost_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                // Note: Container order is important\n                CursorVoronoiContainer: createContainer('cursor', 'voronoi'),\n                series: [\n                    {\n                        childName: 'previousCost',\n                        data: previousData,\n                        legendItem: {\n                            name: getCostRangeString(previousData, key, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.previousColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.previousMonthData), { stroke: chartStyles.previousColorScale[0] }),\n                        },\n                    },\n                    {\n                        childName: 'currentCost',\n                        data: currentData,\n                        legendItem: {\n                            name: getCostRangeString(currentData, key, true, false),\n                            symbol: {\n                                fill: chartStyles.currentColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: {\n                            data: Object.assign(Object.assign({}, chartStyles.currentMonthData), { stroke: chartStyles.currentColorScale[0] }),\n                        },\n                    },\n                ],\n            });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getContainer = () => {\n            const { CursorVoronoiContainer } = this.state;\n            if (!CursorVoronoiContainer) {\n                return undefined;\n            }\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.isDataAvailable() ? this.getTooltipLabel : undefined, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData() }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 50,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            return (React.createElement(ChartLegend, { data: this.getLegendData(), gutter: 10, height: 25, name: \"legend\", orientation: width > 150 ? 'horizontal' : 'vertical' }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions, units } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            return datum.y !== null ? formatter(datum.y, units || datum.units, formatDatumOptions) : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            // Todo: Leave one legend item visible at all times?\n            // const { hiddenSeries, series } = this.state;\n            // const leaveVisible = hiddenSeries.size === series.length - 1;\n            // if (leaveVisible && !this.isSeriesHidden(props.index)) {\n            //   return;\n            // }\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map(serie => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign({ childName: s.childName }, s.legendItem), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData || prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { currentData, previousData } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrent = currentData ? getMaxValue(currentData) : 0;\n        const maxPrevious = previousData ? getMaxValue(previousData) : 0;\n        const maxValue = Math.max(maxCurrent, maxPrevious);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0 ? Math.max(currentDate, previousDate) : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 400\n                ? containerHeight\n                : containerHeight + 20\n            : containerHeight;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: chartOverride, ref: this.containerRef, style: { height: adjustedContainerHeight } },\n                React.createElement(Chart, { containerComponent: this.getContainer(), domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                    series &&\n                        series.map((s, index) => {\n                            return this.getChart(s, index);\n                        }),\n                    React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                    React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis })))));\n    }\n}\nexport { TrendChart };\n","import { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nimport { styles } from './reportSummaryTrend.styles';\nconst ReportSummaryTrend = props => (React.createElement(\"div\", { style: styles.chart },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { ReportSummaryTrend };\n","import chart_color_green_100 from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport chart_color_green_200 from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport chart_color_green_300 from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_green_500 from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport global_disabled_color_200 from '@patternfly/react-tokens/dist/js/global_disabled_color_200';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const chartStyles = {\n    chartContainer: {\n        marginTop: global_spacer_lg.value,\n    },\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: '#88D080',\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    itemsPerRow: 2,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        global_disabled_color_200.value,\n        chart_color_green_100.value,\n        global_disabled_color_200.value,\n        chart_color_green_200.value,\n    ],\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    // TBD: No grey scale, yet\n    previousColorScale: [global_disabled_color_200.value, global_disabled_color_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { chartOverride } from 'components/charts/common/chart.styles';\nimport { getDateRange, getMaxValue, getTooltipContent, getUsageRangeString } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './usageChart.styles';\nclass UsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n            const usageKey = 'chart.usage_legend_label';\n            const requestKey = 'chart.requests_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                // Note: Container order is important\n                CursorVoronoiContainer: createContainer('cursor', 'voronoi'),\n                series: [\n                    {\n                        childName: 'previousUsage',\n                        data: previousUsageData,\n                        legendItem: {\n                            name: getUsageRangeString(previousUsageData, usageKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.legendColorScale[0],\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.previousUsageData,\n                    },\n                    {\n                        childName: 'currentUsage',\n                        data: currentUsageData,\n                        legendItem: {\n                            name: getUsageRangeString(currentUsageData, usageKey, true, false),\n                            symbol: {\n                                fill: chartStyles.legendColorScale[1],\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.currentUsageData,\n                    },\n                    {\n                        childName: 'previousRequest',\n                        data: previousRequestData,\n                        legendItem: {\n                            name: getUsageRangeString(previousRequestData, requestKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.legendColorScale[2],\n                                type: 'dash',\n                            },\n                        },\n                        style: chartStyles.previousRequestData,\n                    },\n                    {\n                        childName: 'currentRequest',\n                        data: currentRequestData,\n                        legendItem: {\n                            name: getUsageRangeString(currentRequestData, requestKey, true, false),\n                            symbol: {\n                                fill: chartStyles.legendColorScale[3],\n                                type: 'dash',\n                            },\n                        },\n                        style: chartStyles.currentRequestData,\n                    },\n                ],\n            });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getContainer = () => {\n            const { CursorVoronoiContainer } = this.state;\n            if (!CursorVoronoiContainer) {\n                return undefined;\n            }\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.isDataAvailable() ? this.getTooltipLabel : undefined, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData() }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 300 ? chartStyles.itemsPerRow : 1;\n            return React.createElement(ChartLegend, { data: this.getLegendData(), height: 25, gutter: 10, itemsPerRow: itemsPerRow, name: \"legend\" });\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            return datum.y !== null ? formatter(datum.y, datum.units, formatDatumOptions) : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map(serie => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign({ childName: s.childName }, s.legendItem), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentRequest = currentRequestData ? getMaxValue(currentRequestData) : 0;\n        const maxCurrentUsage = currentUsageData ? getMaxValue(currentUsageData) : 0;\n        const maxPreviousRequest = previousRequestData ? getMaxValue(previousRequestData) : 0;\n        const maxPreviousUsage = previousUsageData ? getMaxValue(previousUsageData) : 0;\n        const maxValue = Math.max(maxCurrentRequest, maxCurrentUsage, maxPreviousRequest, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n        const currentRequestDate = currentRequestData ? getDate(getDateRange(currentRequestData, true, true)[1]) : 0;\n        const currentUsageDate = currentUsageData ? getDate(getDateRange(currentUsageData, true, true)[1]) : 0;\n        const previousRequestDate = previousRequestData ? getDate(getDateRange(previousRequestData, true, true)[1]) : 0;\n        const previousUsageDate = previousUsageData ? getDate(getDateRange(previousUsageData, true, true)[1]) : 0;\n        return currentRequestDate > 0 || currentUsageDate > 0 || previousRequestDate > 0 || previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 75,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 480\n                ? containerHeight\n                : containerHeight + 20\n            : containerHeight;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: chartOverride, ref: this.containerRef, style: { height: adjustedContainerHeight } },\n                React.createElement(Chart, { containerComponent: this.getContainer(), domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                    series &&\n                        series.map((s, index) => {\n                            return this.getChart(s, index);\n                        }),\n                    React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                    React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis })))));\n    }\n}\nexport { UsageChart };\n","import { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nimport { styles } from './reportSummaryTrend.styles';\nconst ReportSummaryUsage = props => (React.createElement(\"div\", { style: styles.chart },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { ReportSummaryUsage };\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const styles = {\n    viewSources: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons/dist/js/icons/dollar-sign-icon';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { getTestProps, testIds } from 'testIds';\nimport { getReleasePath } from 'utils/pathname';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getViewSources = () => {\n            const { t } = this.props;\n            const release = getReleasePath();\n            return (React.createElement(\"a\", Object.assign({ href: `${release}/settings/sources` }, getTestProps(testIds.providers.view_all_link)), t('providers.view_sources')));\n        };\n    }\n    render() {\n        const { t } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: DollarSignIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, t('providers.empty_state_title')),\n            React.createElement(EmptyStateBody, null, t('providers.empty_state_desc')),\n            React.createElement(\"div\", { style: styles.viewSources }, this.getViewSources())));\n    }\n}\nconst NoProvidersState = translate()(NoProvidersStateBase);\nexport { NoProvidersState };\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { NoProvidersState } from './noProvidersState';\nconst NoProviders = () => {\n    return (React.createElement(Main, null,\n        React.createElement(NoProvidersState, null)));\n};\nexport default withRouter(NoProviders);\n","import NoProviders from './notProviders';\nexport default NoProviders;\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nconst NoProviders = () => {\n    return (React.createElement(Main, null,\n        React.createElement(LoadingState, null)));\n};\nexport default withRouter(NoProviders);\n","import Loading from './loading';\nexport default Loading;\n"],"sourceRoot":""}