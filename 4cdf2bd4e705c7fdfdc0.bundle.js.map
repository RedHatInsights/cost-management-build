{"version":3,"sources":["webpack://koku-ui/./src/api/queries/query.ts","webpack://koku-ui/./src/federatedEntry.tsx","webpack://koku-ui/./src/bootstrap.tsx","webpack://koku-ui/./src/store/providers/providersActions.ts","webpack://koku-ui/./src/store/providers/providersReducer.ts","webpack://koku-ui/./src/store/userAccess/userAccessActions.ts","webpack://koku-ui/./src/store/userAccess/userAccessReducer.ts"],"names":["logicalOrPrefix","logicalAndPrefix","tagPrefix","breakdownDescKey","breakdownTitleKey","orgUnitIdKey","orgUnitNameKey","tagKey","hasMultipleBys","query","propName","keys","Object","length","key","Array","isArray","indexOf","getQuery","newQuery","prefix","addGroupByPrefix","filter_by","assign","JSON","parse","stringify","newKey","addFilterByPrifix","group_by","addGroupByPrifix","addLogicalPrefix","undefined","filter","push","convertFilterBy","encode","indices","getQueryRoute","parseKey","val","index","substring","parseQuery","filterByKey","parseFilterByPrefix","groupByKey","parseGroupByPrefix","ignoreQueryPrefix","version","root","document","getElementById","render","Provider","store","NotificationsPortal","basename","getBaseName","window","location","pathname","setAttribute","fetchProvidersRequest","createAction","fetchProvidersSuccess","fetchProvidersFailure","fetchProviders","reportType","dispatch","meta","reportId","then","res","data","catch","err","defaultState","byId","Map","errors","fetchStatus","providersReducer","state","action","type","getType","set","payload","fetchUserAccessRequest","fetchUserAccessSuccess","fetchUserAccessFailure","fetchUserAccess","userAccessReducer"],"mappings":"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","file":"4cdf2bd4e705c7fdfdc0.bundle.js","sourcesContent":["import { parse, stringify } from 'qs';\nexport const logicalOrPrefix = 'or:'; // logical OR prefix for group_by\nexport const logicalAndPrefix = 'and:'; // logical AND prefix for group_by\nexport const tagPrefix = 'tag:'; // Tag prefix for group_by\nexport const breakdownDescKey = 'breakdown_desc'; // Used to display a description in the breakdown header\nexport const breakdownGroupByKey = 'breakdown_group_by'; // Used to display a breadcrumb in the breakdown header\nexport const breakdownTitleKey = 'breakdown_title'; // Used to display a title in the breakdown header\nexport const orgUnitIdKey = 'org_unit_id'; // Org unit ID for group_by\nexport const orgUnitNameKey = 'org_unit_name'; // Org unit name for group_by\nexport const tagKey = 'tag'; // Tag key prefix for group_by\n// Adds group_by prefix -- https://github.com/project-koku/koku-ui/issues/704\nexport function addFilterByPrifix(query, prefix = logicalOrPrefix) {\n    if (!(query && query.filter_by)) {\n        return query;\n    }\n    const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { filter_by: {} });\n    for (const key of Object.keys(query.filter_by)) {\n        // Prefix may be set externally\n        const newKey = key.indexOf(logicalOrPrefix) === 0 || key.indexOf(logicalAndPrefix) === 0 ? key : `${prefix}${key}`;\n        newQuery.filter_by[newKey] = query.filter_by[key];\n    }\n    return newQuery;\n}\n// Adds group_by prefix -- https://github.com/project-koku/koku-ui/issues/704\nexport function addGroupByPrifix(query, prefix = logicalOrPrefix) {\n    if (!(query && query.group_by)) {\n        return query;\n    }\n    const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { group_by: {} });\n    for (const key of Object.keys(query.group_by)) {\n        newQuery.group_by[`${prefix}${key}`] = query.group_by[key];\n    }\n    return newQuery;\n}\n// Converts filter_by props to filter props\nexport function convertFilterBy(query) {\n    if (!(query && query.filter_by)) {\n        return query;\n    }\n    const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { filter_by: undefined });\n    for (const key of Object.keys(query.filter_by)) {\n        if (!newQuery.filter) {\n            newQuery.filter = {};\n        }\n        if (newQuery.filter[key]) {\n            if (!Array.isArray(newQuery.filter[key])) {\n                newQuery.filter[key] = newQuery.filter[key] !== '*' ? [newQuery.filter[key]] : [];\n            }\n            newQuery.filter[key].push(query.filter_by[key]);\n        }\n        else {\n            newQuery.filter[key] = query.filter_by[key];\n        }\n    }\n    return newQuery;\n}\n// filter_by and group_by props are returned with logical OR/AND prefix\nexport function addLogicalPrefix(query, prefix) {\n    // Skip adding logical OR/AND prefix for a single params\n    const addGroupByPrefix = hasMultipleBys(query, 'group_by');\n    const addFilterByPrefix = hasMultipleBys(query, 'filter_by');\n    const newQuery = addFilterByPrefix ? addFilterByPrifix(query, prefix) : query;\n    return addGroupByPrefix ? addGroupByPrifix(newQuery, prefix) : newQuery;\n}\n// Returns true if given query contains multiple group_by or filter_by props\nfunction hasMultipleBys(query, propName) {\n    // Workaround for https://github.com/project-koku/koku/issues/1596\n    if (query && query[propName]) {\n        const keys = Object.keys(query[propName]);\n        if (keys && keys.length > 1) {\n            return true;\n        }\n        else {\n            // Find a tag (#1596) or group_by with multiple keys\n            for (const key of keys) {\n                if ((Array.isArray(query[propName][key]) && query[propName][key].length > 1) || key.indexOf(tagPrefix) !== -1) {\n                    return true;\n                }\n            }\n        }\n    }\n}\n// filter_by props are converted and returned with logical OR/AND prefix\nexport function getQuery(query) {\n    const newQuery = addLogicalPrefix(query, logicalOrPrefix);\n    return stringify(convertFilterBy(newQuery), { encode: false, indices: false });\n}\n// filter_by props are not converted\nexport function getQueryRoute(query) {\n    return stringify(query, { encode: false, indices: false });\n}\n// Returns given key without logical OR/AND prefix\nfunction parseKey(val) {\n    let key = val;\n    let index = val.indexOf(logicalOrPrefix);\n    if (index !== -1) {\n        key = val.substring(index + logicalOrPrefix.length);\n    }\n    else {\n        index = val.indexOf(logicalAndPrefix);\n        if (index !== -1) {\n            key = val.substring(index + logicalAndPrefix.length);\n        }\n    }\n    return key;\n}\n// Returns query without filter_by prefix\nexport function parseFilterByPrefix(query) {\n    if (!(query && query.filter_by)) {\n        return query;\n    }\n    const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { filter_by: {} });\n    for (const key of Object.keys(query.filter_by)) {\n        const filterByKey = parseKey(key);\n        newQuery.filter_by[filterByKey] = query.filter_by[key];\n    }\n    return newQuery;\n}\n// Returns query without group_by prefix -- https://github.com/project-koku/koku-ui/issues/704\nexport function parseGroupByPrefix(query) {\n    if (!(query && query.group_by)) {\n        return query;\n    }\n    const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { group_by: {} });\n    for (const key of Object.keys(query.group_by)) {\n        const groupByKey = parseKey(key);\n        newQuery.group_by[groupByKey] = query.group_by[key];\n    }\n    return newQuery;\n}\nexport function parseQuery(query) {\n    const newQuery = parse(query, { ignoreQueryPrefix: true });\n    return parseFilterByPrefix(parseGroupByPrefix(newQuery));\n}\n","import { NotificationsPortal } from '@redhat-cloud-services/frontend-components-notifications';\nimport { initApi } from 'api/api';\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { getBaseName } from 'utils/getBaseName';\nimport App from './app';\nimport { configureStore } from './store';\nrequire.resolve('@patternfly/patternfly/patternfly-addons.css');\nimport './styles/global.css';\ninitApi({\n    version: 'v1',\n});\nconst store = configureStore({\n// session: {\n//   token: getToken(),\n// },\n});\nexport default () => (React.createElement(Provider, { store: store },\n    React.createElement(NotificationsPortal, null),\n    React.createElement(Router, { basename: getBaseName(window.location.pathname) },\n        React.createElement(App, null))));\n","import React from 'react';\nimport { render } from 'react-dom';\nimport FederatedEntry from './federatedEntry';\nconst root = document.getElementById('root');\nrender(React.createElement(FederatedEntry, null), root, () => root.setAttribute('data-ouia-safe', 'true'));\n","import { fetchProviders as apiGetProviders } from 'api/providers';\nimport { createAction } from 'typesafe-actions';\nimport { getReportId } from './providersCommon';\nexport const fetchProvidersRequest = createAction('providers/fetch/request')();\nexport const fetchProvidersSuccess = createAction('providers/fetch/success')();\nexport const fetchProvidersFailure = createAction('providers/fetch/failure')();\nexport function fetchProviders(reportType, query) {\n    return dispatch => {\n        const meta = {\n            reportId: getReportId(reportType, query),\n        };\n        dispatch(fetchProvidersRequest(meta));\n        return apiGetProviders(query)\n            .then(res => {\n            dispatch(fetchProvidersSuccess(res.data, meta));\n        })\n            .catch(err => {\n            dispatch(fetchProvidersFailure(err, meta));\n        });\n    };\n}\nexport const clearProviderFailure = createAction('providers/clear/failure');\n","import { getType } from 'typesafe-actions';\nimport { fetchProvidersFailure, fetchProvidersRequest, fetchProvidersSuccess } from './providersActions';\nexport const defaultState = {\n    byId: new Map(),\n    errors: new Map(),\n    fetchStatus: new Map(),\n};\nexport function providersReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(fetchProvidersRequest):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.payload.reportId, 1 /* inProgress */) });\n        case getType(fetchProvidersSuccess):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.reportId, 2 /* complete */), byId: new Map(state.byId).set(action.meta.reportId, Object.assign({}, action.payload)), errors: new Map(state.errors).set(action.meta.reportId, null) });\n        case getType(fetchProvidersFailure):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.reportId, 2 /* complete */), errors: new Map(state.errors).set(action.meta.reportId, action.payload) });\n        default:\n            return state;\n    }\n}\n","import { fetchUserAccess as apiGetUserAccess } from 'api/userAccess';\nimport { createAction } from 'typesafe-actions';\nimport { getReportId } from './userAccessCommon';\nexport const fetchUserAccessRequest = createAction('userAccess/fetch/request')();\nexport const fetchUserAccessSuccess = createAction('userAccess/fetch/success')();\nexport const fetchUserAccessFailure = createAction('userAccess/fetch/failure')();\nexport function fetchUserAccess(reportType, query) {\n    return dispatch => {\n        const meta = {\n            reportId: getReportId(reportType, query),\n        };\n        dispatch(fetchUserAccessRequest(meta));\n        return apiGetUserAccess(query)\n            .then(res => {\n            dispatch(fetchUserAccessSuccess(res.data, meta));\n        })\n            .catch(err => {\n            dispatch(fetchUserAccessFailure(err, meta));\n        });\n    };\n}\nexport const clearuserAccessFailure = createAction('userAccess/clear/failure');\n","import { getType } from 'typesafe-actions';\nimport { fetchUserAccessFailure, fetchUserAccessRequest, fetchUserAccessSuccess } from './userAccessActions';\nexport const defaultState = {\n    byId: new Map(),\n    errors: new Map(),\n    fetchStatus: new Map(),\n};\nexport function userAccessReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(fetchUserAccessRequest):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.payload.reportId, 1 /* inProgress */) });\n        case getType(fetchUserAccessSuccess):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.reportId, 2 /* complete */), byId: new Map(state.byId).set(action.meta.reportId, Object.assign({}, action.payload)), errors: new Map(state.errors).set(action.meta.reportId, null) });\n        case getType(fetchUserAccessFailure):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.reportId, 2 /* complete */), errors: new Map(state.errors).set(action.meta.reportId, action.payload) });\n        default:\n            return state;\n    }\n}\n"],"sourceRoot":""}