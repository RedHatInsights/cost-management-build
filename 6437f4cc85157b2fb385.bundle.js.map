{"version":3,"sources":["webpack:///./src/pages/dashboard/components/dashboardBase.tsx","webpack:///./src/pages/dashboard/components/chartComparison.tsx","webpack:///./src/pages/dashboard/components/dashboardWidget.styles.ts","webpack:///./src/pages/dashboard/components/dashboardWidgetBase.tsx","webpack:///./src/pages/dashboard/awsCloudDashboard/awsCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/awsCloudDashboard/awsCloudDashboard.tsx","webpack:///./src/pages/dashboard/awsDashboard/awsDashboardWidget.tsx","webpack:///./src/pages/dashboard/awsDashboard/awsDashboard.tsx","webpack:///./src/pages/dashboard/azureCloudDashboard/azureCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/azureCloudDashboard/azureCloudDashboard.tsx","webpack:///./src/pages/dashboard/azureDashboard/azureDashboardWidget.tsx","webpack:///./src/pages/dashboard/azureDashboard/azureDashboard.tsx","webpack:///./src/pages/dashboard/gcpDashboard/gcpDashboardWidget.tsx","webpack:///./src/pages/dashboard/gcpDashboard/gcpDashboard.tsx","webpack:///./src/pages/dashboard/ocpCloudDashboard/ocpCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpCloudDashboard/ocpCloudDashboard.tsx","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboardWidget.styles.ts","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboard.tsx","webpack:///./src/pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboard.tsx","webpack:///./src/pages/dashboard/ocpUsageDashboard/ocpUsageDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpUsageDashboard/ocpUsageDashboard.tsx","webpack:///./src/pages/overview/overview.styles.ts","webpack:///./src/pages/overview/perspective.styles.ts","webpack:///./src/pages/overview/perspective.tsx","webpack:///./src/pages/overview/overview.tsx","webpack:///./src/pages/overview/index.ts","webpack:///./src/utils/formatValue.ts","webpack:///./src/utils/computedForecast/getComputedForecastItems.ts","webpack:///./src/components/charts/common/chartUtils.ts","webpack:///./src/components/charts/chartTheme/theme-koku.ts","webpack:///./src/components/charts/chartTheme/index.ts","webpack:///./src/components/charts/chartTheme/theme-utils.ts","webpack:///./src/utils/computedReport/getComputedReportItems.ts","webpack:///./src/utils/computedReport/getItemLabel.ts","webpack:///./src/components/state/loadingState/loadingState.tsx","webpack:///./src/api/queries/providersQuery.ts","webpack:///./src/utils/sort.ts","webpack:///./src/components/state/emptyValueState/emptyValueState.tsx","webpack:///./src/components/reports/reportSummary/reportSummary.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryAlt.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryDetails.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryItem.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryItems.tsx","webpack:///./src/components/charts/costChart/costChart.styles.ts","webpack:///./src/components/charts/costChart/costChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryCost.tsx","webpack:///./src/components/charts/dailyCostChart/dailyCostChart.styles.ts","webpack:///./src/components/charts/dailyCostChart/dailyCostChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryDailyCost.tsx","webpack:///./src/components/charts/dailyTrendChart/dailyTrendChart.styles.ts","webpack:///./src/components/charts/dailyTrendChart/dailyTrendChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryDailyTrend.tsx","webpack:///./src/components/charts/trendChart/trendChart.styles.ts","webpack:///./src/components/charts/trendChart/trendChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryTrend.tsx","webpack:///./src/components/charts/usageChart/usageChart.styles.ts","webpack:///./src/components/charts/usageChart/usageChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryUsage.tsx","webpack:///./src/utils/pathname.ts","webpack:///./src/pages/state/loading/loading.tsx","webpack:///./src/pages/state/loading/index.ts","webpack:///./src/components/icons/costIcon/Cost-icon.svg","webpack:///./src/components/icons/costIcon/costIcon.tsx","webpack:///./src/components/icons/costIcon/index.ts","webpack:///./src/pages/state/noProviders/noProvidersState.styles.ts","webpack:///./src/pages/state/noProviders/noProvidersState.tsx","webpack:///./src/pages/state/noProviders/noProviders.tsx","webpack:///./src/pages/state/noProviders/index.ts"],"names":["DashboardBase","DashboardWidget","selectWidgets","widgets","createElement","Grid","hasGutter","map","widgetId","details","showHorizontal","GridItem","sm","key","lg","xl","xl2","Component","super","arguments","this","defaultState","isChartComparisonOpen","state","Object","assign","getDropDownItems","options","t","props","option","DropdownItem","component","value","onClick","handleClick","label","getCurrentLabel","currentItem","onItemClicked","handleSelect","setState","handleToggle","dropdownItems","Dropdown","onSelect","toggle","DropdownToggle","onToggle","isOpen","ChartComparison","withTranslation","chartStyles","chartAltHeight","chartHeight","containerAltHeight","containerTrendHeight","containerUsageHeight","styles","comparison","marginBottom","tabs","marginTop","tabItems","activeTabKey","currentComparison","forecastAuthorized","buildDetailsLink","tab","getIdKeyForTab","currentTab","viewAllPath","group_by","order_by","cost","getChart","containerHeight","height","adjustContainerHeight","chartType","trend","getDailyTrendChart","showSupplementaryLabel","getDailyCostChart","getTrendChart","getUsageChart","getChartComparison","units","getUnits","cumulativeTitle","titleKey","dailyTitleKey","handleComparisonClick","currentReport","previousReport","computedReportItem","computedReportItemValue","daily","type","currentInfrastructureData","previousInfrastructureData","currentCostData","previousCostData","forecastData","getForecastData","computedForecastItem","forecastInfrastructureData","computedForecastInfrastructureItem","ReportSummaryComponent","Fragment","style","currentInfrastructureCostData","forecastConeData","forecastInfrastructureConeData","formatDatumValue","formatValue","formatDatumOptions","formatOptions","previousInfrastructureCostData","showForecast","undefined","currentData","previousData","showUsageLegendLabel","report","forecast","newForecast","data","total","meta","reportedValues","filter","val","values","length","lastReported","date","lastReportedDate","Date","lastReportedMonth","getMonth","item","forecastDate","forecastMonth","push","unshift","confidence_max","confidence_min","infrastructure","supplementary","title","currentRequestData","previousRequestData","currentUsageData","previousUsageData","getDetails","reportType","costLabel","getDetailsLabel","costKey","requestLabel","requestKey","showTooltip","showUnits","showUsageFirst","usageFormatOptions","usageLabel","usageKey","getDetailsLink","Link","to","handleInsightsNavClick","getDetailsLinkTitle","groupBy","getHorizontalLayout","currentReportFetchStatus","detailsLink","status","subTitle","getSubTitle","getTabs","getTitle","today","month","endDate","startDate","count","getTab","index","tabsReport","tabsReportFetchStatus","Tab","eventKey","TabTitleText","getTabTitle","idKey","items","reportItem","getTabItem","availableTabs","topItems","activeTab","totalValue","hasTotal","usage","id","toString","Tabs","isFilled","activeKey","handleTabClick","getVerticalLayout","Boolean","appNavId","insights","chrome","appNavClick","secondaryNav","event","tabIndex","updateTab","fetchForecasts","fetchReports","async","_insights","window","auth","getUser","username","identity","user","isForecastAuthorized","then","mapStateToProps","widget","awsCloudDashboard","selectWidget","queries","selectWidgetQueries","selectReport","reportPathsType","current","selectReportFetchStatus","selectForecast","forecastPathsType","forecastType","previous","mapDispatchToProps","fetchWidgetForecasts","fetchWidgetReports","changeWidgetTab","AwsCloudDashboardWidget","selectCurrentWidgets","awsDashboard","forecastFetchStatus","selectForecastFetchStatus","AwsDashboardWidget","azureCloudDashboard","AzureCloudDashboardWidget","azureDashboard","AzureDashboardWidget","gcpDashboard","GcpDashboardWidget","ocpCloudDashboard","OcpCloudDashboardWidget","ocpDashboard","currentQuery","forecastQuery","previousQuery","tabsQuery","OcpDashboardWidget","ocpSupplementaryDashboard","OcpSupplementaryDashboardWidget","ocpUsageDashboard","OcpUsageDashboardWidget","infoIcon","fontSize","infoTitle","fontWeight","perspective","perspectiveSelector","display","alignItems","perspectiveLabel","marginRight","var","isPerspectiveOpen","Perspective","ocpOptions","infrastructureAllCloudOptions","infrastructureAwsOptions","infrastructureAwsCloudOptions","infrastructureAzureOptions","infrastructureAzureCloudOptions","infrastructureGcpOptions","infrastructureOcpOptions","isAwsAccessAllowed","isAzureAccessAllowed","isGcpAccessAllowed","isOcpAccessAllowed","getAvailableTabs","isAwsAvailable","isAzureAvailable","isGcpAvailable","isOcpAvailable","isOcpCloudAvailable","contentRef","createRef","getCurrentTab","getDefaultInfrastructurePerspective","getDefaultOcpPerspective","getPerspective","currentInfrastructurePerspective","currentOcpPerspective","handlePerspectiveClick","tabContentId","tabContentRef","getTabContent","TabContent","ref","emptyTab","awsProviders","azureProviders","gcpProviders","ocpProviders","isEntitled","isOrgAdmin","getPermissions","prevProps","awsProvidersFetchStatus","azureProvidersFetchStatus","gcpProvidersFetchStatus","ocpProvidersFetchStatus","isLoading","noAwsProviders","noAzureProviders","noGcpProviders","noOcpProviders","noProviders","className","Title","headingLevel","size","Popover","enableFlip","bodyContent","Button","variant","plain","awsProvidersQueryString","providers","selectProviders","selectProvidersFetchStatus","azureProvidersQueryString","gcpProvidersQueryString","ocpProvidersQueryString","unitLookupKey","unit","lookup","toLowerCase","fValue","formatCurrency","formatUsageGb","formatUsageHrs","unknownTypeFormatter","_unit","fractionDigits","toLocaleString","minimumFractionDigits","maximumFractionDigits","currency","getComputedForecastItems","sortDirection","sortKey","sort","itemMap","Map","visitDataPoint","dataPoint","forEach","get","set","getCostData","Array","from","getUnsortedComputedForecastItems","direction","pvalues","Number","rsquared","transformForecast","forecastItem","forecastItemValue","computedItems","chartDatums","i","createForecastDatum","reduce","acc","d","prevValue","y","padChartDatums","transformForecastCone","createForecastConeDatum","prevMaxValue","prevMinValue","y0","transformReport","reportItemValue","getComputedReportItems","createReportDatum","computedItem","xVal","yVal","isFloat","parseFloat","toFixed","isInt","x","maxValue","minValue","y0Val","datums","result","firstDate","lastDate","padDate","getDate","setDate","prevChartDatum","chartDatum","find","fillChartDatums","getDateRange","firstOfMonth","lastOfMonth","offset","start","end","setMonth","getDatumDateRange","getMaxMinValues","max","min","datum","maxY","Math","minY","getTooltipContent","i18next","getCostRangeString","year","getUsageRangeString","n","LAYOUT_PROPS","padding","area","axis","bar","boxplot","candlestick","chart","errorbar","group","legend","line","pie","scatter","stack","tooltip","voronoi","ChartTheme","default","getUnsortedComputedReportItems","markup","raw","getUsageData","capacity","limit","request","idSuffix","cluster","org_unit_id","mapId","cluster_alias","clusters","delta_percent","delta_value","source_uuid","itemLabelKey","String","keys","indexOf","tagPrefixKey","hasOwnProperty","getItemLabel","alias","account_alias","LoadingState","large","getProvidersQuery","query","encode","indices","getValueForItem","array","a","b","aVal","bVal","EmptyValueState","ReportSummary","children","Card","CardTitle","CardBody","Skeleton","CardFooter","ReportSummaryAlt","ReportSummaryDetails","requestFormatOptions","supplementaryCost","infrastructureCost","hasCost","hasCount","hasSupplementaryCost","hasInfrastructureCost","hasRequest","hasUsage","getCostLayout","showAltHeroFont","altHeroFont","Tooltip","content","getRequestLayout","usageUnits","_units","unitsLabel","getUsageLayout","ReportSummaryItemBase","percentVal","percentLabel","percent","Progress","defaultProps","v","ReportSummaryItem","nextProps","otherIndex","findIndex","includes","slice","getItems","ReportSummaryItems","currentColorScale","chart_color_green_400","chart_color_green_300","chart_color_green_200","chart_color_green_100","chart_color_green_500","fill","currentInfrastructureColorScale","chart_color_blue_400","chart_color_blue_300","chart_color_blue_200","chart_color_blue_100","chart_color_blue_500","strokeDasharray","strokeWidth","forecastConeDataColorScale","forecastDataColorScale","forecastInfrastructureConeDataColorScale","forecastInfrastructureDataColorScale","previousColorScale","chart_color_black_200","yAxis","axisLabel","grid","stroke","ticks","tickLabels","xAxis","containerRef","hiddenSeries","Set","width","initDatum","series","childName","legendItem","name","symbol","cursorVoronoiContainer","getCursorVoronoiContainer","handleNavToggle","setTimeout","handleResize","clientWidth","ChartArea","has","interpolation","CursorVoronoiContainer","cursorDimension","labels","getTooltipLabel","mouseFollowTooltips","voronoiDimension","voronoiPadding","bottom","left","right","top","getLegend","ChartLegend","getLegendData","gutter","responsive","formatter","dy","dy0","value0","value1","handleLegendClick","delete","add","isDataAvailable","unavailable","s","isSeriesHidden","getChartNames","serie","getAdjustedContainerHeight","adjustedContainerHeight","getEvents","chartNames","isHidden","legendName","onLegendClick","addEventListener","navToggle","on","removeEventListener","domain","threshold","ceil","_min","floor","currentInfrastructureDate","currentCostDate","forecastCostDate","previousInfrastructureDate","previousUsageDate","getDomain","getEndDate","half","_2ndDay","_3rdDay","_4thDay","container","cloneElement","disable","labelComponent","ChartLegendTooltip","legendData","day","Chart","containerComponent","events","legendAllowWrap","legendComponent","legendPosition","theme","ChartAxis","tickValues","dependentAxis","ReportSummaryCost","chart_color_orange_300","isLine","isBar","isForecast","ChartBar","alignment","ChartLine","getForecastBarChart","getForecastLineChart","barWidth","ChartGroup","ReportSummaryDailyCost","itemsPerRow","tooltipKey","legendItemsPerRow","orientation","previousDate","currentDate","ReportSummaryDailyTrend","currentMonthData","previousMonthData","midDate","ReportSummaryTrend","chartContainer","legendColorScale","currentRequestDate","currentUsageDate","previousRequestDate","ReportSummaryUsage","getReleasePath","pathName","location","pathname","split","shift","release","withRouter","PageHeader","Main","module","exports","src","alt","iconSpacer","marginLeft","viewSources","getDocLink","textKey","urlKey","href","rel","target","getRouteToSources","providerType","docUrlKey","icon","descKey","EmptyState","EmptyStateIcon","EmptyStateBody","NoProvidersState"],"mappings":"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","file":"6437f4cc85157b2fb385.bundle.js","sourcesContent":["import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nconst DashboardBase = ({ DashboardWidget, selectWidgets, widgets }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { hasGutter: true }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return widget.details.showHorizontal ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(DashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { lg: 12, xl: 6, xl2: 4, key: widgetId },\n            React.createElement(DashboardWidget, { widgetId: widgetId })));\n    }))));\nexport { DashboardBase };\n","import { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nclass ChartComparisonBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isChartComparisonOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getDropDownItems = () => {\n            const { options, t } = this.props;\n            return options.map(option => (React.createElement(DropdownItem, { component: \"button\", key: option.value, onClick: () => this.handleClick(option.value) }, t(option.label))));\n        };\n        this.getCurrentLabel = () => {\n            const { currentItem, options, t } = this.props;\n            let label = '';\n            for (const option of options) {\n                if (currentItem === option.value) {\n                    label = t(option.label);\n                    break;\n                }\n            }\n            return label;\n        };\n        this.handleClick = value => {\n            const { onItemClicked } = this.props;\n            if (onItemClicked) {\n                onItemClicked(value);\n            }\n        };\n        this.handleSelect = () => {\n            this.setState({\n                isChartComparisonOpen: !this.state.isChartComparisonOpen,\n            });\n        };\n        this.handleToggle = isChartComparisonOpen => {\n            this.setState({\n                isChartComparisonOpen,\n            });\n        };\n    }\n    render() {\n        // const { t } = this.props;\n        const { isChartComparisonOpen } = this.state;\n        const dropdownItems = this.getDropDownItems();\n        return (React.createElement(Dropdown, { onSelect: this.handleSelect, toggle: React.createElement(DropdownToggle, { onToggle: this.handleToggle }, this.getCurrentLabel()), isOpen: isChartComparisonOpen, dropdownItems: dropdownItems }));\n    }\n}\nconst ChartComparison = withTranslation()(ChartComparisonBase);\nexport { ChartComparison };\n","import global_spacer_2xl from '@patternfly/react-tokens/dist/js/global_spacer_2xl';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_xl from '@patternfly/react-tokens/dist/js/global_spacer_xl';\nexport const chartStyles = {\n    chartAltHeight: 250,\n    chartHeight: 180,\n    containerAltHeight: 250,\n    containerTrendHeight: 180,\n    containerUsageHeight: 180,\n};\nexport const styles = {\n    comparison: {\n        marginBottom: global_spacer_md.value,\n    },\n    tabs: {\n        marginTop: global_spacer_2xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n};\n","import { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { getQuery } from 'api/queries/awsQuery';\nimport { transformForecast, transformForecastCone, transformReport, } from 'components/charts/common/chartUtils';\nimport { ReportSummary, ReportSummaryAlt, ReportSummaryCost, ReportSummaryDailyCost, ReportSummaryDailyTrend, ReportSummaryDetails, ReportSummaryItem, ReportSummaryItems, ReportSummaryTrend, ReportSummaryUsage, } from 'components/reports/reportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport { cloneDeep } from 'lodash';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { ChartComparison } from './chartComparison';\nimport { chartStyles, styles } from './dashboardWidget.styles';\n// Todo: Temporary check until forecast feature is ready for prod\nconst isForecastAuthorized = async () => {\n    const _insights = window.insights;\n    if (_insights && _insights.chrome && _insights.chrome.auth && _insights.chrome.auth.getUser) {\n        const user = await _insights.chrome.auth.getUser();\n        const username = user.identity.user.username;\n        return username === 'cost-demo' || username === 'insights-qa';\n    }\n    return false;\n};\nclass DashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n            currentComparison: \"cumulative\" /* cumulative */,\n            forecastAuthorized: false,\n        };\n        this.buildDetailsLink = (tab) => {\n            const { details, getIdKeyForTab } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return `${details.viewAllPath}?${getQuery({\n                group_by: {\n                    [currentTab]: '*',\n                },\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.getChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { chartType, trend } = this.props;\n            if (chartType === \"dailyTrend\" /* dailyTrend */) {\n                return this.getDailyTrendChart(containerHeight, height, adjustContainerHeight, trend.showSupplementaryLabel);\n            }\n            else if (chartType === \"dailyCost\" /* dailyCost */) {\n                return this.getDailyCostChart(containerHeight, height, adjustContainerHeight);\n            }\n            else if (chartType === \"trend\" /* trend */) {\n                return this.getTrendChart(containerHeight, height, adjustContainerHeight, trend.showSupplementaryLabel);\n            }\n            else if (chartType === \"usage\" /* usage */) {\n                return this.getUsageChart(height, adjustContainerHeight);\n            }\n            else {\n                return null;\n            }\n        };\n        this.getChartComparison = () => {\n            const { t, trend } = this.props;\n            const { currentComparison } = this.state;\n            const units = this.getUnits();\n            const cumulativeTitle = t(trend.titleKey, { units: t(`units.${units}`) });\n            const dailyTitle = t(trend.dailyTitleKey, { units: t(`units.${units}`) });\n            const options = [\n                { label: dailyTitle, value: \"daily\" /* daily */ },\n                { label: cumulativeTitle, value: \"cumulative\" /* cumulative */ },\n            ];\n            return (React.createElement(ChartComparison, { currentItem: currentComparison || options[0].value, onItemClicked: this.handleComparisonClick, options: options }));\n        };\n        // This chart displays cumulative and daily cost compared to infrastructure cost\n        this.getDailyCostChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { currentReport, previousReport, trend } = this.props;\n            const { currentComparison, forecastAuthorized } = this.state;\n            const computedReportItem = trend.computedReportItem; // cost, supplementary cost, etc.\n            const computedReportItemValue = trend.computedReportItemValue; // infrastructure usage cost\n            const daily = currentComparison === \"daily\" /* daily */;\n            const type = daily ? 1 /* daily */ : trend.type;\n            // Infrastructure data\n            const currentInfrastructureData = transformReport(currentReport, type, 'date', 'infrastructure', computedReportItemValue);\n            const previousInfrastructureData = transformReport(previousReport, type, 'date', 'infrastructure', computedReportItemValue);\n            // Cost data\n            const currentCostData = transformReport(currentReport, type, 'date', computedReportItem, computedReportItemValue);\n            const previousCostData = transformReport(previousReport, type, 'date', computedReportItem, computedReportItemValue);\n            // Forecast data\n            const forecastData = this.getForecastData(currentReport, trend.computedForecastItem);\n            const forecastInfrastructureData = this.getForecastData(currentReport, trend.computedForecastInfrastructureItem);\n            const ReportSummaryComponent = daily ? ReportSummaryDailyCost : ReportSummaryCost;\n            return (React.createElement(React.Fragment, null,\n                React.createElement(\"div\", { style: styles.comparison }, this.getChartComparison()),\n                React.createElement(ReportSummaryComponent, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentCostData: currentCostData, currentInfrastructureCostData: currentInfrastructureData, forecastConeData: forecastData.forecastConeData, forecastData: forecastData.forecastData, forecastInfrastructureConeData: forecastInfrastructureData.forecastConeData, forecastInfrastructureData: forecastInfrastructureData.forecastData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousCostData: previousCostData, previousInfrastructureCostData: previousInfrastructureData, showForecast: trend.computedForecastItem !== undefined && forecastAuthorized })));\n        };\n        // This chart displays cumulative and daily cost\n        this.getDailyTrendChart = (containerHeight, height, adjustContainerHeight = false, showSupplementaryLabel = false) => {\n            const { currentReport, details, previousReport, trend } = this.props;\n            const { currentComparison, forecastAuthorized } = this.state;\n            const units = this.getUnits();\n            const computedReportItem = trend.computedReportItem; // cost, supplementary cost, etc.\n            const computedReportItemValue = trend.computedReportItemValue; // infrastructure usage cost\n            const daily = currentComparison === \"daily\" /* daily */;\n            const type = daily ? 1 /* daily */ : trend.type;\n            // Cost data\n            const currentData = transformReport(currentReport, type, 'date', computedReportItem, computedReportItemValue);\n            const previousData = transformReport(previousReport, type, 'date', computedReportItem, computedReportItemValue);\n            // Forecast data\n            const { forecastData, forecastConeData } = this.getForecastData(currentReport, trend.computedForecastItem);\n            const ReportSummaryComponent = daily ? ReportSummaryDailyTrend : ReportSummaryTrend;\n            return (React.createElement(React.Fragment, null,\n                React.createElement(\"div\", { style: styles.comparison }, this.getChartComparison()),\n                React.createElement(ReportSummaryComponent, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentData: currentData, forecastData: forecastData, forecastConeData: forecastConeData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousData, showForecast: trend.computedForecastItem !== undefined && forecastAuthorized, showSupplementaryLabel: showSupplementaryLabel, showUsageLegendLabel: details.showUsageLegendLabel, units: units })));\n        };\n        this.getForecastData = (report, computedForecastItem = 'cost') => {\n            const { forecast, trend } = this.props;\n            const { currentComparison } = this.state;\n            // Todo: Add cumulative / daily prop\n            const daily = currentComparison === \"daily\" /* daily */;\n            const type = daily ? 1 /* daily */ : trend.type;\n            let forecastData;\n            let forecastConeData;\n            if (computedForecastItem) {\n                const newForecast = cloneDeep(forecast);\n                if (newForecast) {\n                    newForecast.data = [];\n                }\n                if (forecast && report && report.data) {\n                    const total = report.meta && report.meta.total && report.meta.total[computedForecastItem]\n                        ? report.meta.total[computedForecastItem].total.value\n                        : 0;\n                    // Find last currentData date with values\n                    const reportedValues = report.data.filter(val => val.values.length);\n                    const lastReported = reportedValues[reportedValues.length - 1]\n                        ? reportedValues[reportedValues.length - 1].date\n                        : undefined;\n                    // Remove overlapping forecast dates, if any\n                    if (forecast && forecast.data) {\n                        const lastReportedDate = new Date(lastReported);\n                        const lastReportedMonth = lastReportedDate.getMonth() + 1;\n                        for (const item of forecast.data) {\n                            const forecastDate = new Date(item.date);\n                            const forecastMonth = forecastDate.getMonth() + 1;\n                            // Ensure month match. AWS forecast may begin with \"2020-12-04\", but ends on \"2021-01-01\"\n                            if (forecastDate > lastReportedDate && lastReportedMonth === forecastMonth) {\n                                newForecast.data.push(item);\n                            }\n                        }\n                    }\n                    // For cumulative data, show continuous line from current report to forecast\n                    if (type === 0 /* rolling */) {\n                        newForecast.data.unshift({\n                            date: lastReported,\n                            values: [\n                                {\n                                    date: lastReported,\n                                    cost: {\n                                        confidence_max: {\n                                            value: 0,\n                                        },\n                                        confidence_min: {\n                                            value: 0,\n                                        },\n                                        total: {\n                                            value: total,\n                                            units: 'USD',\n                                        },\n                                    },\n                                    infrastructure: {\n                                        confidence_max: {\n                                            value: 0,\n                                        },\n                                        confidence_min: {\n                                            value: 0,\n                                        },\n                                        total: {\n                                            value: total,\n                                            units: 'USD',\n                                        },\n                                    },\n                                    supplementary: {\n                                        confidence_max: {\n                                            value: 0,\n                                        },\n                                        confidence_min: {\n                                            value: 0,\n                                        },\n                                        total: {\n                                            value: total,\n                                            units: 'USD',\n                                        },\n                                    },\n                                },\n                            ],\n                        });\n                    }\n                }\n                forecastData = transformForecast(newForecast, type, computedForecastItem);\n                forecastConeData = transformForecastCone(newForecast, type, computedForecastItem);\n            }\n            return { forecastData, forecastConeData };\n        };\n        // This chart displays cumulative cost only\n        this.getTrendChart = (containerHeight, height, adjustContainerHeight = false, showSupplementaryLabel = false) => {\n            const { currentReport, details, previousReport, t, trend } = this.props;\n            const { forecastAuthorized } = this.state;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            const computedReportItem = trend.computedReportItem; // cost, supplementary cost, etc.\n            const computedReportItemValue = trend.computedReportItemValue; // infrastructure usage cost\n            // Cost data\n            const currentData = transformReport(currentReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            const previousData = transformReport(previousReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            // Forecast data\n            const { forecastData, forecastConeData } = this.getForecastData(currentReport, trend.computedForecastItem);\n            return (React.createElement(ReportSummaryTrend, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentData: currentData, forecastData: forecastData, forecastConeData: forecastConeData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousData, showForecast: trend.computedForecastItem !== undefined && forecastAuthorized, showSupplementaryLabel: showSupplementaryLabel, showUsageLegendLabel: details.showUsageLegendLabel, title: title, units: units }));\n        };\n        // This chart displays usage and requests\n        this.getUsageChart = (height, adjustContainerHeight = false) => {\n            const { currentReport, previousReport, t, trend } = this.props;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            // Request data\n            const currentRequestData = transformReport(currentReport, trend.type, 'date', 'request');\n            const previousRequestData = transformReport(previousReport, trend.type, 'date', 'request');\n            // Usage data\n            const currentUsageData = transformReport(currentReport, trend.type, 'date', 'usage');\n            const previousUsageData = transformReport(previousReport, trend.type, 'date', 'usage');\n            return (React.createElement(ReportSummaryUsage, { adjustContainerHeight: adjustContainerHeight, containerHeight: chartStyles.containerUsageHeight, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousRequestData: previousRequestData, previousUsageData: previousUsageData, title: title }));\n        };\n        this.getDetails = () => {\n            const { chartType, currentReport, details, reportType, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            const units = this.getUnits();\n            return (React.createElement(ReportSummaryDetails, { chartType: chartType, computedReportItem: computedReportItem, computedReportItemValue: computedReportItemValue, costLabel: this.getDetailsLabel(details.costKey, units), formatOptions: details.formatOptions, formatValue: formatValue, report: currentReport, reportType: reportType, requestLabel: this.getDetailsLabel(details.requestKey, units), showTooltip: details.showTooltip, showUnits: details.showUnits, showUsageFirst: details.showUsageFirst, units: details.units, usageFormatOptions: details.usageFormatOptions, usageLabel: this.getDetailsLabel(details.usageKey, units) }));\n        };\n        this.getDetailsLabel = (key, units) => {\n            const { t } = this.props;\n            return key ? t(key, { units: t(`units.${units}`) }) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, details } = this.props;\n            if (details.viewAllPath) {\n                return (React.createElement(Link, { to: this.buildDetailsLink(currentTab), onClick: this.handleInsightsNavClick }, this.getDetailsLinkTitle(currentTab)));\n            }\n            return null;\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { getIdKeyForTab, t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { containerAltHeight = chartStyles.containerAltHeight, chartAltHeight = chartStyles.chartAltHeight, currentReportFetchStatus, details, } = this.props;\n            return (React.createElement(ReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(containerAltHeight, chartAltHeight, details.adjustContainerHeight)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'D');\n            const startDate = formatDate(startOfMonth(today), 'D');\n            return t('aws_dashboard.widget_subtitle', {\n                count: getDate(today),\n                endDate,\n                month,\n                startDate,\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { getIdKeyForTab, tabsReport, tabsReportFetchStatus } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) },\n                React.createElement(\"div\", { style: styles.tabItems },\n                    React.createElement(ReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport, status: tabsReportFetchStatus }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, details, getIdKeyForTab, tabsReport, topItems, trend } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            let totalValue;\n            const hasTotal = tabsReport && tabsReport.meta && tabsReport.meta.total;\n            if (computedReportItem === \"usage\" /* usage */) {\n                if (hasTotal && tabsReport.meta.total.usage) {\n                    totalValue = tabsReport.meta.total.usage.value;\n                }\n            }\n            else {\n                if (hasTotal &&\n                    tabsReport.meta.total[computedReportItem] &&\n                    tabsReport.meta.total[computedReportItem][computedReportItemValue]) {\n                    totalValue = tabsReport.meta.total[computedReportItem][computedReportItemValue].value;\n                }\n            }\n            if (activeTab === currentTab) {\n                return (React.createElement(ReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: totalValue, units: details.units ? details.units : this.getUnits(), value: reportItem[computedReportItem][computedReportItemValue].value }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { getIdKeyForTab, t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getUnits = () => {\n            const { currentReport, details, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            if (details.units) {\n                return details.units;\n            }\n            let units;\n            const hasTotal = currentReport && currentReport.meta && currentReport.meta.total;\n            if (computedReportItem === \"usage\" /* usage */) {\n                const hasUsage = hasTotal && currentReport.meta.total.usage;\n                units = hasUsage ? unitLookupKey(currentReport.meta.total.usage.units) : '';\n            }\n            else {\n                const hasCost = hasTotal &&\n                    currentReport.meta.total[computedReportItem] &&\n                    currentReport.meta.total[computedReportItem][computedReportItemValue];\n                units = hasCost ? unitLookupKey(currentReport.meta.total[computedReportItem][computedReportItemValue].units) : '';\n            }\n            return units;\n        };\n        this.getVerticalLayout = () => {\n            const { availableTabs, currentReportFetchStatus, details } = this.props;\n            return (React.createElement(ReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerTrendHeight, chartStyles.chartHeight, details.adjustContainerHeight),\n                Boolean(availableTabs) && React.createElement(\"div\", { style: styles.tabs }, this.getTabs())));\n        };\n        this.handleComparisonClick = (value) => {\n            this.setState({ currentComparison: value });\n        };\n        this.handleInsightsNavClick = () => {\n            const { details } = this.props;\n            if (details.appNavId) {\n                insights.chrome.appNavClick({\n                    id: details.appNavId,\n                    secondaryNav: true,\n                });\n            }\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchForecasts, fetchReports, id, trend, updateTab, widgetId } = this.props;\n        if (availableTabs) {\n            updateTab(id, availableTabs[0]);\n        }\n        if (fetchReports) {\n            fetchReports(widgetId);\n        }\n        if (trend.computedForecastItem !== undefined) {\n            isForecastAuthorized().then(val => {\n                if (val && fetchForecasts) {\n                    fetchForecasts(widgetId);\n                }\n                this.setState({ forecastAuthorized: val });\n            });\n        }\n    }\n    render() {\n        const { details } = this.props;\n        return details.showHorizontal ? this.getHorizontalLayout() : this.getVerticalLayout();\n    }\n}\nexport { DashboardWidgetBase };\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsCloudDashboardActions, awsCloudDashboardSelectors, } from 'store/dashboard/awsCloudDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: awsCloudDashboardActions.fetchWidgetForecasts,\n    fetchReports: awsCloudDashboardActions.fetchWidgetReports,\n    updateTab: awsCloudDashboardActions.changeWidgetTab,\n};\nconst AwsCloudDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AwsCloudDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsCloudDashboardSelectors } from 'store/dashboard/awsCloudDashboard';\nimport { AwsCloudDashboardWidget } from './awsCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: AwsCloudDashboardWidget,\n        selectWidgets: awsCloudDashboardSelectors.selectWidgets(state),\n        widgets: awsCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsCloudDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default AwsCloudDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsDashboardActions, awsDashboardSelectors } from 'store/dashboard/awsDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: awsDashboardActions.fetchWidgetForecasts,\n    fetchReports: awsDashboardActions.fetchWidgetReports,\n    updateTab: awsDashboardActions.changeWidgetTab,\n};\nconst AwsDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AwsDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsDashboardSelectors } from 'store/dashboard/awsDashboard';\nimport { AwsDashboardWidget } from './awsDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: AwsDashboardWidget,\n        selectWidgets: awsDashboardSelectors.selectWidgets(state),\n        widgets: awsDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default AwsDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureCloudDashboardActions, azureCloudDashboardSelectors, } from 'store/dashboard/azureCloudDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"service_names\" /* service_names */:\n            return 'service_name';\n        case \"subscription_guids\" /* subscription_guids */:\n            return 'subscription_guid';\n        case \"resource_locations\" /* resource_locations */:\n            return 'resource_location';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = azureCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = azureCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: azureCloudDashboardActions.fetchWidgetForecasts,\n    fetchReports: azureCloudDashboardActions.fetchWidgetReports,\n    updateTab: azureCloudDashboardActions.changeWidgetTab,\n};\nconst AzureCloudDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AzureCloudDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureCloudDashboardSelectors } from 'store/dashboard/azureCloudDashboard';\nimport { AzureCloudDashboardWidget } from './azureCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: AzureCloudDashboardWidget,\n        selectWidgets: azureCloudDashboardSelectors.selectWidgets(state),\n        widgets: azureCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AzureCloudDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default AzureCloudDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureDashboardActions, azureDashboardSelectors } from 'store/dashboard/azureDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"service_names\" /* service_names */:\n            return 'service_name';\n        case \"subscription_guids\" /* subscription_guids */:\n            return 'subscription_guid';\n        case \"resource_locations\" /* resource_locations */:\n            return 'resource_location';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = azureDashboardSelectors.selectWidget(state, widgetId);\n    const queries = azureDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: azureDashboardActions.fetchWidgetForecasts,\n    fetchReports: azureDashboardActions.fetchWidgetReports,\n    updateTab: azureDashboardActions.changeWidgetTab,\n};\nconst AzureDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AzureDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureDashboardSelectors } from 'store/dashboard/azureDashboard';\nimport { AzureDashboardWidget } from './azureDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: AzureDashboardWidget,\n        selectWidgets: azureDashboardSelectors.selectWidgets(state),\n        widgets: azureDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AzureDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default AzureDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { gcpDashboardActions, gcpDashboardSelectors } from 'store/dashboard/gcpDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = gcpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = gcpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: gcpDashboardActions.fetchWidgetReports,\n    updateTab: gcpDashboardActions.changeWidgetTab,\n};\nconst GcpDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { GcpDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { gcpDashboardSelectors } from 'store/dashboard/gcpDashboard';\nimport { GcpDashboardWidget } from './gcpDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: GcpDashboardWidget,\n        selectWidgets: gcpDashboardSelectors.selectWidgets(state),\n        widgets: gcpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst GcpDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default GcpDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardActions, ocpCloudDashboardSelectors, } from 'store/dashboard/ocpCloudDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"services\" /* services */:\n            return 'service';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: ocpCloudDashboardActions.fetchWidgetForecasts,\n    fetchReports: ocpCloudDashboardActions.fetchWidgetReports,\n    updateTab: ocpCloudDashboardActions.changeWidgetTab,\n};\nconst OcpCloudDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpCloudDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardSelectors } from 'store/dashboard/ocpCloudDashboard';\nimport { OcpCloudDashboardWidget } from './ocpCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: OcpCloudDashboardWidget,\n        selectWidgets: ocpCloudDashboardSelectors.selectWidgets(state),\n        widgets: ocpCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpCloudDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpCloudDashboard;\n","export const chartStyles = {\n    chartAltHeight: 250,\n    containerAltHeight: 250,\n};\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardActions, ocpDashboardSelectors } from 'store/dashboard/ocpDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { chartStyles } from './ocpDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, chartAltHeight: chartStyles.chartAltHeight, containerAltHeight: chartStyles.containerAltHeight, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: ocpDashboardActions.fetchWidgetForecasts,\n    fetchReports: ocpDashboardActions.fetchWidgetReports,\n    updateTab: ocpDashboardActions.changeWidgetTab,\n};\nconst OcpDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardSelectors } from 'store/dashboard/ocpDashboard';\nimport { OcpDashboardWidget } from './ocpDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: OcpDashboardWidget,\n        selectWidgets: ocpDashboardSelectors.selectWidgets(state),\n        widgets: ocpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpSupplementaryDashboardActions, ocpSupplementaryDashboardSelectors, } from 'store/dashboard/ocpSupplementaryDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpSupplementaryDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpSupplementaryDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: ocpSupplementaryDashboardActions.fetchWidgetForecasts,\n    fetchReports: ocpSupplementaryDashboardActions.fetchWidgetReports,\n    updateTab: ocpSupplementaryDashboardActions.changeWidgetTab,\n};\nconst OcpSupplementaryDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpSupplementaryDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpSupplementaryDashboardSelectors } from 'store/dashboard/ocpSupplementaryDashboard';\nimport { OcpSupplementaryDashboardWidget } from './ocpSupplementaryDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: OcpSupplementaryDashboardWidget,\n        selectWidgets: ocpSupplementaryDashboardSelectors.selectWidgets(state),\n        widgets: ocpSupplementaryDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpSupplementaryDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpSupplementaryDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpUsageDashboardActions, ocpUsageDashboardSelectors, } from 'store/dashboard/ocpUsageDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpUsageDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpUsageDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpUsageDashboardActions.fetchWidgetReports,\n    updateTab: ocpUsageDashboardActions.changeWidgetTab,\n};\nconst OcpUsageDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpUsageDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpUsageDashboardSelectors } from 'store/dashboard/ocpUsageDashboard';\nimport { OcpUsageDashboardWidget } from './ocpUsageDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: OcpUsageDashboardWidget,\n        selectWidgets: ocpUsageDashboardSelectors.selectWidgets(state),\n        widgets: ocpUsageDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpUsageDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpUsageDashboard;\n","import global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const styles = {\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    perspective: {\n        marginTop: global_spacer_lg.value,\n    },\n    tabs: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    perspectiveSelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    perspectiveLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n};\n","import { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './perspective.styles';\nclass PerspectiveBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isPerspectiveOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getDropDownItems = () => {\n            const { options, t } = this.props;\n            return options.map(option => (React.createElement(DropdownItem, { component: \"button\", key: option.value, onClick: () => this.handleClick(option.value) }, t(option.label))));\n        };\n        this.getCurrentLabel = () => {\n            const { currentItem, options, t } = this.props;\n            let label = '';\n            for (const option of options) {\n                if (currentItem === option.value) {\n                    label = t(option.label);\n                    break;\n                }\n            }\n            return label;\n        };\n        this.handleClick = value => {\n            const { onItemClicked } = this.props;\n            if (onItemClicked) {\n                onItemClicked(value);\n            }\n        };\n        this.handleSelect = () => {\n            this.setState({\n                isPerspectiveOpen: !this.state.isPerspectiveOpen,\n            });\n        };\n        this.handleToggle = isPerspectiveOpen => {\n            this.setState({\n                isPerspectiveOpen,\n            });\n        };\n    }\n    render() {\n        const { t } = this.props;\n        const { isPerspectiveOpen } = this.state;\n        const dropdownItems = this.getDropDownItems();\n        return (React.createElement(\"div\", { style: styles.perspectiveSelector },\n            React.createElement(\"label\", { style: styles.perspectiveLabel }, t('overview.perspective.label')),\n            React.createElement(Dropdown, { onSelect: this.handleSelect, toggle: React.createElement(DropdownToggle, { onToggle: this.handleToggle }, this.getCurrentLabel()), isOpen: isPerspectiveOpen, dropdownItems: dropdownItems })));\n    }\n}\nconst Perspective = withTranslation()(PerspectiveBase);\nexport { Perspective };\n","import './overview.scss';\nimport { Button, ButtonVariant, Popover, Tab, TabContent, Tabs, TabTitleText, Title } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport AwsCloudDashboard from 'pages/dashboard/awsCloudDashboard/awsCloudDashboard';\nimport AwsDashboard from 'pages/dashboard/awsDashboard/awsDashboard';\nimport AzureCloudDashboard from 'pages/dashboard/azureCloudDashboard/azureCloudDashboard';\nimport AzureDashboard from 'pages/dashboard/azureDashboard/azureDashboard';\nimport GcpDashboard from 'pages/dashboard/gcpDashboard/gcpDashboard';\nimport OcpCloudDashboard from 'pages/dashboard/ocpCloudDashboard/ocpCloudDashboard';\nimport OcpDashboard from 'pages/dashboard/ocpDashboard/ocpDashboard';\nimport OcpSupplementaryDashboard from 'pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboard';\nimport OcpUsageDashboard from 'pages/dashboard/ocpUsageDashboard/ocpUsageDashboard';\nimport Loading from 'pages/state/loading';\nimport NoProviders from 'pages/state/noProviders';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsProvidersQuery, azureProvidersQuery, gcpProvidersQuery, ocpProvidersQuery, providersSelectors, } from 'store/providers';\nimport { hasAwsPermissions, hasAzurePermissions, hasEntitledPermissions, hasGcpPermissions, hasOcpPermissions, hasOrgAdminPermissions, } from 'utils/permissions';\nimport { styles } from './overview.styles';\nimport { Perspective } from './perspective';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"infrastructure\" /* infrastructure */:\n            return 'infrastructure';\n        case \"ocp\" /* ocp */:\n            return 'ocp';\n    }\n};\n// Ocp options\nconst ocpOptions = [\n    { label: 'overview.perspective.all', value: 'all' },\n    { label: 'overview.perspective.supplementary', value: 'supplementary' },\n];\n// Infrastructure all cloud options\nconst infrastructureAllCloudOptions = [{ label: 'overview.perspective.all_cloud', value: 'all_cloud' }];\n// Infrastructure AWS options\nconst infrastructureAwsOptions = [{ label: 'overview.perspective.aws', value: 'aws' }];\n// Infrastructure AWS cloud options\nconst infrastructureAwsCloudOptions = [{ label: 'overview.perspective.aws_cloud', value: 'aws_cloud' }];\n// Infrastructure Azure options\nconst infrastructureAzureOptions = [{ label: 'overview.perspective.azure', value: 'azure' }];\n// Infrastructure Azure cloud options\nconst infrastructureAzureCloudOptions = [{ label: 'overview.perspective.azure_cloud', value: 'azure_cloud' }];\n// Infrastructure GCP options\nconst infrastructureGcpOptions = [{ label: 'overview.perspective.gcp', value: 'gcp' }];\n// Infrastructure Ocp options\nconst infrastructureOcpOptions = [{ label: 'overview.perspective.ocp_usage', value: 'ocp_usage' }];\nconst getPermissions = async () => {\n    const isEntitled = await hasEntitledPermissions();\n    const isOrgAdmin = await hasOrgAdminPermissions();\n    const isAwsAccessAllowed = isEntitled && (isOrgAdmin || (await hasAwsPermissions()));\n    const isAzureAccessAllowed = isEntitled && (isOrgAdmin || (await hasAzurePermissions()));\n    const isGcpAccessAllowed = isEntitled && (isOrgAdmin || (await hasGcpPermissions()));\n    const isOcpAccessAllowed = isEntitled && (isOrgAdmin || (await hasOcpPermissions()));\n    return {\n        isAwsAccessAllowed,\n        isAzureAccessAllowed,\n        isGcpAccessAllowed,\n        isOcpAccessAllowed,\n    };\n};\nclass OverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            activeTabKey: 0,\n            isAwsAccessAllowed: false,\n            isAzureAccessAllowed: false,\n            isGcpAccessAllowed: false,\n            isOcpAccessAllowed: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getAvailableTabs = () => {\n            const availableTabs = [];\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isGcpAvailable = this.isGcpAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            const isOcpCloudAvailable = this.isOcpCloudAvailable();\n            if (isOcpAvailable) {\n                availableTabs.push({\n                    contentRef: React.createRef(),\n                    tab: \"ocp\" /* ocp */,\n                });\n            }\n            if (isAwsAvailable || isAzureAvailable || isGcpAvailable || isOcpCloudAvailable) {\n                availableTabs.push({\n                    contentRef: React.createRef(),\n                    tab: \"infrastructure\" /* infrastructure */,\n                });\n            }\n            return availableTabs;\n        };\n        this.getCurrentTab = () => {\n            const { activeTabKey } = this.state;\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isGcpAvailable = this.isGcpAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            const isOcpCloudAvailable = this.isOcpCloudAvailable();\n            const showOcpOnly = isOcpAvailable && !(isAwsAvailable || isAzureAvailable || isGcpAvailable || isOcpCloudAvailable);\n            const showInfrastructureOnly = !isOcpAvailable && (isAwsAvailable || isAzureAvailable || isGcpAvailable || isOcpCloudAvailable);\n            if (showOcpOnly) {\n                return \"ocp\" /* ocp */;\n            }\n            else if (showInfrastructureOnly) {\n                return \"infrastructure\" /* infrastructure */;\n            }\n            else {\n                return activeTabKey === 0 ? \"ocp\" /* ocp */ : \"infrastructure\" /* infrastructure */;\n            }\n        };\n        this.getDefaultInfrastructurePerspective = () => {\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isGcpAvailable = this.isGcpAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            if (isOcpAvailable) {\n                return \"all_cloud\" /* allCloud */;\n            }\n            if (isAwsAvailable) {\n                return \"aws\" /* aws */;\n            }\n            if (isAzureAvailable) {\n                return \"azure\" /* azure */;\n            }\n            if (isGcpAvailable) {\n                return \"gcp\" /* gcp */;\n            }\n            return undefined;\n        };\n        this.getDefaultOcpPerspective = () => {\n            const isOcpAvailable = this.isOcpAvailable();\n            if (isOcpAvailable) {\n                return \"all\" /* all */;\n            }\n            return undefined;\n        };\n        this.getPerspective = () => {\n            const { currentInfrastructurePerspective, currentOcpPerspective } = this.state;\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isGcpAvailable = this.isGcpAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            if (!(isAwsAvailable || isAzureAvailable || isGcpAvailable || isOcpAvailable)) {\n                return null;\n            }\n            // Dynamically show options if providers are available\n            const options = [];\n            if (this.getCurrentTab() === \"infrastructure\" /* infrastructure */) {\n                if (isOcpAvailable) {\n                    options.push(...infrastructureAllCloudOptions);\n                }\n                if (isAwsAvailable) {\n                    options.push(...infrastructureAwsOptions);\n                }\n                if (isOcpAvailable && isAwsAvailable) {\n                    options.push(...infrastructureAwsCloudOptions);\n                }\n                if (isGcpAvailable) {\n                    options.push(...infrastructureGcpOptions);\n                }\n                if (isAzureAvailable) {\n                    options.push(...infrastructureAzureOptions);\n                }\n                if (isOcpAvailable && isAzureAvailable) {\n                    options.push(...infrastructureAzureCloudOptions);\n                }\n                if (isOcpAvailable) {\n                    options.push(...infrastructureOcpOptions);\n                }\n            }\n            else {\n                options.push(...ocpOptions);\n            }\n            const currentItem = this.getCurrentTab() === \"infrastructure\" /* infrastructure */ ? currentInfrastructurePerspective : currentOcpPerspective;\n            return (React.createElement(Perspective, { currentItem: currentItem || options[0].value, onItemClicked: this.handlePerspectiveClick, options: options }));\n        };\n        this.getTab = (tab, contentRef, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, tabContentId: `tab-${index}`, tabContentRef: contentRef, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) }));\n        };\n        this.getTabContent = (availableTabs) => {\n            return availableTabs.map((val, index) => {\n                return (React.createElement(TabContent, { eventKey: index, key: `${getIdKeyForTab(val.tab)}-tabContent`, id: `tab-${index}`, ref: val.contentRef }, this.getTabItem(val.tab, index)));\n            });\n        };\n        this.getTabItem = (tab, index) => {\n            const { activeTabKey, currentInfrastructurePerspective, currentOcpPerspective } = this.state;\n            const emptyTab = React.createElement(React.Fragment, null); // Lazily load tabs\n            if (activeTabKey !== index) {\n                return emptyTab;\n            }\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === \"infrastructure\" /* infrastructure */) {\n                if (currentInfrastructurePerspective === \"all_cloud\" /* allCloud */) {\n                    return React.createElement(OcpCloudDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"aws\" /* aws */) {\n                    return React.createElement(AwsDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"aws_cloud\" /* awsFiltered */) {\n                    return React.createElement(AwsCloudDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"gcp\" /* gcp */) {\n                    return React.createElement(GcpDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"azure\" /* azure */) {\n                    return React.createElement(AzureDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"azure_cloud\" /* azureCloud */) {\n                    return React.createElement(AzureCloudDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"ocp_usage\" /* ocpUsage */) {\n                    return React.createElement(OcpUsageDashboard, null);\n                }\n                else {\n                    return React.createElement(OcpCloudDashboard, null); // default\n                }\n            }\n            else if (currentTab === \"ocp\" /* ocp */) {\n                if (currentOcpPerspective === \"all\" /* all */) {\n                    return React.createElement(OcpDashboard, null);\n                }\n                else if (currentOcpPerspective === \"supplementary\" /* supplementary */) {\n                    return React.createElement(OcpSupplementaryDashboard, null);\n                }\n                else {\n                    return React.createElement(OcpDashboard, null); // default\n                }\n            }\n            else {\n                return emptyTab;\n            }\n        };\n        this.getTabs = (availableTabs) => {\n            const { activeTabKey } = this.state;\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((val, index) => this.getTab(val.tab, val.contentRef, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            if (tab === \"infrastructure\" /* infrastructure */) {\n                return t('overview.infrastructure');\n            }\n            else if (tab === \"ocp\" /* ocp */) {\n                return t('overview.ocp');\n            }\n        };\n        this.handlePerspectiveClick = (value) => {\n            const currentTab = this.getCurrentTab();\n            this.setState(Object.assign(Object.assign({}, (currentTab === \"infrastructure\" /* infrastructure */ && {\n                currentInfrastructurePerspective: value,\n            })), (currentTab === \"ocp\" /* ocp */ && { currentOcpPerspective: value })));\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { activeTabKey } = this.state;\n            if (activeTabKey !== tabIndex) {\n                this.setState({\n                    activeTabKey: tabIndex,\n                });\n            }\n        };\n        this.isAwsAvailable = () => {\n            const { awsProviders } = this.props;\n            const { isAwsAccessAllowed } = this.state;\n            return (\n            // API returns empty data array for no sources\n            isAwsAccessAllowed && awsProviders !== undefined && awsProviders.meta !== undefined && awsProviders.meta.count > 0);\n        };\n        this.isAzureAvailable = () => {\n            const { azureProviders } = this.props;\n            const { isAzureAccessAllowed } = this.state;\n            return (\n            // API returns empty data array for no sources\n            isAzureAccessAllowed &&\n                azureProviders !== undefined &&\n                azureProviders.meta !== undefined &&\n                azureProviders.meta.count > 0);\n        };\n        this.isGcpAvailable = () => {\n            const { gcpProviders } = this.props;\n            const { isGcpAccessAllowed } = this.state;\n            return (\n            // API returns empty data array for no sources\n            isGcpAccessAllowed && gcpProviders !== undefined && gcpProviders.meta !== undefined && gcpProviders.meta.count > 0);\n        };\n        this.isOcpAvailable = () => {\n            const { ocpProviders } = this.props;\n            const { isOcpAccessAllowed } = this.state;\n            return (\n            // API returns empty data array for no sources\n            isOcpAccessAllowed && ocpProviders !== undefined && ocpProviders.meta !== undefined && ocpProviders.meta.count > 0);\n        };\n        this.isOcpCloudAvailable = () => {\n            return this.isAwsAvailable() && this.isOcpAvailable();\n        };\n    }\n    componentDidMount() {\n        getPermissions().then(({ isAwsAccessAllowed, isAzureAccessAllowed, isGcpAccessAllowed, isOcpAccessAllowed }) => {\n            this.setState({\n                currentInfrastructurePerspective: this.getDefaultInfrastructurePerspective(),\n                currentOcpPerspective: this.getDefaultOcpPerspective(),\n                isAwsAccessAllowed,\n                isAzureAccessAllowed,\n                isGcpAccessAllowed,\n                isOcpAccessAllowed,\n            });\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { awsProviders, azureProviders, gcpProviders, ocpProviders } = this.props;\n        if (prevProps.awsProviders !== awsProviders ||\n            prevProps.azureProviders !== azureProviders ||\n            prevProps.gcpProviders !== gcpProviders ||\n            prevProps.ocpProviders !== ocpProviders) {\n            this.setState({\n                currentInfrastructurePerspective: this.getDefaultInfrastructurePerspective(),\n                currentOcpPerspective: this.getDefaultOcpPerspective(),\n            });\n        }\n    }\n    render() {\n        const { awsProvidersFetchStatus, azureProvidersFetchStatus, gcpProvidersFetchStatus, ocpProvidersFetchStatus, t, } = this.props;\n        const availableTabs = this.getAvailableTabs();\n        const isLoading = awsProvidersFetchStatus === 1 /* inProgress */ ||\n            azureProvidersFetchStatus === 1 /* inProgress */ ||\n            gcpProvidersFetchStatus === 1 /* inProgress */ ||\n            ocpProvidersFetchStatus === 1 /* inProgress */;\n        // Test for no providers\n        const noAwsProviders = !this.isAwsAvailable() && awsProvidersFetchStatus === 2 /* complete */;\n        const noAzureProviders = !this.isAzureAvailable() && azureProvidersFetchStatus === 2 /* complete */;\n        const noGcpProviders = !this.isGcpAvailable() && gcpProvidersFetchStatus === 2 /* complete */;\n        const noOcpProviders = !this.isOcpAvailable() && ocpProvidersFetchStatus === 2 /* complete */;\n        const noProviders = noAwsProviders && noAzureProviders && noGcpProviders && noOcpProviders;\n        const title = t('navigation.overview');\n        if (noProviders) {\n            return React.createElement(NoProviders, { title: title });\n        }\n        else if (isLoading) {\n            return React.createElement(Loading, { title: title });\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"section\", { className: `pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light headerOverride}` },\n                React.createElement(\"header\", { className: \"pf-u-display-flex pf-u-justify-content-space-between pf-u-align-items-center\" },\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"2xl\" },\n                        t('overview.title'),\n                        React.createElement(\"span\", { style: styles.infoIcon },\n                            React.createElement(Popover, { \"aria-label\": t('ocp_details.supplementary_aria_label'), enableFlip: true, bodyContent: React.createElement(React.Fragment, null,\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.ocp_cloud')),\n                                    React.createElement(\"p\", null, t('overview.ocp_cloud_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.ocp')),\n                                    React.createElement(\"p\", null, t('overview.ocp_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.gcp')),\n                                    React.createElement(\"p\", null, t('overview.gcp_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.aws')),\n                                    React.createElement(\"p\", null, t('overview.aws_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.azure')),\n                                    React.createElement(\"p\", null, t('overview.azure_desc'))) },\n                                React.createElement(Button, { variant: ButtonVariant.plain },\n                                    React.createElement(OutlinedQuestionCircleIcon, null)))))),\n                React.createElement(\"div\", { style: styles.tabs }, this.getTabs(availableTabs)),\n                React.createElement(\"div\", { style: styles.perspective }, this.getPerspective())),\n            React.createElement(\"section\", { className: \"pf-l-page__main-section pf-c-page__main-section\", \"page-type\": \"cost-management-overview\" }, this.getTabContent(availableTabs))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const awsProvidersQueryString = getProvidersQuery(awsProvidersQuery);\n    const awsProviders = providersSelectors.selectProviders(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const awsProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const azureProvidersQueryString = getProvidersQuery(azureProvidersQuery);\n    const azureProviders = providersSelectors.selectProviders(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const azureProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const gcpProvidersQueryString = getProvidersQuery(gcpProvidersQuery);\n    const gcpProviders = providersSelectors.selectProviders(state, \"gcp\" /* gcp */, gcpProvidersQueryString);\n    const gcpProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"gcp\" /* gcp */, gcpProvidersQueryString);\n    const ocpProvidersQueryString = getProvidersQuery(ocpProvidersQuery);\n    const ocpProviders = providersSelectors.selectProviders(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    const ocpProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    return {\n        awsProviders,\n        awsProvidersFetchStatus,\n        awsProvidersQueryString,\n        azureProviders,\n        azureProvidersFetchStatus,\n        azureProvidersQueryString,\n        gcpProviders,\n        gcpProvidersFetchStatus,\n        gcpProvidersQueryString,\n        ocpProviders,\n        ocpProvidersFetchStatus,\n        ocpProvidersQueryString,\n    };\n});\nconst Overview = withTranslation()(connect(mapStateToProps)(OverviewBase));\nexport default Overview;\n","import Overview from './overview';\nexport default Overview;\n","export const unitLookupKey = unit => {\n    const lookup = unit ? unit.toLowerCase() : '';\n    switch (lookup) {\n        case 'usd':\n        case 'gb':\n        case 'gb-hours':\n        case 'gb-mo':\n        case 'core-hours':\n        case 'hrs':\n        case 'tag-mo':\n        case 'vm-hours':\n            return lookup;\n        default:\n            return '';\n    }\n};\nexport const formatValue = (value, unit, options = {}) => {\n    const lookup = unitLookupKey(unit);\n    const fValue = value || 0;\n    switch (lookup) {\n        case 'usd':\n            return formatCurrency(fValue, lookup, options);\n        case 'gb':\n        case 'gb-hours':\n        case 'gb-mo':\n        case 'tag-mo':\n        case 'vm-hours':\n            return formatUsageGb(fValue, lookup, options);\n        case 'core-hours':\n        case 'hrs':\n            return formatUsageHrs(fValue, lookup, options);\n        default:\n            return unknownTypeFormatter(fValue, lookup, options);\n    }\n};\nconst unknownTypeFormatter = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatCurrency = (value, unit, { fractionDigits = 2 } = {}) => {\n    let fValue = value;\n    if (!value) {\n        fValue = 0;\n    }\n    return fValue.toLocaleString('en', {\n        style: 'currency',\n        currency: unit || 'USD',\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatUsageGb = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatUsageHrs = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\n","import { sort } from 'utils/sort';\nexport function getComputedForecastItems({ forecast, sortDirection = 0 /* asc */, sortKey = 'date', }) {\n    return sort(getUnsortedComputedForecastItems({\n        forecast,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nfunction getCostData(val, key, item) {\n    return {\n        confidence_max: {\n            value: item\n                ? item[key].confidence_max.value\n                : 0 + val[key] && val[key].confidence_max\n                    ? val[key].confidence_max.value\n                    : 0,\n            units: val[key] && val[key].confidence_max ? val[key].confidence_max.units : 'USD',\n        },\n        confidence_min: {\n            value: item\n                ? item[key].confidence_min.value\n                : 0 + val[key] && val[key].confidence_min\n                    ? val[key].confidence_min.value\n                    : 0,\n            units: val[key] && val[key].confidence_min ? val[key].confidence_min.units : 'USD',\n        },\n        pvalues: {\n            value: val[key] && val[key].pvalues ? Number(val[key].pvalues.value) : 0,\n            units: val[key] && val[key].pvalues ? val[key].pvalues.units : null,\n        },\n        rsquared: {\n            value: val[key] && val[key].rsquared ? Number(val[key].rsquared.value) : 0,\n            units: val[key] && val[key].rsquared ? val[key].rsquared.units : null,\n        },\n        total: {\n            value: item ? item[key].total.value : 0 + val[key] && val[key].total ? val[key].total.value : 0,\n            units: val[key] && val[key].total ? val[key].total.units : 'USD',\n        },\n    };\n}\nexport function getUnsortedComputedForecastItems({ forecast, }) {\n    if (!forecast) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint && dataPoint.values) {\n            dataPoint.values.forEach((val) => {\n                const date = val.date;\n                const item = itemMap.get(date);\n                if (item) {\n                    // This code block is typically entered with filter[resolution]=monthly\n                    itemMap.set(date, Object.assign(Object.assign({}, item), { date, cost: getCostData(val, 'cost', item), infrastructure: getCostData(val, 'infrastructure', item), supplementary: getCostData(val, 'supplementary', item) }));\n                }\n                else {\n                    // This code block is typically entered with filter[resolution]=daily\n                    itemMap.set(date, {\n                        date,\n                        cost: getCostData(val, 'cost'),\n                        infrastructure: getCostData(val, 'infrastructure'),\n                        supplementary: getCostData(val, 'supplementary'),\n                    });\n                }\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (forecast && forecast.data) {\n        forecast.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\n","import endOfMonth from 'date-fns/end_of_month';\nimport format from 'date-fns/format';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getYear from 'date-fns/get_year';\nimport startOfMonth from 'date-fns/start_of_month';\nimport i18next from 'i18next';\nimport { getComputedForecastItems } from 'utils/computedForecast/getComputedForecastItems';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { unitLookupKey } from 'utils/formatValue';\nexport function transformForecast(forecast, type = 1 /* daily */, forecastItem = 'cost', forecastItemValue = 'total') {\n    if (!forecast) {\n        return [];\n    }\n    const items = {\n        forecast,\n        sortKey: 'date',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedForecastItems(items);\n    let chartDatums;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        chartDatums = computedItems.map(i => createForecastDatum(i[forecastItem][forecastItemValue].value, i));\n    }\n    else {\n        chartDatums = computedItems.reduce((acc, d) => {\n            const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n            return [...acc, createForecastDatum(prevValue + d[forecastItem][forecastItemValue].value, d)];\n        }, []);\n    }\n    return padChartDatums(chartDatums, type);\n}\nexport function transformForecastCone(forecast, type = 1 /* daily */, forecastItem = 'cost', forecastItemValue = 'total') {\n    if (!forecast) {\n        return [];\n    }\n    const items = {\n        forecast,\n        sortKey: 'date',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedForecastItems(items);\n    let chartDatums;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        chartDatums = computedItems.map(i => createForecastConeDatum(i[forecastItem].confidence_max.value, i[forecastItem].confidence_min.value, i));\n    }\n    else {\n        chartDatums = computedItems.reduce((acc, d) => {\n            const prevMaxValue = acc.length ? acc[acc.length - 1].y : d[forecastItem][forecastItemValue].value;\n            const prevMinValue = acc.length ? acc[acc.length - 1].y0 : d[forecastItem][forecastItemValue].value;\n            return [\n                ...acc,\n                createForecastConeDatum(prevMaxValue + d[forecastItem].confidence_max.value, prevMinValue + d[forecastItem].confidence_min.value, d),\n            ];\n        }, []);\n    }\n    return padChartDatums(chartDatums, type);\n}\nexport function transformReport(report, type = 1 /* daily */, idKey = 'date', reportItem = 'cost', reportItemValue = 'total' // useful for infrastructure.usage values\n) {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        idKey,\n        report,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedReportItems(items);\n    let chartDatums;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        chartDatums = computedItems.map(i => {\n            const val = i[reportItem][reportItemValue] ? i[reportItem][reportItemValue].value : i[reportItem].value;\n            return createReportDatum(val, i, idKey, reportItem, reportItemValue);\n        });\n    }\n    else {\n        chartDatums = computedItems.reduce((acc, d) => {\n            const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n            const val = d[reportItem][reportItemValue] ? d[reportItem][reportItemValue].value : d[reportItem].value;\n            return [...acc, createReportDatum(prevValue + val, d, idKey, reportItem, reportItemValue)];\n        }, []);\n    }\n    return idKey === 'date' ? padChartDatums(chartDatums, type) : chartDatums;\n}\nexport function createForecastDatum(value, computedItem, forecastItem = 'cost', forecastItemValue = 'total') {\n    const xVal = getDate(computedItem.date);\n    const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n    return {\n        x: xVal,\n        y: value === null ? null : yVal,\n        key: computedItem.date,\n        units: computedItem[forecastItem] && computedItem[forecastItem][forecastItemValue]\n            ? computedItem[forecastItem][forecastItemValue].units\n            : undefined,\n    };\n}\nexport function createForecastConeDatum(maxValue, minValue, computedItem, forecastItem = 'cost', forecastItemValue = 'total') {\n    const xVal = getDate(computedItem.date);\n    const yVal = isFloat(maxValue) ? parseFloat(maxValue.toFixed(2)) : isInt(maxValue) ? maxValue : 0;\n    const y0Val = isFloat(minValue) ? parseFloat(minValue.toFixed(2)) : isInt(minValue) ? minValue : 0;\n    return {\n        x: xVal,\n        y: maxValue === null ? null : yVal,\n        y0: minValue === null ? null : y0Val,\n        key: computedItem.date,\n        units: computedItem[forecastItem] && computedItem[forecastItem][forecastItemValue]\n            ? computedItem[forecastItem][forecastItemValue].units\n            : undefined,\n    };\n}\nexport function createReportDatum(value, computedItem, idKey = 'date', reportItem = 'cost', reportItemValue = 'total' // useful for infrastructure.usage values\n) {\n    const xVal = idKey === 'date' ? getDate(computedItem.id) : computedItem.label;\n    const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n    return {\n        x: xVal,\n        y: value === null ? null : yVal,\n        key: computedItem.id,\n        units: computedItem[reportItem]\n            ? computedItem[reportItem][reportItemValue]\n                ? computedItem[reportItem][reportItemValue].units // cost, infrastructure, supplementary\n                : computedItem[reportItem].units // capacity, limit, request, usage\n            : undefined,\n    };\n}\n// Fill in missing data with previous value to represent cumulative daily cost\nexport function fillChartDatums(datums, type = 1 /* daily */) {\n    const result = [];\n    if (!datums || datums.length === 0) {\n        return result;\n    }\n    const firstDate = new Date(datums[0].key + 'T00:00:00');\n    const lastDate = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    const padDate = startOfMonth(firstDate);\n    let prevChartDatum;\n    for (let i = padDate.getDate(); i <= endOfMonth(lastDate).getDate(); i++) {\n        padDate.setDate(i);\n        const id = formatDate(padDate, 'YYYY-MM-DD');\n        const chartDatum = datums.find(val => val.key === id);\n        if (chartDatum) {\n            result.push(chartDatum);\n        }\n        else if (prevChartDatum) {\n            result.push(Object.assign(Object.assign({}, prevChartDatum), { key: id, x: getDate(id) }));\n        }\n        if (chartDatum) {\n            // Note: We want to identify missing data, but charts won't extrapolate (connect data points) if we return null here\n            // for missing daily values. For example, if there is only data for the first and last day of the month, charts would\n            // typically draw a line between two points by default. However, showing \"no data\" is more obvious there was a problem.\n            if (type === 1 /* daily */) {\n                prevChartDatum = {\n                    key: id,\n                    x: getDate(id),\n                    y: null,\n                };\n            }\n            else {\n                prevChartDatum = chartDatum;\n            }\n        }\n    }\n    return result;\n}\n// This pads chart datums with null datum objects, representing missing data at the beginning and end of the\n// data series. The remaining data is left as is to allow for extrapolation. This allows us to display a \"no data\"\n// message in the tooltip, which helps distinguish between zero values and when there is no data available.\nexport function padChartDatums(datums, type = 1 /* daily */) {\n    const result = [];\n    if (!datums || datums.length === 0) {\n        return result;\n    }\n    const firstDate = new Date(datums[0].key + 'T00:00:00');\n    const lastDate = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    // Pad start for missing data\n    let padDate = startOfMonth(firstDate);\n    for (let i = padDate.getDate(); i < firstDate.getDate(); i++) {\n        padDate.setDate(i);\n        const id = formatDate(padDate, 'YYYY-MM-DD');\n        result.push(createReportDatum(null, { id }, 'date', null));\n    }\n    // Fill middle with existing data\n    result.push(...datums);\n    // Pad end for missing data\n    padDate = new Date(lastDate);\n    for (let i = padDate.getDate() + 1; i <= endOfMonth(lastDate).getDate(); i++) {\n        padDate.setDate(i);\n        const id = formatDate(padDate, 'YYYY-MM-DD');\n        result.push(createReportDatum(null, { id }, 'date', null));\n    }\n    return fillChartDatums(result, type);\n}\nexport function getDatumDateRange(datums, offset = 0) {\n    if (!(datums && datums.length)) {\n        const today = new Date();\n        // If datums is empty, obtain the month based on offset (e.g., to show previous month in chart legends)\n        if (offset) {\n            today.setMonth(today.getMonth() - offset);\n        }\n        const firstOfMonth = startOfMonth(today);\n        return [firstOfMonth, today];\n    }\n    const start = new Date(datums[0].key + 'T00:00:00');\n    const end = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    return [start, end];\n}\nexport function getDateRange(datums, firstOfMonth = true, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDatumDateRange(datums, offset);\n    // Show the date range we are trying to cover (i.e., days 1-30/31)\n    if (firstOfMonth && start.setDate) {\n        start.setDate(1);\n    }\n    if (lastOfMonth && start.setDate) {\n        const lastDate = endOfMonth(start).getDate();\n        end.setDate(lastDate);\n    }\n    return [start, end];\n}\nexport function getDateRangeString(datums, firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(`chart.date_range`, {\n        count: getDate(end),\n        endDate: formatDate(end, 'DD'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'DD'),\n        year: getYear(end),\n    });\n}\nexport function getMonthRangeString(datums, key = 'chart.month_legend_label', offset = 0) {\n    const [start, end] = getDateRange(datums, true, false, offset);\n    return [\n        i18next.t(key, {\n            month: Number(formatDate(start, 'M')) - 1,\n        }),\n        i18next.t(key, {\n            month: Number(formatDate(end, 'M')) - 1,\n        }),\n    ];\n}\nexport function getMaxValue(datums) {\n    let max = 0;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            if (datum.y > max) {\n                max = datum.y;\n            }\n        });\n    }\n    return max;\n}\nexport function getMaxMinValues(datums) {\n    let max = 0;\n    let min = 0;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            const maxY = datum.y0 !== undefined ? Math.max(datum.y, datum.y0) : datum.y;\n            const minY = datum.y0 !== undefined ? Math.min(datum.y, datum.y0) : datum.y;\n            if (maxY > max) {\n                max = maxY;\n            }\n            if ((min === 0 || minY < min) && minY !== null) {\n                min = minY;\n            }\n        });\n    }\n    return { max, min };\n}\nexport function getTooltipContent(formatValue) {\n    return function labelFormatter(value, unit = null, options = {}) {\n        const lookup = unitLookupKey(unit);\n        switch (lookup) {\n            case 'core-hours':\n            case 'hrs':\n            case 'gb':\n            case 'gb-hours':\n            case 'gb-mo':\n            case 'vm-hours':\n                return i18next.t(`unit_tooltips.${lookup}`, {\n                    value: `${formatValue(value, unit, options)}`,\n                });\n            default:\n                return `${formatValue(value, unit, options)}`;\n        }\n    };\n}\nexport function getTooltipLabel(datum, formatValue, formatOptions, idKey = 'date', units) {\n    if (!datum.key) {\n        return '';\n    }\n    if (idKey === 'date') {\n        const date = format(datum.key, 'DD MMM YYYY');\n        return `${date} ${formatValue(datum.y, units ? units : datum.units, formatOptions)}`;\n    }\n    return datum.key.toString();\n}\nexport function getCostRangeString(datums, key = 'chart.cost_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(key, {\n        count: getDate(end),\n        endDate: formatDate(end, 'D'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'D'),\n        year: getYear(end),\n    });\n}\nexport function getUsageRangeString(datums, key = 'chart.usage_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    return getCostRangeString(datums, key, firstOfMonth, lastOfMonth, offset);\n}\nfunction isInt(n) {\n    return Number(n) === n && n % 1 === 0;\n}\nfunction isFloat(n) {\n    return Number(n) === n && n % 1 !== 0;\n}\n","// Layout\nconst LAYOUT_PROPS = {\n    padding: 8,\n};\n// Victory theme properties only\nexport default {\n    area: Object.assign({}, LAYOUT_PROPS),\n    axis: Object.assign({}, LAYOUT_PROPS),\n    bar: Object.assign({}, LAYOUT_PROPS),\n    boxplot: Object.assign({}, LAYOUT_PROPS),\n    candlestick: Object.assign({}, LAYOUT_PROPS),\n    chart: Object.assign({}, LAYOUT_PROPS),\n    errorbar: Object.assign({}, LAYOUT_PROPS),\n    group: Object.assign({}, LAYOUT_PROPS),\n    legend: {},\n    line: Object.assign({}, LAYOUT_PROPS),\n    pie: Object.assign({}, LAYOUT_PROPS),\n    scatter: Object.assign({}, LAYOUT_PROPS),\n    stack: Object.assign({}, LAYOUT_PROPS),\n    tooltip: {},\n    voronoi: Object.assign({}, LAYOUT_PROPS),\n};\n","import getTheme from './theme-utils';\nconst ChartTheme = getTheme();\nexport default ChartTheme;\n","import { ChartThemeColor, ChartThemeVariant, getCustomTheme } from '@patternfly/react-charts';\nimport { default as ChartTheme } from './theme-koku';\n// Applies theme color and variant to base theme\nconst getTheme = () => getCustomTheme(ChartThemeColor.default, ChartThemeVariant.default, ChartTheme);\nexport default getTheme;\n","import { sort } from 'utils/sort';\nimport { getItemLabel } from './getItemLabel';\nexport function getComputedReportItems({ idKey, report, sortDirection = 0 /* asc */, sortKey = 'date', }) {\n    return sort(getUnsortedComputedReportItems({\n        idKey,\n        report,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nfunction getCostData(val, key, item) {\n    return {\n        markup: {\n            value: item ? item[key].markup.value : 0 + val[key] && val[key].markup ? val[key].markup.value : 0,\n            units: val[key] && val[key].markup ? val[key].markup.units : 'USD',\n        },\n        raw: {\n            value: item ? item[key].raw.value : 0 + val[key] && val[key].raw ? val[key].raw.value : 0,\n            units: val[key] && val[key].raw ? val[key].raw.units : 'USD',\n        },\n        total: {\n            value: item ? item[key].total.value : 0 + val[key] && val[key].total ? Number(val[key].total.value) : 0,\n            units: val[key] && val[key].total ? val[key].total.units : null,\n        },\n        usage: {\n            value: item ? item[key].usage.value : 0 + val[key] && val[key].usage ? Number(val[key].usage.value) : 0,\n            units: val[key] && val[key].usage ? val[key].usage.units : null,\n        },\n    };\n}\nfunction getUsageData(val, item) {\n    return {\n        capacity: {\n            value: item ? item.capacity.value : 0 + val.capacity ? val.capacity.value : 0,\n            units: val.capacity ? val.capacity.units : 'Core-Hours',\n        },\n        limit: {\n            value: item ? item.limit.value : 0 + val.limit ? val.limit.value : 0,\n            units: val.limit ? val.limit.units : 'Core-Hours',\n        },\n        request: {\n            value: item ? item.request.value : 0 + val.request ? val.request.value : 0,\n            units: val.request ? val.request.units : 'Core-Hours',\n        },\n        usage: {\n            value: item ? item.usage.value : 0 + val.usage ? val.usage.value : 0,\n            units: val.usage ? val.usage.units : 'Core-Hours',\n        },\n    };\n}\nexport function getUnsortedComputedReportItems({ report, idKey, }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint && dataPoint.values) {\n            const type = dataPoint.type;\n            dataPoint.values.forEach((val) => {\n                // Ensure unique map IDs -- https://github.com/project-koku/koku-ui/issues/706\n                const idSuffix = idKey !== 'date' && idKey !== 'cluster' && val.cluster ? `-${val.cluster}` : '';\n                // org_unit_id workaround for storage and instance-type APIs\n                let id = idKey === 'org_entities' ? val.org_unit_id : val[idKey];\n                if (id === undefined) {\n                    id = val.id || val.date;\n                }\n                const mapId = `${id}${idSuffix}`;\n                // 'clusters' will contain either the cluster alias or default cluster ID\n                const cluster_alias = val.clusters && val.clusters.length > 0 ? val.clusters[0] : undefined;\n                const cluster = cluster_alias || val.cluster;\n                const clusters = val.clusters ? val.clusters : [];\n                const date = val.date;\n                const delta_percent = val.delta_percent ? val.delta_percent : 0;\n                const delta_value = val.delta_value ? val.delta_value : 0;\n                const source_uuid = val.source_uuid ? val.source_uuid : [];\n                let label;\n                const itemLabelKey = getItemLabel({ report, idKey, value: val });\n                if (itemLabelKey === 'org_entities' && val.alias) {\n                    label = val.alias;\n                }\n                else if (itemLabelKey === 'account' && val.account_alias) {\n                    label = val.account_alias;\n                }\n                else if (itemLabelKey === 'cluster' && cluster_alias) {\n                    label = cluster_alias;\n                }\n                else if (val[itemLabelKey] instanceof Object) {\n                    label = val[itemLabelKey].value;\n                }\n                else {\n                    label = val[itemLabelKey];\n                }\n                if (label === undefined) {\n                    label = val.alias ? val.alias : val.id;\n                }\n                const item = itemMap.get(mapId);\n                if (item) {\n                    // This code block is typically entered with filter[resolution]=monthly\n                    itemMap.set(mapId, Object.assign(Object.assign(Object.assign({}, item), getUsageData(val, item)), { // capacity, limit, request, & usage\n                        cluster,\n                        clusters,\n                        date,\n                        delta_percent,\n                        delta_value, cost: getCostData(val, 'cost', item), id, infrastructure: getCostData(val, 'infrastructure', item), label,\n                        source_uuid, supplementary: getCostData(val, 'supplementary', item), type }));\n                }\n                else {\n                    // This code block is typically entered with filter[resolution]=daily\n                    itemMap.set(mapId, Object.assign(Object.assign({}, getUsageData(val)), { // capacity, limit, request, & usage\n                        cluster,\n                        clusters, cost: getCostData(val, 'cost'), date,\n                        delta_percent,\n                        delta_value,\n                        id, infrastructure: getCostData(val, 'infrastructure'), label,\n                        source_uuid, supplementary: getCostData(val, 'supplementary'), type }));\n                }\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\n","import { tagPrefix } from 'api/queries/query';\nexport function getItemLabel({ idKey, report, value }) {\n    let itemLabelKey = String(idKey);\n    if (report.meta && report.meta.group_by) {\n        const group_by = report.meta.group_by;\n        for (const key of Object.keys(group_by)) {\n            if (key.indexOf(tagPrefix)) {\n                const tagPrefixKey = tagPrefix + idKey;\n                if (value.hasOwnProperty(tagPrefixKey)) {\n                    itemLabelKey = tagPrefixKey;\n                }\n            }\n        }\n    }\n    return itemLabelKey;\n}\n","import { EmptyState, EmptyStateBody, EmptyStateVariant, Spinner, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst LoadingStateBase = ({ t }) => {\n    const title = t('loading_state.sources_title');\n    const subTitle = t('loading_state.sources_desc');\n    return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n        React.createElement(Spinner, { size: \"lg\" }),\n        React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, title),\n        React.createElement(EmptyStateBody, null, subTitle)));\n};\nconst LoadingState = withTranslation()(LoadingStateBase);\nexport { LoadingState };\n","import { parse, stringify } from 'qs';\nexport function getProvidersQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseProvidersQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","function getValueForItem(item, options) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    const sortKey = options.key;\n    return item[sortKey];\n}\nexport function sort(array, options) {\n    const { direction = 0 /* asc */ } = options || {};\n    return [...array].sort((a, b) => {\n        const aVal = direction === 0 /* asc */ ? getValueForItem(a, options) : getValueForItem(b, options);\n        const bVal = direction === 0 /* asc */ ? getValueForItem(b, options) : getValueForItem(a, options);\n        if (aVal > bVal) {\n            return -1;\n        }\n        if (aVal < bVal) {\n            return 1;\n        }\n        return 0;\n    });\n}\n","import './emptyValueState.scss';\nimport { MinusIcon } from '@patternfly/react-icons/dist/js/icons/minus-icon';\nimport React from 'react';\nexport const EmptyValueState = () => {\n    return (React.createElement(\"span\", { className: \"emptyValueContainer\" },\n        React.createElement(MinusIcon, null)));\n};\n","import './reportSummary.scss';\nimport { Card, CardBody, CardFooter, CardTitle, Title } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst ReportSummaryBase = ({ children, detailsLink, title, subTitle, status }) => (React.createElement(Card, { className: \"reportSummary\" },\n    React.createElement(CardTitle, null,\n        React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: \"subtitle\" }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { size: \"xs\" }),\n        React.createElement(Skeleton, { className: \"chartSkeleton\", size: \"md\" }),\n        React.createElement(Skeleton, { size: \"sm\" }),\n        React.createElement(Skeleton, { className: \"legendSkeleton\", size: \"xs\" }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst ReportSummary = withTranslation()(ReportSummaryBase);\nexport { ReportSummary };\n","import './reportSummaryAlt.scss';\nimport { Card, CardBody, CardFooter, CardTitle, Grid, GridItem, Title } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst OcpCloudReportSummaryAltBase = ({ children, detailsLink, status, subTitle, tabs, title, }) => (React.createElement(Card, { className: \"reportSummary\" },\n    React.createElement(Grid, { hasGutter: true },\n        React.createElement(GridItem, { xl: 8 },\n            React.createElement(\"div\", { className: \"cost\" },\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, title),\n                    Boolean(subTitle) && React.createElement(\"p\", { className: \"subtitle\" }, subTitle)),\n                React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { size: \"xs\" }),\n                    React.createElement(Skeleton, { className: \"chartSkeleton\", size: \"md\" }),\n                    React.createElement(Skeleton, { size: \"sm\" }),\n                    React.createElement(Skeleton, { className: \"legendSkeleton\", size: \"xs\" }))) : (children)))),\n        React.createElement(GridItem, { xl: 4 },\n            React.createElement(\"div\", { className: \"tops\" }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink))))))));\nconst ReportSummaryAlt = withTranslation()(OcpCloudReportSummaryAltBase);\nexport { ReportSummaryAlt };\n","import './reportSummaryDetails.scss';\nimport { Tooltip } from '@patternfly/react-core';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nconst ReportSummaryDetailsBase = ({ chartType, computedReportItem = 'cost', computedReportItemValue = 'total', costLabel, formatValue, formatOptions, report, requestFormatOptions, requestLabel, reportType, showTooltip = false, showUnits = false, showUsageFirst = false, t, units, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let supplementaryCost = React.createElement(EmptyValueState, null);\n    let infrastructureCost = React.createElement(EmptyValueState, null);\n    let request = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    const hasTotal = report && report.meta && report.meta.total;\n    const hasCost = hasTotal && report.meta.total.cost && report.meta.total.cost.total;\n    const hasCount = hasTotal && report.meta.total.count;\n    const hasSupplementaryCost = hasTotal &&\n        report.meta.total.supplementary &&\n        report.meta.total.supplementary.total &&\n        report.meta.total.supplementary.total.value;\n    const hasInfrastructureCost = hasTotal &&\n        report.meta.total.infrastructure &&\n        report.meta.total.infrastructure[computedReportItemValue] &&\n        report.meta.total.infrastructure[computedReportItemValue].value;\n    const hasRequest = hasTotal && report.meta.total.request;\n    const hasUsage = hasTotal && report.meta.total.usage;\n    if (hasTotal) {\n        cost = formatValue(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD', formatOptions);\n        supplementaryCost = formatValue(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost ? report.meta.total.supplementary.total.units : 'USD', formatOptions);\n        infrastructureCost = formatValue(hasInfrastructureCost ? report.meta.total.infrastructure[computedReportItemValue].value : 0, hasInfrastructureCost ? report.meta.total.infrastructure[computedReportItemValue].units : 'USD', formatOptions);\n        request = formatValue(hasRequest ? report.meta.total.request.value : 0, hasRequest ? report.meta.total.request.units : '', requestFormatOptions ? usageFormatOptions : formatOptions);\n        if (hasUsage && report.meta.total.usage.value >= 0) {\n            usage = formatValue(hasUsage ? report.meta.total.usage.value : 0, hasUsage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n        else {\n            // Workaround for https://github.com/project-koku/koku-ui/issues/1058\n            usage = formatValue(hasUsage ? report.meta.total.usage : 0, hasCount ? report.meta.total.count.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n    }\n    const getCostLayout = (showAltHeroFont = false) => {\n        let value = cost;\n        if (computedReportItem === \"infrastructure\" /* infrastructure */) {\n            value = infrastructureCost;\n        }\n        else if (computedReportItem === \"supplementary\" /* supplementary */) {\n            value = supplementaryCost;\n        }\n        const altHeroFont = showAltHeroFont ? 'Alt' : '';\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            showTooltip ? (React.createElement(Tooltip, { content: t('dashboard.total_cost_tooltip', {\n                    infrastructureCost,\n                    supplementaryCost,\n                }), enableFlip: true },\n                React.createElement(\"div\", { className: `value${altHeroFont}` }, value))) : (React.createElement(\"div\", { className: `value${altHeroFont}` }, value)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, costLabel))));\n    };\n    const getRequestLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasRequest ? report.meta.total.request.units : '';\n        const _units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            React.createElement(\"span\", { className: \"value\" }, request),\n            Boolean(showUnits && (units || (hasRequest && report.meta.total.request.value >= 0))) && (React.createElement(\"span\", { className: \"units\" }, unitsLabel)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, requestLabel))));\n    };\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasUsage ? report.meta.total.usage.units : '';\n        // added as a work-around for azure #1079\n        const _units = unitLookupKey(units ? units : usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            React.createElement(\"span\", { className: \"value\" }, usage),\n            Boolean(showUnits && (units || (hasUsage && report.meta.total.usage.value >= 0))) && (React.createElement(\"span\", { className: \"units\" }, unitsLabel)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (chartType === \"dailyCost\" /* dailyCost */ ||\n        chartType === \"dailyTrend\" /* dailyTrend */ ||\n        chartType === \"cost\" /* cost */) {\n        return React.createElement(React.Fragment, null, getCostLayout(reportType === \"cost\" /* cost */));\n    }\n    else if (chartType === \"trend\" /* trend */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getCostLayout(reportType === \"cost\" /* cost */)));\n        }\n        return (React.createElement(React.Fragment, null,\n            getCostLayout(reportType === \"cost\" /* cost */),\n            getUsageLayout()));\n    }\n    else if (chartType === \"usage\" /* usage */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getRequestLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getRequestLayout(),\n            getUsageLayout()));\n    }\n    else {\n        return null;\n    }\n};\nconst ReportSummaryDetails = withTranslation()(ReportSummaryDetailsBase);\nexport { ReportSummaryDetails };\n","import './reportSummaryItem.scss';\nimport { Progress, ProgressSize } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nconst ReportSummaryItemBase = ({ label, formatOptions, formatValue, t, totalValue, units, value, }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: \"reportSummaryItem\" },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst ReportSummaryItem = withTranslation()(ReportSummaryItemBase);\nexport { ReportSummaryItem };\n","import './reportSummaryItems.scss';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { getComputedReportItems, } from 'utils/computedReport/getComputedReportItems';\nclass ReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { idKey, report } = this.props;\n        const computedItems = getComputedReportItems({\n            report,\n            idKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [...computedItems.slice(0, otherIndex), ...computedItems.slice(otherIndex + 1), computedItems[otherIndex]];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: \"md\" }),\n                React.createElement(Skeleton, { size: \"md\", className: \"skeleton\" }),\n                React.createElement(Skeleton, { size: \"md\", className: \"skeleton\" }),\n                React.createElement(Skeleton, { size: \"md\", className: \"skeleton\" })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst ReportSummaryItems = withTranslation()(ReportSummaryItemsBase);\nexport { ReportSummaryItems };\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentCostData: {\n        fill: 'none',\n    },\n    currentInfrastructureColorScale: [\n        chart_color_blue_400.value,\n        chart_color_blue_300.value,\n        chart_color_blue_200.value,\n        chart_color_blue_100.value,\n        chart_color_blue_500.value,\n    ],\n    currentInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    forecastConeData: {\n        fill: chart_color_green_100.value,\n        strokeWidth: 0,\n    },\n    forecastConeDataColorScale: [chart_color_green_100.value],\n    forecastData: {\n        fill: 'none',\n    },\n    forecastDataColorScale: [chart_color_green_200.value],\n    forecastInfrastructureConeData: {\n        fill: chart_color_blue_100.value,\n        strokeWidth: 0,\n    },\n    forecastInfrastructureConeDataColorScale: [chart_color_blue_100.value],\n    forecastInfrastructureData: {\n        fill: 'none',\n    },\n    forecastInfrastructureDataColorScale: [chart_color_blue_200.value],\n    previousCostData: {\n        fill: 'none',\n    },\n    previousInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange, getMaxMinValues, getTooltipContent, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './costChart.styles';\nclass CostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentInfrastructureCostData, currentCostData, forecastConeData, forecastData, forecastInfrastructureConeData, forecastInfrastructureData, previousInfrastructureCostData, previousCostData, showForecast, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            const costInfrastructureTooltipKey = 'chart.cost_infrastructure_legend_tooltip';\n            const costTooltipKey = 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousCostData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentCostData, costTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentCostData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'previousInfrastructureCost',\n                    data: previousInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(previousInfrastructureCostData, costInfrastructureTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousInfrastructureCostData), { stroke: chartStyles.previousColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'currentInfrastructureCost',\n                    data: currentInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentInfrastructureColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(currentInfrastructureCostData, costInfrastructureTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentInfrastructureCostData), { stroke: chartStyles.currentInfrastructureColorScale[1] }),\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: forecastData,\n                    legendItem: {\n                        name: getCostRangeString(forecastData, 'chart.cost_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, 'chart.cost_forecast_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastData), { stroke: chartStyles.forecastDataColorScale[0] }),\n                    },\n                });\n                series.push({\n                    childName: 'forecastInfrastructure',\n                    data: forecastInfrastructureData,\n                    legendItem: {\n                        name: getCostRangeString(forecastInfrastructureData, 'chart.cost_infrastructure_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastInfrastructureDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastInfrastructureData, 'chart.cost_infrastructure_forecast_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastInfrastructureData), { stroke: chartStyles.forecastInfrastructureDataColorScale[0] }),\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: forecastConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastConeData), { stroke: chartStyles.forecastConeDataColorScale[0] }),\n                    },\n                });\n                series.push({\n                    childName: 'forecastInfrastructureCone',\n                    data: forecastInfrastructureConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastInfrastructureConeData, 'chart.cost_infrastructure_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastInfrastructureConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastInfrastructureConeData, 'chart.cost_infrastructure_forecast_cone_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastInfrastructureConeData), { stroke: chartStyles.forecastInfrastructureConeDataColorScale[0] }),\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.getTooltipLabel, mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            return React.createElement(ChartLegend, { data: this.getLegendData(), height: 25, gutter: 20, name: \"legend\", responsive: false });\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            const dy = datum.y !== undefined && datum.y !== null ? formatter(datum.y, datum.units, formatDatumOptions) : undefined;\n            const dy0 = datum.y0 !== undefined && datum.y0 !== null ? formatter(datum.y0, datum.units, formatDatumOptions) : undefined;\n            if (dy !== undefined && dy0 !== undefined) {\n                return i18next.t('chart.cost_forecast_cone_tooltip', { value0: dy0, value1: dy });\n            }\n            return dy !== undefined ? dy : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            const { hiddenSeries, series } = this.state;\n            // Toggle forecast confidence\n            const childName = series[props.index].childName;\n            if (childName.indexOf('forecast') !== -1) {\n                let index;\n                for (let i = 0; i < series.length; i++) {\n                    if (series[i].childName === `${childName}Cone`) {\n                        index = i;\n                        break;\n                    }\n                }\n                if (index !== undefined && !hiddenSeries.delete(index)) {\n                    hiddenSeries.add(index);\n                }\n            }\n            if (!hiddenSeries.delete(props.index)) {\n                hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            const unavailable = []; // API data may not be available (e.g., on 1st of month)\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map(serie => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    if (width > 650 && width < 1130) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width > 450 && width < 650) {\n                        adjustedContainerHeight += 50;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 75;\n                    }\n                }\n                else {\n                    if (width > 450 && width < 725) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 50;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = (tooltip = false) => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    const data = Object.assign(Object.assign(Object.assign({ childName: s.childName }, s.legendItem), (tooltip && { name: s.legendItem.tooltip })), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                    return data;\n                });\n                return tooltip ? result : result.filter(d => d.childName.indexOf('Cone') === -1);\n            }\n            return undefined;\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentInfrastructureCostData !== this.props.currentInfrastructureCostData ||\n            prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastInfrastructureConeData !== this.props.forecastInfrastructureConeData ||\n            prevProps.forecastInfrastructureData !== this.props.forecastInfrastructureData ||\n            prevProps.previousInfrastructureCostData !== this.props.previousInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { series } = this.state;\n        const domain = { x: [1, 31] };\n        let maxValue = 0;\n        let minValue = 0;\n        if (series) {\n            series.forEach((s, index) => {\n                if (!this.isSeriesHidden(index) && s.data && s.data.length !== 0) {\n                    const { max, min } = getMaxMinValues(s.data);\n                    maxValue = Math.max(maxValue, max);\n                    if (minValue === 0) {\n                        minValue = min;\n                    }\n                    else {\n                        minValue = Math.min(minValue, min);\n                    }\n                }\n            });\n        }\n        const threshold = maxValue * 0.1;\n        const max = maxValue > 0 ? Math.ceil(maxValue + threshold) : 0;\n        const _min = minValue > 0 ? Math.max(0, Math.floor(minValue - threshold)) : 0;\n        const min = _min > 0 ? _min : 0;\n        if (max > 0) {\n            domain.y = [min, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, currentCostData, forecastData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const currentInfrastructureDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const currentCostDate = currentCostData ? getDate(getDateRange(currentCostData, true, true)[1]) : 0;\n        const forecastCostDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        const previousInfrastructureDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousCostData ? getDate(getDateRange(previousCostData, true, true)[1]) : 0;\n        return currentInfrastructureDate > 0 ||\n            currentCostDate > 0 ||\n            previousInfrastructureDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentInfrastructureDate, currentCostDate, forecastCostDate, previousInfrastructureDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, series, width } = this.state;\n        const domain = this.getDomain();\n        const lastDate = this.getEndDate();\n        const half = Math.floor(lastDate / 2);\n        const _1stDay = 1;\n        const _2ndDay = _1stDay + Math.floor(half / 2);\n        const _3rdDay = _1stDay + half;\n        const _4thDay = lastDate - Math.floor(half / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !this.isDataAvailable(),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: this.getLegendData(true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            title && (React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [_1stDay, _2ndDay, _3rdDay, _4thDay, lastDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { CostChart };\n","import './reportSummaryCost.scss';\nimport { CostChart } from 'components/charts/costChart';\nimport React from 'react';\nconst ReportSummaryCost = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(CostChart, Object.assign({}, props))));\nexport { ReportSummaryCost };\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { chart_color_orange_300 } from '@patternfly/react-tokens/dist/js/chart_color_orange_300';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentInfrastructureColorScale: [\n        chart_color_blue_400.value,\n        chart_color_blue_300.value,\n        chart_color_blue_200.value,\n        chart_color_blue_100.value,\n        chart_color_blue_500.value,\n    ],\n    currentInfrastructureCostData: {\n        strokeDasharray: '3,3',\n    },\n    forecastConeDataColorScale: [chart_color_orange_300.value],\n    forecastDataColorScale: [chart_color_green_200.value],\n    forecastInfrastructureConeDataColorScale: [chart_color_orange_300.value],\n    forecastInfrastructureDataColorScale: [chart_color_blue_200.value],\n    previousInfrastructureCostData: {\n        strokeDasharray: '3,3',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartAxis, ChartBar, ChartGroup, ChartLegend, ChartLegendTooltip, ChartLine, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange, getMaxMinValues, getTooltipContent, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './dailyCostChart.styles';\nclass DailyCostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentInfrastructureCostData, currentCostData, forecastConeData, forecastData, forecastInfrastructureConeData, forecastInfrastructureData, previousInfrastructureCostData, previousCostData, showForecast, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            const costInfrastructureTooltipKey = 'chart.cost_infrastructure_legend_tooltip';\n            const costTooltipKey = 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    isLine: true,\n                    style: {\n                        data: {\n                            stroke: chartStyles.previousColorScale[0],\n                        },\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentCostData, costTooltipKey, false, false),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.currentColorScale[0],\n                        },\n                    },\n                },\n                {\n                    childName: 'previousInfrastructureCost',\n                    data: previousInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(previousInfrastructureCostData, costInfrastructureTooltipKey, false, false, 1),\n                    },\n                    isLine: true,\n                    style: {\n                        data: {\n                            stroke: chartStyles.previousColorScale[1],\n                        },\n                    },\n                },\n                {\n                    childName: 'currentInfrastructureCost',\n                    data: currentInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentInfrastructureColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(currentInfrastructureCostData, costInfrastructureTooltipKey, false, false),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.currentInfrastructureColorScale[1],\n                        },\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: forecastData,\n                    legendItem: {\n                        name: getCostRangeString(forecastData, 'chart.cost_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, 'chart.cost_forecast_legend_tooltip', false, false),\n                    },\n                    isBar: true,\n                    isForecast: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                        },\n                    },\n                });\n                series.push({\n                    childName: 'forecastInfrastructure',\n                    data: forecastInfrastructureData,\n                    legendItem: {\n                        name: getCostRangeString(forecastInfrastructureData, 'chart.cost_infrastructure_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastInfrastructureDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastInfrastructureData, 'chart.cost_infrastructure_forecast_legend_tooltip', false, false),\n                    },\n                    isBar: true,\n                    isForecast: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastInfrastructureDataColorScale[0],\n                        },\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: forecastConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_tooltip', false, false),\n                    },\n                    isForecast: true,\n                    isLine: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                        },\n                    },\n                });\n                series.push({\n                    childName: 'forecastInfrastructureCone',\n                    data: forecastInfrastructureConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastInfrastructureConeData, 'chart.cost_infrastructure_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastInfrastructureConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastInfrastructureConeData, 'chart.cost_infrastructure_forecast_cone_legend_tooltip', false, false),\n                    },\n                    isForecast: true,\n                    isLine: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastInfrastructureConeDataColorScale[0],\n                        },\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (!series.isForecast) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                if (series.isBar) {\n                    return (React.createElement(ChartBar, { alignment: \"middle\", data: data, key: series.childName, name: series.childName, style: series.style }));\n                }\n                else if (series.isLine) {\n                    return React.createElement(ChartLine, { data: data, key: series.childName, name: series.childName, style: series.style });\n                }\n            }\n            return null;\n        };\n        this.getForecastBarChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (series.isForecast && series.isBar) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                return (React.createElement(ChartBar, { alignment: \"middle\", data: data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        this.getForecastLineChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (series.isForecast && series.isLine) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                return (React.createElement(ChartBar, { alignment: \"middle\", barWidth: 1, data: data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.getTooltipLabel, mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            return React.createElement(ChartLegend, { data: this.getLegendData(), height: 25, gutter: 20, name: \"legend\", responsive: false });\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            const dy = datum.y !== undefined && datum.y !== null ? formatter(datum.y, datum.units, formatDatumOptions) : undefined;\n            const dy0 = datum.y0 !== undefined && datum.y0 !== null ? formatter(datum.y0, datum.units, formatDatumOptions) : undefined;\n            if (dy !== undefined && dy0 !== undefined) {\n                return i18next.t('chart.cost_forecast_cone_tooltip', { value0: dy0, value1: dy });\n            }\n            return dy !== undefined ? dy : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            const { hiddenSeries, series } = this.state;\n            // Toggle forecast confidence\n            const childName = series[props.index].childName;\n            if (childName.indexOf('forecast') !== -1) {\n                let index;\n                for (let i = 0; i < series.length; i++) {\n                    if (series[i].childName === `${childName}Cone`) {\n                        index = i;\n                        break;\n                    }\n                }\n                if (index !== undefined && !hiddenSeries.delete(index)) {\n                    hiddenSeries.add(index);\n                }\n            }\n            if (!hiddenSeries.delete(props.index)) {\n                hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            const unavailable = []; // API data may not be available (e.g., on 1st of month)\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map(serie => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    if (width > 650 && width < 1130) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width > 450 && width < 650) {\n                        adjustedContainerHeight += 50;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 75;\n                    }\n                }\n                else {\n                    if (width > 450 && width < 725) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 50;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = (tooltip = false) => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    const data = Object.assign(Object.assign(Object.assign({ childName: s.childName }, s.legendItem), (tooltip && { name: s.legendItem.tooltip })), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                    return data;\n                });\n                return tooltip ? result : result.filter(d => d.childName.indexOf('Cone') === -1);\n            }\n            return undefined;\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentInfrastructureCostData !== this.props.currentInfrastructureCostData ||\n            prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastInfrastructureConeData !== this.props.forecastInfrastructureConeData ||\n            prevProps.forecastInfrastructureData !== this.props.forecastInfrastructureData ||\n            prevProps.previousInfrastructureCostData !== this.props.previousInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { series } = this.state;\n        const domain = { x: [1, 31] };\n        let maxValue = 0;\n        let minValue = 0;\n        if (series) {\n            series.forEach((s, index) => {\n                if (!this.isSeriesHidden(index) && s.data && s.data.length !== 0) {\n                    const { max, min } = getMaxMinValues(s.data);\n                    maxValue = Math.max(maxValue, max);\n                    if (minValue === 0) {\n                        minValue = min;\n                    }\n                    else {\n                        minValue = Math.min(minValue, min);\n                    }\n                }\n            });\n        }\n        const threshold = maxValue * 0.1;\n        const max = maxValue > 0 ? Math.ceil(maxValue + threshold) : 0;\n        const _min = minValue > 0 ? Math.max(0, Math.floor(minValue - threshold)) : 0;\n        const min = _min > 0 ? _min : 0;\n        if (max > 0) {\n            domain.y = [min, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, currentCostData, forecastData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const currentInfrastructureDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const currentCostDate = currentCostData ? getDate(getDateRange(currentCostData, true, true)[1]) : 0;\n        const forecastCostDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        const previousInfrastructureDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousCostData ? getDate(getDateRange(previousCostData, true, true)[1]) : 0;\n        return currentInfrastructureDate > 0 ||\n            currentCostDate > 0 ||\n            previousInfrastructureDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentInfrastructureDate, currentCostDate, forecastCostDate, previousInfrastructureDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, series, width } = this.state;\n        const domain = this.getDomain();\n        const lastDate = this.getEndDate();\n        const half = Math.floor(lastDate / 2);\n        const _1stDay = 1;\n        const _2ndDay = _1stDay + Math.floor(half / 2);\n        const _3rdDay = _1stDay + half;\n        const _4thDay = lastDate - Math.floor(half / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !this.isDataAvailable(),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: this.getLegendData(true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        // Note: For tooltip values to match properly, chart groups must be rendered in the order given as legend data\n        return (React.createElement(React.Fragment, null,\n            title && (React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 5.5 }, series.map((s, index) => this.getChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 5.5 }, series.map((s, index) => this.getForecastBarChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 5.5 }, series.map((s, index) => this.getForecastLineChart(s, index)))),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [_1stDay, _2ndDay, _3rdDay, _4thDay, lastDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { DailyCostChart };\n","import './reportSummaryDailyCost.scss';\nimport { DailyCostChart } from 'components/charts/dailyCostChart';\nimport React from 'react';\nconst ReportSummaryDailyCost = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(DailyCostChart, Object.assign({}, props))));\nexport { ReportSummaryDailyCost };\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { chart_color_orange_300 } from '@patternfly/react-tokens/dist/js/chart_color_orange_300';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    forecastConeDataColorScale: [chart_color_orange_300.value],\n    forecastDataColorScale: [chart_color_green_200.value],\n    itemsPerRow: 4,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartAxis, ChartBar, ChartGroup, ChartLegend, ChartLegendTooltip, ChartLine, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange, getMaxMinValues, getTooltipContent, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './dailyTrendChart.styles';\nclass DailyTrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, forecastData, forecastConeData, previousData, showForecast, showSupplementaryLabel = false, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? 'chart.usage_legend_label'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_label'\n                    : 'chart.cost_legend_label';\n            const tooltipKey = showUsageLegendLabel\n                ? 'chart.usage_legend_tooltip'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_tooltip'\n                    : 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousData,\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousData, tooltipKey, false, false, 1),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.previousColorScale[0],\n                        },\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentData,\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentData, tooltipKey, false, false),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.currentColorScale[0],\n                        },\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: forecastData,\n                    legendItem: {\n                        name: getCostRangeString(forecastData, 'chart.cost_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, 'chart.cost_forecast_legend_tooltip', false, false),\n                    },\n                    isBar: true,\n                    isForecast: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                        },\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: forecastConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_tooltip', false, false),\n                    },\n                    isForecast: true,\n                    isLine: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                        },\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (!series.isForecast) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                if (series.isBar) {\n                    return (React.createElement(ChartBar, { alignment: \"middle\", data: data, key: series.childName, name: series.childName, style: series.style }));\n                }\n                else if (series.isLine) {\n                    return React.createElement(ChartLine, { data: data, key: series.childName, name: series.childName, style: series.style });\n                }\n            }\n            return null;\n        };\n        this.getForecastBarChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (series.isForecast && series.isBar) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                return (React.createElement(ChartBar, { alignment: \"middle\", data: data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        this.getForecastLineChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (series.isForecast && series.isLine) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                return (React.createElement(ChartBar, { alignment: \"middle\", barWidth: 1, data: data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.getTooltipLabel, mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 50,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            return (React.createElement(ChartLegend, { data: this.getLegendData(), gutter: 20, height: 25, itemsPerRow: legendItemsPerRow, name: \"legend\", orientation: width > 150 ? 'horizontal' : 'vertical' }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            const dy = datum.y !== undefined && datum.y !== null ? formatter(datum.y, datum.units, formatDatumOptions) : undefined;\n            const dy0 = datum.y0 !== undefined && datum.y0 !== null ? formatter(datum.y0, datum.units, formatDatumOptions) : undefined;\n            if (dy !== undefined && dy0 !== undefined) {\n                return i18next.t('chart.cost_forecast_cone_tooltip', { value0: dy0, value1: dy });\n            }\n            return dy !== undefined ? dy : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            const { hiddenSeries, series } = this.state;\n            // Toggle forecast confidence\n            const childName = series[props.index].childName;\n            if (childName.indexOf('forecast') !== -1) {\n                let index;\n                for (let i = 0; i < series.length; i++) {\n                    if (series[i].childName === `${childName}Cone`) {\n                        index = i;\n                        break;\n                    }\n                }\n                if (index !== undefined && !hiddenSeries.delete(index)) {\n                    hiddenSeries.add(index);\n                }\n            }\n            if (!hiddenSeries.delete(props.index)) {\n                hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            const unavailable = []; // API data may not be available (e.g., on 1st of month)\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map(serie => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    if (width < 700) {\n                        adjustedContainerHeight += 25;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = (tooltip = false) => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign(Object.assign({ childName: s.childName }, s.legendItem), (tooltip && { name: s.legendItem.tooltip })), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return tooltip ? result : result.filter(d => d.childName.indexOf('Cone') === -1);\n            }\n            return undefined;\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { series } = this.state;\n        const domain = { x: [1, 31] };\n        let maxValue = 0;\n        let minValue = 0;\n        if (series) {\n            series.forEach((s, index) => {\n                if (!this.isSeriesHidden(index) && s.data && s.data.length !== 0) {\n                    const { max, min } = getMaxMinValues(s.data);\n                    maxValue = Math.max(maxValue, max);\n                    if (minValue === 0) {\n                        minValue = min;\n                    }\n                    else {\n                        minValue = Math.min(minValue, min);\n                    }\n                }\n            });\n        }\n        const threshold = maxValue * 0.1;\n        const max = maxValue > 0 ? Math.ceil(maxValue + threshold) : 0;\n        const _min = minValue > 0 ? Math.max(0, Math.floor(minValue - threshold)) : 0;\n        const min = _min > 0 ? _min : 0;\n        if (max > 0) {\n            domain.y = [min, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentData, forecastData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        const forecastDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0 ? Math.max(currentDate, forecastDate, previousDate) : 31;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, series, width } = this.state;\n        const domain = this.getDomain();\n        const lastDate = this.getEndDate();\n        const half = Math.floor(lastDate / 2);\n        const _1stDay = 1;\n        const _2ndDay = _1stDay + Math.floor(half / 2);\n        const _3rdDay = _1stDay + half;\n        const _4thDay = lastDate - Math.floor(half / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !this.isDataAvailable(),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: this.getLegendData(true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        // Note: For tooltip values to match properly, chart groups must be rendered in the order given as legend data\n        return (React.createElement(React.Fragment, null,\n            title && (React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 11 }, series.map((s, index) => this.getChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 11 },\n                            React.createElement(ChartBar, { data: [{ y: null }], name: \"forcast_spacer\" }),\n                            series.map((s, index) => this.getForecastBarChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 11 },\n                            React.createElement(ChartBar, { data: [{ y: null }], name: \"forcast_cone_spacer\" }),\n                            series.map((s, index) => this.getForecastLineChart(s, index)))),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [_1stDay, _2ndDay, _3rdDay, _4thDay, lastDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { DailyTrendChart };\n","import './reportSummaryDailyTrend.scss';\nimport { DailyTrendChart } from 'components/charts/dailyTrendChart';\nimport React from 'react';\nconst ReportSummaryDailyTrend = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(DailyTrendChart, Object.assign({}, props))));\nexport { ReportSummaryDailyTrend };\n","import chart_color_black_200 from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport chart_color_green_100 from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport chart_color_green_200 from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport chart_color_green_300 from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_green_500 from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentMonthData: {\n        fill: 'none',\n    },\n    forecastConeData: {\n        fill: chart_color_green_100.value,\n        strokeWidth: 0,\n    },\n    forecastConeDataColorScale: [chart_color_green_100.value],\n    forecastData: {\n        fill: 'none',\n    },\n    forecastDataColorScale: [chart_color_green_200.value],\n    itemsPerRow: 4,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    previousMonthData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange, getMaxMinValues, getTooltipContent, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './trendChart.styles';\nclass TrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, forecastData, forecastConeData, previousData, showForecast, showSupplementaryLabel = false, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? 'chart.usage_legend_label'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_label'\n                    : 'chart.cost_legend_label';\n            const tooltipKey = showUsageLegendLabel\n                ? 'chart.usage_legend_tooltip'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_tooltip'\n                    : 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousData,\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousData, tooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousMonthData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentData,\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentData, tooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentMonthData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: forecastData,\n                    legendItem: {\n                        name: getCostRangeString(forecastData, 'chart.cost_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, 'chart.cost_forecast_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastData), { stroke: chartStyles.forecastDataColorScale[0] }),\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: forecastConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastConeData), { stroke: chartStyles.forecastConeDataColorScale[0] }),\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.getTooltipLabel, mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 50,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            return (React.createElement(ChartLegend, { data: this.getLegendData(), gutter: 20, height: 25, itemsPerRow: legendItemsPerRow, name: \"legend\", orientation: width > 150 ? 'horizontal' : 'vertical' }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            const dy = datum.y !== undefined && datum.y !== null ? formatter(datum.y, datum.units, formatDatumOptions) : undefined;\n            const dy0 = datum.y0 !== undefined && datum.y0 !== null ? formatter(datum.y0, datum.units, formatDatumOptions) : undefined;\n            if (dy !== undefined && dy0 !== undefined) {\n                return i18next.t('chart.cost_forecast_cone_tooltip', { value0: dy0, value1: dy });\n            }\n            return dy !== undefined ? dy : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            const { hiddenSeries, series } = this.state;\n            // Toggle forecast confidence\n            const childName = series[props.index].childName;\n            if (childName.indexOf('forecast') !== -1) {\n                let index;\n                for (let i = 0; i < series.length; i++) {\n                    if (series[i].childName === `${childName}Cone`) {\n                        index = i;\n                        break;\n                    }\n                }\n                if (index !== undefined && !hiddenSeries.delete(index)) {\n                    hiddenSeries.add(index);\n                }\n            }\n            if (!hiddenSeries.delete(props.index)) {\n                hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            const unavailable = []; // API data may not be available (e.g., on 1st of month)\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map(serie => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    if (width < 700) {\n                        adjustedContainerHeight += 25;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = (tooltip = false) => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign(Object.assign({ childName: s.childName }, s.legendItem), (tooltip && { name: s.legendItem.tooltip })), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return tooltip ? result : result.filter(d => d.childName.indexOf('Cone') === -1);\n            }\n            return undefined;\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { series } = this.state;\n        const domain = { x: [1, 31] };\n        let maxValue = 0;\n        let minValue = 0;\n        if (series) {\n            series.forEach((s, index) => {\n                if (!this.isSeriesHidden(index) && s.data && s.data.length !== 0) {\n                    const { max, min } = getMaxMinValues(s.data);\n                    maxValue = Math.max(maxValue, max);\n                    if (minValue === 0) {\n                        minValue = min;\n                    }\n                    else {\n                        minValue = Math.min(minValue, min);\n                    }\n                }\n            });\n        }\n        const threshold = maxValue * 0.1;\n        const max = maxValue > 0 ? Math.ceil(maxValue + threshold) : 0;\n        const _min = minValue > 0 ? Math.max(0, Math.floor(minValue - threshold)) : 0;\n        const min = _min > 0 ? _min : 0;\n        if (max > 0) {\n            domain.y = [min, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentData, forecastData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        const forecastDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0 ? Math.max(currentDate, forecastDate, previousDate) : 31;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !this.isDataAvailable(),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: this.getLegendData(true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { TrendChart };\n","import './reportSummaryTrend.scss';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nconst ReportSummaryTrend = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { ReportSummaryTrend };\n","import chart_color_black_200 from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport chart_color_green_100 from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport chart_color_green_200 from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport chart_color_green_300 from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_green_500 from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const chartStyles = {\n    chartContainer: {\n        marginTop: global_spacer_lg.value,\n    },\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_green_300.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_green_400.value,\n        },\n    },\n    itemsPerRow: 2,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        chart_color_black_200.value,\n        chart_color_green_400.value,\n        chart_color_black_200.value,\n        chart_color_green_300.value,\n    ],\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_black_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_black_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    // TBD: No grey scale, yet\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getDateRange, getMaxMinValues, getTooltipContent, getUsageRangeString, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './usageChart.styles';\nclass UsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n            const usageKey = 'chart.usage_legend_label';\n            const usageTooltipKey = 'chart.usage_legend_tooltip';\n            const requestKey = 'chart.requests_legend_label';\n            const requestTooltipKey = 'chart.requests_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousUsage',\n                    data: previousUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(previousUsageData, usageKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(previousUsageData, usageTooltipKey, false, false, 1),\n                    },\n                    style: chartStyles.previousUsageData,\n                },\n                {\n                    childName: 'currentUsage',\n                    data: currentUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(currentUsageData, usageKey, true, false),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[1],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(currentUsageData, usageTooltipKey, false, false),\n                    },\n                    style: chartStyles.currentUsageData,\n                },\n                {\n                    childName: 'previousRequest',\n                    data: previousRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(previousRequestData, requestKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[2],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(previousRequestData, requestTooltipKey, false, false, 1),\n                    },\n                    style: chartStyles.previousRequestData,\n                },\n                {\n                    childName: 'currentRequest',\n                    data: currentRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(currentRequestData, requestKey, true, false),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[3],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(currentRequestData, requestTooltipKey, false, false),\n                    },\n                    style: chartStyles.currentRequestData,\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.getTooltipLabel, mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 300 ? chartStyles.itemsPerRow : 1;\n            return React.createElement(ChartLegend, { data: this.getLegendData(), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\" });\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            return datum.y !== undefined && datum.y !== null\n                ? formatter(datum.y, datum.units, formatDatumOptions)\n                : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            const unavailable = []; // API data may not be available (e.g., on 1st of month)\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (width < 480) {\n                    adjustedContainerHeight += 20;\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map(serie => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = (tooltip = false) => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign(Object.assign({ childName: s.childName }, s.legendItem), (tooltip && { name: s.legendItem.tooltip })), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { series } = this.state;\n        const domain = { x: [1, 31] };\n        let maxValue = 0;\n        let minValue = 0;\n        if (series) {\n            series.forEach((s, index) => {\n                if (!this.isSeriesHidden(index) && s.data && s.data.length !== 0) {\n                    const { max, min } = getMaxMinValues(s.data);\n                    maxValue = Math.max(maxValue, max);\n                    if (minValue === 0) {\n                        minValue = min;\n                    }\n                    else {\n                        minValue = Math.min(minValue, min);\n                    }\n                }\n            });\n        }\n        const threshold = maxValue * 0.1;\n        const max = maxValue > 0 ? Math.ceil(maxValue + threshold) : 0;\n        const _min = minValue > 0 ? Math.max(0, Math.floor(minValue - threshold)) : 0;\n        const min = _min > 0 ? _min : 0;\n        if (max > 0) {\n            domain.y = [min, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n        const currentRequestDate = currentRequestData ? getDate(getDateRange(currentRequestData, true, true)[1]) : 0;\n        const currentUsageDate = currentUsageData ? getDate(getDateRange(currentUsageData, true, true)[1]) : 0;\n        const previousRequestDate = previousRequestData ? getDate(getDateRange(previousRequestData, true, true)[1]) : 0;\n        const previousUsageDate = previousUsageData ? getDate(getDateRange(previousUsageData, true, true)[1]) : 0;\n        return currentRequestDate > 0 || currentUsageDate > 0 || previousRequestDate > 0 || previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 75,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !this.isDataAvailable(),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: this.getLegendData(true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { UsageChart };\n","import './reportSummaryUsage.scss';\nimport { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nconst ReportSummaryUsage = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { ReportSummaryUsage };\n","export const getReleasePath = () => {\n    const pathName = window.location.pathname.split('/');\n    pathName.shift();\n    let release = '';\n    if (pathName[0] === 'beta') {\n        release = `/beta`;\n    }\n    return release;\n};\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nconst Loading = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(LoadingState, null))));\n};\nexport default withRouter(Loading);\n","import Loading from './loading';\nexport default Loading;\n","module.exports = __webpack_public_path__ + \"8a2acb5e9233030023f599e0f04ebd7f.svg\";","import './costIcon.scss';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst icon = require('./Cost-icon.svg');\nconst CostIcon = ({ className, t }) => {\n    return React.createElement(\"img\", { className: `cost-icon ${className}`, src: icon, alt: t('cost_management'), \"aria-hidden\": \"true\" });\n};\nexport default withTranslation()(CostIcon);\n","import CostIcon from './costIcon';\nexport default CostIcon;\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    iconSpacer: {\n        marginLeft: global_spacer_xs.value,\n    },\n    viewSources: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/js/icons/plus-circle-icon';\nimport CostIcon from 'components/icons/costIcon';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { withRouter } from 'react-router';\nimport { getReleasePath } from 'utils/pathname';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDocLink = (textKey, urlKey) => {\n            const { t } = this.props;\n            return (React.createElement(\"a\", { href: t(urlKey), rel: \"noreferrer\", target: \"_blank\" },\n                t(textKey),\n                React.createElement(\"span\", { style: styles.iconSpacer },\n                    React.createElement(ExternalLinkAltIcon, null))));\n        };\n        this.getRouteToSources = () => {\n            const release = getReleasePath();\n            return `${release}/settings/sources`;\n        };\n    }\n    render() {\n        const { providerType, t } = this.props;\n        let descKey = 'no_providers_state.overview_desc';\n        let titleKey = 'no_providers_state.overview_title';\n        let docUrlKey;\n        let icon;\n        let textKey;\n        switch (providerType) {\n            case \"aws\" /* aws */:\n                descKey = 'no_providers_state.aws_desc';\n                titleKey = 'no_providers_state.aws_title';\n                break;\n            case \"azure\" /* azure */:\n                descKey = 'no_providers_state.azure_desc';\n                titleKey = 'no_providers_state.azure_title';\n                break;\n            case \"gcp\" /* gcp */:\n                descKey = 'no_providers_state.gcp_desc';\n                titleKey = 'no_providers_state.gcp_title';\n                break;\n            case \"ocp\" /* ocp */:\n                descKey = 'no_providers_state.ocp_desc';\n                docUrlKey = 'docs.add_ocp_sources';\n                textKey = 'no_providers_state.ocp_add_sources';\n                titleKey = 'no_providers_state.ocp_title';\n                break;\n            default:\n                icon = CostIcon;\n        }\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: icon ? icon : PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, t(titleKey)),\n            React.createElement(EmptyStateBody, null, t(descKey)),\n            docUrlKey && textKey ? (React.createElement(\"div\", { style: styles.viewSources }, this.getDocLink(textKey, docUrlKey))) : (React.createElement(Button, { variant: \"primary\", component: \"a\", href: this.getRouteToSources() }, t('no_providers_state.get_started')))));\n    }\n}\nconst NoProvidersState = withRouter(withTranslation()(NoProvidersStateBase));\nexport { NoProvidersState };\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { NoProvidersState } from './noProvidersState';\nconst NoProviders = ({ providerType, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(NoProvidersState, { providerType: providerType }))));\n};\nexport default withRouter(NoProviders);\n","import NoProviders from './noProviders';\nexport default NoProviders;\n"],"sourceRoot":""}