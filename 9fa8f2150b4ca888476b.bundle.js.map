{"version":3,"sources":["webpack:///./src/pages/sourceSettings/deleteDialog.tsx"],"names":["DeleteDialogBase","t","onDelete","onCancel","isOpen","isProcessing","isError","name","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_0__","isSmall","title","onClose","actions","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_1__","key","isDisabled","variant","onClick","__webpack_exports__","Object","react_redux__WEBPACK_IMPORTED_MODULE_4__","store_common__WEBPACK_IMPORTED_MODULE_5__","state","store_sourceDeleteDialog__WEBPACK_IMPORTED_MODULE_6__","closeModal","react_i18next__WEBPACK_IMPORTED_MODULE_3__"],"mappings":"8NAMA,MAAAA,EAAA,EAAkCC,IAAAC,WAAAC,WAAAC,SAAAC,eAAAC,UAAAC,UAA8DC,EAAAC,EAAAC,cAAAC,EAAA,GAAkCC,SAAA,EAAAC,MAAAZ,EAAA,+BAAAa,QAAAX,EAAAC,SAAAW,SAClIP,EAAAC,EAAAC,cAAAM,EAAA,GAAqCC,IAAA,SAAAC,WAAAb,EAAAc,QAAA,YAAAC,QAAAjB,GAAmFF,EAAA,iCACxHO,EAAAC,EAAAC,cAAAM,EAAA,GAAqCC,IAAA,UAAAC,WAAAb,EAAAc,QAAA,SAAAC,QAAAlB,GAAiFD,EAAA,mCAEtHA,EADOK,EACP,8BACA,kCACAe,EAAA,QAAAC,OAAAC,EAAA,EAAAD,QAAAE,EAAA,EAAAF,CAAAG,KACAvB,SAAAwB,EAAA,EAAAxB,SAAAuB,GACArB,OAAAsB,EAAA,EAAAtB,OAAAqB,GACApB,aAAAqB,EAAA,EAAArB,aAAAoB,GACAnB,QAAAoB,EAAA,EAAApB,QAAAmB,GACAlB,KAAAmB,EAAA,EAAAnB,KAAAkB,OAEAtB,SAAAuB,EAAA,EAAAC,YAPA,CAQCL,OAAAM,EAAA,EAAAN,GAAAtB","file":"9fa8f2150b4ca888476b.bundle.js","sourcesContent":["import { Button, Modal } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { deleteDialogActions, deleteDialogSelectors, } from 'store/sourceDeleteDialog';\nexport const DeleteDialogBase = ({ t, onDelete, onCancel, isOpen, isProcessing, isError, name, }) => (React.createElement(Modal, { isSmall: true, title: t('source_details.delete.title'), onClose: onCancel, isOpen: isOpen, actions: [\n        React.createElement(Button, { key: \"cancel\", isDisabled: isProcessing, variant: \"secondary\", onClick: onCancel }, t('source_details.delete.cancel')),\n        React.createElement(Button, { key: \"confirm\", isDisabled: isProcessing, variant: \"danger\", onClick: onDelete }, t('source_details.delete.delete')),\n    ] }, isError\n    ? t('source_details.delete.error')\n    : t('source_details.delete.message')));\nexport default connect(createMapStateToProps(state => ({\n    onDelete: deleteDialogSelectors.onDelete(state),\n    isOpen: deleteDialogSelectors.isOpen(state),\n    isProcessing: deleteDialogSelectors.isProcessing(state),\n    isError: deleteDialogSelectors.isError(state),\n    name: deleteDialogSelectors.name(state),\n})), {\n    onCancel: deleteDialogActions.closeModal,\n})(translate()(DeleteDialogBase));\n"],"sourceRoot":""}