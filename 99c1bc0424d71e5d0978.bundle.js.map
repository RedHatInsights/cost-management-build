{"version":3,"sources":["webpack:///./src/pages/sourceSettings/deleteDialog.tsx"],"names":["__webpack_require__","r","__webpack_exports__","d","DeleteDialogBase","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_0__","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","n","react_i18next__WEBPACK_IMPORTED_MODULE_3__","react_redux__WEBPACK_IMPORTED_MODULE_4__","store_common__WEBPACK_IMPORTED_MODULE_5__","store_sourceDeleteDialog__WEBPACK_IMPORTED_MODULE_6__","t","onDelete","onCancel","isOpen","isProcessing","isError","name","a","createElement","isSmall","title","onClose","actions","key","isDisabled","variant","onClick","Object","state","closeModal"],"mappings":"2FAAAA,EAAAC,EAAAC,GAAAF,EAAAG,EAAAD,EAAA,qCAAAE,IAAA,IAAAC,EAAAL,EAAA,KAAAM,EAAAN,EAAA,KAAAO,EAAAP,EAAA,GAAAQ,EAAAR,EAAAS,EAAAF,GAAAG,EAAAV,EAAA,KAAAW,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,KAAAa,EAAAb,EAAA,IAMO,MAAAI,EAAA,EAA2BU,IAAAC,WAAAC,WAAAC,SAAAC,eAAAC,UAAAC,UAAoEZ,EAAAa,EAAKC,cAAejB,EAAA,GAAQkB,SAAA,EAAAC,MAAAV,EAAA,+BAAAW,QAAAT,EAAAC,SAAAS,SAC1HlB,EAAAa,EAAKC,cAAehB,EAAA,GAASqB,IAAA,SAAAC,WAAAV,EAAAW,QAAA,YAAAC,QAAAd,GAAmFF,EAAA,iCAChHN,EAAAa,EAAKC,cAAehB,EAAA,GAASqB,IAAA,UAAAC,WAAAV,EAAAW,QAAA,SAAAC,QAAAf,GAAiFD,EAAA,mCAEtHA,EADOK,EACP,8BACA,kCACejB,EAAA,QAAA6B,OAAApB,EAAA,QAAAoB,CAAQA,OAAAnB,EAAA,EAAAmB,CAAqBC,KAC5CjB,SAAcF,EAAA,EAAqBE,SAAAiB,GACnCf,OAAYJ,EAAA,EAAqBI,OAAAe,GACjCd,aAAkBL,EAAA,EAAqBK,aAAAc,GACvCb,QAAaN,EAAA,EAAqBM,QAAAa,GAClCZ,KAAUP,EAAA,EAAqBO,KAAAY,OAE/BhB,SAAcH,EAAA,EAAmBoB,YAPlB,CAQZF,OAAArB,EAAA,EAAAqB,GAAS3B","file":"99c1bc0424d71e5d0978.bundle.js","sourcesContent":["import { Button, Modal } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { deleteDialogActions, deleteDialogSelectors, } from 'store/sourceDeleteDialog';\nexport const DeleteDialogBase = ({ t, onDelete, onCancel, isOpen, isProcessing, isError, name, }) => (React.createElement(Modal, { isSmall: true, title: t('source_details.delete.title'), onClose: onCancel, isOpen: isOpen, actions: [\n        React.createElement(Button, { key: \"cancel\", isDisabled: isProcessing, variant: \"secondary\", onClick: onCancel }, t('source_details.delete.cancel')),\n        React.createElement(Button, { key: \"confirm\", isDisabled: isProcessing, variant: \"danger\", onClick: onDelete }, t('source_details.delete.delete')),\n    ] }, isError\n    ? t('source_details.delete.error')\n    : t('source_details.delete.message')));\nexport default connect(createMapStateToProps(state => ({\n    onDelete: deleteDialogSelectors.onDelete(state),\n    isOpen: deleteDialogSelectors.isOpen(state),\n    isProcessing: deleteDialogSelectors.isProcessing(state),\n    isError: deleteDialogSelectors.isError(state),\n    name: deleteDialogSelectors.name(state),\n})), {\n    onCancel: deleteDialogActions.closeModal,\n})(translate()(DeleteDialogBase));\n"],"sourceRoot":""}