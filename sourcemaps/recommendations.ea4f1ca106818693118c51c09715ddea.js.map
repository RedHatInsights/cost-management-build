{"version":3,"file":"js/recommendations.03b9b6dfb08f3fa79c21.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_FontSize_md.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_FontSize_xs.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_disabled_color_100.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_3xl.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_xs.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Unavailable/Unavailable.js","webpack:///./src/routes/state/notAvailable/notAvailable.tsx","webpack:///./src/routes/utils/handles.ts","webpack:///./src/routes/views/optimizations/optimizationsHeader.tsx","webpack:///./src/routes/views/optimizations/optimizations.tsx","webpack:///./src/routes/views/utils/navHandles.ts","webpack:///./src/routes/views/utils/query.ts"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const OutlinedQuestionCircleIconConfig = {\n  name: 'OutlinedQuestionCircleIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M256 8C119.043 8 8 119.083 8 256c0 136.997 111.043 248 248 248s248-111.003 248-248C504 119.083 392.957 8 256 8zm0 448c-110.532 0-200-89.431-200-200 0-110.495 89.472-200 200-200 110.491 0 200 89.471 200 200 0 110.53-89.431 200-200 200zm107.244-255.2c0 67.052-72.421 68.084-72.421 92.863V300c0 6.627-5.373 12-12 12h-45.647c-6.627 0-12-5.373-12-12v-8.659c0-35.745 27.1-50.034 47.579-61.516 17.561-9.845 28.324-16.541 28.324-29.579 0-17.246-21.999-28.693-39.784-28.693-23.189 0-33.894 10.977-48.942 29.969-4.057 5.12-11.46 6.071-16.666 2.124l-27.824-21.098c-5.107-3.872-6.251-11.066-2.644-16.363C184.846 131.491 214.94 112 261.794 112c49.071 0 101.45 38.304 101.45 88.8zM298 368c0 23.159-18.841 42-42 42s-42-18.841-42-42 18.841-42 42-42 42 18.841 42 42z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const OutlinedQuestionCircleIcon = createIcon(OutlinedQuestionCircleIconConfig);\n\nexport default OutlinedQuestionCircleIcon;","\"use strict\";\nexports.__esModule = true;\nexports.global_FontSize_md = {\n  \"name\": \"--pf-global--FontSize--md\",\n  \"value\": \"1rem\",\n  \"var\": \"var(--pf-global--FontSize--md)\"\n};\nexports[\"default\"] = exports.global_FontSize_md;","\"use strict\";\nexports.__esModule = true;\nexports.global_FontSize_xs = {\n  \"name\": \"--pf-global--FontSize--xs\",\n  \"value\": \"0.75rem\",\n  \"var\": \"var(--pf-global--FontSize--xs)\"\n};\nexports[\"default\"] = exports.global_FontSize_xs;","\"use strict\";\nexports.__esModule = true;\nexports.global_disabled_color_100 = {\n  \"name\": \"--pf-global--disabled-color--100\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--disabled-color--100)\"\n};\nexports[\"default\"] = exports.global_disabled_color_100;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_3xl = {\n  \"name\": \"--pf-global--spacer--3xl\",\n  \"value\": \"4rem\",\n  \"var\": \"var(--pf-global--spacer--3xl)\"\n};\nexports[\"default\"] = exports.global_spacer_3xl;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_xs = {\n  \"name\": \"--pf-global--spacer--xs\",\n  \"value\": \"0.25rem\",\n  \"var\": \"var(--pf-global--spacer--xs)\"\n};\nexports[\"default\"] = exports.global_spacer_xs;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport '../Unavailable/Unavailable.css';\nvar Unavailable = function () {\n    return (_jsxs(EmptyState, __assign({ variant: EmptyStateVariant.large, className: \"ins-c-empty-state__unavailable pf-m-redhat-font\" }, { children: [_jsx(EmptyStateIcon, { icon: ExclamationCircleIcon }), _jsx(Title, __assign({ headingLevel: \"h5\", size: \"lg\" }, { children: \"This page is temporarily unavailable\" })), _jsxs(EmptyStateBody, { children: [\"Try refreshing the page. If the problem persists, contact your organization administrator or visit our\", _jsxs(\"a\", __assign({ href: \"https://status.redhat.com/\", target: \"_blank\", rel: \"noopener noreferrer\" }, { children: [' ', \"status page\"] })), ' ', \"for known outages.\"] })] })));\n};\nexport default Unavailable;\n//# sourceMappingURL=Unavailable.js.map","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Unavailable } from '@redhat-cloud-services/frontend-components/Unavailable';\nimport React from 'react';\nconst NotAvailable = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(Unavailable, null))));\n};\nexport default NotAvailable;\n","import { addFilterToQuery, removeFilterFromQuery } from './filter';\nexport const initQuery = (query, reset = false, props = {}) => {\n    const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), props);\n    // Reset pagination\n    if (reset) {\n        if (newQuery.filter && newQuery.filter.offset !== undefined) {\n            newQuery.filter = Object.assign(Object.assign({}, query.filter), { offset: 0 });\n        }\n        if (newQuery.offset !== undefined) {\n            newQuery.offset = 0;\n        }\n    }\n    return newQuery;\n};\nexport const handleOnCurrencySelected = (query) => {\n    return initQuery(query);\n};\nexport const handleOnCostTypeSelected = (query) => {\n    return initQuery(query);\n};\nexport const handleOnCostDistributionSelected = (query) => {\n    return initQuery(query, false, {\n        order_by: undefined, // Clear sort\n    });\n};\nexport const handleOnFilterAdded = (query, filter) => {\n    const newQuery = initQuery(query, true);\n    return addFilterToQuery(newQuery, filter);\n};\nexport const handleOnFilterRemoved = (query, filter) => {\n    const newQuery = initQuery(query, true);\n    return removeFilterFromQuery(newQuery, filter);\n};\nexport const handleOnPerPageSelect = (query, perPage) => {\n    return initQuery(query, false, {\n        filter: Object.assign(Object.assign({}, query.filter), { limit: perPage }),\n    });\n};\nexport const handleOnSetPage = (query, report, pageNumber) => {\n    const limit = report && report.meta && report.meta.filter && report.meta.filter.limit ? report.meta.filter.limit : 10;\n    const offset = pageNumber * limit - limit;\n    return initQuery(query, false, {\n        filter: Object.assign(Object.assign({}, query.filter), { offset }),\n    });\n};\nexport const handleOnSort = (query, sortType, isSortAscending, date = undefined) => {\n    return initQuery(query, false, {\n        order_by: Object.assign({ [sortType]: isSortAscending ? 'asc' : 'desc' }, (date && {\n            date,\n        })),\n    });\n};\n","import { Button, ButtonVariant, Popover, Title, TitleSizes } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { styles } from './optimizations.styles';\nclass OptimizationsHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] },\n                    intl.formatMessage(messages.optimizations),\n                    React.createElement(\"span\", { style: styles.infoIcon },\n                        React.createElement(Popover, { \"aria-label\": intl.formatMessage(messages.optimizationsInfoArialLabel), enableFlip: true, bodyContent: React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.optimizationsInfo)) },\n                            React.createElement(Button, { \"aria-label\": intl.formatMessage(messages.optimizationsInfoButtonArialLabel), variant: ButtonVariant.plain },\n                                React.createElement(OutlinedQuestionCircleIcon, null))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst OptimizationsHeader = injectIntl(connect(mapStateToProps, {})(OptimizationsHeaderBase));\nexport { OptimizationsHeader };\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { getQuery, parseQuery } from 'api/queries/rosQuery';\nimport { RosPathsType, RosType } from 'api/ros/ros';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoOptimizations } from 'routes/state/noOptimizations';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { OptimizationsTable, OptimizationsToolbar } from 'routes/views/components/optimizations';\nimport { handleOnFilterAdded, handleOnFilterRemoved, handleOnSort } from 'routes/views/utils/navHandles';\nimport { getOrderById, getOrderByValue } from 'routes/views/utils/orderBy';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { rosActions, rosSelectors } from 'store/ros';\nimport { uiActions } from 'store/ui';\nimport { withRouter } from 'utils/router';\nimport { styles } from './optimizations.styles';\nimport { OptimizationsHeader } from './optimizationsHeader';\nconst baseQuery = {\n    limit: 10,\n    offset: 0,\n    order_by: {\n        last_reported: 'desc',\n    },\n};\nconst reportType = RosType.ros;\nconst reportPathsType = RosPathsType.recommendations;\nclass Optimizations extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            columns: [],\n            rows: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, report } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta ? report.meta.limit : baseQuery.limit;\n            const offset = report && report.meta ? report.meta.offset : baseQuery.offset;\n            const page = Math.trunc(offset / limit + 1);\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => this.handleOnPerPageSelect(perPage), onSetPage: (event, pageNumber) => this.handleOnSetPage(pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.openShift),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { query, report, reportFetchStatus, reportQueryString, router } = this.props;\n            return (React.createElement(OptimizationsTable, { filterBy: query.filter_by, isLoading: reportFetchStatus === FetchStatus.inProgress, onSort: (sortType, isSortAscending) => handleOnSort(query, router, sortType, isSortAscending), orderBy: query.order_by, report: report, reportQueryString: reportQueryString }));\n        };\n        this.getToolbar = () => {\n            const { query, report, router } = this.props;\n            const itemsPerPage = report && report.meta ? report.meta.limit : 0;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            const isDisabled = itemsTotal === 0;\n            return (React.createElement(OptimizationsToolbar, { isDisabled: isDisabled, isProject: true, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onFilterAdded: filter => handleOnFilterAdded(query, router, filter), onFilterRemoved: filter => handleOnFilterRemoved(query, router, filter), pagination: this.getPagination(isDisabled), query: query }));\n        };\n        this.handleOnPerPageSelect = (perPage) => {\n            const { closeOptimizationsDrawer, query, router } = this.props;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { limit: perPage });\n            const filteredQuery = getRouteForQuery(newQuery, router.location, true);\n            router.navigate(filteredQuery, { replace: true });\n            closeOptimizationsDrawer();\n        };\n        this.handleOnSetPage = (pageNumber) => {\n            const { closeOptimizationsDrawer, query, report, router } = this.props;\n            const limit = report && report.meta && report.meta.limit ? report.meta.limit : baseQuery.limit;\n            const offset = pageNumber * limit - limit;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { limit,\n                offset });\n            const filteredQuery = getRouteForQuery(newQuery, router.location);\n            router.navigate(filteredQuery, { replace: true });\n            closeOptimizationsDrawer();\n        };\n        this.updateReport = () => {\n            const { fetchRosReport, reportQueryString } = this.props;\n            fetchRosReport(reportPathsType, reportType, reportQueryString);\n        };\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, reportError, reportQueryString, router } = this.props;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        if (newQuery || noReport || noLocation) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { intl, query, report, reportError, reportFetchStatus } = this.props;\n        const itemsTotal = report && report.meta ? report.meta.count : 0;\n        const isDisabled = itemsTotal === 0;\n        const title = intl.formatMessage(messages.optimizations);\n        const hasOptimizations = report && report.meta && report.meta.count > 0;\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        if (!query.filter_by && !hasOptimizations && reportFetchStatus === FetchStatus.complete) {\n            return React.createElement(NoOptimizations, { title: title });\n        }\n        return (React.createElement(\"div\", { style: styles.optimizationsContainer },\n            React.createElement(OptimizationsHeader, null),\n            React.createElement(\"div\", { style: styles.content },\n                React.createElement(\"div\", { style: styles.toolbarContainer }, this.getToolbar()),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const order_by = getOrderById(queryFromRoute) || getOrderById(baseQuery);\n    const order_how = getOrderByValue(queryFromRoute) || getOrderByValue(baseQuery);\n    const query = Object.assign(Object.assign({}, baseQuery), queryFromRoute);\n    const reportQuery = Object.assign(Object.assign({}, query.filter_by), { limit: query.limit, offset: query.offset, order_by,\n        order_how });\n    const reportQueryString = getQuery(reportQuery);\n    const report = rosSelectors.selectRos(state, reportPathsType, reportType, reportQueryString);\n    const reportError = rosSelectors.selectRosError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = rosSelectors.selectRosFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    return {\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    closeOptimizationsDrawer: uiActions.closeOptimizationsDrawer,\n    fetchRosReport: rosActions.fetchRosReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(Optimizations)));\n","import * as handles from 'routes/utils/handles';\nimport { getRouteForQuery } from './query';\nexport const handleOnCurrencySelected = (query, router) => {\n    const newQuery = handles.handleOnCurrencySelected(query);\n    router.navigate(getRouteForQuery(newQuery, router.location), { replace: true }); // Don't reset pagination\n};\nexport const handleOnCostTypeSelected = (query, router) => {\n    const newQuery = handles.handleOnCostTypeSelected(query);\n    router.navigate(getRouteForQuery(newQuery, router.location), { replace: true }); // Don't reset pagination\n};\nexport const handleOnCostDistributionSelected = (query, router) => {\n    const newQuery = handles.handleOnCostDistributionSelected(query);\n    router.navigate(getRouteForQuery(newQuery, router.location), { replace: true }); // Don't reset pagination\n};\nexport const handleOnFilterAdded = (query, router, filter) => {\n    const newQuery = handles.handleOnFilterAdded(query, filter);\n    router.navigate(getRouteForQuery(newQuery, router.location), { replace: true });\n};\nexport const handleOnFilterRemoved = (query, router, filter) => {\n    const newQuery = handles.handleOnFilterRemoved(query, filter);\n    router.navigate(getRouteForQuery(newQuery, router.location), { replace: true });\n};\nexport const handleOnPerPageSelect = (query, router, perPage) => {\n    const newQuery = handles.handleOnPerPageSelect(query, perPage);\n    router.navigate(getRouteForQuery(newQuery, router.location), { replace: true });\n};\nexport const handleOnSetPage = (query, router, report, pageNumber) => {\n    const newQuery = handles.handleOnSetPage(query, report, pageNumber);\n    router.navigate(getRouteForQuery(newQuery, router.location), { replace: true });\n};\nexport const handleOnSort = (query, router, sortType, isSortAscending, date = undefined) => {\n    const newQuery = handles.handleOnSort(query, sortType, isSortAscending, date);\n    router.navigate(getRouteForQuery(newQuery, router.location), { replace: true });\n};\n","import { getQueryRoute } from 'api/queries/query';\nimport { initQuery } from 'routes/utils/handles';\nexport const getRouteForQuery = (query, location, reset = false) => {\n    const newQuery = initQuery(query, reset);\n    return `${location.pathname}?${getQueryRoute(newQuery)}`;\n};\n"],"names":["OutlinedQuestionCircleIconConfig","name","height","width","svgPath","yOffset","xOffset","OutlinedQuestionCircleIcon","exports","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","EmptyState","variant","EmptyStateVariant","className","children","EmptyStateIcon","icon","ExclamationCircleIcon","Title","headingLevel","size","EmptyStateBody","href","target","rel","title","PageHeader","PageHeaderTitle","PageSection","Unavailable","initQuery","query","reset","props","newQuery","JSON","parse","stringify","filter","undefined","offset","handleOnCurrencySelected","handleOnCostTypeSelected","handleOnCostDistributionSelected","order_by","handleOnFilterAdded","handleOnFilterRemoved","handleOnPerPageSelect","perPage","limit","handleOnSetPage","report","pageNumber","meta","handleOnSort","sortType","isSortAscending","date","OptimizationsHeaderBase","constructor","super","defaultState","state","render","intl","style","TitleSizes","formatMessage","messages","Popover","enableFlip","bodyContent","Button","ButtonVariant","mapStateToProps","OptimizationsHeader","injectIntl","connect","baseQuery","last_reported","reportType","reportPathsType","Optimizations","columns","rows","getPagination","isDisabled","isBottom","count","page","Math","trunc","Pagination","isCompact","itemCount","onPerPageSelect","event","onSetPage","titles","paginationTitle","placement","PaginationVariant","widgetId","getTable","reportFetchStatus","reportQueryString","router","filterBy","filter_by","isLoading","onSort","orderBy","getToolbar","itemsPerPage","itemsTotal","isProject","onFilterAdded","onFilterRemoved","pagination","closeOptimizationsDrawer","filteredQuery","location","navigate","replace","updateReport","fetchRosReport","componentDidMount","componentDidUpdate","prevProps","reportError","noReport","noLocation","search","hasOptimizations","queryFromRoute","order_how","reportQuery","mapDispatchToProps","ui","getRouteForQuery","pathname"],"sourceRoot":""}