{"version":3,"file":"js/permissionsWrapper.af656cc1319ff45b107a.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/minus-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_xs.js","webpack:///./src/api/queries/providersQuery.ts","webpack:///./src/api/queries/userAccessQuery.ts","webpack:///./src/components/ros/recommendations.styles.ts","webpack:///./src/components/ros/recommendationsToolbar.tsx","webpack:///./src/components/ros/recommendationsContent.tsx","webpack:///./src/components/ros/recommendationsDrawer.tsx","webpack:///./src/components/drawer/commonDrawer.tsx","webpack:///./src/components/pageTitle/pageTitle.tsx","webpack:///./src/components/userAccess/permissionsWrapper.tsx","webpack:///./src/routes/components/state/emptyValueState/emptyValueState.tsx","webpack:///./src/routes/views/components/perspective/perspective.styles.ts","webpack:///./src/routes/views/components/perspective/perspectiveSelect.tsx","webpack:///./src/routes/views/utils/paths.ts"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const MinusIconConfig = {\n  name: 'MinusIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const MinusIcon = createIcon(MinusIconConfig);\n\nexport default MinusIcon;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_xs = {\n  \"name\": \"--pf-global--spacer--xs\",\n  \"value\": \"0.25rem\",\n  \"var\": \"var(--pf-global--spacer--xs)\"\n};\nexports[\"default\"] = exports.global_spacer_xs;","import { parse, stringify } from 'qs';\nexport function getProvidersQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseProvidersQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","import { parse, stringify } from 'qs';\nexport function getUserAccessQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseUserAccessQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    firstColumn: {\n        width: '250px',\n    },\n    infoArrow: {\n        top: global_spacer_xs.value,\n        position: 'relative',\n    },\n    tableContainer: {\n        marginTop: global_spacer_lg.value,\n    },\n    toolbarContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    viewAllContainer: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { PerspectiveSelect } from 'routes/views/components/perspective/perspectiveSelect';\nimport { createMapStateToProps } from 'store/common';\n// eslint-disable-next-line no-shadow\nvar RecommendationsType;\n(function (RecommendationsType) {\n    RecommendationsType[\"last_24_hrs\"] = \"last_24_hrs\";\n    RecommendationsType[\"last_7_days\"] = \"last_7_days\";\n    RecommendationsType[\"last_15_days\"] = \"last_15_days\";\n})(RecommendationsType || (RecommendationsType = {}));\nexport class RecommendationsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            currentItem: undefined,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getOptions = () => {\n            return [\n                {\n                    label: messages.recommendationsLast24hrs,\n                    value: RecommendationsType.last_24_hrs,\n                },\n                {\n                    label: messages.recommendationsLast7Days,\n                    value: RecommendationsType.last_7_days,\n                },\n                {\n                    label: messages.recommendationsLast15Days,\n                    value: RecommendationsType.last_15_days,\n                },\n            ];\n        };\n    }\n    render() {\n        const { isDisabled, onSelected } = this.props;\n        const { currentItem } = this.state;\n        const options = this.getOptions();\n        return (React.createElement(PerspectiveSelect, { currentItem: currentItem || options[0].value, isDisabled: isDisabled, onSelected: onSelected, options: options, title: messages.recommendationsPerspective }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {};\nconst RecommendationsToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(RecommendationsToolbarBase);\nconst RecommendationsToolbar = injectIntl(RecommendationsToolbarConnect);\nexport { RecommendationsToolbar };\n","import 'routes/views/details/components/dataTable/dataTable.scss';\nimport { TextContent, TextList, TextListItem, TextListItemVariants, TextListVariants } from '@patternfly/react-core';\nimport { TableComposable, TableVariant, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { Loading } from 'routes/state/loading';\nimport { getGroupById } from 'routes/views/utils/groupBy';\nimport { getBreakdownPath } from 'routes/views/utils/paths';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { uiSelectors } from 'store/ui';\nimport { formatPath } from 'utils/paths';\nimport { withRouter } from 'utils/router';\nimport { styles } from './recommendations.styles';\nimport { RecommendationsToolbar } from './recommendationsToolbar';\nconst baseQuery = {\n    filter: {\n        limit: 10,\n        offset: 0,\n    },\n    order_by: {\n        name: 'desc',\n    },\n};\nclass RecommendationsContentBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            query: baseQuery,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getDescription = () => {\n            const { intl, payload } = this.props;\n            return (React.createElement(TextContent, null,\n                React.createElement(TextList, { component: TextListVariants.dl },\n                    React.createElement(TextListItem, { component: TextListItemVariants.dt }, intl.formatMessage(messages.recommendationsValues, { value: 'last_reported' })),\n                    React.createElement(TextListItem, { component: TextListItemVariants.dd }, payload.lastReported),\n                    React.createElement(TextListItem, { component: TextListItemVariants.dt }, intl.formatMessage(messages.recommendationsValues, { value: 'cluster' })),\n                    React.createElement(TextListItem, { component: TextListItemVariants.dd }, payload.cluster),\n                    React.createElement(TextListItem, { component: TextListItemVariants.dt }, intl.formatMessage(messages.recommendationsValues, { value: 'project' })),\n                    React.createElement(TextListItem, { component: TextListItemVariants.dd }, payload.project),\n                    React.createElement(TextListItem, { component: TextListItemVariants.dt }, intl.formatMessage(messages.recommendationsValues, { value: 'workload_type' })),\n                    React.createElement(TextListItem, { component: TextListItemVariants.dd }, payload.workloadType),\n                    React.createElement(TextListItem, { component: TextListItemVariants.dt }, intl.formatMessage(messages.recommendationsValues, { value: 'workload' })),\n                    React.createElement(TextListItem, { component: TextListItemVariants.dd }, payload.workload))));\n        };\n        this.getChangeValue = value => {\n            if (value === 0) {\n                return React.createElement(EmptyValueState, null);\n            }\n            // Show icon opposite of month over month\n            let iconOverride = 'iconOverride';\n            if (value !== null && value < 0) {\n                iconOverride += ' decrease';\n            }\n            else if (value !== null && value > 0) {\n                iconOverride += ' increase';\n            }\n            return (React.createElement(\"div\", { className: \"monthOverMonthOverride\" },\n                React.createElement(\"div\", { className: iconOverride }, value < 0 ? (React.createElement(React.Fragment, null,\n                    value,\n                    React.createElement(\"span\", { className: \"fa fa-sort-down\", style: styles.infoArrow }))) : (React.createElement(React.Fragment, null,\n                    value,\n                    React.createElement(\"span\", { className: \"fa fa-sort-up\", style: Object.assign(Object.assign({}, styles.infoArrow), styles.infoArrowDesc) }))))));\n        };\n        this.getLimitsTable = () => {\n            const { intl } = this.props;\n            return (React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.recommendationsTableAriaLabel), borders: false, hasSelectableRowCaption: true, variant: TableVariant.compact },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null,\n                        React.createElement(Th, null, intl.formatMessage(messages.limits)),\n                        React.createElement(Th, null, intl.formatMessage(messages.current)),\n                        React.createElement(Th, null, intl.formatMessage(messages.recommended)),\n                        React.createElement(Th, null, intl.formatMessage(messages.change)))),\n                React.createElement(Tbody, null,\n                    React.createElement(Tr, null,\n                        React.createElement(Td, { style: styles.firstColumn }, intl.formatMessage(messages.cpuUnits)),\n                        React.createElement(Td, null, \"500\"),\n                        React.createElement(Td, { hasRightBorder: true }, \"500\"),\n                        React.createElement(Td, null, this.getChangeValue(0))),\n                    React.createElement(Tr, null,\n                        React.createElement(Td, { style: styles.firstColumn }, intl.formatMessage(messages.memoryUnits)),\n                        React.createElement(Td, null, \"1000\"),\n                        React.createElement(Td, { hasRightBorder: true }, \"1100\"),\n                        React.createElement(Td, null, this.getChangeValue(100))))));\n        };\n        this.getRequestsTable = () => {\n            const { intl } = this.props;\n            return (React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.recommendationsTableAriaLabel), borders: false, hasSelectableRowCaption: true, variant: TableVariant.compact },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null,\n                        React.createElement(Th, null, intl.formatMessage(messages.requests)),\n                        React.createElement(Th, null, intl.formatMessage(messages.current)),\n                        React.createElement(Th, null, intl.formatMessage(messages.recommended)),\n                        React.createElement(Th, null, intl.formatMessage(messages.change)))),\n                React.createElement(Tbody, null,\n                    React.createElement(Tr, null,\n                        React.createElement(Td, { style: styles.firstColumn }, intl.formatMessage(messages.cpuUnits)),\n                        React.createElement(Td, null, \"300\"),\n                        React.createElement(Td, { hasRightBorder: true }, \"400\"),\n                        React.createElement(Td, null, this.getChangeValue(100))),\n                    React.createElement(Tr, null,\n                        React.createElement(Td, { style: styles.firstColumn }, intl.formatMessage(messages.memoryUnits)),\n                        React.createElement(Td, null, \"100\"),\n                        React.createElement(Td, { hasRightBorder: true }, \"110\"),\n                        React.createElement(Td, null, this.getChangeValue(10))))));\n        };\n        this.getUsageTable = () => {\n            const { intl } = this.props;\n            return (React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.recommendationsTableAriaLabel), borders: false, hasSelectableRowCaption: true, variant: TableVariant.compact },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null,\n                        React.createElement(Th, null, intl.formatMessage(messages.usage)),\n                        React.createElement(Th, null, intl.formatMessage(messages.current)))),\n                React.createElement(Tbody, null,\n                    React.createElement(Tr, null,\n                        React.createElement(Td, { style: styles.firstColumn }, intl.formatMessage(messages.cpuUtilizationUnits)),\n                        React.createElement(Td, { style: styles.alignLeft }, \"300\")),\n                    React.createElement(Tr, null,\n                        React.createElement(Td, { style: styles.firstColumn }, intl.formatMessage(messages.memoryUtilizationUnits)),\n                        React.createElement(Td, null, \"100\")))));\n        };\n        this.getViewAllLink = () => {\n            const { groupBy, intl, payload, router } = this.props;\n            if (groupBy !== undefined) {\n                return null;\n            }\n            return (React.createElement(Link, { to: getBreakdownPath({\n                    basePath: formatPath(routes.ocpDetailsBreakdown.path),\n                    groupBy: 'project',\n                    id: payload.project,\n                    isRecommendations: true,\n                    router,\n                    title: payload.project,\n                }) }, intl.formatMessage(messages.recommendationsViewAll)));\n        };\n    }\n    render() {\n        const { reportFetchStatus } = this.props;\n        return (React.createElement(\"div\", { style: styles.content },\n            React.createElement(\"div\", null, this.getDescription()),\n            React.createElement(\"div\", { style: styles.toolbarContainer },\n                React.createElement(RecommendationsToolbar, null)),\n            reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                React.createElement(\"div\", null, this.getUsageTable()),\n                React.createElement(\"div\", { style: styles.tableContainer }, this.getRequestsTable()),\n                React.createElement(\"div\", { style: styles.tableContainer }, this.getLimitsTable()))),\n            React.createElement(\"div\", { style: styles.viewAllContainer }, this.getViewAllLink())));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const groupBy = getGroupById(queryFromRoute);\n    const query = {\n        filter: Object.assign({}, baseQuery.filter),\n        filter_by: baseQuery.filter_by,\n        order_by: baseQuery.order_by,\n    };\n    // Todo: Temp report until APIs are available\n    const reportType = ReportType.cost;\n    const reportPathsType = ReportPathsType.ocp;\n    const reportQueryString = getQuery(query);\n    // const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    // Todo: For testing\n    const report = {\n        meta: {\n            count: 11,\n            filter: {\n                limit: 10,\n                offset: 0,\n            },\n            order_by: {\n                cost_total: 'desc',\n            },\n        },\n        data: [\n            {\n                name: 'OpenShift grouped by Project',\n                created: '2022-01-17 13:25:07',\n                expires: '2022-01-24',\n                status: 'pending',\n            },\n            {\n                name: 'Amazon Web Services grouped by Account',\n                created: '2022-01-17 13:24:23',\n                expires: '2022-01-24',\n                status: 'running',\n            },\n            {\n                name: 'OpenShift grouped by Cluster',\n                created: '2022-01-16 13:23:08',\n                expires: '2022-01-23',\n                status: 'completed',\n            },\n            {\n                name: 'Microsoft Azure grouped by Account',\n                created: '2022-01-16 13:18:22',\n                expires: '2022-01-23',\n                status: 'failed',\n            },\n            {\n                name: 'Google Cloud Platform grouped by Service',\n                created: '2022-01-14 09:05:23',\n                expires: '2022-01-23',\n                status: 'completed',\n            },\n            {\n                name: 'Explorer - OpenShift grouped by Cluster',\n                created: '2022-01-14 08:38:42',\n                expires: '2022-01-23',\n                status: 'completed',\n            },\n        ],\n    };\n    return {\n        groupBy,\n        payload: uiSelectors.selectRecommendationsDrawerPayload(state),\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst RecommendationsContent = injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(RecommendationsContentBase)));\nexport { RecommendationsContent };\n","import { DrawerActions, DrawerCloseButton, DrawerContentBody, DrawerHead, Title, TitleSizes, } from '@patternfly/react-core';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { uiActions, uiSelectors } from 'store/ui';\nimport { RecommendationsContent } from './recommendationsContent';\nclass RecommendationsDrawerBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.drawerRef = React.createRef();\n        this.handleClose = () => {\n            const { closeRecommendationsDrawer } = this.props;\n            closeRecommendationsDrawer();\n        };\n    }\n    render() {\n        const { isOpen, payload } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(DrawerHead, null,\n                React.createElement(\"span\", { tabIndex: isOpen ? 0 : -1, ref: this.drawerRef },\n                    React.createElement(Title, { headingLevel: \"h1\", size: TitleSizes.xl }, payload ? payload.container : undefined)),\n                React.createElement(DrawerActions, null,\n                    React.createElement(DrawerCloseButton, { onClick: this.handleClose }))),\n            React.createElement(DrawerContentBody, null,\n                React.createElement(RecommendationsContent, { onClose: this.handleClose }))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        isOpen: uiSelectors.selectIsRecommendationsDrawerOpen(state),\n        payload: uiSelectors.selectRecommendationsDrawerPayload(state),\n    };\n});\nconst mapDispatchToProps = {\n    closeRecommendationsDrawer: uiActions.closeRecommendationsDrawer,\n};\nconst RecommendationsDrawer = injectIntl(connect(mapStateToProps, mapDispatchToProps)(RecommendationsDrawerBase));\nexport default RecommendationsDrawer;\n","import './commonDrawer.scss';\nimport { Drawer, DrawerContent, DrawerContentBody, DrawerPanelContent } from '@patternfly/react-core';\nimport ExportsDrawer from 'components/exports/exportsDrawer';\nimport { RecommendationsDrawer } from 'components/ros';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { uiSelectors } from 'store/ui';\nclass CommonDrawerBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.drawerRef = React.createRef();\n        this.getPanelContent = () => {\n            const { isExportsDrawerOpen, isRecommendationsDrawerOpen } = this.props;\n            if (isExportsDrawerOpen) {\n                return (React.createElement(DrawerPanelContent, { id: \"exportsDrawer\", minSize: \"1000px\" },\n                    React.createElement(ExportsDrawer, null)));\n            }\n            else if (isRecommendationsDrawerOpen) {\n                return (React.createElement(DrawerPanelContent, { id: \"recommendationsDrawer\", minSize: \"750px\" },\n                    React.createElement(RecommendationsDrawer, null)));\n            }\n            return null;\n        };\n        this.handleExpand = () => {\n            this.drawerRef.current && this.drawerRef.current.focus();\n        };\n    }\n    render() {\n        const { children, isExportsDrawerOpen, isRecommendationsDrawerOpen } = this.props;\n        return (React.createElement(Drawer, { className: \"drawerOverride\", isExpanded: isExportsDrawerOpen || isRecommendationsDrawerOpen, onExpand: this.handleExpand },\n            React.createElement(DrawerContent, { panelContent: this.getPanelContent() },\n                React.createElement(DrawerContentBody, null, children))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        isExportsDrawerOpen: uiSelectors.selectIsExportsDrawerOpen(state),\n        isRecommendationsDrawerOpen: uiSelectors.selectIsRecommendationsDrawerOpen(state),\n    };\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst CommonDrawer = injectIntl(connect(mapStateToProps, mapDispatchToProps)(CommonDrawerBase));\nexport default CommonDrawer;\n","import messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { routes } from 'routes';\nimport { formatPath, usePathname } from 'utils/paths';\nconst PageTitleBase = ({ children = null, intl }) => {\n    const usePageTitle = () => {\n        const pathname = usePathname();\n        switch (pathname) {\n            case formatPath(routes.explorer.path):\n                return messages.pageTitleExplorer;\n            case formatPath(routes.overview.path):\n                return messages.pageTitleOverview;\n            default:\n                return messages.pageTitleDefault;\n        }\n    };\n    // Set page title\n    document.title = intl.formatMessage(usePageTitle());\n    return React.createElement(React.Fragment, null, children);\n};\nconst PageTitle = injectIntl(PageTitleBase);\nexport default PageTitle;\n","import { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { getUserAccessQuery } from 'api/queries/userAccessQuery';\nimport { UserAccessType } from 'api/userAccess';\nimport { asyncComponent } from 'components/async';\nimport { CommonDrawer } from 'components/drawer';\nimport { PageTitle } from 'components/pageTitle';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { accountSettingsActions, accountSettingsSelectors } from 'store/accountSettings';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { providersActions, providersQuery, providersSelectors } from 'store/providers';\nimport { uiActions } from 'store/ui';\nimport { userAccessActions, userAccessQuery, userAccessSelectors } from 'store/userAccess';\nconst InactiveSources = asyncComponent(() => import(/* webpackChunkName: \"notFound\" */ 'components/inactiveSources/inactiveSources'));\nconst Permissions = asyncComponent(() => import(/* webpackChunkName: \"notFound\" */ './permissions'));\nclass PermissionsWrapperBase extends React.Component {\n    componentDidMount() {\n        const { accountSettingsFetchStatus, fetchAccountSettings, fetchProviders, fetchUserAccess, providersFetchStatus, providersQueryString, resetState, userAccessFetchStatus, userAccessQueryString, } = this.props;\n        // Clear cached API responses\n        resetState();\n        // Fetched in order of component usage via render()\n        if (userAccessFetchStatus !== FetchStatus.inProgress) {\n            fetchUserAccess(UserAccessType.all, userAccessQueryString);\n        }\n        if (providersFetchStatus !== FetchStatus.inProgress) {\n            fetchProviders(ProviderType.all, providersQueryString);\n        }\n        if (accountSettingsFetchStatus !== FetchStatus.inProgress) {\n            fetchAccountSettings();\n        }\n    }\n    render() {\n        const { accountSettingsFetchStatus, children, providersFetchStatus, userAccessFetchStatus } = this.props;\n        return (React.createElement(PageTitle, null, userAccessFetchStatus === FetchStatus.complete && (React.createElement(Permissions, null, providersFetchStatus === FetchStatus.complete && (React.createElement(CommonDrawer, null,\n            React.createElement(InactiveSources, null),\n            accountSettingsFetchStatus === FetchStatus.complete && children))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(state => {\n    const accountSettings = accountSettingsSelectors.selectAccountSettings(state);\n    const accountSettingsError = accountSettingsSelectors.selectAccountSettingsError(state);\n    const accountSettingsFetchStatus = accountSettingsSelectors.selectAccountSettingsFetchStatus(state);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    const userAccessQueryString = getUserAccessQuery(userAccessQuery);\n    const userAccess = userAccessSelectors.selectUserAccess(state, UserAccessType.all, userAccessQueryString);\n    const userAccessError = userAccessSelectors.selectUserAccessError(state, UserAccessType.all, userAccessQueryString);\n    const userAccessFetchStatus = userAccessSelectors.selectUserAccessFetchStatus(state, UserAccessType.all, userAccessQueryString);\n    return {\n        accountSettings,\n        accountSettingsError,\n        accountSettingsFetchStatus,\n        providers,\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n        userAccess,\n        userAccessError,\n        userAccessFetchStatus,\n        userAccessQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchAccountSettings: accountSettingsActions.fetchAccountSettings,\n    fetchProviders: providersActions.fetchProviders,\n    fetchUserAccess: userAccessActions.fetchUserAccess,\n    resetState: uiActions.resetState,\n};\nconst PermissionsWrapperConnect = connect(mapStateToProps, mapDispatchToProps)(PermissionsWrapperBase);\nconst PermissionsWrapper = injectIntl(PermissionsWrapperConnect);\nexport default PermissionsWrapper;\n","import './emptyValueState.scss';\nimport { MinusIcon } from '@patternfly/react-icons/dist/esm/icons/minus-icon';\nimport React from 'react';\nconst EmptyValueState = () => {\n    return (React.createElement(\"span\", { className: \"emptyValueContainer\" },\n        React.createElement(MinusIcon, null)));\n};\nexport default EmptyValueState;\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    perspectiveSelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    perspectiveLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n        whiteSpace: 'nowrap',\n    },\n    perspectiveOptionLabel: {\n        marginBottom: 6,\n        marginLeft: 8,\n        marginTop: 6,\n    },\n};\n","import { Select, SelectOption, SelectVariant, Title } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { styles } from './perspective.styles';\nclass PerspectiveSelectBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isSelectOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getSelectOptions = () => {\n            const { intl, options } = this.props;\n            const selections = [];\n            options.map(option => {\n                selections.push({\n                    toString: () => intl.formatMessage(option.label, { value: option.value }),\n                    value: option.value,\n                });\n            });\n            return selections;\n        };\n        this.getSelect = () => {\n            const { currentItem, intl, isDisabled, options } = this.props;\n            const { isSelectOpen } = this.state;\n            if (options.length === 1) {\n                return (React.createElement(\"div\", { style: styles.perspectiveOptionLabel }, intl.formatMessage(options[0].label, { value: options[0].value })));\n            }\n            const selectOptions = this.getSelectOptions();\n            const selection = selectOptions.find((option) => option.value === currentItem);\n            return (React.createElement(Select, { id: \"perspectiveSelect\", isDisabled: isDisabled, isOpen: isSelectOpen, onSelect: this.handleSelect, onToggle: this.handleToggle, selections: selection, variant: SelectVariant.single }, selectOptions.map(option => (React.createElement(SelectOption, { key: option.value, value: option })))));\n        };\n        this.handleSelect = (event, selection) => {\n            const { onSelected } = this.props;\n            if (onSelected) {\n                onSelected(selection.value);\n            }\n            this.setState({\n                isSelectOpen: false,\n            });\n        };\n        this.handleToggle = isSelectOpen => {\n            this.setState({ isSelectOpen });\n        };\n    }\n    render() {\n        const { intl, title } = this.props;\n        return (React.createElement(\"div\", { style: styles.perspectiveSelector },\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\", style: styles.perspectiveLabel }, intl.formatMessage(title || messages.perspective)),\n            this.getSelect()));\n    }\n}\nconst PerspectiveSelect = injectIntl(PerspectiveSelectBase);\nexport { PerspectiveSelect };\n","import { getQueryRoute } from 'api/queries/query';\nimport { parseQuery } from 'api/queries/query';\nimport { breakdownDescKey, breakdownTitleKey, orgUnitIdKey, platformCategoryKey } from 'utils/props';\nexport const getBreakdownPath = ({ basePath, description, groupBy, id, isPlatformCosts, isRecommendations, router, title, }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const newQuery = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, queryFromRoute), (description && description !== title && { [breakdownDescKey]: description })), (title && { [breakdownTitleKey]: title })), (isRecommendations && { recommendations: true })), { group_by: {\n            [groupBy]: isPlatformCosts ? '*' : id, // Use ID here -- see https://github.com/project-koku/koku-ui/pull/2821\n        } });\n    if (isPlatformCosts) {\n        if (!newQuery.filter) {\n            newQuery.filter = {};\n        }\n        newQuery.filter.category = platformCategoryKey;\n    }\n    return `${basePath}?${getQueryRoute(newQuery)}`;\n};\nexport const getOrgBreakdownPath = ({ basePath, description, groupBy, groupByOrg, id, router, title, type, }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const newQuery = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, queryFromRoute), (description && description !== title && { [breakdownDescKey]: description })), (title && { [breakdownTitleKey]: title })), (groupByOrg && { [orgUnitIdKey]: groupByOrg })), { group_by: {\n            [groupBy]: id, // This may be overridden below\n        } });\n    if (type === 'account') {\n        if (!newQuery.filter) {\n            newQuery.filter = {};\n        }\n        newQuery.filter.account = id;\n        newQuery.group_by = {\n            [orgUnitIdKey]: groupByOrg,\n        };\n    }\n    else if (type === 'organizational_unit') {\n        newQuery.group_by = {\n            [orgUnitIdKey]: id,\n        };\n    }\n    return `${basePath}?${getQueryRoute(newQuery)}`;\n};\nexport const isPlatformCosts = (queryFromRoute) => {\n    return queryFromRoute && queryFromRoute.filter && queryFromRoute.filter.category === platformCategoryKey;\n};\n"],"names":["MinusIconConfig","name","height","width","svgPath","yOffset","xOffset","MinusIcon","exports","getProvidersQuery","query","stringify","encode","indices","getUserAccessQuery","styles","firstColumn","infoArrow","top","position","tableContainer","marginTop","global_spacer_lg","toolbarContainer","backgroundColor","global_BackgroundColor_light_100","paddingBottom","paddingTop","viewAllContainer","RecommendationsType","RecommendationsToolbarBase","constructor","super","arguments","this","defaultState","currentItem","undefined","state","Object","assign","getOptions","label","messages","value","last_24_hrs","last_7_days","last_15_days","render","isDisabled","onSelected","props","options","title","mapStateToProps","RecommendationsToolbarConnect","connect","RecommendationsToolbar","injectIntl","baseQuery","filter","limit","offset","order_by","RecommendationsContentBase","getDescription","intl","payload","TextContent","TextList","component","TextListVariants","TextListItem","TextListItemVariants","formatMessage","lastReported","cluster","project","workloadType","workload","getChangeValue","iconOverride","className","style","infoArrowDesc","getLimitsTable","TableComposable","borders","hasSelectableRowCaption","variant","TableVariant","Thead","Tr","Th","Tbody","Td","hasRightBorder","getRequestsTable","getUsageTable","alignLeft","getViewAllLink","groupBy","router","Link","to","basePath","routes","id","isRecommendations","reportFetchStatus","content","queryFromRoute","location","search","filter_by","reportType","reportPathsType","reportQueryString","reportError","ui","report","meta","count","cost_total","data","created","expires","status","fetchReport","RecommendationsContent","RecommendationsDrawerBase","drawerRef","handleClose","closeRecommendationsDrawer","isOpen","DrawerHead","tabIndex","ref","Title","headingLevel","size","TitleSizes","container","DrawerActions","DrawerCloseButton","onClick","DrawerContentBody","onClose","CommonDrawerBase","getPanelContent","isExportsDrawerOpen","isRecommendationsDrawerOpen","DrawerPanelContent","minSize","handleExpand","current","focus","children","Drawer","isExpanded","onExpand","DrawerContent","panelContent","document","usePageTitle","InactiveSources","Permissions","PermissionsWrapperBase","componentDidMount","accountSettingsFetchStatus","fetchAccountSettings","fetchProviders","fetchUserAccess","providersFetchStatus","providersQueryString","resetState","userAccessFetchStatus","userAccessQueryString","accountSettings","accountSettingsError","providers","providersError","userAccess","userAccessError","PermissionsWrapperConnect","perspectiveSelector","display","alignItems","perspectiveLabel","marginBottom","marginRight","whiteSpace","perspectiveOptionLabel","marginLeft","PerspectiveSelectBase","isSelectOpen","getSelectOptions","selections","map","option","push","toString","getSelect","length","selectOptions","selection","find","Select","onSelect","handleSelect","onToggle","handleToggle","SelectVariant","SelectOption","key","event","setState","PerspectiveSelect","getBreakdownPath","description","isPlatformCosts","newQuery","recommendations","group_by","category","getOrgBreakdownPath","groupByOrg","type","account"],"sourceRoot":""}