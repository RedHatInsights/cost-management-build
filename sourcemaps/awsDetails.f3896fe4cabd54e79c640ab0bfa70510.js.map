{"version":3,"file":"js/awsDetails.0923b68869a79234faec.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/external-link-alt-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_xs.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Unavailable/Unavailable.js","webpack:///./src/api/queries/providersQuery.ts","webpack:///./src/routes/components/currency/currency.styles.ts","webpack:///./src/routes/components/currency/currency.tsx","webpack:///./src/routes/state/noData/noDataState.tsx","webpack:///./src/routes/state/noData/noData.tsx","webpack:///./src/routes/components/icons/optimizationIcon/optimizationIcon.tsx","webpack:///./src/routes/state/noOptimizations/noOptimizationsState.tsx","webpack:///./src/routes/components/icons/costIcon/costIcon.tsx","webpack:///./src/routes/state/noProviders/noProvidersState.styles.ts","webpack:///./src/routes/state/noProviders/noProvidersState.tsx","webpack:///./src/routes/state/noProviders/noProviders.tsx","webpack:///./src/routes/state/notAvailable/notAvailable.tsx","webpack:///./src/utils/computedReport/getComputedAwsReportItems.ts","webpack:///./src/routes/views/details/awsDetails/awsDetails.styles.ts","webpack:///./src/routes/views/details/awsDetails/detailsHeader.styles.ts","webpack:///./src/routes/views/details/awsDetails/detailsHeader.tsx","webpack:///./src/routes/views/details/awsDetails/detailsTable.tsx","webpack:///./src/routes/views/details/awsDetails/detailsToolbar.tsx","webpack:///./src/routes/views/details/awsDetails/awsDetails.tsx","webpack:///./src/routes/views/details/components/actions/actions.tsx","webpack:///./src/routes/views/details/components/dataTable/dataTable.styles.ts","webpack:///./src/routes/views/details/components/dataTable/dataTable.tsx","webpack:///./src/routes/views/utils/handles.ts","webpack:///./src/routes/views/utils/providers.ts","webpack:///./src/routes/views/utils/query.ts"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExternalLinkAltIcon = createIcon(ExternalLinkAltIconConfig);\n\nexport default ExternalLinkAltIcon;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_xs = {\n  \"name\": \"--pf-global--spacer--xs\",\n  \"value\": \"0.25rem\",\n  \"var\": \"var(--pf-global--spacer--xs)\"\n};\nexports[\"default\"] = exports.global_spacer_xs;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport '../Unavailable/Unavailable.css';\nvar Unavailable = function () {\n    return (_jsxs(EmptyState, __assign({ variant: EmptyStateVariant.large, className: \"ins-c-empty-state__unavailable pf-m-redhat-font\" }, { children: [_jsx(EmptyStateIcon, { icon: ExclamationCircleIcon }), _jsx(Title, __assign({ headingLevel: \"h5\", size: \"lg\" }, { children: \"This page is temporarily unavailable\" })), _jsxs(EmptyStateBody, { children: [\"Try refreshing the page. If the problem persists, contact your organization administrator or visit our\", _jsxs(\"a\", __assign({ href: \"https://status.redhat.com/\", target: \"_blank\", rel: \"noopener noreferrer\" }, { children: [' ', \"status page\"] })), ' ', \"for known outages.\"] })] })));\n};\nexport default Unavailable;\n//# sourceMappingURL=Unavailable.js.map","import { parse, stringify } from 'qs';\nexport function getProvidersQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseProvidersQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    currencySelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    currencyLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n        whiteSpace: 'nowrap',\n    },\n};\n","import './currency.scss';\nimport { Select, SelectOption, SelectVariant, Title, TitleSizes } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { setCurrency } from 'utils/localStorage';\nimport { styles } from './currency.styles';\nexport const currencyOptions = [\n    { label: messages.currencyOptions, value: 'AUD' },\n    { label: messages.currencyOptions, value: 'CAD' },\n    { label: messages.currencyOptions, value: 'CHF' },\n    { label: messages.currencyOptions, value: 'CNY' },\n    { label: messages.currencyOptions, value: 'DKK' },\n    { label: messages.currencyOptions, value: 'EUR' },\n    { label: messages.currencyOptions, value: 'GBP' },\n    { label: messages.currencyOptions, value: 'HKD' },\n    { label: messages.currencyOptions, value: 'JPY' },\n    { label: messages.currencyOptions, value: 'NOK' },\n    { label: messages.currencyOptions, value: 'NZD' },\n    { label: messages.currencyOptions, value: 'SEK' },\n    { label: messages.currencyOptions, value: 'SGD' },\n    { label: messages.currencyOptions, value: 'USD' },\n    { label: messages.currencyOptions, value: 'ZAR' },\n];\nclass CurrencyBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isSelectOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getSelect = () => {\n            const { currency, isDisabled, showLabel = true } = this.props;\n            const { isSelectOpen } = this.state;\n            const selectOptions = this.getSelectOptions();\n            const selection = selectOptions.find((option) => option.value === currency);\n            return (React.createElement(Select, { className: showLabel ? 'currencyOverride' : undefined, id: \"currencySelect\", isDisabled: isDisabled, isOpen: isSelectOpen, onSelect: this.handleSelect, onToggle: this.handleToggle, selections: selection, variant: SelectVariant.single }, selectOptions.map(option => (React.createElement(SelectOption, { key: option.value, value: option })))));\n        };\n        this.getSelectOptions = () => {\n            const { intl } = this.props;\n            const options = [];\n            currencyOptions.map(option => {\n                options.push({\n                    toString: () => intl.formatMessage(option.label, { units: option.value }),\n                    value: option.value,\n                });\n            });\n            return options;\n        };\n        this.handleSelect = (event, selection) => {\n            const { isLocalStorage = true, onSelect } = this.props;\n            // Set currency units via local storage\n            if (isLocalStorage) {\n                setCurrency(selection.value);\n            }\n            this.setState({\n                isSelectOpen: false,\n            }, () => {\n                if (onSelect) {\n                    onSelect(selection.value);\n                }\n            });\n        };\n        this.handleToggle = isSelectOpen => {\n            this.setState({ isSelectOpen });\n        };\n    }\n    render() {\n        const { intl, showLabel = true } = this.props;\n        return (React.createElement(\"div\", { style: styles.currencySelector },\n            showLabel && (React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.md, style: styles.currencyLabel }, intl.formatMessage(messages.currency))),\n            this.getSelect()));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst CurrencyConnect = connect(mapStateToProps, mapDispatchToProps)(CurrencyBase);\nconst Currency = injectIntl(CurrencyConnect);\nexport default Currency;\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title, TitleSizes, } from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nclass NoDataStateBase extends React.Component {\n    render() {\n        const { intl, showReload = true } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: TitleSizes.lg }, intl.formatMessage(messages.noDataStateTitle)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(messages.noDataStateDesc)),\n            showReload && (React.createElement(Button, { variant: \"primary\", onClick: () => window.location.reload() }, intl.formatMessage(messages.noDataStateRefresh)))));\n    }\n}\nconst NoDataState = injectIntl(NoDataStateBase);\nexport { NoDataState };\n","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React from 'react';\nimport { NoDataState } from './noDataState';\nconst NoData = ({ showReload, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(NoDataState, { showReload: showReload }))));\n};\nexport default NoData;\n","import './optimizationIcon.scss';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nconst icon = require('./Red_Hat-IT_Optimization-Gray.svg');\nconst OptimizationIcon = ({ className, intl }) => {\n    return (React.createElement(\"img\", { className: `optimization-icon ${className}`, src: icon, alt: intl.formatMessage(messages.optimizations), \"aria-hidden\": \"true\" }));\n};\nexport default injectIntl(OptimizationIcon);\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title, TitleSizes, } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { OptimizationIcon } from 'routes/components/icons/optimizationIcon';\nclass NoOptimizationsStateBase extends React.Component {\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: OptimizationIcon }),\n            React.createElement(Title, { headingLevel: \"h1\", size: TitleSizes.lg }, intl.formatMessage(messages.noOptimizationsTitle)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(messages.noOptimizationsDesc))));\n    }\n}\nconst NoOptimizationsState = injectIntl(NoOptimizationsStateBase);\nexport { NoOptimizationsState };\n","import './costIcon.scss';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nconst icon = require('./Cost-icon.svg');\nconst CostIcon = ({ className, intl }) => {\n    return (React.createElement(\"img\", { className: `cost-icon ${className}`, src: icon, alt: intl.formatMessage(messages.costManagement), \"aria-hidden\": \"true\" }));\n};\nexport default injectIntl(CostIcon);\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    iconSpacer: {\n        marginLeft: global_spacer_xs.value,\n    },\n    viewSources: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title, TitleSizes, } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { ProviderType } from 'api/providers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { CostIcon } from 'routes/components/icons/costIcon';\nimport { getReleasePath } from 'utils/paths';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDocLink = (textKey, urlKey) => {\n            const { intl } = this.props;\n            return (React.createElement(\"a\", { href: intl.formatMessage(urlKey), rel: \"noreferrer\", target: \"_blank\" },\n                intl.formatMessage(textKey),\n                React.createElement(\"span\", { style: styles.iconSpacer },\n                    React.createElement(ExternalLinkAltIcon, null))));\n        };\n        this.getRouteToSources = () => {\n            const release = getReleasePath();\n            return `${release}/settings/sources`;\n        };\n    }\n    render() {\n        const { intl, providerType } = this.props;\n        let descKey = messages.noProvidersStateOverviewDesc;\n        let titleKey = messages.noProvidersStateOverviewTitle;\n        let docUrlKey;\n        let icon;\n        let textKey;\n        switch (providerType) {\n            case ProviderType.aws:\n                descKey = messages.noProvidersStateAwsDesc;\n                titleKey = messages.noProvidersStateAwsTitle;\n                break;\n            case ProviderType.azure:\n                descKey = messages.noProvidersStateAzureDesc;\n                titleKey = messages.noProvidersStateAzureTitle;\n                break;\n            case ProviderType.gcp:\n                descKey = messages.noProvidersStateGcpDesc;\n                titleKey = messages.noProvidersStateGcpTitle;\n                break;\n            case ProviderType.ibm:\n                descKey = messages.noProvidersStateIbmDesc;\n                titleKey = messages.noProvidersStateIbmTitle;\n                break;\n            case ProviderType.ocp:\n                descKey = messages.noProvidersStateOcpDesc;\n                docUrlKey = messages.docsAddOcpSources;\n                textKey = messages.noProvidersStateOcpAddSources;\n                titleKey = messages.noProvidersStateOcpTitle;\n                break;\n            default:\n                icon = CostIcon;\n        }\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: icon ? icon : PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h1\", size: TitleSizes.lg }, intl.formatMessage(titleKey)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(descKey)),\n            docUrlKey && textKey ? (React.createElement(\"div\", { style: styles.viewSources }, this.getDocLink(textKey, docUrlKey))) : (React.createElement(Button, { variant: \"primary\", component: \"a\", href: this.getRouteToSources() }, intl.formatMessage(messages.noProvidersStateGetStarted)))));\n    }\n}\nconst NoProvidersState = injectIntl(NoProvidersStateBase);\nexport { NoProvidersState };\n","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React from 'react';\nimport { NoProvidersState } from './noProvidersState';\nconst NoProviders = ({ providerType, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(NoProvidersState, { providerType: providerType }))));\n};\nexport default NoProviders;\n","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Unavailable } from '@redhat-cloud-services/frontend-components/Unavailable';\nimport React from 'react';\nconst NotAvailable = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(Unavailable, null))));\n};\nexport default NotAvailable;\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.account) {\n        return 'account';\n    }\n    if (groupBy.aws_category) {\n        return 'aws_category';\n    }\n    if (groupBy.org_unit_id) {\n        return 'org_unit_id';\n    }\n    if (groupBy.region) {\n        return 'region';\n    }\n    if (groupBy.service) {\n        return 'service';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    awsDetails: {\n        minHeight: '100%',\n    },\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    toolbarContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    costType: {\n        display: 'flex',\n        marginLeft: global_spacer_md.var,\n    },\n    costValue: {\n        marginTop: global_spacer_lg.var,\n        marginBottom: 0,\n    },\n    dateTitle: {\n        textAlign: 'end',\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentLeft: {\n        display: 'flex',\n        minHeight: '90px',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes } from '@patternfly/react-core';\nimport { OrgPathsType } from 'api/orgs/org';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType } from 'api/tags/tag';\nimport { ExportsLink } from 'components/drawers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { CostType } from 'routes/components/costType';\nimport { Currency } from 'routes/components/currency';\nimport { GroupBy } from 'routes/views/components/groupBy';\nimport { filterProviders } from 'routes/views/utils/providers';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedAwsReportItems';\nimport { getSinceDateRangeString } from 'utils/dates';\nimport { formatCurrency } from 'utils/format';\nimport { styles } from './detailsHeader.styles';\nconst groupByOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nconst orgPathsType = OrgPathsType.aws;\nconst resourcePathsType = ResourcePathsType.aws;\nconst tagPathsType = TagPathsType.aws;\nclass DetailsHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.handleOnCostTypeSelected = (value) => {\n            const { onCostTypeSelected } = this.props;\n            if (onCostTypeSelected) {\n                onCostTypeSelected(value);\n            }\n        };\n    }\n    render() {\n        const { costType, currency, groupBy, isExportsFeatureEnabled, onCurrencySelected, onGroupBySelected, providers, providersError, report, intl, } = this.props;\n        const showContent = report && !providersError && providers && providers.meta && providers.meta.count > 0;\n        const hasCost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.awsDetailsTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(\"div\", { style: styles.headerContentLeft },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: !showContent, onSelected: onGroupBySelected, options: groupByOptions, orgPathsType: orgPathsType, resourcePathsType: resourcePathsType, showCostCategories: true, showOrgs: true, showTags: true, tagPathsType: tagPathsType }),\n                    React.createElement(\"div\", { style: styles.costType },\n                        React.createElement(CostType, { costType: costType, onSelect: this.handleOnCostTypeSelected }))),\n                showContent && (React.createElement(\"div\", null,\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: TitleSizes['4xl'] }, formatCurrency(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD')),\n                    React.createElement(\"div\", { style: styles.dateTitle }, getSinceDateRangeString()))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        providers: filterProviders(providers, ProviderType.aws),\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n    };\n});\nconst DetailsHeader = injectIntl(connect(mapStateToProps, {})(DetailsHeaderBase));\nexport { DetailsHeader };\n","import 'routes/views/details/components/dataTable/dataTable.scss';\nimport { ReportPathsType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { Actions } from 'routes/views/details/components/actions';\nimport { DataTable } from 'routes/views/details/components/dataTable';\nimport { styles } from 'routes/views/details/components/dataTable/dataTable.styles';\nimport { getOrgBreakdownPath } from 'routes/views/utils/paths';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getForDateRangeString, getNoDataForDateRangeString } from 'utils/dates';\nimport { formatCurrency, formatPercentage } from 'utils/format';\nimport { formatPath } from 'utils/paths';\nimport { noPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nconst reportPathsType = ReportPathsType.aws;\nclass DetailsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { groupBy, groupByCostCategory, groupByOrg, groupByTagKey, intl, isAllSelected, report, router, selectedItems, } = this.props;\n            if (!report) {\n                return;\n            }\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: (groupByCostCategory\n                    ? groupByCostCategory\n                    : groupByTagKey\n                        ? groupByTagKey\n                        : groupByOrg\n                            ? 'org_entities'\n                            : groupBy),\n            });\n            const columns = groupByCostCategory || groupByTagKey || groupByOrg\n                ? [\n                    {\n                        name: '',\n                    },\n                    {\n                        name: groupByCostCategory\n                            ? intl.formatMessage(messages.costCategoryNames)\n                            : groupByOrg\n                                ? intl.formatMessage(messages.names, { count: 2 })\n                                : intl.formatMessage(messages.tagNames),\n                    },\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign({ orderBy: groupBy === 'account' ? 'account_alias' : groupBy, name: intl.formatMessage(messages.detailsResourceNames, { value: groupBy }) }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ];\n            computedItems.map((item, index) => {\n                const cost = this.getTotalCost(item, index);\n                const monthOverMonth = this.getMonthOverMonthCost(item, index);\n                const label = item && item.label && item.label !== null ? item.label : '';\n                const isDisabled = label === `${noPrefix}${groupBy}` ||\n                    label === `${noPrefix}${groupByCostCategory}` ||\n                    label === `${noPrefix}${groupByTagKey}`;\n                const desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                const actions = this.getActions(item, isDisabled);\n                const name = isDisabled ? label : (React.createElement(Link, { to: getOrgBreakdownPath({\n                        basePath: formatPath(routes.awsDetailsBreakdown.path),\n                        description: item.id,\n                        groupBy,\n                        groupByOrg,\n                        id: item.id,\n                        router,\n                        title: item.label,\n                        type: item.type,\n                    }) }, label));\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: (React.createElement(\"div\", null,\n                                name,\n                                desc)),\n                        },\n                        { value: monthOverMonth },\n                        { value: cost, style: styles.managedColumn },\n                        { value: actions },\n                    ],\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                    selectionDisabled: isDisabled,\n                });\n            });\n            this.setState({\n                columns,\n                rows,\n            });\n        };\n        this.getActions = (item, isDisabled = false) => {\n            const { groupBy, reportQueryString } = this.props;\n            return (React.createElement(Actions, { groupBy: groupBy, isDisabled: isDisabled, item: item, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getMonthOverMonthCost = (item, index) => {\n            const { intl } = this.props;\n            const value = formatCurrency(Math.abs(item.cost.total.value - item.delta_value), item.cost.total.units);\n            const percentage = item.delta_percent !== null ? formatPercentage(Math.abs(item.delta_percent)) : 0;\n            const showPercentage = !(percentage === 0 || percentage === '0.00');\n            const showValue = item.delta_percent !== null; // Workaround for https://github.com/project-koku/koku/issues/1395\n            let iconOverride;\n            if (showPercentage) {\n                iconOverride = 'iconOverride';\n                if (item.delta_percent !== null && item.delta_value < 0) {\n                    iconOverride += ' decrease';\n                }\n                if (item.delta_percent !== null && item.delta_value > 0) {\n                    iconOverride += ' increase';\n                }\n            }\n            if (!showValue) {\n                return getNoDataForDateRangeString();\n            }\n            else {\n                return (React.createElement(\"div\", { className: \"monthOverMonthOverride\" },\n                    React.createElement(\"div\", { className: iconOverride, key: `month-over-month-cost-${index}` },\n                        showPercentage ? intl.formatMessage(messages.percent, { value: percentage }) : React.createElement(EmptyValueState, null),\n                        showPercentage && item.delta_percent !== null && item.delta_value > 0 && (React.createElement(\"span\", { className: \"fa fa-sort-up\", style: styles.infoArrow, key: `month-over-month-icon-${index}` })),\n                        showPercentage && item.delta_percent !== null && item.delta_value < 0 && (React.createElement(\"span\", { className: \"fa fa-sort-down\", style: Object.assign(Object.assign({}, styles.infoArrow), styles.infoArrowDesc), key: `month-over-month-icon-${index}` }))),\n                    React.createElement(\"div\", { style: styles.infoDescription, key: `month-over-month-info-${index}` }, getForDateRangeString(value))));\n            }\n        };\n        this.getTotalCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.cost.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.cost.total.value, item.cost.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport || prevProps.selectedItems !== selectedItems) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { isLoading, onSelected, onSort, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, isLoading: isLoading, onSelected: onSelected, onSort: onSort, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst DetailsTable = injectIntl(withRouter(DetailsTableBase));\nexport { DetailsTable };\n","import { OrgPathsType, OrgType } from 'api/orgs/org';\nimport { getQuery } from 'api/queries/query';\nimport { ResourcePathsType, ResourceType } from 'api/resources/resource';\nimport { TagPathsType, TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { orgActions, orgSelectors } from 'store/orgs';\nimport { resourceActions, resourceSelectors } from 'store/resources';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { isEqual } from 'utils/equal';\nimport { awsCategoryKey, orgUnitIdKey, tagKey } from 'utils/props';\nconst orgPathsType = OrgPathsType.aws;\nconst orgType = OrgType.org;\nconst resourcePathsType = ResourcePathsType.aws;\nconst resourceType = ResourceType.aws_category;\nconst tagPathsType = TagPathsType.aws;\nconst tagType = TagType.tag;\nexport class DetailsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { intl, isCostCategoriesFeatureEnabled, orgReport, resourceReport, tagReport } = this.props;\n            const options = [\n                { name: intl.formatMessage(messages.filterByValues, { value: 'account' }), key: 'account' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'service' }), key: 'service' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'region' }), key: 'region' },\n            ];\n            if (orgReport && orgReport.data && orgReport.data.length) {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: 'org_unit_id' }),\n                    key: orgUnitIdKey,\n                });\n            }\n            if (tagReport && tagReport.data && tagReport.data.length) {\n                options.push({ name: intl.formatMessage(messages.filterByValues, { value: tagKey }), key: tagKey });\n            }\n            if (resourceReport && resourceReport.data && resourceReport.data.length && isCostCategoriesFeatureEnabled) {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: awsCategoryKey }),\n                    key: awsCategoryKey,\n                });\n            }\n            return options.sort((a, b) => {\n                if (a.name < b.name) {\n                    return -1;\n                }\n                if (a.name > b.name) {\n                    return 1;\n                }\n                return 0;\n            });\n        };\n        this.updateReport = () => {\n            const { fetchOrg, fetchResource, fetchTag, isCostCategoriesFeatureEnabled, orgQueryString, resourceQueryString, tagQueryString, } = this.props;\n            fetchOrg(orgPathsType, orgType, orgQueryString);\n            if (isCostCategoriesFeatureEnabled) {\n                fetchResource(resourcePathsType, resourceType, resourceQueryString);\n            }\n            fetchTag(tagPathsType, tagType, tagQueryString);\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        }, () => {\n            this.updateReport();\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { orgReport, query, resourceReport, tagReport } = this.props;\n        if (!isEqual(orgReport, prevProps.orgReport) ||\n            !isEqual(resourceReport, prevProps.resourceReport) ||\n            !isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            }, () => {\n                this.updateReport();\n            });\n        }\n        else if (query && !isEqual(query, prevProps.query)) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { groupBy, isAllSelected, isBulkSelectDisabled, isDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onExportClicked, onFilterAdded, onFilterRemoved, orgReport, pagination, query, resourceReport, selectedItems, tagReport, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, groupBy: groupBy, isAllSelected: isAllSelected, isDisabled: isDisabled, isBulkSelectDisabled: isBulkSelectDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onExportClicked: onExportClicked, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, orgReport: orgReport, pagination: pagination, query: query, resourcePathsType: resourcePathsType, resourceReport: resourceReport, selectedItems: selectedItems, showBulkSelect: true, showExcludes: true, showExport: true, showFilter: true, tagPathsType: tagPathsType, tagReport: tagReport }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    // Note: Omitting key_only would help to share a single, cached request. Only the toolbar requires key values;\n    // however, for better server-side performance, we chose to use key_only here.\n    const baseQuery = {\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        key_only: true,\n        limit: 1000,\n    };\n    const resourceQueryString = getQuery({\n        key_only: true,\n    });\n    const resourceReport = resourceSelectors.selectResource(state, resourcePathsType, resourceType, resourceQueryString);\n    const resourceReportFetchStatus = resourceSelectors.selectResourceFetchStatus(state, resourcePathsType, resourceType, resourceQueryString);\n    const tagQueryString = getQuery(Object.assign({}, baseQuery));\n    const tagReport = tagSelectors.selectTag(state, tagPathsType, tagType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagPathsType, tagType, tagQueryString);\n    const orgQueryString = getQuery(Object.assign({}, baseQuery));\n    const orgReport = orgSelectors.selectOrg(state, orgPathsType, orgType, orgQueryString);\n    const orgReportFetchStatus = orgSelectors.selectOrgFetchStatus(state, orgPathsType, orgType, orgQueryString);\n    return {\n        isCostCategoriesFeatureEnabled: featureFlagsSelectors.selectIsCostCategoriesFeatureEnabled(state),\n        orgReport,\n        orgReportFetchStatus,\n        orgQueryString,\n        resourceReport,\n        resourceReportFetchStatus,\n        resourceQueryString,\n        tagReport,\n        tagReportFetchStatus,\n        tagQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchOrg: orgActions.fetchOrg,\n    fetchResource: resourceActions.fetchResource,\n    fetchTag: tagActions.fetchTag,\n};\nconst DetailsToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsToolbarBase);\nconst DetailsToolbar = injectIntl(DetailsToolbarConnect);\nexport { DetailsToolbar };\n","import 'routes/views/details/components/dataTable/dataTable.scss';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getQuery, parseQuery } from 'api/queries/awsQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoData } from 'routes/state/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { ExportModal } from 'routes/views/components/export';\nimport { getGroupByCostCategory, getGroupByOrgValue, getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { handleOnCostTypeSelected, handleOnCurrencySelected, handleOnFilterAdded, handleOnFilterRemoved, handleOnPerPageSelect, handleOnSetPage, handleOnSort, } from 'routes/views/utils/handles';\nimport { filterProviders, hasCurrentMonthData } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedAwsReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getCostType, getCurrency } from 'utils/localStorage';\nimport { awsCategoryPrefix, logicalOrPrefix, noPrefix, orgUnitIdKey, tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { styles } from './awsDetails.styles';\nimport { DetailsHeader } from './detailsHeader';\nimport { DetailsTable } from './detailsTable';\nimport { DetailsToolbar } from './detailsToolbar';\nconst baseQuery = {\n    filter: {\n        limit: 10,\n        offset: 0,\n    },\n    exclude: {},\n    filter_by: {},\n    group_by: {\n        account: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst reportType = ReportType.cost;\nconst reportPathsType = ReportPathsType.aws;\nclass AwsDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            isAllSelected: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const groupBy = groupByTagKey || groupById;\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: groupBy === orgUnitIdKey ? 'org_entities' : groupBy,\n            });\n        };\n        this.getExportModal = (computedItems) => {\n            const { query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByCostCategory = getGroupByCostCategory(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `${noPrefix}${groupById}` || item.label === `${noPrefix}${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByCostCategory\n                    ? `${awsCategoryPrefix}${groupByCostCategory}`\n                    : groupByTagKey\n                        ? `${tagPrefix}${groupByTagKey}`\n                        : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, router, report } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = Math.trunc(offset / limit + 1);\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handleOnPerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleOnSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.aws),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { query, report, reportFetchStatus, reportQueryString, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByCostCategory = getGroupByCostCategory(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            const groupByOrg = getGroupByOrgValue(query);\n            return (React.createElement(DetailsTable, { groupBy: groupByCostCategory\n                    ? `${awsCategoryPrefix}${groupByCostCategory}`\n                    : groupByTagKey\n                        ? `${tagPrefix}${groupByTagKey}`\n                        : groupById, groupByCostCategory: groupByCostCategory, groupByTagKey: groupByTagKey, groupByOrg: groupByOrg, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending) => handleOnSort(query, router, sortType, isSortAscending), report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, router, report } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByCostCategory = getGroupByCostCategory(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(DetailsToolbar, { groupBy: groupByCostCategory\n                    ? `${awsCategoryPrefix}${groupByCostCategory}`\n                    : groupByTagKey\n                        ? `${tagPrefix}${groupByTagKey}`\n                        : groupById, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isDisabled || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onExportClicked: this.handleExportModalOpen, onFilterAdded: filter => handleOnFilterAdded(query, router, filter), onFilterRemoved: filter => handleOnFilterRemoved(query, router, filter), pagination: this.getPagination(isDisabled), query: query, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            let groupByKey = groupBy;\n            let value = '*';\n            // Check for org units\n            const index = groupBy && groupBy.indexOf(orgUnitIdKey);\n            if (index !== -1) {\n                groupByKey = orgUnitIdKey.substring(0, orgUnitIdKey.length);\n                value = groupBy.slice(orgUnitIdKey.length);\n            }\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: value,\n                }, order_by: undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.updateReport = () => {\n            const { fetchReport, reportQueryString } = this.props;\n            fetchReport(reportPathsType, reportType, reportQueryString);\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { costType, currency, intl, providers, providersFetchStatus, query, report, reportError, reportFetchStatus, router, } = this.props;\n        const computedItems = this.getComputedItems();\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const isDisabled = computedItems.length === 0;\n        const title = intl.formatMessage(messages.awsDetailsTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.inProgress) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.complete) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: ProviderType.aws, title: title });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.awsDetails },\n            React.createElement(DetailsHeader, { costType: costType, currency: currency, groupBy: groupById, onCostTypeSelected: value => handleOnCostTypeSelected(query, router, value), onCurrencySelected: value => handleOnCurrencySelected(query, router, value), onGroupBySelected: this.handleGroupBySelected, report: report }),\n            React.createElement(\"div\", { style: styles.content },\n                React.createElement(\"div\", { style: styles.toolbarContainer }, this.getToolbar(computedItems)),\n                this.getExportModal(computedItems),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const costType = getCostType();\n    const currency = getCurrency();\n    const query = Object.assign(Object.assign({}, baseQuery), queryFromRoute);\n    const reportQuery = {\n        cost_type: costType,\n        currency,\n        delta: 'cost',\n        exclude: query.exclude,\n        filter: Object.assign(Object.assign({}, query.filter), { resolution: 'monthly', time_scope_units: 'month', time_scope_value: -1 }),\n        filter_by: Object.assign(Object.assign({}, query.filter_by), (query.filter_by &&\n            query.filter_by[orgUnitIdKey] && {\n            [`${logicalOrPrefix}${orgUnitIdKey}`]: query.filter_by[orgUnitIdKey],\n            [orgUnitIdKey]: undefined,\n        })),\n        group_by: query.group_by,\n        order_by: query.order_by,\n    };\n    const reportQueryString = getQuery(reportQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        costType,\n        currency,\n        providers: filterProviders(providers, ProviderType.aws),\n        providersError,\n        providersFetchStatus,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(AwsDetails)));\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ExportModal } from 'routes/views/components/export';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nimport { tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, reportPathsType, reportQueryString } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { count: 1, groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, intl, item: { source_uuid }, redirectToCostModel, router, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, intl.formatMessage(messages.detailsActionsExport)),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], router) }, intl.formatMessage(messages.detailsActionsPriceList)));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = injectIntl(withRouter(DetailsActionsConnect));\nexport default Actions;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    costColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingRight: 0,\n    },\n    defaultLabel: {\n        minWidth: '50px',\n    },\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    lastReported: {\n        textAlign: 'right',\n        paddingRight: '40px',\n    },\n    lastReportedColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    managedColumn: {\n        textAlign: 'right',\n    },\n    nameColumn: {\n        width: '1%',\n    },\n};\n","import './dataTable.scss';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, TableVariant, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport { parseQuery } from 'api/queries/ocpQuery';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { NoOptimizationsState } from 'routes/state/noOptimizations/noOptimizationsState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass DataTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { intl, isOptimizations, router } = this.props;\n            const queryFromRoute = parseQuery(router.location.search);\n            if (queryFromRoute.filter_by) {\n                for (const val of Object.values(queryFromRoute.filter_by)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            if (isOptimizations) {\n                return React.createElement(NoOptimizationsState, null);\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, router } = this.props;\n            const orderBy = columns[index].orderBy;\n            const queryFromRoute = parseQuery(router.location.search);\n            const direction = queryFromRoute && queryFromRoute.order_by && queryFromRoute.order_by[orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected, rows } = this.props;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnRowClick = (event, rowIndex) => {\n            const { onRowClick, rows } = this.props;\n            rows.map(row => (row.selected = false));\n            rows[rowIndex].selected = true;\n            this.setState({ rows }, () => {\n                if (onRowClick) {\n                    onRowClick(event, rowIndex);\n                }\n            });\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isLoading, isOptimizations, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.dataTableAriaLabel), className: \"tableOverride\", gridBreakPoint: \"grid-2xl\", hasSelectableRowCaption: isOptimizations, variant: TableVariant.compact },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { isSelectable: isOptimizations, isHoverable: isOptimizations, isRowSelected: isOptimizations && row.selected, onRowClick: isOptimizations ? _event => this.handleOnRowClick(_event, rowIndex) : undefined, key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 && !isOptimizations ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${cellIndex}-${rowIndex}`, modifier: \"nowrap\", select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    }, style: item.style })) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", isActionCell: !isOptimizations && cellIndex === row.cells.length - 1, style: item.style }, item.value))))))))),\n            rows.length === 0 && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(DataTable));\n","import { addFilterToQuery, removeFilterFromQuery } from './filter';\nimport { getRouteForQuery } from './query';\nexport const handleSelected = (query, router, value, reset = false) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    router.navigate(getRouteForQuery(newQuery, router.location, reset), { replace: true }); // Don't reset pagination\n};\nexport const handleOnCurrencySelected = (query, router, value, reset = false) => {\n    handleSelected(query, router, value, reset);\n};\nexport const handleOnCostTypeSelected = (query, router, value, reset = false) => {\n    handleSelected(query, router, value, reset);\n};\nexport const handleOnCostDistributionSelected = (query, router, value, reset = false) => {\n    const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { order_by: undefined });\n    handleSelected(newQuery, router, value, reset);\n};\nexport const handleOnFilterAdded = (query, router, filter) => {\n    const filteredQuery = addFilterToQuery(query, filter);\n    router.navigate(getRouteForQuery(filteredQuery, router.location, true), { replace: true });\n};\nexport const handleOnFilterRemoved = (query, router, filter) => {\n    const filteredQuery = removeFilterFromQuery(query, filter);\n    router.navigate(getRouteForQuery(filteredQuery, router.location, true), { replace: true });\n};\nexport const handleOnPerPageSelect = (query, router, perPage) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    newQuery.filter = Object.assign(Object.assign({}, query.filter), { limit: perPage });\n    const filteredQuery = getRouteForQuery(newQuery, router.location, true);\n    router.navigate(filteredQuery, { replace: true });\n};\nexport const handleOnSetPage = (query, router, report, pageNumber) => {\n    const limit = report && report.meta && report.meta.filter && report.meta.filter.limit ? report.meta.filter.limit : 10;\n    const offset = pageNumber * limit - limit;\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    newQuery.filter = Object.assign(Object.assign({}, query.filter), { offset });\n    const filteredQuery = getRouteForQuery(newQuery, router.location);\n    router.navigate(filteredQuery, { replace: true });\n};\nexport const handleOnSort = (query, router, sortType, isSortAscending, date = undefined) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    newQuery.order_by = {};\n    newQuery.order_by[sortType] = isSortAscending ? 'asc' : 'desc';\n    if (date) {\n        newQuery.order_by.date = date;\n    }\n    const filteredQuery = getRouteForQuery(newQuery, router.location);\n    router.navigate(filteredQuery, { replace: true });\n};\n","// eslint-disable-next-line no-shadow\nvar DataType;\n(function (DataType) {\n    DataType[\"currentMonthData\"] = \"current_month_data\";\n    DataType[\"hasData\"] = \"has_data\";\n    DataType[\"previousMonthData\"] = \"previous_month_data\";\n})(DataType || (DataType = {}));\n// Returns the OCP provider matching the given infrastructure uuid\nconst _getOcpProvider = (ocpProviders, uuid) => {\n    let result;\n    if (ocpProviders && ocpProviders.data) {\n        for (const provider of ocpProviders.data) {\n            if (provider.infrastructure && provider.infrastructure.uuid === uuid) {\n                result = provider;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Returns new Provider matching the given provider type\n//\n// See https://issues.redhat.com/browse/COST-2202\nexport const filterProviders = (providers, sourceType) => {\n    if (!providers) {\n        return providers;\n    }\n    const data = providers.data.filter(provider => provider.source_type.toLowerCase() === sourceType);\n    const meta = Object.assign(Object.assign({}, providers.meta), { count: data.length });\n    return Object.assign(Object.assign({}, providers), { meta,\n        data });\n};\n// Ensure at least one source provider has data available\nconst _hasData = (providers, datumType) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            if (provider[datumType]) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one cloud source provider has data available\nconst _hasCloudData = (providers, ocpProviders, dataType) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            const ocpProvider = _getOcpProvider(ocpProviders, provider.uuid);\n            // Ensure AWS provider is filtered by OpenShift and has OCP data\n            if (ocpProvider && ocpProvider[dataType]) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one cloud source provider\nconst _hasCloudProvider = (providers, ocpProviders) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            const ocpProvider = _getOcpProvider(ocpProviders, provider.uuid);\n            // Ensure AWS provider is filtered by OpenShift\n            if (ocpProvider) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one cloud source provider has data available for the current month (e.g., \"AWS filtered by OpenShift\")\nexport const hasCloudCurrentMonthData = (providers, ocpProviders) => {\n    return _hasCloudData(providers, ocpProviders, DataType.currentMonthData);\n};\n// Ensure at least one cloud source provider has data available (e.g., \"AWS filtered by OpenShift\")\nexport const hasCloudData = (providers, ocpProviders) => {\n    return _hasCloudData(providers, ocpProviders, DataType.hasData);\n};\n// Ensure at least one cloud source provider has data available for the previous month (e.g., \"AWS filtered by OpenShift\")\nexport const hasCloudPreviousMonthData = (providers, ocpProviders) => {\n    return _hasCloudData(providers, ocpProviders, DataType.previousMonthData);\n};\n// Ensure at least one cloud source provider (e.g., \"AWS filtered by OpenShift\"), regardless if there is OCP data\nexport const hasCloudProvider = (providers, ocpProviders) => {\n    return _hasCloudProvider(providers, ocpProviders);\n};\n// Ensure at least one source provider has data available for the current month\nexport const hasCurrentMonthData = (providers) => {\n    return _hasData(providers, DataType.currentMonthData);\n};\n// Ensure at least one source provider has data available\nexport const hasData = (providers) => {\n    return _hasData(providers, DataType.hasData);\n};\n// Ensure at least one source provider has data available for the previous month\nexport const hasPreviousMonthData = (providers) => {\n    return _hasData(providers, DataType.previousMonthData);\n};\n","import { getQueryRoute } from 'api/queries/query';\nexport const getRouteForQuery = (query, location, reset = false) => {\n    // Reset pagination\n    if (reset) {\n        if (query.filter && query.filter.offset !== undefined) {\n            query.filter = Object.assign(Object.assign({}, query.filter), { offset: 0 });\n        }\n        if (query.offset !== undefined) {\n            query.offset = 0;\n        }\n    }\n    return `${location.pathname}?${getQueryRoute(query)}`;\n};\n"],"names":["ExternalLinkAltIconConfig","name","height","width","svgPath","yOffset","xOffset","ExternalLinkAltIcon","exports","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","EmptyState","variant","EmptyStateVariant","className","children","EmptyStateIcon","icon","ExclamationCircleIcon","Title","headingLevel","size","EmptyStateBody","href","target","rel","getProvidersQuery","query","stringify","encode","indices","styles","currencySelector","display","alignItems","currencyLabel","marginBottom","marginRight","whiteSpace","currencyOptions","label","messages","value","CurrencyBase","constructor","super","defaultState","isSelectOpen","state","getSelect","currency","isDisabled","showLabel","props","selectOptions","getSelectOptions","selection","find","option","Select","undefined","id","isOpen","onSelect","handleSelect","onToggle","handleToggle","selections","SelectVariant","map","SelectOption","key","intl","options","push","toString","formatMessage","units","event","isLocalStorage","setState","render","style","TitleSizes","mapStateToProps","CurrencyConnect","connect","injectIntl","NoDataStateBase","showReload","Button","onClick","window","location","reload","NoDataState","title","PageHeader","PageHeaderTitle","PageSection","src","alt","NoOptimizationsStateBase","NoOptimizationsState","iconSpacer","marginLeft","viewSources","marginTop","global_spacer_lg","NoProvidersStateBase","getDocLink","textKey","urlKey","getRouteToSources","providerType","docUrlKey","descKey","titleKey","component","NoProvidersState","Unavailable","getIdKeyForGroupBy","groupBy","account","aws_category","org_unit_id","region","service","awsDetails","minHeight","content","paddingBottom","paddingTop","paginationContainer","pagination","backgroundColor","global_BackgroundColor_light_100","global_spacer_md","tableContainer","toolbarContainer","costLabelUnit","fontSize","global_FontSize_sm","color","global_Color_100","costType","costValue","dateTitle","textAlign","header","padding","headerContent","justifyContent","headerContentLeft","headerContentRight","global_spacer_sm","groupByOptions","orgPathsType","resourcePathsType","tagPathsType","DetailsHeaderBase","handleOnCostTypeSelected","onCostTypeSelected","isExportsFeatureEnabled","onCurrencySelected","onGroupBySelected","providers","providersError","report","showContent","meta","count","hasCost","total","cost","onSelected","showCostCategories","showOrgs","showTags","format","providersQueryString","providersFetchStatus","featureFlags","DetailsHeader","reportPathsType","DetailsTableBase","columns","rows","initDatum","groupByCostCategory","groupByOrg","groupByTagKey","isAllSelected","router","selectedItems","computedItems","idKey","orderBy","isSortable","item","index","getTotalCost","monthOverMonth","getMonthOverMonthCost","desc","actions","getActions","Link","to","basePath","routes","description","type","cells","selected","val","selectionDisabled","reportQueryString","Math","abs","delta_value","percentage","delta_percent","showPercentage","showValue","iconOverride","percentValue","toFixed","componentDidMount","componentDidUpdate","prevProps","currentReport","data","JSON","isLoading","onSort","DetailsTable","orgType","resourceType","tagType","DetailsToolbarBase","getCategoryOptions","isCostCategoriesFeatureEnabled","orgReport","resourceReport","tagReport","sort","a","b","updateReport","fetchOrg","fetchResource","fetchTag","orgQueryString","resourceQueryString","tagQueryString","categoryOptions","isBulkSelectDisabled","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onExportClicked","onFilterAdded","onFilterRemoved","showBulkSelect","showExcludes","showExport","showFilter","baseQuery","filter","resolution","time_scope_units","time_scope_value","key_only","limit","resourceReportFetchStatus","tagReportFetchStatus","orgReportFetchStatus","mapDispatchToProps","DetailsToolbarConnect","DetailsToolbar","offset","exclude","filter_by","group_by","order_by","reportType","AwsDetails","stateProps","dispatchProps","isExportModalOpen","getComputedItems","groupById","getExportModal","items","isAllItems","onClose","handleExportModalClose","getPagination","isBottom","page","trunc","Pagination","isCompact","itemCount","onPerPageSelect","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","PaginationVariant","widgetId","getTable","reportFetchStatus","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","handleExportModalOpen","action","handleGroupBySelected","groupByKey","indexOf","slice","newQuery","parse","navigate","replace","isSelected","newItems","fetchReport","bind","prevState","reportError","noReport","noLocation","search","queryFromRoute","reportQuery","cost_type","delta","DetailsActionsBase","isDropdownOpen","handleOnSelect","handleOnToggle","showPriceListOption","source_uuid","redirectToCostModel","DropdownItem","unshift","includes","Dropdown","toggle","KebabToggle","isPlain","position","dropdownItems","costModels","DetailsActionsConnect","costColumn","paddingRight","defaultLabel","minWidth","emptyState","infoArrow","infoArrowDesc","bottom","infoDescription","lastReported","lastReportedColumn","managedColumn","nameColumn","DataTable","getEmptyState","isOptimizations","values","showMargin","getSortBy","direction","getSortParams","sortBy","handleOnSort","columnIndex","rowId","newRows","row","SortByDirection","handleOnRowClick","rowIndex","onRowClick","TableComposable","gridBreakPoint","hasSelectableRowCaption","TableVariant","Thead","Tr","col","Th","modifier","Tbody","Td","colSpan","Bullseye","Spinner","isSelectable","isHoverable","isRowSelected","_event","cellIndex","dataLabel","isActionCell","select","disable","reset","handleOnCurrencySelected","handleOnCostDistributionSelected","handleOnFilterAdded","filteredQuery","handleOnFilterRemoved","handleOnPerPageSelect","handleOnSetPage","date","DataType","_getOcpProvider","ocpProviders","uuid","result","provider","infrastructure","filterProviders","sourceType","source_type","toLowerCase","_hasData","datumType","_hasCloudData","dataType","ocpProvider","hasCloudCurrentMonthData","currentMonthData","hasCloudData","hasData","hasCloudPreviousMonthData","previousMonthData","hasCloudProvider","_hasCloudProvider","hasCurrentMonthData","hasPreviousMonthData","getRouteForQuery","pathname"],"sourceRoot":""}