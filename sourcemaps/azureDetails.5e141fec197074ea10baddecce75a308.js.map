{"version":3,"file":"js/azureDetails.775c2a5054cc0da7ef8c.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/external-link-alt-icon.js","webpack:///./src/utils/computedReport/getComputedAzureReportItems.ts","webpack:///./src/routes/views/details/azureDetails/azureDetails.styles.ts","webpack:///./src/routes/views/details/azureDetails/detailsHeader.styles.ts","webpack:///./src/routes/views/details/azureDetails/detailsHeader.tsx","webpack:///./src/routes/views/details/azureDetails/detailsTable.tsx","webpack:///./src/routes/views/details/azureDetails/detailsToolbar.tsx","webpack:///./src/routes/views/details/azureDetails/azureDetails.tsx","webpack:///./src/routes/views/details/components/actions/actions.tsx","webpack:///./src/routes/views/details/components/dataTable/dataTable.styles.ts","webpack:///./src/routes/views/details/components/dataTable/dataTable.tsx"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExternalLinkAltIcon = createIcon(ExternalLinkAltIconConfig);\n\nexport default ExternalLinkAltIcon;","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.subscription_guid) {\n        return 'subscription_guid';\n    }\n    if (groupBy.resource_location) {\n        return 'resource_location';\n    }\n    if (groupBy.service_name) {\n        return 'service_name';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    azureDetails: {\n        minHeight: '100%',\n    },\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    toolbarContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costValue: {\n        marginTop: global_spacer_lg.var,\n        marginBottom: 0,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    dateTitle: {\n        textAlign: 'end',\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentLeft: {\n        display: 'flex',\n        minHeight: '90px',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { TagPathsType } from 'api/tags/tag';\nimport { ExportsLink } from 'components/drawers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Currency } from 'routes/components/currency';\nimport { GroupBy } from 'routes/views/components/groupBy';\nimport { filterProviders } from 'routes/views/utils/providers';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedAzureReportItems';\nimport { getSinceDateRangeString } from 'utils/dates';\nimport { formatCurrency } from 'utils/format';\nimport { styles } from './detailsHeader.styles';\nconst groupByOptions = [\n    { label: 'subscription_guid', value: 'subscription_guid' },\n    { label: 'service_name', value: 'service_name' },\n    { label: 'resource_location', value: 'resource_location' },\n];\nconst tagReportPathsType = TagPathsType.azure;\nclass DetailsHeaderBase extends React.Component {\n    render() {\n        const { currency, groupBy, isCurrencyFeatureEnabled, isExportsFeatureEnabled, onCurrencySelected, onGroupBySelected, providers, providersError, report, intl, } = this.props;\n        const showContent = report && !providersError && providers && providers.meta && providers.meta.count > 0;\n        const hasCost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.azureDetailsTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    isCurrencyFeatureEnabled && React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(\"div\", { style: styles.headerContentLeft },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: !showContent, onSelected: onGroupBySelected, options: groupByOptions, showTags: true, tagReportPathsType: tagReportPathsType })),\n                Boolean(showContent) && (React.createElement(\"div\", null,\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: TitleSizes['4xl'] }, formatCurrency(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD')),\n                    React.createElement(\"div\", { style: styles.dateTitle }, getSinceDateRangeString()))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        isCurrencyFeatureEnabled: featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state),\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        providers: filterProviders(providers, ProviderType.azure),\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n    };\n});\nconst DetailsHeader = injectIntl(connect(mapStateToProps, {})(DetailsHeaderBase));\nexport { DetailsHeader };\n","import 'routes/views/details/components/dataTable/dataTable.scss';\nimport { ReportPathsType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { Actions } from 'routes/views/details/components/actions';\nimport { DataTable } from 'routes/views/details/components/dataTable';\nimport { styles } from 'routes/views/details/components/dataTable/dataTable.styles';\nimport { getBreakdownPath } from 'routes/views/utils/paths';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getForDateRangeString, getNoDataForDateRangeString } from 'utils/dates';\nimport { formatCurrency, formatPercentage } from 'utils/format';\nimport { formatPath } from 'utils/paths';\nimport { noPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nconst reportPathsType = ReportPathsType.azure;\nclass DetailsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { groupBy, groupByTagKey, intl, isAllSelected, report, selectedItems, router } = this.props;\n            if (!report) {\n                return;\n            }\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: (groupByTagKey ? groupByTagKey : groupBy),\n            });\n            const columns = groupByTagKey\n                ? [\n                    {\n                        name: '',\n                    },\n                    {\n                        name: intl.formatMessage(messages.tagNames),\n                    },\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign({ orderBy: groupBy, name: intl.formatMessage(messages.detailsResourceNames, { value: groupBy }) }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ];\n            computedItems.map((item, index) => {\n                const cost = this.getTotalCost(item, index);\n                const label = item && item.label !== null ? item.label : '';\n                const monthOverMonth = this.getMonthOverMonthCost(item, index);\n                const isDisabled = label === `${noPrefix}${groupBy}` || label === `${noPrefix}${groupByTagKey}`;\n                const desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                const actions = this.getActions(item, isDisabled);\n                const name = isDisabled ? label : (React.createElement(Link, { to: getBreakdownPath({\n                        basePath: formatPath(routes.azureDetailsBreakdown.path),\n                        description: item.id,\n                        groupBy,\n                        id: item.id,\n                        router,\n                        title: label.toString(),\n                    }) }, label));\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: (React.createElement(\"div\", null,\n                                name,\n                                desc)),\n                        },\n                        { value: React.createElement(\"div\", null, monthOverMonth) },\n                        { value: React.createElement(\"div\", null, cost), style: styles.managedColumn },\n                        { value: React.createElement(\"div\", null, actions) },\n                    ],\n                    isOpen: false,\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                    selectionDisabled: isDisabled,\n                });\n            });\n            this.setState({\n                columns,\n                rows,\n            });\n        };\n        this.getActions = (item, isDisabled) => {\n            const { groupBy, reportQueryString } = this.props;\n            return (React.createElement(Actions, { groupBy: groupBy, isDisabled: isDisabled, item: item, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getMonthOverMonthCost = (item, index) => {\n            const { intl } = this.props;\n            const value = formatCurrency(Math.abs(item.cost.total.value - item.delta_value), item.cost.total.units);\n            const percentage = item.delta_percent !== null ? formatPercentage(Math.abs(item.delta_percent)) : 0;\n            const showPercentage = !(percentage === 0 || percentage === '0.00');\n            const showValue = item.delta_percent !== null; // Workaround for https://github.com/project-koku/koku/issues/1395\n            let iconOverride;\n            if (showPercentage) {\n                iconOverride = 'iconOverride';\n                if (item.delta_percent !== null && item.delta_value < 0) {\n                    iconOverride += ' decrease';\n                }\n                if (item.delta_percent !== null && item.delta_value > 0) {\n                    iconOverride += ' increase';\n                }\n            }\n            if (!showValue) {\n                return getNoDataForDateRangeString();\n            }\n            else {\n                return (React.createElement(\"div\", { className: \"monthOverMonthOverride\" },\n                    React.createElement(\"div\", { className: iconOverride, key: `month-over-month-cost-${index}` },\n                        showPercentage ? intl.formatMessage(messages.percent, { value: percentage }) : React.createElement(EmptyValueState, null),\n                        Boolean(showPercentage && item.delta_percent !== null && item.delta_value > 0) && (React.createElement(\"span\", { className: \"fa fa-sort-up\", style: styles.infoArrow, key: `month-over-month-icon-${index}` })),\n                        Boolean(showPercentage && item.delta_percent !== null && item.delta_value < 0) && (React.createElement(\"span\", { className: \"fa fa-sort-down\", style: Object.assign(Object.assign({}, styles.infoArrow), styles.infoArrowDesc), key: `month-over-month-icon-${index}` }))),\n                    React.createElement(\"div\", { style: styles.infoDescription, key: `month-over-month-info-${index}` }, getForDateRangeString(value))));\n            }\n        };\n        this.getTotalCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.cost.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.cost.total.value, item.cost.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport || prevProps.selectedItems !== selectedItems) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { isLoading, onSelected, onSort, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, isLoading: isLoading, onSelected: onSelected, onSort: onSort, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst DetailsTable = injectIntl(withRouter(DetailsTableBase));\nexport { DetailsTable };\n","import { getQuery } from 'api/queries/azureQuery';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType, TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { isEqual } from 'utils/equal';\nimport { tagKey } from 'utils/props';\nconst tagReportType = TagType.tag;\nconst tagReportPathsType = TagPathsType.azure;\nexport class DetailsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { intl, tagReport } = this.props;\n            const options = [\n                {\n                    name: intl.formatMessage(messages.filterByValues, { value: 'subscription_guid' }),\n                    key: 'subscription_guid',\n                },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'service_name' }), key: 'service_name' },\n                {\n                    name: intl.formatMessage(messages.filterByValues, { value: 'resource_location' }),\n                    key: 'resource_location',\n                },\n            ];\n            if (tagReport && tagReport.data && tagReport.data.length) {\n                options.push({ name: intl.formatMessage(messages.filterByValues, { value: tagKey }), key: tagKey });\n            }\n            return options;\n        };\n    }\n    componentDidMount() {\n        const { fetchTag, tagReportFetchStatus, tagQueryString } = this.props;\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        }, () => {\n            if (tagReportFetchStatus !== FetchStatus.inProgress) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchTag, query, tagReport, tagReportFetchStatus, tagQueryString } = this.props;\n        if (!isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            }, () => {\n                if (tagReportFetchStatus !== FetchStatus.inProgress) {\n                    fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n                }\n            });\n        }\n        else if (query && !isEqual(query, prevProps.query)) {\n            if (tagReportFetchStatus !== FetchStatus.inProgress) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n        }\n    }\n    render() {\n        const { groupBy, isAllSelected, isDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onExportClicked, onFilterAdded, onFilterRemoved, pagination, query, selectedItems, tagReport, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, groupBy: groupBy, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onExportClicked: onExportClicked, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.azure, selectedItems: selectedItems, showBulkSelect: true, showExport: true, showFilter: true, tagReport: tagReport, tagReportPathsType: tagReportPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        key_only: true,\n        limit: 1000,\n    });\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, tagQueryString);\n    return {\n        tagReportFetchStatus,\n        tagReport,\n        tagQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst DetailsToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsToolbarBase);\nconst DetailsToolbar = injectIntl(DetailsToolbarConnect);\nexport { DetailsToolbar };\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getQuery, parseQuery } from 'api/queries/azureQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoData } from 'routes/state/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { ExportModal } from 'routes/views/components/export';\nimport { getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { handleCurrencySelected, handleFilterAdded, handleFilterRemoved, handlePerPageSelect, handleSetPage, handleSort, } from 'routes/views/utils/handles';\nimport { filterProviders, hasCurrentMonthData } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedAzureReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getCurrency } from 'utils/localStorage';\nimport { noPrefix, tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { styles } from './azureDetails.styles';\nimport { DetailsHeader } from './detailsHeader';\nimport { DetailsTable } from './detailsTable';\nimport { DetailsToolbar } from './detailsToolbar';\nconst baseQuery = {\n    delta: 'cost',\n    filter: {\n        limit: 10,\n        offset: 0,\n        resolution: 'monthly',\n        time_scope_units: 'month',\n        time_scope_value: -1,\n    },\n    exclude: {},\n    filter_by: {},\n    group_by: {\n        subscription_guid: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst reportType = ReportType.cost;\nconst reportPathsType = ReportPathsType.azure;\nclass AzureDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            isAllSelected: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey || groupById,\n            });\n        };\n        this.getExportModal = (computedItems) => {\n            const { query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `${noPrefix}${groupById}` || item.label === `${noPrefix}${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, router, report } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = offset / limit + 1;\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handlePerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.azure),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { query, report, reportFetchStatus, reportQueryString, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return (React.createElement(DetailsTable, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, groupByTagKey: groupByTagKey, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending) => handleSort(query, router, sortType, isSortAscending), report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, router, report } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(DetailsToolbar, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isDisabled || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onExportClicked: this.handleExportModalOpen, onFilterAdded: filter => handleFilterAdded(query, router, filter), onFilterRemoved: filter => handleFilterRemoved(query, router, filter), pagination: this.getPagination(isDisabled), query: query, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            const groupByKey = groupBy;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: '*',\n                }, order_by: { cost: 'desc' } });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.updateReport = () => {\n            const { fetchReport, reportQueryString } = this.props;\n            fetchReport(reportPathsType, reportType, reportQueryString);\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { currency, intl, providers, providersFetchStatus, query, report, reportError, reportFetchStatus, router, } = this.props;\n        const computedItems = this.getComputedItems();\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const isDisabled = computedItems.length === 0;\n        const title = intl.formatMessage(messages.azureDetailsTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.inProgress) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.complete) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: ProviderType.azure, title: title });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.azureDetails },\n            React.createElement(DetailsHeader, { currency: currency, groupBy: groupById, onCurrencySelected: value => handleCurrencySelected(query, router, value), onGroupBySelected: this.handleGroupBySelected, report: report }),\n            React.createElement(\"div\", { style: styles.content },\n                React.createElement(\"div\", { style: styles.toolbarContainer }, this.getToolbar(computedItems)),\n                this.getExportModal(computedItems),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const currency = featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state) ? getCurrency() : undefined;\n    const query = {\n        delta: 'cost',\n        filter: Object.assign(Object.assign({}, baseQuery.filter), queryFromRoute.filter),\n        filter_by: queryFromRoute.filter_by || baseQuery.filter_by,\n        exclude: queryFromRoute.exclude || baseQuery.exclude,\n        group_by: queryFromRoute.group_by || baseQuery.group_by,\n        order_by: queryFromRoute.order_by || baseQuery.order_by,\n    };\n    const reportQueryString = getQuery(Object.assign(Object.assign({}, query), { currency }));\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        currency,\n        providers: filterProviders(providers, ProviderType.azure),\n        providersError,\n        providersFetchStatus,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n        // Testing...\n        //\n        // providers: {\n        //   meta: {\n        //     count: 0,\n        //   },\n        // } as any,\n        // providersError: {\n        //   response: {\n        //     // status: 401\n        //     status: 500\n        //   }\n        // } as any,\n        // providersFetchStatus: FetchStatus.inProgress,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(AzureDetails)));\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ExportModal } from 'routes/views/components/export';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nimport { tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, reportPathsType, reportQueryString } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { count: 1, groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, intl, item: { source_uuid }, redirectToCostModel, router, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, intl.formatMessage(messages.detailsActionsExport)),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], router) }, intl.formatMessage(messages.detailsActionsPriceList)));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = injectIntl(withRouter(DetailsActionsConnect));\nexport default Actions;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    costColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingRight: 0,\n    },\n    defaultLabel: {\n        minWidth: '63px',\n    },\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    lastReported: {\n        textAlign: 'right',\n        paddingRight: '40px',\n    },\n    lastReportedColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    managedColumn: {\n        textAlign: 'right',\n    },\n    nameColumn: {\n        width: '1%',\n    },\n};\n","import { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport { parseQuery } from 'api/queries/ocpQuery';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass DataTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { intl, router } = this.props;\n            const queryFromRoute = parseQuery(router.location.search);\n            if (queryFromRoute.filter_by) {\n                for (const val of Object.values(queryFromRoute.filter_by)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, router } = this.props;\n            const orderBy = columns[index].orderBy;\n            const queryFromRoute = parseQuery(router.location.search);\n            const direction = queryFromRoute && queryFromRoute.order_by && queryFromRoute.order_by[orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected, rows } = this.props;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnRowClick = (event, rowIndex) => {\n            const { onRowClick, rows } = this.props;\n            rows.map(row => (row.selected = false));\n            rows[rowIndex].selected = true;\n            this.setState({ rows }, () => {\n                if (onRowClick) {\n                    onRowClick(event, rowIndex);\n                }\n            });\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isLoading, isRecommendations, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.dataTableAriaLabel), gridBreakPoint: \"grid-2xl\", hasSelectableRowCaption: isRecommendations },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { isSelectable: isRecommendations, isHoverable: isRecommendations, isRowSelected: isRecommendations && row.selected, onRowClick: _event => this.handleOnRowClick(_event, rowIndex), key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 && !isRecommendations ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${cellIndex}-${rowIndex}`, modifier: \"nowrap\", select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    }, style: item.style })) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", isActionCell: !isRecommendations && cellIndex === row.cells.length - 1, style: item.style }, item.value))))))))),\n            Boolean(rows.length === 0) && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(DataTable));\n"],"names":["ExternalLinkAltIconConfig","name","height","width","svgPath","yOffset","xOffset","ExternalLinkAltIcon","getIdKeyForGroupBy","groupBy","subscription_guid","resource_location","service_name","styles","azureDetails","minHeight","content","paddingBottom","global_spacer_lg","paddingTop","paginationContainer","marginLeft","marginRight","pagination","backgroundColor","global_BackgroundColor_light_100","global_spacer_md","tableContainer","toolbarContainer","costValue","marginTop","marginBottom","costLabelUnit","fontSize","global_FontSize_sm","color","global_Color_100","dateTitle","textAlign","header","padding","headerContent","display","justifyContent","headerContentLeft","headerContentRight","title","global_spacer_sm","groupByOptions","label","value","tagReportPathsType","DetailsHeaderBase","render","currency","isCurrencyFeatureEnabled","isExportsFeatureEnabled","onCurrencySelected","onGroupBySelected","providers","providersError","report","intl","this","props","showContent","meta","count","hasCost","total","cost","style","Title","headingLevel","size","TitleSizes","formatMessage","messages","onSelect","isDisabled","onSelected","options","showTags","Boolean","format","units","mapStateToProps","state","providersQueryString","providersFetchStatus","featureFlags","DetailsHeader","injectIntl","connect","reportPathsType","DetailsTableBase","constructor","super","arguments","columns","rows","initDatum","groupByTagKey","isAllSelected","selectedItems","router","computedItems","idKey","Object","assign","orderBy","length","isSortable","map","item","index","getTotalCost","monthOverMonth","getMonthOverMonthCost","desc","id","actions","getActions","Link","to","basePath","routes","description","toString","push","cells","isOpen","selected","undefined","find","val","selectionDisabled","setState","reportQueryString","Math","abs","delta_value","percentage","delta_percent","showPercentage","showValue","iconOverride","className","key","percentValue","toFixed","componentDidMount","componentDidUpdate","prevProps","currentReport","data","JSON","stringify","isLoading","onSort","DetailsTable","tagReportType","DetailsToolbarBase","defaultState","getCategoryOptions","tagReport","fetchTag","tagReportFetchStatus","tagQueryString","categoryOptions","query","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onExportClicked","onFilterAdded","onFilterRemoved","resourcePathsType","showBulkSelect","showExport","showFilter","filter","resolution","time_scope_units","time_scope_value","key_only","limit","mapDispatchToProps","DetailsToolbarConnect","DetailsToolbar","baseQuery","delta","offset","exclude","filter_by","group_by","order_by","reportType","AzureDetails","stateProps","dispatchProps","isExportModalOpen","getComputedItems","groupById","getExportModal","items","isAllItems","onClose","handleExportModalClose","getPagination","isBottom","page","Pagination","isCompact","itemCount","onPerPageSelect","event","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","variant","PaginationVariant","widgetId","getTable","reportFetchStatus","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","handleExportModalOpen","action","handleGroupBySelected","groupByKey","newQuery","parse","navigate","location","replace","isSelected","newItems","updateReport","fetchReport","bind","prevState","reportError","noReport","noLocation","search","providerType","queryFromRoute","DetailsActionsBase","isDropdownOpen","handleOnSelect","handleOnToggle","showPriceListOption","source_uuid","redirectToCostModel","DropdownItem","component","onClick","unshift","includes","Dropdown","toggle","KebabToggle","onToggle","isPlain","position","dropdownItems","costModels","DetailsActionsConnect","costColumn","paddingRight","defaultLabel","minWidth","emptyState","infoArrow","infoArrowDesc","bottom","infoDescription","lastReported","lastReportedColumn","managedColumn","nameColumn","DataTable","getEmptyState","values","showMargin","EmptyState","EmptyStateIcon","icon","EmptyStateBody","getSortBy","direction","getSortParams","sortBy","handleOnSort","columnIndex","rowId","newRows","row","SortByDirection","handleOnRowClick","rowIndex","onRowClick","isRecommendations","TableComposable","gridBreakPoint","hasSelectableRowCaption","Thead","Tr","col","Th","modifier","sort","Tbody","Td","colSpan","Bullseye","Spinner","isSelectable","isHoverable","isRowSelected","_event","cellIndex","dataLabel","isActionCell","select","disable"],"sourceRoot":""}