{"version":3,"file":"js/ocpDetails.3cd0d67cdeda3509a1f1.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/external-link-alt-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_FontSize_md.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_xs.js","webpack:///./src/routes/components/icons/optimizationIcon/optimizationIcon.tsx","webpack:///./src/routes/state/noOptimizations/noOptimizationsState.tsx","webpack:///./src/routes/views/details/components/actions/actions.tsx","webpack:///./src/routes/views/details/components/columnManagement/columnManagementModal.tsx","webpack:///./src/routes/views/details/components/dataTable/dataTable.styles.ts","webpack:///./src/routes/views/details/components/dataTable/dataTable.tsx","webpack:///./src/routes/views/details/ocpDetails/detailsHeader.styles.ts","webpack:///./src/utils/computedReport/getComputedOcpReportItems.ts","webpack:///./src/routes/views/details/ocpDetails/detailsHeader.tsx","webpack:///./src/routes/views/details/ocpDetails/detailsOptimization.tsx","webpack:///./src/routes/views/details/ocpDetails/detailsTable.tsx","webpack:///./src/routes/views/details/ocpDetails/detailsToolbar.tsx","webpack:///./src/routes/views/details/ocpDetails/ocpDetails.styles.ts","webpack:///./src/routes/views/details/ocpDetails/ocpDetails.tsx"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExternalLinkAltIcon = createIcon(ExternalLinkAltIconConfig);\n\nexport default ExternalLinkAltIcon;","\"use strict\";\nexports.__esModule = true;\nexports.global_FontSize_md = {\n  \"name\": \"--pf-global--FontSize--md\",\n  \"value\": \"1rem\",\n  \"var\": \"var(--pf-global--FontSize--md)\"\n};\nexports[\"default\"] = exports.global_FontSize_md;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_xs = {\n  \"name\": \"--pf-global--spacer--xs\",\n  \"value\": \"0.25rem\",\n  \"var\": \"var(--pf-global--spacer--xs)\"\n};\nexports[\"default\"] = exports.global_spacer_xs;","import './optimizationIcon.scss';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nconst icon = require('./Red_Hat-IT_Optimization-Gray.svg');\nconst OptimizationIcon = ({ className, intl }) => {\n    return (React.createElement(\"img\", { className: `optimization-icon ${className}`, src: icon, alt: intl.formatMessage(messages.optimizations), \"aria-hidden\": \"true\" }));\n};\nexport default injectIntl(OptimizationIcon);\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { OptimizationIcon } from 'routes/components/icons/optimizationIcon';\nclass NoOptimizationsStateBase extends React.Component {\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: OptimizationIcon }),\n            React.createElement(Title, { headingLevel: \"h1\", size: \"lg\" }, intl.formatMessage(messages.noOptimizationsTitle)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(messages.noOptimizationsDesc))));\n    }\n}\nconst NoOptimizationsState = injectIntl(NoOptimizationsStateBase);\nexport { NoOptimizationsState };\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ExportModal } from 'routes/views/components/export';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nimport { tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, reportPathsType, reportQueryString } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { count: 1, groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, intl, item: { source_uuid }, redirectToCostModel, router, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, intl.formatMessage(messages.detailsActionsExport)),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], router) }, intl.formatMessage(messages.detailsActionsPriceList)));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = injectIntl(withRouter(DetailsActionsConnect));\nexport default Actions;\n","import { Button, ButtonVariant, DataList, DataListCell, DataListCheck, DataListItem, DataListItemCells, DataListItemRow, Modal, ModalVariant, Text, TextContent, TextVariants, } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nexport const initHiddenColumns = (options) => {\n    const hiddenColumns = new Set();\n    options.map(option => {\n        if (option.hidden) {\n            hiddenColumns.add(option.value);\n        }\n    });\n    return hiddenColumns;\n};\nexport class ColumnManagementModalBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            hiddenColumns: initHiddenColumns(this.props.options),\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getHidden = (value) => {\n            const { hiddenColumns } = this.state;\n            const result = new Set(hiddenColumns);\n            if (!result.delete(value)) {\n                result.add(value);\n            }\n            return result;\n        };\n        this.isHidden = (value) => {\n            const { hiddenColumns } = this.state;\n            return hiddenColumns.has(value);\n        };\n        this.handleChange = (checked, event) => {\n            const hiddenColumns = this.getHidden(event.target.id);\n            this.setState({ hiddenColumns });\n        };\n        this.handleClose = () => {\n            // Reset defult state upon close\n            this.setState(Object.assign({}, this.defaultState), () => {\n                this.props.onClose(false);\n            });\n        };\n        this.handleSave = () => {\n            const { hiddenColumns } = this.state;\n            this.props.onSave(hiddenColumns);\n            this.handleClose();\n        };\n        this.selectAll = () => {\n            this.setState({ hiddenColumns: new Set() });\n        };\n    }\n    componentDidUpdate(prevProps) {\n        const { options } = this.props;\n        if (prevProps.options !== options) {\n            const hiddenColumns = initHiddenColumns(options);\n            this.setState({ hiddenColumns });\n        }\n    }\n    render() {\n        const { options, intl } = this.props;\n        return (React.createElement(Modal, { description: React.createElement(TextContent, null,\n                React.createElement(Text, { component: TextVariants.p }, intl.formatMessage(messages.manageColumnsDesc)),\n                React.createElement(Button, { isInline: true, onClick: this.selectAll, variant: \"link\" }, intl.formatMessage(messages.selectAll))), \n            // style={styles.modal}\n            isOpen: this.props.isOpen, onClose: this.handleClose, title: intl.formatMessage(messages.manageColumnsTitle), variant: ModalVariant.medium, actions: [\n                React.createElement(Button, { key: \"save\", onClick: this.handleSave, variant: ButtonVariant.link }, intl.formatMessage(messages.save)),\n                React.createElement(Button, { key: \"cancel\", onClick: this.handleClose, variant: ButtonVariant.link }, intl.formatMessage(messages.cancel)),\n            ] },\n            React.createElement(DataList, { \"aria-label\": intl.formatMessage(messages.manageColumnsAriaLabel), id: \"table-column-management\", isCompact: true }, options.map(option => (React.createElement(DataListItem, { \"aria-labelledby\": option.value, key: option.value },\n                React.createElement(DataListItemRow, null,\n                    React.createElement(DataListCheck, { \"aria-labelledby\": `${option.value}Label`, isChecked: !this.isHidden(option.value), name: option.value, id: option.value, onChange: this.handleChange }),\n                    React.createElement(DataListItemCells, { dataListCells: [\n                            React.createElement(DataListCell, { id: `${option.value}Label`, key: \"table-column-management-item1\" },\n                                React.createElement(\"span\", null, intl.formatMessage(option.label))),\n                            React.createElement(DataListCell, { key: \"table-column-management-item2\" }, option.description && React.createElement(\"span\", null, intl.formatMessage(option.description))),\n                        ] }))))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {};\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst ColumnManagementModalConnect = connect(mapStateToProps, mapDispatchToProps)(ColumnManagementModalBase);\nconst ColumnManagementModal = injectIntl(ColumnManagementModalConnect);\nexport default ColumnManagementModal;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    costColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingRight: 0,\n    },\n    defaultLabel: {\n        minWidth: '63px',\n    },\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    lastReported: {\n        textAlign: 'right',\n        paddingRight: '40px',\n    },\n    lastReportedColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    managedColumn: {\n        textAlign: 'right',\n    },\n    nameColumn: {\n        width: '1%',\n    },\n};\n","import './dataTable.scss';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport { parseQuery } from 'api/queries/ocpQuery';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { NoOptimizationsState } from 'routes/state/noOptimizations/noOptimizationsState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass DataTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { intl, isOptimizations, router } = this.props;\n            const queryFromRoute = parseQuery(router.location.search);\n            if (queryFromRoute.filter_by) {\n                for (const val of Object.values(queryFromRoute.filter_by)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            if (isOptimizations) {\n                return React.createElement(NoOptimizationsState, null);\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, router } = this.props;\n            const orderBy = columns[index].orderBy;\n            const queryFromRoute = parseQuery(router.location.search);\n            const direction = queryFromRoute && queryFromRoute.order_by && queryFromRoute.order_by[orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected, rows } = this.props;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnRowClick = (event, rowIndex) => {\n            const { onRowClick, rows } = this.props;\n            rows.map(row => (row.selected = false));\n            rows[rowIndex].selected = true;\n            this.setState({ rows }, () => {\n                if (onRowClick) {\n                    onRowClick(event, rowIndex);\n                }\n            });\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isLoading, isOptimizations, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.dataTableAriaLabel), className: \"tableOverride\", gridBreakPoint: \"grid-2xl\", hasSelectableRowCaption: isOptimizations },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { isSelectable: isOptimizations, isHoverable: isOptimizations, isRowSelected: isOptimizations && row.selected, onRowClick: isOptimizations ? _event => this.handleOnRowClick(_event, rowIndex) : undefined, key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 && !isOptimizations ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${cellIndex}-${rowIndex}`, modifier: \"nowrap\", select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    }, style: item.style })) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", isActionCell: !isOptimizations && cellIndex === row.cells.length - 1, style: item.style }, item.value))))))))),\n            Boolean(rows.length === 0) && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(DataTable));\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costDistribution: {\n        display: 'flex',\n        marginLeft: global_spacer_lg.var,\n    },\n    costValue: {\n        marginTop: global_spacer_lg.var,\n        marginBottom: 0,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    dateTitle: {\n        textAlign: 'end',\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentLeft: {\n        display: 'flex',\n        minHeight: '90px',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    info: {\n        verticalAlign: 'middle',\n    },\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    return 'date';\n}\n","import { Title, TitleSizes, Tooltip } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { TagPathsType } from 'api/tags/tag';\nimport { ExportsLink } from 'components/drawers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Currency } from 'routes/components/currency';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { CostDistribution } from 'routes/views/components/costDistribution';\nimport { GroupBy } from 'routes/views/components/groupBy';\nimport { filterProviders } from 'routes/views/utils/providers';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedOcpReportItems';\nimport { getSinceDateRangeString } from 'utils/dates';\nimport { formatCurrency } from 'utils/format';\nimport { styles } from './detailsHeader.styles';\nconst groupByOptions = [\n    { label: 'cluster', value: 'cluster' },\n    { label: 'node', value: 'node' },\n    { label: 'project', value: 'project' },\n];\nconst tagReportPathsType = TagPathsType.ocp;\nclass DetailsHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { costDistribution, currency, groupBy, isExportsFeatureEnabled, onCostDistributionSelected, onCurrencySelected, onGroupBySelected, providers, providersError, report, intl, } = this.props;\n        const showContent = report && !providersError && providers && providers.meta && providers.meta.count > 0;\n        let cost = React.createElement(EmptyValueState, null);\n        let supplementaryCost = React.createElement(EmptyValueState, null);\n        let infrastructureCost = React.createElement(EmptyValueState, null);\n        if (report && report.meta && report.meta.total) {\n            const hasCost = report.meta.total.cost && report.meta.total.cost[costDistribution];\n            const hasSupplementaryCost = report.meta.total.supplementary && report.meta.total.supplementary.total;\n            const hasInfrastructureCost = report.meta.total.infrastructure && report.meta.total.infrastructure.total;\n            cost = formatCurrency(hasCost ? report.meta.total.cost[costDistribution].value : 0, hasCost ? report.meta.total.cost[costDistribution].units : 'USD');\n            supplementaryCost = formatCurrency(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost ? report.meta.total.supplementary.total.units : 'USD');\n            infrastructureCost = formatCurrency(hasInfrastructureCost ? report.meta.total.infrastructure.total.value : 0, hasInfrastructureCost ? report.meta.total.infrastructure.total.units : 'USD');\n        }\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.ocpDetailsTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(\"div\", { style: styles.headerContentLeft },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: !showContent, onSelected: onGroupBySelected, options: groupByOptions, showTags: true, tagReportPathsType: tagReportPathsType }),\n                    groupBy === 'project' && (React.createElement(\"div\", { style: styles.costDistribution },\n                        React.createElement(CostDistribution, { costDistribution: costDistribution, onSelect: onCostDistributionSelected })))),\n                Boolean(showContent) && (React.createElement(\"div\", null,\n                    React.createElement(Tooltip, { content: intl.formatMessage(messages.dashboardTotalCostTooltip, {\n                            infrastructureCost,\n                            supplementaryCost,\n                        }), enableFlip: true },\n                        React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: TitleSizes['4xl'] }, cost)),\n                    React.createElement(\"div\", { style: styles.dateTitle }, getSinceDateRangeString()))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        providers: filterProviders(providers, ProviderType.ocp),\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n    };\n});\nconst DetailsHeader = injectIntl(connect(mapStateToProps, {})(DetailsHeaderBase));\nexport { DetailsHeader };\n","import { getQuery } from 'api/queries/query';\nimport { RosPathsType, RosType } from 'api/ros/ros';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { getBreakdownPath } from 'routes/views/utils/paths';\nimport { createMapStateToProps } from 'store/common';\nimport { rosActions, rosSelectors } from 'store/ros';\nimport { formatPath } from 'utils/paths';\nimport { withRouter } from 'utils/router';\nconst reportPathsType = RosPathsType.recommendations;\nconst reportType = RosType.ros;\nclass DetailsOptimization extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n        // TBD...\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.updateReport = () => {\n            const { fetchReport, reportQueryString } = this.props;\n            fetchReport(reportPathsType, reportType, reportQueryString);\n        };\n        this.getBreakdownLink = count => {\n            const { project, router } = this.props;\n            if (count === 0 || project === undefined) {\n                return count;\n            }\n            return (React.createElement(Link, { to: getBreakdownPath({\n                    basePath: formatPath(routes.ocpDetailsBreakdown.path),\n                    groupBy: 'project',\n                    id: project,\n                    isOptimizationsTab: true,\n                    router,\n                    title: project,\n                }) }, count));\n        };\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    render() {\n        const { report } = this.props;\n        const count = report && report.meta ? report.meta.count : 0;\n        // Todo: Add link to breakdown page\n        return React.createElement(\"span\", null, this.getBreakdownLink(count));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { project }) => {\n    const reportQuery = {\n        project, // project filter\n    };\n    const reportQueryString = getQuery(reportQuery);\n    const report = rosSelectors.selectRos(state, reportPathsType, reportType, reportQueryString);\n    const reportError = rosSelectors.selectRosError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = rosSelectors.selectRosFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    return {\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: rosActions.fetchRosReport,\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DetailsOptimization));\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport 'routes/views/details/components/dataTable/dataTable.scss';\nimport { Label, Tooltip } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { ReportPathsType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { Actions } from 'routes/views/details/components/actions';\nimport { DataTable } from 'routes/views/details/components/dataTable';\nimport { styles } from 'routes/views/details/components/dataTable/dataTable.styles';\nimport { getBreakdownPath } from 'routes/views/utils/paths';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getForDateRangeString, getNoDataForDateRangeString } from 'utils/dates';\nimport { formatCurrency, formatPercentage } from 'utils/format';\nimport { formatPath } from 'utils/paths';\nimport { classificationDefault, classificationPlatform, classificationUnallocated, noPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport DetailsOptimization from './detailsOptimization';\nexport const DetailsTableColumnIds = {\n    infrastructure: 'infrastructure',\n    monthOverMonth: 'monthOverMonth',\n    supplementary: 'supplementary',\n};\nconst reportPathsType = ReportPathsType.ocp;\nclass DetailsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { groupBy, groupByTagKey, hiddenColumns, intl, isAllSelected, isRosFeatureEnabled, report, router, selectedItems, } = this.props;\n            if (!report) {\n                return;\n            }\n            const isGroupByProject = groupBy === 'project';\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: (groupByTagKey ? groupByTagKey : groupBy),\n            });\n            const columns = groupByTagKey\n                ? [\n                    // Sorting with tag keys is not supported\n                    {\n                        name: '',\n                    },\n                    {\n                        name: intl.formatMessage(messages.tagNames),\n                        style: groupBy === 'project' ? styles.nameColumn : undefined,\n                    },\n                    {\n                        hidden: !isGroupByProject,\n                        name: '', // Default & Overhead column\n                    },\n                    {\n                        hidden: !(isGroupByProject && isRosFeatureEnabled),\n                        name: intl.formatMessage(messages.optimizations),\n                    },\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    {\n                        id: DetailsTableColumnIds.infrastructure,\n                        name: intl.formatMessage(messages.ocpDetailsInfrastructureCost),\n                        style: styles.managedColumn,\n                    },\n                    {\n                        id: DetailsTableColumnIds.supplementary,\n                        name: intl.formatMessage(messages.ocpDetailsSupplementaryCost),\n                        style: styles.managedColumn,\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: false })),\n                    {\n                        name: '',\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign(Object.assign({ orderBy: groupBy, name: intl.formatMessage(messages.detailsResourceNames, { value: groupBy }) }, (computedItems.length && { isSortable: true })), { style: groupBy === 'project' ? styles.nameColumn : undefined }),\n                    {\n                        hidden: !isGroupByProject,\n                        name: '', // Default & Overhead column\n                    },\n                    {\n                        hidden: !(isGroupByProject && isRosFeatureEnabled),\n                        name: intl.formatMessage(messages.optimizations),\n                    },\n                    {\n                        id: DetailsTableColumnIds.monthOverMonth,\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    {\n                        id: DetailsTableColumnIds.infrastructure,\n                        orderBy: 'infrastructure_cost',\n                        name: intl.formatMessage(messages.ocpDetailsInfrastructureCost),\n                        style: styles.managedColumn,\n                        // Sort by infrastructure_cost is not supported -- https://github.com/project-koku/koku/issues/796\n                        // ...(computedItems.length && { isSortable: true }),\n                    },\n                    {\n                        id: DetailsTableColumnIds.supplementary,\n                        orderBy: 'supplementary_cost',\n                        name: intl.formatMessage(messages.ocpDetailsSupplementaryCost),\n                        style: styles.managedColumn,\n                        // Sort by supplementary_cost is not supported -- https://github.com/project-koku/koku/issues/796\n                        // ...(computedItems.length && { isSortable: true }),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ];\n            computedItems.map((item, index) => {\n                const cost = this.getTotalCost(item, index);\n                const label = item && item.label !== null ? item.label : '';\n                const monthOverMonth = this.getMonthOverMonthCost(item, index);\n                const supplementaryCost = this.getSupplementaryCost(item, index);\n                const InfrastructureCost = this.getInfrastructureCost(item, index);\n                const isOverheadCosts = (item.cost.platformDistributed && item.cost.platformDistributed.value > 0) ||\n                    (item.cost.workerUnallocatedDistributed && item.cost.workerUnallocatedDistributed.value > 0);\n                const isPlatformCosts = item.classification === classificationPlatform;\n                const isUnallocatedCosts = item.classification === classificationUnallocated;\n                const desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                const isDisabled = label === `${noPrefix}${groupBy}` || label === `${noPrefix}${groupByTagKey}` || isUnallocatedCosts;\n                const actions = this.getActions(item, isDisabled);\n                const name = isDisabled ? label : (React.createElement(Link, { to: getBreakdownPath({\n                        basePath: formatPath(routes.ocpDetailsBreakdown.path),\n                        description: item.id,\n                        id: item.id,\n                        isPlatformCosts,\n                        groupBy,\n                        router,\n                        title: label.toString(),\n                    }) }, label));\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: (React.createElement(React.Fragment, null,\n                                React.createElement(\"div\", null, name),\n                                React.createElement(\"div\", { style: styles.infoDescription }, desc))),\n                        },\n                        {\n                            hidden: !isGroupByProject,\n                            value: item.classification === classificationDefault ? (React.createElement(\"div\", null,\n                                React.createElement(Label, { variant: \"outline\", color: \"green\" }, intl.formatMessage(messages.default)))) : isOverheadCosts ? (React.createElement(Tooltip, { content: intl.formatMessage(messages.overheadDesc), enableFlip: true },\n                                React.createElement(Label, { variant: \"outline\", color: \"orange\" }, intl.formatMessage(messages.overhead)))) : (React.createElement(\"div\", { style: styles.defaultLabel })),\n                        },\n                        {\n                            hidden: !(isGroupByProject && isRosFeatureEnabled),\n                            value: !isPlatformCosts && !isDisabled && (React.createElement(\"div\", null,\n                                React.createElement(DetailsOptimization, { project: label }))),\n                        },\n                        { value: React.createElement(\"div\", null, monthOverMonth), id: DetailsTableColumnIds.monthOverMonth },\n                        {\n                            value: React.createElement(\"div\", null, InfrastructureCost),\n                            id: DetailsTableColumnIds.infrastructure,\n                            style: styles.managedColumn,\n                        },\n                        {\n                            value: React.createElement(\"div\", null, supplementaryCost),\n                            id: DetailsTableColumnIds.supplementary,\n                            style: styles.managedColumn,\n                        },\n                        { value: React.createElement(\"div\", null, cost), style: styles.managedColumn },\n                        { value: React.createElement(\"div\", null, actions) },\n                    ],\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                    selectionDisabled: isDisabled,\n                });\n            });\n            const filteredColumns = columns.filter(column => !hiddenColumns.has(column.id) && !column.hidden);\n            const filteredRows = rows.map((_a) => {\n                var row = __rest(_a, []);\n                row.cells = row.cells.filter(cell => !hiddenColumns.has(cell.id) && !cell.hidden);\n                return row;\n            });\n            this.setState({\n                columns: filteredColumns,\n                rows: filteredRows,\n            });\n        };\n        this.getActions = (item, isDisabled) => {\n            const { groupBy, reportQueryString } = this.props;\n            return (React.createElement(Actions, { groupBy: groupBy, isDisabled: isDisabled, item: item, providerType: ProviderType.ocp, reportPathsType: reportPathsType, reportQueryString: reportQueryString, showPriceListOption: groupBy === 'cluster' }));\n        };\n        this.getSupplementaryCost = (item, index) => {\n            const { costDistribution, report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost[costDistribution]\n                ? report.meta.total.cost[costDistribution].value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.supplementary.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.supplementary.total.value, item.supplementary.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n        this.getInfrastructureCost = (item, index) => {\n            const { costDistribution, report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost[costDistribution]\n                ? report.meta.total.cost[costDistribution].value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.infrastructure.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.infrastructure.total.value, item.infrastructure.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n        this.getMonthOverMonthCost = (item, index) => {\n            const { costDistribution, intl } = this.props;\n            const value = formatCurrency(Math.abs(item.cost[costDistribution].value - item.delta_value), item.cost[costDistribution].units);\n            const percentage = item.delta_percent !== null ? formatPercentage(Math.abs(item.delta_percent)) : 0;\n            const showPercentage = !(percentage === 0 || percentage === '0.00');\n            const showValue = item.delta_percent !== null; // Workaround for https://github.com/project-koku/koku/issues/1395\n            let iconOverride;\n            if (showPercentage) {\n                iconOverride = 'iconOverride';\n                if (item.delta_percent !== null && item.delta_value < 0) {\n                    iconOverride += ' decrease';\n                }\n                if (item.delta_percent !== null && item.delta_value > 0) {\n                    iconOverride += ' increase';\n                }\n            }\n            if (!showValue) {\n                return getNoDataForDateRangeString();\n            }\n            else {\n                return (React.createElement(\"div\", { className: \"monthOverMonthOverride\" },\n                    React.createElement(\"div\", { className: iconOverride, key: `month-over-month-cost-${index}` },\n                        showPercentage ? intl.formatMessage(messages.percent, { value: percentage }) : React.createElement(EmptyValueState, null),\n                        Boolean(showPercentage && item.delta_percent !== null && item.delta_value > 0) && (React.createElement(\"span\", { className: \"fa fa-sort-up\", style: styles.infoArrow, key: `month-over-month-icon-${index}` })),\n                        Boolean(showPercentage && item.delta_percent !== null && item.delta_value < 0) && (React.createElement(\"span\", { className: \"fa fa-sort-down\", style: Object.assign(Object.assign({}, styles.ininfoArrow), styles.infoArrowDesc), key: `month-over-month-icon-${index}` }))),\n                    React.createElement(\"div\", { style: styles.infoDescription, key: `month-over-month-info-${index}` }, getForDateRangeString(value))));\n            }\n        };\n        this.getTotalCost = (item, index) => {\n            const { costDistribution, report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost[costDistribution]\n                ? report.meta.total.cost[costDistribution].value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.cost[costDistribution].value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.cost[costDistribution].value, item.cost[costDistribution].units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { costDistribution, hiddenColumns, report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport ||\n            prevProps.costDistribution !== costDistribution ||\n            prevProps.selectedItems !== selectedItems ||\n            prevProps.hiddenColumns !== hiddenColumns) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { isLoading, onSelected, onSort, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, isLoading: isLoading, onSelected: onSelected, onSort: onSort, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst DetailsTable = injectIntl(withRouter(DetailsTableBase));\nexport { DetailsTable };\n","import { getQuery } from 'api/queries/ocpQuery';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType, TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { isEqual } from 'utils/equal';\nimport { tagKey } from 'utils/props';\nconst tagReportType = TagType.tag;\nconst tagReportPathsType = TagPathsType.ocp;\nexport class DetailsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { intl, tagReport } = this.props;\n            const options = [\n                { name: intl.formatMessage(messages.filterByValues, { value: 'cluster' }), key: 'cluster' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'node' }), key: 'node' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'project' }), key: 'project' },\n            ];\n            if (tagReport && tagReport.data && tagReport.data.length) {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: tagKey }),\n                    key: tagKey,\n                });\n            }\n            return options;\n        };\n        this.updateReport = () => {\n            const { fetchTag, tagQueryString } = this.props;\n            fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        }, () => {\n            this.updateReport();\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { query, tagReport } = this.props;\n        if (!isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            }, () => {\n                this.updateReport();\n            });\n        }\n        else if (query && !isEqual(query, prevProps.query)) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { groupBy, isAllSelected, isDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onColumnManagementClicked, onExportClicked, onFilterAdded, onFilterRemoved, onPlatformCostsChanged, pagination, query, selectedItems, tagReport, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, groupBy: groupBy, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onColumnManagementClicked: onColumnManagementClicked, onExportClicked: onExportClicked, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, onPlatformCostsChanged: onPlatformCostsChanged, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.ocp, selectedItems: selectedItems, showBulkSelect: true, showColumnManagement: true, showExcludes: true, showExport: true, showFilter: true, showPlatformCosts: groupBy === 'project', tagReport: tagReport, tagReportPathsType: tagReportPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        key_only: true,\n        limit: 1000,\n    });\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, tagQueryString);\n    return {\n        tagReport,\n        tagReportFetchStatus,\n        tagQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst DetailsToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsToolbarBase);\nconst DetailsToolbar = injectIntl(DetailsToolbarConnect);\nexport { DetailsToolbar };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    ocpDetails: {\n        minHeight: '100vh',\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    toolbarContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getQuery, parseQuery } from 'api/queries/ocpQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport { cloneDeep } from 'lodash';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoData } from 'routes/state/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { ExportModal } from 'routes/views/components/export';\nimport { ColumnManagementModal, initHiddenColumns } from 'routes/views/details/components/columnManagement';\nimport { getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { handleCostDistributionSelected, handleCurrencySelected, handleFilterAdded, handleFilterRemoved, handlePerPageSelect, handleSetPage, handleSort, } from 'routes/views/utils/handles';\nimport { filterProviders, hasCurrentMonthData } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedOcpReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getCostDistribution, getCurrency } from 'utils/localStorage';\nimport { noPrefix, platformCategoryKey, tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { DetailsHeader } from './detailsHeader';\nimport { DetailsTable, DetailsTableColumnIds } from './detailsTable';\nimport { DetailsToolbar } from './detailsToolbar';\nimport { styles } from './ocpDetails.styles';\nconst baseQuery = {\n    filter: {\n        limit: 10,\n        offset: 0,\n    },\n    filter_by: {},\n    exclude: {},\n    group_by: {\n        project: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst defaultColumnOptions = [\n    { label: messages.monthOverMonthChange, value: DetailsTableColumnIds.monthOverMonth },\n    {\n        description: messages.ocpDetailsInfrastructureCostDesc,\n        label: messages.ocpDetailsInfrastructureCost,\n        value: DetailsTableColumnIds.infrastructure,\n        hidden: true,\n    },\n    {\n        description: messages.ocpDetailsSupplementaryCostDesc,\n        label: messages.ocpDetailsSupplementaryCost,\n        value: DetailsTableColumnIds.supplementary,\n        hidden: true,\n    },\n];\nconst reportType = ReportType.cost;\nconst reportPathsType = ReportPathsType.ocp;\nclass OcpDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            hiddenColumns: initHiddenColumns(defaultColumnOptions),\n            isAllSelected: false,\n            isColumnManagementModalOpen: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getColumnManagementModal = () => {\n            const { hiddenColumns, isColumnManagementModalOpen } = this.state;\n            const options = cloneDeep(defaultColumnOptions);\n            options.map(option => {\n                option.hidden = hiddenColumns.has(option.value);\n            });\n            return (React.createElement(ColumnManagementModal, { isOpen: isColumnManagementModalOpen, options: options, onClose: this.handleColumnManagementModalClose, onSave: this.handleColumnManagementModalSave }));\n        };\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey || groupById,\n            });\n        };\n        this.getExportModal = (computedItems) => {\n            const { query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `${noPrefix}${groupById}` || item.label === `${noPrefix}${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, report, router } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = Math.trunc(offset / limit + 1);\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handlePerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.openShift),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { costDistribution, isRosFeatureEnabled, query, report, reportFetchStatus, reportQueryString, router } = this.props;\n            const { hiddenColumns, isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return (React.createElement(DetailsTable, { costDistribution: costDistribution, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, groupByTagKey: groupByTagKey, hiddenColumns: hiddenColumns, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, isRosFeatureEnabled: isRosFeatureEnabled, onSelected: this.handleSelected, onSort: (sortType, isSortAscending) => handleSort(query, router, sortType, isSortAscending), report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, report, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(DetailsToolbar, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isDisabled || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onColumnManagementClicked: this.handleColumnManagementModalOpen, onExportClicked: this.handleExportModalOpen, onFilterAdded: filter => handleFilterAdded(query, router, filter), onFilterRemoved: filter => handleFilterRemoved(query, router, filter), onPlatformCostsChanged: this.handlePlatformCostsChanged, pagination: this.getPagination(isDisabled), query: query, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleColumnManagementModalClose = (isOpen) => {\n            this.setState({ isColumnManagementModalOpen: isOpen });\n        };\n        this.handleColumnManagementModalOpen = () => {\n            this.setState({ isColumnManagementModalOpen: true });\n        };\n        this.handleColumnManagementModalSave = (hiddenColumns) => {\n            this.setState({ hiddenColumns });\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            const groupByKey = groupBy;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: '*',\n                }, order_by: { cost: 'desc' }, category: undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handlePlatformCostsChanged = (checked) => {\n            const { query, router } = this.props;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { category: checked ? platformCategoryKey : undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.updateReport = () => {\n            const { fetchReport, reportQueryString } = this.props;\n            fetchReport(reportPathsType, reportType, reportQueryString);\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleColumnManagementModalClose = this.handleColumnManagementModalClose.bind(this);\n        this.handleColumnManagementModalOpen = this.handleColumnManagementModalOpen.bind(this);\n        this.handleColumnManagementModalSave = this.handleColumnManagementModalSave.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handlePlatformCostsChanged = this.handlePlatformCostsChanged.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { costDistribution, currency, intl, providers, providersFetchStatus, query, report, reportError, reportFetchStatus, router, } = this.props;\n        const computedItems = this.getComputedItems();\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const isDisabled = computedItems.length === 0;\n        const title = intl.formatMessage(messages.ocpDetailsTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.inProgress) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.complete) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: ProviderType.ocp, title: title });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.ocpDetails },\n            React.createElement(DetailsHeader, { costDistribution: costDistribution, currency: currency, groupBy: groupById, onCostDistributionSelected: value => handleCostDistributionSelected(query, router, value), onCurrencySelected: value => handleCurrencySelected(query, router, value), onGroupBySelected: this.handleGroupBySelected, report: report }),\n            React.createElement(\"div\", { style: styles.content },\n                React.createElement(\"div\", { style: styles.toolbarContainer }, this.getToolbar(computedItems)),\n                this.getExportModal(computedItems),\n                this.getColumnManagementModal(),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const costDistribution = getCostDistribution();\n    const currency = getCurrency();\n    const query = Object.assign(Object.assign({}, baseQuery), queryFromRoute);\n    const reportQuery = {\n        category: query.category,\n        currency,\n        delta: 'cost',\n        exclude: query.exclude,\n        filter: Object.assign(Object.assign({}, query.filter), { resolution: 'monthly', time_scope_units: 'month', time_scope_value: -1 }),\n        filter_by: query.filter_by,\n        group_by: query.group_by,\n        order_by: query.order_by,\n    };\n    const reportQueryString = getQuery(reportQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        costDistribution,\n        currency,\n        isRosFeatureEnabled: featureFlagsSelectors.selectIsRosFeatureEnabled(state),\n        providers: filterProviders(providers, ProviderType.ocp),\n        providersFetchStatus,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(OcpDetails)));\n"],"names":["ExternalLinkAltIconConfig","name","height","width","svgPath","yOffset","xOffset","ExternalLinkAltIcon","exports","icon","injectIntl","className","intl","src","alt","formatMessage","messages","NoOptimizationsStateBase","render","this","props","EmptyState","variant","EmptyStateVariant","EmptyStateIcon","Title","headingLevel","size","EmptyStateBody","NoOptimizationsState","DetailsActionsBase","constructor","stateProps","dispatchProps","super","defaultState","isDropdownOpen","isExportModalOpen","state","Object","assign","getExportModal","groupBy","item","reportPathsType","reportQueryString","count","isOpen","items","onClose","handleExportModalClose","setState","handleExportModalOpen","handleOnSelect","handleOnToggle","bind","isDisabled","showPriceListOption","source_uuid","redirectToCostModel","router","DropdownItem","component","key","onClick","unshift","includes","length","Dropdown","onSelect","toggle","KebabToggle","onToggle","isPlain","position","dropdownItems","mapStateToProps","mapDispatchToProps","costModels","DetailsActionsConnect","connect","initHiddenColumns","options","hiddenColumns","Set","map","option","hidden","add","value","ColumnManagementModalBase","getHidden","result","delete","isHidden","has","handleChange","checked","event","target","id","handleClose","handleSave","onSave","selectAll","componentDidUpdate","prevProps","Modal","description","TextContent","Text","TextVariants","Button","isInline","title","ModalVariant","actions","ButtonVariant","DataList","isCompact","DataListItem","DataListItemRow","DataListCheck","isChecked","onChange","DataListItemCells","dataListCells","DataListCell","label","ColumnManagementModalConnect","styles","costColumn","textAlign","display","justifyContent","paddingRight","defaultLabel","minWidth","emptyState","backgroundColor","paddingTop","infoArrow","infoArrowDesc","bottom","infoDescription","color","fontSize","lastReported","lastReportedColumn","managedColumn","nameColumn","DataTable","getEmptyState","isOptimizations","queryFromRoute","location","search","filter_by","val","values","filter","showMargin","getSortBy","index","columns","orderBy","direction","order_by","getSortParams","sortBy","onSort","handleOnSort","columnIndex","isSelected","rowId","onSelected","rows","newRows","row","selected","SortByDirection","handleOnRowClick","rowIndex","onRowClick","isLoading","TableComposable","gridBreakPoint","hasSelectableRowCaption","Thead","Tr","col","Th","modifier","sort","isSortable","undefined","style","Tbody","Td","colSpan","Bullseye","Spinner","isSelectable","isHoverable","isRowSelected","_event","cells","cellIndex","dataLabel","isActionCell","select","disable","selectionDisabled","Boolean","costDistribution","marginLeft","costValue","marginTop","marginBottom","costLabelUnit","dateTitle","header","padding","headerContent","headerContentLeft","minHeight","headerContentRight","info","verticalAlign","infoIcon","infoTitle","fontWeight","paddingBottom","getIdKeyForGroupBy","project","cluster","node","groupByOptions","tagReportPathsType","DetailsHeaderBase","arguments","currency","isExportsFeatureEnabled","onCostDistributionSelected","onCurrencySelected","onGroupBySelected","providers","providersError","report","showContent","meta","cost","supplementaryCost","infrastructureCost","total","hasCost","hasSupplementaryCost","supplementary","hasInfrastructureCost","infrastructure","format","units","TitleSizes","showTags","Tooltip","content","enableFlip","providersQueryString","providersFetchStatus","featureFlags","DetailsHeader","reportType","DetailsOptimization","updateReport","fetchReport","getBreakdownLink","Link","to","basePath","routes","isOptimizationsTab","componentDidMount","reportQuery","reportError","reportFetchStatus","DetailsTableColumnIds","DetailsTableBase","initDatum","groupByTagKey","isAllSelected","isRosFeatureEnabled","selectedItems","isGroupByProject","computedItems","idKey","getTotalCost","monthOverMonth","getMonthOverMonthCost","getSupplementaryCost","InfrastructureCost","getInfrastructureCost","isOverheadCosts","platformDistributed","workerUnallocatedDistributed","isPlatformCosts","classification","isUnallocatedCosts","desc","getActions","toString","push","Label","find","filteredColumns","column","filteredRows","_a","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","__rest","cell","providerType","percentValue","toFixed","Math","abs","delta_value","percentage","delta_percent","showPercentage","showValue","iconOverride","currentReport","data","JSON","stringify","DetailsTable","tagReportType","DetailsToolbarBase","getCategoryOptions","tagReport","fetchTag","tagQueryString","categoryOptions","query","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onColumnManagementClicked","onExportClicked","onFilterAdded","onFilterRemoved","onPlatformCostsChanged","pagination","resourcePathsType","showBulkSelect","showColumnManagement","showExcludes","showExport","showFilter","showPlatformCosts","resolution","time_scope_units","time_scope_value","key_only","limit","tagReportFetchStatus","DetailsToolbarConnect","DetailsToolbar","global_spacer_lg","ocpDetails","paginationContainer","marginRight","global_BackgroundColor_light_100","global_spacer_md","tableContainer","toolbarContainer","baseQuery","offset","exclude","group_by","defaultColumnOptions","OcpDetails","isColumnManagementModalOpen","getColumnManagementModal","cloneDeep","handleColumnManagementModalClose","handleColumnManagementModalSave","getComputedItems","groupById","isAllItems","getPagination","isBottom","page","trunc","Pagination","itemCount","onPerPageSelect","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","PaginationVariant","widgetId","getTable","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","handleColumnManagementModalOpen","handlePlatformCostsChanged","action","handleGroupBySelected","groupByKey","newQuery","parse","category","navigate","replace","newItems","prevState","noReport","noLocation","delta"],"sourceRoot":""}