{"version":3,"file":"js/permissions.2c54c146a98f7174fda9.js","mappings":"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","sources":["webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Unavailable/Unavailable.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/NotAuthorized/NotAuthorized.js","webpack:///./src/routes/state/notAuthorized/notAuthorizedState.tsx","webpack:///./src/routes/state/notAuthorized/notAuthorized.tsx","webpack:///./src/components/permissions/permissions.tsx","webpack:///./src/routes/state/notAvailable/notAvailable.tsx","webpack:///./src/utils/userAccess.ts"],"sourcesContent":["var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport '../Unavailable/Unavailable.css';\nvar Unavailable = function () {\n    return (_jsxs(EmptyState, __assign({ variant: EmptyStateVariant.large, className: \"ins-c-empty-state__unavailable pf-m-redhat-font\" }, { children: [_jsx(EmptyStateIcon, { icon: ExclamationCircleIcon }), _jsx(Title, __assign({ headingLevel: \"h5\", size: \"lg\" }, { children: \"This page is temporarily unavailable\" })), _jsxs(EmptyStateBody, { children: [\"Try refreshing the page. If the problem persists, contact your organization administrator or visit our\", _jsxs(\"a\", __assign({ href: \"https://status.redhat.com/\", target: \"_blank\", rel: \"noopener noreferrer\" }, { children: [' ', \"status page\"] })), ' ', \"for known outages.\"] })] })));\n};\nexport default Unavailable;\n//# sourceMappingURL=Unavailable.js.map","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { LockIcon } from '@patternfly/react-icons';\nimport '../NotAuthorized/NotAuthorized.css';\nvar ContactBody = function () { return (_jsxs(React.Fragment, { children: [\"Contact your organization administrator(s) for more information or visit\\u00A0\", _jsx(\"a\", __assign({ href: \"./settings/my-user-access\" }, { children: \"My User Access\" })), \"\\u00A0 to learn more about your permissions.\"] })); };\nvar NotAuthorized = function (_a) {\n    var _b = _a.prevPageButtonText, prevPageButtonText = _b === void 0 ? 'Return to previous page' : _b, _c = _a.toLandingPageText, toLandingPageText = _c === void 0 ? 'Go to landing page' : _c, title = _a.title, _d = _a.actions, actions = _d === void 0 ? null : _d, serviceName = _a.serviceName, _e = _a.icon, Icon = _e === void 0 ? LockIcon : _e, _f = _a.description, description = _f === void 0 ? _jsx(ContactBody, {}) : _f, _g = _a.showReturnButton, showReturnButton = _g === void 0 ? true : _g, className = _a.className, props = __rest(_a, [\"prevPageButtonText\", \"toLandingPageText\", \"title\", \"actions\", \"serviceName\", \"icon\", \"description\", \"showReturnButton\", \"className\"]);\n    var heading = title || \"You do not have access to \".concat(serviceName);\n    return (_jsxs(EmptyState, __assign({ variant: EmptyStateVariant.full, className: \"ins-c-not-authorized \".concat(className || '') }, props, { children: [_jsx(EmptyStateIcon, { icon: Icon }), _jsx(Title, __assign({ headingLevel: \"h5\", size: \"lg\" }, { children: heading })), _jsx(EmptyStateBody, { children: description }), actions, showReturnButton &&\n                (document.referrer ? (_jsx(Button, __assign({ variant: \"primary\", onClick: function () { return history.back(); } }, { children: prevPageButtonText }))) : (_jsx(Button, __assign({ variant: \"primary\", component: \"a\", href: \".\" }, { children: toLandingPageText }))))] })));\n};\nexport default NotAuthorized;\n//# sourceMappingURL=NotAuthorized.js.map","import { NotAuthorized as UnAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { routes } from 'routes';\nimport { formatPath } from 'utils/paths';\nclass NotAuthorizedStateBase extends React.Component {\n    render() {\n        const { intl, pathname } = this.props;\n        let msg;\n        switch (pathname) {\n            case formatPath(routes.awsDetails.path):\n            case formatPath(routes.awsDetailsBreakdown.path):\n                msg = messages.notAuthorizedStateAws;\n                break;\n            case formatPath(routes.azureDetails.path):\n            case formatPath(routes.azureDetailsBreakdown.path):\n                msg = messages.notAuthorizedStateAzure;\n                break;\n            case formatPath(routes.costModelsDetails.path):\n                msg = messages.notAuthorizedStateCostModels;\n                break;\n            case formatPath(routes.gcpDetails.path):\n            case formatPath(routes.gcpDetailsBreakdown.path):\n                msg = messages.notAuthorizedStateGcp;\n                break;\n            case formatPath(routes.ibmDetails.path):\n            case formatPath(routes.ibmDetailsBreakdown.path):\n                msg = messages.notAuthorizedStateIbm;\n                break;\n            case formatPath(routes.ociDetails.path):\n            case formatPath(routes.ociDetailsBreakdown.path):\n                msg = messages.notAuthorizedStateOci;\n                break;\n            case formatPath(routes.ocpDetails.path):\n            case formatPath(routes.ocpDetailsBreakdown.path):\n                msg = messages.notAuthorizedStateOcp;\n                break;\n            case formatPath(routes.rhelDetails.path):\n            case formatPath(routes.rhelDetailsBreakdown.path):\n                msg = messages.notAuthorizedStateRhel;\n                break;\n            case formatPath(routes.recommendations.path):\n                msg = messages.notAuthorizedStateRecommendations;\n                break;\n            case formatPath(routes.explorer.path):\n            default:\n                msg = messages.costManagement;\n                break;\n        }\n        return React.createElement(UnAuthorized, { serviceName: intl.formatMessage(msg) });\n    }\n}\nconst NotAuthorizedState = injectIntl(NotAuthorizedStateBase);\nexport { NotAuthorizedState };\n","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React from 'react';\nimport { NotAuthorizedState } from './notAuthorizedState';\nconst NotAuthorized = ({ pathname, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(NotAuthorizedState, { pathname: pathname }))));\n};\nexport default NotAuthorized;\n","import { getUserAccessQuery } from 'api/queries/userAccessQuery';\nimport { UserAccessType } from 'api/userAccess';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { routes } from 'routes';\nimport { Loading } from 'routes/state/loading';\nimport { NotAuthorized } from 'routes/state/notAuthorized';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { userAccessQuery, userAccessSelectors } from 'store/userAccess';\nimport { formatPath, usePathname } from 'utils/paths';\nimport { hasAwsAccess, hasAzureAccess, hasCostModelAccess, hasGcpAccess, hasIbmAccess, hasOciAccess, hasOcpAccess, hasRhelAccess, hasRosAccess, } from 'utils/userAccess';\nconst PermissionsBase = ({ children = null, isFinsightsFeatureEnabled, isIbmFeatureEnabled, isOciFeatureEnabled, isRosFeatureEnabled, userAccess, userAccessError, userAccessFetchStatus, }) => {\n    const hasPermissions = pathname => {\n        if (!(userAccess && userAccessFetchStatus === FetchStatus.complete)) {\n            return false;\n        }\n        const aws = hasAwsAccess(userAccess);\n        const azure = hasAzureAccess(userAccess);\n        const costModel = hasCostModelAccess(userAccess);\n        const gcp = hasGcpAccess(userAccess);\n        const ibm = isIbmFeatureEnabled && hasIbmAccess(userAccess);\n        const oci = isOciFeatureEnabled && hasOciAccess(userAccess);\n        const ocp = hasOcpAccess(userAccess);\n        const rhel = isFinsightsFeatureEnabled && hasRhelAccess(userAccess);\n        const ros = isRosFeatureEnabled && hasRosAccess(userAccess);\n        switch (pathname) {\n            case formatPath(routes.explorer.path):\n            case formatPath(routes.overview.path):\n                return aws || azure || costModel || gcp || ibm || ocp || oci;\n            case formatPath(routes.awsDetails.path):\n            case formatPath(routes.awsDetailsBreakdown.path):\n                return aws;\n            case formatPath(routes.azureDetails.path):\n            case formatPath(routes.azureDetailsBreakdown.path):\n                return azure;\n            case formatPath(routes.costModelsDetails.path):\n                return costModel;\n            case formatPath(routes.gcpDetails.path):\n            case formatPath(routes.gcpDetailsBreakdown.path):\n                return gcp;\n            case formatPath(routes.ociDetails.path):\n            case formatPath(routes.ociDetailsBreakdown.path):\n                return oci;\n            case formatPath(routes.ibmDetails.path):\n            case formatPath(routes.ibmDetailsBreakdown.path):\n                return ibm;\n            case formatPath(routes.ocpDetails.path):\n            case formatPath(routes.ocpDetailsBreakdown.path):\n                return ocp;\n            case formatPath(routes.recommendations.path):\n                return ros;\n            case formatPath(routes.rhelDetails.path):\n            case formatPath(routes.rhelDetailsBreakdown.path):\n                return rhel;\n            default:\n                return false;\n        }\n    };\n    // Page access denied because user doesn't have RBAC permissions and is not an org admin\n    const pathname = usePathname();\n    let result = React.createElement(NotAuthorized, { pathname: pathname });\n    if (userAccessFetchStatus === FetchStatus.inProgress) {\n        result = React.createElement(Loading, null);\n    }\n    else if (userAccessError) {\n        result = React.createElement(NotAvailable, null);\n    }\n    else if (hasPermissions(pathname)) {\n        result = React.createElement(React.Fragment, null, children);\n    }\n    return result;\n};\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const userAccessQueryString = getUserAccessQuery(userAccessQuery);\n    const userAccess = userAccessSelectors.selectUserAccess(state, UserAccessType.all, userAccessQueryString);\n    const userAccessError = userAccessSelectors.selectUserAccessError(state, UserAccessType.all, userAccessQueryString);\n    const userAccessFetchStatus = userAccessSelectors.selectUserAccessFetchStatus(state, UserAccessType.all, userAccessQueryString);\n    return {\n        isFinsightsFeatureEnabled: featureFlagsSelectors.selectIsFinsightsFeatureEnabled(state),\n        isIbmFeatureEnabled: featureFlagsSelectors.selectIsIbmFeatureEnabled(state),\n        isOciFeatureEnabled: featureFlagsSelectors.selectIsOciFeatureEnabled(state),\n        isRosFeatureEnabled: featureFlagsSelectors.selectIsRosFeatureEnabled(state),\n        userAccess,\n        userAccessError,\n        userAccessFetchStatus,\n        userAccessQueryString,\n    };\n});\nconst Permissions = connect(mapStateToProps, undefined)(PermissionsBase);\nexport default Permissions;\n","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Unavailable } from '@redhat-cloud-services/frontend-components/Unavailable';\nimport React from 'react';\nconst NotAvailable = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(Unavailable, null))));\n};\nexport default NotAvailable;\n","import { UserAccessType } from 'api/userAccess';\nconst hasAccess = (userAccess, userAccessType) => {\n    let result = false;\n    if (userAccess && Array.isArray(userAccess.data)) {\n        // Used with multiple types (e.g., type=)\n        const data = userAccess.data.find(d => d.type === userAccessType);\n        result = data && data.access;\n    }\n    else {\n        // Used with type=any, type=GCP, etc.\n        result = userAccess && userAccess.data === true;\n    }\n    return result;\n};\nconst hasProviders = (providers) => {\n    let result = false;\n    if (providers && providers.meta) {\n        // providers API returns empty data array for no sources\n        result = providers.meta.count > 0;\n    }\n    return result;\n};\n// Returns true if user has access to AWS\nexport const hasAwsAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.aws);\n};\n// Returns true if user has access to AWS and at least one source provider\nexport const isAwsAvailable = (userAccess, awsProviders) => {\n    return hasAwsAccess(userAccess) && hasProviders(awsProviders);\n};\n// Returns true if user has access to Azure\nexport const hasAzureAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.azure);\n};\n// Returns true if user has access to Azure and at least one source provider\nexport const isAzureAvailable = (userAccess, azureProviders) => {\n    return hasAzureAccess(userAccess) && hasProviders(azureProviders);\n};\n// Returns true if user has access to Oci\nexport const hasOciAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.oci);\n};\n// Returns true if user has access to Oci and at least one source provider\nexport const isOciAvailable = (userAccess, ociProviders) => {\n    return hasOciAccess(userAccess) && hasProviders(ociProviders);\n};\n// Returns true if user has access to cost models\nexport const hasCostModelAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.cost_model);\n};\n// Returns true if user has access to GCP\nexport const hasGcpAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.gcp);\n};\n// Returns true if user has access to GCP and at least one source provider\nexport const isGcpAvailable = (userAccess, gcpProviders) => {\n    return hasAccess(userAccess, UserAccessType.gcp) && hasProviders(gcpProviders);\n};\n// Returns true if user has access to IBM\nexport const hasIbmAccess = (userAccess) => {\n    return hasGcpAccess(userAccess);\n};\n// Returns true if user has access to IBM and at least one source provider\nexport const isIbmAvailable = (userAccess, ibmProviders) => {\n    return hasIbmAccess(userAccess) && hasProviders(ibmProviders);\n};\n// Returns true if user has access to OCP\nexport const hasOcpAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.ocp);\n};\n// Returns true if user has access to OCP and at least one source provider\nexport const isOcpAvailable = (userAccess, ocpProviders) => {\n    return hasOcpAccess(userAccess) && hasProviders(ocpProviders);\n};\n// Returns true if user has access to RHEL\nexport const hasRhelAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.rhel);\n};\n// Returns true if user has access to RHEL and at least one source provider\nexport const isRhelAvailable = (userAccess, rhelProviders) => {\n    return hasRhelAccess(userAccess) && hasProviders(rhelProviders);\n};\n// Returns true if user has access to ROS\nexport const hasRosAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.ros);\n};\n// Returns true if user has access to RHEL and at least one source provider\nexport const isRosAvailable = (userAccess, rosProviders) => {\n    return hasRosAccess(userAccess) && hasProviders(rosProviders);\n};\n"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","EmptyState","variant","EmptyStateVariant","className","children","EmptyStateIcon","icon","ExclamationCircleIcon","Title","headingLevel","size","EmptyStateBody","href","target","rel","ContactBody","_a","_b","prevPageButtonText","_c","toLandingPageText","title","_d","actions","serviceName","_e","Icon","LockIcon","_f","description","_g","showReturnButton","props","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","heading","concat","document","referrer","Button","onClick","history","back","component","NotAuthorizedStateBase","render","intl","pathname","msg","routes","messages","formatMessage","NotAuthorizedState","injectIntl","PageHeader","PageHeaderTitle","PageSection","mapStateToProps","state","userAccessQueryString","userAccess","userAccessError","userAccessFetchStatus","isFinsightsFeatureEnabled","featureFlags","isIbmFeatureEnabled","isOciFeatureEnabled","isRosFeatureEnabled","connect","undefined","result","aws","azure","costModel","gcp","ibm","oci","ocp","rhel","ros","hasPermissions","Unavailable","hasAccess","userAccessType","Array","isArray","data","find","d","type","access","hasProviders","providers","meta","count","hasAwsAccess","isAwsAvailable","awsProviders","hasAzureAccess","isAzureAvailable","azureProviders","hasOciAccess","isOciAvailable","ociProviders","hasCostModelAccess","hasGcpAccess","isGcpAvailable","gcpProviders","hasIbmAccess","isIbmAvailable","ibmProviders","hasOcpAccess","isOcpAvailable","ocpProviders","hasRhelAccess","isRhelAvailable","rhelProviders","hasRosAccess"],"sourceRoot":""}