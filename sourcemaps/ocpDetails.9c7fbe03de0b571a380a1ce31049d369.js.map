{"version":3,"file":"js/ocpDetails.f02d4ae43ebb283f8316.js","mappings":"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","sources":["webpack:///./src/routes/views/details/components/actions/actions.tsx","webpack:///./src/routes/views/details/components/columnManagement/columnManagementModal.tsx","webpack:///./src/routes/views/details/components/dataTable/dataTable.styles.ts","webpack:///./src/routes/views/details/components/dataTable/dataTable.tsx","webpack:///./src/routes/views/details/ocpDetails/detailsHeader.tsx","webpack:///./src/routes/views/details/ocpDetails/detailsTable.tsx","webpack:///./src/routes/views/details/ocpDetails/detailsToolbar.tsx","webpack:///./src/routes/views/details/ocpDetails/ocpDetails.styles.ts","webpack:///./src/routes/views/details/ocpDetails/ocpDetails.tsx","webpack:///./src/routes/views/details/rhelBreakdown/costOverview.tsx","webpack:///./src/routes/views/details/rhelBreakdown/historicalData.tsx","webpack:///./src/routes/views/details/rhelBreakdown/rhelBreakdown.tsx","webpack:///./src/utils/computedReport/getComputedRhelReportItems.ts","webpack:///./src/routes/views/details/rhelDetails/detailsHeader.styles.ts","webpack:///./src/routes/views/details/rhelDetails/detailsHeader.tsx","webpack:///./src/routes/views/details/rhelDetails/detailsTable.tsx","webpack:///./src/routes/views/details/rhelDetails/detailsToolbar.tsx","webpack:///./src/routes/views/details/rhelDetails/rhelDetails.styles.ts","webpack:///./src/routes/views/details/rhelDetails/rhelDetails.tsx","webpack:///./src/routes/views/ros/recommendations/recommendations.styles.ts","webpack:///./src/routes/views/ros/recommendations/rosHeader.styles.ts","webpack:///./src/routes/views/ros/recommendations/rosHeader.tsx","webpack:///./src/routes/views/ros/recommendations/rosTable.tsx","webpack:///./src/routes/views/ros/recommendations/rosToolbar.tsx","webpack:///./src/routes/views/ros/recommendations/recommendations.tsx","webpack:///./src/utils/computedReport/getComputedRosItems.ts","webpack:///./src/api/queries/rosQuery.ts","webpack:///./src/utils/computedReport/getComputedOcpReportItems.ts"],"sourcesContent":["import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ExportModal } from 'routes/views/components/export';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nimport { tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, reportPathsType, reportQueryString } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { count: 1, groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, intl, item: { source_uuid }, redirectToCostModel, router, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, intl.formatMessage(messages.detailsActionsExport)),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], router) }, intl.formatMessage(messages.detailsActionsPriceList)));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = injectIntl(withRouter(DetailsActionsConnect));\nexport default Actions;\n","import { Button, ButtonVariant, DataList, DataListCell, DataListCheck, DataListItem, DataListItemCells, DataListItemRow, Modal, ModalVariant, Text, TextContent, TextVariants, } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nexport const initHiddenColumns = (options) => {\n    const hiddenColumns = new Set();\n    options.map(option => {\n        if (option.hidden) {\n            hiddenColumns.add(option.value);\n        }\n    });\n    return hiddenColumns;\n};\nexport class ColumnManagementModalBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            hiddenColumns: initHiddenColumns(this.props.options),\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getHidden = (value) => {\n            const { hiddenColumns } = this.state;\n            const result = new Set(hiddenColumns);\n            if (!result.delete(value)) {\n                result.add(value);\n            }\n            return result;\n        };\n        this.isHidden = (value) => {\n            const { hiddenColumns } = this.state;\n            return hiddenColumns.has(value);\n        };\n        this.handleChange = (checked, event) => {\n            const hiddenColumns = this.getHidden(event.target.id);\n            this.setState({ hiddenColumns });\n        };\n        this.handleClose = () => {\n            // Reset defult state upon close\n            this.setState(Object.assign({}, this.defaultState), () => {\n                this.props.onClose(false);\n            });\n        };\n        this.handleSave = () => {\n            const { hiddenColumns } = this.state;\n            this.props.onSave(hiddenColumns);\n            this.handleClose();\n        };\n        this.selectAll = () => {\n            this.setState({ hiddenColumns: new Set() });\n        };\n    }\n    componentDidUpdate(prevProps) {\n        const { options } = this.props;\n        if (prevProps.options !== options) {\n            const hiddenColumns = initHiddenColumns(options);\n            this.setState({ hiddenColumns });\n        }\n    }\n    render() {\n        const { options, intl } = this.props;\n        return (React.createElement(Modal, { description: React.createElement(TextContent, null,\n                React.createElement(Text, { component: TextVariants.p }, intl.formatMessage(messages.manageColumnsDesc)),\n                React.createElement(Button, { isInline: true, onClick: this.selectAll, variant: \"link\" }, intl.formatMessage(messages.selectAll))), \n            // style={styles.modal}\n            isOpen: this.props.isOpen, onClose: this.handleClose, title: intl.formatMessage(messages.manageColumnsTitle), variant: ModalVariant.medium, actions: [\n                React.createElement(Button, { key: \"save\", onClick: this.handleSave, variant: ButtonVariant.link }, intl.formatMessage(messages.save)),\n                React.createElement(Button, { key: \"cancel\", onClick: this.handleClose, variant: ButtonVariant.link }, intl.formatMessage(messages.cancel)),\n            ] },\n            React.createElement(DataList, { \"aria-label\": intl.formatMessage(messages.manageColumnsAriaLabel), id: \"table-column-management\", isCompact: true }, options.map(option => (React.createElement(DataListItem, { \"aria-labelledby\": option.value, key: option.value },\n                React.createElement(DataListItemRow, null,\n                    React.createElement(DataListCheck, { \"aria-labelledby\": `${option.value}Label`, isChecked: !this.isHidden(option.value), name: option.value, id: option.value, onChange: this.handleChange }),\n                    React.createElement(DataListItemCells, { dataListCells: [\n                            React.createElement(DataListCell, { id: `${option.value}Label`, key: \"table-column-management-item1\" },\n                                React.createElement(\"span\", null, intl.formatMessage(option.label))),\n                            React.createElement(DataListCell, { key: \"table-column-management-item2\" }, option.description && React.createElement(\"span\", null, intl.formatMessage(option.description))),\n                        ] }))))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {};\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst ColumnManagementModalConnect = connect(mapStateToProps, mapDispatchToProps)(ColumnManagementModalBase);\nconst ColumnManagementModal = injectIntl(ColumnManagementModalConnect);\nexport default ColumnManagementModal;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    costColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingRight: 0,\n    },\n    defaultLabel: {\n        minWidth: '63px',\n    },\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    lastReported: {\n        textAlign: 'right',\n        paddingRight: '40px',\n    },\n    lastReportedColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    managedColumn: {\n        textAlign: 'right',\n    },\n    nameColumn: {\n        width: '1%',\n    },\n};\n","import { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport { parseQuery } from 'api/queries/ocpQuery';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass DataTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { intl, router } = this.props;\n            const queryFromRoute = parseQuery(router.location.search);\n            if (queryFromRoute.filter_by) {\n                for (const val of Object.values(queryFromRoute.filter_by)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, router } = this.props;\n            const orderBy = columns[index].orderBy;\n            const queryFromRoute = parseQuery(router.location.search);\n            const direction = queryFromRoute && queryFromRoute.order_by && queryFromRoute.order_by[orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected, rows } = this.props;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnRowClick = (event, rowIndex) => {\n            const { onRowClick, rows } = this.props;\n            rows.map(row => (row.selected = false));\n            rows[rowIndex].selected = true;\n            this.setState({ rows }, () => {\n                if (onRowClick) {\n                    onRowClick(event, rowIndex);\n                }\n            });\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isLoading, isRos, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.dataTableAriaLabel), gridBreakPoint: \"grid-2xl\", hasSelectableRowCaption: isRos },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { isSelectable: isRos, isHoverable: isRos, isRowSelected: isRos && row.selected, onRowClick: _event => this.handleOnRowClick(_event, rowIndex), key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 && !isRos ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${cellIndex}-${rowIndex}`, modifier: \"nowrap\", select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    }, style: item.style })) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", isActionCell: !isRos && cellIndex === row.cells.length - 1, style: item.style }, item.value))))))))),\n            Boolean(rows.length === 0) && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(DataTable));\n","import { Title, TitleSizes, Tooltip } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { TagPathsType } from 'api/tags/tag';\nimport { ExportsLink } from 'components/exports';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Currency } from 'routes/components/currency';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { GroupBy } from 'routes/views/components/groupBy';\nimport { filterProviders } from 'routes/views/utils/providers';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedOcpReportItems';\nimport { getSinceDateRangeString } from 'utils/dates';\nimport { formatCurrency } from 'utils/format';\nimport { styles } from './detailsHeader.styles';\nconst groupByOptions = [\n    { label: 'cluster', value: 'cluster' },\n    { label: 'node', value: 'node' },\n    { label: 'project', value: 'project' },\n];\nconst tagReportPathsType = TagPathsType.ocp;\nclass DetailsHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { currency, groupBy, isCurrencyFeatureEnabled, isExportsFeatureEnabled, onCurrencySelected, onGroupBySelected, providers, providersError, report, intl, } = this.props;\n        const showContent = report && !providersError && providers && providers.meta && providers.meta.count > 0;\n        let cost = React.createElement(EmptyValueState, null);\n        let supplementaryCost = React.createElement(EmptyValueState, null);\n        let infrastructureCost = React.createElement(EmptyValueState, null);\n        if (report && report.meta && report.meta.total) {\n            const hasCost = report.meta.total.cost && report.meta.total.cost.total;\n            const hasSupplementaryCost = report.meta.total.supplementary && report.meta.total.supplementary.total;\n            const hasInfrastructureCost = report.meta.total.infrastructure && report.meta.total.infrastructure.total;\n            cost = formatCurrency(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD');\n            supplementaryCost = formatCurrency(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost ? report.meta.total.supplementary.total.units : 'USD');\n            infrastructureCost = formatCurrency(hasInfrastructureCost ? report.meta.total.infrastructure.total.value : 0, hasInfrastructureCost ? report.meta.total.infrastructure.total.units : 'USD');\n        }\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.ocpDetailsTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    isCurrencyFeatureEnabled && React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(\"div\", { style: styles.headerContentLeft },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: !showContent, onSelected: onGroupBySelected, options: groupByOptions, showTags: true, tagReportPathsType: tagReportPathsType })),\n                Boolean(showContent) && (React.createElement(\"div\", null,\n                    React.createElement(Tooltip, { content: intl.formatMessage(messages.dashboardTotalCostTooltip, {\n                            infrastructureCost,\n                            supplementaryCost,\n                        }), enableFlip: true },\n                        React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: TitleSizes['4xl'] }, cost)),\n                    React.createElement(\"div\", { style: styles.dateTitle }, getSinceDateRangeString()))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        isCurrencyFeatureEnabled: featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state),\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        providers: filterProviders(providers, ProviderType.ocp),\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n    };\n});\nconst DetailsHeader = injectIntl(connect(mapStateToProps, {})(DetailsHeaderBase));\nexport { DetailsHeader };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport 'routes/views/details/components/dataTable/dataTable.scss';\nimport { Label } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { ReportPathsType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { Actions } from 'routes/views/details/components/actions';\nimport { DataTable } from 'routes/views/details/components/dataTable';\nimport { styles } from 'routes/views/details/components/dataTable/dataTable.styles';\nimport { getBreakdownPath } from 'routes/views/utils/paths';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getForDateRangeString, getNoDataForDateRangeString } from 'utils/dates';\nimport { formatCurrency, formatPercentage } from 'utils/format';\nimport { formatPath } from 'utils/paths';\nimport { classificationDefault, classificationPlatform, classificationUnallocated, noPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nexport const DetailsTableColumnIds = {\n    infrastructure: 'infrastructure',\n    monthOverMonth: 'monthOverMonth',\n    supplementary: 'supplementary',\n};\nconst reportPathsType = ReportPathsType.ocp;\nclass DetailsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { groupBy, groupByTagKey, hiddenColumns, intl, isAllSelected, isRosFeatureEnabled, report, router, selectedItems, } = this.props;\n            if (!report) {\n                return;\n            }\n            const showDefaultProject = groupBy === 'project';\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey ? groupByTagKey : groupBy,\n            });\n            const columns = groupByTagKey\n                ? [\n                    // Sorting with tag keys is not supported\n                    {\n                        name: '',\n                    },\n                    {\n                        name: intl.formatMessage(messages.tagNames),\n                        style: groupBy === 'project' ? styles.nameColumn : undefined,\n                    },\n                    {\n                        hidden: !showDefaultProject,\n                        name: '', // Default column\n                    },\n                    {\n                        hidden: !isRosFeatureEnabled,\n                        name: intl.formatMessage(messages.recommendations),\n                    },\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    {\n                        id: DetailsTableColumnIds.infrastructure,\n                        name: intl.formatMessage(messages.ocpDetailsInfrastructureCost),\n                        style: styles.managedColumn,\n                    },\n                    {\n                        id: DetailsTableColumnIds.supplementary,\n                        name: intl.formatMessage(messages.ocpDetailsSupplementaryCost),\n                        style: styles.managedColumn,\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: false })),\n                    {\n                        name: '',\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign(Object.assign({ orderBy: groupBy, name: intl.formatMessage(messages.detailsResourceNames, { value: groupBy }) }, (computedItems.length && { isSortable: true })), { style: groupBy === 'project' ? styles.nameColumn : undefined }),\n                    {\n                        hidden: !showDefaultProject,\n                        name: '', // Default column\n                    },\n                    {\n                        hidden: !isRosFeatureEnabled,\n                        name: intl.formatMessage(messages.recommendations),\n                    },\n                    {\n                        id: DetailsTableColumnIds.monthOverMonth,\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    {\n                        id: DetailsTableColumnIds.infrastructure,\n                        orderBy: 'infrastructure_cost',\n                        name: intl.formatMessage(messages.ocpDetailsInfrastructureCost),\n                        style: styles.managedColumn,\n                        // Sort by infrastructure_cost is not supported -- https://github.com/project-koku/koku/issues/796\n                        // ...(computedItems.length && { isSortable: true }),\n                    },\n                    {\n                        id: DetailsTableColumnIds.supplementary,\n                        orderBy: 'supplementary_cost',\n                        name: intl.formatMessage(messages.ocpDetailsSupplementaryCost),\n                        style: styles.managedColumn,\n                        // Sort by supplementary_cost is not supported -- https://github.com/project-koku/koku/issues/796\n                        // ...(computedItems.length && { isSortable: true }),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ];\n            computedItems.map((item, index) => {\n                const cost = this.getTotalCost(item, index);\n                const label = item && item.label !== null ? item.label : '';\n                const monthOverMonth = this.getMonthOverMonthCost(item, index);\n                const supplementaryCost = this.getSupplementaryCost(item, index);\n                const InfrastructureCost = this.getInfrastructureCost(item, index);\n                const isPlatformCosts = item.classification === classificationPlatform;\n                const isUnallocatedCosts = item.classification === classificationUnallocated;\n                const desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                const isDisabled = label === `${noPrefix}${groupBy}` || label === `${noPrefix}${groupByTagKey}` || isUnallocatedCosts;\n                const actions = this.getActions(item, isDisabled);\n                const name = isDisabled ? label : (React.createElement(Link, { to: getBreakdownPath({\n                        basePath: formatPath(routes.ocpDetailsBreakdown.path),\n                        description: item.id,\n                        id: item.id,\n                        isPlatformCosts,\n                        groupBy,\n                        router,\n                        title: label.toString(),\n                    }) }, label));\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: (React.createElement(React.Fragment, null,\n                                React.createElement(\"div\", null, name),\n                                React.createElement(\"div\", { style: styles.infoDescription }, desc))),\n                        },\n                        {\n                            hidden: !showDefaultProject,\n                            value: item.classification === classificationDefault ? (React.createElement(\"div\", null,\n                                React.createElement(Label, { variant: \"outline\", color: \"green\" }, intl.formatMessage(messages.default)))) : (React.createElement(\"div\", { style: styles.defaultLabel })),\n                        },\n                        {\n                            hidden: !isRosFeatureEnabled,\n                            value: React.createElement(\"div\", null, \"N/A\"),\n                        },\n                        { value: React.createElement(\"div\", null, monthOverMonth), id: DetailsTableColumnIds.monthOverMonth },\n                        {\n                            value: React.createElement(\"div\", null, InfrastructureCost),\n                            id: DetailsTableColumnIds.infrastructure,\n                            style: styles.managedColumn,\n                        },\n                        {\n                            value: React.createElement(\"div\", null, supplementaryCost),\n                            id: DetailsTableColumnIds.supplementary,\n                            style: styles.managedColumn,\n                        },\n                        { value: React.createElement(\"div\", null, cost), style: styles.managedColumn },\n                        { value: React.createElement(\"div\", null, actions) },\n                    ],\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                    selectionDisabled: isDisabled,\n                });\n            });\n            const filteredColumns = columns.filter(column => !hiddenColumns.has(column.id) && !column.hidden);\n            const filteredRows = rows.map((_a) => {\n                var row = __rest(_a, []);\n                row.cells = row.cells.filter(cell => !hiddenColumns.has(cell.id) && !cell.hidden);\n                return row;\n            });\n            this.setState({\n                columns: filteredColumns,\n                rows: filteredRows,\n            });\n        };\n        this.getActions = (item, isDisabled) => {\n            const { groupBy, reportQueryString } = this.props;\n            return (React.createElement(Actions, { groupBy: groupBy, isDisabled: isDisabled, item: item, providerType: ProviderType.ocp, reportPathsType: reportPathsType, reportQueryString: reportQueryString, showPriceListOption: groupBy === 'cluster' }));\n        };\n        this.getSupplementaryCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.supplementary.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.supplementary.total.value, item.supplementary.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n        this.getInfrastructureCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.infrastructure.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.infrastructure.total.value, item.infrastructure.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n        this.getMonthOverMonthCost = (item, index) => {\n            const { intl } = this.props;\n            const value = formatCurrency(Math.abs(item.cost.total.value - item.delta_value), item.cost.total.units);\n            const percentage = item.delta_percent !== null ? formatPercentage(Math.abs(item.delta_percent)) : 0;\n            const showPercentage = !(percentage === 0 || percentage === '0.00');\n            const showValue = item.delta_percent !== null; // Workaround for https://github.com/project-koku/koku/issues/1395\n            let iconOverride;\n            if (showPercentage) {\n                iconOverride = 'iconOverride';\n                if (item.delta_percent !== null && item.delta_value < 0) {\n                    iconOverride += ' decrease';\n                }\n                if (item.delta_percent !== null && item.delta_value > 0) {\n                    iconOverride += ' increase';\n                }\n            }\n            if (!showValue) {\n                return getNoDataForDateRangeString();\n            }\n            else {\n                return (React.createElement(\"div\", { className: \"monthOverMonthOverride\" },\n                    React.createElement(\"div\", { className: iconOverride, key: `month-over-month-cost-${index}` },\n                        showPercentage ? intl.formatMessage(messages.percent, { value: percentage }) : React.createElement(EmptyValueState, null),\n                        Boolean(showPercentage && item.delta_percent !== null && item.delta_value > 0) && (React.createElement(\"span\", { className: \"fa fa-sort-up\", style: styles.infoArrow, key: `month-over-month-icon-${index}` })),\n                        Boolean(showPercentage && item.delta_percent !== null && item.delta_value < 0) && (React.createElement(\"span\", { className: \"fa fa-sort-down\", style: Object.assign(Object.assign({}, styles.ininfoArrow), styles.infoArrowDesc), key: `month-over-month-icon-${index}` }))),\n                    React.createElement(\"div\", { style: styles.infoDescription, key: `month-over-month-info-${index}` }, getForDateRangeString(value))));\n            }\n        };\n        this.getTotalCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.cost.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.cost.total.value, item.cost.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { hiddenColumns, report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport ||\n            prevProps.selectedItems !== selectedItems ||\n            prevProps.hiddenColumns !== hiddenColumns) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { isLoading, onSelected, onSort, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, isLoading: isLoading, onSelected: onSelected, onSort: onSort, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst DetailsTable = injectIntl(withRouter(DetailsTableBase));\nexport { DetailsTable };\n","import { getQuery } from 'api/queries/ocpQuery';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType, TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { isEqual } from 'utils/equal';\nimport { tagKey } from 'utils/props';\nconst tagReportType = TagType.tag;\nconst tagReportPathsType = TagPathsType.ocp;\nexport class DetailsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { intl, tagReport } = this.props;\n            const options = [\n                { name: intl.formatMessage(messages.filterByValues, { value: 'cluster' }), key: 'cluster' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'node' }), key: 'node' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'project' }), key: 'project' },\n            ];\n            if (tagReport && tagReport.data && tagReport.data.length) {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: tagKey }),\n                    key: tagKey,\n                });\n            }\n            return options;\n        };\n    }\n    componentDidMount() {\n        const { fetchTag, tagReportFetchStatus, tagQueryString } = this.props;\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        }, () => {\n            if (tagReportFetchStatus !== FetchStatus.inProgress) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchTag, query, tagReport, tagReportFetchStatus, tagQueryString } = this.props;\n        if (!isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            }, () => {\n                if (tagReportFetchStatus !== FetchStatus.inProgress) {\n                    fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n                }\n            });\n        }\n        else if (query && !isEqual(query, prevProps.query) && tagReportFetchStatus !== FetchStatus.inProgress) {\n            fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n        }\n    }\n    render() {\n        const { groupBy, isAllSelected, isDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onColumnManagementClicked, onExportClicked, onFilterAdded, onFilterRemoved, onPlatformCostsChanged, pagination, query, selectedItems, tagReport, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, groupBy: groupBy, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onColumnManagementClicked: onColumnManagementClicked, onExportClicked: onExportClicked, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, onPlatformCostsChanged: onPlatformCostsChanged, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.ocp, selectedItems: selectedItems, showBulkSelect: true, showColumnManagement: true, showExport: true, showFilter: true, showPlatformCosts: groupBy === 'project', tagReport: tagReport, tagReportPathsType: tagReportPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        key_only: true,\n        limit: 1000,\n    });\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, tagQueryString);\n    return {\n        tagReport,\n        tagReportFetchStatus,\n        tagQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst DetailsToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsToolbarBase);\nconst DetailsToolbar = injectIntl(DetailsToolbarConnect);\nexport { DetailsToolbar };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    ocpDetails: {\n        minHeight: '100%',\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getQuery, parseQuery } from 'api/queries/ocpQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport { cloneDeep } from 'lodash';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoData } from 'routes/state/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { ExportModal } from 'routes/views/components/export';\nimport { ColumnManagementModal, initHiddenColumns } from 'routes/views/details/components/columnManagement';\nimport { getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { handleCurrencySelected, handleFilterAdded, handleFilterRemoved, handlePerPageSelect, handleSetPage, handleSort, } from 'routes/views/utils/handles';\nimport { filterProviders, hasCurrentMonthData } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedOcpReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getCurrency } from 'utils/localStorage';\nimport { noPrefix, platformCategoryKey, tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { DetailsHeader } from './detailsHeader';\nimport { DetailsTable, DetailsTableColumnIds } from './detailsTable';\nimport { DetailsToolbar } from './detailsToolbar';\nimport { styles } from './ocpDetails.styles';\nconst baseQuery = {\n    delta: 'cost',\n    filter: {\n        limit: 10,\n        offset: 0,\n        resolution: 'monthly',\n        time_scope_units: 'month',\n        time_scope_value: -1,\n    },\n    exclude: {},\n    filter_by: {},\n    group_by: {\n        project: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst defaultColumnOptions = [\n    { label: messages.monthOverMonthChange, value: DetailsTableColumnIds.monthOverMonth },\n    {\n        description: messages.ocpDetailsInfrastructureCostDesc,\n        label: messages.ocpDetailsInfrastructureCost,\n        value: DetailsTableColumnIds.infrastructure,\n        hidden: true,\n    },\n    {\n        description: messages.ocpDetailsSupplementaryCostDesc,\n        label: messages.ocpDetailsSupplementaryCost,\n        value: DetailsTableColumnIds.supplementary,\n        hidden: true,\n    },\n];\nconst reportType = ReportType.cost;\nconst reportPathsType = ReportPathsType.ocp;\nclass OcpDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            hiddenColumns: initHiddenColumns(defaultColumnOptions),\n            isAllSelected: false,\n            isColumnManagementModalOpen: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getColumnManagementModal = () => {\n            const { hiddenColumns, isColumnManagementModalOpen } = this.state;\n            const options = cloneDeep(defaultColumnOptions);\n            options.map(option => {\n                option.hidden = hiddenColumns.has(option.value);\n            });\n            return (React.createElement(ColumnManagementModal, { isOpen: isColumnManagementModalOpen, options: options, onClose: this.handleColumnManagementModalClose, onSave: this.handleColumnManagementModalSave }));\n        };\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey || groupById,\n            });\n        };\n        this.getExportModal = (computedItems) => {\n            const { query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `${noPrefix}${groupById}` || item.label === `${noPrefix}${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, report, router } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = offset / limit + 1;\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handlePerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.openShift),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { isRosFeatureEnabled, query, report, reportFetchStatus, reportQueryString, router } = this.props;\n            const { hiddenColumns, isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return (React.createElement(DetailsTable, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, groupByTagKey: groupByTagKey, hiddenColumns: hiddenColumns, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, isRosFeatureEnabled: isRosFeatureEnabled, onSelected: this.handleSelected, onSort: (sortType, isSortAscending) => handleSort(query, router, sortType, isSortAscending), report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, report, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(DetailsToolbar, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isDisabled || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onColumnManagementClicked: this.handleColumnManagementModalOpen, onExportClicked: this.handleExportModalOpen, onFilterAdded: filter => handleFilterAdded(query, router, filter), onFilterRemoved: filter => handleFilterRemoved(query, router, filter), onPlatformCostsChanged: this.handlePlatformCostsChanged, pagination: this.getPagination(isDisabled), query: query, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleColumnManagementModalClose = (isOpen) => {\n            this.setState({ isColumnManagementModalOpen: isOpen });\n        };\n        this.handleColumnManagementModalOpen = () => {\n            this.setState({ isColumnManagementModalOpen: true });\n        };\n        this.handleColumnManagementModalSave = (hiddenColumns) => {\n            this.setState({ hiddenColumns });\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            const groupByKey = groupBy;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: '*',\n                }, order_by: { cost: 'desc' }, category: undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handlePlatformCostsChanged = (checked) => {\n            const { query, router } = this.props;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { category: checked ? platformCategoryKey : undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.updateReport = () => {\n            const { fetchReport, reportQueryString } = this.props;\n            fetchReport(reportPathsType, reportType, reportQueryString);\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleColumnManagementModalClose = this.handleColumnManagementModalClose.bind(this);\n        this.handleColumnManagementModalOpen = this.handleColumnManagementModalOpen.bind(this);\n        this.handleColumnManagementModalSave = this.handleColumnManagementModalSave.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handlePlatformCostsChanged = this.handlePlatformCostsChanged.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { currency, intl, providers, providersFetchStatus, query, report, reportError, reportFetchStatus, router } = this.props;\n        const computedItems = this.getComputedItems();\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const isDisabled = computedItems.length === 0;\n        const title = intl.formatMessage(messages.ocpDetailsTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.inProgress) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.complete) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: ProviderType.ocp, title: title });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.ocpDetails },\n            React.createElement(DetailsHeader, { currency: currency, groupBy: groupById, onCurrencySelected: value => handleCurrencySelected(query, router, value), onGroupBySelected: this.handleGroupBySelected, report: report }),\n            React.createElement(\"div\", { style: styles.content },\n                this.getToolbar(computedItems),\n                this.getExportModal(computedItems),\n                this.getColumnManagementModal(),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const currency = featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state) ? getCurrency() : undefined;\n    const query = {\n        delta: 'cost',\n        filter: Object.assign(Object.assign({}, baseQuery.filter), queryFromRoute.filter),\n        filter_by: queryFromRoute.filter_by || baseQuery.filter_by,\n        exclude: queryFromRoute.exclude || baseQuery.exclude,\n        group_by: queryFromRoute.group_by || baseQuery.group_by,\n        order_by: queryFromRoute.order_by || baseQuery.order_by,\n        category: queryFromRoute.category,\n    };\n    const reportQueryString = getQuery(Object.assign(Object.assign({}, query), { currency }));\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        currency,\n        isRosFeatureEnabled: featureFlagsSelectors.selectIsRosFeatureEnabled(state),\n        providers: filterProviders(providers, ProviderType.ocp),\n        providersFetchStatus,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(OcpDetails)));\n","import { connect } from 'react-redux';\nimport { CostOverviewBase } from 'routes/views/details/components/costOverview';\nimport { rhelCostOverviewSelectors } from 'store/breakdown/costOverview/rhelCostOverview';\nimport { createMapStateToProps } from 'store/common';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { title }) => {\n    return {\n        selectWidgets: rhelCostOverviewSelectors.selectWidgets(state),\n        widgets: rhelCostOverviewSelectors.selectCurrentWidgets(state),\n        title,\n    };\n});\nconst CostOverview = connect(mapStateToProps, {})(CostOverviewBase);\nexport { CostOverview };\n","import { connect } from 'react-redux';\nimport { HistoricalDataBase } from 'routes/views/details/components/historicalData';\nimport { rhelHistoricalDataSelectors } from 'store/breakdown/historicalData/rhelHistoricalData';\nimport { createMapStateToProps } from 'store/common';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        selectWidgets: rhelHistoricalDataSelectors.selectWidgets(state),\n        widgets: rhelHistoricalDataSelectors.selectCurrentWidgets(state),\n    };\n});\nconst HistoricalData = connect(mapStateToProps, {})(HistoricalDataBase);\nexport { HistoricalData };\n","import { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { getQuery, parseQuery } from 'api/queries/rhelQuery';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport { TagPathsType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { routes } from 'routes';\nimport { BreakdownBase } from 'routes/views/details/components/breakdown';\nimport { getGroupById, getGroupByValue } from 'routes/views/utils/groupBy';\nimport { isPlatformCosts } from 'routes/views/utils/paths';\nimport { filterProviders } from 'routes/views/utils/providers';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nimport { formatPath } from 'utils/paths';\nimport { breakdownDescKey, breakdownTitleKey } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { CostOverview } from './costOverview';\nimport { HistoricalData } from './historicalData';\nconst detailsURL = formatPath(routes.rhelDetails.path);\nconst reportType = ReportType.cost;\nconst reportPathsType = ReportPathsType.rhel;\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { intl, router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const groupBy = getGroupById(queryFromRoute);\n    const groupByValue = getGroupByValue(queryFromRoute);\n    const currency = featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state) ? getCurrency() : undefined;\n    const newQuery = {\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        filter_by: Object.assign(Object.assign(Object.assign({}, (queryFromRoute && queryFromRoute.filter_by && queryFromRoute.filter_by)), (queryFromRoute && queryFromRoute.filter && { category: queryFromRoute.filter.category })), (groupBy && { [groupBy]: undefined })),\n        exclude: Object.assign({}, (queryFromRoute && queryFromRoute.exclude && queryFromRoute.exclude)),\n        group_by: Object.assign({}, (groupBy && { [groupBy]: groupByValue })),\n        category: queryFromRoute.category, // Needed to restore details page state\n    };\n    const reportQueryString = getQuery(Object.assign(Object.assign({}, newQuery), { category: undefined, currency }));\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    const title = queryFromRoute[breakdownTitleKey] ? queryFromRoute[breakdownTitleKey] : groupByValue;\n    return {\n        costOverviewComponent: (React.createElement(CostOverview, { currency: currency, groupBy: groupBy, isPlatformCosts: isPlatformCosts(queryFromRoute), report: report, title: title })),\n        currency,\n        description: queryFromRoute[breakdownDescKey],\n        detailsURL,\n        emptyStateTitle: intl.formatMessage(messages.rhelDetailsTitle),\n        groupBy,\n        groupByValue,\n        historicalDataComponent: React.createElement(HistoricalData, { currency: currency }),\n        providers: filterProviders(providers, ProviderType.rhel),\n        providersFetchStatus,\n        providerType: ProviderType.rhel,\n        query: queryFromRoute,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportType,\n        reportPathsType,\n        reportQueryString,\n        tagReportPathsType: TagPathsType.rhel,\n        title,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst RhelBreakdown = injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(BreakdownBase)));\nexport default RhelBreakdown;\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costValue: {\n        marginTop: global_spacer_lg.var,\n        marginBottom: 0,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    dateTitle: {\n        textAlign: 'end',\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentLeft: {\n        display: 'flex',\n        minHeight: '90px',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    info: {\n        verticalAlign: 'middle',\n    },\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes, Tooltip } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { TagPathsType } from 'api/tags/tag';\nimport { ExportsLink } from 'components/exports';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Currency } from 'routes/components/currency';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { GroupBy } from 'routes/views/components/groupBy';\nimport { filterProviders } from 'routes/views/utils/providers';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedRhelReportItems';\nimport { getSinceDateRangeString } from 'utils/dates';\nimport { formatCurrency } from 'utils/format';\nimport { styles } from './detailsHeader.styles';\nconst groupByOptions = [\n    { label: 'cluster', value: 'cluster' },\n    { label: 'node', value: 'node' },\n    { label: 'project', value: 'project' },\n];\nconst tagReportPathsType = TagPathsType.rhel;\nclass DetailsHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { currency, groupBy, isCurrencyFeatureEnabled, isExportsFeatureEnabled, onCurrencySelected, onGroupBySelected, providers, providersError, report, intl, } = this.props;\n        const showContent = report && !providersError && providers && providers.meta && providers.meta.count > 0;\n        let cost = React.createElement(EmptyValueState, null);\n        let supplementaryCost = React.createElement(EmptyValueState, null);\n        let infrastructureCost = React.createElement(EmptyValueState, null);\n        if (report && report.meta && report.meta.total) {\n            const hasCost = report.meta.total.cost && report.meta.total.cost.total;\n            const hasSupplementaryCost = report.meta.total.supplementary && report.meta.total.supplementary.total;\n            const hasInfrastructureCost = report.meta.total.infrastructure && report.meta.total.infrastructure.total;\n            cost = formatCurrency(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD');\n            supplementaryCost = formatCurrency(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost ? report.meta.total.supplementary.total.units : 'USD');\n            infrastructureCost = formatCurrency(hasInfrastructureCost ? report.meta.total.infrastructure.total.value : 0, hasInfrastructureCost ? report.meta.total.infrastructure.total.units : 'USD');\n        }\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.rhelDetailsTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    isCurrencyFeatureEnabled && React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(\"div\", { style: styles.headerContentLeft },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: !showContent, onSelected: onGroupBySelected, options: groupByOptions, showTags: true, tagReportPathsType: tagReportPathsType })),\n                Boolean(showContent) && (React.createElement(\"div\", null,\n                    React.createElement(Tooltip, { content: intl.formatMessage(messages.dashboardTotalCostTooltip, {\n                            infrastructureCost,\n                            supplementaryCost,\n                        }), enableFlip: true },\n                        React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: TitleSizes['4xl'] }, cost)),\n                    React.createElement(\"div\", { style: styles.dateTitle }, getSinceDateRangeString()))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        isCurrencyFeatureEnabled: featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state),\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        providers: filterProviders(providers, ProviderType.rhel),\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n    };\n});\nconst DetailsHeader = injectIntl(connect(mapStateToProps, {})(DetailsHeaderBase));\nexport { DetailsHeader };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport 'routes/views/details/components/dataTable/dataTable.scss';\nimport { Label } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { ReportPathsType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { Actions } from 'routes/views/details/components/actions';\nimport { DataTable } from 'routes/views/details/components/dataTable';\nimport { styles } from 'routes/views/details/components/dataTable/dataTable.styles';\nimport { getBreakdownPath } from 'routes/views/utils/paths';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getForDateRangeString, getNoDataForDateRangeString } from 'utils/dates';\nimport { formatCurrency, formatPercentage } from 'utils/format';\nimport { formatPath } from 'utils/paths';\nimport { noPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nexport const DetailsTableColumnIds = {\n    infrastructure: 'infrastructure',\n    monthOverMonth: 'monthOverMonth',\n    supplementary: 'supplementary',\n};\nconst reportPathsType = ReportPathsType.rhel;\nclass DetailsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { groupBy, groupByTagKey, hiddenColumns, intl, isAllSelected, report, router, selectedItems } = this.props;\n            if (!report) {\n                return;\n            }\n            const showDefaultProject = groupBy === 'project';\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey ? groupByTagKey : groupBy,\n            });\n            const columns = groupByTagKey\n                ? [\n                    // Sorting with tag keys is not supported\n                    {\n                        name: '',\n                    },\n                    {\n                        name: intl.formatMessage(messages.tagNames),\n                        style: groupBy === 'project' ? styles.nameColumn : undefined,\n                    },\n                    {\n                        hidden: !showDefaultProject,\n                        name: '', // Default column\n                    },\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    {\n                        id: DetailsTableColumnIds.infrastructure,\n                        name: intl.formatMessage(messages.rhelDetailsInfrastructureCost),\n                        style: styles.managedColumn,\n                    },\n                    {\n                        id: DetailsTableColumnIds.supplementary,\n                        name: intl.formatMessage(messages.rhelDetailsSupplementaryCost),\n                        style: styles.managedColumn,\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign(Object.assign({ orderBy: groupBy, name: intl.formatMessage(messages.detailsResourceNames, { value: groupBy }) }, (computedItems.length && { isSortable: true })), { style: groupBy === 'project' ? styles.nameColumn : undefined }),\n                    {\n                        hidden: !showDefaultProject,\n                        name: '', // Default column\n                    },\n                    {\n                        id: DetailsTableColumnIds.monthOverMonth,\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    {\n                        id: DetailsTableColumnIds.infrastructure,\n                        orderBy: 'infrastructure_cost',\n                        name: intl.formatMessage(messages.rhelDetailsInfrastructureCost),\n                        style: styles.managedColumn,\n                        // Sort by infrastructure_cost is not supported -- https://github.com/project-koku/koku/issues/796\n                        // ...(computedItems.length && { isSortable: true }),\n                    },\n                    {\n                        id: DetailsTableColumnIds.supplementary,\n                        orderBy: 'supplementary_cost',\n                        name: intl.formatMessage(messages.rhelDetailsSupplementaryCost),\n                        style: styles.managedColumn,\n                        // Sort by supplementary_cost is not supported -- https://github.com/project-koku/koku/issues/796\n                        // ...(computedItems.length && { isSortable: true }),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ];\n            computedItems.map((item, index) => {\n                const cost = this.getTotalCost(item, index);\n                const label = item && item.label !== null ? item.label : '';\n                const monthOverMonth = this.getMonthOverMonthCost(item, index);\n                const supplementaryCost = this.getSupplementaryCost(item, index);\n                const InfrastructureCost = this.getInfrastructureCost(item, index);\n                const desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                const isDisabled = label === `${noPrefix}${groupBy}` || label === `${noPrefix}${groupByTagKey}`;\n                const actions = this.getActions(item, isDisabled);\n                const name = isDisabled ? label : (React.createElement(Link, { to: getBreakdownPath({\n                        basePath: formatPath(routes.rhelDetailsBreakdown.path),\n                        description: item.id,\n                        groupBy,\n                        id: item.id,\n                        router,\n                        title: label.toString(),\n                    }) }, label));\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: (React.createElement(React.Fragment, null,\n                                React.createElement(\"div\", null, name),\n                                React.createElement(\"div\", { style: styles.infoDescription }, desc))),\n                        },\n                        {\n                            hidden: !showDefaultProject,\n                            value: item.default_project ? (React.createElement(\"div\", null,\n                                React.createElement(Label, { variant: \"outline\", color: \"green\" }, intl.formatMessage(messages.default)))) : (React.createElement(\"div\", { style: styles.defaultLabel })),\n                        },\n                        { value: React.createElement(\"div\", null, monthOverMonth), id: DetailsTableColumnIds.monthOverMonth },\n                        {\n                            value: React.createElement(\"div\", null, InfrastructureCost),\n                            id: DetailsTableColumnIds.infrastructure,\n                            style: styles.managedColumn,\n                        },\n                        {\n                            value: React.createElement(\"div\", null, supplementaryCost),\n                            id: DetailsTableColumnIds.supplementary,\n                            style: styles.managedColumn,\n                        },\n                        { value: React.createElement(\"div\", null, cost), style: styles.managedColumn },\n                        { value: React.createElement(\"div\", null, actions) },\n                    ],\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                    selectionDisabled: isDisabled,\n                });\n            });\n            const filteredColumns = columns.filter(column => !hiddenColumns.has(column.id) && !column.hidden);\n            const filteredRows = rows.map((_a) => {\n                var row = __rest(_a, []);\n                row.cells = row.cells.filter(cell => !hiddenColumns.has(cell.id) && !cell.hidden);\n                return row;\n            });\n            this.setState({\n                columns: filteredColumns,\n                rows: filteredRows,\n            });\n        };\n        this.getActions = (item, isDisabled) => {\n            const { groupBy, reportQueryString } = this.props;\n            return (React.createElement(Actions, { groupBy: groupBy, isDisabled: isDisabled, item: item, providerType: ProviderType.rhel, reportPathsType: reportPathsType, reportQueryString: reportQueryString, showPriceListOption: groupBy === 'cluster' }));\n        };\n        this.getSupplementaryCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.supplementary.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.supplementary.total.value, item.supplementary.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n        this.getInfrastructureCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.infrastructure.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.infrastructure.total.value, item.infrastructure.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n        this.getMonthOverMonthCost = (item, index) => {\n            const { intl } = this.props;\n            const value = formatCurrency(Math.abs(item.cost.total.value - item.delta_value), item.cost.total.units);\n            const percentage = item.delta_percent !== null ? formatPercentage(Math.abs(item.delta_percent)) : 0;\n            const showPercentage = !(percentage === 0 || percentage === '0.00');\n            const showValue = item.delta_percent !== null; // Workaround for https://github.com/project-koku/koku/issues/1395\n            let iconOverride;\n            if (showPercentage) {\n                iconOverride = 'iconOverride';\n                if (item.delta_percent !== null && item.delta_value < 0) {\n                    iconOverride += ' decrease';\n                }\n                if (item.delta_percent !== null && item.delta_value > 0) {\n                    iconOverride += ' increase';\n                }\n            }\n            if (!showValue) {\n                return getNoDataForDateRangeString();\n            }\n            else {\n                return (React.createElement(\"div\", { className: \"monthOverMonthOverride\" },\n                    React.createElement(\"div\", { className: iconOverride, key: `month-over-month-cost-${index}` },\n                        showPercentage ? intl.formatMessage(messages.percent, { value: percentage }) : React.createElement(EmptyValueState, null),\n                        Boolean(showPercentage && item.delta_percent !== null && item.delta_value > 0) && (React.createElement(\"span\", { className: \"fa fa-sort-up\", style: styles.infoArrow, key: `month-over-month-icon-${index}` })),\n                        Boolean(showPercentage && item.delta_percent !== null && item.delta_value < 0) && (React.createElement(\"span\", { className: \"fa fa-sort-down\", style: Object.assign(Object.assign({}, styles.ininfoArrow), styles.infoArrowDesc), key: `month-over-month-icon-${index}` }))),\n                    React.createElement(\"div\", { style: styles.infoDescription, key: `month-over-month-info-${index}` }, getForDateRangeString(value))));\n            }\n        };\n        this.getTotalCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.cost.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.cost.total.value, item.cost.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { hiddenColumns, report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport ||\n            prevProps.selectedItems !== selectedItems ||\n            prevProps.hiddenColumns !== hiddenColumns) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { isLoading, onSelected, onSort, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, isLoading: isLoading, onSelected: onSelected, onSort: onSort, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst DetailsTable = injectIntl(withRouter(DetailsTableBase));\nexport { DetailsTable };\n","import { getQuery } from 'api/queries/ocpQuery';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType, TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { isEqual } from 'utils/equal';\nimport { tagKey } from 'utils/props';\nconst tagReportType = TagType.tag;\nconst tagReportPathsType = TagPathsType.ocp;\nexport class DetailsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { intl, tagReport } = this.props;\n            const options = [\n                { name: intl.formatMessage(messages.filterByValues, { value: 'cluster' }), key: 'cluster' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'node' }), key: 'node' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'project' }), key: 'project' },\n            ];\n            if (tagReport && tagReport.data && tagReport.data.length) {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: tagKey }),\n                    key: tagKey,\n                });\n            }\n            return options;\n        };\n    }\n    componentDidMount() {\n        const { fetchTag, tagReportFetchStatus, tagQueryString } = this.props;\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        }, () => {\n            if (tagReportFetchStatus !== FetchStatus.inProgress) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchTag, query, tagReport, tagReportFetchStatus, tagQueryString } = this.props;\n        if (!isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            }, () => {\n                if (tagReportFetchStatus !== FetchStatus.inProgress) {\n                    fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n                }\n            });\n        }\n        else if (query && !isEqual(query, prevProps.query) && tagReportFetchStatus !== FetchStatus.inProgress) {\n            fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n        }\n    }\n    render() {\n        const { groupBy, isAllSelected, isDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onColumnManagementClicked, onExportClicked, onFilterAdded, onFilterRemoved, onPlatformCostsChanged, pagination, query, selectedItems, tagReport, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, groupBy: groupBy, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onColumnManagementClicked: onColumnManagementClicked, onExportClicked: onExportClicked, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, onPlatformCostsChanged: onPlatformCostsChanged, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.ocp, selectedItems: selectedItems, showBulkSelect: true, showColumnManagement: true, showExport: true, showFilter: true, tagReport: tagReport, tagReportPathsType: tagReportPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        key_only: true,\n        limit: 1000,\n    });\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, tagQueryString);\n    return {\n        tagReport,\n        tagReportFetchStatus,\n        tagQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst DetailsToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsToolbarBase);\nconst DetailsToolbar = injectIntl(DetailsToolbarConnect);\nexport { DetailsToolbar };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    ocpDetails: {\n        minHeight: '100%',\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getQuery, parseQuery } from 'api/queries/ocpQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport { cloneDeep } from 'lodash';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoData } from 'routes/state/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { ExportModal } from 'routes/views/components/export';\nimport { ColumnManagementModal, initHiddenColumns } from 'routes/views/details/components/columnManagement';\nimport { getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { handleCurrencySelected, handleFilterAdded, handleFilterRemoved, handlePerPageSelect, handleSetPage, handleSort, } from 'routes/views/utils/handles';\nimport { filterProviders, hasCurrentMonthData } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedOcpReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getCurrency } from 'utils/localStorage';\nimport { noPrefix, platformCategoryKey, tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { DetailsHeader } from './detailsHeader';\nimport { DetailsTable, DetailsTableColumnIds } from './detailsTable';\nimport { DetailsToolbar } from './detailsToolbar';\nimport { styles } from './rhelDetails.styles';\nconst baseQuery = {\n    delta: 'cost',\n    filter: {\n        limit: 10,\n        offset: 0,\n        resolution: 'monthly',\n        time_scope_units: 'month',\n        time_scope_value: -1,\n    },\n    exclude: {},\n    filter_by: {},\n    group_by: {\n        project: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst defaultColumnOptions = [\n    { label: messages.monthOverMonthChange, value: DetailsTableColumnIds.monthOverMonth },\n    {\n        description: messages.ocpDetailsInfrastructureCostDesc,\n        label: messages.ocpDetailsInfrastructureCost,\n        value: DetailsTableColumnIds.infrastructure,\n        hidden: true,\n    },\n    {\n        description: messages.ocpDetailsSupplementaryCostDesc,\n        label: messages.ocpDetailsSupplementaryCost,\n        value: DetailsTableColumnIds.supplementary,\n        hidden: true,\n    },\n];\nconst reportType = ReportType.cost;\nconst reportPathsType = ReportPathsType.ocp;\nclass RhelDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            hiddenColumns: initHiddenColumns(defaultColumnOptions),\n            isAllSelected: false,\n            isColumnManagementModalOpen: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getColumnManagementModal = () => {\n            const { hiddenColumns, isColumnManagementModalOpen } = this.state;\n            const options = cloneDeep(defaultColumnOptions);\n            options.map(option => {\n                option.hidden = hiddenColumns.has(option.value);\n            });\n            return (React.createElement(ColumnManagementModal, { isOpen: isColumnManagementModalOpen, options: options, onClose: this.handleColumnManagementModalClose, onSave: this.handleColumnManagementModalSave }));\n        };\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey || groupById,\n            });\n        };\n        this.getExportModal = (computedItems) => {\n            const { query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `${noPrefix}${groupById}` || item.label === `${noPrefix}${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, report, router } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = offset / limit + 1;\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handlePerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.openShift),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { query, report, reportFetchStatus, reportQueryString, router } = this.props;\n            const { hiddenColumns, isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return (React.createElement(DetailsTable, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, groupByTagKey: groupByTagKey, hiddenColumns: hiddenColumns, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending) => handleSort(query, router, sortType, isSortAscending), report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, report, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(DetailsToolbar, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isDisabled || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onColumnManagementClicked: this.handleColumnManagementModalOpen, onExportClicked: this.handleExportModalOpen, onFilterAdded: filter => handleFilterAdded(query, router, filter), onFilterRemoved: filter => handleFilterRemoved(query, router, filter), onPlatformCostsChanged: this.handlePlatformCostsChanged, pagination: this.getPagination(), query: query, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleColumnManagementModalClose = (isOpen) => {\n            this.setState({ isColumnManagementModalOpen: isOpen });\n        };\n        this.handleColumnManagementModalOpen = () => {\n            this.setState({ isColumnManagementModalOpen: true });\n        };\n        this.handleColumnManagementModalSave = (hiddenColumns) => {\n            this.setState({ hiddenColumns });\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            const groupByKey = groupBy;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: '*',\n                }, order_by: { cost: 'desc' }, category: undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handlePlatformCostsChanged = (checked) => {\n            const { query, router } = this.props;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { category: checked ? platformCategoryKey : undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.updateReport = () => {\n            const { fetchReport, reportQueryString } = this.props;\n            fetchReport(reportPathsType, reportType, reportQueryString);\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleColumnManagementModalClose = this.handleColumnManagementModalClose.bind(this);\n        this.handleColumnManagementModalOpen = this.handleColumnManagementModalOpen.bind(this);\n        this.handleColumnManagementModalSave = this.handleColumnManagementModalSave.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handlePlatformCostsChanged = this.handlePlatformCostsChanged.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { currency, intl, providers, providersFetchStatus, query, report, reportError, reportFetchStatus, router } = this.props;\n        const computedItems = this.getComputedItems();\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const isDisabled = computedItems.length === 0;\n        const title = intl.formatMessage(messages.ocpDetailsTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.inProgress) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.complete) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: ProviderType.ocp, title: title });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.ocpDetails },\n            React.createElement(DetailsHeader, { currency: currency, groupBy: groupById, onCurrencySelected: value => handleCurrencySelected(query, router, value), onGroupBySelected: this.handleGroupBySelected, report: report }),\n            React.createElement(\"div\", { style: styles.content },\n                this.getToolbar(computedItems),\n                this.getExportModal(computedItems),\n                this.getColumnManagementModal(),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const currency = featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state) ? getCurrency() : undefined;\n    const query = {\n        delta: 'cost',\n        filter: Object.assign(Object.assign({}, baseQuery.filter), queryFromRoute.filter),\n        filter_by: queryFromRoute.filter_by || baseQuery.filter_by,\n        exclude: queryFromRoute.exclude || baseQuery.exclude,\n        group_by: queryFromRoute.group_by || baseQuery.group_by,\n        order_by: queryFromRoute.order_by || baseQuery.order_by,\n        category: queryFromRoute.category,\n    };\n    const reportQueryString = getQuery(Object.assign(Object.assign({}, query), { currency }));\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        currency,\n        providers: filterProviders(providers, ProviderType.ocp),\n        providersFetchStatus,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(RhelDetails)));\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    rosDetails: {\n        minHeight: '100%',\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costValue: {\n        marginTop: global_spacer_lg.var,\n        marginBottom: 0,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    dateTitle: {\n        textAlign: 'end',\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentLeft: {\n        display: 'flex',\n        minHeight: '90px',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    info: {\n        verticalAlign: 'middle',\n    },\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { styles } from './rosHeader.styles';\nclass RosHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.recommendations)))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n    // TBD...\n    };\n});\nconst RosHeader = injectIntl(connect(mapStateToProps, {})(RosHeaderBase));\nexport { RosHeader };\n","import 'routes/views/details/components/dataTable/dataTable.scss';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataTable } from 'routes/views/details/components/dataTable';\nimport { styles } from 'routes/views/details/components/dataTable/dataTable.styles';\nimport { createMapStateToProps } from 'store/common';\nimport { uiActions, uiSelectors } from 'store/ui';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nclass RosTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { intl, report } = this.props;\n            if (!report) {\n                return;\n            }\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: 'project', // Todo: getUnsortedComputedReportItems required for fake data.\n            });\n            const columns = [\n                Object.assign(Object.assign({}, (computedItems.length && { isSortable: true })), { name: intl.formatMessage(messages.recommendationsNames, { value: 'cluster' }), orderBy: 'cluster' }),\n                Object.assign(Object.assign({}, (computedItems.length && { isSortable: true })), { name: intl.formatMessage(messages.recommendationsNames, { value: 'project' }), orderBy: 'project' }),\n                Object.assign(Object.assign({}, (computedItems.length && { isSortable: true })), { name: intl.formatMessage(messages.recommendationsNames, { value: 'workload_type' }), orderBy: 'workload_type' }),\n                Object.assign(Object.assign({}, (computedItems.length && { isSortable: true })), { name: intl.formatMessage(messages.recommendationsNames, { value: 'workload' }), orderBy: 'workload' }),\n                Object.assign(Object.assign({}, (computedItems.length && { isSortable: true })), { name: intl.formatMessage(messages.recommendationsNames, { value: 'container' }), orderBy: 'container' }),\n                Object.assign(Object.assign({}, (computedItems.length && { isSortable: true })), { name: intl.formatMessage(messages.recommendationsNames, { value: 'last_reported' }), orderBy: 'last_reported', style: styles.lastReportedColumn }),\n            ];\n            computedItems.map((item, index) => {\n                const cluster = item && item.clusters !== null ? item.clusters[0] : '';\n                const container = `Container${index}`;\n                const lastReported = `6 hours ago`;\n                const project = item && item.label !== null ? item.label : '';\n                const workload = `Workload${index}`;\n                const workloadType = `Workload type${index}`;\n                rows.push({\n                    cells: [\n                        { value: React.createElement(\"div\", null, cluster) },\n                        { value: React.createElement(\"div\", null, project) },\n                        { value: React.createElement(\"div\", null, workloadType) },\n                        { value: React.createElement(\"div\", null, workload) },\n                        { value: React.createElement(\"div\", null, container) },\n                        { value: React.createElement(\"div\", null, lastReported), style: styles.lastReported },\n                    ],\n                    item: {\n                        cluster,\n                        container,\n                        lastReported,\n                        project,\n                        workload,\n                        workloadType,\n                    },\n                });\n            });\n            this.setState({\n                columns,\n                rows,\n            });\n        };\n        this.handleOnRowClick = (event, rowIndex) => {\n            const { openRecommendationsDrawer } = this.props;\n            const { rows } = this.state;\n            openRecommendationsDrawer(rows[rowIndex].item);\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { report } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { isLoading, onSort } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, isLoading: isLoading, isRos: true, onSort: onSort, rows: rows, onRowClick: this.handleOnRowClick }));\n    }\n}\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        isOpen: uiSelectors.selectIsRecommendationsDrawerOpen(state),\n    };\n});\nconst mapDispatchToProps = {\n    closeRecommendationsDrawer: uiActions.closeRecommendationsDrawer,\n    openRecommendationsDrawer: uiActions.openRecommendationsDrawer,\n    // authRequest: (...args) => dispatch(authRequest(...args)),\n};\nconst RosTable = injectIntl(connect(mapStateToProps, mapDispatchToProps)(RosTableBase));\nexport { RosTable };\n","import { ResourcePathsType } from 'api/resources/resource';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { createMapStateToProps } from 'store/common';\nexport class RosToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { intl } = this.props;\n            const options = [\n                { name: intl.formatMessage(messages.filterByValues, { value: 'cluster' }), key: 'cluster' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'project' }), key: 'project' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'workload_type' }), key: 'workload_type' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'workload' }), key: 'workload' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'container' }), key: 'container' },\n            ];\n            return options;\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        // TBD...\n    }\n    render() {\n        const { isDisabled, itemsPerPage, itemsTotal, onFilterAdded, onFilterRemoved, pagination, query } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, isDisabled: isDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.ocp, showFilter: true }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n    // TBD...\n    };\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst RosToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(RosToolbarBase);\nconst RosToolbar = injectIntl(RosToolbarConnect);\nexport { RosToolbar };\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { getQuery, parseQuery } from 'api/queries/rosQuery';\nimport { RosPathsType, RosType } from 'api/ros/ros';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoData } from 'routes/state/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { handleFilterAdded, handleFilterRemoved, handlePerPageSelect, handleSetPage, handleSort, } from 'routes/views/utils/handles';\nimport { filterProviders, hasCurrentMonthData } from 'routes/views/utils/providers';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { rosActions } from 'store/ros';\nimport { rosSelectors } from 'store/ros';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedRosItems';\nimport { getCurrency } from 'utils/localStorage';\nimport { withRouter } from 'utils/router';\nimport { styles } from './recommendations.styles';\nimport { RosHeader } from './rosHeader';\nimport { RosTable } from './rosTable';\nimport { RosToolbar } from './rosToolbar';\nconst baseQuery = {\n    delta: 'cost',\n    filter: {\n        limit: 10,\n        offset: 0,\n        resolution: 'monthly',\n        time_scope_units: 'month',\n        time_scope_value: -1,\n    },\n    exclude: {},\n    filter_by: {},\n    group_by: {\n        project: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst recommendationType = RosType.cost;\nconst recommendationPathsType = RosPathsType.recommendation;\nclass Recommendations extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            columns: [],\n            rows: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getComputedItems = () => {\n            const { query, recommendation } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return getUnsortedComputedReportItems({\n                report: recommendation,\n                idKey: groupByTagKey || groupById,\n            });\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, recommendation, router } = this.props;\n            const count = recommendation && recommendation.meta ? recommendation.meta.count : 0;\n            const limit = recommendation && recommendation.meta && recommendation.meta.filter && recommendation.meta.filter.limit\n                ? recommendation.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = recommendation && recommendation.meta && recommendation.meta.filter && recommendation.meta.filter.offset\n                ? recommendation.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = offset / limit + 1;\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handlePerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleSetPage(query, router, recommendation, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.openShift),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { query, recommendation, recommendationFetchStatus, recommendationQueryString, router } = this.props;\n            return (React.createElement(RosTable, { isLoading: recommendationFetchStatus === FetchStatus.inProgress, onSort: (sortType, isSortAscending) => handleSort(query, router, sortType, isSortAscending), report: recommendation, reportQueryString: recommendationQueryString }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, recommendation, router } = this.props;\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = recommendation && recommendation.meta ? recommendation.meta.count : 0;\n            return (React.createElement(RosToolbar, { isDisabled: isDisabled, itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onFilterAdded: filter => handleFilterAdded(query, router, filter), onFilterRemoved: filter => handleFilterRemoved(query, router, filter), pagination: this.getPagination(isDisabled), query: query }));\n        };\n        this.handleColumnManagementModalClose = (isOpen) => {\n            this.setState({ isColumnManagementModalOpen: isOpen });\n        };\n        this.handleColumnManagementModalOpen = () => {\n            this.setState({ isColumnManagementModalOpen: true });\n        };\n        this.handleColumnManagementModalSave = (hiddenColumns) => {\n            this.setState({ hiddenColumns });\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.updateRecommendation = () => {\n            const { fetchRos, recommendationQueryString } = this.props;\n            fetchRos(recommendationPathsType, recommendationType, recommendationQueryString);\n        };\n    }\n    componentDidMount() {\n        this.updateRecommendation();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { recommendation, recommendationError, recommendationQueryString, router } = this.props;\n        const newQuery = prevProps.recommendationQueryString !== recommendationQueryString;\n        const noRecommendation = !recommendation && !recommendationError;\n        const noLocation = !router.location.search;\n        if (newQuery || noRecommendation || noLocation) {\n            this.updateRecommendation();\n        }\n    }\n    render() {\n        const { intl, providers, providersFetchStatus, recommendationError, recommendationFetchStatus } = this.props;\n        const computedItems = this.getComputedItems();\n        const isDisabled = computedItems.length === 0;\n        const title = intl.formatMessage(messages.ocpDetailsTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (recommendationError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.inProgress) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.complete) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: ProviderType.ros, title: title });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.rosDetails },\n            React.createElement(RosHeader, null),\n            React.createElement(\"div\", { style: styles.content },\n                this.getToolbar(computedItems),\n                recommendationFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const currency = featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state) ? getCurrency() : undefined;\n    const query = {\n        delta: 'cost',\n        filter: Object.assign(Object.assign({}, baseQuery.filter), queryFromRoute.filter),\n        filter_by: queryFromRoute.filter_by || baseQuery.filter_by,\n        exclude: queryFromRoute.exclude || baseQuery.exclude,\n        group_by: queryFromRoute.group_by || baseQuery.group_by,\n        order_by: queryFromRoute.order_by || baseQuery.order_by,\n        category: queryFromRoute.category,\n    };\n    const recommendationQueryString = getQuery(Object.assign(Object.assign({}, query), { currency }));\n    const recommendation = rosSelectors.selectRos(state, recommendationPathsType, recommendationType, recommendationQueryString);\n    const recommendationError = rosSelectors.selectRosError(state, recommendationPathsType, recommendationType, recommendationQueryString);\n    const recommendationFetchStatus = rosSelectors.selectRosFetchStatus(state, recommendationPathsType, recommendationType, recommendationQueryString);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        currency,\n        providers: filterProviders(providers, ProviderType.ocp),\n        providersFetchStatus,\n        query,\n        recommendation,\n        recommendationError,\n        recommendationFetchStatus,\n        recommendationQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchRos: rosActions.fetchRos,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(Recommendations)));\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    return 'date';\n}\n","import * as utils from './query';\n// filter_by props are converted and returned with logical OR/AND prefix\nexport function getQuery(query) {\n    return utils.getQuery(query);\n}\n// filter_by props are not converted\nexport function getQueryRoute(query) {\n    return utils.getQueryRoute(query);\n}\nexport function parseQuery(query) {\n    return utils.parseQuery(query);\n}\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    return 'date';\n}\n"],"names":["DetailsActionsBase","constructor","stateProps","dispatchProps","super","this","defaultState","isDropdownOpen","isExportModalOpen","state","Object","assign","getExportModal","groupBy","item","reportPathsType","reportQueryString","props","count","isOpen","items","onClose","handleExportModalClose","setState","handleExportModalOpen","handleOnSelect","handleOnToggle","bind","render","isDisabled","showPriceListOption","intl","source_uuid","redirectToCostModel","router","DropdownItem","component","key","onClick","formatMessage","messages","unshift","includes","length","Dropdown","onSelect","toggle","KebabToggle","onToggle","isPlain","position","dropdownItems","mapStateToProps","mapDispatchToProps","costModels","DetailsActionsConnect","connect","injectIntl","initHiddenColumns","options","hiddenColumns","Set","map","option","hidden","add","value","ColumnManagementModalBase","getHidden","result","delete","isHidden","has","handleChange","checked","event","target","id","handleClose","handleSave","onSave","selectAll","componentDidUpdate","prevProps","Modal","description","TextContent","Text","TextVariants","Button","isInline","variant","title","ModalVariant","actions","ButtonVariant","DataList","isCompact","DataListItem","DataListItemRow","DataListCheck","isChecked","name","onChange","DataListItemCells","dataListCells","DataListCell","label","ColumnManagementModalConnect","styles","costColumn","textAlign","display","justifyContent","paddingRight","defaultLabel","minWidth","emptyState","backgroundColor","paddingTop","height","width","infoArrow","infoArrowDesc","bottom","infoDescription","color","fontSize","lastReported","lastReportedColumn","managedColumn","nameColumn","DataTable","getEmptyState","queryFromRoute","location","search","filter_by","val","values","filter","showMargin","EmptyState","EmptyStateIcon","icon","EmptyStateBody","getSortBy","index","columns","orderBy","direction","order_by","getSortParams","sortBy","onSort","handleOnSort","columnIndex","isSelected","rowId","onSelected","rows","newRows","row","selected","SortByDirection","handleOnRowClick","rowIndex","onRowClick","isLoading","isRos","TableComposable","gridBreakPoint","hasSelectableRowCaption","Thead","Tr","col","Th","modifier","sort","isSortable","undefined","style","Tbody","Td","colSpan","Bullseye","Spinner","size","isSelectable","isHoverable","isRowSelected","_event","cells","cellIndex","dataLabel","isActionCell","select","disable","selectionDisabled","Boolean","groupByOptions","tagReportPathsType","DetailsHeaderBase","arguments","currency","isCurrencyFeatureEnabled","isExportsFeatureEnabled","onCurrencySelected","onGroupBySelected","providers","providersError","report","showContent","meta","cost","supplementaryCost","infrastructureCost","total","hasCost","hasSupplementaryCost","supplementary","hasInfrastructureCost","infrastructure","format","units","Title","headingLevel","TitleSizes","getIdKeyForGroupBy","showTags","Tooltip","content","enableFlip","providersQueryString","providersFetchStatus","featureFlags","DetailsHeader","DetailsTableColumnIds","DetailsTableBase","initDatum","groupByTagKey","isAllSelected","isRosFeatureEnabled","selectedItems","showDefaultProject","computedItems","idKey","getTotalCost","monthOverMonth","getMonthOverMonthCost","getSupplementaryCost","InfrastructureCost","getInfrastructureCost","isPlatformCosts","classification","isUnallocatedCosts","desc","getActions","Link","to","basePath","routes","toString","push","Label","find","filteredColumns","column","filteredRows","_a","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","__rest","cell","providerType","percentValue","toFixed","Math","abs","delta_value","percentage","delta_percent","showPercentage","showValue","iconOverride","className","componentDidMount","currentReport","data","JSON","stringify","DetailsTable","tagReportType","DetailsToolbarBase","getCategoryOptions","tagReport","fetchTag","tagReportFetchStatus","tagQueryString","categoryOptions","query","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onColumnManagementClicked","onExportClicked","onFilterAdded","onFilterRemoved","onPlatformCostsChanged","pagination","resourcePathsType","showBulkSelect","showColumnManagement","showExport","showFilter","showPlatformCosts","resolution","time_scope_units","time_scope_value","key_only","limit","DetailsToolbarConnect","DetailsToolbar","paddingBottom","global_spacer_lg","ocpDetails","minHeight","paginationContainer","marginLeft","marginRight","global_BackgroundColor_light_100","global_spacer_md","tableContainer","baseQuery","delta","offset","exclude","group_by","project","defaultColumnOptions","reportType","OcpDetails","isColumnManagementModalOpen","getColumnManagementModal","cloneDeep","handleColumnManagementModalClose","handleColumnManagementModalSave","getComputedItems","groupById","isAllItems","getPagination","isBottom","page","Pagination","itemCount","onPerPageSelect","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","PaginationVariant","widgetId","getTable","reportFetchStatus","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","handleColumnManagementModalOpen","handlePlatformCostsChanged","action","handleGroupBySelected","groupByKey","newQuery","parse","category","navigate","replace","newItems","updateReport","fetchReport","prevState","reportError","noReport","noLocation","selectWidgets","rhelCostOverview","widgets","CostOverview","rhelHistoricalData","HistoricalData","detailsURL","groupByValue","costOverviewComponent","emptyStateTitle","historicalDataComponent","cluster","node","costValue","marginTop","marginBottom","costLabelUnit","global_FontSize_sm","global_Color_100","dateTitle","header","padding","headerContent","headerContentLeft","headerContentRight","info","verticalAlign","infoIcon","global_FontSize_md","infoTitle","fontWeight","global_spacer_sm","default_project","RhelDetails","rosDetails","RosHeaderBase","RosHeader","RosTableBase","clusters","container","workload","workloadType","openRecommendationsDrawer","ui","closeRecommendationsDrawer","RosTable","RosToolbarBase","RosToolbarConnect","RosToolbar","recommendationType","recommendationPathsType","Recommendations","recommendation","recommendationFetchStatus","recommendationQueryString","updateRecommendation","fetchRos","recommendationError","noRecommendation","parseQuery","getQuery"],"sourceRoot":""}