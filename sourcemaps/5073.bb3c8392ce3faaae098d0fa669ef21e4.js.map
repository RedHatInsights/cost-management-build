{"version":3,"file":"js/5073.1670642770141.99f58f7c517bc8facd75.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/calculator-icon.js","webpack:///./node_modules/js-file-download/file-download.js","webpack:///./src/routes/views/components/export/exportModal.styles.ts","webpack:///./src/routes/views/components/export/exportSubmit.tsx","webpack:///./src/routes/views/components/export/exportModal.tsx","webpack:///./src/routes/views/components/groupBy/groupBy.styles.ts","webpack:///./src/routes/views/components/groupBy/groupByOrg.tsx","webpack:///./src/routes/views/components/groupBy/groupByTag.tsx","webpack:///./src/routes/views/components/groupBy/groupBy.tsx","webpack:///./src/routes/views/utils/dateRange.ts"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const CalculatorIconConfig = {\n  name: 'CalculatorIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M400 0H48C22.4 0 0 22.4 0 48v416c0 25.6 22.4 48 48 48h352c25.6 0 48-22.4 48-48V48c0-25.6-22.4-48-48-48zM128 435.2c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm0-128c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm128 128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm0-128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm128 128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8V268.8c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v166.4zm0-256c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8V76.8C64 70.4 70.4 64 76.8 64h294.4c6.4 0 12.8 6.4 12.8 12.8v102.4z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const CalculatorIcon = createIcon(CalculatorIconConfig);\n\nexport default CalculatorIcon;","module.exports = function(data, filename, mime, bom) {\n    var blobData = (typeof bom !== 'undefined') ? [bom, data] : [data]\n    var blob = new Blob(blobData, {type: mime || 'application/octet-stream'});\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    }\n    else {\n        var blobURL = (window.URL && window.URL.createObjectURL) ? window.URL.createObjectURL(blob) : window.webkitURL.createObjectURL(blob);\n        var tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n\n        // Fixes \"webkit blob resource error 1\"\n        setTimeout(function() {\n            document.body.removeChild(tempLink);\n            window.URL.revokeObjectURL(blobURL);\n        }, 200)\n    }\n}\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    alert: {\n        marginBottom: global_spacer_md.var,\n    },\n    form: {\n        marginLeft: global_spacer_sm.var,\n    },\n    modal: {\n        input: {\n            marginRight: global_spacer_xs.var,\n        },\n        ul: {\n            marginLeft: global_spacer_sm.var,\n        },\n    },\n    title: {\n        marginBottom: global_spacer_md.var,\n    },\n};\n","import { Button, ButtonVariant } from '@patternfly/react-core';\nimport { parseQuery } from 'api/queries/query';\nimport { getQuery, orgUnitIdKey, tagPrefix } from 'api/queries/query';\nimport { ReportType } from 'api/reports/report';\nimport { endOfMonth, format, startOfMonth } from 'date-fns';\nimport fileDownload from 'js-file-download';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { getDateRangeFromQuery } from 'routes/views/utils/dateRange';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { exportActions, exportSelectors } from 'store/export';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { getToday } from 'utils/dates';\nimport { withRouter } from 'utils/router';\nconst reportType = ReportType.cost;\nexport class ExportSubmitBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            fetchExportClicked: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExport = () => {\n            const { exportFetchStatus, exportReport } = this.props;\n            if (exportReport && exportFetchStatus === FetchStatus.complete) {\n                fileDownload(exportReport.data, this.getFileName(), 'text/csv');\n                this.handleClose();\n            }\n        };\n        this.getFileName = () => {\n            const { endDate, groupBy, intl, reportPathsType, resolution, startDate } = this.props;\n            // defaultMessage: '<provider>_<groupBy>_<resolution>_<start-date>_<end-date>',\n            const fileName = intl.formatMessage(messages.exportFileName, {\n                endDate,\n                provider: reportPathsType,\n                groupBy: groupBy.indexOf(tagPrefix) !== -1 ? 'tag' : groupBy,\n                resolution,\n                startDate,\n            });\n            return `${fileName}.csv`;\n        };\n        this.handleClose = () => {\n            const { exportError } = this.props;\n            this.setState(Object.assign({}, this.defaultState), () => {\n                if (!exportError) {\n                    this.props.onClose(false);\n                }\n            });\n        };\n        this.handleFetchExport = () => {\n            const { exportQueryString, fetchExport, isExportsFeatureEnabled, reportPathsType } = this.props;\n            fetchExport(reportPathsType, reportType, exportQueryString, isExportsFeatureEnabled);\n            this.setState({\n                fetchExportClicked: true,\n            }, () => {\n                this.getExport();\n            });\n        };\n    }\n    componentDidUpdate(prevProps) {\n        const { exportError, exportReport } = this.props;\n        const { fetchExportClicked } = this.state;\n        if (prevProps.exportReport !== exportReport && fetchExportClicked) {\n            this.getExport();\n        }\n        if (exportError) {\n            this.props.onError(exportError);\n        }\n    }\n    render() {\n        const { disabled, exportFetchStatus, intl } = this.props;\n        return (React.createElement(Button, { ouiaId: \"submit-btn\", isDisabled: disabled || exportFetchStatus === FetchStatus.inProgress, key: \"confirm\", onClick: this.handleFetchExport, variant: ButtonVariant.primary }, intl.formatMessage(messages.exportGenerate)));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const { groupBy, isAllItems, items, reportPathsType, reportQueryString, resolution, router, timeScope } = props;\n    const queryFromRoute = parseQuery(router.location.search);\n    const getStartEndDate = () => {\n        if (queryFromRoute.dateRangeType) {\n            return getDateRangeFromQuery(queryFromRoute);\n        }\n        else {\n            const isPrevious = timeScope === 'previous';\n            const today = getToday();\n            if (isPrevious) {\n                today.setMonth(today.getMonth() - 1);\n            }\n            return {\n                end_date: format(isPrevious ? endOfMonth(today) : today, 'yyyy-MM-dd'),\n                start_date: format(startOfMonth(today), 'yyyy-MM-dd'),\n            };\n        }\n    };\n    const { end_date, start_date } = getStartEndDate();\n    const getQueryString = () => {\n        const reportQuery = parseQuery(reportQueryString);\n        const newQuery = Object.assign(Object.assign({}, reportQuery), { delta: undefined, filter: {\n                limit: undefined,\n                offset: undefined,\n                resolution: resolution ? resolution : undefined, // Resolution is defined by export modal\n            }, filter_by: {}, limit: 0, order_by: undefined, // Don't want items sorted by cost\n            start_date,\n            end_date });\n        // Store filter_by as an array, so we can add to it below\n        if (queryFromRoute.filter_by) {\n            for (const key of Object.keys(queryFromRoute.filter_by)) {\n                if (newQuery.filter_by[key] === undefined) {\n                    newQuery.filter_by[key] = [];\n                }\n                newQuery.filter_by[key].push(queryFromRoute.filter_by[key]);\n            }\n        }\n        if (isAllItems) {\n            // Ensure group_by isn't overridden -- org_unit_id is not unique\n            if (groupBy === orgUnitIdKey) {\n                if (newQuery.filter_by[orgUnitIdKey] === undefined) {\n                    newQuery.filter_by[orgUnitIdKey] = [];\n                }\n                newQuery.filter_by[orgUnitIdKey].push(queryFromRoute.group_by[orgUnitIdKey]);\n            }\n        }\n        else {\n            if (groupBy === orgUnitIdKey) {\n                for (const item of items) {\n                    // Note that type only exists when grouping by org units\n                    const type = item.type === 'organizational_unit' ? orgUnitIdKey : item.type;\n                    if (newQuery.filter_by[type] === undefined) {\n                        newQuery.filter_by[type] = [];\n                    }\n                    newQuery.filter_by[type].push(item.id);\n                }\n            }\n            else {\n                for (const item of items) {\n                    if (newQuery.filter_by[groupBy] === undefined) {\n                        newQuery.filter_by[groupBy] = [];\n                    }\n                    newQuery.filter_by[groupBy].push(item.id);\n                }\n            }\n        }\n        return getQuery(newQuery);\n    };\n    const exportQueryString = getQueryString();\n    const exportReport = exportSelectors.selectExport(state, reportPathsType, reportType, exportQueryString);\n    const exportError = exportSelectors.selectExportError(state, reportPathsType, reportType, exportQueryString);\n    const exportFetchStatus = exportSelectors.selectExportFetchStatus(state, reportPathsType, reportType, exportQueryString);\n    return {\n        endDate: end_date,\n        exportError,\n        exportFetchStatus,\n        exportQueryString,\n        exportReport,\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        startDate: start_date,\n    };\n});\nconst mapDispatchToProps = {\n    fetchExport: exportActions.fetchExport,\n};\nconst ExportSubmitConnect = connect(mapStateToProps, mapDispatchToProps)(ExportSubmitBase);\nconst ExportSubmit = injectIntl(withRouter(ExportSubmitConnect));\nexport { ExportSubmit };\n","import { Alert, Button, ButtonVariant, Form, FormGroup, Grid, GridItem, Modal, Radio, TextInput, } from '@patternfly/react-core';\nimport { tagPrefix } from 'api/queries/query';\nimport { format } from 'date-fns';\nimport messages from 'locales/messages';\nimport { orderBy } from 'lodash';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { styles } from './exportModal.styles';\nimport { ExportSubmit } from './exportSubmit';\nconst formatTypeOptions = [\n    { label: messages.exportFormatType, value: 'csv' },\n    { label: messages.exportFormatType, value: 'json' },\n];\nconst resolutionOptions = [\n    { label: messages.exportResolution, value: 'daily' },\n    { label: messages.exportResolution, value: 'monthly' },\n];\nconst timeScopeOptions = [\n    { label: messages.exportTimeScope, value: 'current' },\n    { label: messages.exportTimeScope, value: 'previous' },\n];\nexport class ExportModalBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            error: undefined,\n            formatType: 'csv',\n            timeScope: 'current',\n            resolution: this.props.resolution || 'monthly',\n        };\n        this.state = Object.assign({}, this.defaultState);\n        // Reset default state upon close -- see https://issues.redhat.com/browse/COST-1134\n        this.handleClose = () => {\n            this.setState(Object.assign({}, this.defaultState), () => {\n                this.props.onClose(false);\n            });\n        };\n        this.handleError = (error) => {\n            this.setState({ error });\n        };\n        this.handleMonthChange = (_, event) => {\n            this.setState({ timeScope: event.currentTarget.value });\n        };\n        this.handleNameChange = (_, event) => {\n            this.setState({ name: event.currentTarget.value });\n        };\n        this.handleResolutionChange = (_, event) => {\n            this.setState({ resolution: event.currentTarget.value });\n        };\n        this.handleTypeChange = (_, event) => {\n            this.setState({ formatType: event.currentTarget.value });\n        };\n        this.nameValidator = value => {\n            if (value.trim().length === 0) {\n                return messages.exportNameRequired;\n            }\n            // Todo: what is the max length allowed?\n            if (value.length > 50) {\n                return messages.exportNameTooLong;\n            }\n            return undefined;\n        };\n        this.handleMonthChange = this.handleMonthChange.bind(this);\n        this.handleResolutionChange = this.handleResolutionChange.bind(this);\n        this.handleTypeChange = this.handleTypeChange.bind(this);\n    }\n    render() {\n        const { count = 0, groupBy, intl, isAllItems, isExportsFeatureEnabled, items, reportPathsType, reportQueryString, showAggregateType = true, showFormatType = true, showTimeScope = true, } = this.props;\n        const { error, formatType, name, resolution, timeScope } = this.state;\n        let sortedItems = [...items];\n        if (this.props.isOpen) {\n            if (items && items.length === 0 && isAllItems) {\n                sortedItems = [\n                    {\n                        label: intl.formatMessage(messages.exportAll),\n                    },\n                ];\n            }\n            else {\n                sortedItems = orderBy(sortedItems, ['label'], ['asc']);\n            }\n        }\n        let selectedLabel = intl.formatMessage(messages.exportSelected, { groupBy, count });\n        if (groupBy.indexOf(tagPrefix) !== -1) {\n            selectedLabel = intl.formatMessage(messages.exportSelected, { groupBy: 'tag', count });\n        }\n        const thisMonth = new Date();\n        const lastMonth = new Date().setMonth(thisMonth.getMonth() - 1);\n        const currentMonth = format(thisMonth, 'MMMM yyyy');\n        const previousMonth = format(lastMonth - 1, 'MMMM yyyy');\n        const defaultName = name !== undefined\n            ? name\n            : intl.formatMessage(messages.exportName, {\n                provider: reportPathsType,\n                groupBy: groupBy.indexOf(tagPrefix) !== -1 ? 'tag' : groupBy,\n            });\n        const helpText = isExportsFeatureEnabled ? this.nameValidator(defaultName) : undefined;\n        const validated = helpText ? 'error' : 'default';\n        return (React.createElement(Modal, { style: styles.modal, isOpen: this.props.isOpen, onClose: this.handleClose, title: intl.formatMessage(messages.exportTitle), variant: \"small\", actions: [\n                React.createElement(ExportSubmit, { disabled: validated === 'error', formatType: formatType, groupBy: groupBy, isAllItems: isAllItems, items: items, key: \"confirm\", timeScope: showTimeScope ? timeScope : undefined, onClose: this.handleClose, onError: this.handleError, name: defaultName, reportPathsType: reportPathsType, reportQueryString: reportQueryString, resolution: resolution }),\n                React.createElement(Button, { ouiaId: \"cancel-btn\", key: \"cancel\", onClick: this.handleClose, variant: ButtonVariant.link }, intl.formatMessage(messages.cancel)),\n            ] },\n            error && React.createElement(Alert, { variant: \"danger\", style: styles.alert, title: intl.formatMessage(messages.exportError) }),\n            React.createElement(\"div\", { style: styles.title }, isExportsFeatureEnabled ? (React.createElement(\"span\", null, intl.formatMessage(messages.exportDesc, { value: React.createElement(\"b\", null, intl.formatMessage(messages.exportsTitle)) }))) : (React.createElement(\"span\", null, intl.formatMessage(messages.exportHeading, { groupBy })))),\n            React.createElement(Form, { style: styles.form },\n                React.createElement(Grid, { hasGutter: true, md: 6 },\n                    isExportsFeatureEnabled && (React.createElement(GridItem, { span: 12 },\n                        React.createElement(FormGroup, { fieldId: \"exportName\", helperTextInvalid: helpText ? intl.formatMessage(helpText) : undefined, label: intl.formatMessage(messages.names, { count: 1 }), isRequired: true, validated: validated },\n                            React.createElement(TextInput, { isRequired: true, type: \"text\", id: \"exportName\", name: \"exportName\", value: defaultName, onChange: this.handleNameChange })))),\n                    showAggregateType && (React.createElement(FormGroup, { fieldId: \"aggregate-type\", label: intl.formatMessage(messages.exportAggregateType), isRequired: true },\n                        React.createElement(React.Fragment, null, resolutionOptions.map((option, index) => (React.createElement(Radio, { key: index, id: `resolution-${index}`, isValid: option.value !== undefined, label: intl.formatMessage(option.label, { value: option.value }), value: option.value, isChecked: resolution === option.value, name: \"resolution\", onChange: this.handleResolutionChange, \"aria-label\": intl.formatMessage(option.label, { value: option.value }) })))))),\n                    showTimeScope && (React.createElement(FormGroup, { fieldId: \"timeScope\", label: intl.formatMessage(messages.exportTimeScopeTitle), isRequired: true },\n                        React.createElement(React.Fragment, null, timeScopeOptions.map((option, index) => (React.createElement(Radio, { key: index, id: `timeScope-${index}`, isValid: option.value !== undefined, label: intl.formatMessage(option.label, {\n                                date: option.value === 'previous' ? previousMonth : currentMonth,\n                                value: option.value,\n                            }), value: option.value, isChecked: timeScope === option.value, name: \"timeScope\", onChange: this.handleMonthChange, \"aria-label\": intl.formatMessage(option.label, {\n                                date: option.value === 'previous' ? previousMonth : currentMonth,\n                                value: option.value,\n                            }) })))))),\n                    showFormatType && isExportsFeatureEnabled && (React.createElement(GridItem, { span: 12 },\n                        React.createElement(FormGroup, { fieldId: \"formatType\", label: intl.formatMessage(messages.exportFormatTypeTitle), isRequired: true }, formatTypeOptions.map((option, index) => (React.createElement(Radio, { key: index, id: `formatType-${index}`, isValid: option.value !== undefined, label: intl.formatMessage(option.label, { value: option.value }), value: option.value, isChecked: formatType === option.value, name: \"formatType\", onChange: this.handleTypeChange, \"aria-label\": intl.formatMessage(option.label, { value: option.value }) })))))),\n                    React.createElement(GridItem, { span: 12 },\n                        React.createElement(FormGroup, { label: selectedLabel, fieldId: \"selectedLabels\" },\n                            React.createElement(\"ul\", null, sortedItems.map((groupItem, index) => {\n                                return React.createElement(\"li\", { key: index }, groupItem.label);\n                            }))))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n    };\n});\nconst ExportModalConnect = connect(mapStateToProps, undefined)(ExportModalBase);\nconst ExportModal = injectIntl(ExportModalConnect);\nexport default ExportModal;\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    groupBySelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    groupBySelectorLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n        whiteSpace: 'nowrap',\n    },\n};\n","import { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { orgUnitIdKey, orgUnitNameKey, parseQuery } from 'api/queries/query';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { withRouter } from 'utils/router';\nimport { styles } from './groupBy.styles';\nclass GroupByOrgBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            defaultItem: this.props.groupBy || this.props.options[0].value,\n            isGroupByOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getCurrentGroupBy = () => {\n            const { getIdKeyForGroupBy, router } = this.props;\n            const queryFromRoute = parseQuery(router.location.search);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by ? Object.keys(queryFromRoute.group_by) : [];\n            let groupBy = getIdKeyForGroupBy(queryFromRoute.group_by);\n            for (const key of groupByKeys) {\n                const index = key.indexOf(orgUnitIdKey);\n                if (index !== -1) {\n                    groupBy = queryFromRoute.group_by[orgUnitIdKey];\n                    break;\n                }\n            }\n            return groupBy;\n        };\n        this.getGroupByItems = () => {\n            const { orgReport } = this.props;\n            if (!(orgReport && orgReport.data)) {\n                return [];\n            }\n            // Sort all names first\n            const sortedData = orgReport.data.sort((a, b) => {\n                if (a[orgUnitNameKey] < b[orgUnitNameKey]) {\n                    return -1;\n                }\n                if (a[orgUnitNameKey] > b[orgUnitNameKey]) {\n                    return 1;\n                }\n                return 0;\n            });\n            // Move roots first\n            const roots = sortedData.filter(org => org.level === 0);\n            const filteredOrgs = sortedData.filter(org => org.level !== 0);\n            roots.map(root => {\n                const item = sortedData.find(org => org[orgUnitIdKey] === root[orgUnitIdKey]);\n                filteredOrgs.unshift(item);\n            });\n            return filteredOrgs.map(org => ({\n                id: org[orgUnitIdKey],\n                toString: () => org[orgUnitNameKey],\n            }));\n        };\n        this.handleGroupByClear = () => {\n            this.setState({\n                currentItem: undefined,\n            });\n        };\n        this.handleGroupBySelected = (event, selection) => {\n            const { onSelected } = this.props;\n            this.setState({\n                currentItem: selection.id,\n                isGroupByOpen: false,\n            });\n            if (onSelected) {\n                onSelected(`${orgUnitIdKey}${selection.id}`);\n            }\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({ isGroupByOpen });\n        };\n        this.handleGroupByClear = this.handleGroupByClear.bind(this);\n        this.handleGroupBySelected = this.handleGroupBySelected.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { groupBy } = this.props;\n        if (prevProps.groupBy !== groupBy) {\n            this.setState({ currentItem: this.getCurrentGroupBy() });\n        }\n    }\n    render() {\n        const { isDisabled = false, intl } = this.props;\n        const { currentItem, isGroupByOpen } = this.state;\n        const groupByItems = this.getGroupByItems();\n        const selection = groupByItems.find((item) => item.id === currentItem);\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(Select, { \"aria-label\": intl.formatMessage(messages.filterByOrgUnitAriaLabel), isDisabled: isDisabled, onClear: this.handleGroupByClear, onToggle: this.handleGroupByToggle, onSelect: this.handleGroupBySelected, isOpen: isGroupByOpen, placeholderText: intl.formatMessage(messages.filterByOrgUnitPlaceholder), selections: selection, variant: SelectVariant.typeahead }, groupByItems.map(item => (React.createElement(SelectOption, { description: item.id, key: item.id, value: item }))))));\n    }\n}\nconst GroupByOrg = injectIntl(withRouter(GroupByOrgBase));\nexport { GroupByOrg };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { parseQuery, tagPrefix } from 'api/queries/query';\nimport messages from 'locales/messages';\nimport { uniq, uniqBy } from 'lodash';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { withRouter } from 'utils/router';\nimport { styles } from './groupBy.styles';\nclass GroupByTagBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isGroupByOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getGroupByItems = () => {\n            const { tagReport } = this.props;\n            if (!(tagReport && tagReport.data)) {\n                return [];\n            }\n            // If the key_only param is used, we have an array of strings\n            let hasTagKeys = false;\n            for (const item of tagReport.data) {\n                if (item.hasOwnProperty('key')) {\n                    hasTagKeys = true;\n                    break;\n                }\n            }\n            // Workaround for https://github.com/project-koku/koku/issues/1797\n            let data = [];\n            if (hasTagKeys) {\n                const keepData = tagReport.data.map(\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                (_a) => {\n                    var { type } = _a, keepProps = __rest(_a, [\"type\"]);\n                    return keepProps;\n                });\n                data = uniqBy(keepData, 'key');\n            }\n            else {\n                data = uniq(tagReport.data);\n            }\n            return data.map((item, index) => {\n                const tagKey = hasTagKeys ? item.key : item;\n                return React.createElement(SelectOption, { key: `${tagKey}:${index}`, value: tagKey });\n            });\n        };\n        this.getCurrentGroupBy = () => {\n            const { router } = this.props;\n            const queryFromRoute = parseQuery(router.location.search);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by ? Object.keys(queryFromRoute.group_by) : [];\n            let groupBy;\n            for (const key of groupByKeys) {\n                const index = key.indexOf(tagPrefix);\n                if (index !== -1) {\n                    groupBy = key.slice(tagPrefix.length);\n                    break;\n                }\n            }\n            return groupBy;\n        };\n        this.handleGroupByClear = () => {\n            this.setState({\n                currentItem: undefined,\n            });\n        };\n        this.handleGroupBySelected = (event, selection) => {\n            const { onSelected } = this.props;\n            this.setState({\n                currentItem: selection,\n                isGroupByOpen: false,\n            });\n            if (onSelected) {\n                onSelected(`${tagPrefix}${selection}`);\n            }\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({ isGroupByOpen });\n        };\n        this.handleGroupByClear = this.handleGroupByClear.bind(this);\n        this.handleGroupBySelected = this.handleGroupBySelected.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { groupBy } = this.props;\n        if (prevProps.groupBy !== groupBy) {\n            this.setState({ currentItem: this.getCurrentGroupBy() });\n        }\n    }\n    render() {\n        const { isDisabled, intl } = this.props;\n        const { currentItem, isGroupByOpen } = this.state;\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(Select, { \"aria-label\": intl.formatMessage(messages.filterByTagKeyAriaLabel), isDisabled: isDisabled, onClear: this.handleGroupByClear, onToggle: this.handleGroupByToggle, onSelect: this.handleGroupBySelected, isOpen: isGroupByOpen, placeholderText: intl.formatMessage(messages.filterByTagKeyPlaceholder), selections: currentItem, variant: SelectVariant.typeahead }, this.getGroupByItems())));\n    }\n}\nconst GroupByTag = injectIntl(withRouter(GroupByTagBase));\nexport { GroupByTag };\n","import { Select, SelectOption, SelectVariant, Title } from '@patternfly/react-core';\nimport { OrgType } from 'api/orgs/org';\nimport { getQuery, orgUnitIdKey, parseQuery, tagKey, tagPrefix } from 'api/queries/query';\nimport { TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { getDateRangeFromQuery } from 'routes/views/utils/dateRange';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { orgActions, orgSelectors } from 'store/orgs';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { withRouter } from 'utils/router';\nimport { styles } from './groupBy.styles';\nimport { GroupByOrg } from './groupByOrg';\nimport { GroupByTag } from './groupByTag';\nconst groupByOrgOptions = [{ label: orgUnitIdKey, value: orgUnitIdKey }];\nconst groupByTagOptions = [{ label: tagKey, value: tagKey }];\nconst orgReportType = OrgType.org;\nconst tagReportType = TagType.tag;\nclass GroupByBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            defaultItem: this.props.groupBy || this.props.options[0].value,\n            isGroupByOpen: false,\n            isGroupByOrgVisible: false,\n            isGroupByTagVisible: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getCurrentGroupBy = () => {\n            const { getIdKeyForGroupBy, router } = this.props;\n            const { defaultItem } = this.state;\n            const queryFromRoute = parseQuery(router.location.search);\n            if (!(queryFromRoute && queryFromRoute.group_by)) {\n                return defaultItem;\n            }\n            let groupBy = getIdKeyForGroupBy(queryFromRoute.group_by);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by ? Object.keys(queryFromRoute.group_by) : [];\n            for (const key of groupByKeys) {\n                let index = key.indexOf(tagPrefix);\n                if (index !== -1) {\n                    groupBy = tagKey;\n                    this.setState({\n                        isGroupByTagVisible: true,\n                    });\n                    break;\n                }\n                index = key.indexOf(orgUnitIdKey);\n                if (index !== -1) {\n                    groupBy = orgUnitIdKey;\n                    this.setState({\n                        isGroupByOrgVisible: true,\n                    });\n                    break;\n                }\n            }\n            return groupBy !== 'date' ? groupBy : defaultItem;\n        };\n        this.getGroupBy = () => {\n            const { isDisabled } = this.props;\n            const { currentItem, isGroupByOpen } = this.state;\n            const selectOptions = this.getGroupByOptions();\n            const selection = selectOptions.find((option) => option.value === currentItem);\n            return (React.createElement(Select, { id: \"groupBySelect\", isDisabled: isDisabled, isOpen: isGroupByOpen, onSelect: this.handleGroupBySelected, onToggle: this.handleGroupByToggle, selections: selection, variant: SelectVariant.single }, selectOptions.map(option => (React.createElement(SelectOption, { key: option.value, value: option })))));\n        };\n        this.getGroupByOptions = () => {\n            const { options, orgReport, tagReport, intl } = this.props;\n            const allOptions = [...options];\n            if (orgReport && orgReport.data && orgReport.data.length > 0) {\n                allOptions.push(...groupByOrgOptions);\n            }\n            if (tagReport && tagReport.data && tagReport.data.length > 0) {\n                allOptions.push(...groupByTagOptions);\n            }\n            return allOptions.map(option => ({\n                toString: () => intl.formatMessage(messages.groupByValuesTitleCase, { value: option.label, count: 1 }),\n                value: option.value,\n            }));\n        };\n        this.handleGroupBySelected = (event, selection) => {\n            const { onSelected } = this.props;\n            if (selection.value === orgUnitIdKey || selection.value === tagKey) {\n                this.setState({\n                    currentItem: selection.value,\n                    isGroupByOpen: false,\n                    isGroupByOrgVisible: selection.value === orgUnitIdKey,\n                    isGroupByTagVisible: selection.value === tagKey,\n                });\n            }\n            else {\n                this.setState({\n                    currentItem: selection.value,\n                    isGroupByOpen: false,\n                    isGroupByOrgVisible: false,\n                    isGroupByTagVisible: false,\n                }, () => {\n                    if (onSelected) {\n                        onSelected(selection.value);\n                    }\n                });\n            }\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({\n                isGroupByOpen,\n            });\n        };\n        this.handleGroupBySelected = this.handleGroupBySelected.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        const { fetchOrg, fetchTag, orgReportFetchStatus, orgReportPathsType, orgQueryString, showOrgs, showTags, tagReportFetchStatus, tagReportPathsType, tagQueryString, } = this.props;\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        }, () => {\n            if (showOrgs && orgReportFetchStatus !== FetchStatus.inProgress) {\n                fetchOrg(orgReportPathsType, orgReportType, orgQueryString);\n            }\n            if (showTags && tagReportFetchStatus !== FetchStatus.inProgress) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchOrg, fetchTag, groupBy, orgReportFetchStatus, orgReportPathsType, orgQueryString, perspective, showOrgs, showTags, tagReportFetchStatus, tagReportPathsType, tagQueryString, } = this.props;\n        if (prevProps.groupBy !== groupBy || prevProps.perspective !== perspective) {\n            let options;\n            if (prevProps.perspective !== perspective) {\n                options = {\n                    isGroupByOrgVisible: false,\n                    isGroupByTagVisible: false,\n                };\n            }\n            this.setState(Object.assign({ currentItem: this.getCurrentGroupBy() }, (options ? options : {})), () => {\n                if (showOrgs && orgReportFetchStatus !== FetchStatus.inProgress) {\n                    fetchOrg(orgReportPathsType, orgReportType, orgQueryString);\n                }\n                if (showTags && tagReportFetchStatus !== FetchStatus.inProgress) {\n                    fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n                }\n            });\n        }\n    }\n    render() {\n        const { getIdKeyForGroupBy, groupBy, isDisabled = false, onSelected, orgReport, intl, tagReport } = this.props;\n        const { isGroupByOrgVisible, isGroupByTagVisible } = this.state;\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\", style: styles.groupBySelectorLabel }, intl.formatMessage(messages.groupByLabel)),\n            this.getGroupBy(),\n            Boolean(isGroupByOrgVisible) && (React.createElement(GroupByOrg, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: isDisabled, onSelected: onSelected, options: groupByOrgOptions, orgReport: orgReport })),\n            Boolean(isGroupByTagVisible) && (React.createElement(GroupByTag, { groupBy: groupBy, isDisabled: isDisabled, onSelected: onSelected, options: groupByTagOptions, tagReport: tagReport }))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { orgReportPathsType, router, tagReportPathsType }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    // Default to current month filter for details pages\n    let tagFilter = {\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n    };\n    // Replace with start and end dates for Cost Explorer\n    if (queryFromRoute.dateRangeType) {\n        const { end_date, start_date } = getDateRangeFromQuery(queryFromRoute);\n        tagFilter = {\n            end_date,\n            start_date,\n        };\n    }\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const baseQuery = Object.assign(Object.assign({}, tagFilter), { key_only: true, limit: 1000 });\n    const tagQueryString = getQuery(Object.assign({}, baseQuery));\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, tagQueryString);\n    const orgQueryString = getQuery(Object.assign({}, baseQuery));\n    const orgReport = orgSelectors.selectOrg(state, orgReportPathsType, orgReportType, orgQueryString);\n    const orgReportFetchStatus = orgSelectors.selectOrgFetchStatus(state, orgReportPathsType, orgReportType, orgQueryString);\n    return {\n        orgReport,\n        orgReportFetchStatus,\n        orgQueryString,\n        tagReport,\n        tagReportFetchStatus,\n        tagQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchOrg: orgActions.fetchOrg,\n    fetchTag: tagActions.fetchTag,\n};\nconst GroupByConnect = connect(mapStateToProps, mapDispatchToProps)(GroupByBase);\nconst GroupBy = injectIntl(withRouter(GroupByConnect));\nexport default GroupBy;\n","import { endOfMonth } from 'date-fns';\nimport { formatStartEndDate, getCurrentMonthDate, getLast30DaysDate, getLast60DaysDate, getLast90DaysDate, } from 'utils/dates';\n// The date range drop down has the options below (if today is Jan 18th…)\n// eslint-disable-next-line no-shadow\nexport var DateRangeType;\n(function (DateRangeType) {\n    DateRangeType[\"currentMonthToDate\"] = \"current_month_to_date\";\n    DateRangeType[\"custom\"] = \"custom\";\n    DateRangeType[\"previousMonth\"] = \"previous_month\";\n    DateRangeType[\"previousMonthToDate\"] = \"previous_month_to_date\";\n    DateRangeType[\"lastNinetyDays\"] = \"last_ninety_days\";\n    DateRangeType[\"lastSixtyDays\"] = \"last_sixty_days\";\n    DateRangeType[\"lastSixtyFiveDays\"] = \"last_sixty_days\";\n    DateRangeType[\"lastThirtyDays\"] = \"last_thirty_days\";\n})(DateRangeType || (DateRangeType = {}));\nexport const getDateRange = (dateRangeType, isFormatted = true) => {\n    const endDate = new Date();\n    const startDate = new Date();\n    let dateRange;\n    switch (dateRangeType) {\n        case DateRangeType.previousMonth:\n            endDate.setDate(1); // Required to obtain correct month\n            startDate.setDate(1); // Required to obtain correct month\n            endDate.setMonth(endDate.getMonth() - 1);\n            startDate.setMonth(startDate.getMonth() - 1);\n            dateRange = formatStartEndDate(startDate, endOfMonth(endDate), isFormatted);\n            break;\n        case DateRangeType.previousMonthToDate:\n            startDate.setDate(1); // Required to obtain correct month\n            startDate.setMonth(startDate.getMonth() - 1); // Note: Must include previous and current month\n            dateRange = formatStartEndDate(startDate, endDate, isFormatted);\n            break;\n        case DateRangeType.lastNinetyDays:\n            dateRange = getLast90DaysDate(isFormatted);\n            break;\n        case DateRangeType.lastSixtyDays:\n            dateRange = getLast60DaysDate(isFormatted);\n            break;\n        case DateRangeType.lastThirtyDays:\n            dateRange = getLast30DaysDate(isFormatted);\n            break;\n        case DateRangeType.currentMonthToDate:\n        default:\n            dateRange = getCurrentMonthDate(isFormatted);\n            break;\n    }\n    return dateRange;\n};\nexport const getDateRangeTypeDefault = (queryFromRoute) => {\n    return queryFromRoute.dateRangeType || DateRangeType.currentMonthToDate;\n};\nexport const getDateRangeFromQuery = (queryFromRoute) => {\n    let end_date;\n    let start_date;\n    if (queryFromRoute.dateRangeType === DateRangeType.custom) {\n        end_date = queryFromRoute.end_date;\n        start_date = queryFromRoute.start_date;\n    }\n    if (!(end_date && start_date)) {\n        const dateRangeType = getDateRangeTypeDefault(queryFromRoute);\n        return getDateRange(dateRangeType);\n    }\n    return {\n        end_date,\n        start_date,\n    };\n};\n"],"names":["CalculatorIconConfig","name","height","width","svgPath","yOffset","xOffset","CalculatorIcon","module","exports","data","filename","mime","bom","blob","Blob","type","window","navigator","msSaveBlob","blobURL","URL","createObjectURL","webkitURL","tempLink","document","createElement","style","display","href","setAttribute","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","styles","alert","marginBottom","global_spacer_md","form","marginLeft","global_spacer_sm","modal","input","marginRight","global_spacer_xs","ul","title","reportType","ExportSubmitBase","constructor","stateProps","dispatchProps","super","this","defaultState","fetchExportClicked","state","Object","assign","getExport","exportFetchStatus","exportReport","props","getFileName","handleClose","endDate","groupBy","intl","reportPathsType","resolution","startDate","formatMessage","messages","provider","indexOf","exportError","setState","onClose","handleFetchExport","exportQueryString","fetchExport","isExportsFeatureEnabled","componentDidUpdate","prevProps","onError","render","disabled","Button","ouiaId","isDisabled","key","onClick","variant","ButtonVariant","mapStateToProps","isAllItems","items","reportQueryString","router","timeScope","queryFromRoute","location","search","end_date","start_date","dateRangeType","isPrevious","today","setMonth","getMonth","format","endOfMonth","startOfMonth","getStartEndDate","reportQuery","newQuery","delta","undefined","filter","limit","offset","filter_by","order_by","keys","push","group_by","item","id","getQueryString","featureFlags","mapDispatchToProps","ExportSubmitConnect","connect","ExportSubmit","injectIntl","formatTypeOptions","label","value","resolutionOptions","timeScopeOptions","ExportModalBase","error","formatType","handleError","handleMonthChange","_","event","currentTarget","handleNameChange","handleResolutionChange","handleTypeChange","nameValidator","trim","length","bind","count","showAggregateType","showFormatType","showTimeScope","sortedItems","isOpen","orderBy","selectedLabel","thisMonth","Date","lastMonth","currentMonth","previousMonth","defaultName","helpText","validated","Modal","actions","Alert","Form","Grid","hasGutter","md","GridItem","span","FormGroup","fieldId","helperTextInvalid","isRequired","TextInput","onChange","map","option","index","Radio","isValid","isChecked","date","groupItem","ExportModalConnect","groupBySelector","alignItems","groupBySelectorLabel","whiteSpace","GroupByOrgBase","defaultItem","options","isGroupByOpen","getCurrentGroupBy","getIdKeyForGroupBy","groupByKeys","getGroupByItems","orgReport","sortedData","sort","a","b","roots","org","level","filteredOrgs","root","find","unshift","toString","handleGroupByClear","currentItem","handleGroupBySelected","selection","onSelected","handleGroupByToggle","componentDidMount","groupByItems","Select","onClear","onToggle","onSelect","placeholderText","selections","SelectVariant","SelectOption","description","GroupByOrg","GroupByTagBase","tagReport","hasTagKeys","hasOwnProperty","keepData","_a","s","e","t","p","prototype","call","getOwnPropertySymbols","i","propertyIsEnumerable","__rest","uniqBy","uniq","tagKey","slice","GroupByTag","groupByOrgOptions","groupByTagOptions","orgReportType","tagReportType","GroupByBase","isGroupByOrgVisible","isGroupByTagVisible","getGroupBy","selectOptions","getGroupByOptions","allOptions","fetchOrg","fetchTag","orgReportFetchStatus","orgReportPathsType","orgQueryString","showOrgs","showTags","tagReportFetchStatus","tagReportPathsType","tagQueryString","perspective","Title","headingLevel","size","Boolean","tagFilter","time_scope_units","time_scope_value","baseQuery","key_only","GroupByConnect","DateRangeType","getDateRangeTypeDefault","currentMonthToDate","getDateRangeFromQuery","custom","isFormatted","dateRange","setDate","previousMonthToDate","lastNinetyDays","lastSixtyDays","lastThirtyDays","getDateRange"],"sourceRoot":""}