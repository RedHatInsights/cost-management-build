{"version":3,"file":"js/ibmDetails.c2b2a93090f0f29f5206.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/external-link-alt-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_FontSize_xs.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_disabled_color_100.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_3xl.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_xs.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Unavailable/Unavailable.js","webpack:///./src/routes/components/dataTable/dataTable.styles.ts","webpack:///./src/routes/components/dataTable/dataTable.tsx","webpack:///./src/routes/components/dataTable/selectableTable.tsx","webpack:///./src/routes/details/components/actions/actions.tsx","webpack:///./src/routes/utils/computedReport/getComputedIbmReportItems.ts","webpack:///./src/routes/details/ibmDetails/detailsHeader.styles.ts","webpack:///./src/routes/details/ibmDetails/detailsHeader.tsx","webpack:///./src/routes/details/ibmDetails/detailsTable.tsx","webpack:///./src/routes/details/ibmDetails/detailsToolbar.tsx","webpack:///./src/routes/details/ibmDetails/ibmDetails.styles.ts","webpack:///./src/routes/details/ibmDetails/ibmDetails.tsx"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExternalLinkAltIcon = createIcon(ExternalLinkAltIconConfig);\n\nexport default ExternalLinkAltIcon;","\"use strict\";\nexports.__esModule = true;\nexports.global_FontSize_xs = {\n  \"name\": \"--pf-global--FontSize--xs\",\n  \"value\": \"0.75rem\",\n  \"var\": \"var(--pf-global--FontSize--xs)\"\n};\nexports[\"default\"] = exports.global_FontSize_xs;","\"use strict\";\nexports.__esModule = true;\nexports.global_disabled_color_100 = {\n  \"name\": \"--pf-global--disabled-color--100\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--disabled-color--100)\"\n};\nexports[\"default\"] = exports.global_disabled_color_100;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_3xl = {\n  \"name\": \"--pf-global--spacer--3xl\",\n  \"value\": \"4rem\",\n  \"var\": \"var(--pf-global--spacer--3xl)\"\n};\nexports[\"default\"] = exports.global_spacer_3xl;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_xs = {\n  \"name\": \"--pf-global--spacer--xs\",\n  \"value\": \"0.25rem\",\n  \"var\": \"var(--pf-global--spacer--xs)\"\n};\nexports[\"default\"] = exports.global_spacer_xs;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport '../Unavailable/Unavailable.css';\nvar Unavailable = function () {\n    return (_jsxs(EmptyState, __assign({ variant: EmptyStateVariant.large, className: \"ins-c-empty-state__unavailable pf-m-redhat-font\" }, { children: [_jsx(EmptyStateIcon, { icon: ExclamationCircleIcon }), _jsx(Title, __assign({ headingLevel: \"h5\", size: \"lg\" }, { children: \"This page is temporarily unavailable\" })), _jsxs(EmptyStateBody, { children: [\"Try refreshing the page. If the problem persists, contact your organization administrator or visit our\", _jsxs(\"a\", __assign({ href: \"https://status.redhat.com/\", target: \"_blank\", rel: \"noopener noreferrer\" }, { children: [' ', \"status page\"] })), ' ', \"for known outages.\"] })] })));\n};\nexport default Unavailable;\n//# sourceMappingURL=Unavailable.js.map","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    costColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingRight: 0,\n    },\n    defaultLabel: {\n        minWidth: '50px',\n    },\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    lastItem: {\n        textAlign: 'right',\n        paddingRight: '3.8rem',\n    },\n    lastItemColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    managedColumn: {\n        textAlign: 'right',\n    },\n    nameColumn: {\n        width: '1%',\n    },\n};\n","import './dataTable.scss';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, TableVariant, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass DataTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { filterBy, intl } = this.props;\n            if (filterBy) {\n                for (const val of Object.values(filterBy)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, orderBy } = this.props;\n            const direction = orderBy && orderBy[columns[index].orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected, rows } = this.props;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isActionsCell = false, isLoading, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.dataTableAriaLabel), className: \"tableOverride\", gridBreakPoint: \"grid-2xl\", variant: TableVariant.compact },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${cellIndex}-${rowIndex}`, modifier: \"nowrap\", select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    }, style: item.style })) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", isActionCell: isActionsCell && cellIndex === row.cells.length - 1, style: item.style }, item.value))))))))),\n            rows.length === 0 && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(DataTable));\n","import { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, TableVariant, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass SelectableTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { emptyState, filterBy, intl } = this.props;\n            if (filterBy) {\n                for (const val of Object.values(filterBy)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            // Return custom empty state\n            if (emptyState) {\n                return emptyState;\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, orderBy } = this.props;\n            const direction = orderBy && orderBy[columns[index].orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnRowClick = (event, rowIndex) => {\n            const { onRowClick, rows } = this.props;\n            rows.map(row => (row.selected = false));\n            rows[rowIndex].selected = true;\n            this.setState({ rows }, () => {\n                if (onRowClick) {\n                    onRowClick(event, rowIndex);\n                }\n            });\n        };\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isLoading, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.selectableTableAriaLabel), gridBreakPoint: \"grid-2xl\", hasSelectableRowCaption: true, variant: TableVariant.compact },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { \"aria-label\": intl.formatMessage(messages.selectableTableRowAriaLabel), isSelectable: true, isHoverable: true, isRowSelected: row.selected, onRowClick: _event => this.handleOnRowClick(_event, rowIndex), key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 ? (React.createElement(Th, { \"aria-label\": intl.formatMessage(messages.selectableTableHeaderAriaLabel), dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", style: item.style }, item.value)) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", style: item.style }, item.value))))))))),\n            rows.length === 0 && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(SelectableTable));\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ExportModal } from 'routes/components/export';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nimport { tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, reportPathsType, reportQueryString } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { count: 1, groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, intl, item: { source_uuid }, redirectToCostModel, router, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, intl.formatMessage(messages.detailsActionsExport)),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], router) }, intl.formatMessage(messages.detailsActionsPriceList)));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = injectIntl(withRouter(DetailsActionsConnect));\nexport default Actions;\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.account) {\n        return 'account';\n    }\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.region) {\n        return 'region';\n    }\n    if (groupBy.service) {\n        return 'service';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costValue: {\n        marginTop: global_spacer_lg.var,\n        marginBottom: 0,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    dateTitle: {\n        textAlign: 'end',\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentLeft: {\n        display: 'flex',\n        minHeight: '90px',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { TagPathsType } from 'api/tags/tag';\nimport { ExportsLink } from 'components/drawers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Currency } from 'routes/components/currency';\nimport { GroupBy } from 'routes/components/groupBy';\nimport { getIdKeyForGroupBy } from 'routes/utils/computedReport/getComputedIbmReportItems';\nimport { filterProviders } from 'routes/utils/providers';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { getSinceDateRangeString } from 'utils/dates';\nimport { formatCurrency } from 'utils/format';\nimport { styles } from './detailsHeader.styles';\nconst groupByOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'project', value: 'project' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nconst tagPathsType = TagPathsType.ibm;\nclass DetailsHeaderBase extends React.Component {\n    render() {\n        const { currency, groupBy, isExportsFeatureEnabled, onCurrencySelected, onGroupBySelected, providers, providersError, report, intl, } = this.props;\n        const showContent = report && !providersError && providers && providers.meta && providers.meta.count > 0;\n        const hasCost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.ibmDetailsTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(\"div\", { style: styles.headerContentLeft },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: !showContent, onSelected: onGroupBySelected, options: groupByOptions, showTags: true, tagPathsType: tagPathsType })),\n                showContent && (React.createElement(\"div\", null,\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: TitleSizes['4xl'] }, formatCurrency(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD')),\n                    React.createElement(\"div\", { style: styles.dateTitle }, getSinceDateRangeString()))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        providers: filterProviders(providers, ProviderType.ibm),\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n    };\n});\nconst DetailsHeader = injectIntl(connect(mapStateToProps, {})(DetailsHeaderBase));\nexport { DetailsHeader };\n","import 'routes/components/dataTable/dataTable.scss';\nimport { ReportPathsType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { DataTable } from 'routes/components/dataTable';\nimport { styles } from 'routes/components/dataTable/dataTable.styles';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { Actions } from 'routes/details/components/actions';\nimport { getUnsortedComputedReportItems } from 'routes/utils/computedReport/getComputedReportItems';\nimport { getBreakdownPath } from 'routes/utils/paths';\nimport { getForDateRangeString, getNoDataForDateRangeString } from 'utils/dates';\nimport { formatCurrency, formatPercentage } from 'utils/format';\nimport { formatPath } from 'utils/paths';\nimport { noPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nconst reportPathsType = ReportPathsType.ibm;\nclass DetailsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { groupBy, groupByTagKey, intl, isAllSelected, report, selectedItems, router } = this.props;\n            if (!report) {\n                return;\n            }\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: (groupByTagKey ? groupByTagKey : groupBy),\n            });\n            const columns = groupByTagKey\n                ? [\n                    {\n                        name: '',\n                    },\n                    {\n                        name: intl.formatMessage(messages.tagNames),\n                    },\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign({ orderBy: groupBy, name: intl.formatMessage(messages.detailsResourceNames, { value: groupBy }) }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ];\n            computedItems.map((item, index) => {\n                const cost = this.getTotalCost(item, index);\n                const label = item && item.label !== null ? item.label : '';\n                const monthOverMonth = this.getMonthOverMonthCost(item, index);\n                const isDisabled = label === `${noPrefix}${groupBy}` || label === `${noPrefix}${groupByTagKey}`;\n                const desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                const actions = this.getActions(item, isDisabled);\n                const name = isDisabled ? label : (React.createElement(Link, { to: getBreakdownPath({\n                        basePath: formatPath(routes.ibmDetailsBreakdown.path),\n                        description: item.id,\n                        groupBy,\n                        id: item.id,\n                        router,\n                        title: label.toString(),\n                    }) }, label));\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: (React.createElement(\"div\", null,\n                                name,\n                                desc)),\n                        },\n                        { value: monthOverMonth },\n                        { value: cost, style: styles.managedColumn },\n                        { value: actions },\n                    ],\n                    isOpen: false,\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                    selectionDisabled: isDisabled,\n                });\n            });\n            this.setState({\n                columns,\n                rows,\n            });\n        };\n        this.getActions = (item, isDisabled) => {\n            const { groupBy, reportQueryString } = this.props;\n            return (React.createElement(Actions, { groupBy: groupBy, isDisabled: isDisabled, item: item, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getMonthOverMonthCost = (item, index) => {\n            const { intl } = this.props;\n            const value = formatCurrency(Math.abs(item.cost.total.value - item.delta_value), item.cost.total.units);\n            const percentage = item.delta_percent !== null ? formatPercentage(Math.abs(item.delta_percent)) : 0;\n            const showPercentage = !(percentage === 0 || percentage === '0.00');\n            const showValue = item.delta_percent !== null; // Workaround for https://github.com/project-koku/koku/issues/1395\n            let iconOverride;\n            if (showPercentage) {\n                iconOverride = 'iconOverride';\n                if (item.delta_percent !== null && item.delta_value < 0) {\n                    iconOverride += ' decrease';\n                }\n                if (item.delta_percent !== null && item.delta_value > 0) {\n                    iconOverride += ' increase';\n                }\n            }\n            if (!showValue) {\n                return getNoDataForDateRangeString();\n            }\n            else {\n                return (React.createElement(\"div\", { className: \"monthOverMonthOverride\" },\n                    React.createElement(\"div\", { className: iconOverride, key: `month-over-month-cost-${index}` },\n                        showPercentage ? intl.formatMessage(messages.percent, { value: percentage }) : React.createElement(EmptyValueState, null),\n                        showPercentage && item.delta_percent !== null && item.delta_value > 0 && (React.createElement(\"span\", { className: \"fa fa-sort-up\", style: styles.infoArrow, key: `month-over-month-icon-${index}` })),\n                        showPercentage && item.delta_percent !== null && item.delta_value < 0 && (React.createElement(\"span\", { className: \"fa fa-sort-down\", style: Object.assign(Object.assign({}, styles.infoArrow), styles.infoArrowDesc), key: `month-over-month-icon-${index}` }))),\n                    React.createElement(\"div\", { style: styles.infoDescription, key: `month-over-month-info-${index}` }, getForDateRangeString(value))));\n            }\n        };\n        this.getTotalCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.cost.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.cost.total.value, item.cost.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport || prevProps.selectedItems !== selectedItems) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { filterBy, isLoading, onSelected, onSort, orderBy, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, filterBy: filterBy, isActionsCell: true, isLoading: isLoading, onSelected: onSelected, onSort: onSort, orderBy: orderBy, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst DetailsTable = injectIntl(withRouter(DetailsTableBase));\nexport { DetailsTable };\n","import { getQuery } from 'api/queries/ibmQuery';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType, TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/components/dataToolbar';\nimport { isEqual } from 'routes/utils/equal';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { tagKey } from 'utils/props';\nconst tagType = TagType.tag;\nconst tagPathsType = TagPathsType.ibm;\nexport class DetailsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { intl, tagReport } = this.props;\n            const options = [\n                { name: intl.formatMessage(messages.filterByValues, { value: 'account' }), key: 'account' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'project' }), key: 'project' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'service' }), key: 'service' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'region' }), key: 'region' },\n            ];\n            if (tagReport && tagReport.data && tagReport.data.length) {\n                options.push({ name: intl.formatMessage(messages.filterByValues, { value: tagKey }), key: tagKey });\n            }\n            return options;\n        };\n        this.updateReport = () => {\n            const { fetchTag, tagQueryString } = this.props;\n            fetchTag(tagPathsType, tagType, tagQueryString);\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        }, () => {\n            this.updateReport();\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { query, tagReport } = this.props;\n        if (!isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            }, () => {\n                this.updateReport();\n            });\n        }\n        else if (query && !isEqual(query, prevProps.query)) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { groupBy, isAllSelected, isBulkSelectDisabled, isDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onExportClicked, onFilterAdded, onFilterRemoved, pagination, query, selectedItems, tagReport, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, groupBy: groupBy, isAllSelected: isAllSelected, isBulkSelectDisabled: isBulkSelectDisabled, isDisabled: isDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onExportClicked: onExportClicked, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.ibm, selectedItems: selectedItems, showBulkSelect: true, showExcludes: true, showExport: true, showFilter: true, tagReport: tagReport, tagPathsType: tagPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        key_only: true,\n        limit: 1000,\n    });\n    const tagReport = tagSelectors.selectTag(state, tagPathsType, tagType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagPathsType, tagType, tagQueryString);\n    return {\n        tagReport,\n        tagReportFetchStatus,\n        tagQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst DetailsToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsToolbarBase);\nconst DetailsToolbar = injectIntl(DetailsToolbarConnect);\nexport { DetailsToolbar };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    gcpDetails: {\n        minHeight: '100%',\n    },\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    toolbarContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getQuery, parseQuery } from 'api/queries/ibmQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ExportModal } from 'routes/components/export';\nimport { Loading } from 'routes/components/page/loading';\nimport { NoData } from 'routes/components/page/noData';\nimport { NoProviders } from 'routes/components/page/noProviders';\nimport { NotAvailable } from 'routes/components/page/notAvailable';\nimport { getIdKeyForGroupBy } from 'routes/utils/computedReport/getComputedIbmReportItems';\nimport { getUnsortedComputedReportItems } from 'routes/utils/computedReport/getComputedReportItems';\nimport { getGroupByTagKey } from 'routes/utils/groupBy';\nimport { hasCurrentMonthData } from 'routes/utils/providers';\nimport { filterProviders } from 'routes/utils/providers';\nimport { getRouteForQuery } from 'routes/utils/query';\nimport { handleOnCurrencySelected, handleOnFilterAdded, handleOnFilterRemoved, handleOnPerPageSelect, handleOnSetPage, handleOnSort, } from 'routes/utils/queryNavigate';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nimport { noPrefix, tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { DetailsHeader } from './detailsHeader';\nimport { DetailsTable } from './detailsTable';\nimport { DetailsToolbar } from './detailsToolbar';\nimport { styles } from './ibmDetails.styles';\nconst baseQuery = {\n    filter: {\n        limit: 10,\n        offset: 0,\n    },\n    exclude: {},\n    filter_by: {},\n    group_by: {\n        account: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst reportType = ReportType.cost;\nconst reportPathsType = ReportPathsType.ibm;\nclass IbmDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            isAllSelected: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey || groupById,\n            });\n        };\n        this.getExportModal = (computedItems) => {\n            const { query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `${noPrefix}${groupById}` || item.label === `${noPrefix}${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, router, report } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = Math.trunc(offset / limit + 1);\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handleOnPerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleOnSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.ibm),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { query, report, reportFetchStatus, reportQueryString, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return (React.createElement(DetailsTable, { filterBy: query.filter_by, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, groupByTagKey: groupByTagKey, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending) => handleOnSort(query, router, sortType, isSortAscending), orderBy: query.order_by, report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, router, report } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(DetailsToolbar, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isDisabled || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onExportClicked: this.handleExportModalOpen, onFilterAdded: filter => handleOnFilterAdded(query, router, filter), onFilterRemoved: filter => handleOnFilterRemoved(query, router, filter), pagination: this.getPagination(isDisabled), query: query, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            const groupByKey = groupBy;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: '*',\n                }, order_by: undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.updateReport = () => {\n            const { fetchReport, reportQueryString } = this.props;\n            fetchReport(reportPathsType, reportType, reportQueryString);\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { currency, intl, providers, providersFetchStatus, query, report, reportError, reportFetchStatus, router } = this.props;\n        const computedItems = this.getComputedItems();\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const isDisabled = computedItems.length === 0;\n        const title = intl.formatMessage(messages.ibmDetailsTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.inProgress) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.complete) {\n            // API returns empty data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: ProviderType.ibm, title: title });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.ibmDetails },\n            React.createElement(DetailsHeader, { currency: currency, groupBy: groupById, onCurrencySelected: () => handleOnCurrencySelected(query, router), onGroupBySelected: this.handleGroupBySelected, report: report }),\n            React.createElement(\"div\", { style: styles.content },\n                React.createElement(\"div\", { style: styles.toolbarContainer }, this.getToolbar(computedItems)),\n                this.getExportModal(computedItems),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const currency = getCurrency();\n    const query = Object.assign(Object.assign({}, baseQuery), queryFromRoute);\n    const reportQuery = {\n        currency,\n        delta: 'cost',\n        exclude: query.exclude,\n        filter: Object.assign(Object.assign({}, query.filter), { resolution: 'monthly', time_scope_units: 'month', time_scope_value: -1 }),\n        filter_by: query.filter_by,\n        group_by: query.group_by,\n        order_by: query.order_by,\n    };\n    const reportQueryString = getQuery(reportQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        currency,\n        providers: filterProviders(providers, ProviderType.ibm),\n        providersError,\n        providersFetchStatus,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(IbmDetails)));\n"],"names":["ExternalLinkAltIconConfig","name","height","width","svgPath","yOffset","xOffset","ExternalLinkAltIcon","exports","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","EmptyState","variant","EmptyStateVariant","className","children","EmptyStateIcon","icon","ExclamationCircleIcon","Title","headingLevel","size","EmptyStateBody","href","target","rel","styles","costColumn","textAlign","display","justifyContent","paddingRight","defaultLabel","minWidth","emptyState","backgroundColor","paddingTop","infoArrow","position","infoArrowDesc","bottom","infoDescription","color","fontSize","lastItem","lastItemColumn","managedColumn","nameColumn","DataTable","constructor","props","super","getEmptyState","filterBy","intl","val","values","filter","showMargin","formatMessage","messages","getSortBy","index","columns","orderBy","direction","getSortParams","sortBy","onSort","handleOnSort","columnIndex","handleOnSelect","event","isSelected","rowId","onSelected","rows","newRows","items","map","row","selected","item","setState","SortByDirection","bind","render","isActionsCell","isLoading","TableComposable","gridBreakPoint","TableVariant","Thead","Tr","col","Th","key","value","modifier","sort","isSortable","undefined","style","Tbody","Td","colSpan","Bullseye","Spinner","rowIndex","cells","cellIndex","dataLabel","select","disable","selectionDisabled","onSelect","_event","isActionCell","injectIntl","SelectableTable","handleOnRowClick","onRowClick","hasSelectableRowCaption","isSelectable","isHoverable","isRowSelected","DetailsActionsBase","stateProps","dispatchProps","defaultState","isDropdownOpen","isExportModalOpen","state","getExportModal","groupBy","reportPathsType","reportQueryString","count","isOpen","onClose","handleExportModalClose","handleExportModalOpen","handleOnToggle","isDisabled","showPriceListOption","source_uuid","redirectToCostModel","router","DropdownItem","component","onClick","unshift","includes","Dropdown","toggle","KebabToggle","onToggle","isPlain","dropdownItems","mapStateToProps","mapDispatchToProps","costModels","DetailsActionsConnect","connect","getIdKeyForGroupBy","account","project","region","service","costValue","marginTop","global_spacer_lg","marginBottom","costLabelUnit","global_FontSize_sm","global_Color_100","dateTitle","header","global_BackgroundColor_light_100","padding","headerContent","headerContentLeft","minHeight","headerContentRight","title","paddingBottom","global_spacer_sm","groupByOptions","label","tagPathsType","DetailsHeaderBase","currency","isExportsFeatureEnabled","onCurrencySelected","onGroupBySelected","providers","providersError","report","showContent","meta","hasCost","total","cost","TitleSizes","options","showTags","format","units","providersQueryString","providersFetchStatus","featureFlags","DetailsHeader","DetailsTableBase","initDatum","groupByTagKey","isAllSelected","selectedItems","computedItems","idKey","getTotalCost","monthOverMonth","getMonthOverMonthCost","desc","id","actions","getActions","Link","to","basePath","routes","description","toString","push","find","Math","abs","delta_value","percentage","delta_percent","showPercentage","showValue","iconOverride","percentValue","toFixed","componentDidMount","componentDidUpdate","prevProps","currentReport","data","JSON","stringify","DetailsTable","tagType","DetailsToolbarBase","getCategoryOptions","tagReport","updateReport","fetchTag","tagQueryString","categoryOptions","query","isBulkSelectDisabled","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onExportClicked","onFilterAdded","onFilterRemoved","pagination","resourcePathsType","showBulkSelect","showExcludes","showExport","showFilter","resolution","time_scope_units","time_scope_value","key_only","limit","tagReportFetchStatus","DetailsToolbarConnect","DetailsToolbar","gcpDetails","content","paginationContainer","marginLeft","marginRight","global_spacer_md","tableContainer","toolbarContainer","baseQuery","offset","exclude","filter_by","group_by","order_by","reportType","IbmDetails","getComputedItems","groupById","isAllItems","getPagination","isBottom","page","trunc","Pagination","isCompact","itemCount","onPerPageSelect","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","PaginationVariant","widgetId","getTable","reportFetchStatus","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","action","handleGroupBySelected","groupByKey","newQuery","parse","navigate","location","replace","newItems","fetchReport","prevState","reportError","noReport","noLocation","search","providerType","queryFromRoute","reportQuery","delta"],"sourceRoot":""}