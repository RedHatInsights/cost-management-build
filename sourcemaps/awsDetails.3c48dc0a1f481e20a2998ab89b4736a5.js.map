{"version":3,"file":"js/awsDetails.1670862811565.af794b18eaa8c3072cb1.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/external-link-alt-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/minus-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_Color_100.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_FontSize_xs.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_disabled_color_100.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_3xl.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_xs.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Unavailable/Unavailable.js","webpack:///./src/routes/components/state/emptyValueState/emptyValueState.tsx","webpack:///./src/routes/views/components/costType/costType.styles.ts","webpack:///./src/routes/views/components/costType/costType.tsx","webpack:///./src/utils/computedReport/getComputedAwsReportItems.ts","webpack:///./src/routes/views/details/awsDetails/awsDetails.styles.ts","webpack:///./src/routes/views/details/awsDetails/detailsHeader.styles.ts","webpack:///./src/routes/views/details/awsDetails/detailsHeader.tsx","webpack:///./src/routes/views/details/awsDetails/detailsTable.tsx","webpack:///./src/routes/views/details/awsDetails/detailsToolbar.tsx","webpack:///./src/routes/views/details/awsDetails/awsDetails.tsx","webpack:///./src/routes/views/details/components/actions/actions.tsx","webpack:///./src/routes/views/details/components/dataTable/dataTable.styles.ts","webpack:///./src/routes/views/details/components/dataTable/dataTable.tsx","webpack:///./src/routes/views/utils/paths.ts"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExternalLinkAltIcon = createIcon(ExternalLinkAltIconConfig);\n\nexport default ExternalLinkAltIcon;","import { createIcon } from '../createIcon';\n\nexport const MinusIconConfig = {\n  name: 'MinusIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const MinusIcon = createIcon(MinusIconConfig);\n\nexport default MinusIcon;","\"use strict\";\nexports.__esModule = true;\nexports.global_Color_100 = {\n  \"name\": \"--pf-global--Color--100\",\n  \"value\": \"#151515\",\n  \"var\": \"var(--pf-global--Color--100)\"\n};\nexports[\"default\"] = exports.global_Color_100;","\"use strict\";\nexports.__esModule = true;\nexports.global_FontSize_xs = {\n  \"name\": \"--pf-global--FontSize--xs\",\n  \"value\": \"0.75rem\",\n  \"var\": \"var(--pf-global--FontSize--xs)\"\n};\nexports[\"default\"] = exports.global_FontSize_xs;","\"use strict\";\nexports.__esModule = true;\nexports.global_disabled_color_100 = {\n  \"name\": \"--pf-global--disabled-color--100\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--disabled-color--100)\"\n};\nexports[\"default\"] = exports.global_disabled_color_100;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_3xl = {\n  \"name\": \"--pf-global--spacer--3xl\",\n  \"value\": \"4rem\",\n  \"var\": \"var(--pf-global--spacer--3xl)\"\n};\nexports[\"default\"] = exports.global_spacer_3xl;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_xs = {\n  \"name\": \"--pf-global--spacer--xs\",\n  \"value\": \"0.25rem\",\n  \"var\": \"var(--pf-global--spacer--xs)\"\n};\nexports[\"default\"] = exports.global_spacer_xs;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport '../Unavailable/Unavailable.css';\nvar Unavailable = function () {\n    return (_jsxs(EmptyState, __assign({ variant: EmptyStateVariant.large, className: \"ins-c-empty-state__unavailable pf-m-redhat-font\" }, { children: [_jsx(EmptyStateIcon, { icon: ExclamationCircleIcon }), _jsx(Title, __assign({ headingLevel: \"h5\", size: \"lg\" }, { children: \"This page is temporarily unavailable\" })), _jsxs(EmptyStateBody, { children: [\"Try refreshing the page. If the problem persists, contact your organization administrator or visit our\", _jsxs(\"a\", __assign({ href: \"https://status.redhat.com/\", target: \"_blank\", rel: \"noopener noreferrer\" }, { children: [' ', \"status page\"] })), ' ', \"for known outages.\"] })] })));\n};\nexport default Unavailable;\n//# sourceMappingURL=Unavailable.js.map","import './emptyValueState.scss';\nimport { MinusIcon } from '@patternfly/react-icons/dist/esm/icons/minus-icon';\nimport React from 'react';\nconst EmptyValueState = () => {\n    return (React.createElement(\"span\", { className: \"emptyValueContainer\" },\n        React.createElement(MinusIcon, null)));\n};\nexport default EmptyValueState;\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    costSelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    costLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n        whiteSpace: 'nowrap',\n    },\n};\n","import './costType.scss';\nimport { Select, SelectOption, SelectVariant, Title } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { CostTypes } from 'utils/costType';\nimport { invalidateSession, setCostType } from 'utils/localStorage';\nimport { styles } from './costType.styles';\nconst costTypeOptions = [\n    { desc: messages.costTypeAmortizedDesc, label: messages.costTypeAmortized, value: CostTypes.amortized },\n    { desc: messages.costTypeBlendedDesc, label: messages.costTypeBlended, value: CostTypes.blended },\n    { desc: messages.costTypeUnblendedDesc, label: messages.costTypeUnblended, value: CostTypes.unblended },\n];\nclass CostTypeBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isSelectOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getSelect = () => {\n            const { costType, isDisabled } = this.props;\n            const { isSelectOpen } = this.state;\n            const selectOptions = this.getSelectOptions();\n            const selection = selectOptions.find((option) => option.value === costType);\n            return (React.createElement(Select, { className: \"selectOverride\", id: \"costTypeSelect\", isDisabled: isDisabled, isOpen: isSelectOpen, onSelect: this.handleSelect, onToggle: this.handleToggle, selections: selection, variant: SelectVariant.single }, selectOptions.map(option => (React.createElement(SelectOption, { description: option.desc, key: option.value, value: option })))));\n        };\n        this.getSelectOptions = () => {\n            const { intl } = this.props;\n            const options = [];\n            costTypeOptions.map(option => {\n                options.push({\n                    desc: intl.formatMessage(option.desc),\n                    toString: () => intl.formatMessage(option.label),\n                    value: option.value,\n                });\n            });\n            return options;\n        };\n        this.handleSelect = (event, selection) => {\n            const { onSelect } = this.props;\n            setCostType(selection.value); // Set cost type in local storage\n            this.setState({\n                isSelectOpen: false,\n            }, () => {\n                if (onSelect) {\n                    onSelect(selection.value);\n                }\n            });\n        };\n        this.handleToggle = isSelectOpen => {\n            this.setState({ isSelectOpen });\n        };\n    }\n    render() {\n        const { intl } = this.props;\n        // Clear local storage value if current session is not valid\n        invalidateSession();\n        return (React.createElement(\"div\", { style: styles.costSelector },\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\", style: styles.costLabel }, intl.formatMessage(messages.costTypeLabel)),\n            this.getSelect()));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst CostTypeConnect = connect(mapStateToProps, mapDispatchToProps)(CostTypeBase);\nconst CostType = injectIntl(CostTypeConnect);\nexport default CostType;\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.account) {\n        return 'account';\n    }\n    if (groupBy.org_unit_id) {\n        return 'org_unit_id';\n    }\n    if (groupBy.region) {\n        return 'region';\n    }\n    if (groupBy.service) {\n        return 'service';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    awsDetails: {\n        minHeight: '100%',\n    },\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costValue: {\n        marginTop: global_spacer_lg.var,\n        marginBottom: 0,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    costType: {\n        display: 'flex',\n        marginLeft: global_spacer_md.var,\n    },\n    dateTitle: {\n        textAlign: 'end',\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentLeft: {\n        display: 'flex',\n        minHeight: '90px',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes } from '@patternfly/react-core';\nimport { OrgPathsType } from 'api/orgs/org';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { TagPathsType } from 'api/tags/tag';\nimport { ExportsLink } from 'components/exports';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Currency } from 'routes/components/currency';\nimport { CostType } from 'routes/views/components/costType';\nimport { GroupBy } from 'routes/views/components/groupBy';\nimport { filterProviders } from 'routes/views/utils/providers';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedAwsReportItems';\nimport { getSinceDateRangeString } from 'utils/dates';\nimport { formatCurrency } from 'utils/format';\nimport { styles } from './detailsHeader.styles';\nconst groupByOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nconst orgReportPathsType = OrgPathsType.aws;\nconst tagReportPathsType = TagPathsType.aws;\nclass DetailsHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.handleCostTypeSelected = (value) => {\n            const { onCostTypeSelected } = this.props;\n            if (onCostTypeSelected) {\n                onCostTypeSelected(value);\n            }\n        };\n    }\n    render() {\n        const { costType, currency, groupBy, isCurrencyFeatureEnabled, isExportsFeatureEnabled, onCurrencySelected, onGroupBySelected, providers, providersError, report, intl, } = this.props;\n        const showContent = report && !providersError && providers && providers.meta && providers.meta.count > 0;\n        const hasCost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.awsDetailsTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    isCurrencyFeatureEnabled && React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(\"div\", { style: styles.headerContentLeft },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: !showContent, onSelected: onGroupBySelected, options: groupByOptions, orgReportPathsType: orgReportPathsType, showOrgs: true, showTags: true, tagReportPathsType: tagReportPathsType }),\n                    React.createElement(\"div\", { style: styles.costType },\n                        React.createElement(CostType, { costType: costType, onSelect: this.handleCostTypeSelected }))),\n                Boolean(showContent) && (React.createElement(\"div\", null,\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: TitleSizes['4xl'] }, formatCurrency(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD')),\n                    React.createElement(\"div\", { style: styles.dateTitle }, getSinceDateRangeString()))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        isCurrencyFeatureEnabled: featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state),\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        providers: filterProviders(providers, ProviderType.aws),\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n    };\n});\nconst DetailsHeader = injectIntl(connect(mapStateToProps, {})(DetailsHeaderBase));\nexport { DetailsHeader };\n","import 'routes/views/details/components/dataTable/dataTable.scss';\nimport { noPrefix } from 'api/queries/query';\nimport { ReportPathsType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { paths } from 'routes';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { Actions } from 'routes/views/details/components/actions';\nimport { DataTable } from 'routes/views/details/components/dataTable';\nimport { styles } from 'routes/views/details/components/dataTable/dataTable.styles';\nimport { getOrgBreakdownPath } from 'routes/views/utils/paths';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getForDateRangeString, getNoDataForDateRangeString } from 'utils/dates';\nimport { formatCurrency, formatPercentage } from 'utils/format';\nimport { withRouter } from 'utils/router';\nconst reportPathsType = ReportPathsType.aws;\nclass DetailsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { groupBy, groupByOrg, groupByTagKey, intl, isAllSelected, report, router, selectedItems } = this.props;\n            if (!report) {\n                return;\n            }\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey ? groupByTagKey : groupByOrg ? 'org_entities' : groupBy,\n            });\n            const columns = groupByTagKey || groupByOrg\n                ? [\n                    {\n                        name: '',\n                    },\n                    {\n                        name: groupByOrg\n                            ? intl.formatMessage(messages.names, { count: 2 })\n                            : intl.formatMessage(messages.tagNames),\n                    },\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign({ orderBy: groupBy === 'account' ? 'account_alias' : groupBy, name: intl.formatMessage(messages.detailsResourceNames, { value: groupBy }) }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ];\n            computedItems.map((item, index) => {\n                const cost = this.getTotalCost(item, index);\n                const monthOverMonth = this.getMonthOverMonthCost(item, index);\n                const label = item && item.label && item.label !== null ? item.label : '';\n                const isDisabled = (label === null || label === void 0 ? void 0 : label.toLowerCase()) === `${noPrefix}${groupBy}` || (label === null || label === void 0 ? void 0 : label.toLowerCase()) === `${noPrefix}${groupByTagKey}`;\n                const desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                const actions = this.getActions(item, isDisabled);\n                const name = isDisabled ? label : (React.createElement(Link, { to: getOrgBreakdownPath({\n                        basePath: paths.awsDetailsBreakdown,\n                        description: item.id,\n                        groupBy,\n                        groupByOrg,\n                        id: item.id,\n                        router,\n                        title: item.label,\n                        type: item.type,\n                    }) }, label));\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: (React.createElement(\"div\", null,\n                                name,\n                                desc)),\n                        },\n                        { value: React.createElement(\"div\", null, monthOverMonth) },\n                        { value: React.createElement(\"div\", null, cost) },\n                        { value: React.createElement(\"div\", null, actions) },\n                    ],\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                    selectionDisabled: isDisabled,\n                });\n            });\n            this.setState({\n                columns,\n                rows,\n            });\n        };\n        this.getActions = (item, isDisabled = false) => {\n            const { groupBy, reportQueryString } = this.props;\n            return (React.createElement(Actions, { groupBy: groupBy, isDisabled: isDisabled, item: item, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getMonthOverMonthCost = (item, index) => {\n            const { intl } = this.props;\n            const value = formatCurrency(Math.abs(item.cost.total.value - item.delta_value), item.cost.total.units);\n            const percentage = item.delta_percent !== null ? formatPercentage(Math.abs(item.delta_percent)) : 0;\n            const showPercentage = !(percentage === 0 || percentage === '0.00');\n            const showValue = item.delta_percent !== null; // Workaround for https://github.com/project-koku/koku/issues/1395\n            let iconOverride;\n            if (showPercentage) {\n                iconOverride = 'iconOverride';\n                if (item.delta_percent !== null && item.delta_value < 0) {\n                    iconOverride += ' decrease';\n                }\n                if (item.delta_percent !== null && item.delta_value > 0) {\n                    iconOverride += ' increase';\n                }\n            }\n            if (!showValue) {\n                return getNoDataForDateRangeString();\n            }\n            else {\n                return (React.createElement(\"div\", { className: \"monthOverMonthOverride\" },\n                    React.createElement(\"div\", { className: iconOverride, key: `month-over-month-cost-${index}` },\n                        showPercentage ? intl.formatMessage(messages.percent, { value: percentage }) : React.createElement(EmptyValueState, null),\n                        Boolean(showPercentage && item.delta_percent !== null && item.delta_value > 0) && (React.createElement(\"span\", { className: \"fa fa-sort-up\", style: styles.infoArrow, key: `month-over-month-icon-${index}` })),\n                        Boolean(showPercentage && item.delta_percent !== null && item.delta_value < 0) && (React.createElement(\"span\", { className: \"fa fa-sort-down\", style: Object.assign(Object.assign({}, styles.infoArrow), styles.infoArrowDesc), key: `month-over-month-icon-${index}` }))),\n                    React.createElement(\"div\", { style: styles.infoDescription, key: `month-over-month-info-${index}` }, getForDateRangeString(value))));\n            }\n        };\n        this.getTotalCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.cost.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.cost.total.value, item.cost.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport || prevProps.selectedItems !== selectedItems) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { isLoading, onSelected, onSort, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, isLoading: isLoading, onSelected: onSelected, onSort: onSort, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst DetailsTable = injectIntl(withRouter(DetailsTableBase));\nexport { DetailsTable };\n","import { OrgPathsType, OrgType } from 'api/orgs/org';\nimport { getQuery, orgUnitIdKey, tagKey } from 'api/queries/query';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType, TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { orgActions, orgSelectors } from 'store/orgs';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { isEqual } from 'utils/equal';\nconst orgReportPathsType = OrgPathsType.aws;\nconst orgReportType = OrgType.org;\nconst tagReportPathsType = TagPathsType.aws;\nconst tagReportType = TagType.tag;\nexport class DetailsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { intl, orgReport, tagReport } = this.props;\n            const options = [\n                { name: intl.formatMessage(messages.filterByValues, { value: 'account' }), key: 'account' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'service' }), key: 'service' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'region' }), key: 'region' },\n            ];\n            if (orgReport && orgReport.data && orgReport.data.length) {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: 'org_unit_id' }),\n                    key: orgUnitIdKey,\n                });\n            }\n            if (tagReport && tagReport.data && tagReport.data.length) {\n                options.push({ name: intl.formatMessage(messages.filterByValues, { value: 'tag' }), key: tagKey });\n            }\n            return options;\n        };\n    }\n    componentDidMount() {\n        const { fetchOrg, fetchTag, orgReportFetchStatus, orgQueryString, tagReportFetchStatus, tagQueryString } = this.props;\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        }, () => {\n            if (orgReportFetchStatus !== FetchStatus.inProgress) {\n                fetchOrg(orgReportPathsType, orgReportType, orgQueryString);\n            }\n            if (tagReportFetchStatus !== FetchStatus.inProgress) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchOrg, fetchTag, orgReport, orgReportFetchStatus, query, orgQueryString, tagReport, tagReportFetchStatus, tagQueryString, } = this.props;\n        if (!isEqual(orgReport, prevProps.orgReport) || !isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            }, () => {\n                if (orgReportFetchStatus !== FetchStatus.inProgress) {\n                    fetchOrg(orgReportPathsType, orgReportType, orgQueryString);\n                }\n                if (tagReportFetchStatus !== FetchStatus.inProgress) {\n                    fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n                }\n            });\n        }\n        else if (query && !isEqual(query, prevProps.query)) {\n            if (orgReportFetchStatus !== FetchStatus.inProgress) {\n                fetchOrg(orgReportPathsType, orgReportType, orgQueryString);\n            }\n            if (tagReportFetchStatus !== FetchStatus.inProgress) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n        }\n    }\n    render() {\n        const { groupBy, isAllSelected, isBulkSelectDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onExportClicked, onFilterAdded, onFilterRemoved, orgReport, pagination, query, selectedItems, tagReport, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, groupBy: groupBy, isAllSelected: isAllSelected, isBulkSelectDisabled: isBulkSelectDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onExportClicked: onExportClicked, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, orgReport: orgReport, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.aws, selectedItems: selectedItems, showBulkSelect: true, showExport: true, showFilter: true, tagReport: tagReport, tagReportPathsType: tagReportPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const baseQuery = {\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        key_only: true,\n        limit: 1000,\n    };\n    const tagQueryString = getQuery(Object.assign({}, baseQuery));\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, tagQueryString);\n    const orgQueryString = getQuery(Object.assign({}, baseQuery));\n    const orgReport = orgSelectors.selectOrg(state, orgReportPathsType, orgReportType, orgQueryString);\n    const orgReportFetchStatus = orgSelectors.selectOrgFetchStatus(state, orgReportPathsType, orgReportType, orgQueryString);\n    return {\n        orgReport,\n        orgReportFetchStatus,\n        orgQueryString,\n        tagReport,\n        tagReportFetchStatus,\n        tagQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchOrg: orgActions.fetchOrg,\n    fetchTag: tagActions.fetchTag,\n};\nconst DetailsToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsToolbarBase);\nconst DetailsToolbar = injectIntl(DetailsToolbarConnect);\nexport { DetailsToolbar };\n","import 'routes/views/details/components/dataTable/dataTable.scss';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getQuery, parseQuery } from 'api/queries/awsQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { noPrefix, orgUnitIdKey, tagPrefix } from 'api/queries/query';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoData } from 'routes/state/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { ExportModal } from 'routes/views/components/export';\nimport { getGroupByOrgValue, getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { handleCostTypeSelected, handleCurrencySelected, handleFilterAdded, handleFilterRemoved, handlePerPageSelect, handleSetPage, handleSort, } from 'routes/views/utils/handles';\nimport { filterProviders, hasCurrentMonthData } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedAwsReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getCostType } from 'utils/costType';\nimport { getCurrency } from 'utils/localStorage';\nimport { withRouter } from 'utils/router';\nimport { styles } from './awsDetails.styles';\nimport { DetailsHeader } from './detailsHeader';\nimport { DetailsTable } from './detailsTable';\nimport { DetailsToolbar } from './detailsToolbar';\nconst baseQuery = {\n    delta: 'cost',\n    filter: {\n        limit: 10,\n        offset: 0,\n        resolution: 'monthly',\n        time_scope_units: 'month',\n        time_scope_value: -1,\n    },\n    exclude: {},\n    filter_by: {},\n    group_by: {\n        account: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst reportType = ReportType.cost;\nconst reportPathsType = ReportPathsType.aws;\nclass AwsDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            isAllSelected: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const groupBy = groupByTagKey || groupById;\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: groupBy === orgUnitIdKey ? 'org_entities' : groupBy,\n            });\n        };\n        this.getExportModal = (computedItems) => {\n            const { query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                var _a, _b;\n                if (!(((_a = item.label) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === `${noPrefix}${groupById}` ||\n                    ((_b = item.label) === null || _b === void 0 ? void 0 : _b.toLowerCase()) === `${noPrefix}${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getPagination = (isBottom = false) => {\n            const { intl, query, router, report } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = offset / limit + 1;\n            return (React.createElement(Pagination, { isCompact: !isBottom, itemCount: count, onPerPageSelect: (event, perPage) => handlePerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.aws),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { query, report, reportFetchStatus, reportQueryString, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const groupByOrg = getGroupByOrgValue(query);\n            return (React.createElement(DetailsTable, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, groupByTagKey: groupByTagKey, groupByOrg: groupByOrg, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending) => handleSort(query, router, sortType, isSortAscending), report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, router, report } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(DetailsToolbar, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isAllSelected: isAllSelected, isExportDisabled: computedItems.length === 0 || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onExportClicked: this.handleExportModalOpen, onFilterAdded: filter => handleFilterAdded(query, router, filter), onFilterRemoved: filter => handleFilterRemoved(query, router, filter), pagination: this.getPagination(), query: query, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            let groupByKey = groupBy;\n            let value = '*';\n            // Check for org units\n            const index = groupBy.indexOf(orgUnitIdKey);\n            if (index !== -1) {\n                groupByKey = orgUnitIdKey.substring(0, orgUnitIdKey.length);\n                value = groupBy.slice(orgUnitIdKey.length);\n            }\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: value,\n                }, order_by: { cost: 'desc' } });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.updateReport = () => {\n            const { fetchReport, query, reportQueryString, router } = this.props;\n            if (!router.location.search) {\n                router.navigate(getRouteForQuery({\n                    exclude: query ? query.exclude : undefined,\n                    filter_by: query ? query.filter_by : undefined,\n                    group_by: query ? query.group_by : undefined,\n                    order_by: { cost: 'desc' },\n                }, router.location), {\n                    replace: true,\n                });\n            }\n            else {\n                fetchReport(reportPathsType, reportType, reportQueryString);\n            }\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { costType, currency, intl, providers, providersFetchStatus, query, report, reportError, reportFetchStatus, router, } = this.props;\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const computedItems = this.getComputedItems();\n        const title = intl.formatMessage(messages.awsDetailsTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.inProgress) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.complete) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: ProviderType.aws, title: title });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.awsDetails },\n            React.createElement(DetailsHeader, { costType: costType, currency: currency, groupBy: groupById, onCostTypeSelected: value => handleCostTypeSelected(query, router, value), onCurrencySelected: value => handleCurrencySelected(query, router, value), onGroupBySelected: this.handleGroupBySelected, report: report }),\n            React.createElement(\"div\", { style: styles.content },\n                this.getToolbar(computedItems),\n                this.getExportModal(computedItems),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const costType = getCostType();\n    const currency = featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state) ? getCurrency() : undefined;\n    const query = {\n        delta: 'cost',\n        filter: Object.assign(Object.assign({}, baseQuery.filter), queryFromRoute.filter),\n        filter_by: queryFromRoute.filter_by || baseQuery.filter_by,\n        exclude: queryFromRoute.exclude || baseQuery.exclude,\n        group_by: queryFromRoute.group_by || baseQuery.group_by,\n        order_by: queryFromRoute.order_by || baseQuery.order_by,\n    };\n    const reportQueryString = getQuery(Object.assign(Object.assign({}, query), { cost_type: costType, currency }));\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        costType,\n        currency,\n        providers: filterProviders(providers, ProviderType.aws),\n        providersError,\n        providersFetchStatus,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n        // Testing...\n        //\n        // providers: {\n        //   meta: {\n        //     count: 0,\n        //   },\n        // } as any,\n        // providersError: {\n        //   response: {\n        //     // status: 401\n        //     status: 500\n        //   }\n        // } as any,\n        // providersFetchStatus: FetchStatus.inProgress,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(AwsDetails)));\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport { tagPrefix } from 'api/queries/query';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ExportModal } from 'routes/views/components/export';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nimport { withRouter } from 'utils/router';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, reportPathsType, reportQueryString } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { count: 1, groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, intl, item: { source_uuid }, redirectToCostModel, router, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, intl.formatMessage(messages.detailsActionsExport)),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], router) }, intl.formatMessage(messages.detailsActionsPriceList)));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = injectIntl(withRouter(DetailsActionsConnect));\nexport default Actions;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    costColumn: {\n        textAlign: 'right',\n    },\n    defaultLabel: {\n        minWidth: '63px',\n    },\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    nameColumn: {\n        width: '1%',\n    },\n};\n","import { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport { parseQuery } from 'api/queries/ocpQuery';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass DataTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { intl, router } = this.props;\n            const queryFromRoute = parseQuery(router.location.search);\n            if (queryFromRoute.filter_by) {\n                for (const val of Object.values(queryFromRoute.filter_by)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, router } = this.props;\n            const orderBy = columns[index].orderBy;\n            const queryFromRoute = parseQuery(router.location.search);\n            const direction = queryFromRoute && queryFromRoute.order_by && queryFromRoute.order_by[orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected, rows } = this.props;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isLoading, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.dataTableAriaLabel), gridBreakPoint: \"grid-2xl\" },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${cellIndex}-${rowIndex}`, modifier: \"nowrap\", select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    } })) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", isActionCell: cellIndex === row.cells.length - 1 }, item.value))))))))),\n            Boolean(rows.length === 0) && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(DataTable));\n","import { getQueryRoute, platformCategoryKey } from 'api/queries/query';\nimport { breakdownDescKey, breakdownTitleKey, orgUnitIdKey } from 'api/queries/query';\nimport { parseQuery } from 'api/queries/query';\nexport const getBreakdownPath = ({ basePath, description, groupBy, isPlatformCosts, label, router, }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const newQuery = Object.assign(Object.assign(Object.assign(Object.assign({}, queryFromRoute), (description && description !== label && { [breakdownDescKey]: description })), (isPlatformCosts && { [breakdownTitleKey]: label })), { group_by: {\n            [groupBy]: isPlatformCosts ? '*' : label,\n        } });\n    if (isPlatformCosts) {\n        if (!newQuery.filter) {\n            newQuery.filter = {};\n        }\n        newQuery.filter.category = platformCategoryKey;\n    }\n    return `${basePath}?${getQueryRoute(newQuery)}`;\n};\nexport const getOrgBreakdownPath = ({ basePath, description, groupBy, groupByOrg, id, router, title, type, }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const newQuery = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, queryFromRoute), (description && description !== title && { [breakdownDescKey]: description })), (title && { [breakdownTitleKey]: title })), (groupByOrg && { [orgUnitIdKey]: groupByOrg })), { group_by: {\n            [groupBy]: id, // This may be overridden below\n        } });\n    if (type === 'account') {\n        if (!newQuery.filter) {\n            newQuery.filter = {};\n        }\n        newQuery.filter.account = id;\n        newQuery.group_by = {\n            [orgUnitIdKey]: groupByOrg,\n        };\n    }\n    else if (type === 'organizational_unit') {\n        newQuery.group_by = {\n            [orgUnitIdKey]: id,\n        };\n    }\n    return `${basePath}?${getQueryRoute(newQuery)}`;\n};\nexport const isPlatformCosts = (queryFromRoute) => {\n    return queryFromRoute && queryFromRoute.filter && queryFromRoute.filter.category === platformCategoryKey;\n};\n"],"names":["ExternalLinkAltIconConfig","name","height","width","svgPath","yOffset","xOffset","ExternalLinkAltIcon","MinusIconConfig","MinusIcon","exports","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","EmptyState","variant","EmptyStateVariant","className","children","EmptyStateIcon","icon","ExclamationCircleIcon","Title","headingLevel","size","EmptyStateBody","href","target","rel","styles","costSelector","display","alignItems","costLabel","marginBottom","marginRight","whiteSpace","costTypeOptions","desc","messages","label","value","CostTypeBase","constructor","super","defaultState","isSelectOpen","state","getSelect","costType","isDisabled","props","selectOptions","getSelectOptions","selection","find","option","Select","id","isOpen","onSelect","handleSelect","onToggle","handleToggle","selections","SelectVariant","map","SelectOption","description","key","intl","options","push","formatMessage","toString","event","setState","render","style","mapStateToProps","CostTypeConnect","connect","injectIntl","getIdKeyForGroupBy","groupBy","account","org_unit_id","region","service","awsDetails","minHeight","content","paddingBottom","global_spacer_lg","paddingTop","paginationContainer","marginLeft","pagination","backgroundColor","global_BackgroundColor_light_100","global_spacer_md","tableContainer","costValue","marginTop","costLabelUnit","fontSize","global_FontSize_sm","color","global_Color_100","dateTitle","textAlign","header","padding","headerContent","justifyContent","headerContentLeft","headerContentRight","title","global_spacer_sm","groupByOptions","orgReportPathsType","tagReportPathsType","DetailsHeaderBase","handleCostTypeSelected","onCostTypeSelected","currency","isCurrencyFeatureEnabled","isExportsFeatureEnabled","onCurrencySelected","onGroupBySelected","providers","providersError","report","showContent","meta","count","hasCost","total","cost","TitleSizes","onSelected","showOrgs","showTags","Boolean","format","units","providersQueryString","providersFetchStatus","featureFlags","DetailsHeader","reportPathsType","DetailsTableBase","columns","rows","initDatum","groupByOrg","groupByTagKey","isAllSelected","router","selectedItems","computedItems","idKey","orderBy","isSortable","item","index","getTotalCost","monthOverMonth","getMonthOverMonthCost","toLowerCase","actions","getActions","to","basePath","type","cells","selected","undefined","val","selectionDisabled","reportQueryString","Math","abs","delta_value","percentage","delta_percent","showPercentage","showValue","iconOverride","percentValue","toFixed","componentDidMount","componentDidUpdate","prevProps","currentReport","data","JSON","stringify","isLoading","onSort","DetailsTable","orgReportType","tagReportType","DetailsToolbarBase","getCategoryOptions","orgReport","tagReport","fetchOrg","fetchTag","orgReportFetchStatus","orgQueryString","tagReportFetchStatus","tagQueryString","categoryOptions","query","isBulkSelectDisabled","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onExportClicked","onFilterAdded","onFilterRemoved","resourcePathsType","showBulkSelect","showExport","showFilter","baseQuery","filter","resolution","time_scope_units","time_scope_value","key_only","limit","mapDispatchToProps","DetailsToolbarConnect","DetailsToolbar","delta","offset","exclude","filter_by","group_by","order_by","reportType","AwsDetails","stateProps","dispatchProps","isExportModalOpen","getComputedItems","groupById","getExportModal","items","_a","_b","isAllItems","onClose","handleExportModalClose","getPagination","isBottom","page","Pagination","isCompact","itemCount","onPerPageSelect","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","PaginationVariant","widgetId","getTable","reportFetchStatus","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","handleExportModalOpen","action","handleGroupBySelected","groupByKey","indexOf","slice","newQuery","parse","navigate","location","replace","isSelected","newItems","updateReport","fetchReport","search","bind","prevState","reportError","noReport","noLocation","providerType","queryFromRoute","cost_type","DetailsActionsBase","isDropdownOpen","handleOnSelect","handleOnToggle","showPriceListOption","source_uuid","redirectToCostModel","DropdownItem","component","onClick","unshift","includes","Dropdown","toggle","KebabToggle","isPlain","position","dropdownItems","costModels","DetailsActionsConnect","costColumn","defaultLabel","minWidth","emptyState","infoArrow","infoArrowDesc","bottom","infoDescription","nameColumn","DataTable","getEmptyState","values","showMargin","getSortBy","direction","getSortParams","sortBy","handleOnSort","columnIndex","rowId","newRows","row","SortByDirection","TableComposable","gridBreakPoint","Thead","Tr","col","Th","modifier","sort","Tbody","Td","colSpan","Bullseye","Spinner","rowIndex","cellIndex","dataLabel","select","disable","_event","isActionCell","getBreakdownPath","isPlatformCosts","category","getOrgBreakdownPath"],"sourceRoot":""}