{"version":3,"file":"js/rhelDetails.3abd4f69f2f688aea0b8.js","mappings":"sVAAO,SAASA,EAAmBC,EAAU,CAAC,GAC1C,OAAIA,EAAQC,QACD,UAEPD,EAAQE,QACD,UAEPF,EAAQG,KACD,OAEJ,MACX,C,wQCLO,MAAMC,EAAS,CAClBC,UAAW,CACPC,UAAWC,EAAA,GAAiBC,IAC5BC,aAAc,GAElBC,cAAe,CACXC,SAAUC,EAAA,GAAmBC,MAC7BC,MAAOC,EAAA,GAAiBP,KAE5BQ,UAAW,CACPC,UAAW,OAEfC,OAAQ,CACJC,gBAAiBC,EAAA,GAAiCZ,IAClDa,QAASd,EAAA,GAAiBC,KAE9Bc,cAAe,CACXC,QAAS,OACTC,eAAgB,iBAEpBC,kBAAmB,CACfF,QAAS,OACTG,UAAW,QAEfC,mBAAoB,CAChBJ,QAAS,QAEbK,KAAM,CACFC,cAAe,UAEnBC,SAAU,CACNnB,SAAUoB,EAAA,GAAmBlB,OAEjCmB,UAAW,CACPC,WAAY,QAEhBC,MAAO,CACHC,cAAeC,EAAA,GAAiB5B,MCvBlC6B,EAAiB,CACnB,CAAEC,MAAO,UAAWzB,MAAO,WAC3B,CAAEyB,MAAO,OAAQzB,MAAO,QACxB,CAAEyB,MAAO,UAAWzB,MAAO,YAEzB0B,EAAe,IAAaC,KAClC,MAAMC,UAA0B,cAC5BC,cACIC,SAASC,WACTC,KAAKC,aAAe,CAAC,EACrBD,KAAKE,MAAQC,OAAOC,OAAO,CAAC,EAAGJ,KAAKC,aACxC,CACAI,SACI,MAAM,SAAEC,EAAQ,QAAEnD,EAAO,wBAAEoD,EAAuB,mBAAEC,EAAkB,kBAAEC,EAAiB,UAAEC,EAAS,eAAEC,EAAc,OAAEC,EAAM,KAAEC,GAAUb,KAAKc,MACvIC,EAAcH,IAAWD,GAAkBD,GAAaA,EAAUM,MAAQN,EAAUM,KAAKC,MAAQ,EACvG,IAAIC,EAAO,kBAAoB,IAAiB,MAC5CC,EAAoB,kBAAoB,IAAiB,MACzDC,EAAqB,kBAAoB,IAAiB,MAC9D,GAAIR,GAAUA,EAAOI,MAAQJ,EAAOI,KAAKK,MAAO,CAC5C,MAAMC,EAAUV,EAAOI,KAAKK,MAAMH,MAAQN,EAAOI,KAAKK,MAAMH,KAAKG,MAC3DE,EAAuBX,EAAOI,KAAKK,MAAMG,eAAiBZ,EAAOI,KAAKK,MAAMG,cAAcH,MAC1FI,EAAwBb,EAAOI,KAAKK,MAAMK,gBAAkBd,EAAOI,KAAKK,MAAMK,eAAeL,MACnGH,GAAO,EAAAS,EAAA,IAAeL,EAAUV,EAAOI,KAAKK,MAAMH,KAAKG,MAAMrD,MAAQ,EAAGsD,EAAUV,EAAOI,KAAKK,MAAMH,KAAKG,MAAMO,MAAQ,OACvHT,GAAoB,EAAAQ,EAAA,IAAeJ,EAAuBX,EAAOI,KAAKK,MAAMG,cAAcH,MAAMrD,MAAQ,EAAGuD,EAAuBX,EAAOI,KAAKK,MAAMG,cAAcH,MAAMO,MAAQ,OAChLR,GAAqB,EAAAO,EAAA,IAAeF,EAAwBb,EAAOI,KAAKK,MAAMK,eAAeL,MAAMrD,MAAQ,EAAGyD,EAAwBb,EAAOI,KAAKK,MAAMK,eAAeL,MAAMO,MAAQ,MACzL,CACA,OAAQ,kBAAoB,SAAU,CAAEC,MAAOtE,EAAOc,QAClD,kBAAoB,MAAO,CAAEwD,MAAOtE,EAAOkB,eACvC,kBAAoB,EAAAqD,MAAO,CAAEC,aAAc,KAAMF,MAAOtE,EAAO8B,MAAO2C,KAAM,EAAAC,WAAW,QAAUpB,EAAKqB,cAAcC,EAAA,EAASC,mBAC7H,kBAAoB,MAAO,CAAEP,MAAOtE,EAAOuB,oBACvC,kBAAoB,IAAU,CAAEwB,SAAUA,EAAU+B,SAAU7B,IAC9DD,GAA2B,kBAAoB,KAAa,QACpE,kBAAoB,MAAO,CAAEsB,MAAOtE,EAAOkB,eACvC,kBAAoB,MAAO,CAAEoD,MAAOtE,EAAOqB,mBACvC,kBAAoB,IAAS,CAAE1B,mBAAoBA,EAAoBC,QAASA,EAASmF,YAAavB,EAAawB,WAAY9B,EAAmB+B,QAAShD,EAAgBiD,UAAU,EAAM/C,aAAcA,KAC7MqB,GAAgB,kBAAoB,MAAO,KACvC,kBAAoB,EAAA2B,QAAS,CAAEC,QAAS9B,EAAKqB,cAAcC,EAAA,EAASS,0BAA2B,CACvFxB,qBACAD,sBACA0B,YAAY,GAChB,kBAAoB,EAAAf,MAAO,CAAEC,aAAc,KAAMF,MAAOtE,EAAOC,UAAWwE,KAAM,EAAAC,WAAW,QAAUf,IACzG,kBAAoB,MAAO,CAAEW,MAAOtE,EAAOY,YAAa,aACxE,EAGJ,MAAM2E,GAAkB,SAAsB,CAAC5C,EAAOY,KAClD,MAAMiC,GAAuB,OAAkB,MACzCrC,EAAY,qBAAmCR,EAAO,IAAa8C,IAAKD,GACxEpC,EAAiB,0BAAwCT,EAAO,IAAa8C,IAAKD,GAClFE,EAAuB,gCAA8C/C,EAAO,IAAa8C,IAAKD,GACpG,MAAO,CACHxC,wBAAyB2C,EAAA,iCAAoDhD,GAC7EQ,WAAW,QAAgBA,EAAW,IAAaf,MACnDgB,iBACAsC,uBACAF,uBACH,IAECI,GAAgB,EAAAC,EAAA,KAAW,IAAAC,SAAQP,EAAiB,CAAC,EAA1B,CAA6BlD,I,sFC/CvD,MAAM0D,GACO,iBADPA,GAEO,iBAFPA,GAGM,gBAEbC,GAAkB,IAAgB5D,KACxC,MAAM6D,WAAyB,cAC3B3D,cACIC,SAASC,WACTC,KAAKE,MAAQ,CACTuD,QAAS,GACTC,KAAM,IAEV1D,KAAK2D,UAAY,KACb,MAAM,QAAExG,EAAO,cAAEyG,EAAa,cAAEC,EAAa,KAAEhD,EAAI,cAAEiD,EAAa,OAAElD,EAAM,OAAEmD,EAAM,cAAEC,GAAkBhE,KAAKc,MAC3G,IAAKF,EACD,OAEJ,MAAMqD,EAAiC,YAAZ9G,EACrBuG,EAAO,GACPQ,GAAgB,OAA+B,CACjDtD,SACAuD,MAAQP,GAAgCzG,IAEtCsG,EAAUG,EACV,CAEE,CACIQ,KAAM,IAEV,CACIA,KAAMvD,EAAKqB,cAAcC,EAAA,EAASkC,UAClCxC,MAAmB,YAAZ1E,EAAwB,KAAOmH,gBAAaC,GAEvD,CACIC,QAASP,EACTG,KAAM,IAEV,CACIA,KAAMvD,EAAKqB,cAAcC,EAAA,EAASsC,uBAEtC,CACIC,GAAIpB,GACJc,KAAMvD,EAAKqB,cAAcC,EAAA,EAASwC,+BAClC9C,MAAO,KAAO+C,eAElB,CACIF,GAAIpB,GACJc,KAAMvD,EAAKqB,cAAcC,EAAA,EAAS0C,8BAClChD,MAAO,KAAO+C,eAElBzE,OAAOC,OAAO,CAAE0E,QAAS,OAAQV,KAAMvD,EAAKqB,cAAcC,EAAA,EAASjB,MAAOW,MAAO,KAAOkD,YAAeb,EAAcc,QAAU,CAAEC,YAAY,IAC7I,CACIb,KAAM,KAGZ,CACE,CACIA,KAAM,IAEVjE,OAAOC,OAAOD,OAAOC,OAAO,CAAE0E,QAAS3H,EAASiH,KAAMvD,EAAKqB,cAAcC,EAAA,EAAS+C,qBAAsB,CAAElH,MAAOb,KAAe+G,EAAcc,QAAU,CAAEC,YAAY,IAAU,CAAEpD,MAAmB,YAAZ1E,EAAwB,KAAOmH,gBAAaC,IACrO,CACIC,QAASP,EACTG,KAAM,IAEV,CACIM,GAAIpB,GACJc,KAAMvD,EAAKqB,cAAcC,EAAA,EAASsC,uBAEtC,CACIC,GAAIpB,GACJwB,QAAS,sBACTV,KAAMvD,EAAKqB,cAAcC,EAAA,EAASwC,+BAClC9C,MAAO,KAAO+C,eAIlB,CACIF,GAAIpB,GACJwB,QAAS,qBACTV,KAAMvD,EAAKqB,cAAcC,EAAA,EAAS0C,8BAClChD,MAAO,KAAO+C,eAIlBzE,OAAOC,OAAO,CAAE0E,QAAS,OAAQV,KAAMvD,EAAKqB,cAAcC,EAAA,EAASjB,MAAOW,MAAO,KAAOkD,YAAeb,EAAcc,QAAU,CAAEC,YAAY,IAC7I,CACIb,KAAM,KAGlBF,EAAciB,KAAI,CAACC,EAAMC,KACrB,MAAMnE,EAAOlB,KAAKsF,aAAaF,EAAMC,GAC/B5F,EAAQ2F,GAAuB,OAAfA,EAAK3F,MAAiB2F,EAAK3F,MAAQ,GACnD8F,EAAiBvF,KAAKwF,sBAAsBJ,EAAMC,GAClDlE,EAAoBnB,KAAKyF,qBAAqBL,EAAMC,GACpDK,EAAqB1F,KAAK2F,sBAAsBP,EAAMC,GACtDO,EAAOR,EAAKV,IAAMU,EAAKV,KAAOU,EAAK3F,MAAQ,kBAAoB,MAAO,CAAEoC,MAAO,KAAOgE,iBAAmBT,EAAKV,IAAM,KACpHpC,EAAa7C,IAAU,GAAG,OAAWtC,KAAasC,IAAU,GAAG,OAAWmE,IAC1EkC,EAAU9F,KAAK+F,WAAWX,EAAM9C,GAChC8B,EAAO9B,EAAa7C,EAAS,kBAAoB,EAAAuG,KAAM,CAAEC,IAAI,QAAiB,CAC5EC,UAAU,SAAWC,EAAA,EAAOC,qBAAqBC,MACjDC,YAAalB,EAAKV,GAClBvH,UACAuH,GAAIU,EAAKV,GACTX,SACA1E,MAAOI,EAAM8G,cACX9G,GACViE,EAAK8C,KAAK,CACNC,MAAO,CACH,CAAC,EACD,CACIzI,MAAQ,kBAAoB,aAAgB,KACxC,kBAAoB,MAAO,KAAMoG,GACjC,kBAAoB,MAAO,CAAEvC,MAAO,KAAOgE,iBAAmBD,KAEtE,CACIpB,QAASP,EACTjG,MAAOoH,EAAKsB,gBAAmB,kBAAoB,MAAO,KACtD,kBAAoB,EAAAC,MAAO,CAAEC,QAAS,UAAW3I,MAAO,SAAW4C,EAAKqB,cAAcC,EAAA,aAAwB,kBAAoB,MAAO,CAAEN,MAAO,KAAOgF,gBAEjK,CAAE7I,MAAO,kBAAoB,MAAO,KAAMuH,GAAiBb,GAAIpB,IAC/D,CACItF,MAAO,kBAAoB,MAAO,KAAM0H,GACxChB,GAAIpB,GACJzB,MAAO,KAAO+C,eAElB,CACI5G,MAAO,kBAAoB,MAAO,KAAMmD,GACxCuD,GAAIpB,GACJzB,MAAO,KAAO+C,eAElB,CAAE5G,MAAO,kBAAoB,MAAO,KAAMkD,GAAOW,MAAO,KAAO+C,eAC/D,CAAE5G,MAAO,kBAAoB,MAAO,KAAM8H,KAE9CV,OACA0B,SAAUhD,GAAkBE,QAAmEO,IAAlDP,EAAc+C,MAAKC,GAAOA,EAAItC,KAAOU,EAAKV,KACvFuC,kBAAmB3E,GACrB,IAEN,MAAM4E,EAAkBzD,EAAQ0D,QAAOC,IAAWvD,EAAcwD,IAAID,EAAO1C,MAAQ0C,EAAO5C,SACpF8C,EAAe5D,EAAKyB,KAAKoC,IAC3B,IAAIC,EA5KkB,SAAUC,EAAGC,GAC/C,IAAIC,EAAI,CAAC,EACT,IAAK,IAAIC,KAAKH,EAAOtH,OAAO0H,UAAUC,eAAeC,KAAKN,EAAGG,IAAMF,EAAEM,QAAQJ,GAAK,IAC9ED,EAAEC,GAAKH,EAAEG,IACb,GAAS,MAALH,GAAqD,mBAAjCtH,OAAO8H,sBACtB,KAAIC,EAAI,EAAb,IAAgBN,EAAIzH,OAAO8H,sBAAsBR,GAAIS,EAAIN,EAAE5C,OAAQkD,IAC3DR,EAAEM,QAAQJ,EAAEM,IAAM,GAAK/H,OAAO0H,UAAUM,qBAAqBJ,KAAKN,EAAGG,EAAEM,MACvEP,EAAEC,EAAEM,IAAMT,EAAEG,EAAEM,IAF4B,CAItD,OAAOP,CACX,CAkK0BS,CAAOb,EAAI,IAErB,OADAC,EAAIf,MAAQe,EAAIf,MAAMU,QAAOkB,IAASxE,EAAcwD,IAAIgB,EAAK3D,MAAQ2D,EAAK7D,SACnEgD,CAAG,IAEdxH,KAAKsI,SAAS,CACV7E,QAASyD,EACTxD,KAAM4D,GACR,EAENtH,KAAK+F,WAAa,CAACX,EAAM9C,KACrB,MAAM,QAAEnF,EAAO,kBAAEoL,GAAsBvI,KAAKc,MAC5C,OAAQ,kBAAoB,KAAS,CAAE3D,QAASA,EAASmF,WAAYA,EAAY8C,KAAMA,EAAMoD,aAAc,IAAa7I,KAAM4D,gBAAiBA,GAAiBgF,kBAAmBA,EAAmBE,oBAAiC,YAAZtL,GAAyB,EAExP6C,KAAKyF,qBAAuB,CAACL,EAAMC,KAC/B,MAAM,OAAEzE,EAAM,KAAEC,GAASb,KAAKc,MACxBI,EAAON,GAAUA,EAAOI,MAAQJ,EAAOI,KAAKK,OAAST,EAAOI,KAAKK,MAAMH,MAAQN,EAAOI,KAAKK,MAAMH,KAAKG,MACtGT,EAAOI,KAAKK,MAAMH,KAAKG,MAAMrD,MAC7B,EACA0K,EAAwB,IAATxH,EAAaA,EAAKyH,QAAQ,IAAOvD,EAAK5D,cAAcH,MAAMrD,MAAQkD,EAAQ,KAAKyH,QAAQ,GAC5G,OAAQ,kBAAoB,aAAgB,MACxC,EAAAhH,EAAA,IAAeyD,EAAK5D,cAAcH,MAAMrD,MAAOoH,EAAK5D,cAAcH,MAAMO,OACxE,kBAAoB,MAAO,CAAEC,MAAO,KAAOgE,gBAAiB+C,IAAK,cAAcvD,KAAWxE,EAAKqB,cAAcC,EAAA,EAAS0G,cAAe,CAAE7K,MAAO0K,KAAkB,EAExK1I,KAAK2F,sBAAwB,CAACP,EAAMC,KAChC,MAAM,OAAEzE,EAAM,KAAEC,GAASb,KAAKc,MACxBI,EAAON,GAAUA,EAAOI,MAAQJ,EAAOI,KAAKK,OAAST,EAAOI,KAAKK,MAAMH,MAAQN,EAAOI,KAAKK,MAAMH,KAAKG,MACtGT,EAAOI,KAAKK,MAAMH,KAAKG,MAAMrD,MAC7B,EACA0K,EAAwB,IAATxH,EAAaA,EAAKyH,QAAQ,IAAOvD,EAAK1D,eAAeL,MAAMrD,MAAQkD,EAAQ,KAAKyH,QAAQ,GAC7G,OAAQ,kBAAoB,aAAgB,MACxC,EAAAhH,EAAA,IAAeyD,EAAK1D,eAAeL,MAAMrD,MAAOoH,EAAK1D,eAAeL,MAAMO,OAC1E,kBAAoB,MAAO,CAAEC,MAAO,KAAOgE,gBAAiB+C,IAAK,cAAcvD,KAAWxE,EAAKqB,cAAcC,EAAA,EAAS0G,cAAe,CAAE7K,MAAO0K,KAAkB,EAExK1I,KAAKwF,sBAAwB,CAACJ,EAAMC,KAChC,MAAM,KAAExE,GAASb,KAAKc,MAChB9C,GAAQ,EAAA2D,EAAA,IAAemH,KAAKC,IAAI3D,EAAKlE,KAAKG,MAAMrD,MAAQoH,EAAK4D,aAAc5D,EAAKlE,KAAKG,MAAMO,OAC3FqH,EAAoC,OAAvB7D,EAAK8D,eAAyB,EAAAvH,EAAA,IAAiBmH,KAAKC,IAAI3D,EAAK8D,gBAAkB,EAC5FC,IAAkC,IAAfF,GAAmC,SAAfA,GACvCG,EAAmC,OAAvBhE,EAAK8D,cACvB,IAAIG,EAUJ,OATIF,IACAE,EAAe,eACY,OAAvBjE,EAAK8D,eAA0B9D,EAAK4D,YAAc,IAClDK,GAAgB,aAEO,OAAvBjE,EAAK8D,eAA0B9D,EAAK4D,YAAc,IAClDK,GAAgB,cAGnBD,EAIO,kBAAoB,MAAO,CAAEE,UAAW,0BAC5C,kBAAoB,MAAO,CAAEA,UAAWD,EAAcT,IAAK,yBAAyBvD,KAChF8D,EAAiBtI,EAAKqB,cAAcC,EAAA,EAASoH,QAAS,CAAEvL,MAAOiL,IAAgB,kBAAoB,IAAiB,MACpHE,GAAyC,OAAvB/D,EAAK8D,eAA0B9D,EAAK4D,YAAc,GAAM,kBAAoB,OAAQ,CAAEM,UAAW,gBAAiBzH,MAAO,KAAO2H,UAAWZ,IAAK,yBAAyBvD,MAC3L8D,GAAyC,OAAvB/D,EAAK8D,eAA0B9D,EAAK4D,YAAc,GAAM,kBAAoB,OAAQ,CAAEM,UAAW,kBAAmBzH,MAAO1B,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG,KAAOqJ,aAAc,KAAOC,eAAgBd,IAAK,yBAAyBvD,OAC3P,kBAAoB,MAAO,CAAExD,MAAO,KAAOgE,gBAAiB+C,IAAK,yBAAyBvD,MAAW,OAAsBrH,MARxH,SASX,EAEJgC,KAAKsF,aAAe,CAACF,EAAMC,KACvB,MAAM,OAAEzE,EAAM,KAAEC,GAASb,KAAKc,MACxBI,EAAON,GAAUA,EAAOI,MAAQJ,EAAOI,KAAKK,OAAST,EAAOI,KAAKK,MAAMH,MAAQN,EAAOI,KAAKK,MAAMH,KAAKG,MACtGT,EAAOI,KAAKK,MAAMH,KAAKG,MAAMrD,MAC7B,EACA0K,EAAwB,IAATxH,EAAaA,EAAKyH,QAAQ,IAAOvD,EAAKlE,KAAKG,MAAMrD,MAAQkD,EAAQ,KAAKyH,QAAQ,GACnG,OAAQ,kBAAoB,aAAgB,MACxC,EAAAhH,EAAA,IAAeyD,EAAKlE,KAAKG,MAAMrD,MAAOoH,EAAKlE,KAAKG,MAAMO,OACtD,kBAAoB,MAAO,CAAEC,MAAO,KAAOgE,gBAAiB+C,IAAK,cAAcvD,KAAWxE,EAAKqB,cAAcC,EAAA,EAAS0G,cAAe,CAAE7K,MAAO0K,KAAkB,CAE5K,CACAiB,oBACI3J,KAAK2D,WACT,CACAiG,mBAAmBC,GACf,MAAM,cAAEhG,EAAa,OAAEjD,EAAM,cAAEoD,GAAkBhE,KAAKc,MAChDgJ,EAAgBlJ,GAAUA,EAAOmJ,KAAOC,KAAKC,UAAUrJ,EAAOmJ,MAAQ,IACrDF,EAAUjJ,QAAUiJ,EAAUjJ,OAAOmJ,KAAOC,KAAKC,UAAUJ,EAAUjJ,OAAOmJ,MAAQ,MACpFD,GACnBD,EAAU7F,gBAAkBA,GAC5B6F,EAAUhG,gBAAkBA,GAC5B7D,KAAK2D,WAEb,CACAtD,SACI,MAAM,SAAE6J,EAAQ,UAAEC,EAAS,WAAE5H,EAAU,OAAE6H,EAAM,QAAEtF,EAAO,cAAEd,GAAkBhE,KAAKc,OAC3E,QAAE2C,EAAO,KAAEC,GAAS1D,KAAKE,MAC/B,OAAQ,kBAAoB,KAAW,CAAEuD,QAASA,EAASyG,SAAUA,EAAUG,eAAe,EAAMF,UAAWA,EAAW5H,WAAYA,EAAY6H,OAAQA,EAAQtF,QAASA,EAASpB,KAAMA,EAAMM,cAAeA,GACnN,EAEJ,MAAMsG,IAAe,EAAAlH,EAAA,KAAW,OAAWI,K,gEC3P3C,MAAM+G,GAAU,IAAQC,IAClB,GAAe,IAAaC,IAC3B,MAAMC,WAA2B,cACpC7K,cACIC,SAASC,WACTC,KAAKC,aAAe,CAAC,EACrBD,KAAKE,MAAQC,OAAOC,OAAO,CAAC,EAAGJ,KAAKC,cACpCD,KAAK2K,mBAAqB,KACtB,MAAM,KAAE9J,EAAI,UAAE+J,GAAc5K,KAAKc,MAC3B0B,EAAU,CACZ,CAAE4B,KAAMvD,EAAKqB,cAAcC,EAAA,EAAS0I,eAAgB,CAAE7M,MAAO,YAAc4K,IAAK,WAChF,CAAExE,KAAMvD,EAAKqB,cAAcC,EAAA,EAAS0I,eAAgB,CAAE7M,MAAO,SAAW4K,IAAK,QAC7E,CAAExE,KAAMvD,EAAKqB,cAAcC,EAAA,EAAS0I,eAAgB,CAAE7M,MAAO,YAAc4K,IAAK,YAQpF,OANIgC,GAAaA,EAAUb,MAAQa,EAAUb,KAAK/E,QAC9CxC,EAAQgE,KAAK,CACTpC,KAAMvD,EAAKqB,cAAcC,EAAA,EAAS0I,eAAgB,CAAE7M,MAAO,OAC3D4K,IAAK,OAGNpG,CAAO,EAElBxC,KAAK8K,aAAe,KAChB,MAAM,SAAEC,EAAQ,eAAEC,GAAmBhL,KAAKc,MAC1CiK,EAAS,GAAcR,GAASS,EAAe,CAEvD,CACArB,oBACI3J,KAAKsI,SAAS,CACV2C,gBAAiBjL,KAAK2K,uBACvB,KACC3K,KAAK8K,cAAc,GAE3B,CACAlB,mBAAmBC,GACf,MAAM,MAAEqB,EAAK,UAAEN,GAAc5K,KAAKc,OAC7B,QAAQ8J,EAAWf,EAAUe,WAOzBM,KAAU,QAAQA,EAAOrB,EAAUqB,QACxClL,KAAK8K,eAPL9K,KAAKsI,SAAS,CACV2C,gBAAiBjL,KAAK2K,uBACvB,KACC3K,KAAK8K,cAAc,GAM/B,CACAzK,SACI,MAAM,QAAElD,EAAO,cAAE2G,EAAa,WAAExB,EAAU,iBAAE6I,EAAgB,aAAEC,EAAY,WAAEC,EAAU,eAAEC,EAAc,0BAAEC,EAAyB,gBAAEC,EAAe,cAAEC,EAAa,gBAAEC,EAAe,WAAEC,EAAU,MAAET,EAAK,cAAElH,EAAa,UAAE4G,GAAe5K,KAAKc,OACpO,gBAAEmK,GAAoBjL,KAAKE,MACjC,OAAQ,kBAAoB,KAAa,CAAE+K,gBAAiBA,EAAiB9N,QAASA,EAAS2G,cAAeA,EAAexB,WAAYA,EAAY6I,iBAAkBA,EAAkBC,aAAcA,EAAcC,WAAYA,EAAYC,eAAgBA,EAAgBC,0BAA2BA,EAA2BC,gBAAiBA,EAAiBC,cAAeA,EAAeC,gBAAiBA,EAAiBC,WAAYA,EAAYT,MAAOA,EAAOU,kBAAmB,KAAkBnB,IAAKzG,cAAeA,EAAe6H,gBAAgB,EAAMC,sBAAsB,EAAMC,cAAc,EAAMC,YAAY,EAAMC,YAAY,EAAMrB,UAAWA,EAAWlL,aAAc,IACrqB,EAGJ,MAAM,IAAkB,SAAsB,CAACQ,EAAOY,KAGlD,MAAMkK,GAAiB,SAAS,CAC5B7D,OAAQ,CACJ+E,WAAY,UACZC,iBAAkB,QAClBC,kBAAmB,GAEvBC,UAAU,EACVC,MAAO,MAIX,MAAO,CACH1B,UAHc,gBAAuB1K,EAAO,GAAcqK,GAASS,GAInEuB,qBAHyB,2BAAkCrM,EAAO,GAAcqK,GAASS,GAIzFA,iBACH,IAECwB,GAAqB,CACvBzB,SAAU,UAER0B,IAAwB,IAAApJ,SAAQ,GAAiBmJ,GAAzB,CAA6C9B,IACrEgC,IAAiB,EAAAtJ,EAAA,IAAWqJ,I,gBCvF3B,MAAM,GAAS,CAClB9J,QAAS,CACLrD,cAAe5B,EAAA,GAAiBM,MAChC2O,WAAYjP,EAAA,GAAiBM,OAEjC4O,WAAY,CACR/N,UAAW,QAEfgO,oBAAqB,CACjBC,WAAYpP,EAAA,GAAiBM,MAC7B+O,YAAarP,EAAA,GAAiBM,OAElC2N,WAAY,CACRrN,gBAAiBC,EAAA,GAAiCP,MAClDsB,cAAe0N,GAAA,GAAiBhP,MAChC2O,WAAYK,GAAA,GAAiBhP,OAEjCiP,eAAgB,CACZH,WAAYpP,EAAA,GAAiBM,MAC7B+O,YAAarP,EAAA,GAAiBM,OAElCkP,iBAAkB,CACdJ,WAAYpP,EAAA,GAAiBM,MAC7B+O,YAAarP,EAAA,GAAiBM,QCMhCmP,GAAY,CACdhG,OAAQ,CACJmF,MAAO,GACPc,OAAQ,GAEZC,QAAS,CAAC,EACVC,UAAW,CAAC,EACZC,SAAU,CACNnQ,QAAS,KAEboQ,SAAU,CACNtM,KAAM,SAGRuM,GAAuB,CACzB,CAAEhO,MAAO0C,EAAA,EAASsC,qBAAsBzG,MAAOsF,IAC/C,CACIgD,YAAanE,EAAA,EAASuL,iCACtBjO,MAAO0C,EAAA,EAASwL,6BAChB3P,MAAOsF,GACPkB,QAAQ,GAEZ,CACI8B,YAAanE,EAAA,EAASyL,gCACtBnO,MAAO0C,EAAA,EAAS0L,4BAChB7P,MAAOsF,GACPkB,QAAQ,IAGVsJ,GAAa,IAAW5M,KACxB,GAAkB,IAAgBuJ,IACxC,MAAMsD,WAAoB,cACtBlO,YAAYmO,EAAYC,GACpBnO,MAAMkO,EAAYC,GAClBjO,KAAKC,aAAe,CAChBwD,QAAS,GACTI,eAAe,OAAkB4J,IACjC3J,eAAe,EACfoK,6BAA6B,EAC7BC,mBAAmB,EACnBzK,KAAM,GACNM,cAAe,IAEnBhE,KAAKE,MAAQC,OAAOC,OAAO,CAAC,EAAGJ,KAAKC,cACpCD,KAAKoO,yBAA2B,KAC5B,MAAM,cAAEvK,EAAa,4BAAEqK,GAAgClO,KAAKE,MACtDsC,GAAU,IAAA6L,WAAUZ,IAI1B,OAHAjL,EAAQ2C,KAAImJ,IACRA,EAAO9J,OAASX,EAAcwD,IAAIiH,EAAOtQ,MAAM,IAE3C,kBAAoB,IAAuB,CAAEuQ,OAAQL,EAA6B1L,QAASA,EAASgM,QAASxO,KAAKyO,iCAAkCC,OAAQ1O,KAAK2O,iCAAmC,EAEhN3O,KAAK4O,iBAAmB,KACpB,MAAM,MAAE1D,EAAK,OAAEtK,GAAWZ,KAAKc,MACzB+N,EAAY3R,EAAmBgO,EAAMqC,UACrC3J,GAAgB,QAAiBsH,GACvC,OAAO,OAA+B,CAClCtK,SACAuD,MAAOP,GAAiBiL,GAC1B,EAEN7O,KAAK8O,eAAkB5K,IACnB,MAAM,MAAEgH,EAAK,OAAEtK,EAAM,kBAAE2H,GAAsBvI,KAAKc,OAC5C,cAAEgD,EAAa,kBAAEqK,EAAiB,cAAEnK,GAAkBhE,KAAKE,MAC3D2O,EAAY3R,EAAmBgO,EAAMqC,UACrC3J,GAAgB,QAAiBsH,GACjCG,EAAazK,GAAUA,EAAOI,KAAOJ,EAAOI,KAAKC,MAAQ,EAEzD8N,EAAQ,GAMd,OALA/K,EAAcmB,KAAIC,IACRA,EAAK3F,QAAU,GAAG,OAAWoP,KAAezJ,EAAK3F,QAAU,GAAG,OAAWmE,KAC3EmL,EAAMvI,KAAKpB,EACf,IAEI,kBAAoB,IAAa,CAAEnE,MAAO6C,EAAgBuH,EAAa0D,EAAM/J,OAAQgK,YAAalL,GAAiBE,EAAcgB,SAAWqG,IAAenH,EAAcc,OAAS,EAAG7H,QAASyG,EAAgB,GAAG,MAAYA,IAAkBiL,EAAWN,OAAQJ,EAAmBY,MAAOA,EAAOP,QAASxO,KAAKiP,uBAAwB1L,gBAAiB,GAAiBgF,kBAAmBA,GAAqB,EAE/ZvI,KAAKkP,cAAgB,CAAC5M,GAAa,EAAO6M,GAAW,KACjD,MAAM,KAAEtO,EAAI,MAAEqK,EAAK,OAAEtK,EAAM,OAAEmD,GAAW/D,KAAKc,MACvCG,EAAQL,GAAUA,EAAOI,KAAOJ,EAAOI,KAAKC,MAAQ,EACpDqL,EAAQ1L,GAAUA,EAAOI,MAAQJ,EAAOI,KAAKmG,QAAUvG,EAAOI,KAAKmG,OAAOmF,MAC1E1L,EAAOI,KAAKmG,OAAOmF,MACnBa,GAAUhG,OAAOmF,MACjBc,EAASxM,GAAUA,EAAOI,MAAQJ,EAAOI,KAAKmG,QAAUvG,EAAOI,KAAKmG,OAAOiG,OAC3ExM,EAAOI,KAAKmG,OAAOiG,OACnBD,GAAUhG,OAAOiG,OACjBgC,EAAOtG,KAAKuG,MAAMjC,EAASd,EAAQ,GACzC,OAAQ,kBAAoB,EAAAgD,WAAY,CAAEC,WAAYJ,EAAU7M,WAAYA,EAAYkN,UAAWvO,EAAOwO,gBAAiB,CAACC,EAAOC,KAAY,QAAsBzE,EAAOnH,EAAQ4L,GAAUC,UAAW,CAACF,EAAOG,KAAe,QAAgB3E,EAAOnH,EAAQnD,EAAQiP,GAAaT,KAAMA,EAAMO,QAASrD,EAAOwD,OAAQ,CAChTC,gBAAiBlP,EAAKqB,cAAcC,EAAA,EAAS4N,gBAAiB,CAC1D1Q,MAAOwB,EAAKqB,cAAcC,EAAA,EAAS6N,WACnCC,UAAWd,EAAW,SAAW,SAEtCvI,QAASuI,EAAW,EAAAe,kBAAkBC,OAAS,EAAAD,kBAAkBE,IAAKC,SAAU,sBAAqBlB,EAAW,UAAY,KAAQ,EAE/InP,KAAKsQ,SAAW,KACZ,MAAM,MAAEpF,EAAK,OAAEtK,EAAM,kBAAE2P,EAAiB,kBAAEhI,EAAiB,OAAExE,GAAW/D,KAAKc,OACvE,cAAE+C,EAAa,cAAEC,EAAa,cAAEE,GAAkBhE,KAAKE,MACvD2O,EAAY3R,EAAmBgO,EAAMqC,UACrC3J,GAAgB,QAAiBsH,GACvC,OAAQ,kBAAoBZ,GAAc,CAAEnN,QAASyG,EAAgB,GAAG,MAAYA,IAAkBiL,EAAWjL,cAAeA,EAAeC,cAAeA,EAAeC,cAAeA,EAAeqG,UAAWoG,IAAsB,KAAYC,WAAYjO,WAAYvC,KAAKyQ,eAAgBrG,OAAQ,CAACsG,EAAUC,KAAoB,QAAazF,EAAOnH,EAAQ2M,EAAUC,GAAkB7L,QAASoG,EAAMsC,SAAU5M,OAAQA,EAAQ2H,kBAAmBA,EAAmBvE,cAAeA,GAAiB,EAEvfhE,KAAK4Q,WAAc1M,IACf,MAAM,MAAEgH,EAAK,OAAEtK,EAAM,OAAEmD,GAAW/D,KAAKc,OACjC,cAAEgD,EAAa,cAAEE,GAAkBhE,KAAKE,MACxC2O,EAAY3R,EAAmBgO,EAAMqC,UACrC3J,GAAgB,QAAiBsH,GACjC5I,EAAsC,IAAzB4B,EAAcc,OAC3BqG,EAAazK,GAAUA,EAAOI,KAAOJ,EAAOI,KAAKC,MAAQ,EAC/D,OAAQ,kBAAoByL,GAAgB,CAAEvP,QAASyG,EAAgB,GAAG,MAAYA,IAAkBiL,EAAW/K,cAAeA,EAAexB,WAAYA,EAAY6I,iBAAkB7I,IAAgBwB,GAA0C,IAAzBE,EAAcgB,OAAeoG,aAAclH,EAAcc,OAAQqG,WAAYA,EAAYC,eAAgBtL,KAAK6Q,mBAAoBtF,0BAA2BvL,KAAK8Q,gCAAiCtF,gBAAiBxL,KAAK+Q,sBAAuBtF,cAAetE,IAAU,QAAoB+D,EAAOnH,EAAQoD,GAASuE,gBAAiBvE,IAAU,QAAsB+D,EAAOnH,EAAQoD,GAASwE,WAAY3L,KAAKkP,gBAAiBhE,MAAOA,EAAOlH,cAAeA,GAAiB,EAE9qBhE,KAAK6Q,mBAAsBG,IACvB,MAAM,cAAElN,GAAkB9D,KAAKE,MAChB,SAAX8Q,EACAhR,KAAKsI,SAAS,CAAExE,eAAe,EAAOE,cAAe,KAErC,SAAXgN,EACLhR,KAAKsI,SAAS,CACVxE,eAAe,EACfE,cAAehE,KAAK4O,qBAGR,QAAXoC,GACLhR,KAAKsI,SAAS,CAAExE,eAAgBA,EAAeE,cAAe,IAClE,EAEJhE,KAAKyO,iCAAoCF,IACrCvO,KAAKsI,SAAS,CAAE4F,4BAA6BK,GAAS,EAE1DvO,KAAK8Q,gCAAkC,KACnC9Q,KAAKsI,SAAS,CAAE4F,6BAA6B,GAAO,EAExDlO,KAAK2O,gCAAmC9K,IACpC7D,KAAKsI,SAAS,CAAEzE,iBAAgB,EAEpC7D,KAAKiP,uBAA0BV,IAC3BvO,KAAKsI,SAAS,CAAE6F,kBAAmBI,GAAS,EAEhDvO,KAAK+Q,sBAAwB,KACzB/Q,KAAKsI,SAAS,CAAE6F,mBAAmB,GAAO,EAE9CnO,KAAKiR,sBAAwB9T,IACzB,MAAM,MAAE+N,EAAK,OAAEnH,GAAW/D,KAAKc,MACzBoQ,EAAa/T,EACbgU,EAAWhR,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG4J,KAAKoH,MAAMpH,KAAKC,UAAUiB,KAAU,CAEjFqC,SAAU,CACN,CAAC2D,GAAa,KACf1D,cAAUjJ,EAAW8M,cAAU9M,IACtCvE,KAAKsI,SAAS,CAAExE,eAAe,EAAOE,cAAe,KAAM,KACvDD,EAAOuN,UAAS,QAAiBH,EAAUpN,EAAOwN,UAAU,GAAO,CAAEC,SAAS,GAAO,GACvF,EAENxR,KAAKyQ,eAAiB,CAAC1B,EAAO0C,GAAa,KACvC,MAAM,cAAE3N,EAAa,cAAEE,GAAkBhE,KAAKE,MAC9C,IAAIwR,EAAW,IAAK5N,EAAgB9D,KAAK4O,mBAAqB5K,GAC1D+K,GAASA,EAAM/J,OAAS,IACpByM,EACA1C,EAAM5J,KAAIC,GAAQsM,EAASlL,KAAKpB,KAGhC2J,EAAM5J,KAAIC,IACNsM,EAAWA,EAASvK,QAAOH,GAAOA,EAAItC,KAAOU,EAAKV,IAAG,KAIjE1E,KAAKsI,SAAS,CAAExE,eAAe,EAAOE,cAAe0N,GAAW,EAEpE1R,KAAK8K,aAAe,KAChB,MAAM,YAAE6G,EAAW,kBAAEpJ,GAAsBvI,KAAKc,MAChD6Q,EAAY,GAAiB7D,GAAYvF,EAAkB,EAE/DvI,KAAK6Q,mBAAqB7Q,KAAK6Q,mBAAmBe,KAAK5R,MACvDA,KAAKyO,iCAAmCzO,KAAKyO,iCAAiCmD,KAAK5R,MACnFA,KAAK8Q,gCAAkC9Q,KAAK8Q,gCAAgCc,KAAK5R,MACjFA,KAAK2O,gCAAkC3O,KAAK2O,gCAAgCiD,KAAK5R,MACjFA,KAAKiP,uBAAyBjP,KAAKiP,uBAAuB2C,KAAK5R,MAC/DA,KAAK+Q,sBAAwB/Q,KAAK+Q,sBAAsBa,KAAK5R,MAC7DA,KAAKyQ,eAAiBzQ,KAAKyQ,eAAemB,KAAK5R,KACnD,CACA2J,oBACI3J,KAAK8K,cACT,CACAlB,mBAAmBC,EAAWgI,GAC1B,MAAM,OAAEjR,EAAM,YAAEkR,EAAW,kBAAEvJ,EAAiB,OAAExE,GAAW/D,KAAKc,OAC1D,cAAEkD,GAAkBhE,KAAKE,MACzBiR,EAAWtH,EAAUtB,oBAAsBA,EAC3CwJ,GAAYnR,IAAWkR,EACvBE,GAAcjO,EAAOwN,SAASU,OAC9BP,EAAWG,EAAU7N,gBAAkBA,GACzCmN,GAAYY,GAAYC,GAAcN,IACtC1R,KAAK8K,cAEb,CACAzK,SACI,MAAM,SAAEC,EAAQ,KAAEO,EAAI,UAAEH,EAAS,qBAAEuC,EAAoB,MAAEiI,EAAK,OAAEtK,EAAM,YAAEkR,EAAW,kBAAEvB,EAAiB,OAAExM,GAAW/D,KAAKc,MAClHoD,EAAgBlE,KAAK4O,mBACrBC,EAAY3R,EAAmBgO,EAAMqC,UACrCjL,EAAsC,IAAzB4B,EAAcc,OAC3B3F,EAAQwB,EAAKqB,cAAcC,EAAA,EAAS+P,iBAE1C,GAAIJ,EACA,OAAO,kBAAoB,IAAc,CAAEzS,MAAOA,IAEjD,GAAI4D,IAAyB,KAAYuN,WAC1C,OAAO,kBAAoB,IAAS,CAAEnR,MAAOA,IAE5C,GAAI4D,IAAyB,KAAYkP,SAAU,CAGpD,GADoBzR,GAAaA,EAAUM,MAAiC,IAAzBN,EAAUM,KAAKC,MAE9D,OAAO,kBAAoB,IAAa,CAAEuH,aAAc,IAAaiC,IAAKpL,MAAOA,IAErF,KAAK,QAAoBqB,GACrB,OAAO,kBAAoB,IAAQ,CAAErB,MAAOA,GAEpD,CACA,OAAQ,kBAAoB,MAAO,CAAEwC,MAAO,GAAO+K,YAC/C,kBAAoBzJ,EAAe,CAAE7C,SAAUA,EAAUnD,QAAS0R,EAAWrO,mBAAoB,KAAM,QAAyB0K,EAAOnH,GAAStD,kBAAmBT,KAAKiR,sBAAuBrQ,OAAQA,IACvM,kBAAoB,MAAO,CAAEiB,MAAO,GAAOc,SACvC,kBAAoB,MAAO,CAAEd,MAAO,GAAOqL,kBAAoBlN,KAAK4Q,WAAW1M,IAC/ElE,KAAK8O,eAAe5K,GACpBlE,KAAKoO,2BACLmC,IAAsB,KAAYC,WAAc,kBAAoB,IAAS,MAAU,kBAAoB,aAAgB,KACvH,kBAAoB,MAAO,CAAE3O,MAAO,GAAOoL,gBAAkBjN,KAAKsQ,YAClE,kBAAoB,MAAO,CAAEzO,MAAO,GAAOgL,qBACvC,kBAAoB,MAAO,CAAEhL,MAAO,GAAO8J,YAAc3L,KAAKkP,cAAc5M,GAAY,OAC5G,EAGJ,MAAM,IAAkB,SAAsB,CAACpC,GAAS6D,aACpD,MAAMqO,GAAiB,QAAWrO,EAAOwN,SAASU,QAC5C3R,GAAW,UACX4K,EAAQ/K,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG+M,IAAYiF,GACpDC,EAAc,CAChB/R,WACAgS,MAAO,OACPjF,QAASnC,EAAMmC,QACflG,OAAQhH,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG8K,EAAM/D,QAAS,CAAE+E,WAAY,UAAWC,iBAAkB,QAASC,kBAAmB,IAC9HkB,UAAWpC,EAAMoC,UACjBC,SAAUrC,EAAMqC,SAChBC,SAAUtC,EAAMsC,UAEdjF,GAAoB,QAAS8J,GAC7BzR,EAAS,kBAA6BV,EAAO,GAAiB4N,GAAYvF,GAC1EuJ,EAAc,uBAAkC5R,EAAO,GAAiB4N,GAAYvF,GACpFgI,EAAoB,6BAAwCrQ,EAAO,GAAiB4N,GAAYvF,GAChGxF,GAAuB,OAAkB,MACzCrC,EAAY,qBAAmCR,EAAO,IAAa8C,IAAKD,GACxEE,EAAuB,gCAA8C/C,EAAO,IAAa8C,IAAKD,GACpG,MAAO,CACHzC,WACAI,WAAW,QAAgBA,EAAW,IAAa+J,KACnDxH,uBACAiI,QACAtK,SACAkR,cACAvB,oBACAhI,oBACH,IAEC,GAAqB,CACvBoJ,YAAa,kBAEjB,IAAe,EAAAvO,EAAA,KAAW,QAAW,IAAAC,SAAQ,GAAiB,GAAzB,CAA6C0K,K","sources":["webpack:///./src/routes/utils/computedReport/getComputedRhelReportItems.ts","webpack:///./src/routes/details/rhelDetails/detailsHeader.styles.ts","webpack:///./src/routes/details/rhelDetails/detailsHeader.tsx","webpack:///./src/routes/details/rhelDetails/detailsTable.tsx","webpack:///./src/routes/details/rhelDetails/detailsToolbar.tsx","webpack:///./src/routes/details/rhelDetails/rhelDetails.styles.ts","webpack:///./src/routes/details/rhelDetails/rhelDetails.tsx"],"sourcesContent":["export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costValue: {\n        marginTop: global_spacer_lg.var,\n        marginBottom: 0,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    dateTitle: {\n        textAlign: 'end',\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentLeft: {\n        display: 'flex',\n        minHeight: '90px',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    info: {\n        verticalAlign: 'middle',\n    },\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes, Tooltip } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { TagPathsType } from 'api/tags/tag';\nimport { ExportsLink } from 'components/drawers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Currency } from 'routes/components/currency';\nimport { GroupBy } from 'routes/components/groupBy';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { getIdKeyForGroupBy } from 'routes/utils/computedReport/getComputedRhelReportItems';\nimport { filterProviders } from 'routes/utils/providers';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { getSinceDateRangeString } from 'utils/dates';\nimport { formatCurrency } from 'utils/format';\nimport { styles } from './detailsHeader.styles';\nconst groupByOptions = [\n    { label: 'cluster', value: 'cluster' },\n    { label: 'node', value: 'node' },\n    { label: 'project', value: 'project' },\n];\nconst tagPathsType = TagPathsType.rhel;\nclass DetailsHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { currency, groupBy, isExportsFeatureEnabled, onCurrencySelected, onGroupBySelected, providers, providersError, report, intl, } = this.props;\n        const showContent = report && !providersError && providers && providers.meta && providers.meta.count > 0;\n        let cost = React.createElement(EmptyValueState, null);\n        let supplementaryCost = React.createElement(EmptyValueState, null);\n        let infrastructureCost = React.createElement(EmptyValueState, null);\n        if (report && report.meta && report.meta.total) {\n            const hasCost = report.meta.total.cost && report.meta.total.cost.total;\n            const hasSupplementaryCost = report.meta.total.supplementary && report.meta.total.supplementary.total;\n            const hasInfrastructureCost = report.meta.total.infrastructure && report.meta.total.infrastructure.total;\n            cost = formatCurrency(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD');\n            supplementaryCost = formatCurrency(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost ? report.meta.total.supplementary.total.units : 'USD');\n            infrastructureCost = formatCurrency(hasInfrastructureCost ? report.meta.total.infrastructure.total.value : 0, hasInfrastructureCost ? report.meta.total.infrastructure.total.units : 'USD');\n        }\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.rhelDetailsTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(\"div\", { style: styles.headerContentLeft },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: !showContent, onSelected: onGroupBySelected, options: groupByOptions, showTags: true, tagPathsType: tagPathsType })),\n                showContent && (React.createElement(\"div\", null,\n                    React.createElement(Tooltip, { content: intl.formatMessage(messages.dashboardTotalCostTooltip, {\n                            infrastructureCost,\n                            supplementaryCost,\n                        }), enableFlip: true },\n                        React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: TitleSizes['4xl'] }, cost)),\n                    React.createElement(\"div\", { style: styles.dateTitle }, getSinceDateRangeString()))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        providers: filterProviders(providers, ProviderType.rhel),\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n    };\n});\nconst DetailsHeader = injectIntl(connect(mapStateToProps, {})(DetailsHeaderBase));\nexport { DetailsHeader };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport 'routes/components/dataTable/dataTable.scss';\nimport { Label } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { ReportPathsType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { DataTable } from 'routes/components/dataTable';\nimport { styles } from 'routes/components/dataTable/dataTable.styles';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { Actions } from 'routes/details/components/actions';\nimport { getUnsortedComputedReportItems } from 'routes/utils/computedReport/getComputedReportItems';\nimport { getBreakdownPath } from 'routes/utils/paths';\nimport { getForDateRangeString, getNoDataForDateRangeString } from 'utils/dates';\nimport { formatCurrency, formatPercentage } from 'utils/format';\nimport { formatPath } from 'utils/paths';\nimport { noPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nexport const DetailsTableColumnIds = {\n    infrastructure: 'infrastructure',\n    monthOverMonth: 'monthOverMonth',\n    supplementary: 'supplementary',\n};\nconst reportPathsType = ReportPathsType.rhel;\nclass DetailsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { groupBy, groupByTagKey, hiddenColumns, intl, isAllSelected, report, router, selectedItems } = this.props;\n            if (!report) {\n                return;\n            }\n            const showDefaultProject = groupBy === 'project';\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: (groupByTagKey ? groupByTagKey : groupBy),\n            });\n            const columns = groupByTagKey\n                ? [\n                    // Sorting with tag keys is not supported\n                    {\n                        name: '',\n                    },\n                    {\n                        name: intl.formatMessage(messages.tagNames),\n                        style: groupBy === 'project' ? styles.nameColumn : undefined,\n                    },\n                    {\n                        hidden: !showDefaultProject,\n                        name: '', // Default column\n                    },\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    {\n                        id: DetailsTableColumnIds.infrastructure,\n                        name: intl.formatMessage(messages.rhelDetailsInfrastructureCost),\n                        style: styles.managedColumn,\n                    },\n                    {\n                        id: DetailsTableColumnIds.supplementary,\n                        name: intl.formatMessage(messages.rhelDetailsSupplementaryCost),\n                        style: styles.managedColumn,\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign(Object.assign({ orderBy: groupBy, name: intl.formatMessage(messages.detailsResourceNames, { value: groupBy }) }, (computedItems.length && { isSortable: true })), { style: groupBy === 'project' ? styles.nameColumn : undefined }),\n                    {\n                        hidden: !showDefaultProject,\n                        name: '', // Default column\n                    },\n                    {\n                        id: DetailsTableColumnIds.monthOverMonth,\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    {\n                        id: DetailsTableColumnIds.infrastructure,\n                        orderBy: 'infrastructure_cost',\n                        name: intl.formatMessage(messages.rhelDetailsInfrastructureCost),\n                        style: styles.managedColumn,\n                        // Sort by infrastructure_cost is not supported -- https://github.com/project-koku/koku/issues/796\n                        // ...(computedItems.length && { isSortable: true }),\n                    },\n                    {\n                        id: DetailsTableColumnIds.supplementary,\n                        orderBy: 'supplementary_cost',\n                        name: intl.formatMessage(messages.rhelDetailsSupplementaryCost),\n                        style: styles.managedColumn,\n                        // Sort by supplementary_cost is not supported -- https://github.com/project-koku/koku/issues/796\n                        // ...(computedItems.length && { isSortable: true }),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ];\n            computedItems.map((item, index) => {\n                const cost = this.getTotalCost(item, index);\n                const label = item && item.label !== null ? item.label : '';\n                const monthOverMonth = this.getMonthOverMonthCost(item, index);\n                const supplementaryCost = this.getSupplementaryCost(item, index);\n                const InfrastructureCost = this.getInfrastructureCost(item, index);\n                const desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                const isDisabled = label === `${noPrefix}${groupBy}` || label === `${noPrefix}${groupByTagKey}`;\n                const actions = this.getActions(item, isDisabled);\n                const name = isDisabled ? label : (React.createElement(Link, { to: getBreakdownPath({\n                        basePath: formatPath(routes.rhelDetailsBreakdown.path),\n                        description: item.id,\n                        groupBy,\n                        id: item.id,\n                        router,\n                        title: label.toString(), // Convert IDs if applicable\n                    }) }, label));\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: (React.createElement(React.Fragment, null,\n                                React.createElement(\"div\", null, name),\n                                React.createElement(\"div\", { style: styles.infoDescription }, desc))),\n                        },\n                        {\n                            hidden: !showDefaultProject,\n                            value: item.default_project ? (React.createElement(\"div\", null,\n                                React.createElement(Label, { variant: \"outline\", color: \"green\" }, intl.formatMessage(messages.default)))) : (React.createElement(\"div\", { style: styles.defaultLabel })),\n                        },\n                        { value: React.createElement(\"div\", null, monthOverMonth), id: DetailsTableColumnIds.monthOverMonth },\n                        {\n                            value: React.createElement(\"div\", null, InfrastructureCost),\n                            id: DetailsTableColumnIds.infrastructure,\n                            style: styles.managedColumn,\n                        },\n                        {\n                            value: React.createElement(\"div\", null, supplementaryCost),\n                            id: DetailsTableColumnIds.supplementary,\n                            style: styles.managedColumn,\n                        },\n                        { value: React.createElement(\"div\", null, cost), style: styles.managedColumn },\n                        { value: React.createElement(\"div\", null, actions) },\n                    ],\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                    selectionDisabled: isDisabled,\n                });\n            });\n            const filteredColumns = columns.filter(column => !hiddenColumns.has(column.id) && !column.hidden);\n            const filteredRows = rows.map((_a) => {\n                var row = __rest(_a, []);\n                row.cells = row.cells.filter(cell => !hiddenColumns.has(cell.id) && !cell.hidden);\n                return row;\n            });\n            this.setState({\n                columns: filteredColumns,\n                rows: filteredRows,\n            });\n        };\n        this.getActions = (item, isDisabled) => {\n            const { groupBy, reportQueryString } = this.props;\n            return (React.createElement(Actions, { groupBy: groupBy, isDisabled: isDisabled, item: item, providerType: ProviderType.rhel, reportPathsType: reportPathsType, reportQueryString: reportQueryString, showPriceListOption: groupBy === 'cluster' }));\n        };\n        this.getSupplementaryCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.supplementary.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.supplementary.total.value, item.supplementary.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n        this.getInfrastructureCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.infrastructure.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.infrastructure.total.value, item.infrastructure.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n        this.getMonthOverMonthCost = (item, index) => {\n            const { intl } = this.props;\n            const value = formatCurrency(Math.abs(item.cost.total.value - item.delta_value), item.cost.total.units);\n            const percentage = item.delta_percent !== null ? formatPercentage(Math.abs(item.delta_percent)) : 0;\n            const showPercentage = !(percentage === 0 || percentage === '0.00');\n            const showValue = item.delta_percent !== null; // Workaround for https://github.com/project-koku/koku/issues/1395\n            let iconOverride;\n            if (showPercentage) {\n                iconOverride = 'iconOverride';\n                if (item.delta_percent !== null && item.delta_value < 0) {\n                    iconOverride += ' decrease';\n                }\n                if (item.delta_percent !== null && item.delta_value > 0) {\n                    iconOverride += ' increase';\n                }\n            }\n            if (!showValue) {\n                return getNoDataForDateRangeString();\n            }\n            else {\n                return (React.createElement(\"div\", { className: \"monthOverMonthOverride\" },\n                    React.createElement(\"div\", { className: iconOverride, key: `month-over-month-cost-${index}` },\n                        showPercentage ? intl.formatMessage(messages.percent, { value: percentage }) : React.createElement(EmptyValueState, null),\n                        showPercentage && item.delta_percent !== null && item.delta_value > 0 && (React.createElement(\"span\", { className: \"fa fa-sort-up\", style: styles.infoArrow, key: `month-over-month-icon-${index}` })),\n                        showPercentage && item.delta_percent !== null && item.delta_value < 0 && (React.createElement(\"span\", { className: \"fa fa-sort-down\", style: Object.assign(Object.assign({}, styles.ininfoArrow), styles.infoArrowDesc), key: `month-over-month-icon-${index}` }))),\n                    React.createElement(\"div\", { style: styles.infoDescription, key: `month-over-month-info-${index}` }, getForDateRangeString(value))));\n            }\n        };\n        this.getTotalCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.cost.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.cost.total.value, item.cost.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { hiddenColumns, report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport ||\n            prevProps.selectedItems !== selectedItems ||\n            prevProps.hiddenColumns !== hiddenColumns) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { filterBy, isLoading, onSelected, onSort, orderBy, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, filterBy: filterBy, isActionsCell: true, isLoading: isLoading, onSelected: onSelected, onSort: onSort, orderBy: orderBy, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst DetailsTable = injectIntl(withRouter(DetailsTableBase));\nexport { DetailsTable };\n","import { getQuery } from 'api/queries/ocpQuery';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType, TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/components/dataToolbar';\nimport { isEqual } from 'routes/utils/equal';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { tagKey } from 'utils/props';\nconst tagType = TagType.tag;\nconst tagPathsType = TagPathsType.ocp;\nexport class DetailsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { intl, tagReport } = this.props;\n            const options = [\n                { name: intl.formatMessage(messages.filterByValues, { value: 'cluster' }), key: 'cluster' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'node' }), key: 'node' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'project' }), key: 'project' },\n            ];\n            if (tagReport && tagReport.data && tagReport.data.length) {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: tagKey }),\n                    key: tagKey,\n                });\n            }\n            return options;\n        };\n        this.updateReport = () => {\n            const { fetchTag, tagQueryString } = this.props;\n            fetchTag(tagPathsType, tagType, tagQueryString);\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        }, () => {\n            this.updateReport();\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { query, tagReport } = this.props;\n        if (!isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            }, () => {\n                this.updateReport();\n            });\n        }\n        else if (query && !isEqual(query, prevProps.query)) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { groupBy, isAllSelected, isDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onColumnManagementClicked, onExportClicked, onFilterAdded, onFilterRemoved, pagination, query, selectedItems, tagReport, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, groupBy: groupBy, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onColumnManagementClicked: onColumnManagementClicked, onExportClicked: onExportClicked, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.ocp, selectedItems: selectedItems, showBulkSelect: true, showColumnManagement: true, showExcludes: true, showExport: true, showFilter: true, tagReport: tagReport, tagPathsType: tagPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        key_only: true,\n        limit: 1000,\n    });\n    const tagReport = tagSelectors.selectTag(state, tagPathsType, tagType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagPathsType, tagType, tagQueryString);\n    return {\n        tagReport,\n        tagReportFetchStatus,\n        tagQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst DetailsToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsToolbarBase);\nconst DetailsToolbar = injectIntl(DetailsToolbarConnect);\nexport { DetailsToolbar };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    ocpDetails: {\n        minHeight: '100%',\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    toolbarContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { getQuery, parseQuery } from 'api/queries/rhelQuery';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport { cloneDeep } from 'lodash';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ExportModal } from 'routes/components/export';\nimport { Loading } from 'routes/components/page/loading';\nimport { NoData } from 'routes/components/page/noData';\nimport { NoProviders } from 'routes/components/page/noProviders';\nimport { NotAvailable } from 'routes/components/page/notAvailable';\nimport { ColumnManagementModal, initHiddenColumns } from 'routes/details/components/columnManagement';\nimport { getUnsortedComputedReportItems } from 'routes/utils/computedReport/getComputedReportItems';\nimport { getIdKeyForGroupBy } from 'routes/utils/computedReport/getComputedRhelReportItems';\nimport { getGroupByTagKey } from 'routes/utils/groupBy';\nimport { filterProviders, hasCurrentMonthData } from 'routes/utils/providers';\nimport { getRouteForQuery } from 'routes/utils/query';\nimport { handleOnCurrencySelected, handleOnFilterAdded, handleOnFilterRemoved, handleOnPerPageSelect, handleOnSetPage, handleOnSort, } from 'routes/utils/queryNavigate';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nimport { noPrefix, tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { DetailsHeader } from './detailsHeader';\nimport { DetailsTable, DetailsTableColumnIds } from './detailsTable';\nimport { DetailsToolbar } from './detailsToolbar';\nimport { styles } from './rhelDetails.styles';\nconst baseQuery = {\n    filter: {\n        limit: 10,\n        offset: 0,\n    },\n    exclude: {},\n    filter_by: {},\n    group_by: {\n        project: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst defaultColumnOptions = [\n    { label: messages.monthOverMonthChange, value: DetailsTableColumnIds.monthOverMonth },\n    {\n        description: messages.ocpDetailsInfrastructureCostDesc,\n        label: messages.ocpDetailsInfrastructureCost,\n        value: DetailsTableColumnIds.infrastructure,\n        hidden: true,\n    },\n    {\n        description: messages.ocpDetailsSupplementaryCostDesc,\n        label: messages.ocpDetailsSupplementaryCost,\n        value: DetailsTableColumnIds.supplementary,\n        hidden: true,\n    },\n];\nconst reportType = ReportType.cost;\nconst reportPathsType = ReportPathsType.ocp;\nclass RhelDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            hiddenColumns: initHiddenColumns(defaultColumnOptions),\n            isAllSelected: false,\n            isColumnManagementModalOpen: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getColumnManagementModal = () => {\n            const { hiddenColumns, isColumnManagementModalOpen } = this.state;\n            const options = cloneDeep(defaultColumnOptions);\n            options.map(option => {\n                option.hidden = hiddenColumns.has(option.value);\n            });\n            return (React.createElement(ColumnManagementModal, { isOpen: isColumnManagementModalOpen, options: options, onClose: this.handleColumnManagementModalClose, onSave: this.handleColumnManagementModalSave }));\n        };\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey || groupById,\n            });\n        };\n        this.getExportModal = (computedItems) => {\n            const { query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `${noPrefix}${groupById}` || item.label === `${noPrefix}${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, report, router } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = Math.trunc(offset / limit + 1);\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handleOnPerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleOnSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.openShift),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { query, report, reportFetchStatus, reportQueryString, router } = this.props;\n            const { hiddenColumns, isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return (React.createElement(DetailsTable, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, groupByTagKey: groupByTagKey, hiddenColumns: hiddenColumns, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending) => handleOnSort(query, router, sortType, isSortAscending), orderBy: query.order_by, report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, report, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(DetailsToolbar, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isDisabled || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onColumnManagementClicked: this.handleColumnManagementModalOpen, onExportClicked: this.handleExportModalOpen, onFilterAdded: filter => handleOnFilterAdded(query, router, filter), onFilterRemoved: filter => handleOnFilterRemoved(query, router, filter), pagination: this.getPagination(), query: query, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleColumnManagementModalClose = (isOpen) => {\n            this.setState({ isColumnManagementModalOpen: isOpen });\n        };\n        this.handleColumnManagementModalOpen = () => {\n            this.setState({ isColumnManagementModalOpen: true });\n        };\n        this.handleColumnManagementModalSave = (hiddenColumns) => {\n            this.setState({ hiddenColumns });\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            const groupByKey = groupBy;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: '*',\n                }, order_by: undefined, category: undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.updateReport = () => {\n            const { fetchReport, reportQueryString } = this.props;\n            fetchReport(reportPathsType, reportType, reportQueryString);\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleColumnManagementModalClose = this.handleColumnManagementModalClose.bind(this);\n        this.handleColumnManagementModalOpen = this.handleColumnManagementModalOpen.bind(this);\n        this.handleColumnManagementModalSave = this.handleColumnManagementModalSave.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { currency, intl, providers, providersFetchStatus, query, report, reportError, reportFetchStatus, router } = this.props;\n        const computedItems = this.getComputedItems();\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const isDisabled = computedItems.length === 0;\n        const title = intl.formatMessage(messages.ocpDetailsTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.inProgress) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.complete) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: ProviderType.ocp, title: title });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.ocpDetails },\n            React.createElement(DetailsHeader, { currency: currency, groupBy: groupById, onCurrencySelected: () => handleOnCurrencySelected(query, router), onGroupBySelected: this.handleGroupBySelected, report: report }),\n            React.createElement(\"div\", { style: styles.content },\n                React.createElement(\"div\", { style: styles.toolbarContainer }, this.getToolbar(computedItems)),\n                this.getExportModal(computedItems),\n                this.getColumnManagementModal(),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const currency = getCurrency();\n    const query = Object.assign(Object.assign({}, baseQuery), queryFromRoute);\n    const reportQuery = {\n        currency,\n        delta: 'cost',\n        exclude: query.exclude,\n        filter: Object.assign(Object.assign({}, query.filter), { resolution: 'monthly', time_scope_units: 'month', time_scope_value: -1 }),\n        filter_by: query.filter_by,\n        group_by: query.group_by,\n        order_by: query.order_by,\n    };\n    const reportQueryString = getQuery(reportQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        currency,\n        providers: filterProviders(providers, ProviderType.ocp),\n        providersFetchStatus,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(RhelDetails)));\n"],"names":["getIdKeyForGroupBy","groupBy","project","cluster","node","styles","costValue","marginTop","global_spacer_lg","var","marginBottom","costLabelUnit","fontSize","global_FontSize_sm","value","color","global_Color_100","dateTitle","textAlign","header","backgroundColor","global_BackgroundColor_light_100","padding","headerContent","display","justifyContent","headerContentLeft","minHeight","headerContentRight","info","verticalAlign","infoIcon","global_FontSize_md","infoTitle","fontWeight","title","paddingBottom","global_spacer_sm","groupByOptions","label","tagPathsType","rhel","DetailsHeaderBase","constructor","super","arguments","this","defaultState","state","Object","assign","render","currency","isExportsFeatureEnabled","onCurrencySelected","onGroupBySelected","providers","providersError","report","intl","props","showContent","meta","count","cost","supplementaryCost","infrastructureCost","total","hasCost","hasSupplementaryCost","supplementary","hasInfrastructureCost","infrastructure","format","units","style","Title","headingLevel","size","TitleSizes","formatMessage","messages","rhelDetailsTitle","onSelect","isDisabled","onSelected","options","showTags","Tooltip","content","dashboardTotalCostTooltip","enableFlip","mapStateToProps","providersQueryString","all","providersFetchStatus","featureFlags","DetailsHeader","injectIntl","connect","DetailsTableColumnIds","reportPathsType","DetailsTableBase","columns","rows","initDatum","groupByTagKey","hiddenColumns","isAllSelected","router","selectedItems","showDefaultProject","computedItems","idKey","name","tagNames","nameColumn","undefined","hidden","monthOverMonthChange","id","rhelDetailsInfrastructureCost","managedColumn","rhelDetailsSupplementaryCost","orderBy","costColumn","length","isSortable","detailsResourceNames","map","item","index","getTotalCost","monthOverMonth","getMonthOverMonthCost","getSupplementaryCost","InfrastructureCost","getInfrastructureCost","desc","infoDescription","actions","getActions","Link","to","basePath","routes","rhelDetailsBreakdown","path","description","toString","push","cells","default_project","Label","variant","defaultLabel","selected","find","val","selectionDisabled","filteredColumns","filter","column","has","filteredRows","_a","row","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","__rest","cell","setState","reportQueryString","providerType","showPriceListOption","percentValue","toFixed","key","percentOfCost","Math","abs","delta_value","percentage","delta_percent","showPercentage","showValue","iconOverride","className","percent","infoArrow","ininfoArrow","infoArrowDesc","componentDidMount","componentDidUpdate","prevProps","currentReport","data","JSON","stringify","filterBy","isLoading","onSort","isActionsCell","DetailsTable","tagType","tag","ocp","DetailsToolbarBase","getCategoryOptions","tagReport","filterByValues","updateReport","fetchTag","tagQueryString","categoryOptions","query","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onColumnManagementClicked","onExportClicked","onFilterAdded","onFilterRemoved","pagination","resourcePathsType","showBulkSelect","showColumnManagement","showExcludes","showExport","showFilter","resolution","time_scope_units","time_scope_value","key_only","limit","tagReportFetchStatus","mapDispatchToProps","DetailsToolbarConnect","DetailsToolbar","paddingTop","ocpDetails","paginationContainer","marginLeft","marginRight","global_spacer_md","tableContainer","toolbarContainer","baseQuery","offset","exclude","filter_by","group_by","order_by","defaultColumnOptions","ocpDetailsInfrastructureCostDesc","ocpDetailsInfrastructureCost","ocpDetailsSupplementaryCostDesc","ocpDetailsSupplementaryCost","reportType","RhelDetails","stateProps","dispatchProps","isColumnManagementModalOpen","isExportModalOpen","getColumnManagementModal","cloneDeep","option","isOpen","onClose","handleColumnManagementModalClose","onSave","handleColumnManagementModalSave","getComputedItems","groupById","getExportModal","items","isAllItems","handleExportModalClose","getPagination","isBottom","page","trunc","Pagination","isCompact","itemCount","onPerPageSelect","event","perPage","onSetPage","pageNumber","titles","paginationTitle","openShift","placement","PaginationVariant","bottom","top","widgetId","getTable","reportFetchStatus","inProgress","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","handleColumnManagementModalOpen","handleExportModalOpen","action","handleGroupBySelected","groupByKey","newQuery","parse","category","navigate","location","replace","isSelected","newItems","fetchReport","bind","prevState","reportError","noReport","noLocation","search","ocpDetailsTitle","complete","queryFromRoute","reportQuery","delta"],"sourceRoot":""}