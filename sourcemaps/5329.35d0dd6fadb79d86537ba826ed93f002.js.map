{"version":3,"file":"js/5329.a3cac0c23a1426ebfc5a.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/external-link-alt-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_FontSize_md.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_xs.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Unavailable/Unavailable.js","webpack:///./src/routes/components/icons/optimizationIcon/optimizationIcon.tsx","webpack:///./src/routes/state/noOptimizations/noOptimizationsState.tsx","webpack:///./src/routes/views/details/components/actions/actions.tsx","webpack:///./src/routes/views/details/components/columnManagement/columnManagementModal.tsx","webpack:///./src/routes/views/details/components/dataTable/dataTable.styles.ts","webpack:///./src/routes/views/details/components/dataTable/dataTable.tsx"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExternalLinkAltIcon = createIcon(ExternalLinkAltIconConfig);\n\nexport default ExternalLinkAltIcon;","\"use strict\";\nexports.__esModule = true;\nexports.global_FontSize_md = {\n  \"name\": \"--pf-global--FontSize--md\",\n  \"value\": \"1rem\",\n  \"var\": \"var(--pf-global--FontSize--md)\"\n};\nexports[\"default\"] = exports.global_FontSize_md;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_xs = {\n  \"name\": \"--pf-global--spacer--xs\",\n  \"value\": \"0.25rem\",\n  \"var\": \"var(--pf-global--spacer--xs)\"\n};\nexports[\"default\"] = exports.global_spacer_xs;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport '../Unavailable/Unavailable.css';\nvar Unavailable = function () {\n    return (_jsxs(EmptyState, __assign({ variant: EmptyStateVariant.large, className: \"ins-c-empty-state__unavailable pf-m-redhat-font\" }, { children: [_jsx(EmptyStateIcon, { icon: ExclamationCircleIcon }), _jsx(Title, __assign({ headingLevel: \"h5\", size: \"lg\" }, { children: \"This page is temporarily unavailable\" })), _jsxs(EmptyStateBody, { children: [\"Try refreshing the page. If the problem persists, contact your organization administrator or visit our\", _jsxs(\"a\", __assign({ href: \"https://status.redhat.com/\", target: \"_blank\", rel: \"noopener noreferrer\" }, { children: [' ', \"status page\"] })), ' ', \"for known outages.\"] })] })));\n};\nexport default Unavailable;\n//# sourceMappingURL=Unavailable.js.map","import './optimizationIcon.scss';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nconst icon = require('./Red_Hat-IT_Optimization-Gray.svg');\nconst OptimizationIcon = ({ className, intl }) => {\n    return (React.createElement(\"img\", { className: `optimization-icon ${className}`, src: icon, alt: intl.formatMessage(messages.optimizations), \"aria-hidden\": \"true\" }));\n};\nexport default injectIntl(OptimizationIcon);\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title, TitleSizes, } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { OptimizationIcon } from 'routes/components/icons/optimizationIcon';\nclass NoOptimizationsStateBase extends React.Component {\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: OptimizationIcon }),\n            React.createElement(Title, { headingLevel: \"h1\", size: TitleSizes.lg }, intl.formatMessage(messages.noOptimizationsTitle)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(messages.noOptimizationsDesc))));\n    }\n}\nconst NoOptimizationsState = injectIntl(NoOptimizationsStateBase);\nexport { NoOptimizationsState };\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ExportModal } from 'routes/views/components/export';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nimport { tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, reportPathsType, reportQueryString } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { count: 1, groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, intl, item: { source_uuid }, redirectToCostModel, router, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, intl.formatMessage(messages.detailsActionsExport)),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], router) }, intl.formatMessage(messages.detailsActionsPriceList)));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = injectIntl(withRouter(DetailsActionsConnect));\nexport default Actions;\n","import { Button, ButtonVariant, DataList, DataListCell, DataListCheck, DataListItem, DataListItemCells, DataListItemRow, Modal, ModalVariant, Text, TextContent, TextVariants, } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nexport const initHiddenColumns = (options) => {\n    const hiddenColumns = new Set();\n    options.map(option => {\n        if (option.hidden) {\n            hiddenColumns.add(option.value);\n        }\n    });\n    return hiddenColumns;\n};\nexport class ColumnManagementModalBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            hiddenColumns: initHiddenColumns(this.props.options),\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getHidden = (value) => {\n            const { hiddenColumns } = this.state;\n            const result = new Set(hiddenColumns);\n            if (!result.delete(value)) {\n                result.add(value);\n            }\n            return result;\n        };\n        this.isHidden = (value) => {\n            const { hiddenColumns } = this.state;\n            return hiddenColumns.has(value);\n        };\n        this.handleChange = (checked, event) => {\n            const hiddenColumns = this.getHidden(event.target.id);\n            this.setState({ hiddenColumns });\n        };\n        this.handleClose = () => {\n            // Reset defult state upon close\n            this.setState(Object.assign({}, this.defaultState), () => {\n                this.props.onClose(false);\n            });\n        };\n        this.handleSave = () => {\n            const { hiddenColumns } = this.state;\n            this.props.onSave(hiddenColumns);\n            this.handleClose();\n        };\n        this.selectAll = () => {\n            this.setState({ hiddenColumns: new Set() });\n        };\n    }\n    componentDidUpdate(prevProps) {\n        const { options } = this.props;\n        if (prevProps.options !== options) {\n            const hiddenColumns = initHiddenColumns(options);\n            this.setState({ hiddenColumns });\n        }\n    }\n    render() {\n        const { options, intl } = this.props;\n        return (React.createElement(Modal, { description: React.createElement(TextContent, null,\n                React.createElement(Text, { component: TextVariants.p }, intl.formatMessage(messages.manageColumnsDesc)),\n                React.createElement(Button, { isInline: true, onClick: this.selectAll, variant: \"link\" }, intl.formatMessage(messages.selectAll))), \n            // style={styles.modal}\n            isOpen: this.props.isOpen, onClose: this.handleClose, title: intl.formatMessage(messages.manageColumnsTitle), variant: ModalVariant.medium, actions: [\n                React.createElement(Button, { key: \"save\", onClick: this.handleSave, variant: ButtonVariant.link }, intl.formatMessage(messages.save)),\n                React.createElement(Button, { key: \"cancel\", onClick: this.handleClose, variant: ButtonVariant.link }, intl.formatMessage(messages.cancel)),\n            ] },\n            React.createElement(DataList, { \"aria-label\": intl.formatMessage(messages.manageColumnsAriaLabel), id: \"table-column-management\", isCompact: true }, options.map(option => (React.createElement(DataListItem, { \"aria-labelledby\": option.value, key: option.value },\n                React.createElement(DataListItemRow, null,\n                    React.createElement(DataListCheck, { \"aria-labelledby\": `${option.value}Label`, isChecked: !this.isHidden(option.value), name: option.value, id: option.value, onChange: this.handleChange }),\n                    React.createElement(DataListItemCells, { dataListCells: [\n                            React.createElement(DataListCell, { id: `${option.value}Label`, key: \"table-column-management-item1\" },\n                                React.createElement(\"span\", null, intl.formatMessage(option.label))),\n                            React.createElement(DataListCell, { key: \"table-column-management-item2\" }, option.description && React.createElement(\"span\", null, intl.formatMessage(option.description))),\n                        ] }))))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {};\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst ColumnManagementModalConnect = connect(mapStateToProps, mapDispatchToProps)(ColumnManagementModalBase);\nconst ColumnManagementModal = injectIntl(ColumnManagementModalConnect);\nexport default ColumnManagementModal;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    costColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingRight: 0,\n    },\n    defaultLabel: {\n        minWidth: '50px',\n    },\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    lastReported: {\n        textAlign: 'right',\n        paddingRight: '40px',\n    },\n    lastReportedColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    managedColumn: {\n        textAlign: 'right',\n    },\n    nameColumn: {\n        width: '1%',\n    },\n};\n","import './dataTable.scss';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, TableVariant, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport { parseQuery } from 'api/queries/ocpQuery';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { NoOptimizationsState } from 'routes/state/noOptimizations/noOptimizationsState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass DataTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { intl, isOptimizations, router } = this.props;\n            const queryFromRoute = parseQuery(router.location.search);\n            if (queryFromRoute.filter_by) {\n                for (const val of Object.values(queryFromRoute.filter_by)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            if (isOptimizations) {\n                return React.createElement(NoOptimizationsState, null);\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, router } = this.props;\n            const orderBy = columns[index].orderBy;\n            const queryFromRoute = parseQuery(router.location.search);\n            const direction = queryFromRoute && queryFromRoute.order_by && queryFromRoute.order_by[orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected, rows } = this.props;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnRowClick = (event, rowIndex) => {\n            const { onRowClick, rows } = this.props;\n            rows.map(row => (row.selected = false));\n            rows[rowIndex].selected = true;\n            this.setState({ rows }, () => {\n                if (onRowClick) {\n                    onRowClick(event, rowIndex);\n                }\n            });\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isLoading, isOptimizations, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.dataTableAriaLabel), className: \"tableOverride\", gridBreakPoint: \"grid-2xl\", hasSelectableRowCaption: isOptimizations, variant: TableVariant.compact },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { isSelectable: isOptimizations, isHoverable: isOptimizations, isRowSelected: isOptimizations && row.selected, onRowClick: isOptimizations ? _event => this.handleOnRowClick(_event, rowIndex) : undefined, key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 && !isOptimizations ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${cellIndex}-${rowIndex}`, modifier: \"nowrap\", select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    }, style: item.style })) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", isActionCell: !isOptimizations && cellIndex === row.cells.length - 1, style: item.style }, item.value))))))))),\n            rows.length === 0 && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(DataTable));\n"],"names":["ExternalLinkAltIconConfig","name","height","width","svgPath","yOffset","xOffset","ExternalLinkAltIcon","exports","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","EmptyState","variant","EmptyStateVariant","className","children","EmptyStateIcon","icon","ExclamationCircleIcon","Title","headingLevel","size","EmptyStateBody","href","target","rel","injectIntl","intl","src","alt","formatMessage","messages","NoOptimizationsStateBase","render","props","TitleSizes","NoOptimizationsState","DetailsActionsBase","constructor","stateProps","dispatchProps","super","defaultState","isDropdownOpen","isExportModalOpen","state","getExportModal","groupBy","item","reportPathsType","reportQueryString","count","isOpen","items","onClose","handleExportModalClose","setState","handleExportModalOpen","handleOnSelect","handleOnToggle","bind","isDisabled","showPriceListOption","source_uuid","redirectToCostModel","router","DropdownItem","component","key","onClick","unshift","includes","Dropdown","onSelect","toggle","KebabToggle","onToggle","isPlain","position","dropdownItems","mapStateToProps","mapDispatchToProps","costModels","DetailsActionsConnect","connect","initHiddenColumns","options","hiddenColumns","Set","map","option","hidden","add","value","ColumnManagementModalBase","getHidden","result","delete","isHidden","has","handleChange","checked","event","id","handleClose","handleSave","onSave","selectAll","componentDidUpdate","prevProps","Modal","description","TextContent","Text","TextVariants","Button","isInline","title","ModalVariant","actions","ButtonVariant","DataList","isCompact","DataListItem","DataListItemRow","DataListCheck","isChecked","onChange","DataListItemCells","dataListCells","DataListCell","label","ColumnManagementModalConnect","styles","costColumn","textAlign","display","justifyContent","paddingRight","defaultLabel","minWidth","emptyState","backgroundColor","paddingTop","infoArrow","infoArrowDesc","bottom","infoDescription","color","fontSize","lastReported","lastReportedColumn","managedColumn","nameColumn","DataTable","getEmptyState","isOptimizations","queryFromRoute","location","search","filter_by","val","values","filter","showMargin","getSortBy","index","columns","orderBy","direction","order_by","getSortParams","sortBy","onSort","handleOnSort","columnIndex","isSelected","rowId","onSelected","rows","newRows","row","selected","SortByDirection","handleOnRowClick","rowIndex","onRowClick","isLoading","TableComposable","gridBreakPoint","hasSelectableRowCaption","TableVariant","Thead","Tr","col","Th","modifier","sort","isSortable","undefined","style","Tbody","Td","colSpan","Bullseye","Spinner","isSelectable","isHoverable","isRowSelected","_event","cells","cellIndex","dataLabel","isActionCell","select","disable","selectionDisabled"],"sourceRoot":""}