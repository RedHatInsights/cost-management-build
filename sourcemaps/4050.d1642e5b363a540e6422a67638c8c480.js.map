{"version":3,"file":"js/4050.744ce70b550f6851dd76.js","mappings":"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","sources":["webpack:///./src/routes/components/charts/chartTheme/theme-koku.ts","webpack:///./src/routes/components/charts/chartTheme/index.ts","webpack:///./src/routes/components/charts/chartTheme/theme-utils.ts","webpack:///./src/routes/components/reports/reportSummary/reportSummary.tsx","webpack:///./src/routes/components/reports/reportSummary/reportSummaryAlt.tsx","webpack:///./src/routes/components/reports/reportSummary/reportSummaryDetails.tsx","webpack:///./src/routes/components/reports/reportSummary/reportSummaryItem.tsx","webpack:///./src/routes/components/reports/reportSummary/reportSummaryItems.tsx","webpack:///./src/routes/components/charts/costChart/costChart.styles.ts","webpack:///./src/routes/components/charts/costChart/costChart.tsx","webpack:///./src/routes/components/reports/reportSummary/reportSummaryCost.tsx","webpack:///./src/routes/components/charts/dailyCostChart/dailyCostChart.styles.ts","webpack:///./src/routes/components/charts/dailyCostChart/dailyCostChart.tsx","webpack:///./src/routes/components/reports/reportSummary/reportSummaryDailyCost.tsx","webpack:///./src/routes/components/charts/dailyTrendChart/dailyTrendChart.styles.ts","webpack:///./src/routes/components/charts/dailyTrendChart/dailyTrendChart.tsx","webpack:///./src/routes/components/reports/reportSummary/reportSummaryDailyTrend.tsx","webpack:///./src/routes/components/charts/trendChart/trendChart.styles.ts","webpack:///./src/routes/components/charts/trendChart/trendChart.tsx","webpack:///./src/routes/components/reports/reportSummary/reportSummaryTrend.tsx","webpack:///./src/routes/components/charts/usageChart/usageChart.styles.ts","webpack:///./src/routes/components/charts/usageChart/usageChart.tsx","webpack:///./src/routes/components/reports/reportSummary/reportSummaryUsage.tsx","webpack:///./src/routes/components/state/emptyValueState/emptyValueState.tsx","webpack:///./src/routes/utils/skeleton.ts"],"sourcesContent":["// Layout\nconst LAYOUT_PROPS = {\n    padding: 8,\n};\n// Victory theme properties only\nexport default {\n    area: Object.assign({}, LAYOUT_PROPS),\n    axis: Object.assign({}, LAYOUT_PROPS),\n    bar: Object.assign({}, LAYOUT_PROPS),\n    boxplot: Object.assign({}, LAYOUT_PROPS),\n    candlestick: Object.assign({}, LAYOUT_PROPS),\n    chart: Object.assign({}, LAYOUT_PROPS),\n    errorbar: Object.assign({}, LAYOUT_PROPS),\n    group: Object.assign({}, LAYOUT_PROPS),\n    legend: {},\n    line: Object.assign({}, LAYOUT_PROPS),\n    pie: Object.assign({}, LAYOUT_PROPS),\n    scatter: Object.assign({}, LAYOUT_PROPS),\n    stack: Object.assign({}, LAYOUT_PROPS),\n    tooltip: {},\n    voronoi: Object.assign({}, LAYOUT_PROPS),\n};\n","import getTheme from './theme-utils';\nconst ChartTheme = getTheme();\nexport default ChartTheme;\n","import { ChartThemeColor, getCustomTheme } from '@patternfly/react-charts';\nimport { default as ChartTheme } from './theme-koku';\n// Applies theme color and variant to base theme\nconst getTheme = () => getCustomTheme(ChartThemeColor.default, null, ChartTheme);\nexport default getTheme;\n","import './reportSummary.scss';\nimport { Card, CardBody, CardFooter, CardTitle, Skeleton, Title, TitleSizes } from '@patternfly/react-core';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { skeletonWidth } from 'routes/utils/skeleton';\nimport { FetchStatus } from 'store/common';\nconst ReportSummaryBase = ({ children, detailsLink, title, subTitle, status }) => (React.createElement(Card, { className: \"reportSummary\" },\n    React.createElement(CardTitle, null,\n        React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, title),\n        subTitle && React.createElement(\"p\", { className: \"subtitle\" }, subTitle)),\n    React.createElement(CardBody, null, status === FetchStatus.inProgress ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { width: \"16%\" }),\n        React.createElement(Skeleton, { className: \"chartSkeleton\", width: skeletonWidth.md }),\n        React.createElement(Skeleton, { width: \"33%\" }),\n        React.createElement(Skeleton, { className: \"legendSkeleton\", width: skeletonWidth.xs }))) : (children)),\n    detailsLink && React.createElement(CardFooter, null, detailsLink)));\nconst ReportSummary = injectIntl(ReportSummaryBase);\nexport default ReportSummary;\n","import './reportSummaryAlt.scss';\nimport { Card, CardBody, CardFooter, CardTitle, Grid, GridItem, Skeleton, Title, TitleSizes, } from '@patternfly/react-core';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { skeletonWidth } from 'routes/utils/skeleton';\nimport { FetchStatus } from 'store/common';\nconst ReportSummaryAltBase = ({ children, detailsLink, status, subTitle, tabs, title, }) => (React.createElement(Card, { className: \"reportSummary\" },\n    React.createElement(Grid, { hasGutter: true },\n        React.createElement(GridItem, { xl: 8 },\n            React.createElement(\"div\", { className: \"cost\" },\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, title),\n                    subTitle && React.createElement(\"p\", { className: \"subtitle\" }, subTitle)),\n                React.createElement(CardBody, null, status === FetchStatus.inProgress ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { width: \"16%\" }),\n                    React.createElement(Skeleton, { className: \"chartSkeleton\", width: skeletonWidth.md }),\n                    React.createElement(Skeleton, { width: \"33%\" }),\n                    React.createElement(Skeleton, { className: \"legendSkeleton\", width: skeletonWidth.xs }))) : (children)))),\n        React.createElement(GridItem, { xl: 4 },\n            React.createElement(\"div\", { className: \"tops\" }, status !== FetchStatus.inProgress && (React.createElement(React.Fragment, null,\n                tabs && React.createElement(CardBody, null, tabs),\n                detailsLink && React.createElement(CardFooter, null, detailsLink))))))));\nconst ReportSummaryAlt = injectIntl(ReportSummaryAltBase);\nexport default ReportSummaryAlt;\n","import './reportSummaryDetails.scss';\nimport { Tooltip } from '@patternfly/react-core';\nimport { ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { ComputedReportItemType } from 'routes/components/charts/common/chartDatum';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { DashboardChartType } from 'store/dashboard/common/dashboardCommon';\nimport { formatCurrency, formatUnits, unitsLookupKey } from 'utils/format';\nconst ReportSummaryDetailsBase = ({ chartType, computedReportItem = 'cost', computedReportItemValue = 'total', costLabel, formatOptions, intl, report, requestFormatOptions, requestLabel, reportType, showTooltip = false, showUnits = false, showUsageFirst = false, units, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let supplementaryCost = React.createElement(EmptyValueState, null);\n    let infrastructureCost = React.createElement(EmptyValueState, null);\n    let request = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    const hasTotal = report && report.meta && report.meta.total;\n    const hasCost = hasTotal && report.meta.total.cost && report.meta.total.cost.total;\n    const hasCount = hasTotal && report.meta.total.count;\n    const hasSupplementaryCost = hasTotal &&\n        report.meta.total.supplementary &&\n        report.meta.total.supplementary.total &&\n        report.meta.total.supplementary.total.value;\n    const hasInfrastructureCost = hasTotal &&\n        report.meta.total.infrastructure &&\n        report.meta.total.infrastructure[computedReportItemValue] &&\n        report.meta.total.infrastructure[computedReportItemValue].value;\n    const hasRequest = hasTotal && report.meta.total.request;\n    const hasUsage = hasTotal && report.meta.total.usage;\n    if (hasTotal) {\n        cost = formatCurrency(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD', formatOptions);\n        supplementaryCost = formatCurrency(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost ? report.meta.total.supplementary.total.units : 'USD', formatOptions);\n        infrastructureCost = formatCurrency(hasInfrastructureCost ? report.meta.total.infrastructure[computedReportItemValue].value : 0, hasInfrastructureCost ? report.meta.total.infrastructure[computedReportItemValue].units : 'USD', formatOptions);\n        request = formatUnits(hasRequest ? report.meta.total.request.value : 0, hasRequest ? report.meta.total.request.units : undefined, requestFormatOptions);\n        if (hasUsage && report.meta.total.usage.value >= 0) {\n            usage = formatUnits(hasUsage ? report.meta.total.usage.value : 0, hasUsage ? report.meta.total.usage.units : undefined, usageFormatOptions);\n        }\n        else {\n            // Workaround for https://github.com/project-koku/koku-ui/issues/1058\n            usage = formatUnits(hasUsage ? report.meta.total.usage : 0, hasCount ? report.meta.total.count.units : undefined, usageFormatOptions);\n        }\n    }\n    const getCostLayout = (showAltHeroFont = false) => {\n        let value = cost;\n        if (computedReportItem === ComputedReportItemType.infrastructure) {\n            value = infrastructureCost;\n        }\n        else if (computedReportItem === ComputedReportItemType.supplementary) {\n            value = supplementaryCost;\n        }\n        const altHeroFont = showAltHeroFont ? 'Alt' : '';\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            showTooltip ? (React.createElement(Tooltip, { content: intl.formatMessage(messages.dashboardTotalCostTooltip, { infrastructureCost, supplementaryCost }), enableFlip: true },\n                React.createElement(\"div\", { className: `value${altHeroFont}` }, value))) : (React.createElement(\"div\", { className: `value${altHeroFont}` }, value)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, costLabel))));\n    };\n    const getRequestLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasRequest ? report.meta.total.request.units : undefined;\n        const unitsLabel = intl.formatMessage(messages.units, { units: unitsLookupKey(usageUnits) });\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            React.createElement(\"span\", { className: \"value\" }, request),\n            showUnits && (units || (hasRequest && report.meta.total.request.value >= 0)) && (React.createElement(\"span\", { className: \"units\" }, unitsLabel)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, requestLabel))));\n    };\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasUsage ? report.meta.total.usage.units : undefined;\n        // added as a work-around for azure #1079\n        const _units = unitsLookupKey(units ? units : usageUnits);\n        const unitsLabel = intl.formatMessage(messages.units, { units: _units });\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            React.createElement(\"span\", { className: \"value\" }, usage),\n            showUnits && (units || (hasUsage && report.meta.total.usage.value >= 0)) && (React.createElement(\"span\", { className: \"units\" }, unitsLabel)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (chartType === DashboardChartType.dailyCost ||\n        chartType === DashboardChartType.dailyTrend ||\n        chartType === DashboardChartType.cost) {\n        return React.createElement(React.Fragment, null, getCostLayout(reportType === ReportType.cost));\n    }\n    else if (chartType === DashboardChartType.trend) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getCostLayout(reportType === ReportType.cost)));\n        }\n        return (React.createElement(React.Fragment, null,\n            getCostLayout(reportType === ReportType.cost),\n            getUsageLayout()));\n    }\n    else if (chartType === DashboardChartType.usage) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getRequestLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getRequestLayout(),\n            getUsageLayout()));\n    }\n    else {\n        return null;\n    }\n};\nconst ReportSummaryDetails = injectIntl(ReportSummaryDetailsBase);\nexport default ReportSummaryDetails;\n","import './reportSummaryItem.scss';\nimport { Progress, ProgressSize } from '@patternfly/react-core';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { formatCurrency, formatPercentage, unitsLookupKey } from 'utils/format';\nconst ReportSummaryItemBase = ({ intl = defaultIntl, // Default required for testing\nlabel, totalValue, units, value, formatOptions, }) => {\n    const unitsLabel = intl.formatMessage(messages.units, { units: unitsLookupKey(units) });\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = formatPercentage(percent);\n    const percentLabel = intl.formatMessage(messages.percentTotalCost, {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatCurrency(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: \"reportSummaryItem\" },\n        React.createElement(Progress, { label: percentLabel, value: Number(percent), title: label, size: ProgressSize.sm })));\n};\nconst ReportSummaryItem = injectIntl(ReportSummaryItemBase);\nexport default ReportSummaryItem;\n","import './reportSummaryItems.scss';\nimport { Skeleton } from '@patternfly/react-core';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { getComputedReportItems } from 'routes/utils/computedReport/getComputedReportItems';\nimport { skeletonWidth } from 'routes/utils/skeleton';\nimport { FetchStatus } from 'store/common';\nclass ReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report || nextProps.costDistribution !== this.props.costDistribution;\n    }\n    getItems() {\n        const { idKey, report } = this.props;\n        const computedItems = getComputedReportItems({\n            report,\n            idKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id === 'Other' || id === 'Others';\n            }\n        });\n        if (otherIndex !== -1) {\n            return [...computedItems.slice(0, otherIndex), ...computedItems.slice(otherIndex + 1), computedItems[otherIndex]];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === FetchStatus.inProgress) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { width: skeletonWidth.md }),\n                React.createElement(Skeleton, { className: \"skeleton\", width: skeletonWidth.md }),\n                React.createElement(Skeleton, { className: \"skeleton\", width: skeletonWidth.md }),\n                React.createElement(Skeleton, { className: \"skeleton\", width: skeletonWidth.md })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst ReportSummaryItems = injectIntl(ReportSummaryItemsBase);\nexport default ReportSummaryItems;\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentCostData: {\n        fill: 'none',\n    },\n    currentInfrastructureColorScale: [\n        chart_color_blue_400.value,\n        chart_color_blue_300.value,\n        chart_color_blue_200.value,\n        chart_color_blue_100.value,\n        chart_color_blue_500.value,\n    ],\n    currentInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    forecastConeData: {\n        fill: chart_color_green_100.value,\n        strokeWidth: 0,\n    },\n    forecastConeDataColorScale: [chart_color_green_100.value],\n    forecastData: {\n        fill: 'none',\n    },\n    forecastDataColorScale: [chart_color_green_200.value],\n    forecastInfrastructureConeData: {\n        fill: chart_color_blue_100.value,\n        strokeWidth: 0,\n    },\n    forecastInfrastructureConeDataColorScale: [chart_color_blue_100.value],\n    forecastInfrastructureData: {\n        fill: 'none',\n    },\n    forecastInfrastructureDataColorScale: [chart_color_blue_200.value],\n    previousCostData: {\n        fill: 'none',\n    },\n    previousInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'routes/components/charts/common/chart.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title, TitleSizes } from '@patternfly/react-core';\nimport { getDate } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { default as ChartTheme } from 'routes/components/charts/chartTheme';\nimport { getCostRangeString, getCostRangeTooltip, getDateRange } from 'routes/components/charts/common/chartDatum';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'routes/components/charts/common/chartUtils';\nimport { noop } from 'routes/utils/noop';\nimport { chartStyles } from './costChart.styles';\nclass CostChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentCostData, forecastConeData, forecastData, previousCostData, showForecast } = this.props;\n            const costKey = messages.chartCostLegendLabel;\n            const costTooltipKey = messages.chartCostLegendTooltip;\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1, messages.chartCostLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeTooltip(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousCostData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false, 0, messages.chartCostLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeTooltip(currentCostData, costTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentCostData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: forecastData,\n                    legendItem: {\n                        name: getCostRangeString(forecastData, messages.chartCostForecastLegendLabel, false, false, 0, messages.chartCostForecastLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeTooltip(forecastData, messages.chartCostForecastLegendTooltip, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastData), { stroke: chartStyles.forecastDataColorScale[0] }),\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: forecastConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, messages.chartCostForecastConeLegendLabel, false, false, 0, messages.chartCostForecastConeLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleLeft',\n                        },\n                        tooltip: getCostRangeTooltip(forecastConeData, messages.chartCostForecastConeLegendTooltip, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastConeData), { stroke: chartStyles.forecastConeDataColorScale[0] }),\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    if (width > 675 && width < 1175) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width > 450 && width < 675) {\n                        adjustedContainerHeight += 50;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 75;\n                    }\n                }\n                else {\n                    if (width > 450 && width < 725) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 50;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatter, formatOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatter, formatOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { name = '' } = this.props;\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, name: `${name}-legend`, responsive: false }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { name = '' } = this.props;\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: `${name}-legend`,\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    getEndDate() {\n        const { currentCostData, forecastData, previousCostData } = this.props;\n        const currentCostDate = currentCostData ? getDate(getDateRange(currentCostData, true, true)[1]) : 0;\n        const forecastCostDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        const previousUsageDate = previousCostData ? getDate(getDateRange(previousCostData, true, true)[1]) : 0;\n        return currentCostDate > 0 || previousUsageDate > 0\n            ? Math.max(currentCostDate, forecastCostDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { height, intl, name, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const lastDate = this.getEndDate();\n        const half = Math.floor(lastDate / 2);\n        const _1stDay = 1;\n        const _2ndDay = _1stDay + Math.floor(half / 2);\n        const _3rdDay = _1stDay + half;\n        const _4thDay = lastDate - Math.floor(half / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => intl.formatMessage(messages.chartDayOfTheMonth, { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            title && (React.createElement(Title, { headingLevel: \"h3\", size: TitleSizes.md }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", name: name, padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [_1stDay, _2ndDay, _3rdDay, _4thDay, lastDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nconst CostChart = injectIntl(CostChartBase);\nexport default CostChart;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport './reportSummaryCost.scss';\nimport React from 'react';\nimport { CostChart } from 'routes/components/charts/costChart';\nconst ReportSummaryCost = (_a) => {\n    var { chartName } = _a, rest = __rest(_a, [\"chartName\"]);\n    return (React.createElement(\"div\", { className: \"chart\" },\n        React.createElement(CostChart, Object.assign({ name: chartName }, rest))));\n};\nexport default ReportSummaryCost;\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { chart_color_orange_300 } from '@patternfly/react-tokens/dist/js/chart_color_orange_300';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentInfrastructureColorScale: [\n        chart_color_blue_400.value,\n        chart_color_blue_300.value,\n        chart_color_blue_200.value,\n        chart_color_blue_100.value,\n        chart_color_blue_500.value,\n    ],\n    currentInfrastructureCostData: {\n        strokeDasharray: '3,3',\n    },\n    forecastConeDataColorScale: [chart_color_orange_300.value],\n    forecastDataColorScale: [chart_color_green_200.value],\n    forecastInfrastructureConeDataColorScale: [chart_color_orange_300.value],\n    forecastInfrastructureDataColorScale: [chart_color_blue_200.value],\n    previousInfrastructureCostData: {\n        strokeDasharray: '3,3',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'routes/components/charts/common/chart.scss';\nimport { Chart, ChartAxis, ChartBar, ChartGroup, ChartLegend, ChartLegendTooltip, ChartLine, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title, TitleSizes } from '@patternfly/react-core';\nimport { getDate } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { default as ChartTheme } from 'routes/components/charts/chartTheme';\nimport { getCostRangeString, getCostRangeTooltip, getDateRange } from 'routes/components/charts/common/chartDatum';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isDataHidden, isSeriesHidden, } from 'routes/components/charts/common/chartUtils';\nimport { noop } from 'routes/utils/noop';\nimport { chartStyles } from './dailyCostChart.styles';\nclass DailyCostChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentCostData, forecastConeData, forecastData, previousCostData, showForecast } = this.props;\n            const costKey = messages.chartCostLegendLabel;\n            const costTooltipKey = messages.chartCostLegendTooltip;\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: this.initDatumChildName(previousCostData, 'previousCost'),\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1, messages.chartCostLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeTooltip(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    isLine: true,\n                    style: {\n                        data: {\n                            stroke: chartStyles.previousColorScale[0],\n                        },\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: this.initDatumChildName(currentCostData, 'currentCost'),\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false, 0, messages.chartCostLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeTooltip(currentCostData, costTooltipKey, false, false),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.currentColorScale[0],\n                        },\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: this.initDatumChildName(forecastData, 'forecast'),\n                    legendItem: {\n                        name: getCostRangeString(forecastData, messages.chartCostForecastLegendLabel, false, false, 0, messages.chartCostForecastLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeTooltip(forecastData, messages.chartCostForecastLegendTooltip, false, false),\n                    },\n                    isBar: true,\n                    isForecast: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                        },\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: this.initDatumChildName(forecastConeData, 'forecastCone'),\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, messages.chartCostForecastConeLegendLabel, false, false, 0, messages.chartCostForecastConeLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleLeft',\n                        },\n                        tooltip: getCostRangeTooltip(forecastConeData, messages.chartCostForecastConeLegendTooltip, false, false),\n                    },\n                    isForecast: true,\n                    isLine: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                        },\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        // Adds a child name to help identify hidden data series\n        this.initDatumChildName = (data, childName) => {\n            data.map(datum => (datum.childName = childName));\n            return data;\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    if (width > 675 && width < 1175) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width > 450 && width < 675) {\n                        adjustedContainerHeight += 50;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 75;\n                    }\n                }\n                else {\n                    if (width > 450 && width < 725) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 50;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (!series.isForecast) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                if (series.isBar) {\n                    return (React.createElement(ChartBar, { alignment: \"middle\", data: data, key: series.childName, name: series.childName, style: series.style }));\n                }\n                else if (series.isLine) {\n                    return React.createElement(ChartLine, { data: data, key: series.childName, name: series.childName, style: series.style });\n                }\n            }\n            return null;\n        };\n        this.getForecastBarChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (series.isForecast && series.isBar) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                return (React.createElement(ChartBar, { alignment: \"middle\", data: data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        this.getForecastLineChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (series.isForecast && series.isLine) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                return (React.createElement(ChartBar, { alignment: \"middle\", barWidth: 1, data: data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatter, formatOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatter, formatOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { name = '' } = this.props;\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, name: `${name}-legend`, responsive: false }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentCostData, forecastData, previousCostData } = this.props;\n        const currentCostDate = currentCostData ? getDate(getDateRange(currentCostData, true, true)[1]) : 0;\n        const forecastCostDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        const previousUsageDate = previousCostData ? getDate(getDateRange(previousCostData, true, true)[1]) : 0;\n        return currentCostDate > 0 || previousUsageDate > 0\n            ? Math.max(currentCostDate, forecastCostDate, previousUsageDate)\n            : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { name = '' } = this.props;\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isDataHidden: data => isDataHidden(series, hiddenSeries, data),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: `${name}-legend`,\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, intl, name, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const lastDate = this.getEndDate();\n        const half = Math.floor(lastDate / 2);\n        const _1stDay = 1;\n        const _2ndDay = _1stDay + Math.floor(half / 2);\n        const _3rdDay = _1stDay + half;\n        const _4thDay = lastDate - Math.floor(half / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => intl.formatMessage(messages.chartDayOfTheMonth, { day: datum.x }) })),\n            })\n            : undefined;\n        // Note: For tooltip values to match properly, chart groups must be rendered in the order given as legend data\n        return (React.createElement(React.Fragment, null,\n            title && (React.createElement(Title, { headingLevel: \"h3\", size: TitleSizes.md }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", name: name, padding: padding, theme: ChartTheme, width: width },\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 5.5 }, series.map((s, index) => this.getChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 5.5 }, series.map((s, index) => this.getForecastBarChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 5.5 }, series.map((s, index) => this.getForecastLineChart(s, index)))),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [_1stDay, _2ndDay, _3rdDay, _4thDay, lastDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nconst DailyCostChart = injectIntl(DailyCostChartBase);\nexport default DailyCostChart;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport './reportSummaryDailyCost.scss';\nimport React from 'react';\nimport { DailyCostChart } from 'routes/components/charts/dailyCostChart';\nconst ReportSummaryDailyCost = (_a) => {\n    var { chartName } = _a, rest = __rest(_a, [\"chartName\"]);\n    return (React.createElement(\"div\", { className: \"chart\" },\n        React.createElement(DailyCostChart, Object.assign({ name: chartName }, rest))));\n};\nexport default ReportSummaryDailyCost;\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { chart_color_orange_300 } from '@patternfly/react-tokens/dist/js/chart_color_orange_300';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    forecastConeDataColorScale: [chart_color_orange_300.value],\n    forecastDataColorScale: [chart_color_green_200.value],\n    itemsPerRow: 4,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'routes/components/charts/common/chart.scss';\nimport { Chart, ChartAxis, ChartBar, ChartGroup, ChartLegend, ChartLegendTooltip, ChartLine, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title, TitleSizes } from '@patternfly/react-core';\nimport { getDate } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { default as ChartTheme } from 'routes/components/charts/chartTheme';\nimport { getCostRangeString, getCostRangeTooltip, getDateRange } from 'routes/components/charts/common/chartDatum';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isDataHidden, isSeriesHidden, } from 'routes/components/charts/common/chartUtils';\nimport { noop } from 'routes/utils/noop';\nimport { chartStyles } from './dailyTrendChart.styles';\nclass DailyTrendChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, forecastData, forecastConeData, previousData, showForecast, showSupplementaryLabel = false, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? messages.chartUsageLegendLabel\n                : showSupplementaryLabel\n                    ? messages.chartCostSupplementaryLegendLabel\n                    : messages.chartCostLegendLabel;\n            const tooltipKey = showUsageLegendLabel\n                ? messages.chartUsageLegendTooltip\n                : showSupplementaryLabel\n                    ? messages.chartCostSupplementaryLegendTooltip\n                    : messages.chartCostLegendTooltip;\n            const noDataKey = showUsageLegendLabel\n                ? messages.chartUsageLegendNoDataLabel\n                : showSupplementaryLabel\n                    ? messages.chartCostSupplementaryLegendNoDataLabel\n                    : messages.chartCostLegendNoDataLabel;\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: this.initDatumChildName(previousData, 'previousCost'),\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1, noDataKey),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeTooltip(previousData, tooltipKey, false, false, 1),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.previousColorScale[0],\n                        },\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: this.initDatumChildName(currentData, 'currentCost'),\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false, 0, noDataKey),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeTooltip(currentData, tooltipKey, false, false),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.currentColorScale[0],\n                        },\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: this.initDatumChildName(forecastData, 'forecast'),\n                    legendItem: {\n                        name: getCostRangeString(forecastData, messages.chartCostForecastLegendLabel, false, false, 0, messages.chartCostForecastLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeTooltip(forecastData, messages.chartCostForecastLegendTooltip, false, false),\n                    },\n                    isBar: true,\n                    isForecast: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                        },\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: this.initDatumChildName(forecastConeData, 'forecastCone'),\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, messages.chartCostForecastConeLegendLabel, false, false, 0, messages.chartCostForecastConeLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeTooltip(forecastConeData, messages.chartCostForecastConeLegendTooltip, false, false),\n                    },\n                    isForecast: true,\n                    isLine: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                        },\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        // Adds a child name to help identify hidden data series\n        this.initDatumChildName = (data, childName) => {\n            data.map(datum => (datum.childName = childName));\n            return data;\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast, showSupplementaryLabel, } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    const maxWidth = showSupplementaryLabel ? 850 : 725;\n                    if (width < maxWidth) {\n                        adjustedContainerHeight += 25;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (!series.isForecast) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                if (series.isBar) {\n                    return (React.createElement(ChartBar, { alignment: \"middle\", data: data, key: series.childName, name: series.childName, style: series.style }));\n                }\n                else if (series.isLine) {\n                    return React.createElement(ChartLine, { data: data, key: series.childName, name: series.childName, style: series.style });\n                }\n            }\n            return null;\n        };\n        this.getForecastBarChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (series.isForecast && series.isBar) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                return (React.createElement(ChartBar, { alignment: \"middle\", data: data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        this.getForecastLineChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (series.isForecast && series.isLine) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                return (React.createElement(ChartBar, { alignment: \"middle\", barWidth: 1, data: data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatter, formatOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatter, formatOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 50,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow, name = '' } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), gutter: 20, height: 25, itemsPerRow: legendItemsPerRow, name: `${name}-legend`, orientation: width > 150 ? 'horizontal' : 'vertical' }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentData, forecastData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        const forecastDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0 ? Math.max(currentDate, forecastDate, previousDate) : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { name = '' } = this.props;\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isDataHidden: data => isDataHidden(series, hiddenSeries, data),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: `${name}-legend`,\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, intl, name, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const lastDate = this.getEndDate();\n        const half = Math.floor(lastDate / 2);\n        const _1stDay = 1;\n        const _2ndDay = _1stDay + Math.floor(half / 2);\n        const _3rdDay = _1stDay + half;\n        const _4thDay = lastDate - Math.floor(half / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => intl.formatMessage(messages.chartDayOfTheMonth, { day: datum.x }) })),\n            })\n            : undefined;\n        // Note: For tooltip values to match properly, chart groups must be rendered in the order given as legend data\n        return (React.createElement(React.Fragment, null,\n            title && (React.createElement(Title, { headingLevel: \"h3\", size: TitleSizes.md }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", name: name, padding: padding, theme: ChartTheme, width: width },\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 11 }, series.map((s, index) => this.getChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 11 },\n                            React.createElement(ChartBar, { data: [{ y: null }], name: \"forcast_spacer\" }),\n                            series.map((s, index) => this.getForecastBarChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 11 },\n                            React.createElement(ChartBar, { data: [{ y: null }], name: \"forcast_cone_spacer\" }),\n                            series.map((s, index) => this.getForecastLineChart(s, index)))),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [_1stDay, _2ndDay, _3rdDay, _4thDay, lastDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nconst DailyTrendChart = injectIntl(DailyTrendChartBase);\nexport default DailyTrendChart;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport './reportSummaryDailyTrend.scss';\nimport React from 'react';\nimport { DailyTrendChart } from 'routes/components/charts/dailyTrendChart';\nconst ReportSummaryDailyTrend = (_a) => {\n    var { chartName } = _a, rest = __rest(_a, [\"chartName\"]);\n    return (React.createElement(\"div\", { className: \"chart\" },\n        React.createElement(DailyTrendChart, Object.assign({ name: chartName }, rest))));\n};\nexport default ReportSummaryDailyTrend;\n","import chart_color_black_200 from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport chart_color_green_100 from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport chart_color_green_200 from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport chart_color_green_300 from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_green_500 from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentMonthData: {\n        fill: 'none',\n    },\n    forecastConeData: {\n        fill: chart_color_green_100.value,\n        strokeWidth: 0,\n    },\n    forecastConeDataColorScale: [chart_color_green_100.value],\n    forecastData: {\n        fill: 'none',\n    },\n    forecastDataColorScale: [chart_color_green_200.value],\n    itemsPerRow: 4,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    previousMonthData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'routes/components/charts/common/chart.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title, TitleSizes } from '@patternfly/react-core';\nimport { getDate } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { default as ChartTheme } from 'routes/components/charts/chartTheme';\nimport { getCostRangeString, getCostRangeTooltip, getDateRange } from 'routes/components/charts/common/chartDatum';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'routes/components/charts/common/chartUtils';\nimport { noop } from 'routes/utils/noop';\nimport { chartStyles } from './trendChart.styles';\nclass TrendChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, forecastData, forecastConeData, previousData, showForecast, showSupplementaryLabel = false, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? messages.chartUsageLegendLabel\n                : showSupplementaryLabel\n                    ? messages.chartCostSupplementaryLegendLabel\n                    : messages.chartCostLegendLabel;\n            const tooltipKey = showUsageLegendLabel\n                ? messages.chartUsageLegendTooltip\n                : showSupplementaryLabel\n                    ? messages.chartCostSupplementaryLegendTooltip\n                    : messages.chartCostLegendTooltip;\n            const noDataKey = showUsageLegendLabel\n                ? messages.chartUsageLegendNoDataLabel\n                : showSupplementaryLabel\n                    ? messages.chartCostSupplementaryLegendNoDataLabel\n                    : messages.chartCostLegendNoDataLabel;\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousData,\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1, noDataKey),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeTooltip(previousData, tooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousMonthData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentData,\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false, 0, noDataKey),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeTooltip(currentData, tooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentMonthData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: forecastData,\n                    legendItem: {\n                        name: getCostRangeString(forecastData, messages.chartCostForecastLegendLabel, false, false, 0, messages.chartCostForecastLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeTooltip(forecastData, messages.chartCostForecastLegendTooltip, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastData), { stroke: chartStyles.forecastDataColorScale[0] }),\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: forecastConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, messages.chartCostForecastConeLegendLabel, false, false, 0, messages.chartCostForecastConeLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleLeft',\n                        },\n                        tooltip: getCostRangeTooltip(forecastConeData, messages.chartCostForecastConeLegendTooltip, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastConeData), { stroke: chartStyles.forecastConeDataColorScale[0] }),\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast, showSupplementaryLabel, } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    const maxWidth = showSupplementaryLabel ? 900 : 725;\n                    if (width < maxWidth) {\n                        adjustedContainerHeight += 25;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatter, formatOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatter, formatOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 50,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { name = '', legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), gutter: 20, height: 25, itemsPerRow: legendItemsPerRow, name: `${name}-legend`, orientation: width > 150 ? 'horizontal' : 'vertical' }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentData, forecastData, forecastConeData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        const forecastDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        const forecastConeDate = forecastConeData ? getDate(getDateRange(forecastConeData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0\n            ? Math.max(currentDate, forecastDate, forecastConeDate, previousDate)\n            : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { name = '' } = this.props;\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: `${name}-legend`,\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, intl, name, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => intl.formatMessage(messages.chartDayOfTheMonth, { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            (title === null || title === void 0 ? void 0 : title.length) && (React.createElement(Title, { headingLevel: \"h3\", size: TitleSizes.md }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width }, \"data-testid\": \"trend-chart-wrapper\" },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", name: name, padding: padding, theme: ChartTheme, title: title || 'Trend Chart', width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nconst TrendChart = injectIntl(TrendChartBase);\nexport default TrendChart;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport './reportSummaryTrend.scss';\nimport React from 'react';\nimport { TrendChart } from 'routes/components/charts/trendChart';\nconst ReportSummaryTrend = (_a) => {\n    var { chartName } = _a, rest = __rest(_a, [\"chartName\"]);\n    return (React.createElement(\"div\", { className: \"chart\" },\n        React.createElement(TrendChart, Object.assign({ name: chartName }, rest))));\n};\nexport default ReportSummaryTrend;\n","import chart_color_black_200 from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport chart_color_green_100 from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport chart_color_green_200 from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport chart_color_green_300 from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_green_500 from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const chartStyles = {\n    chartContainer: {\n        marginTop: global_spacer_lg.value,\n    },\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_green_300.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_green_400.value,\n        },\n    },\n    itemsPerRow: 2,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        chart_color_black_200.value,\n        chart_color_green_400.value,\n        chart_color_black_200.value,\n        chart_color_green_300.value,\n    ],\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_black_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_black_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    // TBD: No grey scale, yet\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'routes/components/charts/common/chart.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title, TitleSizes } from '@patternfly/react-core';\nimport { getDate } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { default as ChartTheme } from 'routes/components/charts/chartTheme';\nimport { getDateRange, getUsageRangeString, getUsageRangeTooltip } from 'routes/components/charts/common/chartDatum';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'routes/components/charts/common/chartUtils';\nimport { noop } from 'routes/utils/noop';\nimport { chartStyles } from './usageChart.styles';\nclass UsageChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n            const usageKey = messages.chartUsageLegendLabel;\n            const usageTooltipKey = messages.chartUsageLegendTooltip;\n            const requestKey = messages.chartRequestsLegendLabel;\n            const requestTooltipKey = messages.chartRequestsLegendTooltip;\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousUsage',\n                    data: previousUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(previousUsageData, usageKey, true, true, 1, messages.chartUsageLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeTooltip(previousUsageData, usageTooltipKey, false, false, 1),\n                    },\n                    style: chartStyles.previousUsageData,\n                },\n                {\n                    childName: 'currentUsage',\n                    data: currentUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(currentUsageData, usageKey, true, false, 0, messages.chartUsageLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[1],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeTooltip(currentUsageData, usageTooltipKey, false, false),\n                    },\n                    style: chartStyles.currentUsageData,\n                },\n                {\n                    childName: 'previousRequest',\n                    data: previousRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(previousRequestData, requestKey, true, true, 1, messages.chartRequestsLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[2],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeTooltip(previousRequestData, requestTooltipKey, false, false, 1),\n                    },\n                    style: chartStyles.previousRequestData,\n                },\n                {\n                    childName: 'currentRequest',\n                    data: currentRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(currentRequestData, requestKey, true, false, 0, messages.chartRequestsLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[3],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeTooltip(currentRequestData, requestTooltipKey, false, false),\n                    },\n                    style: chartStyles.currentRequestData,\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (width < 480) {\n                    adjustedContainerHeight += 20;\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatter, formatOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatter, formatOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { name = '', legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 300 ? chartStyles.itemsPerRow : 1;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: `${name}-legend` }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n        const currentRequestDate = currentRequestData ? getDate(getDateRange(currentRequestData, true, true)[1]) : 0;\n        const currentUsageDate = currentUsageData ? getDate(getDateRange(currentUsageData, true, true)[1]) : 0;\n        const previousRequestDate = previousRequestData ? getDate(getDateRange(previousRequestData, true, true)[1]) : 0;\n        const previousUsageDate = previousUsageData ? getDate(getDateRange(previousUsageData, true, true)[1]) : 0;\n        return currentRequestDate > 0 || currentUsageDate > 0 || previousRequestDate > 0 || previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { name = '' } = this.props;\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: `${name}-legend`,\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, intl, name, padding = {\n            bottom: 75,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => intl.formatMessage(messages.chartDayOfTheMonth, { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            (title === null || title === void 0 ? void 0 : title.length) && (React.createElement(Title, { headingLevel: \"h3\", size: TitleSizes.md }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width }, \"data-testid\": \"usage-chart-wrapper\" },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", name: name, padding: padding, theme: ChartTheme, title: title || 'Usage Chart', width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nconst UsageChart = injectIntl(UsageChartBase);\nexport default UsageChart;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport './reportSummaryUsage.scss';\nimport React from 'react';\nimport { UsageChart } from 'routes/components/charts/usageChart';\nconst ReportSummaryUsage = (_a) => {\n    var { chartName } = _a, rest = __rest(_a, [\"chartName\"]);\n    return (React.createElement(\"div\", { className: \"chart\" },\n        React.createElement(UsageChart, Object.assign({ name: chartName }, rest))));\n};\nexport default ReportSummaryUsage;\n","import './emptyValueState.scss';\nimport { MinusIcon } from '@patternfly/react-icons/dist/esm/icons/minus-icon';\nimport React from 'react';\nconst EmptyValueState = () => {\n    return (React.createElement(\"span\", { className: \"emptyValueContainer\" },\n        React.createElement(MinusIcon, null)));\n};\nexport default EmptyValueState;\n","export const skeletonWidth = {\n    xs: '16%',\n    sm: '33%',\n    md: '66%',\n    lg: '100%',\n};\n"],"names":["LAYOUT_PROPS","padding","area","Object","assign","axis","bar","boxplot","candlestick","chart","errorbar","group","legend","line","pie","scatter","stack","tooltip","voronoi","ChartTheme","default","injectIntl","children","detailsLink","title","subTitle","status","Card","className","CardTitle","Title","headingLevel","size","TitleSizes","lg","CardBody","inProgress","Skeleton","width","skeleton","md","xs","CardFooter","tabs","Grid","hasGutter","GridItem","xl","chartType","computedReportItem","computedReportItemValue","costLabel","formatOptions","intl","report","requestFormatOptions","requestLabel","reportType","showTooltip","showUnits","showUsageFirst","units","usageFormatOptions","usageLabel","cost","supplementaryCost","infrastructureCost","request","usage","hasTotal","meta","total","hasCost","hasCount","count","hasSupplementaryCost","supplementary","value","hasInfrastructureCost","infrastructure","hasRequest","hasUsage","format","undefined","getCostLayout","showAltHeroFont","altHeroFont","Tooltip","content","formatMessage","messages","dashboardTotalCostTooltip","enableFlip","getRequestLayout","usageUnits","unitsLabel","getUsageLayout","_units","dailyCost","dailyTrend","trend","label","totalValue","percent","percentVal","percentLabel","percentTotalCost","Progress","Number","ProgressSize","sm","ReportSummaryItemsBase","shouldComponentUpdate","nextProps","this","props","costDistribution","getItems","idKey","computedItems","getComputedReportItems","otherIndex","findIndex","i","id","slice","render","items","chartStyles","currentColorScale","chart_color_green_400","chart_color_green_300","chart_color_green_200","chart_color_green_100","chart_color_green_500","currentCostData","fill","currentInfrastructureColorScale","chart_color_blue_400","chart_color_blue_300","chart_color_blue_200","chart_color_blue_100","chart_color_blue_500","currentInfrastructureCostData","strokeDasharray","forecastConeData","strokeWidth","forecastConeDataColorScale","forecastData","forecastDataColorScale","forecastInfrastructureConeData","forecastInfrastructureConeDataColorScale","forecastInfrastructureData","forecastInfrastructureDataColorScale","previousCostData","previousInfrastructureCostData","previousColorScale","chart_color_black_200","yAxis","axisLabel","grid","stroke","ticks","tickLabels","fontSize","xAxis","CostChartBase","constructor","super","arguments","containerRef","observer","noop","state","hiddenSeries","Set","initDatum","showForecast","costKey","chartCostLegendLabel","costTooltipKey","chartCostLegendTooltip","series","childName","data","legendItem","name","chartCostLegendNoDataLabel","symbol","type","style","push","chartCostForecastLegendLabel","chartCostForecastLegendNoDataLabel","chartCostForecastLegendTooltip","chartCostForecastConeLegendLabel","chartCostForecastConeLegendNoDataLabel","chartCostForecastConeLegendTooltip","cursorVoronoiContainer","getCursorVoronoiContainer","setState","getAdjustedContainerHeight","adjustContainerHeight","height","containerHeight","adjustedContainerHeight","getChart","index","ChartArea","has","y","interpolation","key","formatter","CursorVoronoiContainer","cursorDimension","labels","datum","mouseFollowTooltips","voronoiDimension","voronoiPadding","bottom","left","right","top","getLegend","ChartLegend","gutter","responsive","handleLegendClick","handleResize","clientWidth","current","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","getEvents","chartNames","isHidden","legendName","onLegendClick","getEndDate","currentCostDate","getDate","forecastCostDate","previousUsageDate","Math","max","domain","ge","lastDate","half","floor","_2ndDay","_3rdDay","_4thDay","container","disable","labelComponent","ChartLegendTooltip","legendData","chartDayOfTheMonth","day","x","ref","Chart","containerComponent","events","legendAllowWrap","legendComponent","legendPosition","theme","map","s","ChartAxis","C","tickValues","dependentAxis","_a","chartName","rest","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","length","propertyIsEnumerable","__rest","chart_color_orange_300","DailyCostChartBase","initDatumChildName","isLine","isBar","isForecast","ChartBar","alignment","ChartLine","getForecastBarChart","getForecastLineChart","barWidth","isDataHidden","ChartGroup","offset","itemsPerRow","DailyTrendChartBase","currentData","previousData","showSupplementaryLabel","showUsageLegendLabel","chartUsageLegendLabel","chartCostSupplementaryLegendLabel","tooltipKey","chartUsageLegendTooltip","chartCostSupplementaryLegendTooltip","noDataKey","chartUsageLegendNoDataLabel","chartCostSupplementaryLegendNoDataLabel","legendItemsPerRow","orientation","previousDate","currentDate","forecastDate","currentMonthData","previousMonthData","TrendChartBase","forecastConeDate","endDate","midDate","chartContainer","marginTop","currentRequestData","currentUsageData","legendColorScale","previousRequestData","previousUsageData","UsageChartBase","usageKey","usageTooltipKey","requestKey","chartRequestsLegendLabel","requestTooltipKey","chartRequestsLegendTooltip","chartRequestsLegendNoDataLabel","currentRequestDate","currentUsageDate","previousRequestDate","skeletonWidth"],"sourceRoot":""}