{"version":3,"file":"js/explorer.1668536785906.1ba0654c6e55bb050577.js","mappings":"4IAEO,MAAMA,EAAuB,CAClCC,KAAM,iBACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,43BACTC,QAAS,EACTC,QAAS,GAGEC,GAAiB,QAAWP,E,6BCTzCQ,EAAQ,GAAuB,CAC7B,KAAQ,4BACR,MAAS,UACT,IAAO,2CAEYA,EAAQ,E,6BCL7BA,EAAQ,GAAuB,CAC7B,KAAQ,4BACR,MAAS,UACT,IAAO,2CAEYA,EAAQ,E,6BCL7BA,EAAQ,GAAyB,CAC/B,KAAQ,8BACR,MAAS,UACT,IAAO,6CAEYA,EAAQ,E,6BCL7BA,EAAQ,GAAmB,CACzB,KAAQ,0BACR,MAAS,UACT,IAAO,gCAETA,EAAA,GAAqBA,EAAQ,E,6BCL7BA,EAAQ,GAAmB,CACzB,KAAQ,0BACR,MAAS,UACT,IAAO,gCAETA,EAAA,GAAqBA,EAAQ,E,6BCL7BA,EAAQ,GAAqB,CAC3B,KAAQ,4BACR,MAAS,UACT,IAAO,kCAETA,EAAA,GAAqBA,EAAQ,E,6BCL7BA,EAAQ,GAA4B,CAClC,KAAQ,mCACR,MAAS,UACT,IAAO,yCAETA,EAAA,GAAqBA,EAAQ,E,6BCL7BA,EAAQ,GAAoB,CAC1B,KAAQ,2BACR,MAAS,OACT,IAAO,iCAETA,EAAA,GAAqBA,EAAQ,E,qFCPzBC,EAAsC,WAStC,OARAA,EAAWC,OAAOC,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KACzDN,EAAEM,GAAKL,EAAEK,IAEjB,OAAON,CACX,EACOH,EAASa,MAAMC,KAAMP,UAChC,EAQA,QAHkB,WACd,OAAQ,UAAM,EAAAQ,WAAYf,EAAS,CAAEgB,QAAS,EAAAC,kBAAA,MAAyBC,UAAW,mDAAqD,CAAEC,SAAU,EAAC,SAAK,EAAAC,eAAgB,CAAEC,KAAM,EAAAC,yBAA0B,SAAK,EAAAC,MAAOvB,EAAS,CAAEwB,aAAc,KAAMC,KAAM,MAAQ,CAAEN,SAAU,2CAA4C,UAAM,EAAAO,eAAgB,CAAEP,SAAU,CAAC,0GAA0G,UAAM,IAAKnB,EAAS,CAAE2B,KAAM,6BAA8BC,OAAQ,SAAUC,IAAK,uBAAyB,CAAEV,SAAU,CAAC,IAAK,kBAAoB,IAAK,2BAClmB,C,YCjBAW,EAAO/B,QAAU,SAASgC,EAAMC,EAAUC,EAAMC,GAC5C,IACIC,EAAO,IAAIC,UADgB,IAARF,EAAuB,CAACA,EAAKH,GAAQ,CAACA,GAC/B,CAACM,KAAMJ,GAAQ,6BAC7C,QAA2C,IAAhCK,OAAOC,UAAUC,WAKxBF,OAAOC,UAAUC,WAAWL,EAAMH,OAEjC,CACD,IAAIS,EAAWH,OAAOI,KAAOJ,OAAOI,IAAIC,gBAAmBL,OAAOI,IAAIC,gBAAgBR,GAAQG,OAAOM,UAAUD,gBAAgBR,GAC3HU,EAAWC,SAASC,cAAc,KACtCF,EAASG,MAAMC,QAAU,OACzBJ,EAASlB,KAAOc,EAChBI,EAASK,aAAa,WAAYlB,QAMD,IAAtBa,EAASM,UAChBN,EAASK,aAAa,SAAU,UAGpCJ,SAASM,KAAKC,YAAYR,GAC1BA,EAASS,QAGTC,YAAW,WACPT,SAASM,KAAKI,YAAYX,GAC1BP,OAAOI,IAAIe,gBAAgBhB,EAC/B,GAAG,IACP,CACJ,C,+DCjCO,SAASiB,EAAmBC,GAC/B,OAAO,IAAAC,WAAUD,EAAO,CAAEE,QAAQ,EAAOC,SAAS,GACtD,C,mHCFO,MAAMC,EAAS,CAClBC,oBAAqB,CACjBf,QAAS,OACTgB,WAAY,UAEhBC,iBAAkB,CACdC,aAAc,EACdC,Y,SAAa,OACbC,WAAY,UAEhBC,uBAAwB,CACpBH,aAAc,EACdI,WAAY,EACZC,UAAW,ICTnB,MAAMC,UAA8B,cAChCC,cACIC,SAASpE,WACTO,KAAK8D,aAAe,CAChBC,cAAc,GAElB/D,KAAKgE,MAAQ7E,OAAOC,OAAO,CAAC,EAAGY,KAAK8D,cACpC9D,KAAKiE,iBAAmB,KACpB,MAAM,KAAEC,EAAI,QAAEC,GAAYnE,KAAKoE,MACzBC,EAAa,GAOnB,OANAF,EAAQG,KAAIC,IACRF,EAAWG,KAAK,CACZC,SAAU,IAAMP,EAAKQ,cAAcH,EAAOI,MAAO,CAAEC,MAAOL,EAAOK,QACjEA,MAAOL,EAAOK,OAChB,IAECP,CAAU,EAErBrE,KAAK6E,UAAY,KACb,MAAM,YAAEC,EAAW,KAAEZ,EAAI,WAAEa,EAAU,QAAEZ,GAAYnE,KAAKoE,OAClD,aAAEL,GAAiB/D,KAAKgE,MAC9B,GAAuB,IAAnBG,EAAQzE,OACR,OAAQ,kBAAoB,MAAO,CAAEwC,MAAOe,EAAOO,wBAA0BU,EAAKQ,cAAcP,EAAQ,GAAGQ,MAAO,CAAEC,MAAOT,EAAQ,GAAGS,SAE1I,MAAMI,EAAgBhF,KAAKiE,mBACrBgB,EAAYD,EAAcE,MAAMX,GAAWA,EAAOK,QAAUE,IAClE,OAAQ,kBAAoB,EAAAK,OAAQ,CAAEC,GAAI,oBAAqBL,WAAYA,EAAYM,OAAQtB,EAAcuB,SAAUtF,KAAKuF,aAAcC,SAAUxF,KAAKyF,aAAcpB,WAAYY,EAAW/E,QAAS,EAAAwF,cAAA,QAAwBV,EAAcV,KAAIC,GAAW,kBAAoB,EAAAoB,aAAc,CAAEC,IAAKrB,EAAOK,MAAOA,MAAOL,MAAa,EAE3UvE,KAAKuF,aAAe,CAACM,EAAOZ,KACxB,MAAM,WAAEa,GAAe9F,KAAKoE,MACxB0B,GACAA,EAAWb,EAAUL,OAEzB5E,KAAK+F,SAAS,CACVhC,cAAc,GAChB,EAEN/D,KAAKyF,aAAe1B,IAChB/D,KAAK+F,SAAS,CAAEhC,gBAAe,CAEvC,CACAiC,SACI,MAAM,KAAE9B,GAASlE,KAAKoE,MACtB,OAAQ,kBAAoB,MAAO,CAAElC,MAAOe,EAAOC,qBAC/C,kBAAoB,EAAAzC,MAAO,CAAEC,aAAc,KAAMC,KAAM,KAAMuB,MAAOe,EAAOG,kBAAoBc,EAAKQ,cAAcuB,EAAA,gBAClHjG,KAAK6E,YACb,EAEJ,MAAMqB,GAAoB,EAAAC,EAAA,IAAWxC,GChD/ByC,EAA2B,CAAC,CAAEzB,MAAOsB,EAAA,oBAA4BrB,MAAO,QAExEyB,EAA8B,CAAC,CAAE1B,MAAOsB,EAAA,oBAA4BrB,MAAO,YAE3E0B,EAA6B,CAAC,CAAE3B,MAAOsB,EAAA,oBAA4BrB,MAAO,UAE1E2B,EAA2B,CAAC,CAAE5B,MAAOsB,EAAA,oBAA4BrB,MAAO,QAExE4B,EAAgC,CAAC,CAAE7B,MAAOsB,EAAA,oBAA4BrB,MAAO,cAE7E6B,EAA2B,CAAC,CAAE9B,MAAOsB,EAAA,oBAA4BrB,MAAO,QAExE8B,EAA8B,CAAC,CAAE/B,MAAOsB,EAAA,oBAA4BrB,MAAO,YAE3E+B,EAA2B,CAAC,CAAEhC,MAAOsB,EAAA,oBAA4BrB,MAAO,QAExEgC,EAA8B,CAAC,CAAEjC,MAAOsB,EAAA,oBAA4BrB,MAAO,YAE3EiC,EAAgC,CAAC,CAAElC,MAAOsB,EAAA,oBAA4BrB,MAAO,cAE7EkC,EAAa,CAAC,CAAEnC,MAAOsB,EAAA,oBAA4BrB,MAAO,QAC1DmC,EAA2B,EAAGC,SAAQC,YAAWC,WAAUC,cAAaC,SAAQC,YAAWC,SAAQC,YAAWC,SAAQC,sBAAqBC,0BAC7I,MAAMvD,EAAU,GA4BhB,OA3BI6C,GACA7C,EAAQK,QAAQ4B,GAEhBa,GACA9C,EAAQK,QAAQ6B,GAEhBe,GACAjD,EAAQK,QAAQiC,GAEhBY,GACAlD,EAAQK,QAAQkC,GAEhBY,GACAnD,EAAQK,QAAQmC,GAEhBY,GAAaE,GACbtD,EAAQK,QAAQoC,GAEhBM,GACA/C,EAAQK,QAAQ8B,GAEhBa,GACAhD,EAAQK,QAAQgC,GAEhBgB,GAAUE,GACVvD,EAAQK,QAAQ+B,GAEbpC,CAAO,EAoDlB,GADoB,SAjDY,EAAGW,cAAakC,SAAQC,YAAWC,WAAUC,cAAaC,SAAQC,YAAWC,SAAQC,YAAWC,SAAQG,SAAQC,cAAa7C,aAAY0C,sBAAqBI,sBAAqBH,sBAAqB5B,iBAEpO,MAAM3B,EAAU,GA6ChB,YA5C4B2D,IAAxBD,EACIA,GACID,GACAzD,EAAQK,QAAQqC,GAEpB1C,EAAQK,QAAQuC,EAAyB,CACrCC,SACAC,YACAC,WACAC,cACAC,SACAC,YACAC,SACAC,YACAC,SACAC,sBACAC,0BAGCC,GACLxD,EAAQK,QAAQsC,IAIhBa,GACAxD,EAAQK,QAAQsC,GAEhBc,GACAzD,EAAQK,QAAQqC,GAEpB1C,EAAQK,QAAQuC,EAAyB,CACrCC,SACAC,YACAC,WACAC,cACAC,SACAC,YACAC,SACAC,YACAC,SACAC,sBACAC,0BAGA,kBAAoBxB,EAAmB,CAAEpB,YAAaA,GAAeX,EAAQ,GAAGS,MAAOG,WAAYA,EAAYe,WAAYA,EAAY3B,QAASA,GAAW,G,gVCxGhK,SAAS4D,EAAmBC,EAAU,CAAC,GAC1C,OAAIA,EAAQC,QACD,UAEPD,EAAQE,QACD,UAEPF,EAAQG,YACD,cAEPH,EAAQI,KACD,OAEPJ,EAAQK,YACD,cAEPL,EAAQM,gBACD,kBAEPN,EAAQO,gBACD,kBAEPP,EAAQQ,QACD,UAEPR,EAAQS,OACD,SAEPT,EAAQU,kBACD,oBAEPV,EAAQW,QACD,UAEPX,EAAQY,aACD,eAEPZ,EAAQa,kBACD,oBAEJ,MACX,C,iFCtCO,MAAM5F,EAAS,CAClB6F,eAAgB,CACZC,gBAAiBC,EAAA,SACjBvF,WAAYwF,EAAA,SACZ3F,YAAa2F,EAAA,SACbC,aAAcD,EAAA,SACdE,cAAeF,EAAA,SACfG,WAAYH,EAAA,UAEhBI,aAAc,CACVD,WAAYH,EAAA,UAEhBK,SAAU,CACNC,UAAW,QAEfC,oBAAqB,CACjB/F,WAAYwF,EAAA,SACZ3F,YAAa2F,EAAA,UAEjBQ,WAAY,CACRV,gBAAiBC,EAAA,SACjBG,cAAeO,EAAA,SACfN,WAAYM,EAAA,UAEhBC,eAAgB,CACZlG,WAAYwF,EAAA,SACZ3F,YAAa2F,EAAA,UAEjBW,aAAc,CACVT,cAAeF,EAAA,SACfG,WAAYH,EAAA,W,2aCvBpB,SAASY,GAAkBC,EAAKC,IAAkB,MAAPA,GAAeA,EAAMD,EAAIpK,UAAQqK,EAAMD,EAAIpK,QAAQ,IAAK,IAAIH,EAAI,EAAGyK,EAAO,IAAIC,MAAMF,GAAMxK,EAAIwK,EAAKxK,IAAOyK,EAAKzK,GAAKuK,EAAIvK,GAAM,OAAOyK,CAAM,CAMtL,SAASE,GAAQC,EAAQC,GAAkB,IAAIC,EAAOlL,OAAOkL,KAAKF,GAAS,GAAIhL,OAAOmL,sBAAuB,CAAE,IAAIC,EAAUpL,OAAOmL,sBAAsBH,GAASC,IAAmBG,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAOtL,OAAOuL,yBAAyBP,EAAQM,GAAKE,UAAY,KAAKN,EAAK7F,KAAKzE,MAAMsK,EAAME,EAAU,CAAE,OAAOF,CAAM,CAEpV,SAASO,GAAc9J,GAAU,IAAK,IAAIvB,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAAK,CAAE,IAAIsL,EAAS,MAAQpL,UAAUF,GAAKE,UAAUF,GAAK,CAAC,EAAGA,EAAI,EAAI2K,GAAQ/K,OAAO0L,IAAS,GAAIC,SAAQ,SAAUlF,GAAOmF,GAAgBjK,EAAQ8E,EAAKiF,EAAOjF,GAAO,IAAKzG,OAAO6L,0BAA4B7L,OAAO8L,iBAAiBnK,EAAQ3B,OAAO6L,0BAA0BH,IAAWX,GAAQ/K,OAAO0L,IAASC,SAAQ,SAAUlF,GAAOzG,OAAO+L,eAAepK,EAAQ8E,EAAKzG,OAAOuL,yBAAyBG,EAAQjF,GAAO,GAAI,CAAE,OAAO9E,CAAQ,CAEzf,SAASiK,GAAgBI,EAAKvF,EAAKhB,GAAiK,OAApJgB,KAAOuF,EAAOhM,OAAO+L,eAAeC,EAAKvF,EAAK,CAAEhB,MAAOA,EAAO+F,YAAY,EAAMS,cAAc,EAAMC,UAAU,IAAkBF,EAAIvF,GAAOhB,EAAgBuG,CAAK,CAKhN,IAAIG,GAAgB,CAClB1M,MAAO,IACPD,OAAQ,IACR4M,QAAS,IAqGX,SAASC,GAAUpH,EAAOqH,GACxB,IACIC,EADmB,MAA4BtH,EAAOqH,GACfnH,KAAI,SAAUqH,GACvD,OAAOA,EAAQnB,QAAO,SAAUoB,GAC9B,OAAoB,OAAbA,EAAMC,IAA4B,OAAbD,EAAME,EACpC,GACF,IACIC,EAzGN,SAAkB3H,EAAO2H,GACvB,IAAIC,EAAoB5H,EAAM4H,kBAC1BC,EAAOF,EAASG,QAAO,SAAUC,EAAMR,GAIzC,OAHAA,EAAQb,SAAQ,SAAUc,GACxBO,EAAKP,EAAMC,cAAcO,KAAOR,EAAMC,GAAGQ,UAAYT,EAAMC,KAAM,CACnE,IACOM,CACT,GAAG,CAAC,GAEAG,EAAQ,KAAML,GAAM3H,KAAI,SAAUiI,GACpC,OAAOC,OAAOD,EAChB,IAEIE,EAAO,KAASH,GAEpB,OAAOP,EAASzH,KAAI,SAAUqH,GAC5B,IAAIe,EAAc,EACdC,EAAShB,EAAQ,IAAMA,EAAQ,GAAGE,cAAcO,KAkCpD,OAjCmBK,EAAKnI,KAAI,SAAUsI,EAAGC,GACvCD,EAAIJ,OAAOI,GACX,IAAIhB,EAAQD,EAAQkB,EAAQH,GAE5B,GAAId,EAAO,CAGT,IAFSe,EAASf,EAAMC,GAAGQ,UAAYT,EAAMC,MAElCe,EACT,OAAOhB,EAGTc,IAEA,IAAIZ,EAAKE,EAAoB,EAAI,KAGjC,MAAO,CACLY,EAFFA,EAAID,EAAS,IAAIP,KAAKQ,GAAKA,EAGzBE,EAAGhB,EACHD,GAAIe,EACJd,GAAIA,EAER,CAEA,IAAIgB,EAAId,EAAoB,EAAI,KAEhC,MAAO,CACLY,EAFFA,EAAID,EAAS,IAAIP,KAAKQ,GAAKA,EAGzBE,EAAGA,EACHjB,GAAIe,EACJd,GAAIgB,EAER,GAEF,GACF,CAoDiBC,CAAS3I,EAAOsH,GAC/B,OAAOK,EAASzH,KAAI,SAAU0I,EAAGzN,GAC/B,OAvBJ,SAAuB6E,EAAO2H,EAAUc,GACtC,IAAI9N,EAAUqF,EAAMrF,SAAW,EAC/B,OAAOgN,EAASc,GAAOvI,KAAI,SAAUsH,GACnC,IAAI9M,EAhCR,SAAe8M,EAAOiB,EAAOd,GAC3B,GAAIH,EAAMqB,GACR,OAAOrB,EAAMqB,GAGf,IAAIH,EAAIlB,EAAME,GACVoB,EAAQtB,EAAMuB,OACdC,EAAuBrB,EAAS,GAAGzH,KAAI,SAAU0I,GACnD,OAAOA,EAAEC,EACX,IAEII,EADmBtB,EAASuB,MAAM,EAAGT,GACHX,QAAO,SAAUC,EAAMR,GAC3D,OAAOQ,EAAKoB,OAAO5B,EAAQnB,QAAO,SAAUgD,GAC1C,OAAO5B,EAAMC,cAAcO,KAAOoB,EAAc3B,GAAGQ,YAAcT,EAAMC,GAAGQ,UAAYmB,EAAc3B,KAAOD,EAAMC,EACnH,IAAGvH,KAAI,SAAUkJ,GACf,OAAOA,EAAc1B,IAAM,CAC7B,IACF,GAAG,IACCmB,EAAKI,EAAe3N,QAAU2N,EAAenB,QAAO,SAAUuB,EAAM7I,GAEtE,OADekI,EAAI,GAAKlI,EAAQ,GAAKkI,GAAK,GAAKlI,GAAS,EACtC4H,OAAO5H,GAAS6I,EAAOA,CAC3C,GAAGL,EAAqBF,IAAU,GAClC,OAAOG,EAAeK,MAAK,SAAUC,GACnC,OAAOA,aAAiBvB,IAC1B,IAAK,IAAIA,KAAKa,GAAMA,CACtB,CAOkBW,CAAMhC,EAAOiB,EAAOd,IAAa,EAC/C,OAAO,KAAQ,CAAC,EAAGH,EAAO,CACxBiC,IAAOjC,EAAME,cAAcM,KAAkBtN,EAAU,IAAIsN,KAAKtN,GAAW8M,EAAME,GAA9ChN,EACnCgP,IAAkB,OAAblC,EAAME,GAAc,KAAOF,EAAME,cAAcM,KAAO,IAAIA,KAAKI,OAAOZ,EAAME,IAAMU,OAAO1N,IAAY8M,EAAME,GAAKhN,EACrHiP,IAAkB,OAAbnC,EAAMC,GAAc,KAAOD,EAAMC,cAAcO,KAAO,IAAIA,KAAKI,OAAOZ,EAAMC,IAAMW,OAAOzN,IAAY6M,EAAMC,GAAK9M,GAEzH,GACF,CAaWiP,CAAc5J,EAAO2H,EAAUxM,EACxC,GACF,CAEO,SAAS0O,GAAmB7J,EAAOqH,GACxCA,EAAkBA,GAAmB,qBAAuBrH,EAAM/D,UAClE,IAAI6N,EAAO,QACX9J,EAAQ,MAAoBA,EAAOkH,GAAe4C,GAClD,IAAIhM,EAAQ,MAAiBkC,EAAM+J,MAAO/J,EAAMlC,MAAOgM,GACnDE,EAAahK,EAAMgK,YAAc,MAAsBhK,EAAOqH,GAC9DM,EAAW3H,EAAM2H,UAAYP,GAAUpH,EAAOqH,GAC9CpL,EAAWoL,EAAgBnH,KAAI,SAAU+J,EAAG9O,GAC9C,OAAoB,iBAAmB8O,EAAG,CACxCpN,KAAM8K,EAASxM,IAEnB,IACI+O,EAAS,CACX1B,EAAG,MAAkB,KAAQ,CAAC,EAAGxI,EAAO,CACtCgK,WAAYA,IACV,IAAK/N,GACTyM,EAAG,MAAkB,KAAQ,CAAC,EAAG1I,EAAO,CACtCgK,WAAYA,IACV,IAAK/N,IAEPkO,EAAQnK,EAAMmK,OAAS,CACzB3B,EAAG,MAAiBxI,EAAO,KAC3B0I,EAAG,MAAiB1I,EAAO,MAEzBoK,EAAY,CACd5B,EAAG,MAAwBxI,EAAO,MAAQ,MAAiBA,EAAO,KAClE0I,EAAG,MAAwB1I,EAAO,MAAQ,MAAiBA,EAAO,MAEhEqK,EAAQ,CACV7B,EAAG4B,EAAU5B,EAAE0B,OAAOA,EAAO1B,GAAG2B,MAAMnK,EAAMsK,WAAaH,EAAMzB,EAAIyB,EAAM3B,GACzEE,EAAG0B,EAAU1B,EAAEwB,OAAOA,EAAOxB,GAAGyB,MAAMnK,EAAMsK,WAAaH,EAAM3B,EAAI2B,EAAMzB,IAEvE6B,EAASvK,EACTwK,EAAaD,EAAOC,WACpBF,EAAaC,EAAOD,WACxB,MAAO,CACL3C,SAAUA,EACVqC,WAAYA,EACZG,MAAOA,EACPD,OAAQA,EACRI,WAAYA,EACZD,MAAOA,EACPvM,MAAOA,EACP0M,WAAYA,EACZV,KAAMA,EAEV,CAeO,SAASW,GAAiBC,GAC/B,IAxMsBhF,EAAKvK,EAwMvBwP,EAboB,SAAU3K,GAClC,IAAI/D,EAAW+D,EAAM/D,SACjB2O,EAAmB,qBAAuB3O,GAAUiE,KAAI,SAAU2K,GACpE,IAAIC,EAAQD,EACZ,OAAOrE,GAAcA,GAAc,CAAC,EAAGsE,GAAQ,CAAC,EAAG,CACjD9K,MAAO,MAAa8K,EAAM9K,MAAO,CAAC,kBAEtC,IAEA,OADAA,EAAM/D,SAAW2O,EACV5K,CACT,CAGsB+K,CAAoBL,GAGpCM,GA3MkBtF,EA0MA,aAAeiF,GA1MVxP,EA2M4B,EAjMzD,SAAyBuK,GAAO,GAAIG,MAAMoF,QAAQvF,GAAM,OAAOA,CAAK,CAV3BwF,CAAgBxF,IAQzD,SAA+BA,EAAKvK,GAAK,IAAIgQ,EAAY,MAAPzF,EAAc,KAAyB,oBAAX0F,QAA0B1F,EAAI0F,OAAOC,WAAa3F,EAAI,cAAe,GAAU,MAANyF,EAAJ,CAAwB,IAAkDG,EAAIC,EAAlDC,EAAO,GAAQC,GAAK,EAAUC,GAAK,EAAmB,IAAM,IAAKP,EAAKA,EAAGzP,KAAKgK,KAAQ+F,GAAMH,EAAKH,EAAGQ,QAAQC,QAAoBJ,EAAKpL,KAAKkL,EAAG9K,QAAYrF,GAAKqQ,EAAKlQ,SAAWH,GAA3DsQ,GAAK,GAA0M,CAAtI,MAAOI,GAAOH,GAAK,EAAMH,EAAKM,CAAK,CAAE,QAAU,IAAWJ,GAAsB,MAAhBN,EAAW,QAAWA,EAAW,QAAmC,CAA5B,QAAU,GAAIO,EAAI,MAAMH,CAAI,CAAE,CAAE,OAAOC,CAAjV,CAAuV,CAR/bM,CAAsBpG,EAAKvK,IAI5F,SAAqC4Q,EAAGC,GAAU,GAAKD,EAAL,CAAgB,GAAiB,iBAANA,EAAgB,OAAOtG,GAAkBsG,EAAGC,GAAS,IAAI5Q,EAAIL,OAAOS,UAAU6E,SAAS3E,KAAKqQ,GAAG7C,MAAM,GAAI,GAAiE,MAAnD,WAAN9N,GAAkB2Q,EAAEvM,cAAapE,EAAI2Q,EAAEvM,YAAYlF,MAAgB,QAANc,GAAqB,QAANA,EAAoByK,MAAMoG,KAAKF,GAAc,cAAN3Q,GAAqB,2CAA2C8Q,KAAK9Q,GAAWqK,GAAkBsG,EAAGC,QAAzG,CAA7O,CAA+V,CAJ7TG,CAA4BzG,EAAKvK,IAEnI,WAA8B,MAAM,IAAIiR,UAAU,4IAA8I,CAFvDC,IA4MnIrM,EAAQgL,EAAiB,GACzBsB,EAAWtB,EAAiB,GAShC,OALA,eAAgB,WACT,KAAQL,EAAe3K,IAC1BsM,EAAS3B,EAEb,GAAG,CAAC3K,EAAOsM,EAAU3B,IACd,aAAc,WACnB,OAAOd,GAAmB7J,EAAOA,EAAM/D,SACzC,GAAG,CAAC+D,GACN,CA8BA,SAASuM,GAAcvM,EAAO8K,GAC5B,IAAIhB,EAAOgB,EAAM3N,MAAQ2N,EAAM3N,KAAK2M,KAChC0C,EAAoB1B,EAAM9K,MAAMwK,YAAcxK,EAAMwK,WAExD,GAAa,UAATV,GAA6B,UAATA,EAIxB,OAAO9J,EAAM+J,MAAQyC,GAAqBxM,EAAM+J,MAAM/J,MAAMwK,WAAagC,CAC3E,CAEO,SAASC,GAAYzM,EAAOqH,EAAiBqF,GAClD1M,EAAQ,MAAoBA,EAAOkH,GAAe,SAClDG,EAAkBA,GAAmB,qBAAuBrH,EAAM/D,UAElE,IACI0L,GAFJ+E,EAAkBA,GAAmB7C,GAAmB7J,EAAOqH,IAE/BM,SAC5BgF,EArCC,SAAuB3M,EAAO0M,GACnC,IAAI1C,EAAa0C,EAAgB1C,WAC7BE,EAASwC,EAAgBxC,OACzBC,EAAQuC,EAAgBvC,MACxBE,EAAQqC,EAAgBrC,MACxBC,EAAaoC,EAAgBpC,WACjC,MAAO,CACL/P,OAAQyF,EAAMzF,OACdC,MAAOwF,EAAMxF,MACb2M,QAAS,MAAmBnH,GAC5B4M,YAAY,EACZ7C,MAAO/J,EAAM+J,MACbC,WAAYA,EACZE,OAAQA,EACRC,MAAOA,EACPE,MAAOA,EACPC,WAAYA,EAEhB,CAmBmBuC,CAAc7M,EAAO0M,GAClCI,EAAa9M,EAAM1F,MAAQ,QAC/B,OAAO+M,EAAgBnH,KAAI,SAAU4K,EAAOrC,GAC1C,IAAIqB,EAAOgB,EAAM3N,MAAQ2N,EAAM3N,KAAK2M,KAChCjN,EAAO8K,EAASc,GAChB3K,EAAQ,MAAsBgN,EAAOrC,EAAOiE,GAC5CK,EAAS/M,EAAM+M,OAnDvB,SAAmB/M,EAAO2H,EAAUc,GAClC,GAAKzI,EAAM+M,OAIX,OAAOpF,EAASrM,SAAWmN,EAAQ,EAAIzI,EAAM+M,YAASrJ,CACxD,CA6CgCsJ,CAAUhN,EAAO2H,EAAUc,GAASqC,EAAM9K,MAAM+M,OACxEzS,EAAOwQ,EAAM9K,MAAM1F,MAAQ,GAAG6O,OAAO2D,EAAY,KAAK3D,OAAOW,EAAM,KAAKX,OAAOV,GACnF,OAAoB,iBAAmBqC,EAAO,KAAQ,CACpDtJ,IAAK,GAAG2H,OAAO7O,EAAM,SAAS6O,OAAOV,GACrCsE,OAAQA,EACRzS,KAAMA,EACN2S,cAAenC,EAAM9K,MAAMiN,eAAiBjN,EAAMiN,cAClDlD,MAAO/J,EAAM+J,MACbmD,eAAgBlN,EAAMkN,gBAAkBpC,EAAM9K,MAAMkN,eACpDpP,MAAOA,EACP0M,WAAY+B,GAAcvM,EAAO8K,GACjCjO,KAAMA,EACNsQ,MAAOnN,EAAMmN,OACZR,GACL,GACF,CC7RA,SAAS,GAAQ5G,EAAQC,GAAkB,IAAIC,EAAOlL,OAAOkL,KAAKF,GAAS,GAAIhL,OAAOmL,sBAAuB,CAAE,IAAIC,EAAUpL,OAAOmL,sBAAsBH,GAASC,IAAmBG,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAOtL,OAAOuL,yBAAyBP,EAAQM,GAAKE,UAAY,KAAKN,EAAK7F,KAAKzE,MAAMsK,EAAME,EAAU,CAAE,OAAOF,CAAM,CAEpV,SAAS,GAAcvJ,GAAU,IAAK,IAAIvB,EAAI,EAAGA,EAAIE,UAAUC,OAAQH,IAAK,CAAE,IAAIsL,EAAS,MAAQpL,UAAUF,GAAKE,UAAUF,GAAK,CAAC,EAAGA,EAAI,EAAI,GAAQJ,OAAO0L,IAAS,GAAIC,SAAQ,SAAUlF,GAAO,GAAgB9E,EAAQ8E,EAAKiF,EAAOjF,GAAO,IAAKzG,OAAO6L,0BAA4B7L,OAAO8L,iBAAiBnK,EAAQ3B,OAAO6L,0BAA0BH,IAAW,GAAQ1L,OAAO0L,IAASC,SAAQ,SAAUlF,GAAOzG,OAAO+L,eAAepK,EAAQ8E,EAAKzG,OAAOuL,yBAAyBG,EAAQjF,GAAO,GAAI,CAAE,OAAO9E,CAAQ,CAEzf,SAAS,GAAgBqK,EAAKvF,EAAKhB,GAAiK,OAApJgB,KAAOuF,EAAOhM,OAAO+L,eAAeC,EAAKvF,EAAK,CAAEhB,MAAOA,EAAO+F,YAAY,EAAMS,cAAc,EAAMC,UAAU,IAAkBF,EAAIvF,GAAOhB,EAAgBuG,CAAK,CAQhN,IAAI,GAAgB,CAClBvM,MAAO,IACPD,OAAQ,IACR4M,QAAS,IAGPiG,GAAmB,SAAU1C,GAE/B,IAAIZ,EAAOuD,GAAavD,KAEpBwD,EAAwB,OACxBC,EAAoBD,EAAsBC,kBAC1CC,EAAoBF,EAAsBE,kBAG1CxN,GAAQyN,EAFGH,EAAsBG,UAEhB/C,GACjBC,EAAgB,MAAoB3K,EAAO,GAAe8J,GAC1D4D,EAAW/C,EAAc+C,SACzBC,EAAqBhD,EAAcgD,mBACnCf,EAAajC,EAAciC,WAC3BgB,EAAiBjD,EAAciD,eAC/BC,EAAyBlD,EAAckD,uBACvCrT,EAAQmQ,EAAcnQ,MACtBD,EAASoQ,EAAcpQ,OACvBwP,EAAQY,EAAcZ,MACtBoD,EAAQxC,EAAcwC,MACtB7C,EAAaK,EAAcL,WAC3BhQ,EAAOqQ,EAAcrQ,KACrB+M,EAAkB,qBAAuBsD,EAAc1O,UACvDyQ,EAAkBjC,GAAiBE,GACnCT,EAASwC,EAAgBxC,OACzBG,EAAQqC,EAAgBrC,MACxBvM,EAAQ4O,EAAgB5O,MACxBgQ,EAAc,aAAc,WAe9B,OAderB,GAAYzM,EAAOqH,EAAiBqF,GACpBxM,KAAI,SAAU4K,EAAOrC,GAClD,IAAIkE,EAAa,KAAQ,CACvBoB,QAASP,EAAkBxN,EAAO8K,EAAOrC,IACxCqC,EAAM9K,OAET,OAAoB,iBAAmB8K,EAAO6B,EAChD,IAOuBqB,SACzB,GAAG,CAAChO,EAAOqH,EAAiBqF,EAAiBc,IACzCS,EAAiB,aAAc,WACjC,OAAIrB,EACK,CACL1C,OAAQA,EACRG,MAAOA,EACP7P,MAAOA,EACPD,OAAQA,EACRqS,WAAYA,EACZ7C,MAAOA,EACPjM,MAAOA,EAAMoQ,OACb5D,WAAYA,EACZ6C,MAAOA,EACP7S,KAAMA,GAIH,CAAC,CACV,GAAG,CAACsS,EAAY1C,EAAQG,EAAO7P,EAAOD,EAAQwP,EAAOjM,EAAOwM,EAAY6C,EAAO7S,IAC3E6T,EAAY,aAAc,WAC5B,OAAO,KAA2BzD,EACpC,GAAG,CAACA,IACA0D,EAAY,aAAc,WAC5B,GAAIxB,EAAY,CACd,IAAIyB,EAAwB,IAAU,CAAC,EAAGV,EAAmB3N,MAAOiO,EAAgBE,GAEpF,OAAoB,iBAAmBR,EAAoBU,EAC7D,CAEA,OAAoB,iBAAmBT,EAAgBO,EACzD,GAAG,CAACP,EAAgBhB,EAAYe,EAAoBM,EAAgBE,IAChEG,EAAS,aAAc,WACzB,OAAO,MAAqBtO,EAC9B,GAAG,CAACA,IACAuO,EAAgB,KAAuB7D,GAU3C,OATA,eAAgB,WAEd,OAAO,WACDA,EAAaqD,SACfR,EAAkBgB,EAAe7D,EAErC,CACF,GAAG,CAAC6C,EAAmBgB,EAAe7D,IAEjC,IAAS4D,GASM,iBAAmBF,EAAWA,EAAUpO,MAAO8N,GAR7C,kBAAoB,KAAqB,CAC3DM,UAAWA,EACXV,SAAUA,EACVY,OAAQA,EACRT,uBAAwBA,GACvBC,EAIP,EAEAV,GAAiBoB,UAAY,GAAc,GAAc,CAAC,EAAG,gBAAwB,CAAC,EAAG,CACvFC,KAAM,eAAoB,CAAC,aAAkB,eAAoB,CAAC,MAA6B,gBAAqBzG,SAAU,QAC9HgC,WAAY,eAAoB,CAAC,aAAkB,aAAmB,WAAgB,CACpFxB,EAAG,aAAkB,aACrBE,EAAG,aAAkB,iBAEvBzM,SAAU,eAAoB,CAAC,aAAkB,WAAiB,YAClEuO,WAAY,eAAoB,CAAC,aAAkB,aAAmB,WAAgB,CAAC,YAAa,cAAe,UAAW,OAAQ,OAAQ,MAAO,QAAS,WAC9J5C,kBAAmB,UACnB0C,WAAY,UACZ4C,eAAgB,aAChBH,OAAQ,eAAoB,CAAC,UAAgB,aAC7CjP,MAAO,WAAgB,CACrBoQ,OAAQ,YACRrR,KAAM,YACNkQ,OAAQ,cAEVpS,QAAS,cAEXyS,GAAiBsB,aAAe,CAC9Bf,mBAAiC,kBAAoB,KAAkB,MACvEC,eAA6B,kBAAoB,IAAK,MACtDhB,YAAY,EACZ7C,MAAO,eACPnC,mBAAmB,GAErB,IAAI+G,GAAkB,CACpB7E,KAAM,QACN8E,mBAAoB,CAAC,iBAAkB,qBAAsB,kBAC7DnC,YAAaA,IAEJY,GAAetS,OAAOC,OAAqB,SAAWoS,GAAkB,MAAUuB,IAC7FtB,GAAawB,YAAc,e,oDCnJpB,MAAMC,GAAcC,IACvB,IAAI,SAAEC,EAAQ,UAAEC,EAAS,SAAEhT,EAAQ,WAAEuO,EAAU,mBAAEmD,EAAqB,gBAAoBuB,GAAA,EAAgB,MAAK,YAAEC,EAAW,aAAEC,EAAY,WAAEC,EAAU,aAEtJC,EAAY,MAEZvF,GAAQ,SAASsF,IAAgBN,EAAIQ,GAAO,QAAOR,EAAI,CAAC,WAAY,YAAa,WAAY,aAAc,qBAAsB,cAAe,eAAgB,aAAc,eAAgB,UAE9L,MAAMX,EAAY,eAAmBT,EAAoB5S,OAAOC,OAAOD,OAAOC,OAAO,CAAEwU,KAAMR,EAAUS,MAAOR,EAAWlF,SAAS4D,EAAmB3N,OAAQ,CAAEhE,WAAW,KAAA0T,GAAa,CAAE1T,UAAW2R,EAAmB3N,MAAMhE,gBAEvN,oBAAE2T,IAAwB,SAAuB,CACnDnF,aACA2E,cACAC,eACAQ,gBAAiB7F,EAAM8F,MAAMrF,aAGjC,OAAQ,gBAAoB6C,GAActS,OAAOC,OAAO,CAAEwP,WAAYA,EAAYmD,mBAAoBS,EAAWrE,MAAOA,GAASwF,IAAO,SAA2B,CAC/JtT,WACAmT,aAAcO,IACd,EAERb,GAAWD,YAAc,aAEzB,IAAqBC,GAAYzB,I,uICvB1B,MAAMyC,GAAc,CAEvBtF,WAAY,CACRuF,GAAA,SACAC,GAAA,SACAC,GAAA,SACAC,GAAA,SACAC,GAAA,SACAC,GAAA,UAEJC,MAAO,CACHC,UAAW,CACPnJ,QAAS,IAEboJ,KAAM,CACFC,OAAQ,QAEZC,MAAO,CACHD,OAAQ,SAGhBE,SAAU,CACNC,WAAY,CACRC,SAAU,IAGlBC,MAAO,CACHP,UAAW,CACPnJ,QAAS,IAEboJ,KAAM,CACFC,OAAQ,QAEZC,MAAO,CACHD,OAAQ,UC7BpB,MAAMM,WAA8B,cAChCtR,cACIC,SAASpE,WACTO,KAAKmV,aAAe,gBACpBnV,KAAKoV,SAAWC,GAAA,EAChBrV,KAAKgE,MAAQ,CACTsR,aAAc,IAAIC,IAClBC,WAAY,GACZ5W,MAAO,GAEXoB,KAAKyV,UAAY,KACb,MAAM,WAAEC,EAAU,WAAEC,EAAU,WAAEC,EAAU,WAAEC,EAAU,WAAEC,EAAU,WAAEC,GAAe/V,KAAKoE,MAClF4R,EAAS,GACf,GAAIN,GAAcA,EAAWhW,OAAQ,CACjC,MAAMhB,EAAOsB,KAAKiW,mBAAmBP,EAAW,GAAGhX,MACnDsX,EAAOxR,KAAK,CACR0R,UAAW,aACXjV,KAAMjB,KAAKmW,mBAAmBT,EAAY,cAC1CU,WAAY,CACR1X,OACA2X,OAAQ,CACJC,KAAMpC,GAAYtF,WAAW,IAEjC2H,QAAS7X,GAEbwD,MAAO,CACHjB,KAAM,CACFqV,KAAMpC,GAAYtF,WAAW,MAI7C,CACA,GAAI+G,GAAcA,EAAWjW,OAAQ,CACjC,MAAMhB,EAAOsB,KAAKiW,mBAAmBN,EAAW,GAAGjX,MACnDsX,EAAOxR,KAAK,CACR0R,UAAW,aACXjV,KAAMjB,KAAKmW,mBAAmBR,EAAY,cAC1CS,WAAY,CACR1X,OACA2X,OAAQ,CACJC,KAAMpC,GAAYtF,WAAW,IAEjC2H,QAAS7X,GAEbwD,MAAO,CACHjB,KAAM,CACFqV,KAAMpC,GAAYtF,WAAW,MAI7C,CACA,GAAIgH,GAAcA,EAAWlW,OAAQ,CACjC,MAAMhB,EAAOsB,KAAKiW,mBAAmBL,EAAW,GAAGlX,MACnDsX,EAAOxR,KAAK,CACR0R,UAAW,aACXjV,KAAMjB,KAAKmW,mBAAmBP,EAAY,cAC1CQ,WAAY,CACR1X,OACA2X,OAAQ,CACJC,KAAMpC,GAAYtF,WAAW,IAEjC2H,QAAS7X,GAEbwD,MAAO,CACHjB,KAAM,CACFqV,KAAMpC,GAAYtF,WAAW,MAI7C,CACA,GAAIiH,GAAcA,EAAWnW,OAAQ,CACjC,MAAMhB,EAAOsB,KAAKiW,mBAAmBJ,EAAW,GAAGnX,MACnDsX,EAAOxR,KAAK,CACR0R,UAAW,aACXjV,KAAMjB,KAAKmW,mBAAmBN,EAAY,cAC1CO,WAAY,CACR1X,OACA2X,OAAQ,CACJC,KAAMpC,GAAYtF,WAAW,IAEjC2H,QAAS7X,GAEbwD,MAAO,CACHjB,KAAM,CACFqV,KAAMpC,GAAYtF,WAAW,MAI7C,CACA,GAAIkH,GAAcA,EAAWpW,OAAQ,CACjC,MAAMhB,EAAOsB,KAAKiW,mBAAmBH,EAAW,GAAGpX,MACnDsX,EAAOxR,KAAK,CACR0R,UAAW,aACXjV,KAAMjB,KAAKmW,mBAAmBL,EAAY,cAC1CM,WAAY,CACR1X,OACA2X,OAAQ,CACJC,KAAMpC,GAAYtF,WAAW,IAEjC2H,QAAS7X,GAEbwD,MAAO,CACHjB,KAAM,CACFqV,KAAMpC,GAAYtF,WAAW,MAI7C,CACA,GAAImH,GAAcA,EAAWrW,OAAQ,CACjC,MAAMhB,EAAOsB,KAAKiW,mBAAmBF,EAAW,GAAGrX,MACnDsX,EAAOxR,KAAK,CACR0R,UAAW,aACXjV,KAAMjB,KAAKmW,mBAAmBJ,EAAY,cAC1CK,WAAY,CACR1X,OACA2X,OAAQ,CACJC,KAAMpC,GAAYtF,WAAW,IAEjC2H,QAAS7X,GAEbwD,MAAO,CACHjB,KAAM,CACFqV,KAAMpC,GAAYtF,WAAW,MAI7C,CACA,MAAM4H,EAAyBxW,KAAKyW,4BAC9BC,EAAQ1W,KAAK2W,SAASX,GAC5BhW,KAAK+F,SAAS,CAAEyQ,yBAAwBR,SAAQR,WAAYxV,KAAK4W,gBAAiBF,SAAQ,EAG9F1W,KAAKmW,mBAAqB,CAAClV,EAAMiV,KAC7BjV,EAAKqD,KAAIsH,GAAUA,EAAMsK,UAAYA,IAC9BjV,GAEXjB,KAAK6W,2BAA6B,KAC9B,MAAM,sBAAEC,EAAqB,OAAEnY,EAAM,gBAAEoY,EAAkBpY,GAAWqB,KAAKoE,OACnE,MAAExF,GAAUoB,KAAKgE,MACvB,IAAIgT,EAA0BD,EAY9B,OAXID,IACIlY,EAAQ,KAAOA,EAAQ,KACvBoY,GAA2B,GAEtBpY,EAAQ,KAAOA,EAAQ,IAC5BoY,GAA2B,GAEtBpY,GAAS,MACdoY,GAA2B,MAG5BA,CAAuB,EAGlChX,KAAKiX,YAAc,CAAC5F,GAAgB,KAChC,MAAM,aAAEiE,EAAY,OAAEU,EAAM,MAAEpX,GAAUoB,KAAKgE,MACvCkT,EAAW,IACjB,IAAIC,GAAY,EACZnB,GACAA,EAAOlL,SAAQ,CAACxL,EAAGuN,OACV,SAAeyI,EAAczI,IAAUvN,EAAE2B,MAA0B,IAAlB3B,EAAE2B,KAAKvB,QACrDJ,EAAE2B,KAAKvB,OAASyX,IAChBA,EAAW7X,EAAE2B,KAAKvB,OAE1B,IAIR,MACM0X,EAAeD,EAAW,EAAIvY,GADR,EAAXuY,EAAe,GACuB,EACvD,OAAI9F,EAGyC,GAAjC+F,GADWA,EAAeF,GAAYE,EAAeF,GAAYC,EAAW,GAChD,GAEjCC,EAAeF,EAAWA,EAAWE,CAAY,EAE5DpX,KAAKqX,SAAW,CAACrB,EAAQnJ,EAAOyK,KAC5B,MAAM,aAAEhC,GAAiBtV,KAAKgE,MACxB/C,EAAQqU,EAAaiC,IAAI1K,GAAuB,CAAC,CAAEC,EAAG,OAApBkJ,EAAO/U,KAC/C,OAAQ,kBAAoBuW,EAAA,EAAU,CAAEF,SAAUA,EAAUrW,KAAMA,EAAM2E,IAAKoQ,EAAOE,UAAWxX,KAAMsX,EAAOE,UAAWhU,MAAO8T,EAAO9T,OAAS,EAGlJlC,KAAKyW,0BAA4B,KAC7B,MAAM,UAAEgB,EAAS,cAAEC,GAAkB1X,KAAKoE,MAEpCuT,GAAyB,OAAgB,UAAW,UAC1D,OAAQ,kBAAoBA,EAAwB,CAAEC,gBAAiB,IAAKzG,OAAQ,EAAGvF,YAAY,SAAgBA,EAAO6L,EAAWC,GAAgBG,qBAAqB,EAAMC,iBAAkB,IAAKC,eAAgB,CAC/MC,OAAQ,GACRC,KAAM,EACNC,MAAO,EACPC,IAAK,IACJ,EAGbnY,KAAKoY,UAAY,CAACpC,EAAQV,KACtB,IACIhH,EADA6I,GAAY,EAahB,OAXInB,GACAA,EAAOlL,SAAQ,CAACxL,EAAGuN,KACf,KAAK,SAAeyI,EAAczI,IAAUvN,EAAE2B,MAA0B,IAAlB3B,EAAE2B,KAAKvB,OAAc,CACvE,MAAM2Y,GAAM,QAAY/Y,EAAE2B,MAC1BkW,EAAWmB,KAAKD,IAAIlB,EAAUkB,EAClC,KAGJlB,GAAY,IACZ7I,EAAS,CAAExB,EAAG,CAAC,EAAG,OAEfwB,CAAM,EAGjBtO,KAAKuY,UAAY,KACb,MAAM,KAAE7Z,EAAO,IAAOsB,KAAKoE,OACrB,aAAEkR,EAAY,OAAEU,GAAWhW,KAAKgE,MAQtC,OAPe,OAA2B,CACtCwU,YAAY,SAAcxC,GAC1ByC,aAAcxX,IAAQ,SAAa+U,EAAQV,EAAcrU,GACzDyX,SAAU7L,IAAS,SAAeyI,EAAczI,GAChD8L,WAAY,GAAGja,WACfka,cAAexU,GAASpE,KAAK6Y,kBAAkBzU,EAAMyI,QAE5C,EAEjB7M,KAAK8Y,UAAY,KACb,MAAM,KAAEpa,EAAO,IAAOsB,KAAKoE,OACrB,aAAEkR,EAAY,OAAEU,GAAWhW,KAAKgE,MACtC,OAAQ,kBAAoB+U,EAAA,GAAa,CAAE9X,MAAM,SAAc+U,EAAQV,GAAe3W,OAAQ,GAAIqa,OAAQ,GAAIta,KAAM,GAAGA,WAAeua,YAAY,GAAS,EAK/JjZ,KAAK4W,cAAgB,KACjB,MAAM,WAAElB,EAAU,WAAEC,EAAU,WAAEC,EAAU,WAAEC,EAAU,WAAEC,EAAU,WAAEC,GAAe/V,KAAKoE,MAGxF,IAAIwH,EADc,CAAC8J,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,GAErEzR,KAAI4U,MACLtN,GAASA,EAAMlM,OAASwZ,EAAIxZ,UAC7BkM,EAAQsN,EACZ,IAEJ,MAAMC,EAAS,GACfvN,EAAMtH,KAAI4U,IACNC,EAAO3U,KAAK0U,EAAItM,EAAE,IAGtB,MAAM4I,EAAa,GACb4D,EAASD,EAAOzZ,OAAS,EAAI,EAAI,EACvC,IAAK,IAAIH,EAAI,EAAGA,EAAI4Z,EAAOzZ,OAAQH,KAC3BA,EAAI6Z,GAAW,GAAK7Z,EAAI,EAAI4Z,EAAOzZ,QAG9ByZ,EAAOzZ,OAAS,GAAKH,EAAI,EAAI4Z,EAAOzZ,SAFzC8V,EAAWhR,KAAK2U,EAAO5Z,IAO/B,OADAiW,EAAWhR,KAAK2U,EAAOA,EAAOzZ,OAAS,IAChC8V,CAAU,EAErBxV,KAAKiW,mBAAsBoD,GAEhBA,EAAI3Z,OADM,GACc2Z,EAAIC,UAAU,EAAGC,IAAgB,MAAQF,EAE5ErZ,KAAKwZ,aAAgBna,IACjB,MAAM,MAAEqX,GAAU1W,KAAKgE,MACvB,OAAO,SAA2B3E,EAAGqX,EAAM,EAE/C1W,KAAK2W,SAAYX,IACb,GAAIA,EACA,IAAK,MAAM1W,KAAK0W,EACZ,IAAK,MAAMpK,KAAStM,EAAE2B,KAClB,GAAI2K,EAAM8K,MACN,OAAO9K,EAAM8K,MAK7B,MAAO,KAAK,EAGhB1W,KAAK6Y,kBAAqBhM,IACtB,MAAMyI,GAAe,SAAiBtV,KAAKgE,MAAMgS,OAAQhW,KAAKgE,MAAMsR,aAAczI,GAClF7M,KAAK+F,SAAS,CAAEuP,gBAAe,EAEnCtV,KAAKyZ,aAAe,KAChB,MAAM,MAAE7a,GAAUoB,KAAKgE,OACjB,YAAE0V,EAAc,GAAM1Z,KAAKmV,aAAawE,SAAW,CAAC,EACtDD,IAAgB9a,GAChBoB,KAAK+F,SAAS,CAAEnH,MAAO8a,GAC3B,CAER,CACAE,oBACI5Z,KAAKyV,YACLzV,KAAKoV,UAAW,SAAkBpV,KAAKmV,aAAawE,QAAS3Z,KAAKyZ,aACtE,CACAI,mBAAmBC,GACXA,EAAUpE,aAAe1V,KAAKoE,MAAMsR,YACpCoE,EAAUnE,aAAe3V,KAAKoE,MAAMuR,YACpCmE,EAAUlE,aAAe5V,KAAKoE,MAAMwR,YACpCkE,EAAUjE,aAAe7V,KAAKoE,MAAMyR,YACpCiE,EAAUhE,aAAe9V,KAAKoE,MAAM0R,YACpCgE,EAAU/D,aAAe/V,KAAKoE,MAAM2R,YACpC/V,KAAKyV,WAEb,CACAsE,uBACQ/Z,KAAKoV,UACLpV,KAAKoV,UAEb,CACApP,SACI,MAAM,OAAErH,EAAM,KAAEuF,EAAI,KAAExF,EAAI,QAAE6M,EAAU,CAClCyM,OAAQ,GACRC,KAAM,GACNC,MAAO,EACPC,IAAK,IACFnY,KAAKoE,OACN,uBAAEoS,EAAsB,aAAElB,EAAY,OAAEU,EAAM,WAAER,EAAU,MAAE5W,GAAUoB,KAAKgE,MAE3EwO,EAAYgE,EACZ,iBAAmBA,EAAwB,CACzCwD,UAAU,SAAgBhE,EAAQV,GAClChE,eAAiB,kBAAoB2I,EAAA,EAAoB,CAAEC,YAAY,SAAclE,EAAQV,GAAc,GAAOzB,MAAOjI,GAAS1H,EAAKQ,cAAcuB,EAAA,qBAA6B,CAAEkU,IAAKvO,EAAMgB,aAEjM9E,EACAwP,EAAWtX,KAAKiX,cAEtB,OAAQ,kBAAoB,MAAO,CAAE7W,UAAW,gBAAiBga,IAAKpa,KAAKmV,aAAcjT,MAAO,CAAEvD,OAAQqB,KAAK6W,+BAC3G,kBAAoB,MAAO,CAAE3U,MAAO,CAAEvD,SAAQC,UAC1C,kBAAoByb,EAAA,EAAO,CAAEhH,UAAWnP,EAAKQ,cAAcuB,EAAA,0BAAkC8L,mBAAoBS,EAAWlE,OAAQtO,KAAKoY,UAAUpC,EAAQV,GAAejE,cAAe,CAAEzE,EAAG5M,KAAKiX,aAAY,IAASvE,OAAQ1S,KAAKuY,YAAa5Z,OAAQA,EAAQ2b,iBAAiB,EAAMC,gBAAiBva,KAAK8Y,YAAaoB,YAAY,SAAclE,EAAQV,GAAekF,eAAgB,cAAe9b,KAAMA,EAAM6M,QAASA,EAAS4C,MAAO,KAAYsF,WAAYgH,EAAA,gBAA8B7b,MAAOA,GAC1eoX,GAAUA,EAAOtW,OAAS,GAAM,kBAAoBwT,GAAY,KAAM8C,EAAO1R,KAAI,CAAChF,EAAGuN,IAAU7M,KAAKqX,SAAS/X,EAAGuN,EAAOyK,MACvH,kBAAoBoD,GAAAC,EAAW,CAAEzY,MAAOgS,GAAYe,MAAOO,WAAYA,EAAYoF,iBAAiB,IACpG,kBAAoBF,GAAAC,EAAW,CAAEE,eAAe,EAAM3Y,MAAOgS,GAAYO,MAAOqG,WAAY9a,KAAKwZ,iBACjH,EAEJ,MACA,IAD0B,EAAArT,EAAA,IAAW+O,I,oDCvV9B,MAIM,GAAS,CAClBpM,eAAgB,CACZrF,WAAYsX,GAAA,UAEhBC,cAAe,CACXrc,OAAQ,QACR0E,aAAcqG,EAAA,SACdhG,UAAWuX,GAAA,UAEfC,UAAW,CACP7X,aAAc8X,GAAA,SACdzX,UAAWyX,GAAA,UAEfC,eAAgB,CACZ1X,UAAWgG,EAAA,UAEf2R,eAAgB,CACZ5X,WAAYwF,EAAA,UAEhBqS,WAAY,CACRjY,aAAc8X,GAAA,SACdzX,UAAWyX,GAAA,UAEfI,WAAY,CACR7X,UAAWyX,GAAA,W,ICxBRK,G,gDACX,SAAWA,GACPA,EAAqB,IAAI,MACzBA,EAAwB,OAAI,UAC5BA,EAAuB,MAAI,QAC3BA,EAA0B,SAAI,YAC9BA,EAAqB,IAAI,MACzBA,EAAwB,OAAI,UAC5BA,EAAqB,IAAI,MACzBA,EAAwB,OAAI,UAC5BA,EAAqB,IAAI,MACzBA,EAAqB,IAAI,MACzBA,EAA0B,SAAI,WACjC,CAZD,CAYGA,KAAoBA,GAAkB,CAAC,IACnC,MAAMC,GAAY,CACrBjR,OAAQ,CACJkR,MAAO,GACPC,OAAQ,GAEZC,QAAS,CAAC,EACVC,UAAW,CAAC,EACZC,SAAU,CACNC,KAAM,SAGDC,GAAmB,CAC5B,CAAErX,MAAOsB,EAAA,oBAA4BrB,MAAO,yBAC5C,CAAED,MAAOsB,EAAA,oBAA4BrB,MAAO,0BAC5C,CAAED,MAAOsB,EAAA,oBAA4BrB,MAAO,oBAC5C,CAAED,MAAOsB,EAAA,oBAA4BrB,MAAO,mBAC5C,CAAED,MAAOsB,EAAA,oBAA4BrB,MAAO,qBAEnCqX,GAAoB,CAC7B,CAAEtX,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,SAAUC,MAAO,WAEjBsX,GAAsB,CAC/B,CAAEvX,MAAO,oBAAqBC,MAAO,qBACrC,CAAED,MAAO,eAAgBC,MAAO,gBAChC,CAAED,MAAO,oBAAqBC,MAAO,sBAE5BuX,GAAoB,CAC7B,CAAExX,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,cAAeC,MAAO,eAC/B,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,SAAUC,MAAO,WAEjBwX,GAAuB,CAChC,CAAEzX,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,cAAeC,MAAO,eAC/B,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,SAAUC,MAAO,WAEjByX,GAAoB,CAC7B,CAAE1X,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,SAAUC,MAAO,WAEjB0X,GAAoB,CAC7B,CAAE3X,MAAO,kBAAmBC,MAAO,mBACnC,CAAED,MAAO,kBAAmBC,MAAO,mBACnC,CAAED,MAAO,SAAUC,MAAO,WAEjB2X,GAAoB,CAC7B,CAAE5X,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,OAAQC,MAAO,QACxB,CAAED,MAAO,UAAWC,MAAO,YAIlB4X,IADuBvW,EAAA,oBACMwW,IACtC,IAAIC,EAOJ,OAHQA,EAAS,UAGVA,CAAM,GAEJC,GAAkCF,IAC3C,IAAIC,EAOJ,OAHQA,EAAS,WAGVA,CAAM,EA6CJE,GAAqBH,IAC9B,IAAIC,EACJ,OAAQD,GACJ,KAAKjB,GAAgBqB,IACrB,KAAKrB,GAAgBsB,OACrB,KAAKtB,GAAgBuB,IACrB,KAAKvB,GAAgBwB,OACrB,KAAKxB,GAAgByB,IACjBP,EAAS,UACT,MACJ,KAAKlB,GAAgB0B,MACrB,KAAK1B,GAAgB2B,SACjBT,EAAS,oBACT,MACJ,KAAKlB,GAAgB4B,IACrB,KAAK5B,GAAgB6B,SACjBX,EAAS,UACT,MACJ,KAAKlB,GAAgB8B,IACjBZ,EAAS,kBACT,MACJ,QACIA,OAAS5U,EAGjB,OAAO4U,CAAM,EAEJa,GAAqBd,IAC9B,IAAIC,EACJ,OAAQD,GACJ,KAAKjB,GAAgBqB,IACrB,KAAKrB,GAAgBsB,OACjBJ,EAAST,GACT,MACJ,KAAKT,GAAgB0B,MACrB,KAAK1B,GAAgB2B,SACjBT,EAASR,GACT,MACJ,KAAKV,GAAgBuB,IACjBL,EAASP,GACT,MACJ,KAAKX,GAAgBwB,OACjBN,EAASN,GACT,MACJ,KAAKZ,GAAgByB,IACjBP,EAASL,GACT,MACJ,KAAKb,GAAgB8B,IACjBZ,EAASJ,GACT,MACJ,KAAKd,GAAgB4B,IACrB,KAAK5B,GAAgB6B,SACjBX,EAASH,GACT,MACJ,QACIG,OAAS5U,EAGjB,OAAO4U,CAAM,EAEJc,GAAyBf,IAClC,IAAIC,EASJ,OANQA,EAFAD,IACCjB,GAAgBqB,IACR,cAGA/U,EAGV4U,CAAM,EAEJe,GAAiBhB,IAC1B,IAAIC,EAMJ,OAHQA,EAAS,UAGVA,CAAM,EAEJgB,GAAsBjB,IAC/B,IAAIC,EACJ,OAAQD,GACJ,KAAKjB,GAAgBqB,IACjBH,EAAS,SACT,MACJ,KAAKlB,GAAgBsB,OACjBJ,EAAS,YACT,MACJ,KAAKlB,GAAgB0B,MACjBR,EAAS,WACT,MACJ,KAAKlB,GAAgB2B,SACjBT,EAAS,cACT,MACJ,KAAKlB,GAAgBuB,IACjBL,EAAS,SACT,MACJ,KAAKlB,GAAgBwB,OACjBN,EAAS,YACT,MACJ,KAAKlB,GAAgByB,IACjBP,EAAS,SACT,MACJ,KAAKlB,GAAgB8B,IACjBZ,EAAS,SACT,MACJ,KAAKlB,GAAgB4B,IACjBV,EAAS,SACT,MACJ,KAAKlB,GAAgB6B,SACjBX,EAAS,cACT,MACJ,QACIA,OAAS5U,EAGjB,OAAO4U,CAAM,EAoCJiB,GAAyBlB,IAClC,IAAIC,EACJ,OAAQD,GACJ,KAAKjB,GAAgBqB,IACjB,OAAO,SAEX,KAAKrB,GAAgBsB,OACjB,OAAO,YAEX,KAAKtB,GAAgB0B,MACjB,OAAO,WAEX,KAAK1B,GAAgB2B,SACjB,OAAO,cAEX,KAAK3B,GAAgBuB,IACjB,OAAO,SAEX,KAAKvB,GAAgBwB,OACjB,OAAO,YAEX,KAAKxB,GAAgByB,IACjB,OAAO,SAEX,KAAKzB,GAAgB4B,IACjB,OAAO,SAEX,KAAK5B,GAAgB6B,SACjB,OAAO,cAEX,QACIX,OAAS5U,EAGjB,OAAO4U,CAAM,ECxTjB,MAAMkB,WAA0B,cAC5Bha,YAAYia,EAAYC,GACpBja,MAAMga,EAAYC,GAClB9d,KAAK8D,aAAe,CAAC,EACrB9D,KAAKgE,MAAQ7E,OAAOC,OAAO,CAAC,EAAGY,KAAK8D,cACpC9D,KAAK+d,kBAAoB,CAACnZ,EAAOoZ,EAAcC,EAAa,OAAQC,EAAkB,WAClF,MAAM,KAAEha,GAASlE,KAAKoE,MAChB+Z,EAAmB,IAAI/R,KAAK4R,EAAaI,KAAO,aAChDC,EAAOna,EAAKoa,WAAWH,EAAkB,CAC3ChE,IAAK,UACLoE,MAAO,UAELC,GAAO,QAAQ5Z,GAAS6Z,WAAW7Z,EAAM8Z,QAAQ,KAAM,QAAM9Z,GAASA,EAAQ,EACpF,OAAOzF,OAAOC,OAAOD,OAAOC,OAAO,CAAEwN,EAAGyR,EAAMvR,EAAa,OAAVlI,EAAiB,KAAO4Z,GAAmB,OAAV5Z,GAAkB,CAAEkH,GAAI,IAAO,CAAEsS,KAAMJ,EAAaI,KAAMxY,IAAKoY,EAAa5Y,GAAI1G,KAAMsf,EAAarZ,MAAQqZ,EAAarZ,MAAQqZ,EAAa5Y,GAAIsR,MAAOsH,EAAaC,GAC7OD,EAAaC,GAAYC,GACrBF,EAAaC,GAAYC,GAAiBxH,MAC1CsH,EAAaC,GAAYvH,WAC7B5O,GAAY,EAE1B9H,KAAK2e,YAAc,KACf,MAAM,YAAEA,EAAW,YAAElC,EAAW,YAAEmC,GAAgB5e,KAAKoE,MACnDqY,GAGAkC,EAFwBjB,GAAmBjB,GACxBgB,KACsBmB,EAC7C,EAEJ5e,KAAK6e,eAAkBC,IACnB,MAAM,uBAAEC,EAAyB,UAA2B,4BAAEC,EAA8B,YAAuChf,KAAKoE,MAClI6Z,EAAac,EACbb,EAAkBc,EAClBC,EAAc,GAYpB,OAXAH,EAAcxa,KAAI0Z,IACd,MAAMkB,EAAS,GACXlB,aAAwBmB,KACVlV,MAAMoG,KAAK2N,EAAa7E,UAChC7U,KAAI/E,IACN,MAAM2Z,EAAM3Z,EAAE0e,GAAYC,GAAmB3e,EAAE0e,GAAYC,GAAiBtZ,MAAQrF,EAAE0e,GAAYrZ,MAClGsa,EAAO1a,KAAKxE,KAAK+d,kBAAkB7E,EAAK3Z,EAAG0e,EAAYC,GAAiB,IAGhFe,EAAYza,KAAK0a,EAAO,IAErBlf,KAAKof,eAAeH,EAAY,EAE3Cjf,KAAKqf,iBAAmB,KACpB,MAAM,OAAEC,GAAWtf,KAAKoE,MACxB,OAAO,OAA+B,CAClCkb,SACAC,MAAOvf,KAAKwf,aACZC,WAAW,GACb,EAENzf,KAAKwf,WAAa,KACd,MAAM,MAAE3c,GAAU7C,KAAKoE,MACjBsb,EAAY3X,EAAmBlF,EAAM8c,UACrCC,GAAa,QAAmB/c,GAEtC,OADsB,QAAiBA,KACA+c,EAAa,eAAiBF,EAAS,EAElF1f,KAAK6f,YAAc,IACP,kBAAoB,aAAgB,KACxC,kBAAoB,EAAAC,SAAU,CAAE5d,MAAO,iBAAsBtD,MAAOmhB,GAAA,OACpE,kBAAoB,EAAAD,SAAU,CAAE5d,MAAO,kBAAuBtD,MAAOmhB,GAAA,QAK7E/f,KAAKof,eAAkBY,IACnB,MAAM,SAAEC,EAAQ,WAAEC,GAAelgB,KAAKoE,MAChCsY,EAAS,GAkBf,OAjBAsD,EAAM1b,KAAI4a,IACN,MAAMtZ,EAAMsZ,EAAO,GAAGtZ,IAChBjB,EAAQua,EAAO,GAAGxgB,KAClByhB,EAAW,GACjB,IAAK,IAAIC,EAAU,IAAIhU,KAAK8T,EAAa,aAAcE,GAAW,IAAIhU,KAAK6T,EAAW,aAAcG,EAAQC,QAAQD,EAAQE,UAAY,GAAI,CACxI,MAAMlb,GAAK,EAAAmb,EAAA,GAAOH,EAAS,cACrBI,EAAatB,EAAOha,MAAKgU,GAAOA,EAAIkF,OAAShZ,IACnD,GAAIob,EACAL,EAAS3b,KAAKgc,OAEb,CACD,MAAMpC,GAAO,EAAAmC,EAAA,GAAOH,EAAS,cAC7BD,EAAS3b,KAAKxE,KAAK+d,kBAAkB,KAAM,CAAEK,OAAMhZ,GAAIQ,EAAKjB,SAAS,OAAQ,MACjF,CACJ,CACA+X,EAAOlY,KAAK2b,EAAS,IAElBzD,CAAM,CAErB,CACA9C,oBACI5Z,KAAK2e,aACT,CACA9E,mBAAmBC,GACf,MAAM,OAAEwF,EAAM,YAAEmB,EAAW,YAAE7B,GAAgB5e,KAAKoE,OACjC0V,EAAU8E,cAAgBA,IACzBU,IAAWmB,IAEzBzgB,KAAK2e,aAEb,CACA3Y,SACI,MAAM,YAAEyW,EAAW,kBAAEiE,EAAiB,KAAExc,GAASlE,KAAKoE,MAChD8a,EAASlf,KAAK6e,eAAe7e,KAAKqf,oBAExC,OAAQ,kBAAoB,aAAgB,KACxC,kBAAoB,MAAO,CAAEnd,MAAO,mBAChC,kBAAoB,EAAAzB,MAAO,CAAEC,aAAc,KAAMC,KAAM,MAAQuD,EAAKQ,cAAcuB,EAAA,qBAA6B,CAAErB,MAAO6X,MAC5H,kBAAoB,MAAO,CAAEva,MAAO,mBAChC,kBAAoB,MAAO,CAAEA,MAAO,cAAoBwe,IAAsB,gBAA0B1gB,KAAK6f,cAAkB,kBAAoB,GAAmB,CAAE/I,uBAAuB,EAAMC,gBF3H3L,IE2H8OW,cAAe,CAAC,EAAGD,UAAW,MAAa9Y,OF5HlS,IE4HmU+W,WAAYwJ,EAAOxf,OAAS,EAAIwf,EAAO,GAAK,GAAIvJ,WAAYuJ,EAAOxf,OAAS,EAAIwf,EAAO,GAAK,GAAItJ,WAAYsJ,EAAOxf,OAAS,EAAIwf,EAAO,GAAK,GAAIrJ,WAAYqJ,EAAOxf,OAAS,EAAIwf,EAAO,GAAK,GAAIpJ,WAAYoJ,EAAOxf,OAAS,EAAIwf,EAAO,GAAK,GAAInJ,WAAYmJ,EAAOxf,OAAS,EAAIwf,EAAO,GAAK,OAC5mB,EAGJ,MAAMyB,IAAkB,SAAsB,CAAC3c,GAAS4c,WAAUC,WAAUpE,kBACxE,MAAMqE,GAAiB,QAAWC,SAASC,QACrCC,GAAY,QAAoBH,IAChC,SAAEb,EAAQ,WAAEC,IAAe,QAAae,GAE9C,IAAIjZ,EAAU8Y,EAAenB,UACxB3X,GAAWyU,IACZzU,EAAU,CAAE,CAAC4U,GAAkBH,IAAe,MAElD,MAAM5Z,EAAQ,CACV2H,OAAQrL,OAAOC,OAAOD,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGqc,GAAUjR,QAASsW,EAAetW,QAAS,CAAEkR,MAAO,EAAGC,YAAQ7T,IACrH+T,UAAWiF,EAAejF,WAAaJ,GAAUI,UACjDD,QAASkF,EAAelF,SAAWH,GAAUG,QAC7C+D,SAAU3X,EACVyU,cACAwE,aAEErC,GAAc,QAASzf,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGyD,GAAQ,CAAEqe,UAAWN,EAAUC,WAAUpE,iBAAa3U,EAAWmZ,eAAWnZ,EAAWoY,aAChJD,cACEkB,EAAkBzD,GAAmBjB,GACrC2E,EAAa3D,KAInB,MAAO,CACHwC,WACAxD,cACA5Z,QACA+b,cACAU,OARW,kBAA6Btb,EAAOmd,EAAiBC,EAAYxC,GAS5E6B,YARgB,uBAAkCzc,EAAOmd,EAAiBC,EAAYxC,GAStF8B,kBARsB,6BAAwC1c,EAAOmd,EAAiBC,EAAYxC,GASlGsB,aACH,IAECmB,GAAqB,CACvB1C,YAAa,kBAEX2C,IAAuB,IAAAC,SAAQZ,GAAiBU,GAAzB,CAA6CzD,IACpE4D,IAAgB,EAAArb,EAAA,KAAW,QAAWmb,K,8GC1K5C,MAAMG,WAA8B,cAChC7d,cACIC,SAASpE,WACTO,KAAK8D,aAAe,CAChBC,cAAc,GAElB/D,KAAKgE,MAAQ7E,OAAOC,OAAO,CAAC,EAAGY,KAAK8D,cACpC9D,KAAK6E,UAAY,KACb,MAAM,YAAEC,EAAW,WAAEC,GAAe/E,KAAKoE,OACnC,aAAEL,GAAiB/D,KAAKgE,MACxBgB,EAAgBhF,KAAKiE,mBACrBgB,EAAYD,EAAcE,MAAMX,GAAWA,EAAOK,QAAUE,IAClE,OAAQ,kBAAoB,EAAAK,OAAQ,CAAEC,GAAI,kBAAmBL,WAAYA,EAAYM,OAAQtB,EAAcuB,SAAUtF,KAAKuF,aAAcC,SAAUxF,KAAKyF,aAAcpB,WAAYY,EAAW/E,QAAS,EAAAwF,cAAA,QAAwBV,EAAcV,KAAIC,GAAW,kBAAoB,EAAAoB,aAAc,CAAEC,IAAKrB,EAAOK,MAAOA,MAAOL,MAAa,EAEzUvE,KAAKiE,iBAAmB,KACpB,MAAM,KAAEC,EAAI,QAAEC,GAAYnE,KAAKoE,MACzBY,EAAgB,GAOtB,OANAb,EAAQG,KAAIC,IACRS,EAAcR,KAAK,CACfC,SAAU,IAAMP,EAAKQ,cAAcH,EAAOI,MAAO,CAAEC,MAAOL,EAAOK,QACjEA,MAAOL,EAAOK,OAChB,IAECI,CAAa,EAExBhF,KAAKuF,aAAe,CAACM,EAAOZ,KACxB,MAAM,cAAEyc,GAAkB1hB,KAAKoE,MAC3Bsd,GACAA,EAAczc,EAAUL,OAE5B5E,KAAK+F,SAAS,CACVhC,cAAc,GAChB,EAEN/D,KAAKyF,aAAe1B,IAChB/D,KAAK+F,SAAS,CAAEhC,gBAAe,CAEvC,CACAiC,SACI,OAAOhG,KAAK6E,WAChB,EAEJ,MAAM8c,IAAoB,EAAAxb,EAAA,IAAWsb,IC1CxB,GAAS,CAClBG,iBAAkB,CACd7Y,gBAAiBC,EAAA,SACjBvF,WAAY,IAAIiG,EAAA,WAChBN,WAAY+R,GAAA,WCWd0G,GAAgB,SAChBC,GAAgB,SACf,MAAMC,WAA2B,cACpCne,cACIC,SAASpE,WACTO,KAAK8D,aAAe,CAAC,EACrB9D,KAAKgE,MAAQ7E,OAAOC,OAAO,CAAC,EAAGY,KAAK8D,cACpC9D,KAAKgiB,mBAAqB,KACtB,MAAM,UAAEC,EAAS,YAAExF,EAAW,KAAEvY,EAAI,UAAEge,GAAcliB,KAAKoE,MACnDD,EAAU,GAiBhB,OAhBuBoZ,GAAkBd,GAC1BnY,KAAIC,IACfJ,EAAQK,KAAK,CACT9F,KAAMwF,EAAKQ,cAAcuB,EAAA,iBAAyB,CAAErB,MAAOL,EAAOI,QAClEiB,IAAKrB,EAAOK,OACd,IAEFqd,GAAaA,EAAUhhB,MAAQghB,EAAUhhB,KAAKvB,OAAS,GACvDyE,EAAQK,KAAK,CACT9F,KAAMwF,EAAKQ,cAAcuB,EAAA,iBAAyB,CAAErB,MAAO,gBAC3DgB,IAAK,OAGTsc,GAAaA,EAAUjhB,MAAQihB,EAAUjhB,KAAKvB,OAAS,GACvDyE,EAAQK,KAAK,CAAE9F,KAAMwF,EAAKQ,cAAcuB,EAAA,iBAAyB,CAAErB,MAAO,QAAUgB,IAAK,OAEtFzB,CAAO,EAElBnE,KAAKmiB,oBAAsB,KACvB,MAAM,UAAElB,GAAcjhB,KAAKoE,MAC3B,OAAO6c,GAAwBjF,GAAiB,EAAE,EAEtDhc,KAAKoiB,sBAAwB,KACzB,MAAM,WAAErd,GAAe/E,KAAKoE,OACtB,iBAAEie,GAAqBriB,KAAKgE,MAClC,OAAQ,kBAAoB2d,GAAmB,CAAE7c,YAAaud,EAAkBtd,WAAYA,EAAY2c,cAAe1hB,KAAKsiB,qBAAsBne,QAAS6X,IAAoB,EAEnLhc,KAAKsiB,qBAAwB1d,IACzB,MAAM,QAAE2d,EAAO,MAAE1f,GAAU7C,KAAKoE,MAC1Boe,EAAWrjB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGqjB,KAAKC,MAAMD,KAAK3f,UAAUD,KAAU,CAAEoe,UAAWrc,IAClG5E,KAAK+F,SAAS,CAAEsc,iBAAkBzd,IAAS,KACvC2d,EAAQI,SAAQ,QAAiBJ,EAASC,GAAU,GACtD,CAEV,CACA5I,oBACI,MAAM,SAAEgJ,EAAQ,SAAEC,EAAQ,eAAEC,EAAc,mBAAEC,EAAkB,eAAEC,EAAc,mBAAEC,GAAuBjjB,KAAKoE,MACxG2e,GACAH,EAASG,EAAoBlB,GAAeiB,GAE5CG,GACAJ,EAASI,EAAoBnB,GAAekB,GAEhDhjB,KAAK+F,SAAS,CACVmd,gBAAiBljB,KAAKgiB,qBACtBK,iBAAkBriB,KAAKmiB,uBAE/B,CACAtI,mBAAmBC,GACf,MAAM,SAAE8I,EAAQ,SAAEC,EAAQ,eAAEC,EAAc,UAAEb,EAAS,mBAAEc,EAAkB,YAAEtG,EAAW,MAAE5Z,EAAK,eAAEmgB,EAAc,UAAEd,EAAS,mBAAEe,GAAwBjjB,KAAKoE,MACnJvB,KAAU,QAAQA,EAAOiX,EAAUjX,SAC/BkgB,GACAH,EAASG,EAAoBlB,GAAeiB,GAE5CG,GACAJ,EAASI,EAAoBnB,GAAekB,KAG/C,QAAQf,EAAWnI,EAAUmI,aAAe,QAAQC,EAAWpI,EAAUoI,YAC1EliB,KAAK+F,SAAS,CACVmd,gBAAiBljB,KAAKgiB,uBAI1BlI,EAAU2C,cAAgBA,GAC1Bzc,KAAKsiB,qBAAqBtG,GAAiB,GAAGpX,MAEtD,CACAoB,SACI,MAAM,QAAEgC,EAAO,WAAEjD,EAAU,cAAEoe,EAAa,gBAAEC,EAAe,UAAEnB,EAAS,MAAEpf,EAAK,kBAAEwgB,EAAiB,UAAEnB,EAAS,mBAAEe,GAAwBjjB,KAAKoE,OACpI,gBAAE8e,GAAoBljB,KAAKgE,MACjC,OAAQ,kBAAoB,KAAa,CAAEkf,gBAAiBA,EAAiBjC,UAAWjhB,KAAKoiB,wBAAyBpa,QAASA,EAASjD,WAAYA,EAAYoe,cAAeA,EAAeC,gBAAiBA,EAAiBnB,UAAWA,EAAWpf,MAAOA,EAAOwgB,kBAAmBA,EAAmBnhB,MAAO,oBAAyBohB,YAAY,EAAMpB,UAAWA,EAAWe,mBAAoBA,GAC1Y,EAGJ,MAAM,IAAkB,SAAsB,CAACjf,GAASyY,kBACpD,MAAMqE,GAAiB,QAAWC,SAASC,QACrCC,GAAY,QAAoBH,IAChC,SAAEb,EAAQ,WAAEC,IAAe,QAAae,GAExC6B,GAAiB,QAAS,CAC5B7C,WACAC,aACAxE,MAAO,MAEX,IAAIuG,EACAsB,EACJ,MAAMR,EAAqBvF,GAAsBf,GAC7CsG,IACAd,EAAY,gBAAuBje,EAAO+e,EAAoBlB,GAAeiB,GAC7ES,EAAuB,2BAAkCvf,EAAO+e,EAAoBlB,GAAeiB,IAIvG,MAAME,GAAiB,QAAS,CAC5B/C,WACAC,aACAsD,UAAU,EACV9H,MAAO,MAEX,IAAIwG,EACAuB,EACJ,MAAMR,EAAqBtF,GAAsBlB,GAKjD,OAJIwG,IACAf,EAAY,gBAAuBle,EAAOif,EAAoBnB,GAAekB,GAC7ES,EAAuB,2BAAkCzf,EAAOif,EAAoBnB,GAAekB,IAEhG,CACH/B,YACA6B,iBACAb,YACAsB,uBACAR,qBACAtG,cACAuG,iBACAd,YACAuB,uBACAR,qBACH,IAEC,GAAqB,CACvBL,SAAU,SACVC,SAAU,UAERa,IAAwB,IAAAnC,SAAQ,GAAiB,GAAzB,CAA6CQ,IACrE4B,IAAiB,EAAAxd,EAAA,KAAW,QAAWud,K,wCClJtC,MAAM,GAAS,CAClB3H,KAAM,CACF5Z,QAAS,OACTgB,WAAY,UAEhBygB,UAAW,CAAC,EACZC,UAAW,CACPngB,UAAW,EACXL,aAAc,EACdC,YAAaoG,EAAA,QAEjBoa,cAAe,CACX9O,SAAU+O,GAAA,SACVC,MAAOC,GAAA,QAEXC,cAAe,CACXlP,SAAU+O,GAAA,SACVC,MAAOG,GAAA,QAEXvD,SAAU,CACNze,QAAS,OACTsB,WAAYiG,EAAA,QAEhB1B,QAAS,CACLoc,YAAanb,EAAA,QAEjBob,OAAQ,CACJtb,gBAAiBC,EAAA,OACjBG,cAAegS,GAAA,OACfiJ,YAAanb,EAAA,OACbC,aAAcD,EAAA,OACdG,WAAYH,EAAA,QAEhBqb,cAAe,CACXniB,QAAS,OACToiB,eAAgB,iBAEpBC,mBAAoB,CAChBriB,QAAS,QAEbsiB,qBAAsB,CAClBtiB,QAAS,OACTuB,UAAWgG,EAAA,QAEfmK,MAAO,CACH1K,cAAegS,GAAA,SCxBvB,MAAMuJ,WAA2B,cAC7B9gB,cACIC,SAASpE,WACTO,KAAK8D,aAAe,CAEpB,EACA9D,KAAKgE,MAAQ7E,OAAOC,OAAO,CAAC,EAAGY,KAAK8D,cACpC9D,KAAK2kB,eAAkB5f,IACnB,MAAM,oBAAE0C,EAAmB,oBAAEC,GAAwB1H,KAAKoE,OACpD,mBAAEwgB,GAAuB5kB,KAAKgE,MAC9BgD,EAAShH,KAAK6kB,iBACd3d,EAAWlH,KAAK8kB,mBAChBtd,EAASxH,KAAK+kB,iBACd3d,EAASpH,KAAKglB,iBACd1d,EAAStH,KAAKilB,iBACdtd,EAAS3H,KAAKklB,iBAEpB,OAAMle,GAAUE,GAAYM,GAAUJ,GAAUE,GAAUK,EAGlD,kBAAoB,KAAa,CAAE7C,YAAa8f,EAAoB5d,OAAQA,EAAQC,UAAWjH,KAAKmlB,oBAAqBje,SAAUA,EAAUC,YAAanH,KAAKolB,sBAAuBhe,OAAQA,EAAQC,UAAWrH,KAAKqlB,oBAAqB/d,OAAQA,EAAQC,UAAWvH,KAAKslB,oBAAqB9d,OAAQA,EAAQG,OAAQA,EAAQC,YAAa5H,KAAKulB,sBAAuBxgB,WAAYA,EAAY0C,oBAAqBA,EAAqBC,oBAAqBA,EAAqB5B,WAAY9F,KAAKwlB,4BAFne,IAEggB,EAE/gBxlB,KAAKwlB,0BAA6B5gB,IAC9B,MAAM,QAAE2d,EAAO,qBAAEkD,EAAoB,MAAE5iB,GAAU7C,KAAKoE,MAChDoe,EAAWrjB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGqjB,KAAKC,MAAMD,KAAK3f,UAAUD,KAAU,CAAE+Y,aAAS9T,EAAW+T,eAAW/T,EAAW6X,SAAU,CAAE,CAAC/C,GAAkBhY,IAAS,KAAOkX,cAAUhU,EAAW2U,YAAa7X,IAClN5E,KAAK+F,SAAS,CAAE6e,mBAAoBhgB,IAAS,KACrC6gB,GACAA,EAAqB7gB,GAEzB2d,EAAQI,SAAQ,QAAiBJ,EAASC,GAAU,GACtD,EAENxiB,KAAK6kB,eAAiB,KAClB,MAAM,aAAEa,EAAY,WAAEC,GAAe3lB,KAAKoE,MAC1C,OAAO,QAAeuhB,EAAYD,EAAa,EAEnD1lB,KAAKmlB,kBAAoB,KACrB,MAAM,aAAEO,EAAY,aAAEE,EAAY,WAAED,GAAe3lB,KAAKoE,MACxD,OAAO,QAAauhB,KAAe,QAAiBD,EAAcE,EAAa,EAEnF5lB,KAAK8kB,iBAAmB,KACpB,MAAM,eAAEe,EAAc,WAAEF,GAAe3lB,KAAKoE,MAC5C,OAAO,QAAiBuhB,EAAYE,EAAe,EAEvD7lB,KAAKolB,oBAAsB,KACvB,MAAM,eAAES,EAAc,aAAED,EAAY,WAAED,GAAe3lB,KAAKoE,MAC1D,OAAO,QAAeuhB,KAAe,QAAiBE,EAAgBD,EAAa,EAEvF5lB,KAAKglB,eAAiB,KAClB,MAAM,aAAEc,EAAY,WAAEH,GAAe3lB,KAAKoE,MAC1C,OAAO,QAAeuhB,EAAYG,EAAa,EAEnD9lB,KAAKqlB,kBAAoB,KACrB,MAAM,aAAES,EAAY,aAAEF,EAAY,WAAED,GAAe3lB,KAAKoE,MACxD,OAAO,QAAauhB,KAAe,QAAiBG,EAAcF,EAAa,EAEnF5lB,KAAKilB,eAAiB,KAClB,MAAM,aAAEc,EAAY,WAAEJ,GAAe3lB,KAAKoE,MAC1C,OAAO,QAAeuhB,EAAYI,EAAa,EAEnD/lB,KAAKslB,kBAAoB,KACrB,MAAM,aAAES,EAAY,aAAEH,EAAY,WAAED,GAAe3lB,KAAKoE,MACxD,OAAO,QAAauhB,KAAe,QAAiBI,EAAcH,EAAa,EAEnF5lB,KAAK+kB,eAAiB,KAClB,MAAM,aAAEiB,EAAY,WAAEL,GAAe3lB,KAAKoE,MAC1C,OAAO,QAAeuhB,EAAYK,EAAa,EAEnDhmB,KAAKklB,eAAiB,KAClB,MAAM,aAAEU,EAAY,WAAED,GAAe3lB,KAAKoE,MAC1C,OAAO,QAAeuhB,EAAYC,EAAa,EAEnD5lB,KAAKulB,oBAAsB,KACvB,MAAMte,EAAYjH,KAAKmlB,oBACjBhe,EAAcnH,KAAKolB,sBACnB/d,EAAYrH,KAAKqlB,oBACjB9d,EAAYvH,KAAKslB,oBACvB,OAAOre,GAAaE,GAAeE,GAAaE,CAAS,CAEjE,CACAqS,oBACI5Z,KAAK+F,SAAS,CACV6e,mBAAoB5kB,KAAKoE,MAAMqY,aAEvC,CACA5C,mBAAmBC,GACf,MAAM,YAAE2C,GAAgBzc,KAAKoE,MACzB0V,EAAU2C,cAAgBA,GAC1Bzc,KAAK+F,SAAS,CACV6e,mBAAoB5kB,KAAKoE,MAAMqY,aAG3C,CACAzW,SACI,MAAM,SAAE4a,EAAQ,SAAEC,EAAQ,QAAE7Y,EAAO,KAAE9D,EAAI,yBAAE+hB,EAAwB,yBAAEC,EAAwB,wBAAEC,EAAuB,mBAAEC,EAAkB,mBAAEC,EAAkB,cAAElD,EAAa,gBAAEC,EAAe,kBAAEkD,EAAiB,YAAE7J,EAAW,qBAAE8J,EAAoB,MAAE1jB,GAAW7C,KAAKoE,MAEhQoiB,GAAkBxmB,KAAK6kB,kBAAoB0B,IAAyB,cACpEE,GAAoBzmB,KAAK8kB,oBAAsByB,IAAyB,cACxEG,GAAkB1mB,KAAKglB,kBAAoBuB,IAAyB,cACpEI,GAAkB3mB,KAAKilB,kBAAoBsB,IAAyB,cACpEK,GAAkB5mB,KAAKklB,kBAAoBqB,IAAyB,cACpEM,EAAcL,GAAkBC,GAAoBC,GAAkBC,GAAkBC,EACxFE,EAAiBvJ,GAAkBd,GACnCsG,EAAqBvF,GAAsBf,GAC3C4G,ENoIsB,CAAC5G,IACjC,IAAIC,EACJ,OAAQD,GACJ,KAAKjB,GAAgBqB,IACjB,OAAO,SAEX,KAAKrB,GAAgBsB,OACjB,OAAO,YAEX,KAAKtB,GAAgB0B,MACjB,OAAO,WAEX,KAAK1B,GAAgB2B,SACjB,OAAO,cAEX,KAAK3B,GAAgBuB,IACjB,OAAO,SACX,KAAKvB,GAAgBwB,OACjB,OAAO,YACX,KAAKxB,GAAgByB,IACjB,OAAO,SAEX,KAAKzB,GAAgB4B,IACjB,OAAO,SAEX,KAAK5B,GAAgB6B,SACjB,OAAO,cAEX,QACIX,OAAS5U,EAGjB,OAAO4U,CAAM,EMpKiBqK,CAAqBtK,GACzCwG,EAAqBtF,GAAsBlB,GACjD,OAAQ,kBAAoB,SAAU,CAAEva,MAAO,WAC3C,kBAAoB,MAAO,CAAEA,MAAO,kBAChC,kBAAoB,EAAAzB,MAAO,CAAEC,aAAc,KAAMwB,MAAO,SAAcvB,KAAM,EAAAqmB,WAAA,QAAqB9iB,EAAKQ,cAAcuB,EAAA,kBACpH,kBAAoB,MAAO,CAAE/D,MAAO,uBAChCgkB,GAA4B,kBAAoB,KAAU,CAAErF,SAAUA,EAAUvb,SAAU+gB,IAC1FF,GAA2B,kBAAoB,KAAa,QACpE,kBAAoB,MAAO,CAAEjkB,MAAO,yBAChClC,KAAK2kB,eAAekC,GACpB,kBAAoB,MAAO,CAAE3kB,MAAO,YAChC,kBAAoB,KAAS,CAAE6F,mBAAoBA,EAAoBC,QAASA,EAASjD,WAAY8hB,EAAa/gB,WAAYwgB,EAAmBniB,QAAS2iB,EAAgB/D,mBAAoBA,EAAoBtG,YAAaA,EAAawK,SAAUlE,EAAoBmE,SAAUjE,EAAoBA,mBAAoBA,MAC/TxG,IAAgBjB,GAAgBqB,KAC5BJ,IAAgBjB,GAAgBsB,QAAUmJ,IAA+B,kBAAoB,MAAO,CAAE/jB,MAAO,aAC9G,kBAAoB,KAAU,CAAE0e,SAAUA,EAAUtb,SAAU8gB,MACtE,kBAAoBzC,GAAgB,CAAE3b,QAASA,EAASjD,WAAY8hB,EAAa1D,cAAeA,EAAeC,gBAAiBA,EAAiB3G,YAAaA,EAAa5Z,MAAOA,EAAOwgB,kBAAmBA,IACpN,EAGJ,MAAM,IAAkB,SAAsB,CAACrf,GAAS4c,WAAUC,WAAUpE,kBACxE,MAAMqE,GAAiB,QAAWC,SAASC,QACrCC,GAAY,QAAoBH,IAChC,SAAEb,EAAQ,WAAEC,IAAe,QAAae,GACxCkG,GAAuB,OAAkB,MACzCC,EAAY,qBAAmCpjB,EAAO,QAAkBmjB,GACxEE,EAAiB,0BAAwCrjB,EAAO,QAAkBmjB,GAClFZ,EAAuB,gCAA8CviB,EAAO,QAAkBmjB,GAC9FG,GAAwB,OAAmB,MAC3C3B,EAAa,sBAAqC3hB,EAAO,QAAoBsjB,GAC7EC,EAAkB,2BAA0CvjB,EAAO,QAAoBsjB,GACvFE,EAAwB,iCAAgDxjB,EAAO,QAAoBsjB,GAEzG,IAAItf,EAAU8Y,EAAenB,UACxB3X,GAAWyU,IACZzU,EAAU,CAAE,CAAC4U,GAAkBH,IAAe,MAElD,MAAM5Z,EAAQ,CACV2H,OAAQrL,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGqc,GAAUjR,QAASsW,EAAetW,QAC1EoR,QAASkF,EAAelF,SAAWH,GAAUG,QAC7CC,UAAWiF,EAAejF,WAAaJ,GAAUI,UACjD8D,SAAU3X,EACV8T,SAAUgF,EAAehF,SACzBW,cACAwE,aAEErC,GAAc,QAASzf,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGyD,GAAQ,CAAEqe,UAAWN,EAAUC,WAAUpE,iBAAa3U,EAAWmZ,eAAWnZ,EAAWoY,aAChJD,cACJ,MAAO,CACHyF,cAAc,QAAgB0B,EAAW,SACzCvB,gBAAgB,QAAgBuB,EAAW,WAC3CtB,cAAc,QAAgBsB,EAAW,SACzCrB,cAAc,QAAgBqB,EAAW,SACzCnB,yBAA0BwB,EAAA,kCAAqDzjB,GAC/EkiB,yBAA0BuB,EAAA,kCAAqDzjB,GAC/EmiB,wBAAyBsB,EAAA,iCAAoDzjB,GAC7EyD,oBAAqBggB,EAAA,6BAAgDzjB,GACrE0D,oBAAqB+f,EAAA,6BAAgDzjB,GACrEgiB,cAAc,QAAgBoB,EAAW,SACzCxB,cAAc,QAAgBwB,EAAW,SACzCA,YACAC,iBACAd,uBACAY,uBACAtkB,QACA+b,cACA+G,aACA4B,kBACAC,wBACAF,wBACH,IAECI,IAAiB,EAAAvhB,EAAA,KAAW,SAAW,IAAAob,SAAQ,GAAiB,CAAC,EAA1B,CAA6BmD,M,4ECtMnE,MAAM,GAAS,CAClBiD,WAAY,CACR5e,gBAAiBC,EAAA,SACjB7G,QAAS,OACToiB,eAAgB,SAChBnb,WAAY6R,GAAA,SACZtc,OAAQ,OACRC,MAAO,QAEXgpB,UAAW,CACPC,SAAU,YAEdC,cAAe,CACX9P,OAAQ+P,GAAA,UAEZC,gBAAiB,CACbhE,MAAOiE,GAAA,SACPjT,SAAUkT,GAAA,WCFlB,MAAMC,WAA0B,cAC5BvkB,YAAYQ,GACRP,MAAMO,GACNpE,KAAKgE,MAAQ,CACTokB,QAAS,GACTC,KAAM,IAEVroB,KAAKyV,UAAY,KACb,MAAM,uBAAEsJ,EAAyB,UAA2B,4BAAEC,EAA8B,WAAiC,SAAEiB,EAAQ,cAAEqI,EAAa,YAAE7L,EAAW,MAAE5Z,EAAK,OAAEyc,EAAM,cAAEiJ,EAAa,WAAErI,EAAU,KAAEhc,GAAUlE,KAAKoE,MAC9N,IAAKvB,IAAUyc,EACX,OAEJ,MAAMI,EAAY3X,EAAmBlF,EAAM8c,UACrCC,GAAa,QAAmB/c,GAChC2lB,GAAgB,QAAiB3lB,GACjCwlB,EAAO,GACPvJ,GAAgB,OAA+B,CACjDQ,SACAC,MAAOiJ,IAAgC5I,EAAa,eAAiBF,GACrED,WAAW,IAGT2I,EAAUI,GAAiB5I,EAC3B,CACE,CACIlhB,KAAM,IAEV,CACIA,KAAMkhB,EACA1b,EAAKQ,cAAcuB,EAAA,QAAgB,CAAEwiB,MAAO,IAC5CvkB,EAAKQ,cAAcuB,EAAA,cAG/B,CACE,CACIvH,KAAM,IAEVS,OAAOC,OAAO,CAAEgf,UAAMtW,EAAWpJ,KAAMwF,EAAKQ,cAAcuB,EAAA,oBAA4B,CAAE+B,QAAS0X,IAAcgJ,QAAuB,YAAdhJ,GAA2BjD,IAAgBjB,GAAgBqB,IAAM,gBAAkB6C,GAAcZ,EAAcpf,QAAU,CAAEipB,YAAY,KAGvQ,IAAK,IAAIC,EAAc,IAAIxc,KAAK8T,EAAa,aAAc0I,GAAe,IAAIxc,KAAK6T,EAAW,aAAc2I,EAAYvI,QAAQuI,EAAYtI,UAAY,GAAI,CACxJ,MAAMuI,GAAQ,EAAAtI,EAAA,GAAOqI,EAAa,cAClC,IAAID,EAAa7J,EAAcpf,OAAS,EACxCof,EAAcxa,KAAIwkB,IACDA,EAAQC,IAAIF,KAErBF,GAAa,EACbG,EAAQE,IAAIH,EAAO,CACfzK,KAAMyK,IAEd,IAGJ,MAAMI,EAAY,IAAI7c,KAAKyc,EAAQ,aACnCT,EAAQ5jB,KAAKrF,OAAOC,OAAO,CAAEV,KAAMwF,EAAKoa,WAAW2K,EAAW,CACtD9O,IAAK,UACLoE,MAAO,WACJoK,GAAc,CACrBvK,KAAMyK,EACNH,QAAS,OACTC,YAAY,IAEpB,CACA,MAAM1K,EAAac,EACbb,EAAkBc,EAExBF,EAAcxa,KAAIwkB,IACd,MAAMI,EAAQ,GACd,IAAItV,EACAlV,EACAyqB,EACUlf,MAAMoG,KAAKyY,EAAQ3P,UAAUiQ,MAAK,CAACC,EAAGC,IAC5C,IAAIld,KAAKid,EAAEjL,MAAQ,IAAIhS,KAAKkd,EAAElL,MACvB,EAEF,IAAIhS,KAAKid,EAAEjL,MAAQ,IAAIhS,KAAKkd,EAAElL,OAC3B,EAGD,IAGT9Z,KAAIilB,IACD7qB,IACDA,EAAO6qB,GAAQA,EAAK5kB,OAAwB,OAAf4kB,EAAK5kB,MAAiB4kB,EAAK5kB,MAAQ,MAE/DiP,IACDA,EAAO2V,EAAKnkB,IAAMmkB,EAAKnkB,KAAOmkB,EAAK5kB,MAAQ,kBAAoB,MAAO,CAAEzC,MAAO,oBAA0BqnB,EAAKnkB,IAAM,MAEpHmkB,EAAKnkB,KAAO+jB,IACZA,EAAaI,GAGjBL,EAAM1kB,KAAK,CACPI,MAAO2kB,EAAKtL,IAAesL,EAAKtL,GAAYC,IACtC,SAAeqL,EAAKtL,GAAYC,GAAiBtZ,MAAO2kB,EAAKtL,GAAYC,GAAiBxH,OAC1FxS,EAAKQ,cAAcuB,EAAA,gBAC3B,IAGNijB,EAAMM,QAAQ,CAAC,EACf,CACI5kB,MAAQ,kBAAoB,MAAO,KAC/BlG,EACAkV,KAERyU,EAAK7jB,KAAK,CACN0kB,QACAO,iBAAkBN,EAAWxkB,QAAU,MAAM+a,KAAeyJ,EAAWxkB,QAAU,MAAM6jB,IACvFe,KAAMJ,EACNO,SAAUpB,GAAkBC,QAAyEzgB,IAAxDygB,EAAcrjB,MAAKgU,GAAOA,EAAI9T,KAAO+jB,EAAW/jB,MAC/F,IAENpF,KAAK+F,SAAS,CACVqiB,UACAC,QACF,EAENroB,KAAK2pB,cAAgB,KACjB,MAAM,MAAE9mB,EAAK,KAAEqB,GAASlE,KAAKoE,MAC7B,IAAK,MAAM8U,KAAO/Z,OAAOga,OAAOtW,EAAMgZ,WAClC,GAAY,MAAR3C,EACA,OAAO,kBAAoB,KAAkB,CAAE1O,OAAQ0O,EAAK0Q,YAAY,IAGhF,OAAQ,kBAAoB,EAAA3pB,WAAY,KACpC,kBAAoB,EAAAK,eAAgB,CAAEC,KAAM,QAC5C,kBAAoB,EAAAK,eAAgB,KAAMsD,EAAKQ,cAAcuB,EAAA,sBAA8B,EAEnGjG,KAAK6pB,UAAYhd,IACb,MAAM,MAAEhK,GAAU7C,KAAKoE,OACjB,QAAEgkB,GAAYpoB,KAAKgE,MACzB,IAAI8lB,EACJ,MAAMC,EAAS3B,EAAQvb,GACjBmd,EAAannB,GAASA,EAAMiZ,UAAYjZ,EAAMiZ,SAOpD,OANIiO,EAAOrB,UAAYqB,EAAO3L,MAGrB4L,GAAcnnB,EAAMiZ,SAASsC,OAAS2L,EAAO3L,QAFlD0L,EAAYE,GAAcnnB,EAAMiZ,SAASiO,EAAOrB,UAK7CoB,EACD,CACEjd,QACAid,aAEF,CAAC,CAAC,EAEZ9pB,KAAKiqB,cAAiBpd,IACX,CACHqd,OAAQlqB,KAAK6pB,UAAUhd,GACvBsd,OAAQnqB,KAAKoqB,aACbC,YAAaxd,IAGrB7M,KAAKsqB,eAAiB,CAACzkB,EAAO0kB,EAAYC,KACtC,MAAM,WAAE1kB,GAAe9F,KAAKoE,OACtB,KAAEikB,GAASroB,KAAKgE,MACtB,IAAIymB,EACAzK,EAAQ,IACG,IAAXwK,EACAC,EAAUpC,EAAK/jB,KAAIomB,IACfA,EAAIhB,SAAWa,EACRG,MAIXD,EAAU,IAAIpC,GACdoC,EAAQD,GAAOd,SAAWa,EAC1BvK,EAAQ,CAACyK,EAAQD,GAAOjB,OAE5BvpB,KAAK+F,SAAS,CAAEsiB,SAAQ,KAChBviB,GACAA,EAAWka,EAAOuK,EACtB,GACF,EAENvqB,KAAKoqB,aAAe,CAACvkB,EAAOgH,EAAOid,KAC/B,MAAM,OAAEK,GAAWnqB,KAAKoE,OAClB,QAAEgkB,GAAYpoB,KAAKgE,MACrBmmB,GAGAA,EAFgB/B,EAAQvb,GAAO6b,QACPoB,IAAc,GAAAa,gBAAA,IACLvC,EAAQvb,GAAOuR,KACpD,EAEJpe,KAAKsqB,eAAiBtqB,KAAKsqB,eAAeM,KAAK5qB,MAC/CA,KAAKoqB,aAAepqB,KAAKoqB,aAAaQ,KAAK5qB,KAC/C,CACA4Z,oBACI5Z,KAAKyV,WACT,CACAoE,mBAAmBC,GACf,MAAM,MAAEjX,EAAK,OAAEyc,EAAM,cAAEiJ,GAAkBvoB,KAAKoE,MACxCymB,EAAgBvL,GAAUA,EAAOre,KAAOwhB,KAAK3f,UAAUwc,EAAOre,MAAQ,GACtE6pB,EAAiBhR,EAAUwF,QAAUxF,EAAUwF,OAAOre,KAAOwhB,KAAK3f,UAAUgX,EAAUwF,OAAOre,MAAQ,IACvG,QAAS6Y,EAAUjX,UAAW,QAASA,IACvCioB,IAAmBD,GACnB/Q,EAAUyO,gBAAkBA,GAC5BvoB,KAAKyV,WAEb,CACAzP,SACI,MAAM,KAAE9B,EAAI,UAAE6mB,GAAc/qB,KAAKoE,OAC3B,QAAEgkB,EAAO,KAAEC,GAASroB,KAAKgE,MAC/B,OAAQ,kBAAoB,GAAAgnB,qBAAsB,KAC9C,kBAAoB,GAAAC,gBAAiB,CAAE,aAAc/mB,EAAKQ,cAAcuB,EAAA,0BAAkC7F,UAAW,wBAAyB8qB,eAAgB,IAC1J,kBAAoB,GAAAC,MAAO,KACvB,kBAAoB,GAAAC,GAAI,KAAMhD,EAAQ9jB,KAAI,CAAC+mB,EAAKxe,IAAW,kBAAoB,GAAAye,GAAI,CAAE1lB,IAAK,OAAOiH,KAASwe,EAAIzmB,QAAS2mB,SAAU,SAAUnC,KAAMiC,EAAI1C,WAAa3oB,KAAKiqB,cAAcpd,QAAS/E,EAAW5F,MAAOmpB,EAAInpB,OAASmpB,EAAI3sB,UACrO,kBAAoB,GAAA8sB,MAAO,KAAMT,EAAa,kBAAoB,GAAAK,GAAI,KAClE,kBAAoB,GAAAK,GAAI,CAAEC,QAAS,KAC/B,kBAAoB,EAAAC,SAAU,KAC1B,kBAAoB,MAAO,CAAEzpB,MAAO,CAAE0pB,UAAW,WAC7C,kBAAoB,EAAAC,QAAS,CAAElrB,KAAM,WAAgB0nB,EAAK/jB,KAAI,CAAComB,EAAKoB,IAAc,kBAAoB,GAAAV,GAAI,CAAExlB,IAAK,OAAOkmB,KAAcpB,EAAIxB,MAAM5kB,KAAI,CAACilB,EAAMwC,IAA4B,IAAdA,EAAmB,kBAAoB,GAAAN,GAAI,CAAEO,UAAW5D,EAAQ2D,GAAWrtB,KAAMkH,IAAK,QAAQmmB,KAAaD,IAAYP,SAAU,SAAUU,OAAQ,CACpUjS,QAAS0Q,EAAIwB,kBACb3B,WAAYG,EAAIhB,SAChBpkB,SAAU,CAAC6mB,EAAQ5B,IAAevqB,KAAKsqB,eAAe6B,EAAQ5B,EAAYuB,GAC1EA,cACK,kBAAoB,GAAAL,GAAI,CAAEO,UAAW5D,EAAQ2D,GAAWrtB,KAAMkH,IAAK,QAAQkmB,KAAYC,IAAaR,SAAU,SAAUa,aAAcL,IAAcrB,EAAIxB,MAAMxpB,OAAS,GAAK6pB,EAAK3kB,cAClMynB,QAAwB,IAAhBhE,EAAK3oB,SAAiB,kBAAoB,MAAO,CAAEwC,MAAO,eAAqBlC,KAAK2pB,iBACpG,EAGJ,MAAM,IAAkB,SAAsB,CAAC3lB,GAASyY,kBACpD,MAAMqE,GAAiB,QAAWC,SAASC,QACrCC,GAAY,QAAoBH,IAChC,SAAEb,EAAQ,WAAEC,IAAe,QAAae,GAC9C,MAAO,CACHhB,WACAxD,cACAyD,aACH,IAGCoM,IAAuB,IAAA/K,SAAQ,GADV,CAAC,EACC,CAA6C4G,IACpEoE,IAAgB,EAAApmB,EAAA,IAAWmmB,ICzP1B,MAAME,WAA4B,cACrC5oB,cACIC,SAASpE,WACTO,KAAK8D,aAAe,CAAC,EACrB9D,KAAKgE,MAAQ7E,OAAOC,OAAO,CAAC,EAAGY,KAAK8D,aACxC,CACAkC,SACI,MAAM,cAAEsiB,EAAa,qBAAEmE,EAAoB,iBAAEC,EAAgB,aAAEC,EAAY,WAAEC,EAAU,eAAEC,EAAc,gBAAEC,EAAe,WAAErjB,EAAU,YAAEgT,EAAW,cAAE8L,GAAmBvoB,KAAKoE,MACrK6e,EAAqBtF,GAAsBlB,GACjD,OAAQ,kBAAoB,KAAa,CAAE6L,cAAeA,EAAemE,qBAAsBA,EAAsBC,iBAAkBA,EAAkBC,aAAcA,EAAcC,WAAYA,EAAYC,eAAgBA,EAAgBC,gBAAiBA,EAAiBrjB,WAAYA,EAAY8e,cAAeA,EAAewE,gBAAgB,EAAMC,YAAY,EAAM/J,mBAAoBA,GACrY,EAGJ,MAAM,IAAkB,SAAsB,CAACjf,EAAOI,KAC3C,CAAC,KAKN6oB,IAAyB,IAAA1L,SAAQ,GAHZ,CAE3B,EAC+B,CAA6CiL,IACtEU,IAAkB,EAAA/mB,EAAA,IAAW8mB,ICUnC,MAAME,WAAiB,cACnBvpB,YAAYia,EAAYC,GACpBja,MAAMga,EAAYC,GAClB9d,KAAK8D,aAAe,CAChBskB,QAAS,GACTE,eAAe,EACf8E,mBAAmB,EACnB/E,KAAM,GACNE,cAAe,IAEnBvoB,KAAKgE,MAAQ7E,OAAOC,OAAO,CAAC,EAAGY,KAAK8D,cACpC9D,KAAKqf,iBAAmB,KACpB,MAAM,MAAExc,EAAK,OAAEyc,GAAWtf,KAAKoE,MACzBsb,EAAY3X,EAAmBlF,EAAM8c,UACrCC,GAAa,QAAmB/c,GAChC2lB,GAAgB,QAAiB3lB,GAMvC,OALsB,OAA+B,CACjDyc,SACAC,MAAOiJ,IAAgC5I,EAAa,eAAiBF,GACrED,WAAW,GAEK,EAExBzf,KAAKqtB,eAAkBvO,IACnB,MAAM,YAAErC,EAAW,MAAE5Z,EAAK,OAAEyc,GAAWtf,KAAKoE,OACtC,cAAEkkB,EAAa,kBAAE8E,EAAiB,cAAE7E,GAAkBvoB,KAAKgE,MAC3D0b,EAAY3X,EAAmBlF,EAAM8c,UACrC6I,GAAgB,QAAiB3lB,GACjC+pB,EAAatN,GAAUA,EAAOgO,KAAOhO,EAAOgO,KAAK7E,MAAQ,EAEzDzI,EAAQ,GAMd,OALAuI,EAAcjkB,KAAIilB,IACRA,EAAK5kB,QAAU,MAAM+a,KAAe6J,EAAK5kB,QAAU,MAAM6jB,KAC3DxI,EAAMxb,KAAK+kB,EACf,IAEI,kBAAoB,IAAa,CAAEd,MAAOH,EAAgBsE,EAAa5M,EAAMtgB,OAAQ6tB,YAAajF,GAAiBC,EAAc7oB,SAAWktB,IAAe9N,EAAcpf,OAAS,EAAGsI,QAASwgB,EAAgB,GAAG,MAAYA,IAAkB9I,EAAWra,OAAQ+nB,EAAmBpN,MAAOA,EAAOwN,QAASxtB,KAAKytB,uBAAwB5qB,MAAOA,EAAOse,gBAAiBzD,GAAmBjB,GAAciR,WAAY,QAASC,eAAe,GAAS,EAElc3tB,KAAK4tB,cAAgB,CAACC,GAAW,KAC7B,MAAM,QAAEtL,EAAO,KAAEre,EAAI,MAAErB,EAAK,OAAEyc,GAAWtf,KAAKoE,MACxCqkB,EAAQnJ,GAAUA,EAAOgO,KAAOhO,EAAOgO,KAAK7E,MAAQ,EACpD/M,EAAQ4D,GAAUA,EAAOgO,MAAQhO,EAAOgO,KAAK9iB,QAAU8U,EAAOgO,KAAK9iB,OAAOkR,MAC1E4D,EAAOgO,KAAK9iB,OAAOkR,MACnBD,GAAUjR,OAAOkR,MAIjBoS,GAHSxO,GAAUA,EAAOgO,MAAQhO,EAAOgO,KAAK9iB,QAAU8U,EAAOgO,KAAK9iB,OAAOmR,OAC3E2D,EAAOgO,KAAK9iB,OAAOmR,OACnBF,GAAUjR,OAAOmR,QACDD,EAAQ,EAC9B,OAAQ,kBAAoB,EAAAqS,WAAY,CAAEC,WAAYH,EAAUI,UAAWxF,EAAOyF,gBAAiB,CAACroB,EAAOsoB,KAAY,QAAoB5L,EAAS1f,EAAOsrB,GAAUC,UAAW,CAACvoB,EAAOwoB,KAAe,QAAc9L,EAAS1f,EAAOyc,EAAQ+O,GAAaP,KAAMA,EAAMK,QAASzS,EAAO4S,OAAQ,CACtRC,gBAAiBrqB,EAAKQ,cAAcuB,EAAA,kBAA0B,CAC1D4N,MAAO3P,EAAKQ,cAAcuB,EAAA,iBAC1BuoB,UAAWX,EAAW,SAAW,SAEtC3tB,QAAS2tB,EAAW,EAAAY,kBAAA,OAA2B,EAAAA,kBAAA,IAAuBC,SAAU,sBAAqBb,EAAW,UAAY,KAAQ,EAE/I7tB,KAAK2uB,SAAW,KACZ,MAAM,QAAEpM,EAAO,YAAE9F,EAAW,MAAE5Z,EAAK,OAAEyc,EAAM,kBAAEoB,GAAsB1gB,KAAKoE,OAClE,cAAEkkB,EAAa,cAAEC,GAAkBvoB,KAAKgE,MACxC0b,EAAY3X,EAAmBlF,EAAM8c,UACrC6I,GAAgB,QAAiB3lB,GACvC,OAAQ,kBAAoB0pB,GAAe,CAAExN,uBAAwBvC,KAAwCwC,4BAA6BrC,KAA6C3U,QAASwgB,EAAgB,GAAG,MAAYA,IAAkB9I,EAAW4I,cAAeA,EAAeyC,UAAWrK,IAAsB,gBAAwB5a,WAAY9F,KAAK4uB,eAAgBzE,OAAQ,CAAC0E,EAAUC,EAAiB1Q,KAAS,QAAWmE,EAAS1f,EAAOgsB,EAAUC,EAAiB1Q,GAAO3B,YAAaA,EAAa5Z,MAAOA,EAAOyc,OAAQA,EAAQiJ,cAAeA,GAAiB,EAE1jBvoB,KAAK+uB,WAAcjQ,IACf,MAAM,YAAErC,EAAW,OAAE6C,GAAWtf,KAAKoE,OAC/B,cAAEkkB,EAAa,cAAEC,GAAkBvoB,KAAKgE,MACxC4oB,EAAatN,GAAUA,EAAOgO,KAAOhO,EAAOgO,KAAK7E,MAAQ,EAC/D,OAAQ,kBAAoByE,GAAiB,CAAE5E,cAAeA,EAAeoE,iBAA2C,IAAzB5N,EAAcpf,SAAkB4oB,GAA0C,IAAzBC,EAAc7oB,OAAeitB,aAAc7N,EAAcpf,OAAQktB,WAAYA,EAAYC,eAAgB7sB,KAAKgvB,mBAAoBlC,gBAAiB9sB,KAAKivB,sBAAuBxlB,WAAYzJ,KAAK4tB,gBAAiBnR,YAAaA,EAAa8L,cAAeA,GAAiB,EAE/ZvoB,KAAKgvB,mBAAsBE,IACvB,MAAM,cAAE5G,GAAkBtoB,KAAKgE,MAChB,SAAXkrB,EACAlvB,KAAK+F,SAAS,CAAEuiB,eAAe,EAAOC,cAAe,KAErC,SAAX2G,EACLlvB,KAAK+F,SAAS,CACVuiB,eAAe,EACfC,cAAevoB,KAAKqf,qBAGR,QAAX6P,GACLlvB,KAAK+F,SAAS,CAAEuiB,eAAgBA,EAAeC,cAAe,IAClE,EAEJvoB,KAAKytB,uBAA0BpoB,IAC3BrF,KAAK+F,SAAS,CAAEqnB,kBAAmB/nB,GAAS,EAEhDrF,KAAKivB,sBAAwB,KACzBjvB,KAAK+F,SAAS,CAAEqnB,mBAAmB,GAAO,EAE9CptB,KAAKmvB,sBAAwBnnB,IACzB,MAAM,QAAEua,EAAO,MAAE1f,GAAU7C,KAAKoE,MAChC,IAAIgrB,EAAapnB,EACbpD,EAAQ,KAGG,IADDoD,EAAQqnB,QAAQ,QAE1BD,EAAa,eAAuB,EAAG,aACvCxqB,EAAQoD,EAAQsF,MAAM,cAE1B,MAAMkV,EAAWrjB,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGqjB,KAAKC,MAAMD,KAAK3f,UAAUD,KAAU,CAEjF8c,SAAU,CACN,CAACyP,GAAaxqB,GACfkX,cAAUhU,IACjB9H,KAAK+F,SAAS,CAAEuiB,eAAe,EAAOC,cAAe,KAAM,KACvDhG,EAAQI,SAAQ,QAAiBJ,EAASC,GAAU,GACtD,EAENxiB,KAAKsvB,uBAAyB,KAC1BtvB,KAAK+F,SAAS,CAAEuiB,eAAe,EAAOC,cAAe,IAAK,EAE9DvoB,KAAK4uB,eAAiB,CAAC5O,EAAOuK,GAAa,KACvC,MAAM,cAAEjC,EAAa,cAAEC,GAAkBvoB,KAAKgE,MAC9C,IAAImc,EAAW,IAAKmI,EAAgBtoB,KAAKqf,mBAAqBkJ,GAC1DvI,GAASA,EAAMtgB,OAAS,IACpB6qB,EACAvK,EAAM1b,KAAIilB,GAAQpJ,EAAS3b,KAAK+kB,KAGhCvJ,EAAM1b,KAAIilB,IACNpJ,EAAWA,EAAS3V,QAAO0O,GAAOA,EAAI9T,KAAOmkB,EAAKnkB,IAAG,KAIjEpF,KAAK+F,SAAS,CAAEuiB,eAAe,EAAOC,cAAepI,GAAW,EAEpEngB,KAAK6kB,eAAiB,KAClB,MAAM,aAAEa,EAAY,WAAEC,GAAe3lB,KAAKoE,MAC1C,OAAO,QAAeuhB,EAAYD,EAAa,EAEnD1lB,KAAK8kB,iBAAmB,KACpB,MAAM,eAAEe,EAAc,WAAEF,GAAe3lB,KAAKoE,MAC5C,OAAO,QAAiBuhB,EAAYE,EAAe,EAEvD7lB,KAAK+kB,eAAiB,KAClB,MAAM,aAAEiB,EAAY,WAAEL,GAAe3lB,KAAKoE,MAC1C,OAAO,QAAeuhB,EAAYK,EAAa,EAEnDhmB,KAAKglB,eAAiB,KAClB,MAAM,aAAEc,EAAY,WAAEH,GAAe3lB,KAAKoE,MAC1C,OAAO,QAAeuhB,EAAYG,EAAa,EAEnD9lB,KAAKilB,eAAiB,KAClB,MAAM,aAAEc,EAAY,WAAEJ,GAAe3lB,KAAKoE,MAC1C,OAAO,QAAeuhB,EAAYI,EAAa,EAEnD/lB,KAAKklB,eAAiB,KAClB,MAAM,aAAEU,EAAY,WAAED,GAAe3lB,KAAKoE,MAC1C,OAAO,QAAeuhB,EAAYC,EAAa,EAEnD5lB,KAAKuvB,aAAe,KAChB,MAAM,UAAEtO,EAAS,YAAEtC,EAAW,QAAE4D,EAAO,SAAExB,EAAQ,YAAEtE,EAAW,MAAE5Z,EAAK,YAAE+b,GAAgB5e,KAAKoE,MACvF2c,EAASC,OASLvE,GACLkC,EAAYjB,GAAmBjB,GAAcgB,KAA4BmB,GATzE2D,EAAQI,SAAQ,QAAiBJ,EAAS,CACtC3G,QAAS/Y,EAAQA,EAAM+Y,aAAU9T,EACjC+T,UAAWhZ,EAAQA,EAAMgZ,eAAY/T,EACrC6X,SAAU9c,EAAQA,EAAM8c,cAAW7X,EACnCgU,SAAUjZ,EAAQA,EAAMiZ,cAAWhU,EACnCmZ,cAKR,EAEJjhB,KAAKgvB,mBAAqBhvB,KAAKgvB,mBAAmBpE,KAAK5qB,MACvDA,KAAKytB,uBAAyBztB,KAAKytB,uBAAuB7C,KAAK5qB,MAC/DA,KAAKivB,sBAAwBjvB,KAAKivB,sBAAsBrE,KAAK5qB,MAC7DA,KAAKsvB,uBAAyBtvB,KAAKsvB,uBAAuB1E,KAAK5qB,MAC/DA,KAAK4uB,eAAiB5uB,KAAK4uB,eAAehE,KAAK5qB,KACnD,CACA4Z,oBACI5Z,KAAKuvB,cACT,CACA1V,mBAAmBC,EAAW0V,GAC1B,MAAM,SAAEzO,EAAQ,YAAEtE,EAAW,OAAE6C,EAAM,YAAEmB,EAAW,YAAE7B,GAAgB5e,KAAKoE,OACnE,cAAEmkB,GAAkBvoB,KAAKgE,MACzByrB,EAAiB3V,EAAU2C,cAAgBA,EAC3C+F,EAAW1I,EAAU8E,cAAgBA,EACrC8Q,GAAYpQ,IAAWmB,EACvBkP,GAAc5O,EAASC,OACvBb,EAAWqP,EAAUjH,gBAAkBA,GACzCkH,GAAkBjN,GAAYkN,GAAYC,GAAcxP,IACxDngB,KAAKuvB,cAEb,CACAvpB,SACI,MAAM,aAAE0f,EAAY,eAAEG,EAAc,aAAEG,EAAY,SAAEpF,EAAQ,SAAEC,EAAQ,aAAEiF,EAAY,aAAEC,EAAY,QAAExD,EAAO,KAAEre,EAAI,aAAE0hB,EAAY,qBAAEW,EAAoB,YAAE9J,EAAW,sBAAE+K,EAAqB,MAAE3kB,EAAK,OAAEyc,EAAM,YAAEmB,EAAW,kBAAEC,GAAuB1gB,KAAKoE,MAE7OoiB,GAAkBxmB,KAAK6kB,kBAAoB0B,IAAyB,cACpEE,GAAoBzmB,KAAK8kB,oBAAsByB,IAAyB,cACxEG,GAAkB1mB,KAAKglB,kBAAoBuB,IAAyB,cACpEI,GAAkB3mB,KAAKilB,kBAAoBsB,IAAyB,cACpEK,GAAkB5mB,KAAKklB,kBAAoBqB,IAAyB,cACpEqJ,GAAkB5vB,KAAK+kB,kBAAoBwB,IAAyB,cACpEM,EAAcL,GAAkBC,GAAoBC,GAAkBC,GAAkBC,GAAkBgJ,EAC1G7E,EAAYxE,IAAyB,iBAA0BiB,IAA0B,gBACzF9H,EAAY3X,EAAmBlF,EAAM8c,UACrC6I,GAAgB,QAAiB3lB,GACjCic,EAAgB9e,KAAKqf,mBACrBuN,EAAatN,GAAUA,EAAOgO,KAAOhO,EAAOgO,KAAK7E,MAAQ,EACzD5U,EAAQ3P,EAAKQ,cAAcuB,EAAA,iBAEjC,OAAIwa,EACO,kBAAoB,IAAc,CAAE5M,MAAOA,IAE7CkX,EACE,kBAAoB,IAAS,CAAElX,MAAOA,IAExCgT,EACE,kBAAoB,IAAa,CAAEhT,MAAOA,KAE1C,QAAQ6R,KACf,QAAQG,KACR,QAAQG,KACR,QAAQF,KACR,QAAQC,KACR,QAAQH,GAGJ,kBAAoB,MAAO,CAAE1jB,MAAOe,EAAOqG,UAC/C,kBAAoBoe,GAAgB,CAAE9G,SAAUA,EAAUC,SAAUA,EAAU7Y,QAASwgB,EAAgB,GAAG,MAAYA,IAAkB9I,EAAW0G,mBAAoBxhB,IAAS,QAAuB2d,EAAS1f,EAAO+B,GAAQyhB,mBAAoBzhB,IAAS,QAAuB2d,EAAS1f,EAAO+B,GAAQue,cAAe3Y,IAAU,QAAkB+X,EAAS1f,EAAO2H,GAAS4Y,gBAAiB5Y,IAAU,QAAoB+X,EAAS1f,EAAO2H,GAAS8b,kBAAmBtmB,KAAKmvB,sBAAuB1J,qBAAsBzlB,KAAKsvB,uBAAwB7S,YAAaA,IACtiBmQ,EAAa,GAAM,kBAAoB,MAAO,CAAE1qB,MAAOe,EAAOoG,cAC1D,kBAAoB,MAAO,CAAEnH,MAAOe,EAAO6F,gBACvC,kBAAoB0Y,GAAe,CAAEZ,SAAUA,EAAUC,SAAUA,EAAU9B,uBAAwBvC,KAAwCwC,4BAA6BrC,KAA6CF,YAAaA,MAC5O,kBAAoB,MAAO,CAAEva,MAAOe,EAAO2G,cACvC5J,KAAK+uB,WAAWjQ,GAChB9e,KAAKqtB,eAAevO,GACpB4B,IAAsB,gBAA0B,kBAAoB,IAAS,MAAU,kBAAoB,aAAgB,KACvH,kBAAoB,MAAO,CAAExe,MAAOe,EAAO0G,gBAAkB3J,KAAK2uB,YAClE,kBAAoB,MAAO,CAAEzsB,MAAOe,EAAOuG,qBACvC,kBAAoB,MAAO,CAAEtH,MAAOe,EAAOwG,YAAczJ,KAAK4tB,eAAc,QAbjF,kBAAoB,IAAQ,CAAE/Z,MAAOA,GAcpD,EAGJ,MAAM,IAAkB,SAAsB,CAAC7P,EAAOI,KAClD,MAAM+iB,GAAuB,OAAkB,MACzCC,EAAY,qBAAmCpjB,EAAO,QAAkBmjB,GACxEE,EAAiB,0BAAwCrjB,EAAO,QAAkBmjB,GAClFZ,EAAuB,gCAA8CviB,EAAO,QAAkBmjB,GAC9FzB,GAAe,QAAgB0B,EAAW,SAC1CvB,GAAiB,QAAgBuB,EAAW,WAC5CpB,GAAe,QAAgBoB,EAAW,SAC1CtB,GAAe,QAAgBsB,EAAW,SAC1CrB,GAAe,QAAgBqB,EAAW,SAC1CxB,GAAe,QAAgBwB,EAAW,SAC1CE,GAAwB,OAAmB,MAC3C3B,EAAa,sBAAqC3hB,EAAO,QAAoBsjB,GAC7EC,EAAkB,2BAA0CvjB,EAAO,QAAoBsjB,GACvFE,EAAwB,iCAAgDxjB,EAAO,QAAoBsjB,GAEnGxG,GAAiB,QAAWC,SAASC,QACrCC,GAAY,QAAoBH,IAChC,SAAEb,EAAQ,WAAEC,IAAe,QAAae,GACxCxE,EV7L2B,GAAGiJ,eAAcG,iBAAgBG,eAAcF,eAAcC,eAAcH,eAAc9E,iBAAgB6E,iBAC1I,MAAMlJ,EAAcqE,EAAerE,YAEnC,OAAQA,GACJ,KAAKjB,GAAgBqB,IACrB,KAAKrB,GAAgBsB,OACrB,KAAKtB,GAAgB0B,MACrB,KAAK1B,GAAgB2B,SACrB,KAAK3B,GAAgBuB,IACrB,KAAKvB,GAAgBwB,OACrB,KAAKxB,GAAgByB,IACrB,KAAKzB,GAAgBqU,OACrB,KAAKrU,GAAgB8B,IACrB,KAAK9B,GAAgB6B,SACjB,OAAOZ,EAEf,IAAI,QAAekJ,EAAYC,GAC3B,OAAOpK,GAAgB4B,IAE3B,MAAM0S,GAAc,QAAanK,KAAe,QAAiBD,EAAcE,GACzEmK,GAAgB,QAAepK,KAAe,QAAiBE,EAAgBD,GAC/EoK,GAAc,QAAarK,KAAe,QAAiBG,EAAcF,GACzEqK,GAAc,QAAatK,KAAe,QAAiBI,EAAcH,GAC/E,OAAIkK,GAAeC,GAAiBC,GAAeC,EACxCzU,GAAgB6B,UAEvB,QAAesI,EAAYD,GACpBlK,GAAgBqB,KAEvB,QAAiB8I,EAAYE,GACtBrK,GAAgB0B,OAEvB,QAAeyI,EAAYG,GACpBtK,GAAgBuB,KAEvB,QAAe4I,EAAYI,GACpBvK,GAAgByB,KAEvB,QAAe0I,EAAYK,GACpBxK,GAAgB8B,SAD3B,CAGgB,EUoJI4S,CAAsB,CACtCxK,eACAG,iBACAG,eACAF,eACAC,eACAH,eACA9E,iBACA6E,eAGJ,IAAI3d,EAAU8Y,EAAenB,UACxB3X,GAAWyU,IACZzU,EAAU,CAAE,CAAC4U,GAAkBH,IAAe,MAElD,MAAMwJ,EAA2BwB,EAAA,kCAAqDzjB,GAChF4c,EAAWnE,IAAgBjB,GAAgBqB,KAAQJ,IAAgBjB,GAAgBsB,QAAUmJ,GAC7F,cACAne,EACA+Y,EAAW4G,EAAA,kCAAqDzjB,IAAS,eAAgB8D,EACzFjF,EAAQ,CACV2H,OAAQrL,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGqc,GAAUjR,QAASsW,EAAetW,QAC1EqR,UAAWiF,EAAejF,WAAaJ,GAAUI,UACjDD,QAASkF,EAAelF,SAAWH,GAAUG,QAC7C+D,SAAU3X,EACV8T,SAAUgF,EAAehF,SACzBW,cACAwE,aAEErC,GAAc,QAASzf,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGyD,GAAQ,CAAEqe,UAAWN,EAAUC,WAAUpE,iBAAa3U,EAAWmZ,eAAWnZ,EAAWmY,WAChJC,gBACEiB,EAAkBzD,GAAmBjB,GACrC2E,EAAa3D,KAInB,MAAO,CACHiI,eACAG,iBACAjF,WACAC,WACAI,YACA6E,eACAC,eACAC,eACAJ,eACAnJ,cACA2K,YACAC,iBACAd,uBACAY,uBACAtkB,QACA+b,cACAU,OApBW,kBAA6Btb,EAAOmd,EAAiBC,EAAYxC,GAqB5E6B,YApBgB,uBAAkCzc,EAAOmd,EAAiBC,EAAYxC,GAqBtF8B,kBApBsB,6BAAwC1c,EAAOmd,EAAiBC,EAAYxC,GAqBlG+G,aACA4B,kBACAC,wBACAF,wBACH,IAEC,GAAqB,CACvB3I,YAAa,kBAEjB,IAAe,EAAAxY,EAAA,KAAW,IAAAob,SAAQ,GAAiB,GAAzB,CAA6C4L,I,4KClWvE,MAAMgD,EAAY,CAACxK,EAAYyK,KAC3B,IAAI1T,GAAS,EACb,GAAIiJ,GAAc1b,MAAMoF,QAAQsW,EAAW1kB,MAAO,CAE9C,MAAMA,EAAO0kB,EAAW1kB,KAAKiE,MAAK8H,GAAKA,EAAEzL,OAAS6uB,IAClD1T,EAASzb,GAAQA,EAAKovB,MAC1B,MAGI3T,EAASiJ,IAAkC,IAApBA,EAAW1kB,KAEtC,OAAOyb,CAAM,EAEX4T,EAAgBlJ,IAClB,IAAI1K,GAAS,EAKb,OAJI0K,GAAaA,EAAUkG,OAEvB5Q,EAAS0K,EAAUkG,KAAK7E,MAAQ,GAE7B/L,CAAM,EAGJ6T,EAAgB5K,GAClBwK,EAAUxK,EAAY,SAGpBd,EAAiB,CAACc,EAAYD,IAChC6K,EAAa5K,IAAe2K,EAAa5K,GAGvC8K,EAAkB7K,GACpBwK,EAAUxK,EAAY,WAGpBb,EAAmB,CAACa,EAAYE,IAClC2K,EAAe7K,IAAe2K,EAAazK,GAGzC4K,EAAgB9K,GAClBwK,EAAUxK,EAAY,SAGpBZ,EAAiB,CAACY,EAAYK,IAChCyK,EAAa9K,IAAe2K,EAAatK,GAGvC0K,EAAsB/K,GACxBwK,EAAUxK,EAAY,gBAGpBgL,EAAgBhL,GAClBwK,EAAUxK,EAAY,SAGpBX,EAAiB,CAACW,EAAYG,IAChCqK,EAAUxK,EAAY,UAAuB2K,EAAaxK,GAGxD8K,EAAgBjL,GAClBgL,EAAahL,GAGXV,EAAiB,CAACU,EAAYI,IAChC6K,EAAajL,IAAe2K,EAAavK,GAGvC8K,EAAgBlL,GAClBwK,EAAUxK,EAAY,SAGpBT,EAAiB,CAACS,EAAYC,IAChCiL,EAAalL,IAAe2K,EAAa1K,E","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/calculator-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/chart_color_cyan_300.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/chart_color_gold_300.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/chart_color_purple_300.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_Color_100.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_Color_200.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_FontSize_xs.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_disabled_color_100.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_3xl.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Unavailable/Unavailable.js","webpack:///./node_modules/js-file-download/file-download.js","webpack:///./src/api/queries/userAccessQuery.ts","webpack:///./src/routes/views/components/perspective/perspective.styles.ts","webpack:///./src/routes/views/components/perspective/perspectiveSelect.tsx","webpack:///./src/routes/views/components/perspective/perspective.tsx","webpack:///./src/utils/computedReport/getComputedExplorerReportItems.ts","webpack:///./src/routes/views/explorer/explorer.styles.ts","webpack:///./node_modules/victory-stack/es/helper-methods.js","webpack:///./node_modules/victory-stack/es/victory-stack.js","webpack:///./node_modules/@patternfly/react-charts/dist/esm/components/ChartStack/ChartStack.js","webpack:///./src/routes/views/components/charts/costExplorerChart/costExplorerChart.styles.ts","webpack:///./src/routes/views/components/charts/costExplorerChart/costExplorerChart.tsx","webpack:///./src/routes/views/explorer/explorerChart.styles.ts","webpack:///./src/routes/views/explorer/explorerUtils.ts","webpack:///./src/routes/views/explorer/explorerChart.tsx","webpack:///./src/routes/views/explorer/explorerDateRange.tsx","webpack:///./src/routes/views/explorer/explorerFilter.styles.ts","webpack:///./src/routes/views/explorer/explorerFilter.tsx","webpack:///./src/routes/views/explorer/explorerHeader.styles.ts","webpack:///./src/routes/views/explorer/explorerHeader.tsx","webpack:///./src/routes/views/explorer/explorerTable.styles.ts","webpack:///./src/routes/views/explorer/explorerTable.tsx","webpack:///./src/routes/views/explorer/explorerToolbar.tsx","webpack:///./src/routes/views/explorer/explorer.tsx","webpack:///./src/utils/userAccess.ts"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const CalculatorIconConfig = {\n  name: 'CalculatorIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M400 0H48C22.4 0 0 22.4 0 48v416c0 25.6 22.4 48 48 48h352c25.6 0 48-22.4 48-48V48c0-25.6-22.4-48-48-48zM128 435.2c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm0-128c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm128 128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm0-128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm128 128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8V268.8c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v166.4zm0-256c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8V76.8C64 70.4 70.4 64 76.8 64h294.4c6.4 0 12.8 6.4 12.8 12.8v102.4z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const CalculatorIcon = createIcon(CalculatorIconConfig);\n\nexport default CalculatorIcon;","\"use strict\";\nexports.__esModule = true;\nexports.chart_color_cyan_300 = {\n  \"name\": \"--pf-chart-color-cyan-300\",\n  \"value\": \"#009596\",\n  \"var\": \"var(--pf-chart-color-cyan-300, #009596)\"\n};\nexports[\"default\"] = exports.chart_color_cyan_300;","\"use strict\";\nexports.__esModule = true;\nexports.chart_color_gold_300 = {\n  \"name\": \"--pf-chart-color-gold-300\",\n  \"value\": \"#f4c145\",\n  \"var\": \"var(--pf-chart-color-gold-300, #f4c145)\"\n};\nexports[\"default\"] = exports.chart_color_gold_300;","\"use strict\";\nexports.__esModule = true;\nexports.chart_color_purple_300 = {\n  \"name\": \"--pf-chart-color-purple-300\",\n  \"value\": \"#5752d1\",\n  \"var\": \"var(--pf-chart-color-purple-300, #5752d1)\"\n};\nexports[\"default\"] = exports.chart_color_purple_300;","\"use strict\";\nexports.__esModule = true;\nexports.global_Color_100 = {\n  \"name\": \"--pf-global--Color--100\",\n  \"value\": \"#151515\",\n  \"var\": \"var(--pf-global--Color--100)\"\n};\nexports[\"default\"] = exports.global_Color_100;","\"use strict\";\nexports.__esModule = true;\nexports.global_Color_200 = {\n  \"name\": \"--pf-global--Color--200\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--Color--200)\"\n};\nexports[\"default\"] = exports.global_Color_200;","\"use strict\";\nexports.__esModule = true;\nexports.global_FontSize_xs = {\n  \"name\": \"--pf-global--FontSize--xs\",\n  \"value\": \"0.75rem\",\n  \"var\": \"var(--pf-global--FontSize--xs)\"\n};\nexports[\"default\"] = exports.global_FontSize_xs;","\"use strict\";\nexports.__esModule = true;\nexports.global_disabled_color_100 = {\n  \"name\": \"--pf-global--disabled-color--100\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--disabled-color--100)\"\n};\nexports[\"default\"] = exports.global_disabled_color_100;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_3xl = {\n  \"name\": \"--pf-global--spacer--3xl\",\n  \"value\": \"4rem\",\n  \"var\": \"var(--pf-global--spacer--3xl)\"\n};\nexports[\"default\"] = exports.global_spacer_3xl;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport '../Unavailable/Unavailable.css';\nvar Unavailable = function () {\n    return (_jsxs(EmptyState, __assign({ variant: EmptyStateVariant.large, className: \"ins-c-empty-state__unavailable pf-m-redhat-font\" }, { children: [_jsx(EmptyStateIcon, { icon: ExclamationCircleIcon }), _jsx(Title, __assign({ headingLevel: \"h5\", size: \"lg\" }, { children: \"This page is temporarily unavailable\" })), _jsxs(EmptyStateBody, { children: [\"Try refreshing the page. If the problem persists, contact your organization administrator or visit our\", _jsxs(\"a\", __assign({ href: \"https://status.redhat.com/\", target: \"_blank\", rel: \"noopener noreferrer\" }, { children: [' ', \"status page\"] })), ' ', \"for known outages.\"] })] })));\n};\nexport default Unavailable;\n//# sourceMappingURL=Unavailable.js.map","module.exports = function(data, filename, mime, bom) {\n    var blobData = (typeof bom !== 'undefined') ? [bom, data] : [data]\n    var blob = new Blob(blobData, {type: mime || 'application/octet-stream'});\n    if (typeof window.navigator.msSaveBlob !== 'undefined') {\n        // IE workaround for \"HTML7007: One or more blob URLs were\n        // revoked by closing the blob for which they were created.\n        // These URLs will no longer resolve as the data backing\n        // the URL has been freed.\"\n        window.navigator.msSaveBlob(blob, filename);\n    }\n    else {\n        var blobURL = (window.URL && window.URL.createObjectURL) ? window.URL.createObjectURL(blob) : window.webkitURL.createObjectURL(blob);\n        var tempLink = document.createElement('a');\n        tempLink.style.display = 'none';\n        tempLink.href = blobURL;\n        tempLink.setAttribute('download', filename);\n\n        // Safari thinks _blank anchor are pop ups. We only want to set _blank\n        // target if the browser does not support the HTML5 download attribute.\n        // This allows you to download files in desktop safari if pop up blocking\n        // is enabled.\n        if (typeof tempLink.download === 'undefined') {\n            tempLink.setAttribute('target', '_blank');\n        }\n\n        document.body.appendChild(tempLink);\n        tempLink.click();\n\n        // Fixes \"webkit blob resource error 1\"\n        setTimeout(function() {\n            document.body.removeChild(tempLink);\n            window.URL.revokeObjectURL(blobURL);\n        }, 200)\n    }\n}\n","import { parse, stringify } from 'qs';\nexport function getUserAccessQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseUserAccessQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    perspectiveSelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    perspectiveLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n        whiteSpace: 'nowrap',\n    },\n    perspectiveOptionLabel: {\n        marginBottom: 6,\n        marginLeft: 8,\n        marginTop: 6,\n    },\n};\n","import { Select, SelectOption, SelectVariant, Title } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { styles } from './perspective.styles';\nclass PerspectiveSelectBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isSelectOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getSelectOptions = () => {\n            const { intl, options } = this.props;\n            const selections = [];\n            options.map(option => {\n                selections.push({\n                    toString: () => intl.formatMessage(option.label, { value: option.value }),\n                    value: option.value,\n                });\n            });\n            return selections;\n        };\n        this.getSelect = () => {\n            const { currentItem, intl, isDisabled, options } = this.props;\n            const { isSelectOpen } = this.state;\n            if (options.length === 1) {\n                return (React.createElement(\"div\", { style: styles.perspectiveOptionLabel }, intl.formatMessage(options[0].label, { value: options[0].value })));\n            }\n            const selectOptions = this.getSelectOptions();\n            const selection = selectOptions.find((option) => option.value === currentItem);\n            return (React.createElement(Select, { id: \"perspectiveSelect\", isDisabled: isDisabled, isOpen: isSelectOpen, onSelect: this.handleSelect, onToggle: this.handleToggle, selections: selection, variant: SelectVariant.single }, selectOptions.map(option => (React.createElement(SelectOption, { key: option.value, value: option })))));\n        };\n        this.handleSelect = (event, selection) => {\n            const { onSelected } = this.props;\n            if (onSelected) {\n                onSelected(selection.value);\n            }\n            this.setState({\n                isSelectOpen: false,\n            });\n        };\n        this.handleToggle = isSelectOpen => {\n            this.setState({ isSelectOpen });\n        };\n    }\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(\"div\", { style: styles.perspectiveSelector },\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\", style: styles.perspectiveLabel }, intl.formatMessage(messages.perspective)),\n            this.getSelect()));\n    }\n}\nconst PerspectiveSelect = injectIntl(PerspectiveSelectBase);\nexport { PerspectiveSelect };\n","import messages from 'locales/messages';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { PerspectiveSelect } from 'routes/views/components/perspective/perspectiveSelect';\n// Infrastructure AWS options\nconst infrastructureAwsOptions = [{ label: messages.perspectiveValues, value: 'aws' }];\n// Infrastructure AWS filtered by OpenShift options\nconst infrastructureAwsOcpOptions = [{ label: messages.perspectiveValues, value: 'aws_ocp' }];\n// Infrastructure Azure options\nconst infrastructureAzureOptions = [{ label: messages.perspectiveValues, value: 'azure' }];\n// Infrastructure Oci options\nconst infrastructureOciOptions = [{ label: messages.perspectiveValues, value: 'oci' }];\n// Infrastructure Azure filtered by OpenShift options\nconst infrastructureAzureOcpOptions = [{ label: messages.perspectiveValues, value: 'azure_ocp' }];\n// Infrastructure GCP options\nconst infrastructureGcpOptions = [{ label: messages.perspectiveValues, value: 'gcp' }];\n// Infrastructure GCP filtered by OCP options\nconst infrastructureGcpOcpOptions = [{ label: messages.perspectiveValues, value: 'gcp_ocp' }];\n// Infrastructure IBM options\nconst infrastructureIbmOptions = [{ label: messages.perspectiveValues, value: 'ibm' }];\n// Infrastructure IBM filtered by OCP options\nconst infrastructureIbmOcpOptions = [{ label: messages.perspectiveValues, value: 'ibm_ocp' }];\n// Infrastructure Ocp cloud options\nconst infrastructureOcpCloudOptions = [{ label: messages.perspectiveValues, value: 'ocp_cloud' }];\n// Ocp options\nconst ocpOptions = [{ label: messages.perspectiveValues, value: 'ocp' }];\nconst getInfrastructureOptions = ({ hasAws, hasAwsOcp, hasAzure, hasAzureOcp, hasGcp, hasGcpOcp, hasIbm, hasIbmOcp, hasOci, isIbmFeatureEnabled, isOciFeatureEnabled, }) => {\n    const options = [];\n    if (hasAws) {\n        options.push(...infrastructureAwsOptions);\n    }\n    if (hasAwsOcp) {\n        options.push(...infrastructureAwsOcpOptions);\n    }\n    if (hasGcp) {\n        options.push(...infrastructureGcpOptions);\n    }\n    if (hasGcpOcp) {\n        options.push(...infrastructureGcpOcpOptions);\n    }\n    if (hasIbm) {\n        options.push(...infrastructureIbmOptions);\n    }\n    if (hasIbmOcp && isIbmFeatureEnabled) {\n        options.push(...infrastructureIbmOcpOptions);\n    }\n    if (hasAzure) {\n        options.push(...infrastructureAzureOptions);\n    }\n    if (hasAzureOcp) {\n        options.push(...infrastructureAzureOcpOptions);\n    }\n    if (hasOci && isOciFeatureEnabled) {\n        options.push(...infrastructureOciOptions);\n    }\n    return options;\n};\nconst OverviewPerspectiveBase = ({ currentItem, hasAws, hasAwsOcp, hasAzure, hasAzureOcp, hasGcp, hasGcpOcp, hasIbm, hasIbmOcp, hasOci, hasOcp, hasOcpCloud, isDisabled, isIbmFeatureEnabled, isInfrastructureTab, isOciFeatureEnabled, onSelected, }) => {\n    // Dynamically show options if providers are available\n    const options = [];\n    if (isInfrastructureTab !== undefined) {\n        if (isInfrastructureTab) {\n            if (hasOcpCloud) {\n                options.push(...infrastructureOcpCloudOptions);\n            }\n            options.push(...getInfrastructureOptions({\n                hasAws,\n                hasAwsOcp,\n                hasAzure,\n                hasAzureOcp,\n                hasGcp,\n                hasGcpOcp,\n                hasIbm,\n                hasIbmOcp,\n                hasOci,\n                isIbmFeatureEnabled,\n                isOciFeatureEnabled,\n            }));\n        }\n        else if (hasOcp) {\n            options.push(...ocpOptions);\n        }\n    }\n    else {\n        if (hasOcp) {\n            options.push(...ocpOptions);\n        }\n        if (hasOcpCloud) {\n            options.push(...infrastructureOcpCloudOptions);\n        }\n        options.push(...getInfrastructureOptions({\n            hasAws,\n            hasAwsOcp,\n            hasAzure,\n            hasAzureOcp,\n            hasGcp,\n            hasGcpOcp,\n            hasIbm,\n            hasIbmOcp,\n            hasOci,\n            isIbmFeatureEnabled,\n            isOciFeatureEnabled,\n        }));\n    }\n    return (React.createElement(PerspectiveSelect, { currentItem: currentItem || options[0].value, isDisabled: isDisabled, onSelected: onSelected, options: options }));\n};\nconst Perspective = withRouter(OverviewPerspectiveBase);\nexport default Perspective;\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.account) {\n        return 'account';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.gcp_project) {\n        return 'gcp_project';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    if (groupBy.org_unit_id) {\n        return 'org_unit_id';\n    }\n    if (groupBy.payer_tenant_id) {\n        return 'payer_tenant_id';\n    }\n    if (groupBy.product_service) {\n        return 'product_service';\n    }\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.region) {\n        return 'region';\n    }\n    if (groupBy.resource_location) {\n        return 'resource_location';\n    }\n    if (groupBy.service) {\n        return 'service';\n    }\n    if (groupBy.service_name) {\n        return 'service_name';\n    }\n    if (groupBy.subscription_guid) {\n        return 'subscription_guid';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    chartContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n        paddingRight: global_spacer_lg.value,\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    chartContent: {\n        paddingTop: global_spacer_lg.value,\n    },\n    explorer: {\n        minHeight: '100%',\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    tableContent: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n};\n","import _orderBy from \"lodash/orderBy\";\nimport _keys from \"lodash/keys\";\nimport _assign from \"lodash/assign\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Helpers, Scale, Wrapper } from \"victory-core\";\nimport isEqual from \"react-fast-compare\";\nvar fallbackProps = {\n  width: 450,\n  height: 300,\n  padding: 50\n}; // Assumes data in `datasets` is sorted by `Data.getData`.\n\nfunction fillData(props, datasets) {\n  var fillInMissingData = props.fillInMissingData;\n  var xMap = datasets.reduce(function (prev, dataset) {\n    dataset.forEach(function (datum) {\n      prev[datum._x instanceof Date ? datum._x.getTime() : datum._x] = true;\n    });\n    return prev;\n  }, {});\n\n  var xKeys = _keys(xMap).map(function (k) {\n    return Number(k);\n  });\n\n  var xArr = _orderBy(xKeys);\n\n  return datasets.map(function (dataset) {\n    var indexOffset = 0;\n    var isDate = dataset[0] && dataset[0]._x instanceof Date;\n    var filledInData = xArr.map(function (x, index) {\n      x = Number(x);\n      var datum = dataset[index - indexOffset];\n\n      if (datum) {\n        var x1 = isDate ? datum._x.getTime() : datum._x;\n\n        if (x1 === x) {\n          return datum;\n        }\n\n        indexOffset++;\n\n        var _y = fillInMissingData ? 0 : null;\n\n        x = isDate ? new Date(x) : x;\n        return {\n          x: x,\n          y: _y,\n          _x: x,\n          _y: _y\n        };\n      }\n\n      var y = fillInMissingData ? 0 : null;\n      x = isDate ? new Date(x) : x;\n      return {\n        x: x,\n        y: y,\n        _x: x,\n        _y: y\n      };\n    });\n    return filledInData;\n  });\n}\n\nfunction getY0(datum, index, datasets) {\n  if (datum.y0) {\n    return datum.y0;\n  }\n\n  var y = datum._y;\n  var group = datum._group;\n  var firstDatasetBaseline = datasets[0].map(function (d) {\n    return d.y0;\n  });\n  var previousDatasets = datasets.slice(0, index);\n  var previousPoints = previousDatasets.reduce(function (prev, dataset) {\n    return prev.concat(dataset.filter(function (previousDatum) {\n      return datum._x instanceof Date ? previousDatum._x.getTime() === datum._x.getTime() : previousDatum._x === datum._x;\n    }).map(function (previousDatum) {\n      return previousDatum._y || 0;\n    }));\n  }, []);\n  var y0 = previousPoints.length && previousPoints.reduce(function (memo, value) {\n    var sameSign = y < 0 && value < 0 || y >= 0 && value >= 0;\n    return sameSign ? Number(value) + memo : memo;\n  }, firstDatasetBaseline[group] || 0);\n  return previousPoints.some(function (point) {\n    return point instanceof Date;\n  }) ? new Date(y0) : y0;\n}\n/* eslint-disable no-nested-ternary */\n\n\nfunction addLayoutData(props, datasets, index) {\n  var xOffset = props.xOffset || 0;\n  return datasets[index].map(function (datum) {\n    var yOffset = getY0(datum, index, datasets) || 0;\n    return _assign({}, datum, {\n      _y0: !(datum._y instanceof Date) ? yOffset : yOffset ? new Date(yOffset) : datum._y,\n      _y1: datum._y === null ? null : datum._y instanceof Date ? new Date(Number(datum._y) + Number(yOffset)) : datum._y + yOffset,\n      _x1: datum._x === null ? null : datum._x instanceof Date ? new Date(Number(datum._x) + Number(xOffset)) : datum._x + xOffset\n    });\n  });\n}\n/* eslint-enable no-nested-ternary */\n\n\nfunction stackData(props, childComponents) {\n  var dataFromChildren = Wrapper.getDataFromChildren(props, childComponents);\n  var filterNullChildData = dataFromChildren.map(function (dataset) {\n    return dataset.filter(function (datum) {\n      return datum._x !== null && datum._y !== null;\n    });\n  });\n  var datasets = fillData(props, filterNullChildData);\n  return datasets.map(function (d, i) {\n    return addLayoutData(props, datasets, i);\n  });\n}\n\nexport function getCalculatedProps(props, childComponents) {\n  childComponents = childComponents || React.Children.toArray(props.children);\n  var role = \"stack\";\n  props = Helpers.modifyProps(props, fallbackProps, role);\n  var style = Wrapper.getStyle(props.theme, props.style, role);\n  var categories = props.categories || Wrapper.getCategories(props, childComponents);\n  var datasets = props.datasets || stackData(props, childComponents);\n  var children = childComponents.map(function (c, i) {\n    return /*#__PURE__*/React.cloneElement(c, {\n      data: datasets[i]\n    });\n  });\n  var domain = {\n    x: Wrapper.getDomain(_assign({}, props, {\n      categories: categories\n    }), \"x\", children),\n    y: Wrapper.getDomain(_assign({}, props, {\n      categories: categories\n    }), \"y\", children)\n  };\n  var range = props.range || {\n    x: Helpers.getRange(props, \"x\"),\n    y: Helpers.getRange(props, \"y\")\n  };\n  var baseScale = {\n    x: Scale.getScaleFromProps(props, \"x\") || Wrapper.getScale(props, \"x\"),\n    y: Scale.getScaleFromProps(props, \"y\") || Wrapper.getScale(props, \"y\")\n  };\n  var scale = {\n    x: baseScale.x.domain(domain.x).range(props.horizontal ? range.y : range.x),\n    y: baseScale.y.domain(domain.y).range(props.horizontal ? range.x : range.y)\n  };\n  var _props = props,\n      colorScale = _props.colorScale,\n      horizontal = _props.horizontal;\n  return {\n    datasets: datasets,\n    categories: categories,\n    range: range,\n    domain: domain,\n    horizontal: horizontal,\n    scale: scale,\n    style: style,\n    colorScale: colorScale,\n    role: role\n  };\n} // We need to remove sharedEvents in order to memoize the calculated data\n// With shared events, the props change on every event, and every value is re-calculated\n\nvar withoutSharedEvents = function (props) {\n  var children = props.children;\n  var modifiedChildren = React.Children.toArray(children).map(function (_child) {\n    var child = _child;\n    return _objectSpread(_objectSpread({}, child), {}, {\n      props: Helpers.omit(child.props, [\"sharedEvents\"])\n    });\n  });\n  props.children = modifiedChildren;\n  return props;\n};\n\nexport function useMemoizedProps(initialProps) {\n  var modifiedProps = withoutSharedEvents(initialProps);\n\n  var _React$useState = React.useState(modifiedProps),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      props = _React$useState2[0],\n      setProps = _React$useState2[1]; // React.memo uses shallow equality to compare objects. This way props\n  // will only be re-calculated when they change.\n\n\n  React.useEffect(function () {\n    if (!isEqual(modifiedProps, props)) {\n      setProps(modifiedProps);\n    }\n  }, [props, setProps, modifiedProps]);\n  return React.useMemo(function () {\n    return getCalculatedProps(props, props.children);\n  }, [props]);\n}\n\nfunction getLabels(props, datasets, index) {\n  if (!props.labels) {\n    return undefined;\n  }\n\n  return datasets.length === index + 1 ? props.labels : undefined;\n}\n\nexport function getChildProps(props, calculatedProps) {\n  var categories = calculatedProps.categories,\n      domain = calculatedProps.domain,\n      range = calculatedProps.range,\n      scale = calculatedProps.scale,\n      horizontal = calculatedProps.horizontal;\n  return {\n    height: props.height,\n    width: props.width,\n    padding: Helpers.getPadding(props),\n    standalone: false,\n    theme: props.theme,\n    categories: categories,\n    domain: domain,\n    range: range,\n    scale: scale,\n    horizontal: horizontal\n  };\n}\n\nfunction getColorScale(props, child) {\n  var role = child.type && child.type.role;\n  var colorScaleOptions = child.props.colorScale || props.colorScale;\n\n  if (role !== \"group\" && role !== \"stack\") {\n    return undefined;\n  }\n\n  return props.theme ? colorScaleOptions || props.theme.props.colorScale : colorScaleOptions;\n}\n\nexport function getChildren(props, childComponents, calculatedProps) {\n  props = Helpers.modifyProps(props, fallbackProps, \"stack\");\n  childComponents = childComponents || React.Children.toArray(props.children);\n  calculatedProps = calculatedProps || getCalculatedProps(props, childComponents);\n  var _calculatedProps = calculatedProps,\n      datasets = _calculatedProps.datasets;\n  var childProps = getChildProps(props, calculatedProps);\n  var parentName = props.name || \"stack\";\n  return childComponents.map(function (child, index) {\n    var role = child.type && child.type.role;\n    var data = datasets[index];\n    var style = Wrapper.getChildStyle(child, index, calculatedProps);\n    var labels = props.labels ? getLabels(props, datasets, index) : child.props.labels;\n    var name = child.props.name || \"\".concat(parentName, \"-\").concat(role, \"-\").concat(index);\n    return /*#__PURE__*/React.cloneElement(child, _assign({\n      key: \"\".concat(name, \"-key-\").concat(index),\n      labels: labels,\n      name: name,\n      domainPadding: child.props.domainPadding || props.domainPadding,\n      theme: props.theme,\n      labelComponent: props.labelComponent || child.props.labelComponent,\n      style: style,\n      colorScale: getColorScale(props, child),\n      data: data,\n      polar: props.polar\n    }, childProps));\n  });\n}","import _isEmpty from \"lodash/isEmpty\";\nimport _defaults from \"lodash/defaults\";\nimport _assign from \"lodash/assign\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { CommonProps, Helpers, Hooks, PropTypes as CustomPropTypes, UserProps, VictoryContainer, VictoryTheme, Wrapper } from \"victory-core\";\nimport { VictorySharedEvents } from \"victory-shared-events\";\nimport { getChildren, useMemoizedProps } from \"./helper-methods\";\nimport isEqual from \"react-fast-compare\";\nvar fallbackProps = {\n  width: 450,\n  height: 300,\n  padding: 50\n};\n\nvar VictoryStackBase = function (initialProps) {\n  // eslint-disable-next-line no-use-before-define\n  var role = VictoryStack.role;\n\n  var _Hooks$useAnimationSt = Hooks.useAnimationState(),\n      setAnimationState = _Hooks$useAnimationSt.setAnimationState,\n      getAnimationProps = _Hooks$useAnimationSt.getAnimationProps,\n      getProps = _Hooks$useAnimationSt.getProps;\n\n  var props = getProps(initialProps);\n  var modifiedProps = Helpers.modifyProps(props, fallbackProps, role);\n  var eventKey = modifiedProps.eventKey,\n      containerComponent = modifiedProps.containerComponent,\n      standalone = modifiedProps.standalone,\n      groupComponent = modifiedProps.groupComponent,\n      externalEventMutations = modifiedProps.externalEventMutations,\n      width = modifiedProps.width,\n      height = modifiedProps.height,\n      theme = modifiedProps.theme,\n      polar = modifiedProps.polar,\n      horizontal = modifiedProps.horizontal,\n      name = modifiedProps.name;\n  var childComponents = React.Children.toArray(modifiedProps.children);\n  var calculatedProps = useMemoizedProps(modifiedProps);\n  var domain = calculatedProps.domain,\n      scale = calculatedProps.scale,\n      style = calculatedProps.style;\n  var newChildren = React.useMemo(function () {\n    var children = getChildren(props, childComponents, calculatedProps);\n    var orderedChildren = children.map(function (child, index) {\n      var childProps = _assign({\n        animate: getAnimationProps(props, child, index)\n      }, child.props);\n\n      return /*#__PURE__*/React.cloneElement(child, childProps);\n    });\n    /*\n      reverse render order for children of `VictoryStack` so that higher children in the stack\n      are rendered behind lower children. This looks nicer for stacked bars with cornerRadius, and\n      areas with strokes\n    */\n\n    return orderedChildren.reverse();\n  }, [props, childComponents, calculatedProps, getAnimationProps]);\n  var containerProps = React.useMemo(function () {\n    if (standalone) {\n      return {\n        domain: domain,\n        scale: scale,\n        width: width,\n        height: height,\n        standalone: standalone,\n        theme: theme,\n        style: style.parent,\n        horizontal: horizontal,\n        polar: polar,\n        name: name\n      };\n    }\n\n    return {};\n  }, [standalone, domain, scale, width, height, theme, style, horizontal, polar, name]);\n  var userProps = React.useMemo(function () {\n    return UserProps.getSafeUserProps(initialProps);\n  }, [initialProps]);\n  var container = React.useMemo(function () {\n    if (standalone) {\n      var defaultContainerProps = _defaults({}, containerComponent.props, containerProps, userProps);\n\n      return /*#__PURE__*/React.cloneElement(containerComponent, defaultContainerProps);\n    }\n\n    return /*#__PURE__*/React.cloneElement(groupComponent, userProps);\n  }, [groupComponent, standalone, containerComponent, containerProps, userProps]);\n  var events = React.useMemo(function () {\n    return Wrapper.getAllEvents(props);\n  }, [props]);\n  var previousProps = Hooks.usePreviousProps(initialProps);\n  React.useEffect(function () {\n    // This is called before dismount to keep state in sync\n    return function () {\n      if (initialProps.animate) {\n        setAnimationState(previousProps, initialProps);\n      }\n    };\n  }, [setAnimationState, previousProps, initialProps]);\n\n  if (!_isEmpty(events)) {\n    return /*#__PURE__*/React.createElement(VictorySharedEvents, {\n      container: container,\n      eventKey: eventKey,\n      events: events,\n      externalEventMutations: externalEventMutations\n    }, newChildren);\n  }\n\n  return /*#__PURE__*/React.cloneElement(container, container.props, newChildren);\n};\n\nVictoryStackBase.propTypes = _objectSpread(_objectSpread({}, CommonProps.baseProps), {}, {\n  bins: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([CustomPropTypes.nonNegative, PropTypes.instanceOf(Date)])), CustomPropTypes.nonNegative]),\n  categories: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.shape({\n    x: PropTypes.arrayOf(PropTypes.string),\n    y: PropTypes.arrayOf(PropTypes.string)\n  })]),\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  colorScale: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.oneOf([\"grayscale\", \"qualitative\", \"heatmap\", \"warm\", \"cool\", \"red\", \"green\", \"blue\"])]),\n  fillInMissingData: PropTypes.bool,\n  horizontal: PropTypes.bool,\n  labelComponent: PropTypes.element,\n  labels: PropTypes.oneOfType([PropTypes.func, PropTypes.array]),\n  style: PropTypes.shape({\n    parent: PropTypes.object,\n    data: PropTypes.object,\n    labels: PropTypes.object\n  }),\n  xOffset: PropTypes.number\n});\nVictoryStackBase.defaultProps = {\n  containerComponent: /*#__PURE__*/React.createElement(VictoryContainer, null),\n  groupComponent: /*#__PURE__*/React.createElement(\"g\", null),\n  standalone: true,\n  theme: VictoryTheme.grayscale,\n  fillInMissingData: true\n};\nvar componentConfig = {\n  role: \"stack\",\n  expectedComponents: [\"groupComponent\", \"containerComponent\", \"labelComponent\"],\n  getChildren: getChildren\n};\nexport var VictoryStack = Object.assign( /*#__PURE__*/React.memo(VictoryStackBase, isEqual), componentConfig);\nVictoryStack.displayName = \"VictoryStack\";","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryStack } from 'victory-stack';\nimport { ChartContainer } from '../ChartContainer';\nimport { getClassName, useDefaultPatternProps, getTheme, renderChildrenWithPatterns } from '../ChartUtils';\nexport const ChartStack = (_a) => {\n    var { ariaDesc, ariaTitle, children, colorScale, containerComponent = React.createElement(ChartContainer, null), hasPatterns, patternScale, themeColor, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    themeVariant, \n    // destructure last\n    theme = getTheme(themeColor) } = _a, rest = __rest(_a, [\"ariaDesc\", \"ariaTitle\", \"children\", \"colorScale\", \"containerComponent\", \"hasPatterns\", \"patternScale\", \"themeColor\", \"themeVariant\", \"theme\"]);\n    // Clone so users can override container props\n    const container = React.cloneElement(containerComponent, Object.assign(Object.assign({ desc: ariaDesc, title: ariaTitle, theme }, containerComponent.props), { className: getClassName({ className: containerComponent.props.className }) // Override VictoryContainer class name\n     }));\n    const { defaultPatternScale } = useDefaultPatternProps({\n        colorScale,\n        hasPatterns,\n        patternScale,\n        themeColorScale: theme.stack.colorScale\n    });\n    // Note: containerComponent is required for theme\n    return (React.createElement(VictoryStack, Object.assign({ colorScale: colorScale, containerComponent: container, theme: theme }, rest), renderChildrenWithPatterns({\n        children,\n        patternScale: defaultPatternScale\n    })));\n};\nChartStack.displayName = 'ChartStack';\n// Note: VictoryStack.getChildren & VictoryStack.role must be hoisted\nhoistNonReactStatics(ChartStack, VictoryStack);\n//# sourceMappingURL=ChartStack.js.map","import { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_cyan_300 } from '@patternfly/react-tokens/dist/js/chart_color_cyan_300';\nimport { chart_color_gold_300 } from '@patternfly/react-tokens/dist/js/chart_color_gold_300';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_orange_300 } from '@patternfly/react-tokens/dist/js/chart_color_orange_300';\nimport { chart_color_purple_300 } from '@patternfly/react-tokens/dist/js/chart_color_purple_300';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    colorScale: [\n        chart_color_blue_300.value,\n        chart_color_gold_300.value,\n        chart_color_green_300.value,\n        chart_color_purple_300.value,\n        chart_color_orange_300.value,\n        chart_color_cyan_300.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n    yAxisAlt: {\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'routes/views/components/charts/common/chart.scss';\nimport { Chart, ChartAxis, ChartBar, ChartLegend, ChartLegendTooltip, ChartStack, ChartThemeColor, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { default as ChartTheme } from 'routes/views/components/charts/chartTheme';\nimport { getMaxValue } from 'routes/views/components/charts/common/chartDatum';\nimport { getChartNames, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isDataHidden, isSeriesHidden, } from 'routes/views/components/charts/common/chartUtils';\nimport { formatCurrencyAbbreviation } from 'utils/format';\nimport { noop } from 'utils/noop';\nimport { chartStyles } from './costExplorerChart.styles';\nclass CostExplorerChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            tickValues: [],\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { top1stData, top2ndData, top3rdData, top4thData, top5thData, top6thData } = this.props;\n            const series = [];\n            if (top1stData && top1stData.length) {\n                const name = this.getTruncatedString(top1stData[0].name);\n                series.push({\n                    childName: 'top1stData',\n                    data: this.initDatumChildName(top1stData, 'top1stData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[0],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[0],\n                        },\n                    },\n                });\n            }\n            if (top2ndData && top2ndData.length) {\n                const name = this.getTruncatedString(top2ndData[0].name);\n                series.push({\n                    childName: 'top2ndData',\n                    data: this.initDatumChildName(top2ndData, 'top2ndData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[1],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[1],\n                        },\n                    },\n                });\n            }\n            if (top3rdData && top3rdData.length) {\n                const name = this.getTruncatedString(top3rdData[0].name);\n                series.push({\n                    childName: 'top3rdData',\n                    data: this.initDatumChildName(top3rdData, 'top3rdData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[2],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[2],\n                        },\n                    },\n                });\n            }\n            if (top4thData && top4thData.length) {\n                const name = this.getTruncatedString(top4thData[0].name);\n                series.push({\n                    childName: 'top4thData',\n                    data: this.initDatumChildName(top4thData, 'top4thData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[3],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[3],\n                        },\n                    },\n                });\n            }\n            if (top5thData && top5thData.length) {\n                const name = this.getTruncatedString(top5thData[0].name);\n                series.push({\n                    childName: 'top5thData',\n                    data: this.initDatumChildName(top5thData, 'top5thData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[4],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[4],\n                        },\n                    },\n                });\n            }\n            if (top6thData && top6thData.length) {\n                const name = this.getTruncatedString(top6thData[0].name);\n                series.push({\n                    childName: 'top6thData',\n                    data: this.initDatumChildName(top6thData, 'top6thData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[5],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[5],\n                        },\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            const units = this.getUnits(series);\n            this.setState({ cursorVoronoiContainer, series, tickValues: this.getTickValues(), units });\n        };\n        // Adds a child name to help identify hidden data series\n        this.initDatumChildName = (data, childName) => {\n            data.map(datum => (datum.childName = childName));\n            return data;\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (width > 675 && width < 1250) {\n                    adjustedContainerHeight += 25;\n                }\n                else if (width > 400 && width < 650) {\n                    adjustedContainerHeight += 50;\n                }\n                else if (width <= 400) {\n                    adjustedContainerHeight += 150;\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        // If bar width exceeds max and domainPadding is true, extra width is returned to help center bars horizontally\n        this.getBarWidth = (domainPadding = false) => {\n            const { hiddenSeries, series, width } = this.state;\n            const maxWidth = 200;\n            let maxValue = -1;\n            if (series) {\n                series.forEach((s, index) => {\n                    if (!isSeriesHidden(hiddenSeries, index) && s.data && s.data.length !== 0) {\n                        if (s.data.length > maxValue) {\n                            maxValue = s.data.length;\n                        }\n                    }\n                });\n            }\n            // Divide available width into equal sections\n            const sections = maxValue * 2 + 1;\n            const sectionWidth = maxValue > 0 ? width / sections : 0;\n            if (domainPadding) {\n                // Add any extra bar width for domain padding\n                const extraWidth = sectionWidth > maxWidth ? (sectionWidth - maxWidth) * maxValue : 0;\n                return (sectionWidth + extraWidth / 2) * 2;\n            }\n            return sectionWidth > maxWidth ? maxWidth : sectionWidth;\n        };\n        this.getChart = (series, index, barWidth) => {\n            const { hiddenSeries } = this.state;\n            const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n            return (React.createElement(ChartBar, { barWidth: barWidth, data: data, key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatter, formatOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatter, formatOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        // Returns domain only if max y values are zero\n        this.getDomain = (series, hiddenSeries) => {\n            let maxValue = -1;\n            let domain;\n            if (series) {\n                series.forEach((s, index) => {\n                    if (!isSeriesHidden(hiddenSeries, index) && s.data && s.data.length !== 0) {\n                        const max = getMaxValue(s.data);\n                        maxValue = Math.max(maxValue, max);\n                    }\n                });\n            }\n            if (maxValue <= 0) {\n                domain = { y: [0, 100] };\n            }\n            return domain;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const { name = '' } = this.props;\n            const { hiddenSeries, series } = this.state;\n            const result = getInteractiveLegendEvents({\n                chartNames: getChartNames(series),\n                isDataHidden: data => isDataHidden(series, hiddenSeries, data),\n                isHidden: index => isSeriesHidden(hiddenSeries, index),\n                legendName: `${name}-legend`,\n                onLegendClick: props => this.handleLegendClick(props.index),\n            });\n            return result;\n        };\n        this.getLegend = () => {\n            const { name = '' } = this.props;\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, name: `${name}-legend`, responsive: false }));\n        };\n        // This ensures we show every 3rd tick value, including the first and last value\n        //\n        // Note: We're not using Victory's tickCount because it won't always include the last tick value.\n        this.getTickValues = () => {\n            const { top1stData, top2ndData, top3rdData, top4thData, top5thData, top6thData } = this.props;\n            // Find the datum with the greatest number of values\n            const allDatums = [top1stData, top2ndData, top3rdData, top4thData, top5thData, top6thData];\n            let datum;\n            allDatums.map(val => {\n                if (!datum || datum.length < val.length) {\n                    datum = val;\n                }\n            });\n            const values = [];\n            datum.map(val => {\n                values.push(val.x);\n            });\n            // Prune tick values\n            const tickValues = [];\n            const modVal = values.length < 6 ? 2 : 3;\n            for (let i = 0; i < values.length; i++) {\n                if (i % modVal === 0 && i + 2 < values.length) {\n                    tickValues.push(values[i]);\n                }\n                else if (values.length < 3 && i + 1 < values.length) {\n                    tickValues.push(values[i]);\n                }\n            }\n            tickValues.push(values[values.length - 1]);\n            return tickValues;\n        };\n        this.getTruncatedString = (str) => {\n            const maxChars = 20;\n            return str.length > maxChars ? str.substring(0, maxChars - 1) + '...' : str;\n        };\n        this.getTickValue = (t) => {\n            const { units } = this.state;\n            return formatCurrencyAbbreviation(t, units);\n        };\n        this.getUnits = (series) => {\n            if (series) {\n                for (const s of series) {\n                    for (const datum of s.data) {\n                        if (datum.units) {\n                            return datum.units;\n                        }\n                    }\n                }\n            }\n            return 'USD';\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.top1stData !== this.props.top1stData ||\n            prevProps.top2ndData !== this.props.top2ndData ||\n            prevProps.top3rdData !== this.props.top3rdData ||\n            prevProps.top4thData !== this.props.top4thData ||\n            prevProps.top5thData !== this.props.top5thData ||\n            prevProps.top6thData !== this.props.top6thData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    render() {\n        const { height, intl, name, padding = {\n            bottom: 50,\n            left: 40,\n            right: 8,\n            top: 8,\n        }, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, tickValues, width } = this.state;\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => intl.formatMessage(messages.chartDayOfTheMonth, { day: datum.x }) })),\n            })\n            : undefined;\n        const barWidth = this.getBarWidth();\n        // Note: For tooltip values to match properly, chart groups must be rendered in the order given as legend data\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n            React.createElement(\"div\", { style: { height, width } },\n                React.createElement(Chart, { ariaTitle: intl.formatMessage(messages.explorerChartAriaTitle), containerComponent: container, domain: this.getDomain(series, hiddenSeries), domainPadding: { x: this.getBarWidth(true) }, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", name: name, padding: padding, theme: ChartTheme, themeColor: ChartThemeColor.multiOrdered, width: width },\n                    series && series.length > 0 && (React.createElement(ChartStack, null, series.map((s, index) => this.getChart(s, index, barWidth)))),\n                    React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: tickValues, fixLabelOverlap: true }),\n                    React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis, tickFormat: this.getTickValue })))));\n    }\n}\nconst CostExplorerChart = injectIntl(CostExplorerChartBase);\nexport default CostExplorerChart;\n","import global_spacer_2xl from '@patternfly/react-tokens/dist/js/global_spacer_2xl';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    chartHeight: 300,\n    chartContainerHeight: 300,\n};\nexport const styles = {\n    chartContainer: {\n        marginLeft: global_spacer_2xl.value,\n    },\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n    costChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    titleContainer: {\n        marginLeft: global_spacer_lg.value,\n    },\n    trendChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    usageChart: {\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import { OrgPathsType } from 'api/orgs/org';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport { ComputedReportItemType, ComputedReportItemValueType } from 'routes/views/components/charts/common/chartDatum';\nimport { hasCloudProvider } from 'routes/views/utils/providers';\nimport { hasAwsAccess, hasAzureAccess, hasGcpAccess, hasIbmAccess, isAwsAvailable, isAzureAvailable, isGcpAvailable, isIbmAvailable, isOciAvailable, isOcpAvailable, } from 'utils/userAccess';\n// eslint-disable-next-line no-shadow\nexport var PerspectiveType;\n(function (PerspectiveType) {\n    PerspectiveType[\"aws\"] = \"aws\";\n    PerspectiveType[\"awsOcp\"] = \"aws_ocp\";\n    PerspectiveType[\"azure\"] = \"azure\";\n    PerspectiveType[\"azureOcp\"] = \"azure_ocp\";\n    PerspectiveType[\"gcp\"] = \"gcp\";\n    PerspectiveType[\"gcpOcp\"] = \"gcp_ocp\";\n    PerspectiveType[\"ibm\"] = \"ibm\";\n    PerspectiveType[\"ibmOcp\"] = \"ibm_ocp\";\n    PerspectiveType[\"oci\"] = \"oci\";\n    PerspectiveType[\"ocp\"] = \"ocp\";\n    PerspectiveType[\"ocpCloud\"] = \"ocp_cloud\";\n})(PerspectiveType || (PerspectiveType = {}));\nexport const baseQuery = {\n    filter: {\n        limit: 10,\n        offset: 0,\n    },\n    exclude: {},\n    filter_by: {},\n    order_by: {\n        cost: 'desc',\n    },\n};\nexport const dateRangeOptions = [\n    { label: messages.explorerDateRange, value: 'current_month_to_date' },\n    { label: messages.explorerDateRange, value: 'previous_month_to_date' },\n    { label: messages.explorerDateRange, value: 'last_thirty_days' },\n    { label: messages.explorerDateRange, value: 'last_sixty_days' },\n    { label: messages.explorerDateRange, value: 'last_ninety_days' },\n];\nexport const groupByAwsOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByAzureOptions = [\n    { label: 'subscription_guid', value: 'subscription_guid' },\n    { label: 'service_name', value: 'service_name' },\n    { label: 'resource_location', value: 'resource_location' },\n];\nexport const groupByGcpOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'gcp_project', value: 'gcp_project' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByGcpOcpOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'gcp_project', value: 'gcp_project' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByIbmOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'project', value: 'project' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByOciOptions = [\n    { label: 'payer_tenant_id', value: 'payer_tenant_id' },\n    { label: 'product_service', value: 'product_service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByOcpOptions = [\n    { label: 'cluster', value: 'cluster' },\n    { label: 'node', value: 'node' },\n    { label: 'project', value: 'project' },\n];\n// Ocp options\nexport const ocpOptions = [{ label: messages.perspectiveValues, value: 'ocp' }];\nexport const getComputedReportItemType = (perspective) => {\n    let result;\n    switch (perspective) {\n        // Removed \"OpenShift supplementary & usage\" perspectives -- see https://issues.redhat.com/browse/COST-1722\n        default:\n            result = ComputedReportItemType.cost;\n            break;\n    }\n    return result;\n};\nexport const getComputedReportItemValueType = (perspective) => {\n    let result;\n    switch (perspective) {\n        // Removed \"OpenShift usage\" perspective -- see https://issues.redhat.com/browse/COST-1722\n        default:\n            result = ComputedReportItemValueType.total;\n            break;\n    }\n    return result;\n};\nexport const getPerspectiveDefault = ({ awsProviders, azureProviders, ociProviders, gcpProviders, ibmProviders, ocpProviders, queryFromRoute, userAccess, }) => {\n    const perspective = queryFromRoute.perspective;\n    // Upon page refresh, perspective param takes precedence\n    switch (perspective) {\n        case PerspectiveType.aws:\n        case PerspectiveType.awsOcp:\n        case PerspectiveType.azure:\n        case PerspectiveType.azureOcp:\n        case PerspectiveType.gcp:\n        case PerspectiveType.gcpOcp:\n        case PerspectiveType.ibm:\n        case PerspectiveType.ibmOcp:\n        case PerspectiveType.oci:\n        case PerspectiveType.ocpCloud:\n            return perspective;\n    }\n    if (isOcpAvailable(userAccess, ocpProviders)) {\n        return PerspectiveType.ocp;\n    }\n    const hasAwsCloud = hasAwsAccess(userAccess) && hasCloudProvider(awsProviders, ocpProviders);\n    const hasAzureCloud = hasAzureAccess(userAccess) && hasCloudProvider(azureProviders, ocpProviders);\n    const hasGcpCloud = hasGcpAccess(userAccess) && hasCloudProvider(gcpProviders, ocpProviders);\n    const hasIbmCloud = hasIbmAccess(userAccess) && hasCloudProvider(ibmProviders, ocpProviders);\n    if (hasAwsCloud || hasAzureCloud || hasGcpCloud || hasIbmCloud) {\n        return PerspectiveType.ocpCloud;\n    }\n    if (isAwsAvailable(userAccess, awsProviders)) {\n        return PerspectiveType.aws;\n    }\n    if (isAzureAvailable(userAccess, azureProviders)) {\n        return PerspectiveType.azure;\n    }\n    if (isGcpAvailable(userAccess, gcpProviders)) {\n        return PerspectiveType.gcp;\n    }\n    if (isIbmAvailable(userAccess, ibmProviders)) {\n        return PerspectiveType.ibm;\n    }\n    if (isOciAvailable(userAccess, ociProviders)) {\n        return PerspectiveType.oci;\n    }\n    return undefined;\n};\nexport const getGroupByDefault = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n        case PerspectiveType.awsOcp:\n        case PerspectiveType.gcp:\n        case PerspectiveType.gcpOcp:\n        case PerspectiveType.ibm:\n            result = 'account';\n            break;\n        case PerspectiveType.azure:\n        case PerspectiveType.azureOcp:\n            result = 'subscription_guid';\n            break;\n        case PerspectiveType.ocp:\n        case PerspectiveType.ocpCloud:\n            result = 'project';\n            break;\n        case PerspectiveType.oci:\n            result = 'payer_tenant_id';\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getGroupByOptions = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n        case PerspectiveType.awsOcp:\n            result = groupByAwsOptions;\n            break;\n        case PerspectiveType.azure:\n        case PerspectiveType.azureOcp:\n            result = groupByAzureOptions;\n            break;\n        case PerspectiveType.gcp:\n            result = groupByGcpOptions;\n            break;\n        case PerspectiveType.gcpOcp:\n            result = groupByGcpOcpOptions;\n            break;\n        case PerspectiveType.ibm:\n            result = groupByIbmOptions;\n            break;\n        case PerspectiveType.oci:\n            result = groupByOciOptions;\n            break;\n        case PerspectiveType.ocp:\n        case PerspectiveType.ocpCloud:\n            result = groupByOcpOptions;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getOrgReportPathsType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n            result = OrgPathsType.aws;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getReportType = (perspective) => {\n    let result;\n    switch (perspective) {\n        default:\n            result = ReportType.cost;\n            break;\n    }\n    return result;\n};\nexport const getReportPathsType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n            result = ReportPathsType.aws;\n            break;\n        case PerspectiveType.awsOcp:\n            result = ReportPathsType.awsOcp;\n            break;\n        case PerspectiveType.azure:\n            result = ReportPathsType.azure;\n            break;\n        case PerspectiveType.azureOcp:\n            result = ReportPathsType.azureOcp;\n            break;\n        case PerspectiveType.gcp:\n            result = ReportPathsType.gcp;\n            break;\n        case PerspectiveType.gcpOcp:\n            result = ReportPathsType.gcpOcp;\n            break;\n        case PerspectiveType.ibm:\n            result = ReportPathsType.ibm;\n            break;\n        case PerspectiveType.oci:\n            result = ReportPathsType.oci;\n            break;\n        case PerspectiveType.ocp:\n            result = ReportPathsType.ocp;\n            break;\n        case PerspectiveType.ocpCloud:\n            result = ReportPathsType.ocpCloud;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getResourcePathsType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n            return ResourcePathsType.aws;\n            break;\n        case PerspectiveType.awsOcp:\n            return ResourcePathsType.awsOcp;\n            break;\n        case PerspectiveType.azure:\n            return ResourcePathsType.azure;\n            break;\n        case PerspectiveType.azureOcp:\n            return ResourcePathsType.azureOcp;\n            break;\n        case PerspectiveType.gcp:\n            return ResourcePathsType.gcp;\n        case PerspectiveType.gcpOcp:\n            return ResourcePathsType.gcpOcp;\n        case PerspectiveType.ibm:\n            return ResourcePathsType.ibm;\n            break;\n        case PerspectiveType.ocp:\n            return ResourcePathsType.ocp;\n            break;\n        case PerspectiveType.ocpCloud:\n            return ResourcePathsType.ocpCloud;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getTagReportPathsType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n            return TagPathsType.aws;\n            break;\n        case PerspectiveType.awsOcp:\n            return TagPathsType.awsOcp;\n            break;\n        case PerspectiveType.azure:\n            return TagPathsType.azure;\n            break;\n        case PerspectiveType.azureOcp:\n            return TagPathsType.azureOcp;\n            break;\n        case PerspectiveType.gcp:\n            return TagPathsType.gcp;\n            break;\n        case PerspectiveType.gcpOcp:\n            return TagPathsType.gcpOcp;\n            break;\n        case PerspectiveType.ibm:\n            return TagPathsType.ibm;\n            break;\n        case PerspectiveType.ocp:\n            return TagPathsType.ocp;\n            break;\n        case PerspectiveType.ocpCloud:\n            return TagPathsType.ocpCloud;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\n","import { Skeleton, Title } from '@patternfly/react-core';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { format } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { ComputedReportItemType, ComputedReportItemValueType, isFloat, isInt, } from 'routes/views/components/charts/common/chartDatum';\nimport { CostExplorerChart } from 'routes/views/components/charts/costExplorerChart';\nimport { getDateRange, getDateRangeDefault } from 'routes/views/utils/dateRange';\nimport { getGroupByOrgValue, getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedExplorerReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { formatUnits } from 'utils/format';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { chartStyles, styles } from './explorerChart.styles';\nimport { baseQuery, getGroupByDefault, getReportPathsType, getReportType } from './explorerUtils';\nclass ExplorerChartBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.createReportDatum = (value, computedItem, reportItem = 'cost', reportItemValue = 'total') => {\n            const { intl } = this.props;\n            const computedItemDate = new Date(computedItem.date + 'T00:00:00');\n            const xVal = intl.formatDate(computedItemDate, {\n                day: 'numeric',\n                month: 'short',\n            });\n            const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n            return Object.assign(Object.assign({ x: xVal, y: value === null ? null : yVal }, (value === null && { _y: 0 })), { date: computedItem.date, key: computedItem.id, name: computedItem.label ? computedItem.label : computedItem.id, units: computedItem[reportItem]\n                    ? computedItem[reportItem][reportItemValue]\n                        ? computedItem[reportItem][reportItemValue].units // cost, infrastructure, supplementary\n                        : computedItem[reportItem].units // capacity, limit, request, usage\n                    : undefined });\n        };\n        this.fetchReport = () => {\n            const { fetchReport, perspective, queryString } = this.props;\n            if (perspective) {\n                const reportPathsType = getReportPathsType(perspective);\n                const reportType = getReportType(perspective);\n                fetchReport(reportPathsType, reportType, queryString);\n            }\n        };\n        this.getChartDatums = (computedItems) => {\n            const { computedReportItemType = ComputedReportItemType.cost, computedReportItemValueType = ComputedReportItemValueType.total, } = this.props;\n            const reportItem = computedReportItemType;\n            const reportItemValue = computedReportItemValueType;\n            const chartDatums = [];\n            computedItems.map(computedItem => {\n                const datums = [];\n                if (computedItem instanceof Map) {\n                    const items = Array.from(computedItem.values());\n                    items.map(i => {\n                        const val = i[reportItem][reportItemValue] ? i[reportItem][reportItemValue].value : i[reportItem].value;\n                        datums.push(this.createReportDatum(val, i, reportItem, reportItemValue));\n                    });\n                }\n                chartDatums.push(datums);\n            });\n            return this.padChartDatums(chartDatums);\n        };\n        this.getComputedItems = () => {\n            const { report } = this.props;\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: this.getGroupBy(),\n                isDateMap: true,\n            });\n        };\n        this.getGroupBy = () => {\n            const { query } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByOrg = getGroupByOrgValue(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            return groupByTagKey ? groupByTagKey : groupByOrg ? 'org_entities' : groupById;\n        };\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, width: skeletonWidth.xs })));\n        };\n        // This pads chart datums with null datum objects, representing missing data at the beginning and end of the\n        // data series. The remaining data is left as is to allow for extrapolation. This allows us to display a \"no data\"\n        // message in the tooltip, which helps distinguish between zero values and when there is no data available.\n        this.padChartDatums = (items) => {\n            const { end_date, start_date } = this.props;\n            const result = [];\n            items.map(datums => {\n                const key = datums[0].key;\n                const label = datums[0].name;\n                const newItems = [];\n                for (let padDate = new Date(start_date + 'T00:00:00'); padDate <= new Date(end_date + 'T00:00:00'); padDate.setDate(padDate.getDate() + 1)) {\n                    const id = format(padDate, 'yyyy-MM-dd');\n                    const chartDatum = datums.find(val => val.date === id);\n                    if (chartDatum) {\n                        newItems.push(chartDatum);\n                    }\n                    else {\n                        const date = format(padDate, 'yyyy-MM-dd');\n                        newItems.push(this.createReportDatum(null, { date, id: key, label }, 'cost', null));\n                    }\n                }\n                result.push(newItems);\n            });\n            return result;\n        };\n    }\n    componentDidMount() {\n        this.fetchReport();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, reportError, queryString } = this.props;\n        const newQuery = prevProps.queryString !== queryString;\n        const noReport = !report && !reportError;\n        if (newQuery || noReport) {\n            this.fetchReport();\n        }\n    }\n    render() {\n        const { perspective, reportFetchStatus, intl } = this.props;\n        const datums = this.getChartDatums(this.getComputedItems());\n        // Todo: get title from perspective menu\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { style: styles.titleContainer },\n                React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, intl.formatMessage(messages.explorerChartTitle, { value: perspective }))),\n            React.createElement(\"div\", { style: styles.chartContainer },\n                React.createElement(\"div\", { style: styles.costChart }, reportFetchStatus === FetchStatus.inProgress ? (this.getSkeleton()) : (React.createElement(CostExplorerChart, { adjustContainerHeight: true, containerHeight: chartStyles.chartContainerHeight, formatOptions: {}, formatter: formatUnits, height: chartStyles.chartHeight, top1stData: datums.length > 0 ? datums[0] : [], top2ndData: datums.length > 1 ? datums[1] : [], top3rdData: datums.length > 2 ? datums[2] : [], top4thData: datums.length > 3 ? datums[3] : [], top5thData: datums.length > 4 ? datums[4] : [], top6thData: datums.length > 5 ? datums[5] : [] }))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { costType, currency, perspective }) => {\n    const queryFromRoute = parseQuery(location.search);\n    const dateRange = getDateRangeDefault(queryFromRoute);\n    const { end_date, start_date } = getDateRange(dateRange);\n    // Ensure group_by key is not undefined\n    let groupBy = queryFromRoute.group_by;\n    if (!groupBy && perspective) {\n        groupBy = { [getGroupByDefault(perspective)]: '*' };\n    }\n    const query = {\n        filter: Object.assign(Object.assign(Object.assign({}, baseQuery.filter), queryFromRoute.filter), { limit: 5, offset: undefined }),\n        filter_by: queryFromRoute.filter_by || baseQuery.filter_by,\n        exclude: queryFromRoute.exclude || baseQuery.exclude,\n        group_by: groupBy,\n        perspective,\n        dateRange,\n    };\n    const queryString = getQuery(Object.assign(Object.assign({}, query), { cost_type: costType, currency, perspective: undefined, dateRange: undefined, start_date,\n        end_date }));\n    const reportPathsType = getReportPathsType(perspective);\n    const reportType = getReportType(perspective);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        end_date,\n        perspective,\n        query,\n        queryString,\n        report,\n        reportError,\n        reportFetchStatus,\n        start_date,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst ExplorerChartConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerChartBase);\nconst ExplorerChart = injectIntl(withRouter(ExplorerChartConnect));\nexport { ExplorerChart };\n","import { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nclass ExplorerDateRangeBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isSelectOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getSelect = () => {\n            const { currentItem, isDisabled } = this.props;\n            const { isSelectOpen } = this.state;\n            const selectOptions = this.getSelectOptions();\n            const selection = selectOptions.find((option) => option.value === currentItem);\n            return (React.createElement(Select, { id: \"dateRangeSelect\", isDisabled: isDisabled, isOpen: isSelectOpen, onSelect: this.handleSelect, onToggle: this.handleToggle, selections: selection, variant: SelectVariant.single }, selectOptions.map(option => (React.createElement(SelectOption, { key: option.value, value: option })))));\n        };\n        this.getSelectOptions = () => {\n            const { intl, options } = this.props;\n            const selectOptions = [];\n            options.map(option => {\n                selectOptions.push({\n                    toString: () => intl.formatMessage(option.label, { value: option.value }),\n                    value: option.value,\n                });\n            });\n            return selectOptions;\n        };\n        this.handleSelect = (event, selection) => {\n            const { onItemClicked } = this.props;\n            if (onItemClicked) {\n                onItemClicked(selection.value);\n            }\n            this.setState({\n                isSelectOpen: false,\n            });\n        };\n        this.handleToggle = isSelectOpen => {\n            this.setState({ isSelectOpen });\n        };\n    }\n    render() {\n        return this.getSelect();\n    }\n}\nconst ExplorerDateRange = injectIntl(ExplorerDateRangeBase);\nexport { ExplorerDateRange };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    toolbarContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        marginLeft: `-${global_spacer_md.value}`,\n        paddingTop: global_spacer_sm.value,\n    },\n};\n","import { OrgType } from 'api/orgs/org';\nimport { getQuery, orgUnitIdKey, parseQuery, tagKey } from 'api/queries/query';\nimport { TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { getDateRange, getDateRangeDefault } from 'routes/views/utils/dateRange';\nimport { getRouteForQuery } from 'routes/views/utils/history';\nimport { createMapStateToProps } from 'store/common';\nimport { orgActions, orgSelectors } from 'store/orgs';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { isEqual } from 'utils/equal';\nimport { ExplorerDateRange } from './explorerDateRange';\nimport { styles } from './explorerFilter.styles';\nimport { dateRangeOptions, getGroupByOptions, getOrgReportPathsType, getTagReportPathsType } from './explorerUtils';\nconst orgReportType = OrgType.org;\nconst tagReportType = TagType.tag;\nexport class ExplorerFilterBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { orgReport, perspective, intl, tagReport } = this.props;\n            const options = [];\n            const groupByOptions = getGroupByOptions(perspective);\n            groupByOptions.map(option => {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: option.label }),\n                    key: option.value,\n                });\n            });\n            if (orgReport && orgReport.data && orgReport.data.length > 0) {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: 'org_unit_id' }),\n                    key: orgUnitIdKey,\n                });\n            }\n            if (tagReport && tagReport.data && tagReport.data.length > 0) {\n                options.push({ name: intl.formatMessage(messages.filterByValues, { value: 'tag' }), key: tagKey });\n            }\n            return options;\n        };\n        this.getDefaultDateRange = () => {\n            const { dateRange } = this.props;\n            return dateRange ? dateRange : dateRangeOptions[0];\n        };\n        this.getDateRangeComponent = () => {\n            const { isDisabled } = this.props;\n            const { currentDateRange } = this.state;\n            return (React.createElement(ExplorerDateRange, { currentItem: currentDateRange, isDisabled: isDisabled, onItemClicked: this.handleDateRangeClick, options: dateRangeOptions }));\n        };\n        this.handleDateRangeClick = (value) => {\n            const { history, query } = this.props;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { dateRange: value });\n            this.setState({ currentDateRange: value }, () => {\n                history.replace(getRouteForQuery(history, newQuery));\n            });\n        };\n    }\n    componentDidMount() {\n        const { fetchOrg, fetchTag, orgQueryString, orgReportPathsType, tagQueryString, tagReportPathsType } = this.props;\n        if (orgReportPathsType) {\n            fetchOrg(orgReportPathsType, orgReportType, orgQueryString);\n        }\n        if (tagReportPathsType) {\n            fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n        }\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n            currentDateRange: this.getDefaultDateRange(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchOrg, fetchTag, orgQueryString, orgReport, orgReportPathsType, perspective, query, tagQueryString, tagReport, tagReportPathsType, } = this.props;\n        if (query && !isEqual(query, prevProps.query)) {\n            if (orgReportPathsType) {\n                fetchOrg(orgReportPathsType, orgReportType, orgQueryString);\n            }\n            if (tagReportPathsType) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n        }\n        if (!isEqual(orgReport, prevProps.orgReport) || !isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            });\n        }\n        // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n        if (prevProps.perspective !== perspective) {\n            this.handleDateRangeClick(dateRangeOptions[0].value);\n        }\n    }\n    render() {\n        const { groupBy, isDisabled, onFilterAdded, onFilterRemoved, orgReport, query, resourcePathsType, tagReport, tagReportPathsType, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, dateRange: this.getDateRangeComponent(), groupBy: groupBy, isDisabled: isDisabled, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, orgReport: orgReport, query: query, resourcePathsType: resourcePathsType, style: styles.toolbarContainer, showFilter: true, tagReport: tagReport, tagReportPathsType: tagReportPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { perspective }) => {\n    const queryFromRoute = parseQuery(location.search);\n    const dateRange = getDateRangeDefault(queryFromRoute);\n    const { end_date, start_date } = getDateRange(dateRange);\n    // Omitting key_only to share a single request -- the toolbar needs key values\n    const orgQueryString = getQuery({\n        end_date,\n        start_date,\n        limit: 1000,\n    });\n    let orgReport;\n    let orgReportFetchStatus;\n    const orgReportPathsType = getOrgReportPathsType(perspective);\n    if (orgReportPathsType) {\n        orgReport = orgSelectors.selectOrg(state, orgReportPathsType, orgReportType, orgQueryString);\n        orgReportFetchStatus = orgSelectors.selectOrgFetchStatus(state, orgReportPathsType, orgReportType, orgQueryString);\n    }\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        end_date,\n        start_date,\n        key_only: true,\n        limit: 1000,\n    });\n    let tagReport;\n    let tagReportFetchStatus;\n    const tagReportPathsType = getTagReportPathsType(perspective);\n    if (tagReportPathsType) {\n        tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, tagQueryString);\n        tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, tagQueryString);\n    }\n    return {\n        dateRange,\n        orgQueryString,\n        orgReport,\n        orgReportFetchStatus,\n        orgReportPathsType,\n        perspective,\n        tagQueryString,\n        tagReport,\n        tagReportFetchStatus,\n        tagReportPathsType,\n    };\n});\nconst mapDispatchToProps = {\n    fetchOrg: orgActions.fetchOrg,\n    fetchTag: tagActions.fetchTag,\n};\nconst ExplorerFilterConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerFilterBase);\nconst ExplorerFilter = injectIntl(withRouter(ExplorerFilterConnect));\nexport { ExplorerFilter };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_Color_200 from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    cost: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    costLabel: {},\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    costLabelDate: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_200.var,\n    },\n    costType: {\n        display: 'flex',\n        marginLeft: global_spacer_md.var,\n    },\n    groupBy: {\n        paddingLeft: global_spacer_lg.var,\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        paddingBottom: global_spacer_sm.var,\n        paddingLeft: global_spacer_lg.var,\n        paddingRight: global_spacer_lg.var,\n        paddingTop: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    perspectiveContainer: {\n        display: 'flex',\n        marginTop: global_spacer_md.var,\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { getUserAccessQuery } from 'api/queries/userAccessQuery';\nimport { UserAccessType } from 'api/userAccess';\nimport { ExportsLink } from 'components/exports';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { Currency } from 'routes/components/currency';\nimport { CostType } from 'routes/views/components/costType';\nimport { GroupBy } from 'routes/views/components/groupBy';\nimport { Perspective } from 'routes/views/components/perspective';\nimport { getDateRange, getDateRangeDefault } from 'routes/views/utils/dateRange';\nimport { getRouteForQuery } from 'routes/views/utils/history';\nimport { filterProviders, hasCloudProvider } from 'routes/views/utils/providers';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { userAccessQuery, userAccessSelectors } from 'store/userAccess';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedExplorerReportItems';\nimport { hasAwsAccess, hasAzureAccess, hasGcpAccess, hasIbmAccess, isAwsAvailable, isAzureAvailable, isGcpAvailable, isIbmAvailable, isOciAvailable, isOcpAvailable, } from 'utils/userAccess';\nimport { ExplorerFilter } from './explorerFilter';\nimport { styles } from './explorerHeader.styles';\nimport { baseQuery, getGroupByDefault, getGroupByOptions, getOrgReportPathsType, getResourcePathsType, getTagReportPathsType, PerspectiveType, } from './explorerUtils';\nclass ExplorerHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n        // TBD...\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getPerspective = (isDisabled) => {\n            const { isIbmFeatureEnabled, isOciFeatureEnabled } = this.props;\n            const { currentPerspective } = this.state;\n            const hasAws = this.isAwsAvailable();\n            const hasAzure = this.isAzureAvailable();\n            const hasOci = this.isOciAvailable();\n            const hasGcp = this.isGcpAvailable();\n            const hasIbm = this.isIbmAvailable();\n            const hasOcp = this.isOcpAvailable();\n            // Note: No need to test OCP on cloud here, since that requires at least one provider\n            if (!(hasAws || hasAzure || hasOci || hasGcp || hasIbm || hasOcp)) {\n                return null;\n            }\n            return (React.createElement(Perspective, { currentItem: currentPerspective, hasAws: hasAws, hasAwsOcp: this.isAwsOcpAvailable(), hasAzure: hasAzure, hasAzureOcp: this.isAzureOcpAvailable(), hasGcp: hasGcp, hasGcpOcp: this.isGcpOcpAvailable(), hasIbm: hasIbm, hasIbmOcp: this.isIbmOcpAvailable(), hasOci: hasOci, hasOcp: hasOcp, hasOcpCloud: this.isOcpCloudAvailable(), isDisabled: isDisabled, isIbmFeatureEnabled: isIbmFeatureEnabled, isOciFeatureEnabled: isOciFeatureEnabled, onSelected: this.handlePerspectiveSelected }));\n        };\n        this.handlePerspectiveSelected = (value) => {\n            const { history, onPerspectiveClicked, query } = this.props;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { exclude: undefined, filter_by: undefined, group_by: { [getGroupByDefault(value)]: '*' }, order_by: undefined, perspective: value });\n            this.setState({ currentPerspective: value }, () => {\n                if (onPerspectiveClicked) {\n                    onPerspectiveClicked(value);\n                }\n                history.replace(getRouteForQuery(history, newQuery));\n            });\n        };\n        this.isAwsAvailable = () => {\n            const { awsProviders, userAccess } = this.props;\n            return isAwsAvailable(userAccess, awsProviders);\n        };\n        this.isAwsOcpAvailable = () => {\n            const { awsProviders, ocpProviders, userAccess } = this.props;\n            return hasAwsAccess(userAccess) && hasCloudProvider(awsProviders, ocpProviders);\n        };\n        this.isAzureAvailable = () => {\n            const { azureProviders, userAccess } = this.props;\n            return isAzureAvailable(userAccess, azureProviders);\n        };\n        this.isAzureOcpAvailable = () => {\n            const { azureProviders, ocpProviders, userAccess } = this.props;\n            return hasAzureAccess(userAccess) && hasCloudProvider(azureProviders, ocpProviders);\n        };\n        this.isGcpAvailable = () => {\n            const { gcpProviders, userAccess } = this.props;\n            return isGcpAvailable(userAccess, gcpProviders);\n        };\n        this.isGcpOcpAvailable = () => {\n            const { gcpProviders, ocpProviders, userAccess } = this.props;\n            return hasGcpAccess(userAccess) && hasCloudProvider(gcpProviders, ocpProviders);\n        };\n        this.isIbmAvailable = () => {\n            const { ibmProviders, userAccess } = this.props;\n            return isIbmAvailable(userAccess, ibmProviders);\n        };\n        this.isIbmOcpAvailable = () => {\n            const { ibmProviders, ocpProviders, userAccess } = this.props;\n            return hasIbmAccess(userAccess) && hasCloudProvider(ibmProviders, ocpProviders);\n        };\n        this.isOciAvailable = () => {\n            const { ociProviders, userAccess } = this.props;\n            return isOciAvailable(userAccess, ociProviders);\n        };\n        this.isOcpAvailable = () => {\n            const { ocpProviders, userAccess } = this.props;\n            return isOcpAvailable(userAccess, ocpProviders);\n        };\n        this.isOcpCloudAvailable = () => {\n            const hasAwsOcp = this.isAwsOcpAvailable();\n            const hasAzureOcp = this.isAzureOcpAvailable();\n            const hasGcpOcp = this.isGcpOcpAvailable();\n            const hasIbmOcp = this.isIbmOcpAvailable();\n            return hasAwsOcp || hasAzureOcp || hasGcpOcp || hasIbmOcp;\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            currentPerspective: this.props.perspective,\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { perspective } = this.props;\n        if (prevProps.perspective !== perspective) {\n            this.setState({\n                currentPerspective: this.props.perspective,\n            });\n        }\n    }\n    render() {\n        const { costType, currency, groupBy, intl, isCostTypeFeatureEnabled, isCurrencyFeatureEnabled, isExportsFeatureEnabled, onCostTypeSelected, onCurrencySelected, onFilterAdded, onFilterRemoved, onGroupBySelected, perspective, providersFetchStatus, query, } = this.props;\n        // Note: No need to test OCP on cloud here, since that requires at least one provider\n        const noAwsProviders = !this.isAwsAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noAzureProviders = !this.isAzureAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noGcpProviders = !this.isGcpAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noIbmProviders = !this.isIbmAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noOcpProviders = !this.isOcpAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noProviders = noAwsProviders && noAzureProviders && noGcpProviders && noIbmProviders && noOcpProviders;\n        const groupByOptions = getGroupByOptions(perspective);\n        const orgReportPathsType = getOrgReportPathsType(perspective);\n        const resourcePathsType = getResourcePathsType(perspective);\n        const tagReportPathsType = getTagReportPathsType(perspective);\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.explorerTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    isCurrencyFeatureEnabled && React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.perspectiveContainer },\n                this.getPerspective(noProviders),\n                React.createElement(\"div\", { style: styles.groupBy },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: noProviders, onSelected: onGroupBySelected, options: groupByOptions, orgReportPathsType: orgReportPathsType, perspective: perspective, showOrgs: orgReportPathsType, showTags: tagReportPathsType, tagReportPathsType: tagReportPathsType })),\n                (perspective === PerspectiveType.aws ||\n                    (perspective === PerspectiveType.awsOcp && isCostTypeFeatureEnabled)) && (React.createElement(\"div\", { style: styles.costType },\n                    React.createElement(CostType, { costType: costType, onSelect: onCostTypeSelected })))),\n            React.createElement(ExplorerFilter, { groupBy: groupBy, isDisabled: noProviders, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, perspective: perspective, query: query, resourcePathsType: resourcePathsType })));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { costType, currency, perspective }) => {\n    const queryFromRoute = parseQuery(location.search);\n    const dateRange = getDateRangeDefault(queryFromRoute);\n    const { end_date, start_date } = getDateRange(dateRange);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    const userAccessQueryString = getUserAccessQuery(userAccessQuery);\n    const userAccess = userAccessSelectors.selectUserAccess(state, UserAccessType.all, userAccessQueryString);\n    const userAccessError = userAccessSelectors.selectUserAccessError(state, UserAccessType.all, userAccessQueryString);\n    const userAccessFetchStatus = userAccessSelectors.selectUserAccessFetchStatus(state, UserAccessType.all, userAccessQueryString);\n    // Ensure group_by key is not undefined\n    let groupBy = queryFromRoute.group_by;\n    if (!groupBy && perspective) {\n        groupBy = { [getGroupByDefault(perspective)]: '*' };\n    }\n    const query = {\n        filter: Object.assign(Object.assign({}, baseQuery.filter), queryFromRoute.filter),\n        exclude: queryFromRoute.exclude || baseQuery.exclude,\n        filter_by: queryFromRoute.filter_by || baseQuery.filter_by,\n        group_by: groupBy,\n        order_by: queryFromRoute.order_by,\n        perspective,\n        dateRange,\n    };\n    const queryString = getQuery(Object.assign(Object.assign({}, query), { cost_type: costType, currency, perspective: undefined, dateRange: undefined, start_date,\n        end_date }));\n    return {\n        awsProviders: filterProviders(providers, ProviderType.aws),\n        azureProviders: filterProviders(providers, ProviderType.azure),\n        gcpProviders: filterProviders(providers, ProviderType.gcp),\n        ibmProviders: filterProviders(providers, ProviderType.ibm),\n        isCostTypeFeatureEnabled: featureFlagsSelectors.selectIsCostTypeFeatureEnabled(state),\n        isCurrencyFeatureEnabled: featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state),\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        isIbmFeatureEnabled: featureFlagsSelectors.selectIsIbmFeatureEnabled(state),\n        isOciFeatureEnabled: featureFlagsSelectors.selectIsOciFeatureEnabled(state),\n        ociProviders: filterProviders(providers, ProviderType.oci),\n        ocpProviders: filterProviders(providers, ProviderType.ocp),\n        providers,\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n        query,\n        queryString,\n        userAccess,\n        userAccessError,\n        userAccessFetchStatus,\n        userAccessQueryString,\n    };\n});\nconst ExplorerHeader = injectIntl(withRouter(connect(mapStateToProps, {})(ExplorerHeaderBase)));\nexport { ExplorerHeader };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n};\n","import './explorerTable.scss';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { InnerScrollContainer, SortByDirection, TableComposable, Tbody, Td, Th, Thead, Tr, } from '@patternfly/react-table';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { format } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { ComputedReportItemType, ComputedReportItemValueType } from 'routes/views/components/charts/common/chartDatum';\nimport { getDateRange, getDateRangeDefault } from 'routes/views/utils/dateRange';\nimport { getGroupByOrgValue, getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { createMapStateToProps } from 'store/common';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedExplorerReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { formatCurrency } from 'utils/format';\nimport { styles } from './explorerTable.styles';\nimport { PerspectiveType } from './explorerUtils';\nclass ExplorerTableBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { computedReportItemType = ComputedReportItemType.cost, computedReportItemValueType = ComputedReportItemValueType.total, end_date, isAllSelected, perspective, query, report, selectedItems, start_date, intl, } = this.props;\n            if (!query || !report) {\n                return;\n            }\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByOrg = getGroupByOrgValue(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey ? groupByTagKey : groupByOrg ? 'org_entities' : groupById,\n                isDateMap: true,\n            });\n            // Add first two column headings (i.e., select and name)\n            const columns = groupByTagKey || groupByOrg\n                ? [\n                    {\n                        name: '',\n                    },\n                    {\n                        name: groupByOrg\n                            ? intl.formatMessage(messages.names, { count: 2 })\n                            : intl.formatMessage(messages.tagNames),\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign({ date: undefined, name: intl.formatMessage(messages.groupByValueNames, { groupBy: groupById }), orderBy: groupById === 'account' && perspective === PerspectiveType.aws ? 'account_alias' : groupById }, (computedItems.length && { isSortable: true })),\n                ];\n            // Fill in missing columns\n            for (let currentDate = new Date(start_date + 'T00:00:00'); currentDate <= new Date(end_date + 'T00:00:00'); currentDate.setDate(currentDate.getDate() + 1)) {\n                const mapId = format(currentDate, 'yyyy-MM-dd');\n                let isSortable = computedItems.length > 0;\n                computedItems.map(rowItem => {\n                    const item = rowItem.get(mapId);\n                    if (!item) {\n                        isSortable = false;\n                        rowItem.set(mapId, {\n                            date: mapId,\n                        });\n                    }\n                });\n                // Add column headings\n                const mapIdDate = new Date(mapId + 'T00:00:00');\n                columns.push(Object.assign({ name: intl.formatDate(mapIdDate, {\n                        day: 'numeric',\n                        month: 'short',\n                    }) }, (isSortable && {\n                    date: mapId,\n                    orderBy: 'cost',\n                    isSortable: true,\n                })));\n            }\n            const reportItem = computedReportItemType;\n            const reportItemValue = computedReportItemValueType;\n            // Sort by date and fill in missing cells\n            computedItems.map(rowItem => {\n                const cells = [];\n                let desc; // First column description (i.e., show ID if different than label)\n                let name; // For first column resource name\n                let selectItem; // Save for row selection\n                const items = Array.from(rowItem.values()).sort((a, b) => {\n                    if (new Date(a.date) > new Date(b.date)) {\n                        return 1;\n                    }\n                    else if (new Date(a.date) < new Date(b.date)) {\n                        return -1;\n                    }\n                    else {\n                        return 0;\n                    }\n                });\n                items.map(item => {\n                    if (!name) {\n                        name = item && item.label && item.label !== null ? item.label : null;\n                    }\n                    if (!desc) {\n                        desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                    }\n                    if (item.id && !selectItem) {\n                        selectItem = item;\n                    }\n                    // Add row cells\n                    cells.push({\n                        value: item[reportItem] && item[reportItem][reportItemValue]\n                            ? formatCurrency(item[reportItem][reportItemValue].value, item[reportItem][reportItemValue].units)\n                            : intl.formatMessage(messages.chartNoData),\n                    });\n                });\n                // Add first row cells\n                cells.unshift({}, // Empty cell for row selection\n                {\n                    value: (React.createElement(\"div\", null,\n                        name,\n                        desc)),\n                });\n                rows.push({\n                    cells,\n                    disableSelection: selectItem.label === `no-${groupById}` || selectItem.label === `no-${groupByTagKey}`,\n                    item: selectItem,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === selectItem.id) !== undefined),\n                });\n            });\n            this.setState({\n                columns,\n                rows,\n            });\n        };\n        this.getEmptyState = () => {\n            const { query, intl } = this.props;\n            for (const val of Object.values(query.filter_by)) {\n                if (val !== '*') {\n                    return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                }\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { query } = this.props;\n            const { columns } = this.state;\n            let direction;\n            const column = columns[index];\n            const hasOrderBy = query && query.order_by && query.order_by;\n            if (column.orderBy && !column.date) {\n                direction = hasOrderBy && query.order_by[column.orderBy];\n            }\n            else if (hasOrderBy && query.order_by.date === column.date) {\n                direction = hasOrderBy && query.order_by[column.orderBy];\n            }\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected } = this.props;\n            const { rows } = this.state;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { onSort } = this.props;\n            const { columns } = this.state;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending, columns[index].date);\n            }\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { query, report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (getQuery(prevProps.query) !== getQuery(query) ||\n            previousReport !== currentReport ||\n            prevProps.selectedItems !== selectedItems) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { intl, isLoading } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(InnerScrollContainer, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.explorerTableAriaLabel), className: \"explorerTableOverride\", gridBreakPoint: \"\" },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${cellIndex}-${rowIndex}`, modifier: \"nowrap\", select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    } })) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", isActionCell: cellIndex === row.cells.length - 1 }, item.value))))))))),\n            Boolean(rows.length === 0) && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { perspective }) => {\n    const queryFromRoute = parseQuery(location.search);\n    const dateRange = getDateRangeDefault(queryFromRoute);\n    const { end_date, start_date } = getDateRange(dateRange);\n    return {\n        end_date,\n        perspective,\n        start_date,\n    };\n});\nconst mapDispatchToProps = {};\nconst ExplorerTableConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerTableBase);\nconst ExplorerTable = injectIntl(ExplorerTableConnect);\nexport { ExplorerTable };\n","import React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { createMapStateToProps } from 'store/common';\nimport { getTagReportPathsType } from './explorerUtils';\nexport class ExplorerToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { isAllSelected, isBulkSelectDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onExportClicked, pagination, perspective, selectedItems, } = this.props;\n        const tagReportPathsType = getTagReportPathsType(perspective);\n        return (React.createElement(DataToolbar, { isAllSelected: isAllSelected, isBulkSelectDisabled: isBulkSelectDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onExportClicked: onExportClicked, pagination: pagination, selectedItems: selectedItems, showBulkSelect: true, showExport: true, tagReportPathsType: tagReportPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst ExplorerToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerToolbarBase);\nconst ExplorerToolbar = injectIntl(ExplorerToolbarConnect);\nexport { ExplorerToolbar };\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { orgUnitIdKey, tagPrefix } from 'api/queries/query';\nimport { getUserAccessQuery } from 'api/queries/userAccessQuery';\nimport { UserAccessType } from 'api/userAccess';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoData } from 'routes/state/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { ExportModal } from 'routes/views/components/export';\nimport { getDateRange, getDateRangeDefault } from 'routes/views/utils/dateRange';\nimport { getGroupByOrgValue, getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { getRouteForQuery, handleCostTypeSelected, handleCurrencySelected, handleFilterAdded, handleFilterRemoved, handlePerPageSelect, handleSetPage, handleSort, } from 'routes/views/utils/history';\nimport { filterProviders, hasData } from 'routes/views/utils/providers';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { userAccessQuery, userAccessSelectors } from 'store/userAccess';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedExplorerReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getCostType } from 'utils/costType';\nimport { getCurrency } from 'utils/localStorage';\nimport { isAwsAvailable, isAzureAvailable, isGcpAvailable, isIbmAvailable, isOciAvailable, isOcpAvailable, } from 'utils/userAccess';\nimport { styles } from './explorer.styles';\nimport { ExplorerChart } from './explorerChart';\nimport { ExplorerHeader } from './explorerHeader';\nimport { ExplorerTable } from './explorerTable';\nimport { ExplorerToolbar } from './explorerToolbar';\nimport { baseQuery, getComputedReportItemType, getComputedReportItemValueType, getGroupByDefault, getPerspectiveDefault, getReportPathsType, getReportType, PerspectiveType, } from './explorerUtils';\nclass Explorer extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            isAllSelected: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByOrg = getGroupByOrgValue(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey ? groupByTagKey : groupByOrg ? 'org_entities' : groupById,\n                isDateMap: false, // Don't use isDateMap here, so we can use a flattened data structure with row selection\n            });\n            return computedItems;\n        };\n        this.getExportModal = (computedItems) => {\n            const { perspective, query, report } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `no-${groupById}` || item.label === `no-${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, query: query, reportPathsType: getReportPathsType(perspective), resolution: \"daily\", showTimeScope: false }));\n        };\n        this.getPagination = (isBottom = false) => {\n            const { history, intl, query, report } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = offset / limit + 1;\n            return (React.createElement(Pagination, { isCompact: !isBottom, itemCount: count, onPerPageSelect: (event, perPage) => handlePerPageSelect(history, query, perPage), onSetPage: (event, pageNumber) => handleSetPage(history, query, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.explorerTitle),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { history, perspective, query, report, reportFetchStatus } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return (React.createElement(ExplorerTable, { computedReportItemType: getComputedReportItemType(perspective), computedReportItemValueType: getComputedReportItemValueType(perspective), groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending, date) => handleSort(history, query, sortType, isSortAscending, date), perspective: perspective, query: query, report: report, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { perspective, report } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(ExplorerToolbar, { isAllSelected: isAllSelected, isExportDisabled: computedItems.length === 0 || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onExportClicked: this.handleExportModalOpen, pagination: this.getPagination(), perspective: perspective, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { history, query } = this.props;\n            let groupByKey = groupBy;\n            let value = '*';\n            // Check for org units\n            const index = groupBy.indexOf(orgUnitIdKey);\n            if (index !== -1) {\n                groupByKey = orgUnitIdKey.substring(0, orgUnitIdKey.length);\n                value = groupBy.slice(orgUnitIdKey.length);\n            }\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: value,\n                }, order_by: undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                history.replace(getRouteForQuery(history, newQuery));\n            });\n        };\n        this.handlePerspectiveClick = () => {\n            this.setState({ isAllSelected: false, selectedItems: [] });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.isAwsAvailable = () => {\n            const { awsProviders, userAccess } = this.props;\n            return isAwsAvailable(userAccess, awsProviders);\n        };\n        this.isAzureAvailable = () => {\n            const { azureProviders, userAccess } = this.props;\n            return isAzureAvailable(userAccess, azureProviders);\n        };\n        this.isOciAvailable = () => {\n            const { ociProviders, userAccess } = this.props;\n            return isOciAvailable(userAccess, ociProviders);\n        };\n        this.isGcpAvailable = () => {\n            const { gcpProviders, userAccess } = this.props;\n            return isGcpAvailable(userAccess, gcpProviders);\n        };\n        this.isIbmAvailable = () => {\n            const { ibmProviders, userAccess } = this.props;\n            return isIbmAvailable(userAccess, ibmProviders);\n        };\n        this.isOcpAvailable = () => {\n            const { ocpProviders, userAccess } = this.props;\n            return isOcpAvailable(userAccess, ocpProviders);\n        };\n        this.updateReport = () => {\n            const { dateRange, fetchReport, history, location, perspective, query, queryString } = this.props;\n            if (!location.search) {\n                history.replace(getRouteForQuery(history, {\n                    exclude: query ? query.exclude : undefined,\n                    filter_by: query ? query.filter_by : undefined,\n                    group_by: query ? query.group_by : undefined,\n                    order_by: query ? query.order_by : undefined,\n                    dateRange, // Preserve date range\n                }));\n            }\n            else if (perspective) {\n                fetchReport(getReportPathsType(perspective), getReportType(perspective), queryString);\n            }\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handlePerspectiveClick = this.handlePerspectiveClick.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { location, perspective, report, reportError, queryString } = this.props;\n        const { selectedItems } = this.state;\n        const newPerspective = prevProps.perspective !== perspective;\n        const newQuery = prevProps.queryString !== queryString;\n        const noReport = !report && !reportError;\n        const noLocation = !location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newPerspective || newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { awsProviders, azureProviders, ociProviders, costType, currency, gcpProviders, ibmProviders, history, intl, ocpProviders, providersFetchStatus, perspective, userAccessFetchStatus, query, report, reportError, reportFetchStatus, } = this.props;\n        // Note: No need to test OCP on cloud here, since that requires at least one provider\n        const noAwsProviders = !this.isAwsAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noAzureProviders = !this.isAzureAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noGcpProviders = !this.isGcpAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noIbmProviders = !this.isIbmAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noOcpProviders = !this.isOcpAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noOciProviders = !this.isOciAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noProviders = noAwsProviders && noAzureProviders && noGcpProviders && noIbmProviders && noOcpProviders && noOciProviders;\n        const isLoading = providersFetchStatus === FetchStatus.inProgress || userAccessFetchStatus === FetchStatus.inProgress;\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const groupByTagKey = getGroupByTagKey(query);\n        const computedItems = this.getComputedItems();\n        const itemsTotal = report && report.meta ? report.meta.count : 0;\n        const title = intl.formatMessage(messages.explorerTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (isLoading) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (noProviders) {\n            return React.createElement(NoProviders, { title: title });\n        }\n        else if (!(hasData(awsProviders) ||\n            hasData(azureProviders) ||\n            hasData(ociProviders) ||\n            hasData(gcpProviders) ||\n            hasData(ibmProviders) ||\n            hasData(ocpProviders))) {\n            return React.createElement(NoData, { title: title });\n        }\n        return (React.createElement(\"div\", { style: styles.explorer },\n            React.createElement(ExplorerHeader, { costType: costType, currency: currency, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, onCostTypeSelected: value => handleCostTypeSelected(history, query, value), onCurrencySelected: value => handleCurrencySelected(history, query, value), onFilterAdded: filter => handleFilterAdded(history, query, filter), onFilterRemoved: filter => handleFilterRemoved(history, query, filter), onGroupBySelected: this.handleGroupBySelected, onPerspectiveClicked: this.handlePerspectiveClick, perspective: perspective }),\n            itemsTotal > 0 && (React.createElement(\"div\", { style: styles.chartContent },\n                React.createElement(\"div\", { style: styles.chartContainer },\n                    React.createElement(ExplorerChart, { costType: costType, currency: currency, computedReportItemType: getComputedReportItemType(perspective), computedReportItemValueType: getComputedReportItemValueType(perspective), perspective: perspective })))),\n            React.createElement(\"div\", { style: styles.tableContent },\n                this.getToolbar(computedItems),\n                this.getExportModal(computedItems),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    const awsProviders = filterProviders(providers, ProviderType.aws);\n    const azureProviders = filterProviders(providers, ProviderType.azure);\n    const ociProviders = filterProviders(providers, ProviderType.oci);\n    const gcpProviders = filterProviders(providers, ProviderType.gcp);\n    const ibmProviders = filterProviders(providers, ProviderType.ibm);\n    const ocpProviders = filterProviders(providers, ProviderType.ocp);\n    const userAccessQueryString = getUserAccessQuery(userAccessQuery);\n    const userAccess = userAccessSelectors.selectUserAccess(state, UserAccessType.all, userAccessQueryString);\n    const userAccessError = userAccessSelectors.selectUserAccessError(state, UserAccessType.all, userAccessQueryString);\n    const userAccessFetchStatus = userAccessSelectors.selectUserAccessFetchStatus(state, UserAccessType.all, userAccessQueryString);\n    // Cost Report\n    const queryFromRoute = parseQuery(location.search);\n    const dateRange = getDateRangeDefault(queryFromRoute);\n    const { end_date, start_date } = getDateRange(dateRange);\n    const perspective = getPerspectiveDefault({\n        awsProviders,\n        azureProviders,\n        ociProviders,\n        gcpProviders,\n        ibmProviders,\n        ocpProviders,\n        queryFromRoute,\n        userAccess,\n    });\n    // Ensure group_by key is not undefined\n    let groupBy = queryFromRoute.group_by;\n    if (!groupBy && perspective) {\n        groupBy = { [getGroupByDefault(perspective)]: '*' };\n    }\n    const isCostTypeFeatureEnabled = featureFlagsSelectors.selectIsCostTypeFeatureEnabled(state);\n    const costType = perspective === PerspectiveType.aws || (perspective === PerspectiveType.awsOcp && isCostTypeFeatureEnabled)\n        ? getCostType()\n        : undefined;\n    const currency = featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state) ? getCurrency() : undefined;\n    const query = {\n        filter: Object.assign(Object.assign({}, baseQuery.filter), queryFromRoute.filter),\n        filter_by: queryFromRoute.filter_by || baseQuery.filter_by,\n        exclude: queryFromRoute.exclude || baseQuery.exclude,\n        group_by: groupBy,\n        order_by: queryFromRoute.order_by,\n        perspective,\n        dateRange,\n    };\n    const queryString = getQuery(Object.assign(Object.assign({}, query), { cost_type: costType, currency, perspective: undefined, dateRange: undefined, end_date,\n        start_date }));\n    const reportPathsType = getReportPathsType(perspective);\n    const reportType = getReportType(perspective);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        awsProviders,\n        azureProviders,\n        costType,\n        currency,\n        dateRange,\n        gcpProviders,\n        ibmProviders,\n        ociProviders,\n        ocpProviders,\n        perspective,\n        providers,\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n        query,\n        queryString,\n        report,\n        reportError,\n        reportFetchStatus,\n        userAccess,\n        userAccessError,\n        userAccessFetchStatus,\n        userAccessQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(Explorer));\n","import { UserAccessType } from 'api/userAccess';\nconst hasAccess = (userAccess, userAccessType) => {\n    let result = false;\n    if (userAccess && Array.isArray(userAccess.data)) {\n        // Used with multiple types (e.g., type=)\n        const data = userAccess.data.find(d => d.type === userAccessType);\n        result = data && data.access;\n    }\n    else {\n        // Used with type=any, type=GCP, etc.\n        result = userAccess && userAccess.data === true;\n    }\n    return result;\n};\nconst hasProviders = (providers) => {\n    let result = false;\n    if (providers && providers.meta) {\n        // providers API returns empty data array for no sources\n        result = providers.meta.count > 0;\n    }\n    return result;\n};\n// Returns true if user has access to AWS\nexport const hasAwsAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.aws);\n};\n// Returns true if user has access to AWS and at least one source provider\nexport const isAwsAvailable = (userAccess, awsProviders) => {\n    return hasAwsAccess(userAccess) && hasProviders(awsProviders);\n};\n// Returns true if user has access to Azure\nexport const hasAzureAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.azure);\n};\n// Returns true if user has access to Azure and at least one source provider\nexport const isAzureAvailable = (userAccess, azureProviders) => {\n    return hasAzureAccess(userAccess) && hasProviders(azureProviders);\n};\n// Returns true if user has access to Oci\nexport const hasOciAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.oci);\n};\n// Returns true if user has access to Oci and at least one source provider\nexport const isOciAvailable = (userAccess, ociProviders) => {\n    return hasOciAccess(userAccess) && hasProviders(ociProviders);\n};\n// Returns true if user has access to cost models\nexport const hasCostModelAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.cost_model);\n};\n// Returns true if user has access to GCP\nexport const hasGcpAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.gcp);\n};\n// Returns true if user has access to GCP and at least one source provider\nexport const isGcpAvailable = (userAccess, gcpProviders) => {\n    return hasAccess(userAccess, UserAccessType.gcp) && hasProviders(gcpProviders);\n};\n// Returns true if user has access to IBM\nexport const hasIbmAccess = (userAccess) => {\n    return hasGcpAccess(userAccess);\n};\n// Returns true if user has access to IBM and at least one source provider\nexport const isIbmAvailable = (userAccess, ibmProviders) => {\n    return hasIbmAccess(userAccess) && hasProviders(ibmProviders);\n};\n// Returns true if user has access to OCP\nexport const hasOcpAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.ocp);\n};\n// Returns true if user has access to OCP and at least one source provider\nexport const isOcpAvailable = (userAccess, ocpProviders) => {\n    return hasOcpAccess(userAccess) && hasProviders(ocpProviders);\n};\n"],"names":["CalculatorIconConfig","name","height","width","svgPath","yOffset","xOffset","CalculatorIcon","exports","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","EmptyState","variant","EmptyStateVariant","className","children","EmptyStateIcon","icon","ExclamationCircleIcon","Title","headingLevel","size","EmptyStateBody","href","target","rel","module","data","filename","mime","bom","blob","Blob","type","window","navigator","msSaveBlob","blobURL","URL","createObjectURL","webkitURL","tempLink","document","createElement","style","display","setAttribute","download","body","appendChild","click","setTimeout","removeChild","revokeObjectURL","getUserAccessQuery","query","stringify","encode","indices","styles","perspectiveSelector","alignItems","perspectiveLabel","marginBottom","marginRight","whiteSpace","perspectiveOptionLabel","marginLeft","marginTop","PerspectiveSelectBase","constructor","super","defaultState","isSelectOpen","state","getSelectOptions","intl","options","props","selections","map","option","push","toString","formatMessage","label","value","getSelect","currentItem","isDisabled","selectOptions","selection","find","Select","id","isOpen","onSelect","handleSelect","onToggle","handleToggle","SelectVariant","SelectOption","key","event","onSelected","setState","render","messages","PerspectiveSelect","injectIntl","infrastructureAwsOptions","infrastructureAwsOcpOptions","infrastructureAzureOptions","infrastructureOciOptions","infrastructureAzureOcpOptions","infrastructureGcpOptions","infrastructureGcpOcpOptions","infrastructureIbmOptions","infrastructureIbmOcpOptions","infrastructureOcpCloudOptions","ocpOptions","getInfrastructureOptions","hasAws","hasAwsOcp","hasAzure","hasAzureOcp","hasGcp","hasGcpOcp","hasIbm","hasIbmOcp","hasOci","isIbmFeatureEnabled","isOciFeatureEnabled","hasOcp","hasOcpCloud","isInfrastructureTab","undefined","getIdKeyForGroupBy","groupBy","account","cluster","gcp_project","node","org_unit_id","payer_tenant_id","product_service","project","region","resource_location","service","service_name","subscription_guid","chartContainer","backgroundColor","global_BackgroundColor_light_100","global_spacer_lg","paddingRight","paddingBottom","paddingTop","chartContent","explorer","minHeight","paginationContainer","pagination","global_spacer_md","tableContainer","tableContent","_arrayLikeToArray","arr","len","arr2","Array","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","_objectSpread","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","configurable","writable","fallbackProps","padding","stackData","childComponents","filterNullChildData","dataset","datum","_x","_y","datasets","fillInMissingData","xMap","reduce","prev","Date","getTime","xKeys","k","Number","xArr","indexOffset","isDate","x","index","y","fillData","d","y0","group","_group","firstDatasetBaseline","previousPoints","slice","concat","previousDatum","memo","some","point","getY0","_y0","_y1","_x1","addLayoutData","getCalculatedProps","role","theme","categories","c","domain","range","baseScale","scale","horizontal","_props","colorScale","useMemoizedProps","initialProps","modifiedProps","modifiedChildren","_child","child","withoutSharedEvents","_React$useState2","isArray","_arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","next","done","err","_iterableToArrayLimit","o","minLen","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","setProps","getColorScale","colorScaleOptions","getChildren","calculatedProps","childProps","standalone","getChildProps","parentName","labels","getLabels","domainPadding","labelComponent","polar","VictoryStackBase","VictoryStack","_Hooks$useAnimationSt","setAnimationState","getAnimationProps","getProps","eventKey","containerComponent","groupComponent","externalEventMutations","newChildren","animate","reverse","containerProps","parent","userProps","container","defaultContainerProps","events","previousProps","propTypes","bins","defaultProps","componentConfig","expectedComponents","displayName","ChartStack","_a","ariaDesc","ariaTitle","ChartContainer","hasPatterns","patternScale","themeColor","themeVariant","rest","desc","title","g","defaultPatternScale","themeColorScale","stack","chartStyles","chart_color_blue_300","chart_color_gold_300","chart_color_green_300","chart_color_purple_300","chart_color_orange_300","chart_color_cyan_300","yAxis","axisLabel","grid","stroke","ticks","yAxisAlt","tickLabels","fontSize","xAxis","CostExplorerChartBase","containerRef","observer","noop","hiddenSeries","Set","tickValues","initDatum","top1stData","top2ndData","top3rdData","top4thData","top5thData","top6thData","series","getTruncatedString","childName","initDatumChildName","legendItem","symbol","fill","tooltip","cursorVoronoiContainer","getCursorVoronoiContainer","units","getUnits","getTickValues","getAdjustedContainerHeight","adjustContainerHeight","containerHeight","adjustedContainerHeight","getBarWidth","maxWidth","maxValue","sectionWidth","getChart","barWidth","has","ChartBar","formatter","formatOptions","CursorVoronoiContainer","cursorDimension","mouseFollowTooltips","voronoiDimension","voronoiPadding","bottom","left","right","top","getDomain","max","Math","getEvents","chartNames","isDataHidden","isHidden","legendName","onLegendClick","handleLegendClick","getLegend","ChartLegend","gutter","responsive","val","values","modVal","str","substring","maxChars","getTickValue","handleResize","clientWidth","current","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","disable","ChartLegendTooltip","legendData","day","ref","Chart","legendAllowWrap","legendComponent","legendPosition","ChartTheme","ChartAxis","C","fixLabelOverlap","dependentAxis","tickFormat","global_spacer_2xl","chartSkeleton","global_spacer_3xl","costChart","global_spacer_sm","legendSkeleton","titleContainer","trendChart","usageChart","PerspectiveType","baseQuery","limit","offset","exclude","filter_by","order_by","cost","dateRangeOptions","groupByAwsOptions","groupByAzureOptions","groupByGcpOptions","groupByGcpOcpOptions","groupByIbmOptions","groupByOciOptions","groupByOcpOptions","getComputedReportItemType","perspective","result","getComputedReportItemValueType","getGroupByDefault","aws","awsOcp","gcp","gcpOcp","ibm","azure","azureOcp","ocp","ocpCloud","oci","getGroupByOptions","getOrgReportPathsType","getReportType","getReportPathsType","getTagReportPathsType","ExplorerChartBase","stateProps","dispatchProps","createReportDatum","computedItem","reportItem","reportItemValue","computedItemDate","date","xVal","formatDate","month","yVal","parseFloat","toFixed","fetchReport","queryString","getChartDatums","computedItems","computedReportItemType","computedReportItemValueType","chartDatums","datums","Map","padChartDatums","getComputedItems","report","idKey","getGroupBy","isDateMap","groupById","group_by","groupByOrg","getSkeleton","Skeleton","skeleton","items","end_date","start_date","newItems","padDate","setDate","getDate","format","chartDatum","reportError","reportFetchStatus","mapStateToProps","costType","currency","queryFromRoute","location","search","dateRange","cost_type","reportPathsType","reportType","mapDispatchToProps","ExplorerChartConnect","connect","ExplorerChart","ExplorerDateRangeBase","onItemClicked","ExplorerDateRange","toolbarContainer","orgReportType","tagReportType","ExplorerFilterBase","getCategoryOptions","orgReport","tagReport","getDefaultDateRange","getDateRangeComponent","currentDateRange","handleDateRangeClick","history","newQuery","JSON","parse","replace","fetchOrg","fetchTag","orgQueryString","orgReportPathsType","tagQueryString","tagReportPathsType","categoryOptions","onFilterAdded","onFilterRemoved","resourcePathsType","showFilter","orgReportFetchStatus","key_only","tagReportFetchStatus","ExplorerFilterConnect","ExplorerFilter","costLabel","costValue","costLabelUnit","global_FontSize_sm","color","global_Color_100","costLabelDate","global_Color_200","paddingLeft","header","headerContent","justifyContent","headerContentRight","perspectiveContainer","ExplorerHeaderBase","getPerspective","currentPerspective","isAwsAvailable","isAzureAvailable","isOciAvailable","isGcpAvailable","isIbmAvailable","isOcpAvailable","isAwsOcpAvailable","isAzureOcpAvailable","isGcpOcpAvailable","isIbmOcpAvailable","isOcpCloudAvailable","handlePerspectiveSelected","onPerspectiveClicked","awsProviders","userAccess","ocpProviders","azureProviders","gcpProviders","ibmProviders","ociProviders","isCostTypeFeatureEnabled","isCurrencyFeatureEnabled","isExportsFeatureEnabled","onCostTypeSelected","onCurrencySelected","onGroupBySelected","providersFetchStatus","noAwsProviders","noAzureProviders","noGcpProviders","noIbmProviders","noOcpProviders","noProviders","groupByOptions","getResourcePathsType","TitleSizes","showOrgs","showTags","providersQueryString","providers","providersError","userAccessQueryString","userAccessError","userAccessFetchStatus","featureFlags","ExplorerHeader","emptyState","infoArrow","position","infoArrowDesc","global_spacer_xs","infoDescription","global_disabled_color_100","global_FontSize_xs","ExplorerTableBase","columns","rows","isAllSelected","selectedItems","groupByTagKey","count","orderBy","isSortable","currentDate","mapId","rowItem","get","set","mapIdDate","cells","selectItem","sort","a","b","item","unshift","disableSelection","selected","getEmptyState","showMargin","getSortBy","direction","column","hasOrderBy","getSortParams","sortBy","onSort","handleOnSort","columnIndex","handleOnSelect","isSelected","rowId","newRows","row","SortByDirection","bind","currentReport","previousReport","isLoading","InnerScrollContainer","TableComposable","gridBreakPoint","Thead","Tr","col","Th","modifier","Tbody","Td","colSpan","Bullseye","textAlign","Spinner","rowIndex","cellIndex","dataLabel","select","selectionDisabled","_event","isActionCell","Boolean","ExplorerTableConnect","ExplorerTable","ExplorerToolbarBase","isBulkSelectDisabled","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onExportClicked","showBulkSelect","showExport","ExplorerToolbarConnect","ExplorerToolbar","Explorer","isExportModalOpen","getExportModal","meta","isAllItems","onClose","handleExportModalClose","resolution","showTimeScope","getPagination","isBottom","page","Pagination","isCompact","itemCount","onPerPageSelect","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","PaginationVariant","widgetId","getTable","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","handleExportModalOpen","action","handleGroupBySelected","groupByKey","indexOf","handlePerspectiveClick","updateReport","prevState","newPerspective","noReport","noLocation","noOciProviders","ibmOcp","hasAwsCloud","hasAzureCloud","hasGcpCloud","hasIbmCloud","getPerspectiveDefault","hasAccess","userAccessType","access","hasProviders","hasAwsAccess","hasAzureAccess","hasOciAccess","hasCostModelAccess","hasGcpAccess","hasIbmAccess","hasOcpAccess"],"sourceRoot":""}