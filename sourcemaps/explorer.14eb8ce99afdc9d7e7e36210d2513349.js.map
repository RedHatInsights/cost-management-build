{"version":3,"file":"js/explorer.b0ac891bb968c65feaff.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-tokens/dist/js/chart_color_cyan_300.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/chart_color_gold_300.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/chart_color_purple_300.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_Color_200.js","webpack:///./src/api/queries/userAccessQuery.ts","webpack:///./src/routes/views/components/charts/chartTheme/theme-koku.ts","webpack:///./src/routes/views/components/charts/chartTheme/index.ts","webpack:///./src/routes/views/components/charts/chartTheme/theme-utils.ts","webpack:///./src/routes/views/components/perspective/perspective.tsx","webpack:///./src/utils/computedReport/getComputedExplorerReportItems.ts","webpack:///./src/routes/views/explorer/explorer.styles.ts","webpack:///./node_modules/victory-stack/es/helper-methods.js","webpack:///./node_modules/victory-stack/es/victory-stack.js","webpack:///./node_modules/@patternfly/react-charts/dist/esm/components/ChartStack/ChartStack.js","webpack:///./src/routes/views/components/charts/costExplorerChart/costExplorerChart.styles.ts","webpack:///./src/routes/views/components/charts/costExplorerChart/costExplorerChart.tsx","webpack:///./src/routes/views/explorer/explorerChart.styles.ts","webpack:///./src/routes/views/explorer/explorerUtils.ts","webpack:///./src/routes/views/explorer/explorerChart.tsx","webpack:///./src/routes/views/explorer/explorerDatePicker.styles.ts","webpack:///./src/routes/views/explorer/explorerDatePicker.tsx","webpack:///./src/routes/views/explorer/explorerDateRange.tsx","webpack:///./src/routes/views/explorer/explorerFilter.styles.ts","webpack:///./src/routes/views/explorer/explorerFilter.tsx","webpack:///./src/routes/views/explorer/explorerHeader.styles.ts","webpack:///./src/routes/views/explorer/explorerHeader.tsx","webpack:///./src/routes/views/explorer/explorerTable.styles.ts","webpack:///./src/routes/views/explorer/explorerTable.tsx","webpack:///./src/routes/views/explorer/explorerToolbar.tsx","webpack:///./src/routes/views/explorer/explorer.tsx","webpack:///./src/utils/skeleton.ts","webpack:///./src/utils/userAccess.ts"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.chart_color_cyan_300 = {\n  \"name\": \"--pf-chart-color-cyan-300\",\n  \"value\": \"#009596\",\n  \"var\": \"var(--pf-chart-color-cyan-300, #009596)\"\n};\nexports[\"default\"] = exports.chart_color_cyan_300;","\"use strict\";\nexports.__esModule = true;\nexports.chart_color_gold_300 = {\n  \"name\": \"--pf-chart-color-gold-300\",\n  \"value\": \"#f4c145\",\n  \"var\": \"var(--pf-chart-color-gold-300, #f4c145)\"\n};\nexports[\"default\"] = exports.chart_color_gold_300;","\"use strict\";\nexports.__esModule = true;\nexports.chart_color_purple_300 = {\n  \"name\": \"--pf-chart-color-purple-300\",\n  \"value\": \"#5752d1\",\n  \"var\": \"var(--pf-chart-color-purple-300, #5752d1)\"\n};\nexports[\"default\"] = exports.chart_color_purple_300;","\"use strict\";\nexports.__esModule = true;\nexports.global_Color_200 = {\n  \"name\": \"--pf-global--Color--200\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--Color--200)\"\n};\nexports[\"default\"] = exports.global_Color_200;","import { parse, stringify } from 'qs';\nexport function getUserAccessQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseUserAccessQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","// Layout\nconst LAYOUT_PROPS = {\n    padding: 8,\n};\n// Victory theme properties only\nexport default {\n    area: Object.assign({}, LAYOUT_PROPS),\n    axis: Object.assign({}, LAYOUT_PROPS),\n    bar: Object.assign({}, LAYOUT_PROPS),\n    boxplot: Object.assign({}, LAYOUT_PROPS),\n    candlestick: Object.assign({}, LAYOUT_PROPS),\n    chart: Object.assign({}, LAYOUT_PROPS),\n    errorbar: Object.assign({}, LAYOUT_PROPS),\n    group: Object.assign({}, LAYOUT_PROPS),\n    legend: {},\n    line: Object.assign({}, LAYOUT_PROPS),\n    pie: Object.assign({}, LAYOUT_PROPS),\n    scatter: Object.assign({}, LAYOUT_PROPS),\n    stack: Object.assign({}, LAYOUT_PROPS),\n    tooltip: {},\n    voronoi: Object.assign({}, LAYOUT_PROPS),\n};\n","import getTheme from './theme-utils';\nconst ChartTheme = getTheme();\nexport default ChartTheme;\n","import { ChartThemeColor, getCustomTheme } from '@patternfly/react-charts';\nimport { default as ChartTheme } from './theme-koku';\n// Applies theme color and variant to base theme\nconst getTheme = () => getCustomTheme(ChartThemeColor.default, null, ChartTheme);\nexport default getTheme;\n","import messages from 'locales/messages';\nimport React from 'react';\nimport { PerspectiveSelect } from 'routes/views/components/perspective/perspectiveSelect';\n// Infrastructure AWS options\nconst infrastructureAwsOptions = [{ label: messages.perspectiveValues, value: 'aws' }];\n// Infrastructure AWS filtered by OpenShift options\nconst infrastructureAwsOcpOptions = [{ label: messages.perspectiveValues, value: 'aws_ocp' }];\n// Infrastructure Azure options\nconst infrastructureAzureOptions = [{ label: messages.perspectiveValues, value: 'azure' }];\n// Infrastructure Oci options\nconst infrastructureOciOptions = [{ label: messages.perspectiveValues, value: 'oci' }];\n// Infrastructure Azure filtered by OpenShift options\nconst infrastructureAzureOcpOptions = [{ label: messages.perspectiveValues, value: 'azure_ocp' }];\n// Infrastructure GCP options\nconst infrastructureGcpOptions = [{ label: messages.perspectiveValues, value: 'gcp' }];\n// Infrastructure GCP filtered by OCP options\nconst infrastructureGcpOcpOptions = [{ label: messages.perspectiveValues, value: 'gcp_ocp' }];\n// Infrastructure IBM options\nconst infrastructureIbmOptions = [{ label: messages.perspectiveValues, value: 'ibm' }];\n// Infrastructure IBM filtered by OCP options\nconst infrastructureIbmOcpOptions = [{ label: messages.perspectiveValues, value: 'ibm_ocp' }];\n// Infrastructure Ocp cloud options\nconst infrastructureOcpCloudOptions = [{ label: messages.perspectiveValues, value: 'ocp_cloud' }];\n// Ocp options\nconst ocpOptions = [{ label: messages.perspectiveValues, value: 'ocp' }];\n// RHEL options\nconst rhelOptions = [{ label: messages.perspectiveValues, value: 'rhel' }];\nconst getInfrastructureOptions = ({ hasAws, hasAwsOcp, hasAzure, hasAzureOcp, hasGcp, hasGcpOcp, hasIbm, hasIbmOcp, hasOci, isIbmFeatureEnabled, }) => {\n    const options = [];\n    if (hasAws) {\n        options.push(...infrastructureAwsOptions);\n    }\n    if (hasAwsOcp) {\n        options.push(...infrastructureAwsOcpOptions);\n    }\n    if (hasGcp) {\n        options.push(...infrastructureGcpOptions);\n    }\n    if (hasGcpOcp) {\n        options.push(...infrastructureGcpOcpOptions);\n    }\n    if (hasIbm) {\n        options.push(...infrastructureIbmOptions);\n    }\n    if (hasIbmOcp && isIbmFeatureEnabled) {\n        options.push(...infrastructureIbmOcpOptions);\n    }\n    if (hasAzure) {\n        options.push(...infrastructureAzureOptions);\n    }\n    if (hasAzureOcp) {\n        options.push(...infrastructureAzureOcpOptions);\n    }\n    if (hasOci) {\n        options.push(...infrastructureOciOptions);\n    }\n    return options;\n};\nconst Perspective = ({ currentItem, hasAws, hasAwsOcp, hasAzure, hasAzureOcp, hasGcp, hasGcpOcp, hasIbm, hasIbmOcp, hasOci, hasOcp, hasOcpCloud, hasRhel, isDisabled, isIbmFeatureEnabled, isInfrastructureTab, isRhelTab, onSelected, }) => {\n    // Dynamically show options if providers are available\n    const options = [];\n    // Note isInfrastructureTab and isRhelTab will be undefined for cost explorer\n    if (isInfrastructureTab !== undefined || isRhelTab !== undefined) {\n        if (isInfrastructureTab) {\n            if (hasOcpCloud) {\n                options.push(...infrastructureOcpCloudOptions);\n            }\n            options.push(...getInfrastructureOptions({\n                hasAws,\n                hasAwsOcp,\n                hasAzure,\n                hasAzureOcp,\n                hasGcp,\n                hasGcpOcp,\n                hasIbm,\n                hasIbmOcp,\n                hasOci,\n                isIbmFeatureEnabled,\n            }));\n        }\n        else if (isRhelTab) {\n            if (hasRhel) {\n                options.push(...rhelOptions);\n            }\n        }\n        else if (hasOcp) {\n            options.push(...ocpOptions);\n        }\n    }\n    else {\n        if (hasOcp) {\n            options.push(...ocpOptions);\n        }\n        if (hasOcpCloud) {\n            options.push(...infrastructureOcpCloudOptions);\n        }\n        if (hasRhel) {\n            options.push(...rhelOptions);\n        }\n        options.push(...getInfrastructureOptions({\n            hasAws,\n            hasAwsOcp,\n            hasAzure,\n            hasAzureOcp,\n            hasGcp,\n            hasGcpOcp,\n            hasIbm,\n            hasIbmOcp,\n            hasOci,\n            isIbmFeatureEnabled,\n        }));\n    }\n    return (React.createElement(PerspectiveSelect, { currentItem: currentItem || options[0].value, isDisabled: isDisabled, onSelected: onSelected, options: options }));\n};\nexport default Perspective;\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.account) {\n        return 'account';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.gcp_project) {\n        return 'gcp_project';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    if (groupBy.org_unit_id) {\n        return 'org_unit_id';\n    }\n    if (groupBy.payer_tenant_id) {\n        return 'payer_tenant_id';\n    }\n    if (groupBy.product_service) {\n        return 'product_service';\n    }\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.region) {\n        return 'region';\n    }\n    if (groupBy.resource_location) {\n        return 'resource_location';\n    }\n    if (groupBy.service) {\n        return 'service';\n    }\n    if (groupBy.service_name) {\n        return 'service_name';\n    }\n    if (groupBy.subscription_guid) {\n        return 'subscription_guid';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    chartContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n        paddingRight: global_spacer_lg.value,\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    chartContent: {\n        paddingTop: global_spacer_lg.value,\n    },\n    explorer: {\n        minHeight: '100%',\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    tableContent: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    toolbarContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import _orderBy from \"lodash/orderBy\";\nimport _keys from \"lodash/keys\";\nimport _assign from \"lodash/assign\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Helpers, Scale, Wrapper } from \"victory-core\";\nimport isEqual from \"react-fast-compare\";\nvar fallbackProps = {\n  width: 450,\n  height: 300,\n  padding: 50\n}; // Assumes data in `datasets` is sorted by `Data.getData`.\n\nfunction fillData(props, datasets) {\n  var fillInMissingData = props.fillInMissingData;\n  var xMap = datasets.reduce(function (prev, dataset) {\n    dataset.forEach(function (datum) {\n      prev[datum._x instanceof Date ? datum._x.getTime() : datum._x] = true;\n    });\n    return prev;\n  }, {});\n\n  var xKeys = _keys(xMap).map(function (k) {\n    return Number(k);\n  });\n\n  var xArr = _orderBy(xKeys);\n\n  return datasets.map(function (dataset) {\n    var indexOffset = 0;\n    var isDate = dataset[0] && dataset[0]._x instanceof Date;\n    var filledInData = xArr.map(function (x, index) {\n      x = Number(x);\n      var datum = dataset[index - indexOffset];\n\n      if (datum) {\n        var x1 = isDate ? datum._x.getTime() : datum._x;\n\n        if (x1 === x) {\n          return datum;\n        }\n\n        indexOffset++;\n\n        var _y = fillInMissingData ? 0 : null;\n\n        x = isDate ? new Date(x) : x;\n        return {\n          x: x,\n          y: _y,\n          _x: x,\n          _y: _y\n        };\n      }\n\n      var y = fillInMissingData ? 0 : null;\n      x = isDate ? new Date(x) : x;\n      return {\n        x: x,\n        y: y,\n        _x: x,\n        _y: y\n      };\n    });\n    return filledInData;\n  });\n}\n\nfunction getY0(datum, index, datasets) {\n  if (datum.y0) {\n    return datum.y0;\n  }\n\n  var y = datum._y;\n  var group = datum._group;\n  var firstDatasetBaseline = datasets[0].map(function (d) {\n    return d.y0;\n  });\n  var previousDatasets = datasets.slice(0, index);\n  var previousPoints = previousDatasets.reduce(function (prev, dataset) {\n    return prev.concat(dataset.filter(function (previousDatum) {\n      return datum._x instanceof Date ? previousDatum._x.getTime() === datum._x.getTime() : previousDatum._x === datum._x;\n    }).map(function (previousDatum) {\n      return previousDatum._y || 0;\n    }));\n  }, []);\n  var y0 = previousPoints.length && previousPoints.reduce(function (memo, value) {\n    var sameSign = y < 0 && value < 0 || y >= 0 && value >= 0;\n    return sameSign ? Number(value) + memo : memo;\n  }, firstDatasetBaseline[group] || 0);\n  return previousPoints.some(function (point) {\n    return point instanceof Date;\n  }) ? new Date(y0) : y0;\n}\n/* eslint-disable no-nested-ternary */\n\n\nfunction addLayoutData(props, datasets, index) {\n  var xOffset = props.xOffset || 0;\n  return datasets[index].map(function (datum) {\n    var yOffset = getY0(datum, index, datasets) || 0;\n    return _assign({}, datum, {\n      _y0: !(datum._y instanceof Date) ? yOffset : yOffset ? new Date(yOffset) : datum._y,\n      _y1: datum._y === null ? null : datum._y instanceof Date ? new Date(Number(datum._y) + Number(yOffset)) : datum._y + yOffset,\n      _x1: datum._x === null ? null : datum._x instanceof Date ? new Date(Number(datum._x) + Number(xOffset)) : datum._x + xOffset\n    });\n  });\n}\n/* eslint-enable no-nested-ternary */\n\n\nfunction stackData(props, childComponents) {\n  var dataFromChildren = Wrapper.getDataFromChildren(props, childComponents);\n  var filterNullChildData = dataFromChildren.map(function (dataset) {\n    return dataset.filter(function (datum) {\n      return datum._x !== null && datum._y !== null;\n    });\n  });\n  var datasets = fillData(props, filterNullChildData);\n  return datasets.map(function (d, i) {\n    return addLayoutData(props, datasets, i);\n  });\n}\n\nexport function getCalculatedProps(props, childComponents) {\n  childComponents = childComponents || React.Children.toArray(props.children);\n  var role = \"stack\";\n  props = Helpers.modifyProps(props, fallbackProps, role);\n  var style = Wrapper.getStyle(props.theme, props.style, role);\n  var categories = props.categories || Wrapper.getCategories(props, childComponents);\n  var datasets = props.datasets || stackData(props, childComponents);\n  var children = childComponents.map(function (c, i) {\n    return /*#__PURE__*/React.cloneElement(c, {\n      data: datasets[i]\n    });\n  });\n  var domain = {\n    x: Wrapper.getDomain(_assign({}, props, {\n      categories: categories\n    }), \"x\", children),\n    y: Wrapper.getDomain(_assign({}, props, {\n      categories: categories\n    }), \"y\", children)\n  };\n  var range = props.range || {\n    x: Helpers.getRange(props, \"x\"),\n    y: Helpers.getRange(props, \"y\")\n  };\n  var baseScale = {\n    x: Scale.getScaleFromProps(props, \"x\") || Wrapper.getScale(props, \"x\"),\n    y: Scale.getScaleFromProps(props, \"y\") || Wrapper.getScale(props, \"y\")\n  };\n  var scale = {\n    x: baseScale.x.domain(domain.x).range(props.horizontal ? range.y : range.x),\n    y: baseScale.y.domain(domain.y).range(props.horizontal ? range.x : range.y)\n  };\n  var _props = props,\n      colorScale = _props.colorScale,\n      horizontal = _props.horizontal;\n  return {\n    datasets: datasets,\n    categories: categories,\n    range: range,\n    domain: domain,\n    horizontal: horizontal,\n    scale: scale,\n    style: style,\n    colorScale: colorScale,\n    role: role\n  };\n} // We need to remove sharedEvents in order to memoize the calculated data\n// With shared events, the props change on every event, and every value is re-calculated\n\nvar withoutSharedEvents = function (props) {\n  var children = props.children;\n  var modifiedChildren = React.Children.toArray(children).map(function (_child) {\n    var child = _child;\n    return _objectSpread(_objectSpread({}, child), {}, {\n      props: Helpers.omit(child.props, [\"sharedEvents\"])\n    });\n  });\n  props.children = modifiedChildren;\n  return props;\n};\n\nexport function useMemoizedProps(initialProps) {\n  var modifiedProps = withoutSharedEvents(initialProps);\n\n  var _React$useState = React.useState(modifiedProps),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      props = _React$useState2[0],\n      setProps = _React$useState2[1]; // React.memo uses shallow equality to compare objects. This way props\n  // will only be re-calculated when they change.\n\n\n  React.useEffect(function () {\n    if (!isEqual(modifiedProps, props)) {\n      setProps(modifiedProps);\n    }\n  }, [props, setProps, modifiedProps]);\n  return React.useMemo(function () {\n    return getCalculatedProps(props, props.children);\n  }, [props]);\n}\n\nfunction getLabels(props, datasets, index) {\n  if (!props.labels) {\n    return undefined;\n  }\n\n  return datasets.length === index + 1 ? props.labels : undefined;\n}\n\nexport function getChildProps(props, calculatedProps) {\n  var categories = calculatedProps.categories,\n      domain = calculatedProps.domain,\n      range = calculatedProps.range,\n      scale = calculatedProps.scale,\n      horizontal = calculatedProps.horizontal;\n  return {\n    height: props.height,\n    width: props.width,\n    padding: Helpers.getPadding(props),\n    standalone: false,\n    theme: props.theme,\n    categories: categories,\n    domain: domain,\n    range: range,\n    scale: scale,\n    horizontal: horizontal\n  };\n}\n\nfunction getColorScale(props, child) {\n  var role = child.type && child.type.role;\n  var colorScaleOptions = child.props.colorScale || props.colorScale;\n\n  if (role !== \"group\" && role !== \"stack\") {\n    return undefined;\n  }\n\n  return props.theme ? colorScaleOptions || props.theme.props.colorScale : colorScaleOptions;\n}\n\nexport function getChildren(props, childComponents, calculatedProps) {\n  props = Helpers.modifyProps(props, fallbackProps, \"stack\");\n  childComponents = childComponents || React.Children.toArray(props.children);\n  calculatedProps = calculatedProps || getCalculatedProps(props, childComponents);\n  var _calculatedProps = calculatedProps,\n      datasets = _calculatedProps.datasets;\n  var childProps = getChildProps(props, calculatedProps);\n  var parentName = props.name || \"stack\";\n  return childComponents.map(function (child, index) {\n    var role = child.type && child.type.role;\n    var data = datasets[index];\n    var style = Wrapper.getChildStyle(child, index, calculatedProps);\n    var labels = props.labels ? getLabels(props, datasets, index) : child.props.labels;\n    var name = child.props.name || \"\".concat(parentName, \"-\").concat(role, \"-\").concat(index);\n    return /*#__PURE__*/React.cloneElement(child, _assign({\n      key: \"\".concat(name, \"-key-\").concat(index),\n      labels: labels,\n      name: name,\n      domainPadding: child.props.domainPadding || props.domainPadding,\n      theme: props.theme,\n      labelComponent: props.labelComponent || child.props.labelComponent,\n      style: style,\n      colorScale: getColorScale(props, child),\n      data: data,\n      polar: props.polar\n    }, childProps));\n  });\n}","import _isEmpty from \"lodash/isEmpty\";\nimport _defaults from \"lodash/defaults\";\nimport _assign from \"lodash/assign\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { CommonProps, Helpers, Hooks, PropTypes as CustomPropTypes, UserProps, VictoryContainer, VictoryTheme, Wrapper } from \"victory-core\";\nimport { VictorySharedEvents } from \"victory-shared-events\";\nimport { getChildren, useMemoizedProps } from \"./helper-methods\";\nimport isEqual from \"react-fast-compare\";\nvar fallbackProps = {\n  width: 450,\n  height: 300,\n  padding: 50\n};\n\nvar VictoryStackBase = function (initialProps) {\n  // eslint-disable-next-line no-use-before-define\n  var role = VictoryStack.role;\n\n  var _Hooks$useAnimationSt = Hooks.useAnimationState(),\n      setAnimationState = _Hooks$useAnimationSt.setAnimationState,\n      getAnimationProps = _Hooks$useAnimationSt.getAnimationProps,\n      getProps = _Hooks$useAnimationSt.getProps;\n\n  var props = getProps(initialProps);\n  var modifiedProps = Helpers.modifyProps(props, fallbackProps, role);\n  var eventKey = modifiedProps.eventKey,\n      containerComponent = modifiedProps.containerComponent,\n      standalone = modifiedProps.standalone,\n      groupComponent = modifiedProps.groupComponent,\n      externalEventMutations = modifiedProps.externalEventMutations,\n      width = modifiedProps.width,\n      height = modifiedProps.height,\n      theme = modifiedProps.theme,\n      polar = modifiedProps.polar,\n      horizontal = modifiedProps.horizontal,\n      name = modifiedProps.name;\n  var childComponents = React.Children.toArray(modifiedProps.children);\n  var calculatedProps = useMemoizedProps(modifiedProps);\n  var domain = calculatedProps.domain,\n      scale = calculatedProps.scale,\n      style = calculatedProps.style;\n  var newChildren = React.useMemo(function () {\n    var children = getChildren(props, childComponents, calculatedProps);\n    var orderedChildren = children.map(function (child, index) {\n      var childProps = _assign({\n        animate: getAnimationProps(props, child, index)\n      }, child.props);\n\n      return /*#__PURE__*/React.cloneElement(child, childProps);\n    });\n    /*\n      reverse render order for children of `VictoryStack` so that higher children in the stack\n      are rendered behind lower children. This looks nicer for stacked bars with cornerRadius, and\n      areas with strokes\n    */\n\n    return orderedChildren.reverse();\n  }, [props, childComponents, calculatedProps, getAnimationProps]);\n  var containerProps = React.useMemo(function () {\n    if (standalone) {\n      return {\n        domain: domain,\n        scale: scale,\n        width: width,\n        height: height,\n        standalone: standalone,\n        theme: theme,\n        style: style.parent,\n        horizontal: horizontal,\n        polar: polar,\n        name: name\n      };\n    }\n\n    return {};\n  }, [standalone, domain, scale, width, height, theme, style, horizontal, polar, name]);\n  var userProps = React.useMemo(function () {\n    return UserProps.getSafeUserProps(initialProps);\n  }, [initialProps]);\n  var container = React.useMemo(function () {\n    if (standalone) {\n      var defaultContainerProps = _defaults({}, containerComponent.props, containerProps, userProps);\n\n      return /*#__PURE__*/React.cloneElement(containerComponent, defaultContainerProps);\n    }\n\n    return /*#__PURE__*/React.cloneElement(groupComponent, userProps);\n  }, [groupComponent, standalone, containerComponent, containerProps, userProps]);\n  var events = React.useMemo(function () {\n    return Wrapper.getAllEvents(props);\n  }, [props]);\n  var previousProps = Hooks.usePreviousProps(initialProps);\n  React.useEffect(function () {\n    // This is called before dismount to keep state in sync\n    return function () {\n      if (initialProps.animate) {\n        setAnimationState(previousProps, initialProps);\n      }\n    };\n  }, [setAnimationState, previousProps, initialProps]);\n\n  if (!_isEmpty(events)) {\n    return /*#__PURE__*/React.createElement(VictorySharedEvents, {\n      container: container,\n      eventKey: eventKey,\n      events: events,\n      externalEventMutations: externalEventMutations\n    }, newChildren);\n  }\n\n  return /*#__PURE__*/React.cloneElement(container, container.props, newChildren);\n};\n\nVictoryStackBase.propTypes = _objectSpread(_objectSpread({}, CommonProps.baseProps), {}, {\n  bins: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([CustomPropTypes.nonNegative, PropTypes.instanceOf(Date)])), CustomPropTypes.nonNegative]),\n  categories: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.shape({\n    x: PropTypes.arrayOf(PropTypes.string),\n    y: PropTypes.arrayOf(PropTypes.string)\n  })]),\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  colorScale: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.oneOf([\"grayscale\", \"qualitative\", \"heatmap\", \"warm\", \"cool\", \"red\", \"green\", \"blue\"])]),\n  fillInMissingData: PropTypes.bool,\n  horizontal: PropTypes.bool,\n  labelComponent: PropTypes.element,\n  labels: PropTypes.oneOfType([PropTypes.func, PropTypes.array]),\n  style: PropTypes.shape({\n    parent: PropTypes.object,\n    data: PropTypes.object,\n    labels: PropTypes.object\n  }),\n  xOffset: PropTypes.number\n});\nVictoryStackBase.defaultProps = {\n  containerComponent: /*#__PURE__*/React.createElement(VictoryContainer, null),\n  groupComponent: /*#__PURE__*/React.createElement(\"g\", null),\n  standalone: true,\n  theme: VictoryTheme.grayscale,\n  fillInMissingData: true\n};\nvar componentConfig = {\n  role: \"stack\",\n  expectedComponents: [\"groupComponent\", \"containerComponent\", \"labelComponent\"],\n  getChildren: getChildren\n};\nexport var VictoryStack = Object.assign( /*#__PURE__*/React.memo(VictoryStackBase, isEqual), componentConfig);\nVictoryStack.displayName = \"VictoryStack\";","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryStack } from 'victory-stack';\nimport { ChartContainer } from '../ChartContainer';\nimport { getClassName, useDefaultPatternProps, getTheme, renderChildrenWithPatterns } from '../ChartUtils';\nexport const ChartStack = (_a) => {\n    var { ariaDesc, ariaTitle, children, colorScale, containerComponent = React.createElement(ChartContainer, null), hasPatterns, patternScale, themeColor, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    themeVariant, \n    // destructure last\n    theme = getTheme(themeColor) } = _a, rest = __rest(_a, [\"ariaDesc\", \"ariaTitle\", \"children\", \"colorScale\", \"containerComponent\", \"hasPatterns\", \"patternScale\", \"themeColor\", \"themeVariant\", \"theme\"]);\n    // Clone so users can override container props\n    const container = React.cloneElement(containerComponent, Object.assign(Object.assign({ desc: ariaDesc, title: ariaTitle, theme }, containerComponent.props), { className: getClassName({ className: containerComponent.props.className }) // Override VictoryContainer class name\n     }));\n    const { defaultPatternScale } = useDefaultPatternProps({\n        colorScale,\n        hasPatterns,\n        patternScale,\n        themeColorScale: theme.stack.colorScale\n    });\n    // Note: containerComponent is required for theme\n    return (React.createElement(VictoryStack, Object.assign({ colorScale: colorScale, containerComponent: container, theme: theme }, rest), renderChildrenWithPatterns({\n        children,\n        patternScale: defaultPatternScale\n    })));\n};\nChartStack.displayName = 'ChartStack';\n// Note: VictoryStack.getChildren & VictoryStack.role must be hoisted\nhoistNonReactStatics(ChartStack, VictoryStack);\n//# sourceMappingURL=ChartStack.js.map","import { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_cyan_300 } from '@patternfly/react-tokens/dist/js/chart_color_cyan_300';\nimport { chart_color_gold_300 } from '@patternfly/react-tokens/dist/js/chart_color_gold_300';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_orange_300 } from '@patternfly/react-tokens/dist/js/chart_color_orange_300';\nimport { chart_color_purple_300 } from '@patternfly/react-tokens/dist/js/chart_color_purple_300';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    colorScale: [\n        chart_color_blue_300.value,\n        chart_color_gold_300.value,\n        chart_color_green_300.value,\n        chart_color_purple_300.value,\n        chart_color_orange_300.value,\n        chart_color_cyan_300.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n    yAxisAlt: {\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'routes/views/components/charts/common/chart.scss';\nimport { Chart, ChartAxis, ChartBar, ChartLegend, ChartLegendTooltip, ChartStack, ChartThemeColor, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { default as ChartTheme } from 'routes/views/components/charts/chartTheme';\nimport { getMaxValue } from 'routes/views/components/charts/common/chartDatum';\nimport { getChartNames, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isDataHidden, isSeriesHidden, } from 'routes/views/components/charts/common/chartUtils';\nimport { formatCurrencyAbbreviation } from 'utils/format';\nimport { noop } from 'utils/noop';\nimport { chartStyles } from './costExplorerChart.styles';\nclass CostExplorerChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            tickValues: [],\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { top1stData, top2ndData, top3rdData, top4thData, top5thData, top6thData } = this.props;\n            const series = [];\n            if (top1stData && top1stData.length) {\n                const name = this.getTruncatedString(top1stData[0].name);\n                series.push({\n                    childName: 'top1stData',\n                    data: this.initDatumChildName(top1stData, 'top1stData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[0],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[0],\n                        },\n                    },\n                });\n            }\n            if (top2ndData && top2ndData.length) {\n                const name = this.getTruncatedString(top2ndData[0].name);\n                series.push({\n                    childName: 'top2ndData',\n                    data: this.initDatumChildName(top2ndData, 'top2ndData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[1],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[1],\n                        },\n                    },\n                });\n            }\n            if (top3rdData && top3rdData.length) {\n                const name = this.getTruncatedString(top3rdData[0].name);\n                series.push({\n                    childName: 'top3rdData',\n                    data: this.initDatumChildName(top3rdData, 'top3rdData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[2],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[2],\n                        },\n                    },\n                });\n            }\n            if (top4thData && top4thData.length) {\n                const name = this.getTruncatedString(top4thData[0].name);\n                series.push({\n                    childName: 'top4thData',\n                    data: this.initDatumChildName(top4thData, 'top4thData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[3],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[3],\n                        },\n                    },\n                });\n            }\n            if (top5thData && top5thData.length) {\n                const name = this.getTruncatedString(top5thData[0].name);\n                series.push({\n                    childName: 'top5thData',\n                    data: this.initDatumChildName(top5thData, 'top5thData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[4],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[4],\n                        },\n                    },\n                });\n            }\n            if (top6thData && top6thData.length) {\n                const name = this.getTruncatedString(top6thData[0].name);\n                series.push({\n                    childName: 'top6thData',\n                    data: this.initDatumChildName(top6thData, 'top6thData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[5],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[5],\n                        },\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            const units = this.getUnits(series);\n            this.setState({ cursorVoronoiContainer, series, tickValues: this.getTickValues(), units });\n        };\n        // Adds a child name to help identify hidden data series\n        this.initDatumChildName = (data, childName) => {\n            data.map(datum => (datum.childName = childName));\n            return data;\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (width > 675 && width < 1250) {\n                    adjustedContainerHeight += 25;\n                }\n                else if (width > 400 && width < 650) {\n                    adjustedContainerHeight += 50;\n                }\n                else if (width <= 400) {\n                    adjustedContainerHeight += 150;\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        // If bar width exceeds max and domainPadding is true, extra width is returned to help center bars horizontally\n        this.getBarWidth = (domainPadding = false) => {\n            const { hiddenSeries, series, width } = this.state;\n            const maxWidth = 20;\n            let maxValue = -1;\n            if (series) {\n                series.forEach((s, index) => {\n                    if (!isSeriesHidden(hiddenSeries, index) && s.data && s.data.length !== 0) {\n                        if (s.data.length > maxValue) {\n                            maxValue = s.data.length;\n                        }\n                    }\n                });\n            }\n            // Divide available width into equal sections\n            const sections = maxValue * 2 + 1;\n            const sectionWidth = maxValue > 0 ? width / sections : 0;\n            if (domainPadding) {\n                // Add any extra bar width for domain padding\n                const extraWidth = sectionWidth > maxWidth ? (sectionWidth - maxWidth) * maxValue : 0;\n                return (sectionWidth + extraWidth / 2) * 2;\n            }\n            return sectionWidth > maxWidth ? maxWidth : sectionWidth;\n        };\n        this.getChart = (series, index, barWidth) => {\n            const { hiddenSeries } = this.state;\n            const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n            return (React.createElement(ChartBar, { barWidth: barWidth, data: data, key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatter, formatOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatter, formatOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        // Returns domain only if max y values are zero\n        this.getDomain = (series, hiddenSeries) => {\n            let maxValue = -1;\n            let domain;\n            if (series) {\n                series.forEach((s, index) => {\n                    if (!isSeriesHidden(hiddenSeries, index) && s.data && s.data.length !== 0) {\n                        const max = getMaxValue(s.data);\n                        maxValue = Math.max(maxValue, max);\n                    }\n                });\n            }\n            if (maxValue <= 0) {\n                domain = { y: [0, 100] };\n            }\n            return domain;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const { name = '' } = this.props;\n            const { hiddenSeries, series } = this.state;\n            const result = getInteractiveLegendEvents({\n                chartNames: getChartNames(series),\n                isDataHidden: data => isDataHidden(series, hiddenSeries, data),\n                isHidden: index => isSeriesHidden(hiddenSeries, index),\n                legendName: `${name}-legend`,\n                onLegendClick: props => this.handleLegendClick(props.index),\n            });\n            return result;\n        };\n        this.getLegend = () => {\n            const { name = '' } = this.props;\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, name: `${name}-legend`, responsive: false }));\n        };\n        // This ensures we show every 3rd tick value, including the first and last value\n        //\n        // Note: We're not using Victory's tickCount because it won't always include the last tick value.\n        this.getTickValues = () => {\n            const { top1stData, top2ndData, top3rdData, top4thData, top5thData, top6thData } = this.props;\n            // Find the datum with the greatest number of values\n            const allDatums = [top1stData, top2ndData, top3rdData, top4thData, top5thData, top6thData];\n            let datum;\n            allDatums.map(val => {\n                if (!datum || datum.length < val.length) {\n                    datum = val;\n                }\n            });\n            const values = [];\n            datum.map(val => {\n                values.push(val.x);\n            });\n            // Prune tick values\n            const tickValues = [];\n            const modVal = values.length < 6 ? 2 : 3;\n            for (let i = 0; i < values.length; i++) {\n                if (i % modVal === 0 && i + 2 < values.length) {\n                    tickValues.push(values[i]);\n                }\n                else if (values.length < 3 && i + 1 < values.length) {\n                    tickValues.push(values[i]);\n                }\n            }\n            tickValues.push(values[values.length - 1]);\n            return tickValues;\n        };\n        this.getTruncatedString = (str) => {\n            const maxChars = 20;\n            return str.length > maxChars ? str.substring(0, maxChars - 1) + '...' : str;\n        };\n        this.getTickValue = (t) => {\n            const { units } = this.state;\n            return formatCurrencyAbbreviation(t, units);\n        };\n        this.getUnits = (series) => {\n            if (series) {\n                for (const s of series) {\n                    for (const datum of s.data) {\n                        if (datum.units) {\n                            return datum.units;\n                        }\n                    }\n                }\n            }\n            return 'USD';\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.top1stData !== this.props.top1stData ||\n            prevProps.top2ndData !== this.props.top2ndData ||\n            prevProps.top3rdData !== this.props.top3rdData ||\n            prevProps.top4thData !== this.props.top4thData ||\n            prevProps.top5thData !== this.props.top5thData ||\n            prevProps.top6thData !== this.props.top6thData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    render() {\n        const { height, intl, name, padding = {\n            bottom: 50,\n            left: 40,\n            right: 8,\n            top: 8,\n        }, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, tickValues, width } = this.state;\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => intl.formatMessage(messages.chartDayOfTheMonth, { day: datum.x }) })),\n            })\n            : undefined;\n        const barWidth = this.getBarWidth();\n        // Note: For tooltip values to match properly, chart groups must be rendered in the order given as legend data\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n            React.createElement(\"div\", { style: { height, width } },\n                React.createElement(Chart, { ariaTitle: intl.formatMessage(messages.explorerChartAriaTitle), containerComponent: container, domain: this.getDomain(series, hiddenSeries), domainPadding: { x: this.getBarWidth(true) }, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", name: name, padding: padding, theme: ChartTheme, themeColor: ChartThemeColor.multiOrdered, width: width },\n                    series && series.length > 0 && (React.createElement(ChartStack, null, series.map((s, index) => this.getChart(s, index, barWidth)))),\n                    React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: tickValues, fixLabelOverlap: true }),\n                    React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis, tickFormat: this.getTickValue })))));\n    }\n}\nconst CostExplorerChart = injectIntl(CostExplorerChartBase);\nexport default CostExplorerChart;\n","import global_spacer_2xl from '@patternfly/react-tokens/dist/js/global_spacer_2xl';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    chartHeight: 300,\n    chartContainerHeight: 300,\n};\nexport const styles = {\n    chartContainer: {\n        marginLeft: global_spacer_2xl.value,\n    },\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n    costChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    titleContainer: {\n        marginLeft: global_spacer_lg.value,\n    },\n    trendChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    usageChart: {\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import { OrgPathsType } from 'api/orgs/org';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport { hasCloudProvider } from 'routes/views/utils/providers';\nimport { hasAwsAccess, hasAzureAccess, hasGcpAccess, hasIbmAccess, isAwsAvailable, isAzureAvailable, isGcpAvailable, isIbmAvailable, isOciAvailable, isOcpAvailable, isRhelAvailable, } from 'utils/userAccess';\n// eslint-disable-next-line no-shadow\nexport var PerspectiveType;\n(function (PerspectiveType) {\n    PerspectiveType[\"aws\"] = \"aws\";\n    PerspectiveType[\"awsOcp\"] = \"aws_ocp\";\n    PerspectiveType[\"azure\"] = \"azure\";\n    PerspectiveType[\"azureOcp\"] = \"azure_ocp\";\n    PerspectiveType[\"gcp\"] = \"gcp\";\n    PerspectiveType[\"gcpOcp\"] = \"gcp_ocp\";\n    PerspectiveType[\"ibm\"] = \"ibm\";\n    PerspectiveType[\"ibmOcp\"] = \"ibm_ocp\";\n    PerspectiveType[\"oci\"] = \"oci\";\n    PerspectiveType[\"ocp\"] = \"ocp\";\n    PerspectiveType[\"ocpCloud\"] = \"ocp_cloud\";\n    PerspectiveType[\"rhel\"] = \"rhel\";\n})(PerspectiveType || (PerspectiveType = {}));\nexport const baseQuery = {\n    filter: {\n        limit: 10,\n        offset: 0,\n    },\n    exclude: {},\n    filter_by: {},\n    order_by: {\n        cost: 'desc',\n    },\n};\nexport const dateRangeOptions = [\n    { label: messages.explorerDateRange, value: 'current_month_to_date' },\n    { label: messages.explorerDateRange, value: 'previous_month' },\n    { label: messages.explorerDateRange, value: 'previous_month_to_date' },\n    { label: messages.explorerDateRange, value: 'last_thirty_days' },\n    { label: messages.explorerDateRange, value: 'last_sixty_days' },\n    { label: messages.explorerDateRange, value: 'last_ninety_days' },\n    { label: messages.explorerDateRange, value: 'custom' },\n];\nexport const groupByAwsOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByAzureOptions = [\n    { label: 'subscription_guid', value: 'subscription_guid' },\n    { label: 'service_name', value: 'service_name' },\n    { label: 'resource_location', value: 'resource_location' },\n];\nexport const groupByGcpOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'gcp_project', value: 'gcp_project' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByGcpOcpOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'gcp_project', value: 'gcp_project' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByIbmOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'project', value: 'project' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByOciOptions = [\n    { label: 'payer_tenant_id', value: 'payer_tenant_id' },\n    { label: 'product_service', value: 'product_service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByOcpOptions = [\n    { label: 'cluster', value: 'cluster' },\n    { label: 'node', value: 'node' },\n    { label: 'project', value: 'project' },\n];\nexport const groupByRhelOptions = [\n    { label: 'cluster', value: 'cluster' },\n    { label: 'node', value: 'node' },\n    { label: 'project', value: 'project' },\n];\nexport const getPerspectiveDefault = ({ awsProviders, azureProviders, ociProviders, gcpProviders, ibmProviders, ocpProviders, queryFromRoute, rhelProviders, userAccess, }) => {\n    const perspective = queryFromRoute.perspective;\n    // Upon page refresh, perspective param takes precedence\n    switch (perspective) {\n        case PerspectiveType.aws:\n        case PerspectiveType.awsOcp:\n        case PerspectiveType.azure:\n        case PerspectiveType.azureOcp:\n        case PerspectiveType.gcp:\n        case PerspectiveType.gcpOcp:\n        case PerspectiveType.ibm:\n        case PerspectiveType.ibmOcp:\n        case PerspectiveType.oci:\n        case PerspectiveType.ocpCloud:\n        case PerspectiveType.rhel:\n            return perspective;\n    }\n    if (isOcpAvailable(userAccess, ocpProviders)) {\n        return PerspectiveType.ocp;\n    }\n    if (isRhelAvailable(userAccess, rhelProviders)) {\n        return PerspectiveType.rhel;\n    }\n    const hasAwsCloud = hasAwsAccess(userAccess) && hasCloudProvider(awsProviders, ocpProviders);\n    const hasAzureCloud = hasAzureAccess(userAccess) && hasCloudProvider(azureProviders, ocpProviders);\n    const hasGcpCloud = hasGcpAccess(userAccess) && hasCloudProvider(gcpProviders, ocpProviders);\n    const hasIbmCloud = hasIbmAccess(userAccess) && hasCloudProvider(ibmProviders, ocpProviders);\n    if (hasAwsCloud || hasAzureCloud || hasGcpCloud || hasIbmCloud) {\n        return PerspectiveType.ocpCloud;\n    }\n    if (isAwsAvailable(userAccess, awsProviders)) {\n        return PerspectiveType.aws;\n    }\n    if (isAzureAvailable(userAccess, azureProviders)) {\n        return PerspectiveType.azure;\n    }\n    if (isGcpAvailable(userAccess, gcpProviders)) {\n        return PerspectiveType.gcp;\n    }\n    if (isIbmAvailable(userAccess, ibmProviders)) {\n        return PerspectiveType.ibm;\n    }\n    if (isOciAvailable(userAccess, ociProviders)) {\n        return PerspectiveType.oci;\n    }\n    return undefined;\n};\nexport const getGroupByDefault = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n        case PerspectiveType.awsOcp:\n        case PerspectiveType.gcp:\n        case PerspectiveType.gcpOcp:\n        case PerspectiveType.ibm:\n            result = 'account';\n            break;\n        case PerspectiveType.azure:\n        case PerspectiveType.azureOcp:\n            result = 'subscription_guid';\n            break;\n        case PerspectiveType.oci:\n            result = 'payer_tenant_id';\n            break;\n        case PerspectiveType.ocp:\n        case PerspectiveType.ocpCloud:\n        case PerspectiveType.rhel:\n            result = 'project';\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getGroupByOptions = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n        case PerspectiveType.awsOcp:\n            result = groupByAwsOptions;\n            break;\n        case PerspectiveType.azure:\n        case PerspectiveType.azureOcp:\n            result = groupByAzureOptions;\n            break;\n        case PerspectiveType.gcp:\n            result = groupByGcpOptions;\n            break;\n        case PerspectiveType.gcpOcp:\n            result = groupByGcpOcpOptions;\n            break;\n        case PerspectiveType.ibm:\n            result = groupByIbmOptions;\n            break;\n        case PerspectiveType.oci:\n            result = groupByOciOptions;\n            break;\n        case PerspectiveType.ocp:\n        case PerspectiveType.ocpCloud:\n            result = groupByOcpOptions;\n            break;\n        case PerspectiveType.rhel:\n            result = groupByRhelOptions;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getOrgReportPathsType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n            result = OrgPathsType.aws;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getReportType = (perspective) => {\n    let result;\n    switch (perspective) {\n        default:\n            result = ReportType.cost;\n            break;\n    }\n    return result;\n};\nexport const getReportPathsType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n            result = ReportPathsType.aws;\n            break;\n        case PerspectiveType.awsOcp:\n            result = ReportPathsType.awsOcp;\n            break;\n        case PerspectiveType.azure:\n            result = ReportPathsType.azure;\n            break;\n        case PerspectiveType.azureOcp:\n            result = ReportPathsType.azureOcp;\n            break;\n        case PerspectiveType.gcp:\n            result = ReportPathsType.gcp;\n            break;\n        case PerspectiveType.gcpOcp:\n            result = ReportPathsType.gcpOcp;\n            break;\n        case PerspectiveType.ibm:\n            result = ReportPathsType.ibm;\n            break;\n        case PerspectiveType.oci:\n            result = ReportPathsType.oci;\n            break;\n        case PerspectiveType.ocp:\n            result = ReportPathsType.ocp;\n            break;\n        case PerspectiveType.ocpCloud:\n            result = ReportPathsType.ocpCloud;\n            break;\n        case PerspectiveType.rhel:\n            result = ReportPathsType.rhel;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getResourcePathsType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n            return ResourcePathsType.aws;\n            break;\n        case PerspectiveType.awsOcp:\n            return ResourcePathsType.awsOcp;\n            break;\n        case PerspectiveType.azure:\n            return ResourcePathsType.azure;\n            break;\n        case PerspectiveType.azureOcp:\n            return ResourcePathsType.azureOcp;\n            break;\n        case PerspectiveType.gcp:\n            return ResourcePathsType.gcp;\n        case PerspectiveType.gcpOcp:\n            return ResourcePathsType.gcpOcp;\n        case PerspectiveType.ibm:\n            return ResourcePathsType.ibm;\n            break;\n        case PerspectiveType.oci:\n            return ResourcePathsType.oci;\n            break;\n        case PerspectiveType.ocp:\n            return ResourcePathsType.ocp;\n            break;\n        case PerspectiveType.ocpCloud:\n            return ResourcePathsType.ocpCloud;\n            break;\n        case PerspectiveType.rhel:\n            return ResourcePathsType.rhel;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getTagReportPathsType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n            return TagPathsType.aws;\n            break;\n        case PerspectiveType.awsOcp:\n            return TagPathsType.awsOcp;\n            break;\n        case PerspectiveType.azure:\n            return TagPathsType.azure;\n            break;\n        case PerspectiveType.azureOcp:\n            return TagPathsType.azureOcp;\n            break;\n        case PerspectiveType.gcp:\n            return TagPathsType.gcp;\n            break;\n        case PerspectiveType.gcpOcp:\n            return TagPathsType.gcpOcp;\n            break;\n        case PerspectiveType.ibm:\n            return TagPathsType.ibm;\n            break;\n        case PerspectiveType.oci:\n            return TagPathsType.oci;\n            break;\n        case PerspectiveType.ocp:\n            return TagPathsType.ocp;\n            break;\n        case PerspectiveType.ocpCloud:\n            return TagPathsType.ocpCloud;\n            break;\n        case PerspectiveType.rhel:\n            return TagPathsType.rhel;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\n","import { Skeleton, Title } from '@patternfly/react-core';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { format } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ComputedReportItemType, ComputedReportItemValueType, isFloat, isInt, } from 'routes/views/components/charts/common/chartDatum';\nimport { CostExplorerChart } from 'routes/views/components/charts/costExplorerChart';\nimport { getDateRangeFromQuery } from 'routes/views/utils/dateRange';\nimport { getGroupByOrgValue, getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedExplorerReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { formatUnits } from 'utils/format';\nimport { withRouter } from 'utils/router';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { chartStyles, styles } from './explorerChart.styles';\nimport { getGroupByDefault, getReportPathsType, getReportType } from './explorerUtils';\nclass ExplorerChartBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.createReportDatum = (value, computedItem, reportItem = 'cost', reportItemValue = 'total') => {\n            const { intl } = this.props;\n            const computedItemDate = new Date(computedItem.date + 'T00:00:00');\n            const xVal = intl.formatDate(computedItemDate, {\n                day: 'numeric',\n                month: 'short',\n            });\n            const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n            return Object.assign(Object.assign({ x: xVal, y: value === null ? null : yVal }, (value === null && { _y: 0 })), { date: computedItem.date, key: computedItem.id, name: computedItem.label ? computedItem.label : computedItem.id, units: computedItem[reportItem]\n                    ? computedItem[reportItem][reportItemValue]\n                        ? computedItem[reportItem][reportItemValue].units // cost, infrastructure, supplementary\n                        : computedItem[reportItem].units // capacity, limit, request, usage\n                    : undefined });\n        };\n        this.fetchReport = () => {\n            const { fetchReport, perspective, reportQueryString } = this.props;\n            if (perspective) {\n                const reportPathsType = getReportPathsType(perspective);\n                const reportType = getReportType(perspective);\n                fetchReport(reportPathsType, reportType, reportQueryString);\n            }\n        };\n        this.getChartDatums = (computedItems) => {\n            const { costDistribution, groupBy } = this.props;\n            const reportItem = ComputedReportItemType.cost;\n            const reportItemValue = groupBy === 'project' ? costDistribution : ComputedReportItemValueType.total;\n            const chartDatums = [];\n            computedItems.map(computedItem => {\n                const datums = [];\n                if (computedItem instanceof Map) {\n                    const items = Array.from(computedItem.values());\n                    items.map((i) => {\n                        const val = i[reportItem][reportItemValue] ? i[reportItem][reportItemValue].value : i[reportItem].value;\n                        datums.push(this.createReportDatum(val, i, reportItem, reportItemValue));\n                    });\n                }\n                chartDatums.push(datums);\n            });\n            return this.padChartDatums(chartDatums);\n        };\n        this.getComputedItems = () => {\n            const { report } = this.props;\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: this.getGroupBy(),\n                isDateMap: true,\n            });\n        };\n        this.getGroupBy = () => {\n            const { query } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByOrg = getGroupByOrgValue(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            return groupByTagKey ? groupByTagKey : groupByOrg ? 'org_entities' : groupById;\n        };\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, width: skeletonWidth.xs })));\n        };\n        // This pads chart datums with null datum objects, representing missing data at the beginning and end of the\n        // data series. The remaining data is left as is to allow for extrapolation. This allows us to display a \"no data\"\n        // message in the tooltip, which helps distinguish between zero values and when there is no data available.\n        this.padChartDatums = (items) => {\n            const { end_date, start_date } = this.props;\n            const result = [];\n            items.map(datums => {\n                const key = datums[0].key;\n                const label = datums[0].name;\n                const newItems = [];\n                for (let padDate = new Date(start_date + 'T00:00:00'); padDate <= new Date(end_date + 'T00:00:00'); padDate.setDate(padDate.getDate() + 1)) {\n                    const id = format(padDate, 'yyyy-MM-dd');\n                    const chartDatum = datums.find(val => val.date === id);\n                    if (chartDatum) {\n                        newItems.push(chartDatum);\n                    }\n                    else {\n                        const date = format(padDate, 'yyyy-MM-dd');\n                        newItems.push(this.createReportDatum(null, { date, id: key, label }, 'cost', null));\n                    }\n                }\n                result.push(newItems);\n            });\n            return result;\n        };\n    }\n    componentDidMount() {\n        this.fetchReport();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, reportError, reportQueryString } = this.props;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        if (newQuery || noReport) {\n            this.fetchReport();\n        }\n    }\n    render() {\n        const { perspective, reportFetchStatus, intl } = this.props;\n        const datums = this.getChartDatums(this.getComputedItems());\n        // Todo: get title from perspective menu\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { style: styles.titleContainer },\n                React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, intl.formatMessage(messages.explorerChartTitle, { value: perspective }))),\n            React.createElement(\"div\", { style: styles.chartContainer },\n                React.createElement(\"div\", { style: styles.costChart }, reportFetchStatus === FetchStatus.inProgress ? (this.getSkeleton()) : (React.createElement(CostExplorerChart, { adjustContainerHeight: true, containerHeight: chartStyles.chartContainerHeight, formatOptions: {}, formatter: formatUnits, height: chartStyles.chartHeight, top1stData: datums.length > 0 ? datums[0] : [], top2ndData: datums.length > 1 ? datums[1] : [], top3rdData: datums.length > 2 ? datums[2] : [], top4thData: datums.length > 3 ? datums[3] : [], top5thData: datums.length > 4 ? datums[4] : [], top6thData: datums.length > 5 ? datums[5] : [] }))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { costType, currency, perspective, router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const { end_date, start_date } = getDateRangeFromQuery(queryFromRoute);\n    // Ensure group_by key is not undefined\n    let group_by = queryFromRoute.group_by;\n    if (!group_by && perspective) {\n        group_by = { [getGroupByDefault(perspective)]: '*' };\n    }\n    const query = Object.assign(Object.assign({}, queryFromRoute), { group_by });\n    const reportQuery = {\n        cost_type: costType,\n        currency,\n        end_date,\n        exclude: query.exclude,\n        filter: { limit: 5 },\n        filter_by: query.filter_by,\n        group_by,\n        start_date,\n    };\n    const reportPathsType = getReportPathsType(perspective);\n    const reportType = getReportType(perspective);\n    const reportQueryString = getQuery(reportQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    return {\n        end_date,\n        perspective,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n        start_date,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst ExplorerChartConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerChartBase);\nconst ExplorerChart = injectIntl(withRouter(ExplorerChartConnect));\nexport { ExplorerChart };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    toContainer: {\n        marginLeft: global_spacer_md.var,\n        marginRight: global_spacer_md.var,\n    },\n};\n","import { DatePicker } from '@patternfly/react-core';\nimport { parseQuery } from 'api/queries/query';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { DateRangeType, getDateRangeFromQuery, getDateRangeTypeDefault } from 'routes/views/utils/dateRange';\nimport { formatDate, getLast90DaysDate, getToday } from 'utils/dates';\nimport { withRouter } from 'utils/router';\nimport { styles } from './explorerDatePicker.styles';\nconst MAX_DAYS = 65; // Max date range allowed for cost API\nclass ExplorerDatePickerBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n        // TBD\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.startDateRef = React.createRef();\n        this.endDateRef = React.createRef();\n        this.getStartDatePicker = () => {\n            const { intl } = this.props;\n            const { startDate } = this.state;\n            const { start_date, end_date } = getLast90DaysDate(false);\n            const rangeValidator = (date) => {\n                if (date < start_date) {\n                    return intl.formatMessage(messages.datePickerBeforeError);\n                }\n                else if (date > end_date) {\n                    return intl.formatMessage(messages.datePickerAfterError);\n                }\n                return '';\n            };\n            return (React.createElement(DatePicker, { \"aria-label\": intl.formatMessage(messages.datePickerStartDateAriaLabel), onChange: this.handleStartDateOnChange, placeholder: intl.formatMessage(messages.start), ref: this.startDateRef, validators: [rangeValidator], value: formatDate(startDate) }));\n        };\n        this.getEndDatePicker = () => {\n            const { intl } = this.props;\n            const { endDate, startDate } = this.state;\n            const end_date = this.getMaxEndDate();\n            const rangeValidator = (date) => {\n                if (date < startDate) {\n                    return intl.formatMessage(messages.datePickerBeforeError);\n                }\n                else if (date > end_date) {\n                    return intl.formatMessage(messages.datePickerAfterError);\n                }\n                return '';\n            };\n            return (React.createElement(DatePicker, { \"aria-label\": intl.formatMessage(messages.datePickerEndDateAriaLabel), isDisabled: !startDate, onChange: this.handleEndDateOnChange, placeholder: intl.formatMessage(messages.end), rangeStart: startDate, ref: this.endDateRef, validators: [rangeValidator], value: formatDate(endDate) }));\n        };\n        this.getMaxEndDate = () => {\n            const { startDate } = this.state;\n            const today = getToday();\n            const end_date = startDate ? new Date(startDate.getTime()) : today;\n            end_date.setDate(end_date.getDate() + MAX_DAYS - 1); // 65 days including start date\n            if (end_date > today) {\n                end_date.setTime(today.getTime());\n            }\n            return end_date;\n        };\n        this.isEndDateValid = (startDate, endDate) => {\n            const minDate = startDate;\n            const maxDate = startDate ? new Date(startDate.getTime()) : undefined;\n            if (maxDate) {\n                maxDate.setDate(maxDate.getDate() + MAX_DAYS - 1); // 65 days including start date\n            }\n            return endDate >= minDate && endDate <= maxDate;\n        };\n        this.isStartDateValid = startDate => {\n            const maxDate = getToday();\n            const { start_date: minDate } = getLast90DaysDate(false);\n            return startDate >= minDate && startDate <= maxDate;\n        };\n        this.handleEndDateOnChange = (evt, value, date) => {\n            const { onSelected } = this.props;\n            const { startDate } = this.state;\n            if (date && this.isEndDateValid(startDate, date)) {\n                this.setState({ endDate: date }, () => {\n                    if (onSelected) {\n                        onSelected(startDate, date);\n                    }\n                });\n            }\n        };\n        this.handleStartDateOnChange = (evt, value, date) => {\n            if (date && this.isStartDateValid(date)) {\n                this.setState({ startDate: date }, () => {\n                    if (this.endDateRef && this.endDateRef.current) {\n                        this.endDateRef.current.setCalendarOpen(true);\n                    }\n                });\n            }\n        };\n    }\n    componentDidMount() {\n        const { router } = this.props;\n        const queryFromRoute = parseQuery(router.location.search);\n        const dateRangeType = getDateRangeTypeDefault(queryFromRoute);\n        const { end_date, start_date } = getDateRangeFromQuery(queryFromRoute);\n        if (this.startDateRef && this.startDateRef.current) {\n            this.startDateRef.current.setCalendarOpen(dateRangeType !== DateRangeType.custom);\n        }\n        if (dateRangeType === DateRangeType.custom) {\n            this.setState({\n                startDate: new Date(start_date + 'T00:00:00'),\n                endDate: new Date(end_date + 'T00:00:00'),\n            });\n        }\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { endDate, startDate } = this.state;\n        if (prevState.startDate !== startDate) {\n            // Don't adjust unless an end date has already been selected\n            if (endDate && !this.isEndDateValid(startDate, endDate)) {\n                this.setState({ endDate: undefined });\n            }\n        }\n    }\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(React.Fragment, null,\n            this.getStartDatePicker(),\n            React.createElement(\"span\", { style: styles.toContainer }, intl.formatMessage(messages.to)),\n            this.getEndDatePicker()));\n    }\n}\nconst ExplorerDatePicker = injectIntl(withRouter(ExplorerDatePickerBase));\nexport { ExplorerDatePicker };\n","import { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nclass ExplorerDateRangeBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isSelectOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getSelect = () => {\n            const { dateRangeType, isDisabled } = this.props;\n            const { isSelectOpen } = this.state;\n            const selectOptions = this.getSelectOptions();\n            const selection = selectOptions.find((option) => option.value === dateRangeType);\n            return (React.createElement(Select, { id: \"dateRangeSelect\", isDisabled: isDisabled, isOpen: isSelectOpen, onSelect: this.handleSelect, onToggle: this.handleToggle, selections: selection, variant: SelectVariant.single }, selectOptions.map(option => (React.createElement(SelectOption, { key: option.value, value: option })))));\n        };\n        this.getSelectOptions = () => {\n            const { intl, options } = this.props;\n            const selectOptions = [];\n            options.map(option => {\n                selectOptions.push({\n                    toString: () => intl.formatMessage(option.label, { value: option.value }),\n                    value: option.value,\n                });\n            });\n            return selectOptions;\n        };\n        this.handleSelect = (event, selection) => {\n            const { onSelected } = this.props;\n            if (onSelected) {\n                onSelected(selection.value);\n            }\n            this.setState({\n                isSelectOpen: false,\n            });\n        };\n        this.handleToggle = isSelectOpen => {\n            this.setState({ isSelectOpen });\n        };\n    }\n    render() {\n        return this.getSelect();\n    }\n}\nconst ExplorerDateRange = injectIntl(ExplorerDateRangeBase);\nexport { ExplorerDateRange };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    toolbarContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        marginLeft: global_spacer_md.var,\n        paddingTop: global_spacer_sm.var,\n    },\n};\n","import { OrgType } from 'api/orgs/org';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { DateRangeType, getDateRangeFromQuery, getDateRangeTypeDefault } from 'routes/views/utils/dateRange';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps } from 'store/common';\nimport { orgActions, orgSelectors } from 'store/orgs';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { formatStartEndDate } from 'utils/dates';\nimport { isEqual } from 'utils/equal';\nimport { orgUnitIdKey, tagKey } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { ExplorerDatePicker } from './explorerDatePicker';\nimport { ExplorerDateRange } from './explorerDateRange';\nimport { styles } from './explorerFilter.styles';\nimport { dateRangeOptions, getGroupByOptions, getOrgReportPathsType, getTagReportPathsType } from './explorerUtils';\nconst orgReportType = OrgType.org;\nconst tagReportType = TagType.tag;\nexport class ExplorerFilterBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            showDatePicker: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { orgReport, perspective, intl, tagReport } = this.props;\n            const options = [];\n            const groupByOptions = getGroupByOptions(perspective);\n            groupByOptions.map(option => {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: option.label }),\n                    key: option.value,\n                });\n            });\n            if (orgReport && orgReport.data && orgReport.data.length > 0) {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: 'org_unit_id' }),\n                    key: orgUnitIdKey,\n                });\n            }\n            if (tagReport && tagReport.data && tagReport.data.length > 0) {\n                options.push({ name: intl.formatMessage(messages.filterByValues, { value: 'tag' }), key: tagKey });\n            }\n            return options;\n        };\n        this.getDateRangeComponent = () => {\n            const { isDisabled } = this.props;\n            const { currentDateRangeType } = this.state;\n            return (React.createElement(ExplorerDateRange, { dateRangeType: currentDateRangeType, isDisabled: isDisabled, onSelected: this.handleDateRangeSelected, options: dateRangeOptions }));\n        };\n        this.getDatePickerComponent = () => {\n            const { showDatePicker } = this.state;\n            return showDatePicker ? React.createElement(ExplorerDatePicker, { onSelected: this.handleDatePickerSelected }) : undefined;\n        };\n        this.handleDatePickerSelected = (startDate, endDate) => {\n            const { query, router } = this.props;\n            const { start_date, end_date } = formatStartEndDate(startDate, endDate);\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { dateRangeType: DateRangeType.custom, start_date,\n                end_date });\n            router.navigate(getRouteForQuery(newQuery, router.location), { replace: true });\n        };\n        this.handleDateRangeSelected = (value) => {\n            const { query, router } = this.props;\n            const showDatePicker = value === DateRangeType.custom;\n            this.setState({ currentDateRangeType: value, showDatePicker }, () => {\n                if (!showDatePicker) {\n                    const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { dateRangeType: value, start_date: undefined, end_date: undefined });\n                    router.navigate(getRouteForQuery(newQuery, router.location), { replace: true });\n                }\n            });\n        };\n    }\n    componentDidMount() {\n        const { dateRangeType, fetchOrg, fetchTag, orgQueryString, orgReportPathsType, tagQueryString, tagReportPathsType, } = this.props;\n        if (orgReportPathsType) {\n            fetchOrg(orgReportPathsType, orgReportType, orgQueryString);\n        }\n        if (tagReportPathsType) {\n            fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n        }\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n            currentDateRangeType: dateRangeType,\n            showDatePicker: dateRangeType === DateRangeType.custom,\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchOrg, fetchTag, orgQueryString, orgReport, orgReportPathsType, perspective, query, tagQueryString, tagReport, tagReportPathsType, } = this.props;\n        if (query && !isEqual(query, prevProps.query)) {\n            if (orgReportPathsType) {\n                fetchOrg(orgReportPathsType, orgReportType, orgQueryString);\n            }\n            if (tagReportPathsType) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n        }\n        if (!isEqual(orgReport, prevProps.orgReport) || !isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            });\n        }\n        // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n        if (prevProps.perspective !== perspective) {\n            this.handleDateRangeSelected(dateRangeOptions[0].value);\n        }\n    }\n    render() {\n        const { groupBy, isDisabled, onFilterAdded, onFilterRemoved, orgReport, query, resourcePathsType, tagReport, tagReportPathsType, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, dateRange: this.getDateRangeComponent(), datePicker: this.getDatePickerComponent(), groupBy: groupBy, isDisabled: isDisabled, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, orgReport: orgReport, query: query, resourcePathsType: resourcePathsType, style: styles.toolbarContainer, showFilter: true, tagReport: tagReport, tagReportPathsType: tagReportPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { perspective, router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const dateRangeType = getDateRangeTypeDefault(queryFromRoute);\n    const { end_date, start_date } = getDateRangeFromQuery(queryFromRoute);\n    // Omitting key_only to share a single request -- the toolbar needs key values\n    const orgQueryString = getQuery({\n        end_date,\n        start_date,\n        limit: 1000,\n    });\n    let orgReport;\n    let orgReportFetchStatus;\n    const orgReportPathsType = getOrgReportPathsType(perspective);\n    if (orgReportPathsType) {\n        orgReport = orgSelectors.selectOrg(state, orgReportPathsType, orgReportType, orgQueryString);\n        orgReportFetchStatus = orgSelectors.selectOrgFetchStatus(state, orgReportPathsType, orgReportType, orgQueryString);\n    }\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        end_date,\n        start_date,\n        key_only: true,\n        limit: 1000,\n    });\n    let tagReport;\n    let tagReportFetchStatus;\n    const tagReportPathsType = getTagReportPathsType(perspective);\n    if (tagReportPathsType) {\n        tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, tagQueryString);\n        tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, tagQueryString);\n    }\n    return {\n        dateRangeType,\n        orgQueryString,\n        orgReport,\n        orgReportFetchStatus,\n        orgReportPathsType,\n        tagQueryString,\n        tagReport,\n        tagReportFetchStatus,\n        tagReportPathsType,\n    };\n});\nconst mapDispatchToProps = {\n    fetchOrg: orgActions.fetchOrg,\n    fetchTag: tagActions.fetchTag,\n};\nconst ExplorerFilterConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerFilterBase);\nconst ExplorerFilter = injectIntl(withRouter(ExplorerFilterConnect));\nexport { ExplorerFilter };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_Color_200 from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    cost: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    costDistribution: {\n        display: 'flex',\n        marginLeft: global_spacer_lg.var,\n    },\n    costLabel: {},\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    costLabelDate: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_200.var,\n    },\n    costType: {\n        display: 'flex',\n        marginLeft: global_spacer_md.var,\n    },\n    groupBy: {\n        paddingLeft: global_spacer_lg.var,\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        paddingBottom: global_spacer_sm.var,\n        paddingLeft: global_spacer_lg.var,\n        paddingRight: global_spacer_lg.var,\n        paddingTop: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    perspectiveContainer: {\n        display: 'flex',\n        marginTop: global_spacer_md.var,\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { parseQuery } from 'api/queries/query';\nimport { getUserAccessQuery } from 'api/queries/userAccessQuery';\nimport { UserAccessType } from 'api/userAccess';\nimport { ExportsLink } from 'components/drawers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Currency } from 'routes/components/currency';\nimport { CostDistribution } from 'routes/views/components/costDistribution';\nimport { CostType } from 'routes/views/components/costType';\nimport { GroupBy } from 'routes/views/components/groupBy';\nimport { Perspective } from 'routes/views/components/perspective';\nimport { filterProviders, hasCloudProvider } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { userAccessQuery, userAccessSelectors } from 'store/userAccess';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedExplorerReportItems';\nimport { withRouter } from 'utils/router';\nimport { hasAwsAccess, hasAzureAccess, hasGcpAccess, hasIbmAccess, isAwsAvailable, isAzureAvailable, isGcpAvailable, isIbmAvailable, isOciAvailable, isOcpAvailable, isRhelAvailable, } from 'utils/userAccess';\nimport { ExplorerFilter } from './explorerFilter';\nimport { styles } from './explorerHeader.styles';\nimport { baseQuery, getGroupByDefault, getGroupByOptions, getOrgReportPathsType, getResourcePathsType, getTagReportPathsType, PerspectiveType, } from './explorerUtils';\nclass ExplorerHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n        // TBD...\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getPerspective = (isDisabled) => {\n            const { isIbmFeatureEnabled } = this.props;\n            const { currentPerspective } = this.state;\n            const hasAws = this.isAwsAvailable();\n            const hasAzure = this.isAzureAvailable();\n            const hasOci = this.isOciAvailable();\n            const hasGcp = this.isGcpAvailable();\n            const hasIbm = this.isIbmAvailable();\n            const hasOcp = this.isOcpAvailable();\n            const hasRhel = this.isRhelAvailable();\n            // Note: No need to test \"OCP on cloud\" here, since that requires at least one of the providers below\n            if (!(hasAws || hasAzure || hasOci || hasGcp || hasIbm || hasOcp || hasRhel)) {\n                return null;\n            }\n            return (React.createElement(Perspective, { currentItem: currentPerspective, hasAws: hasAws, hasAwsOcp: this.isAwsOcpAvailable(), hasAzure: hasAzure, hasAzureOcp: this.isAzureOcpAvailable(), hasGcp: hasGcp, hasGcpOcp: this.isGcpOcpAvailable(), hasIbm: hasIbm, hasIbmOcp: this.isIbmOcpAvailable(), hasOci: hasOci, hasOcp: hasOcp, hasOcpCloud: this.isOcpCloudAvailable(), hasRhel: hasRhel, isDisabled: isDisabled, isIbmFeatureEnabled: isIbmFeatureEnabled, onSelected: this.handlePerspectiveSelected }));\n        };\n        this.handlePerspectiveSelected = (value) => {\n            const { onPerspectiveClicked, query, router } = this.props;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { exclude: undefined, filter_by: undefined, group_by: { [getGroupByDefault(value)]: '*' }, order_by: undefined, perspective: value });\n            this.setState({ currentPerspective: value }, () => {\n                if (onPerspectiveClicked) {\n                    onPerspectiveClicked(value);\n                }\n                router.navigate(getRouteForQuery(newQuery, router.location), { replace: true });\n            });\n        };\n        this.isAwsAvailable = () => {\n            const { awsProviders, userAccess } = this.props;\n            return isAwsAvailable(userAccess, awsProviders);\n        };\n        this.isAwsOcpAvailable = () => {\n            const { awsProviders, ocpProviders, userAccess } = this.props;\n            return hasAwsAccess(userAccess) && hasCloudProvider(awsProviders, ocpProviders);\n        };\n        this.isAzureAvailable = () => {\n            const { azureProviders, userAccess } = this.props;\n            return isAzureAvailable(userAccess, azureProviders);\n        };\n        this.isAzureOcpAvailable = () => {\n            const { azureProviders, ocpProviders, userAccess } = this.props;\n            return hasAzureAccess(userAccess) && hasCloudProvider(azureProviders, ocpProviders);\n        };\n        this.isGcpAvailable = () => {\n            const { gcpProviders, userAccess } = this.props;\n            return isGcpAvailable(userAccess, gcpProviders);\n        };\n        this.isGcpOcpAvailable = () => {\n            const { gcpProviders, ocpProviders, userAccess } = this.props;\n            return hasGcpAccess(userAccess) && hasCloudProvider(gcpProviders, ocpProviders);\n        };\n        this.isIbmAvailable = () => {\n            const { ibmProviders, userAccess } = this.props;\n            return isIbmAvailable(userAccess, ibmProviders);\n        };\n        this.isIbmOcpAvailable = () => {\n            const { ibmProviders, ocpProviders, userAccess } = this.props;\n            return hasIbmAccess(userAccess) && hasCloudProvider(ibmProviders, ocpProviders);\n        };\n        this.isOciAvailable = () => {\n            const { ociProviders, userAccess } = this.props;\n            return isOciAvailable(userAccess, ociProviders);\n        };\n        this.isOcpAvailable = () => {\n            const { ocpProviders, userAccess } = this.props;\n            return isOcpAvailable(userAccess, ocpProviders);\n        };\n        this.isOcpCloudAvailable = () => {\n            const hasAwsOcp = this.isAwsOcpAvailable();\n            const hasAzureOcp = this.isAzureOcpAvailable();\n            const hasGcpOcp = this.isGcpOcpAvailable();\n            const hasIbmOcp = this.isIbmOcpAvailable();\n            return hasAwsOcp || hasAzureOcp || hasGcpOcp || hasIbmOcp;\n        };\n        this.isRhelAvailable = () => {\n            const { isFinsightsFeatureEnabled, rhelProviders, userAccess } = this.props;\n            return isFinsightsFeatureEnabled && isRhelAvailable(userAccess, rhelProviders);\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            currentPerspective: this.props.perspective,\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { perspective } = this.props;\n        if (prevProps.perspective !== perspective) {\n            this.setState({\n                currentPerspective: this.props.perspective,\n            });\n        }\n    }\n    render() {\n        const { costDistribution, costType, currency, groupBy, intl, isExportsFeatureEnabled, onCostDistributionSelected, onCostTypeSelected, onCurrencySelected, onFilterAdded, onFilterRemoved, onGroupBySelected, perspective, providersFetchStatus, query, } = this.props;\n        // Note: No need to test OCP on cloud here, since that requires at least one provider\n        const noAwsProviders = !this.isAwsAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noAzureProviders = !this.isAzureAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noGcpProviders = !this.isGcpAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noIbmProviders = !this.isIbmAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noOcpProviders = !this.isOcpAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noRhelProviders = !this.isRhelAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noProviders = noAwsProviders && noAzureProviders && noGcpProviders && noIbmProviders && noOcpProviders && noRhelProviders;\n        const groupByOptions = getGroupByOptions(perspective);\n        const orgReportPathsType = getOrgReportPathsType(perspective);\n        const resourcePathsType = getResourcePathsType(perspective);\n        const tagReportPathsType = getTagReportPathsType(perspective);\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.explorerTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.perspectiveContainer },\n                this.getPerspective(noProviders),\n                React.createElement(\"div\", { style: styles.groupBy },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: noProviders, onSelected: onGroupBySelected, options: groupByOptions, orgReportPathsType: orgReportPathsType, perspective: perspective, showOrgs: orgReportPathsType, showTags: tagReportPathsType, tagReportPathsType: tagReportPathsType })),\n                perspective === PerspectiveType.ocp && groupBy === 'project' && (React.createElement(\"div\", { style: styles.costDistribution },\n                    React.createElement(CostDistribution, { costDistribution: costDistribution, onSelect: onCostDistributionSelected }))),\n                (perspective === PerspectiveType.aws || perspective === PerspectiveType.awsOcp) && (React.createElement(\"div\", { style: styles.costType },\n                    React.createElement(CostType, { costType: costType, onSelect: onCostTypeSelected })))),\n            React.createElement(ExplorerFilter, { groupBy: groupBy, isDisabled: noProviders, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, perspective: perspective, query: query, resourcePathsType: resourcePathsType })));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { perspective, router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    const userAccessQueryString = getUserAccessQuery(userAccessQuery);\n    const userAccess = userAccessSelectors.selectUserAccess(state, UserAccessType.all, userAccessQueryString);\n    const userAccessError = userAccessSelectors.selectUserAccessError(state, UserAccessType.all, userAccessQueryString);\n    const userAccessFetchStatus = userAccessSelectors.selectUserAccessFetchStatus(state, UserAccessType.all, userAccessQueryString);\n    // Ensure group_by key is not undefined\n    let group_by = queryFromRoute.group_by;\n    if (!group_by && perspective) {\n        group_by = { [getGroupByDefault(perspective)]: '*' };\n    }\n    const query = Object.assign(Object.assign(Object.assign({}, baseQuery), queryFromRoute), { group_by });\n    return {\n        awsProviders: filterProviders(providers, ProviderType.aws),\n        azureProviders: filterProviders(providers, ProviderType.azure),\n        gcpProviders: filterProviders(providers, ProviderType.gcp),\n        ibmProviders: filterProviders(providers, ProviderType.ibm),\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        isFinsightsFeatureEnabled: featureFlagsSelectors.selectIsFinsightsFeatureEnabled(state),\n        isIbmFeatureEnabled: featureFlagsSelectors.selectIsIbmFeatureEnabled(state),\n        ociProviders: filterProviders(providers, ProviderType.oci),\n        ocpProviders: filterProviders(providers, ProviderType.ocp),\n        providers,\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n        query,\n        rhelProviders: filterProviders(providers, ProviderType.rhel),\n        userAccess,\n        userAccessError,\n        userAccessFetchStatus,\n        userAccessQueryString,\n    };\n});\nconst ExplorerHeader = injectIntl(withRouter(connect(mapStateToProps, {})(ExplorerHeaderBase)));\nexport { ExplorerHeader };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n};\n","import './explorerTable.scss';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { InnerScrollContainer, SortByDirection, TableComposable, Tbody, Td, Th, Thead, Tr, } from '@patternfly/react-table';\nimport { parseQuery } from 'api/queries/query';\nimport { format } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { ComputedReportItemType, ComputedReportItemValueType } from 'routes/views/components/charts/common/chartDatum';\nimport { getDateRangeFromQuery } from 'routes/views/utils/dateRange';\nimport { createMapStateToProps } from 'store/common';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { formatCurrency } from 'utils/format';\nimport { noPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { styles } from './explorerTable.styles';\nimport { PerspectiveType } from './explorerUtils';\nclass ExplorerTableBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { costDistribution, end_date, groupBy, groupByOrg, groupByTagKey, isAllSelected, perspective, report, selectedItems, start_date, intl, } = this.props;\n            if (!report) {\n                return;\n            }\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                isDateMap: true,\n                idKey: groupByTagKey ? groupByTagKey : groupByOrg ? 'org_entities' : groupBy,\n            });\n            // Add first two column headings (i.e., select and name)\n            const columns = groupByTagKey || groupByOrg\n                ? [\n                    {\n                        name: '',\n                    },\n                    {\n                        name: groupByOrg\n                            ? intl.formatMessage(messages.names, { count: 2 })\n                            : intl.formatMessage(messages.tagNames),\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign({ date: undefined, name: intl.formatMessage(messages.groupByValueNames, { groupBy }), orderBy: groupBy === 'account' && perspective === PerspectiveType.aws ? 'account_alias' : groupBy }, (computedItems.length && { isSortable: true })),\n                ];\n            // Fill in missing columns\n            for (let currentDate = new Date(start_date + 'T00:00:00'); currentDate <= new Date(end_date + 'T00:00:00'); currentDate.setDate(currentDate.getDate() + 1)) {\n                const mapId = format(currentDate, 'yyyy-MM-dd');\n                let isSortable = false;\n                computedItems.map(rowItem => {\n                    const item = rowItem.get(mapId);\n                    if (!item) {\n                        rowItem.set(mapId, {\n                            date: mapId,\n                        });\n                    }\n                    else {\n                        isSortable = true; // At least one row must be available\n                    }\n                });\n                // Add column headings\n                const mapIdDate = new Date(mapId + 'T00:00:00');\n                columns.push({\n                    name: intl.formatDate(mapIdDate, {\n                        day: 'numeric',\n                        month: 'short',\n                    }),\n                    date: mapId,\n                    isSortable,\n                    orderBy: 'cost',\n                });\n            }\n            const reportItem = ComputedReportItemType.cost;\n            const reportItemValue = groupBy === 'project' ? costDistribution : ComputedReportItemValueType.total;\n            // Sort by date and fill in missing cells\n            computedItems.map(rowItem => {\n                const cells = [];\n                let desc; // First column description (i.e., show ID if different than label)\n                let name; // For first column resource name\n                let selectItem; // Save for row selection\n                const items = Array.from(rowItem.values()).sort((a, b) => {\n                    if (new Date(a.date) > new Date(b.date)) {\n                        return 1;\n                    }\n                    else if (new Date(a.date) < new Date(b.date)) {\n                        return -1;\n                    }\n                    else {\n                        return 0;\n                    }\n                });\n                items.map(item => {\n                    if (!name) {\n                        name = item && item.label && item.label !== null ? item.label : null;\n                    }\n                    if (!desc) {\n                        desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                    }\n                    if (item.id && !selectItem) {\n                        selectItem = item;\n                    }\n                    // Add row cells\n                    cells.push({\n                        value: item[reportItem] && item[reportItem][reportItemValue]\n                            ? formatCurrency(item[reportItem][reportItemValue].value, item[reportItem][reportItemValue].units)\n                            : intl.formatMessage(messages.chartNoData),\n                    });\n                });\n                // Add first row cells\n                cells.unshift({}, // Empty cell for row selection\n                {\n                    value: (React.createElement(\"div\", null,\n                        name,\n                        desc)),\n                });\n                rows.push({\n                    cells,\n                    selectionDisabled: selectItem.label === `${noPrefix}${groupBy}` || selectItem.label === `${noPrefix}${groupByTagKey}`,\n                    item: selectItem,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === selectItem.id) !== undefined),\n                });\n            });\n            this.setState({\n                columns,\n                rows,\n            });\n        };\n        this.getEmptyState = () => {\n            const { query, intl } = this.props;\n            for (const val of Object.values(query.filter_by)) {\n                if (val !== '*') {\n                    return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                }\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { query } = this.props;\n            const { columns } = this.state;\n            let direction;\n            const column = columns[index];\n            const hasOrderBy = query && query.order_by && query.order_by;\n            if (column.orderBy && !column.date) {\n                direction = hasOrderBy && query.order_by[column.orderBy];\n            }\n            else if (hasOrderBy && query.order_by.date === column.date) {\n                direction = hasOrderBy && query.order_by[column.orderBy];\n            }\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected } = this.props;\n            const { rows } = this.state;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { onSort } = this.props;\n            const { columns } = this.state;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending, columns[index].date);\n            }\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { costDistribution, report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport ||\n            prevProps.selectedItems !== selectedItems ||\n            prevProps.costDistribution !== costDistribution) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { intl, isLoading } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(InnerScrollContainer, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.explorerTableAriaLabel), className: \"explorerTableOverride\", gridBreakPoint: \"\" },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => index === 0 ? (React.createElement(Th, { isStickyColumn: true, key: `col-${index}-${col.value}`, stickyMinWidth: \"53px\" })) : index === 1 ? (React.createElement(Th, { hasRightBorder: true, isStickyColumn: true, key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, stickyMinWidth: \"100px\", stickyLeftOffset: \"53px\" }, col.name)) : (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, isStickyColumn: true, key: `cell-${cellIndex}-${rowIndex}`, select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    }, stickyMinWidth: \"53px\" })) : cellIndex === 1 ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, hasRightBorder: true, isStickyColumn: true, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", stickyMinWidth: \"100px\", stickyLeftOffset: \"53px\" }, item.value)) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\" }, item.value))))))))),\n            Boolean(rows.length === 0) && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const { end_date, start_date } = getDateRangeFromQuery(queryFromRoute);\n    return {\n        end_date,\n        start_date,\n    };\n});\nconst mapDispatchToProps = {};\nconst ExplorerTableConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerTableBase);\nconst ExplorerTable = injectIntl(withRouter(ExplorerTableConnect));\nexport { ExplorerTable };\n","import React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { createMapStateToProps } from 'store/common';\nimport { getTagReportPathsType } from './explorerUtils';\nexport class ExplorerToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { isAllSelected, isBulkSelectDisabled, isDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onExportClicked, pagination, perspective, selectedItems, } = this.props;\n        const tagReportPathsType = getTagReportPathsType(perspective);\n        return (React.createElement(DataToolbar, { isAllSelected: isAllSelected, isBulkSelectDisabled: isBulkSelectDisabled, isDisabled: isDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onExportClicked: onExportClicked, pagination: pagination, selectedItems: selectedItems, showBulkSelect: true, showExcludes: true, showExport: true, tagReportPathsType: tagReportPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst ExplorerToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerToolbarBase);\nconst ExplorerToolbar = injectIntl(ExplorerToolbarConnect);\nexport { ExplorerToolbar };\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { getUserAccessQuery } from 'api/queries/userAccessQuery';\nimport { UserAccessType } from 'api/userAccess';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoData } from 'routes/state/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { ExportModal } from 'routes/views/components/export';\nimport { getDateRangeFromQuery, getDateRangeTypeDefault } from 'routes/views/utils/dateRange';\nimport { getGroupByOrgValue, getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { handleCostDistributionSelected, handleCostTypeSelected, handleCurrencySelected, handleFilterAdded, handleFilterRemoved, handlePerPageSelect, handleSetPage, handleSort, } from 'routes/views/utils/handles';\nimport { filterProviders, hasData } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { userAccessQuery, userAccessSelectors } from 'store/userAccess';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedExplorerReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getCostDistribution, getCostType, getCurrency } from 'utils/localStorage';\nimport { noPrefix, orgUnitIdKey, tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { isAwsAvailable, isAzureAvailable, isGcpAvailable, isIbmAvailable, isOciAvailable, isOcpAvailable, isRhelAvailable, } from 'utils/userAccess';\nimport { styles } from './explorer.styles';\nimport { ExplorerChart } from './explorerChart';\nimport { ExplorerHeader } from './explorerHeader';\nimport { ExplorerTable } from './explorerTable';\nimport { ExplorerToolbar } from './explorerToolbar';\nimport { baseQuery, getGroupByDefault, getPerspectiveDefault, getReportPathsType, getReportType, PerspectiveType, } from './explorerUtils';\nclass Explorer extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            isAllSelected: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByOrg = getGroupByOrgValue(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey ? groupByTagKey : groupByOrg ? 'org_entities' : groupById,\n                isDateMap: false, // Don't use isDateMap here, so we can use a flattened data structure with row selection\n            });\n            return computedItems;\n        };\n        this.getExportModal = (computedItems) => {\n            const { perspective, query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `${noPrefix}${groupById}` || item.label === `${noPrefix}${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: getReportPathsType(perspective), reportQueryString: reportQueryString, resolution: \"daily\", showTimeScope: false }));\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, report, router } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = Math.trunc(offset / limit + 1);\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handlePerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.explorerTitle),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { costDistribution, perspective, query, report, reportFetchStatus, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const groupByOrg = getGroupByOrgValue(query);\n            return (React.createElement(ExplorerTable, { costDistribution: costDistribution, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, groupByTagKey: groupByTagKey, groupByOrg: groupByOrg, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending, date) => handleSort(query, router, sortType, isSortAscending, date), perspective: perspective, query: query, report: report, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { perspective, report } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(ExplorerToolbar, { isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isDisabled || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onExportClicked: this.handleExportModalOpen, pagination: this.getPagination(isDisabled), perspective: perspective, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleDatePickerSelected = (startDate, endDate) => {\n            this.setState({ startDate, endDate });\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            let groupByKey = groupBy;\n            let value = '*';\n            // Check for org units\n            const index = groupBy && groupBy.indexOf(orgUnitIdKey);\n            if (index !== -1) {\n                groupByKey = orgUnitIdKey.substring(0, orgUnitIdKey.length);\n                value = groupBy.slice(orgUnitIdKey.length);\n            }\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: value,\n                }, order_by: undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handlePerspectiveClick = () => {\n            this.setState({ isAllSelected: false, selectedItems: [] });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.isAwsAvailable = () => {\n            const { awsProviders, userAccess } = this.props;\n            return isAwsAvailable(userAccess, awsProviders);\n        };\n        this.isAzureAvailable = () => {\n            const { azureProviders, userAccess } = this.props;\n            return isAzureAvailable(userAccess, azureProviders);\n        };\n        this.isOciAvailable = () => {\n            const { ociProviders, userAccess } = this.props;\n            return isOciAvailable(userAccess, ociProviders);\n        };\n        this.isGcpAvailable = () => {\n            const { gcpProviders, userAccess } = this.props;\n            return isGcpAvailable(userAccess, gcpProviders);\n        };\n        this.isIbmAvailable = () => {\n            const { ibmProviders, userAccess } = this.props;\n            return isIbmAvailable(userAccess, ibmProviders);\n        };\n        this.isOcpAvailable = () => {\n            const { ocpProviders, userAccess } = this.props;\n            return isOcpAvailable(userAccess, ocpProviders);\n        };\n        this.isRhelAvailable = () => {\n            const { isFinsightsFeatureEnabled, rhelProviders, userAccess } = this.props;\n            return isFinsightsFeatureEnabled && isRhelAvailable(userAccess, rhelProviders);\n        };\n        this.updateReport = () => {\n            const { fetchReport, perspective, reportQueryString } = this.props;\n            fetchReport(getReportPathsType(perspective), getReportType(perspective), reportQueryString);\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handlePerspectiveClick = this.handlePerspectiveClick.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { perspective, report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newPerspective = prevProps.perspective !== perspective;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newPerspective || newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { awsProviders, azureProviders, ociProviders, costDistribution, costType, currency, gcpProviders, ibmProviders, intl, ocpProviders, providersFetchStatus, perspective, userAccessFetchStatus, query, report, reportError, reportFetchStatus, router, } = this.props;\n        // Note: No need to test OCP on cloud here, since that requires at least one provider\n        const noAwsProviders = !this.isAwsAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noAzureProviders = !this.isAzureAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noGcpProviders = !this.isGcpAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noIbmProviders = !this.isIbmAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noOcpProviders = !this.isOcpAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noOciProviders = !this.isOciAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noRhelProviders = !this.isRhelAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noProviders = noAwsProviders &&\n            noAzureProviders &&\n            noGcpProviders &&\n            noIbmProviders &&\n            noOciProviders &&\n            noOcpProviders &&\n            noRhelProviders;\n        const isLoading = providersFetchStatus === FetchStatus.inProgress || userAccessFetchStatus === FetchStatus.inProgress;\n        const computedItems = this.getComputedItems();\n        const isDisabled = computedItems.length === 0;\n        const itemsTotal = report && report.meta ? report.meta.count : 0;\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const groupByTagKey = getGroupByTagKey(query);\n        const title = intl.formatMessage(messages.explorerTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (isLoading) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (noProviders) {\n            return React.createElement(NoProviders, { title: title });\n        }\n        else if (!(hasData(awsProviders) ||\n            hasData(azureProviders) ||\n            hasData(ociProviders) ||\n            hasData(gcpProviders) ||\n            hasData(ibmProviders) ||\n            hasData(ocpProviders))) {\n            return React.createElement(NoData, { title: title });\n        }\n        return (React.createElement(\"div\", { style: styles.explorer },\n            React.createElement(ExplorerHeader, { costDistribution: costDistribution, costType: costType, currency: currency, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, onCostDistributionSelected: value => handleCostDistributionSelected(query, router, value), onCostTypeSelected: value => handleCostTypeSelected(query, router, value), onCurrencySelected: value => handleCurrencySelected(query, router, value), onDatePickerSelected: this.handleDatePickerSelected, onFilterAdded: filter => handleFilterAdded(query, router, filter), onFilterRemoved: filter => handleFilterRemoved(query, router, filter), onGroupBySelected: this.handleGroupBySelected, onPerspectiveClicked: this.handlePerspectiveClick, perspective: perspective }),\n            itemsTotal > 0 && (React.createElement(\"div\", { style: styles.chartContent },\n                React.createElement(\"div\", { style: styles.chartContainer },\n                    React.createElement(ExplorerChart, { costDistribution: costDistribution, costType: costType, currency: currency, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, perspective: perspective })))),\n            React.createElement(\"div\", { style: styles.tableContent },\n                React.createElement(\"div\", { style: styles.toolbarContainer }, this.getToolbar(computedItems)),\n                this.getExportModal(computedItems),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    // Get roviders first\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    const awsProviders = filterProviders(providers, ProviderType.aws);\n    const azureProviders = filterProviders(providers, ProviderType.azure);\n    const ociProviders = filterProviders(providers, ProviderType.oci);\n    const gcpProviders = filterProviders(providers, ProviderType.gcp);\n    const ibmProviders = filterProviders(providers, ProviderType.ibm);\n    const ocpProviders = filterProviders(providers, ProviderType.ocp);\n    const rhelProviders = filterProviders(providers, ProviderType.rhel);\n    const userAccessQueryString = getUserAccessQuery(userAccessQuery);\n    const userAccess = userAccessSelectors.selectUserAccess(state, UserAccessType.all, userAccessQueryString);\n    const userAccessError = userAccessSelectors.selectUserAccessError(state, UserAccessType.all, userAccessQueryString);\n    const userAccessFetchStatus = userAccessSelectors.selectUserAccessFetchStatus(state, UserAccessType.all, userAccessQueryString);\n    // Cost Report\n    const dateRangeType = getDateRangeTypeDefault(queryFromRoute);\n    const { end_date, start_date } = getDateRangeFromQuery(queryFromRoute);\n    const perspective = getPerspectiveDefault({\n        awsProviders,\n        azureProviders,\n        ociProviders,\n        gcpProviders,\n        ibmProviders,\n        ocpProviders,\n        queryFromRoute,\n        rhelProviders,\n        userAccess,\n    });\n    // Ensure group_by key is not undefined\n    let group_by = queryFromRoute.group_by;\n    if (!group_by && perspective) {\n        group_by = { [getGroupByDefault(perspective)]: '*' };\n    }\n    const costDistribution = perspective === PerspectiveType.ocp ? getCostDistribution() : undefined;\n    const costType = perspective === PerspectiveType.aws || perspective === PerspectiveType.awsOcp ? getCostType() : undefined;\n    const currency = getCurrency();\n    const query = Object.assign(Object.assign(Object.assign({}, baseQuery), queryFromRoute), { group_by });\n    const reportQuery = {\n        cost_type: costType,\n        currency,\n        end_date,\n        exclude: query.exclude,\n        filter: query.filter,\n        filter_by: query.filter_by,\n        group_by,\n        order_by: query.order_by,\n        start_date,\n    };\n    const reportPathsType = getReportPathsType(perspective);\n    const reportType = getReportType(perspective);\n    const reportQueryString = getQuery(reportQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    return {\n        awsProviders,\n        azureProviders,\n        costDistribution,\n        costType,\n        currency,\n        dateRangeType,\n        gcpProviders,\n        ibmProviders,\n        isFinsightsFeatureEnabled: featureFlagsSelectors.selectIsFinsightsFeatureEnabled(state),\n        ociProviders,\n        ocpProviders,\n        perspective,\n        providers,\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n        rhelProviders,\n        userAccess,\n        userAccessError,\n        userAccessFetchStatus,\n        userAccessQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(Explorer)));\n","export const skeletonWidth = {\n    xs: '16%',\n    sm: '33%',\n    md: '66%',\n    lg: '100%',\n};\n","import { UserAccessType } from 'api/userAccess';\nconst hasAccess = (userAccess, userAccessType) => {\n    let result = false;\n    if (userAccess && Array.isArray(userAccess.data)) {\n        // Used with multiple types (e.g., type=)\n        const data = userAccess.data.find(d => d.type === userAccessType);\n        result = data && data.access;\n    }\n    else {\n        // Used with type=any, type=GCP, etc.\n        result = userAccess && userAccess.data === true;\n    }\n    return result;\n};\nconst hasProviders = (providers) => {\n    let result = false;\n    if (providers && providers.meta) {\n        // providers API returns empty data array for no sources\n        result = providers.meta.count > 0;\n    }\n    return result;\n};\n// Returns true if user has access to AWS\nexport const hasAwsAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.aws);\n};\n// Returns true if user has access to AWS and at least one source provider\nexport const isAwsAvailable = (userAccess, awsProviders) => {\n    return hasAwsAccess(userAccess) && hasProviders(awsProviders);\n};\n// Returns true if user has access to Azure\nexport const hasAzureAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.azure);\n};\n// Returns true if user has access to Azure and at least one source provider\nexport const isAzureAvailable = (userAccess, azureProviders) => {\n    return hasAzureAccess(userAccess) && hasProviders(azureProviders);\n};\n// Returns true if user has access to Oci\nexport const hasOciAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.oci);\n};\n// Returns true if user has access to Oci and at least one source provider\nexport const isOciAvailable = (userAccess, ociProviders) => {\n    return hasOciAccess(userAccess) && hasProviders(ociProviders);\n};\n// Returns true if user has access to cost models\nexport const hasCostModelAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.cost_model);\n};\n// Returns true if user has access to GCP\nexport const hasGcpAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.gcp);\n};\n// Returns true if user has access to GCP and at least one source provider\nexport const isGcpAvailable = (userAccess, gcpProviders) => {\n    return hasAccess(userAccess, UserAccessType.gcp) && hasProviders(gcpProviders);\n};\n// Returns true if user has access to IBM\nexport const hasIbmAccess = (userAccess) => {\n    return hasGcpAccess(userAccess);\n};\n// Returns true if user has access to IBM and at least one source provider\nexport const isIbmAvailable = (userAccess, ibmProviders) => {\n    return hasIbmAccess(userAccess) && hasProviders(ibmProviders);\n};\n// Returns true if user has access to OCP\nexport const hasOcpAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.ocp);\n};\n// Returns true if user has access to OCP and at least one source provider\nexport const isOcpAvailable = (userAccess, ocpProviders) => {\n    return hasOcpAccess(userAccess) && hasProviders(ocpProviders);\n};\n// Returns true if user has access to RHEL\nexport const hasRhelAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.rhel);\n};\n// Returns true if user has access to RHEL and at least one source provider\nexport const isRhelAvailable = (userAccess, rhelProviders) => {\n    return hasRhelAccess(userAccess) && hasProviders(rhelProviders);\n};\n// Returns true if user has access to ROS\nexport const hasRosAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.ros);\n};\n// Returns true if user has access to RHEL and at least one source provider\nexport const isRosAvailable = (userAccess, rosProviders) => {\n    return hasRosAccess(userAccess) && hasProviders(rosProviders);\n};\n"],"names":["exports","getUserAccessQuery","query","stringify","encode","indices","LAYOUT_PROPS","padding","area","Object","assign","axis","bar","boxplot","candlestick","chart","errorbar","group","legend","line","pie","scatter","stack","tooltip","voronoi","ChartTheme","infrastructureAwsOptions","label","messages","value","infrastructureAwsOcpOptions","infrastructureAzureOptions","infrastructureOciOptions","infrastructureAzureOcpOptions","infrastructureGcpOptions","infrastructureGcpOcpOptions","infrastructureIbmOptions","infrastructureIbmOcpOptions","infrastructureOcpCloudOptions","ocpOptions","rhelOptions","getInfrastructureOptions","hasAws","hasAwsOcp","hasAzure","hasAzureOcp","hasGcp","hasGcpOcp","hasIbm","hasIbmOcp","hasOci","isIbmFeatureEnabled","options","push","currentItem","hasOcp","hasOcpCloud","hasRhel","isDisabled","isInfrastructureTab","isRhelTab","onSelected","undefined","getIdKeyForGroupBy","groupBy","account","cluster","gcp_project","node","org_unit_id","payer_tenant_id","product_service","project","region","resource_location","service","service_name","subscription_guid","styles","chartContainer","backgroundColor","global_BackgroundColor_light_100","marginLeft","global_spacer_lg","marginRight","paddingRight","paddingBottom","paddingTop","chartContent","explorer","minHeight","paginationContainer","pagination","global_spacer_md","tableContainer","tableContent","toolbarContainer","_arrayLikeToArray","arr","len","length","i","arr2","Array","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","configurable","writable","fallbackProps","width","height","stackData","props","childComponents","filterNullChildData","map","dataset","datum","_x","_y","datasets","fillInMissingData","xMap","reduce","prev","Date","getTime","xKeys","k","Number","xArr","indexOffset","isDate","x","index","y","fillData","d","xOffset","yOffset","y0","_group","firstDatasetBaseline","previousPoints","slice","concat","previousDatum","memo","some","point","getY0","_y0","_y1","_x1","addLayoutData","getCalculatedProps","children","role","style","theme","categories","c","data","domain","range","baseScale","scale","horizontal","_props","colorScale","getColorScale","child","type","colorScaleOptions","getChildren","calculatedProps","childProps","standalone","getChildProps","parentName","name","labels","getLabels","domainPadding","labelComponent","polar","VictoryStackBase","initialProps","VictoryStack","_Hooks$useAnimationSt","setAnimationState","getAnimationProps","getProps","modifiedProps","eventKey","containerComponent","groupComponent","externalEventMutations","modifiedChildren","_child","withoutSharedEvents","_React$useState2","isArray","_arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","err","_iterableToArrayLimit","o","minLen","n","prototype","toString","constructor","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","setProps","useMemoizedProps","newChildren","animate","reverse","containerProps","parent","userProps","container","defaultContainerProps","events","previousProps","propTypes","bins","defaultProps","componentConfig","expectedComponents","displayName","ChartStack","_a","ariaDesc","ariaTitle","ChartContainer","hasPatterns","patternScale","themeColor","themeVariant","rest","desc","title","className","g","defaultPatternScale","themeColorScale","chartStyles","chart_color_blue_300","chart_color_gold_300","chart_color_green_300","chart_color_purple_300","chart_color_orange_300","chart_color_cyan_300","yAxis","axisLabel","grid","stroke","ticks","yAxisAlt","tickLabels","fontSize","xAxis","CostExplorerChartBase","super","this","containerRef","observer","noop","state","hiddenSeries","Set","tickValues","initDatum","top1stData","top2ndData","top3rdData","top4thData","top5thData","top6thData","series","getTruncatedString","childName","initDatumChildName","legendItem","symbol","fill","cursorVoronoiContainer","getCursorVoronoiContainer","units","getUnits","setState","getTickValues","getAdjustedContainerHeight","adjustContainerHeight","containerHeight","adjustedContainerHeight","getBarWidth","maxValue","s","sectionWidth","getChart","barWidth","has","ChartBar","formatter","formatOptions","CursorVoronoiContainer","cursorDimension","mouseFollowTooltips","voronoiDimension","voronoiPadding","bottom","left","right","top","getDomain","max","Math","getEvents","chartNames","isDataHidden","isHidden","legendName","onLegendClick","handleLegendClick","getLegend","ChartLegend","gutter","responsive","val","values","modVal","str","substring","maxChars","getTickValue","t","handleResize","clientWidth","current","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","render","intl","disable","ChartLegendTooltip","legendData","formatMessage","day","ref","Chart","legendAllowWrap","legendComponent","legendPosition","ChartAxis","C","fixLabelOverlap","dependentAxis","tickFormat","injectIntl","global_spacer_2xl","chartSkeleton","marginBottom","marginTop","global_spacer_3xl","costChart","global_spacer_sm","legendSkeleton","titleContainer","trendChart","usageChart","PerspectiveType","baseQuery","limit","offset","exclude","filter_by","order_by","cost","dateRangeOptions","groupByAwsOptions","groupByAzureOptions","groupByGcpOptions","groupByGcpOcpOptions","groupByIbmOptions","groupByOciOptions","groupByOcpOptions","groupByRhelOptions","getGroupByDefault","perspective","result","aws","awsOcp","gcp","gcpOcp","ibm","azure","azureOcp","oci","ocp","ocpCloud","rhel","getGroupByOptions","getOrgReportPathsType","getReportType","getReportPathsType","getTagReportPathsType","ExplorerChartBase","stateProps","dispatchProps","defaultState","createReportDatum","computedItem","reportItem","reportItemValue","computedItemDate","date","xVal","formatDate","month","yVal","parseFloat","toFixed","id","fetchReport","reportQueryString","getChartDatums","computedItems","costDistribution","chartDatums","datums","Map","padChartDatums","getComputedItems","report","idKey","getGroupBy","isDateMap","groupById","group_by","groupByOrg","getSkeleton","Skeleton","skeleton","items","end_date","start_date","newItems","padDate","setDate","getDate","format","chartDatum","find","reportError","reportFetchStatus","Title","headingLevel","size","mapStateToProps","costType","currency","router","queryFromRoute","location","search","reportQuery","cost_type","reportPathsType","reportType","mapDispatchToProps","ExplorerChartConnect","connect","ExplorerChart","toContainer","ExplorerDatePickerBase","startDateRef","endDateRef","getStartDatePicker","startDate","DatePicker","onChange","handleStartDateOnChange","placeholder","validators","getEndDatePicker","endDate","getMaxEndDate","handleEndDateOnChange","rangeStart","today","setTime","isEndDateValid","minDate","maxDate","isStartDateValid","evt","setCalendarOpen","dateRangeType","prevState","ExplorerDatePicker","ExplorerDateRangeBase","isSelectOpen","getSelect","selectOptions","getSelectOptions","selection","option","Select","isOpen","onSelect","handleSelect","onToggle","handleToggle","selections","variant","SelectVariant","SelectOption","event","ExplorerDateRange","orgReportType","tagReportType","ExplorerFilterBase","showDatePicker","getCategoryOptions","orgReport","tagReport","getDateRangeComponent","currentDateRangeType","handleDateRangeSelected","getDatePickerComponent","handleDatePickerSelected","newQuery","JSON","parse","navigate","replace","fetchOrg","fetchTag","orgQueryString","orgReportPathsType","tagQueryString","tagReportPathsType","categoryOptions","onFilterAdded","onFilterRemoved","resourcePathsType","dateRange","datePicker","showFilter","orgReportFetchStatus","key_only","tagReportFetchStatus","ExplorerFilterConnect","ExplorerFilter","display","alignItems","costLabel","costValue","costLabelUnit","global_FontSize_sm","color","global_Color_100","costLabelDate","global_Color_200","paddingLeft","header","headerContent","justifyContent","headerContentRight","perspectiveContainer","ExplorerHeaderBase","getPerspective","currentPerspective","isAwsAvailable","isAzureAvailable","isOciAvailable","isGcpAvailable","isIbmAvailable","isOcpAvailable","isRhelAvailable","isAwsOcpAvailable","isAzureOcpAvailable","isGcpOcpAvailable","isIbmOcpAvailable","isOcpCloudAvailable","handlePerspectiveSelected","onPerspectiveClicked","awsProviders","userAccess","ocpProviders","azureProviders","gcpProviders","ibmProviders","ociProviders","isFinsightsFeatureEnabled","rhelProviders","isExportsFeatureEnabled","onCostDistributionSelected","onCostTypeSelected","onCurrencySelected","onGroupBySelected","providersFetchStatus","noAwsProviders","noAzureProviders","noGcpProviders","noIbmProviders","noOcpProviders","noRhelProviders","noProviders","groupByOptions","getResourcePathsType","TitleSizes","showOrgs","showTags","providersQueryString","providers","providersError","userAccessQueryString","userAccessError","userAccessFetchStatus","featureFlags","ExplorerHeader","emptyState","infoArrow","position","infoArrowDesc","global_spacer_xs","infoDescription","global_disabled_color_100","global_FontSize_xs","ExplorerTableBase","columns","rows","groupByTagKey","isAllSelected","selectedItems","count","orderBy","isSortable","currentDate","mapId","rowItem","get","set","mapIdDate","cells","selectItem","sort","a","b","item","unshift","selectionDisabled","selected","getEmptyState","showMargin","EmptyState","EmptyStateIcon","icon","EmptyStateBody","getSortBy","direction","column","hasOrderBy","getSortParams","sortBy","onSort","handleOnSort","columnIndex","handleOnSelect","isSelected","rowId","newRows","row","SortByDirection","bind","currentReport","isLoading","InnerScrollContainer","TableComposable","gridBreakPoint","Thead","Tr","col","Th","isStickyColumn","stickyMinWidth","hasRightBorder","modifier","stickyLeftOffset","Tbody","Td","colSpan","Bullseye","textAlign","Spinner","rowIndex","cellIndex","dataLabel","select","_event","Boolean","ExplorerTableConnect","ExplorerTable","ExplorerToolbarBase","isBulkSelectDisabled","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onExportClicked","showBulkSelect","showExcludes","showExport","ExplorerToolbarConnect","ExplorerToolbar","Explorer","isExportModalOpen","getExportModal","meta","isAllItems","onClose","handleExportModalClose","resolution","showTimeScope","getPagination","isBottom","page","trunc","Pagination","isCompact","itemCount","onPerPageSelect","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","PaginationVariant","widgetId","getTable","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","handleExportModalOpen","action","handleGroupBySelected","groupByKey","indexOf","handlePerspectiveClick","updateReport","newPerspective","noReport","noLocation","noOciProviders","onDatePickerSelected","ibmOcp","hasAwsCloud","hasAzureCloud","hasGcpCloud","hasIbmCloud","getPerspectiveDefault","skeletonWidth","xs","sm","md","lg","hasAccess","userAccessType","access","hasProviders","hasAwsAccess","hasAzureAccess","hasOciAccess","hasCostModelAccess","hasGcpAccess","hasIbmAccess","hasOcpAccess","hasRhelAccess","hasRosAccess"],"sourceRoot":""}