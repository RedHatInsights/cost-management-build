{"version":3,"file":"js/overview.e48e58c2cd09e92429b9.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/calculator-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/ok-icon.js","webpack:///./src/api/queries/providersQuery.ts","webpack:///./src/api/queries/userAccessQuery.ts","webpack:///./src/routes/components/currency/currency.styles.ts","webpack:///./src/routes/components/currency/currency.tsx","webpack:///./src/routes/components/dataTable/dataTable.styles.ts","webpack:///./src/routes/components/dataTable/dataTable.tsx","webpack:///./src/routes/components/dataTable/selectableTable.tsx","webpack:///./src/routes/components/page/noData/noDataState.tsx","webpack:///./src/routes/components/page/noData/noData.tsx","webpack:///./src/routes/components/icons/costIcon/costIcon.tsx","webpack:///./src/routes/components/page/noProviders/noProvidersState.styles.ts","webpack:///./src/routes/components/page/noProviders/noProvidersState.tsx","webpack:///./src/routes/components/page/noProviders/noProviders.tsx","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/NotAuthorized/NotAuthorized.js","webpack:///./src/routes/components/page/notAuthorized/notAuthorizedState.tsx","webpack:///./src/routes/components/page/notAuthorized/notAuthorized.tsx","webpack:///./src/routes/components/perspective/perspective.tsx","webpack:///./src/routes/overview/components/dashboardBase.tsx","webpack:///./src/routes/overview/components/optimizationsSummary/optimizations.styles.ts","webpack:///./src/routes/overview/components/optimizationsSummary/optimizationsSummary.tsx","webpack:///./src/routes/overview/components/chartComparison.tsx","webpack:///./src/routes/overview/components/dashboardWidget.styles.ts","webpack:///./src/routes/overview/components/dashboardWidgetBase.tsx","webpack:///./src/routes/overview/awsDashboard/awsDashboardWidget.tsx","webpack:///./src/routes/overview/awsDashboard/awsDashboard.tsx","webpack:///./src/routes/overview/awsOcpDashboard/awsOcpDashboardWidget.tsx","webpack:///./src/routes/overview/awsOcpDashboard/awsOcpDashboard.tsx","webpack:///./src/routes/overview/azureDashboard/azureDashboardWidget.tsx","webpack:///./src/routes/overview/azureDashboard/azureDashboard.tsx","webpack:///./src/routes/overview/azureOcpDashboard/azureOcpDashboardWidget.tsx","webpack:///./src/routes/overview/azureOcpDashboard/azureOcpDashboard.tsx","webpack:///./src/routes/overview/gcpDashboard/gcpDashboardWidget.tsx","webpack:///./src/routes/overview/gcpDashboard/gcpDashboard.tsx","webpack:///./src/routes/overview/gcpOcpDashboard/gcpOcpDashboardWidget.tsx","webpack:///./src/routes/overview/gcpOcpDashboard/gcpOcpDashboard.tsx","webpack:///./src/routes/overview/ibmDashboard/ibmDashboardWidget.tsx","webpack:///./src/routes/overview/ibmDashboard/ibmDashboard.tsx","webpack:///./src/routes/overview/ocpCloudDashboard/ocpCloudDashboardWidget.tsx","webpack:///./src/routes/overview/ocpCloudDashboard/ocpCloudDashboard.tsx","webpack:///./src/routes/overview/ocpDashboard/ocpDashboardWidget.styles.ts","webpack:///./src/routes/overview/ocpDashboard/ocpDashboardWidget.tsx","webpack:///./src/routes/overview/ocpDashboard/ocpDashboard.tsx","webpack:///./src/routes/overview/rhelDashboard/rhelDashboardWidget.styles.ts","webpack:///./src/routes/overview/rhelDashboard/rhelDashboardWidget.tsx","webpack:///./src/routes/overview/rhelDashboard/rhelDashboard.tsx","webpack:///./src/routes/overview/ociDashboard/ociDashboardWidget.tsx","webpack:///./src/routes/overview/ociDashboard/ociDashboard.tsx","webpack:///./src/routes/overview/overview.styles.ts","webpack:///./src/routes/overview/overview.tsx","webpack:///./src/api/queries/overviewQuery.ts","webpack:///./src/routes/settings/calculations/calculations.styles.ts","webpack:///./src/routes/settings/calculations/calculations.tsx","webpack:///./src/routes/settings/costModels/costModelsDetails/utils/query.tsx","webpack:///./src/routes/settings/costModels/costModelsDetails/bottomPagination.tsx","webpack:///./src/routes/settings/costModels/costModelsDetails/costModelsDetails.styles.ts","webpack:///./src/routes/settings/costModels/costModelWizard/api.ts","webpack:///./src/routes/settings/costModels/costModelWizard/context.ts","webpack:///./src/routes/settings/costModels/costModelWizard/wizard.styles.ts","webpack:///./src/routes/settings/costModels/costModelWizard/distribution.tsx","webpack:///./src/routes/settings/costModels/costModelWizard/steps.tsx","webpack:///./src/routes/settings/costModels/costModelWizard/generalInformation.tsx","webpack:///./src/routes/settings/costModels/costModelWizard/markup.tsx","webpack:///./src/routes/settings/costModels/components/addPriceList.tsx","webpack:///./src/routes/settings/costModels/components/paginationToolbarTemplate.tsx","webpack:///./src/routes/settings/costModels/costModelWizard/priceListTable.tsx","webpack:///./src/routes/settings/costModels/costModelWizard/priceList.tsx","webpack:///./src/routes/settings/costModels/costModelWizard/review.tsx","webpack:///./src/routes/settings/costModels/costModelWizard/assignSourcesToolbar.tsx","webpack:///./src/routes/settings/costModels/costModelWizard/table.tsx","webpack:///./src/routes/settings/costModels/costModelWizard/sources.tsx","webpack:///./src/routes/settings/costModels/costModelWizard/costModelWizard.tsx","webpack:///./src/routes/settings/costModels/costModelsDetails/createCostModelButton.tsx","webpack:///./src/routes/settings/costModels/costModelsDetails/utils/dialog.tsx","webpack:///./src/routes/settings/costModels/costModelsDetails/dialog.tsx","webpack:///./src/routes/settings/costModels/costModelsDetails/emptyStateBase.tsx","webpack:///./src/routes/settings/costModels/costModelsDetails/noCostModels.tsx","webpack:///./src/routes/settings/costModels/costModelsDetails/table.tsx","webpack:///./src/routes/settings/costModels/costModelsDetails/utils/table.tsx","webpack:///./src/routes/settings/costModels/costModelsDetails/utils/filters.tsx","webpack:///./src/routes/settings/costModels/costModelsDetails/utils/toolbar.tsx","webpack:///./src/routes/settings/costModels/costModelsDetails/toolbar.tsx","webpack:///./src/routes/settings/costModels/costModelsDetails/costModelsDetails.tsx","webpack:///./src/routes/settings/platformProjects/platformProjects.styles.ts","webpack:///./src/routes/settings/platformProjects/platformTable.tsx","webpack:///./src/routes/settings/platformProjects/platformToolbar.tsx","webpack:///./src/routes/settings/platformProjects/platformProjects.tsx","webpack:///./src/routes/settings/tagDetails/tagDetails.styles.ts","webpack:///./src/routes/settings/tagDetails/tagTable.tsx","webpack:///./src/routes/settings/tagDetails/tagToolbar.tsx","webpack:///./src/routes/settings/tagDetails/tagDetails.tsx","webpack:///./src/routes/settings/costCategory/costCategory.styles.ts","webpack:///./src/routes/settings/costCategory/costCategoryTable.tsx","webpack:///./src/routes/settings/costCategory/costCategoryToolbar.tsx","webpack:///./src/routes/settings/costCategory/costCategory.tsx","webpack:///./src/routes/settings/settings.styles.ts","webpack:///./src/routes/settings/settings.tsx","webpack:///./src/routes/utils/providers.ts","webpack:///./src/routes/utils/query.ts","webpack:///./src/utils/chrome.tsx","webpack:///./src/utils/userAccess.ts"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const CalculatorIconConfig = {\n  name: 'CalculatorIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M400 0H48C22.4 0 0 22.4 0 48v416c0 25.6 22.4 48 48 48h352c25.6 0 48-22.4 48-48V48c0-25.6-22.4-48-48-48zM128 435.2c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm0-128c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm128 128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm0-128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm128 128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8V268.8c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v166.4zm0-256c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8V76.8C64 70.4 70.4 64 76.8 64h294.4c6.4 0 12.8 6.4 12.8 12.8v102.4z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const CalculatorIcon = createIcon(CalculatorIconConfig);\n\nexport default CalculatorIcon;","import { createIcon } from '../createIcon';\n\nexport const OkIconConfig = {\n  name: 'OkIcon',\n  height: 1024,\n  width: 1024,\n  svgPath: 'M668.3,361.4 L465.1,564.6 L352.2,451.7 C346.210177,445.698444 338.079189,442.325817 329.6,442.325817 C321.120811,442.325817 312.989823,445.698444 307,451.7 L261.8,496.9 C255.798444,502.889823 252.425817,511.020811 252.425817,519.5 C252.425817,527.979189 255.798444,536.110177 261.8,542.1 L442.4,722.7 C448.389823,728.701556 456.520811,732.074183 465,732.074183 C473.479189,732.074183 481.610177,728.701556 487.6,722.7 L758.6,451.7 C764.601556,445.710177 767.974183,437.579189 767.974183,429.1 C767.974183,420.620811 764.601556,412.489823 758.6,406.5 L713.4,361.3 C700.916226,348.87879 680.728569,348.923552 668.3,361.4 M512.1,127.9 C300.3,127.9 128.1,300.2 128.1,511.9 C128.1,723.8 300.3,895.9 512.1,895.9 C723.9,895.9 896.1,723.7 896.1,511.9 C896.1,300.1 723.8,127.9 512.1,127.9 M512.1,1024 C229.7,1024 0,794.3 0,512 C0,229.7 229.7,0 512.1,0 C794.3,0 1024,229.7 1024,512 C1024,794.3 794.3,1024 512.1,1024',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const OkIcon = createIcon(OkIconConfig);\n\nexport default OkIcon;","import { parse, stringify } from 'qs';\nexport function getProvidersQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseProvidersQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","import { parse, stringify } from 'qs';\nexport function getUserAccessQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseUserAccessQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    currencySelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    currencyLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n        whiteSpace: 'nowrap',\n    },\n};\n","import './currency.scss';\nimport { Select, SelectOption, SelectVariant, Title, TitleSizes } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { setCurrency } from 'utils/localStorage';\nimport { styles } from './currency.styles';\nexport const currencyOptions = [\n    { label: messages.currencyOptions, value: 'AUD' },\n    { label: messages.currencyOptions, value: 'CAD' },\n    { label: messages.currencyOptions, value: 'CHF' },\n    { label: messages.currencyOptions, value: 'CNY' },\n    { label: messages.currencyOptions, value: 'DKK' },\n    { label: messages.currencyOptions, value: 'EUR' },\n    { label: messages.currencyOptions, value: 'GBP' },\n    { label: messages.currencyOptions, value: 'HKD' },\n    { label: messages.currencyOptions, value: 'JPY' },\n    { label: messages.currencyOptions, value: 'NOK' },\n    { label: messages.currencyOptions, value: 'NZD' },\n    { label: messages.currencyOptions, value: 'SEK' },\n    { label: messages.currencyOptions, value: 'SGD' },\n    { label: messages.currencyOptions, value: 'USD' },\n    { label: messages.currencyOptions, value: 'ZAR' },\n];\nclass CurrencyBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isSelectOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getSelect = () => {\n            const { currency, isDisabled, showLabel = true } = this.props;\n            const { isSelectOpen } = this.state;\n            const selectOptions = this.getSelectOptions();\n            const selection = selectOptions.find((option) => option.value === currency);\n            return (React.createElement(Select, { className: showLabel ? 'currencyOverride' : undefined, id: \"currencySelect\", isDisabled: isDisabled, isOpen: isSelectOpen, onSelect: this.handleSelect, onToggle: this.handleToggle, selections: selection, variant: SelectVariant.single }, selectOptions.map(option => (React.createElement(SelectOption, { key: option.value, value: option })))));\n        };\n        this.getSelectOptions = () => {\n            const { intl } = this.props;\n            const options = [];\n            currencyOptions.map(option => {\n                options.push({\n                    toString: () => intl.formatMessage(option.label, { units: option.value }),\n                    value: option.value,\n                });\n            });\n            return options;\n        };\n        this.handleSelect = (event, selection) => {\n            const { isLocalStorage = true, onSelect } = this.props;\n            // Set currency units via local storage\n            if (isLocalStorage) {\n                setCurrency(selection.value);\n            }\n            this.setState({\n                isSelectOpen: false,\n            }, () => {\n                if (onSelect) {\n                    onSelect(selection.value);\n                }\n            });\n        };\n        this.handleToggle = isSelectOpen => {\n            this.setState({ isSelectOpen });\n        };\n    }\n    render() {\n        const { intl, showLabel = true } = this.props;\n        return (React.createElement(\"div\", { style: styles.currencySelector },\n            showLabel && (React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.md, style: styles.currencyLabel }, intl.formatMessage(messages.currency))),\n            this.getSelect()));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst CurrencyConnect = connect(mapStateToProps, mapDispatchToProps)(CurrencyBase);\nconst Currency = injectIntl(CurrencyConnect);\nexport default Currency;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    costColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingRight: 0,\n    },\n    defaultLabel: {\n        minWidth: '50px',\n    },\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    lastItem: {\n        textAlign: 'right',\n        paddingRight: '3.8rem',\n    },\n    lastItemColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    managedColumn: {\n        textAlign: 'right',\n    },\n    nameColumn: {\n        width: '1%',\n    },\n};\n","import './dataTable.scss';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, TableVariant, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass DataTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { filterBy, intl } = this.props;\n            if (filterBy) {\n                for (const val of Object.values(filterBy)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, orderBy } = this.props;\n            const direction = orderBy && orderBy[columns[index].orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected, rows } = this.props;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isActionsCell = false, isLoading, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.dataTableAriaLabel), className: \"tableOverride\", gridBreakPoint: \"grid-2xl\", variant: TableVariant.compact },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${cellIndex}-${rowIndex}`, modifier: \"nowrap\", select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    }, style: item.style })) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", isActionCell: isActionsCell && cellIndex === row.cells.length - 1, style: item.style }, item.value))))))))),\n            rows.length === 0 && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(DataTable));\n","import { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, TableVariant, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass SelectableTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { emptyState, filterBy, intl } = this.props;\n            if (filterBy) {\n                for (const val of Object.values(filterBy)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            // Return custom empty state\n            if (emptyState) {\n                return emptyState;\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, orderBy } = this.props;\n            const direction = orderBy && orderBy[columns[index].orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnRowClick = (event, rowIndex) => {\n            const { onRowClick, rows } = this.props;\n            rows.map(row => (row.selected = false));\n            rows[rowIndex].selected = true;\n            this.setState({ rows }, () => {\n                if (onRowClick) {\n                    onRowClick(event, rowIndex);\n                }\n            });\n        };\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isLoading, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.selectableTableAriaLabel), gridBreakPoint: \"grid-2xl\", hasSelectableRowCaption: true, variant: TableVariant.compact },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { \"aria-label\": intl.formatMessage(messages.selectableTableRowAriaLabel), isSelectable: true, isHoverable: true, isRowSelected: row.selected, onRowClick: _event => this.handleOnRowClick(_event, rowIndex), key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 ? (React.createElement(Th, { \"aria-label\": intl.formatMessage(messages.selectableTableHeaderAriaLabel), dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", style: item.style }, item.value)) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", style: item.style }, item.value))))))))),\n            rows.length === 0 && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(SelectableTable));\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title, TitleSizes, } from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nclass NoDataStateBase extends React.Component {\n    render() {\n        const { intl, showReload = true } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: TitleSizes.lg }, intl.formatMessage(messages.noDataStateTitle)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(messages.noDataStateDesc)),\n            showReload && (React.createElement(Button, { variant: \"primary\", onClick: () => window.location.reload() }, intl.formatMessage(messages.noDataStateRefresh)))));\n    }\n}\nconst NoDataState = injectIntl(NoDataStateBase);\nexport { NoDataState };\n","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React from 'react';\nimport { NoDataState } from './noDataState';\nconst NoData = ({ showReload, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(NoDataState, { showReload: showReload }))));\n};\nexport default NoData;\n","import './costIcon.scss';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nconst icon = require('./Cost-icon.svg');\nconst CostIcon = ({ className, intl }) => {\n    return (React.createElement(\"img\", { className: `cost-icon ${className}`, src: icon, alt: intl.formatMessage(messages.costManagement), \"aria-hidden\": \"true\" }));\n};\nexport default injectIntl(CostIcon);\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    iconSpacer: {\n        marginLeft: global_spacer_xs.value,\n    },\n    viewSources: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title, TitleSizes, } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { ProviderType } from 'api/providers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { CostIcon } from 'routes/components/icons/costIcon';\nimport { getReleasePath } from 'utils/paths';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDocLink = (textKey, urlKey) => {\n            const { intl } = this.props;\n            return (React.createElement(\"a\", { href: intl.formatMessage(urlKey), rel: \"noreferrer\", target: \"_blank\" },\n                intl.formatMessage(textKey),\n                React.createElement(\"span\", { style: styles.iconSpacer },\n                    React.createElement(ExternalLinkAltIcon, null))));\n        };\n        this.getRouteToSources = () => {\n            const release = getReleasePath();\n            return `${release}/settings/sources`;\n        };\n    }\n    render() {\n        const { intl, providerType } = this.props;\n        let descKey = messages.noProvidersStateOverviewDesc;\n        let titleKey = messages.noProvidersStateOverviewTitle;\n        let docUrlKey;\n        let icon;\n        let textKey;\n        switch (providerType) {\n            case ProviderType.aws:\n                descKey = messages.noProvidersStateAwsDesc;\n                titleKey = messages.noProvidersStateAwsTitle;\n                break;\n            case ProviderType.azure:\n                descKey = messages.noProvidersStateAzureDesc;\n                titleKey = messages.noProvidersStateAzureTitle;\n                break;\n            case ProviderType.gcp:\n                descKey = messages.noProvidersStateGcpDesc;\n                titleKey = messages.noProvidersStateGcpTitle;\n                break;\n            case ProviderType.ibm:\n                descKey = messages.noProvidersStateIbmDesc;\n                titleKey = messages.noProvidersStateIbmTitle;\n                break;\n            case ProviderType.ocp:\n                descKey = messages.noProvidersStateOcpDesc;\n                docUrlKey = messages.docsAddOcpSources;\n                textKey = messages.noProvidersStateOcpAddSources;\n                titleKey = messages.noProvidersStateOcpTitle;\n                break;\n            default:\n                icon = CostIcon;\n        }\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: icon ? icon : PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h1\", size: TitleSizes.lg }, intl.formatMessage(titleKey)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(descKey)),\n            docUrlKey && textKey ? (React.createElement(\"div\", { style: styles.viewSources }, this.getDocLink(textKey, docUrlKey))) : (React.createElement(Button, { variant: \"primary\", component: \"a\", href: this.getRouteToSources() }, intl.formatMessage(messages.noProvidersStateGetStarted)))));\n    }\n}\nconst NoProvidersState = injectIntl(NoProvidersStateBase);\nexport { NoProvidersState };\n","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React from 'react';\nimport { NoProvidersState } from './noProvidersState';\nconst NoProviders = ({ providerType, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(NoProvidersState, { providerType: providerType }))));\n};\nexport default NoProviders;\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport React from 'react';\nimport { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { LockIcon } from '@patternfly/react-icons';\nimport '../NotAuthorized/NotAuthorized.css';\nvar ContactBody = function () { return (_jsxs(React.Fragment, { children: [\"Contact your organization administrator(s) for more information or visit\\u00A0\", _jsx(\"a\", __assign({ href: \"./settings/my-user-access\" }, { children: \"My User Access\" })), \"\\u00A0 to learn more about your permissions.\"] })); };\nvar NotAuthorized = function (_a) {\n    var _b = _a.prevPageButtonText, prevPageButtonText = _b === void 0 ? 'Return to previous page' : _b, _c = _a.toLandingPageText, toLandingPageText = _c === void 0 ? 'Go to landing page' : _c, title = _a.title, _d = _a.actions, actions = _d === void 0 ? null : _d, serviceName = _a.serviceName, _e = _a.icon, Icon = _e === void 0 ? LockIcon : _e, _f = _a.description, description = _f === void 0 ? _jsx(ContactBody, {}) : _f, _g = _a.showReturnButton, showReturnButton = _g === void 0 ? true : _g, className = _a.className, props = __rest(_a, [\"prevPageButtonText\", \"toLandingPageText\", \"title\", \"actions\", \"serviceName\", \"icon\", \"description\", \"showReturnButton\", \"className\"]);\n    var heading = title || \"You do not have access to \".concat(serviceName);\n    return (_jsxs(EmptyState, __assign({ variant: EmptyStateVariant.full, className: \"ins-c-not-authorized \".concat(className || '') }, props, { children: [_jsx(EmptyStateIcon, { icon: Icon }), _jsx(Title, __assign({ headingLevel: \"h5\", size: \"lg\" }, { children: heading })), _jsx(EmptyStateBody, { children: description }), actions, showReturnButton &&\n                (document.referrer ? (_jsx(Button, __assign({ variant: \"primary\", onClick: function () { return history.back(); } }, { children: prevPageButtonText }))) : (_jsx(Button, __assign({ variant: \"primary\", component: \"a\", href: \".\" }, { children: toLandingPageText }))))] })));\n};\nexport default NotAuthorized;\n//# sourceMappingURL=NotAuthorized.js.map","import { NotAuthorized as UnAuthorized } from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { routes } from 'routes';\nimport { formatPath } from 'utils/paths';\nclass NotAuthorizedStateBase extends React.Component {\n    render() {\n        const { intl, pathname } = this.props;\n        let msg;\n        switch (pathname) {\n            case formatPath(routes.awsDetails.path):\n            case formatPath(routes.awsDetailsBreakdown.path):\n                msg = messages.notAuthorizedStateAws;\n                break;\n            case formatPath(routes.azureDetails.path):\n            case formatPath(routes.azureDetailsBreakdown.path):\n                msg = messages.notAuthorizedStateAzure;\n                break;\n            case formatPath(routes.costModel.path):\n            case formatPath(routes.costModelsDetails.path):\n                msg = messages.notAuthorizedStateCostModels;\n                break;\n            case formatPath(routes.gcpDetails.path):\n            case formatPath(routes.gcpDetailsBreakdown.path):\n                msg = messages.notAuthorizedStateGcp;\n                break;\n            case formatPath(routes.ibmDetails.path):\n            case formatPath(routes.ibmDetailsBreakdown.path):\n                msg = messages.notAuthorizedStateIbm;\n                break;\n            case formatPath(routes.ociDetails.path):\n            case formatPath(routes.ociDetailsBreakdown.path):\n                msg = messages.notAuthorizedStateOci;\n                break;\n            case formatPath(routes.ocpDetails.path):\n            case formatPath(routes.ocpDetailsBreakdown.path):\n                msg = messages.notAuthorizedStateOcp;\n                break;\n            case formatPath(routes.rhelDetails.path):\n            case formatPath(routes.rhelDetailsBreakdown.path):\n                msg = messages.notAuthorizedStateRhel;\n                break;\n            case formatPath(routes.optimizations.path):\n                msg = messages.notAuthorizedStateOptimizations;\n                break;\n            case formatPath(routes.settings.path):\n                msg = messages.notAuthorizedStateSettings;\n                break;\n            case formatPath(routes.explorer.path):\n            default:\n                msg = messages.costManagement;\n                break;\n        }\n        return React.createElement(UnAuthorized, { serviceName: intl.formatMessage(msg) });\n    }\n}\nconst NotAuthorizedState = injectIntl(NotAuthorizedStateBase);\nexport { NotAuthorizedState };\n","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React from 'react';\nimport { NotAuthorizedState } from './notAuthorizedState';\nconst NotAuthorized = ({ pathname, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(NotAuthorizedState, { pathname: pathname }))));\n};\nexport default NotAuthorized;\n","import messages from 'locales/messages';\nimport React from 'react';\nimport { PerspectiveSelect } from 'routes/components/perspective/perspectiveSelect';\n// Infrastructure AWS options\nconst infrastructureAwsOptions = [{ label: messages.perspectiveValues, value: 'aws' }];\n// Infrastructure AWS filtered by OpenShift options\nconst infrastructureAwsOcpOptions = [{ label: messages.perspectiveValues, value: 'aws_ocp' }];\n// Infrastructure Azure options\nconst infrastructureAzureOptions = [{ label: messages.perspectiveValues, value: 'azure' }];\n// Infrastructure Oci options\nconst infrastructureOciOptions = [{ label: messages.perspectiveValues, value: 'oci' }];\n// Infrastructure Azure filtered by OpenShift options\nconst infrastructureAzureOcpOptions = [{ label: messages.perspectiveValues, value: 'azure_ocp' }];\n// Infrastructure GCP options\nconst infrastructureGcpOptions = [{ label: messages.perspectiveValues, value: 'gcp' }];\n// Infrastructure GCP filtered by OCP options\nconst infrastructureGcpOcpOptions = [{ label: messages.perspectiveValues, value: 'gcp_ocp' }];\n// Infrastructure IBM options\nconst infrastructureIbmOptions = [{ label: messages.perspectiveValues, value: 'ibm' }];\n// Infrastructure IBM filtered by OCP options\nconst infrastructureIbmOcpOptions = [{ label: messages.perspectiveValues, value: 'ibm_ocp' }];\n// Infrastructure Ocp cloud options\nconst infrastructureOcpCloudOptions = [{ label: messages.perspectiveValues, value: 'ocp_cloud' }];\n// Ocp options\nconst ocpOptions = [{ label: messages.perspectiveValues, value: 'ocp' }];\n// RHEL options\nconst rhelOptions = [{ label: messages.perspectiveValues, value: 'rhel' }];\nconst getInfrastructureOptions = ({ hasAws, hasAwsOcp, hasAzure, hasAzureOcp, hasGcp, hasGcpOcp, hasIbm, hasIbmOcp, hasOci, isIbmFeatureEnabled, }) => {\n    const options = [];\n    if (hasAws) {\n        options.push(...infrastructureAwsOptions);\n    }\n    if (hasAwsOcp) {\n        options.push(...infrastructureAwsOcpOptions);\n    }\n    if (hasGcp) {\n        options.push(...infrastructureGcpOptions);\n    }\n    if (hasGcpOcp) {\n        options.push(...infrastructureGcpOcpOptions);\n    }\n    if (hasIbm) {\n        options.push(...infrastructureIbmOptions);\n    }\n    if (hasIbmOcp && isIbmFeatureEnabled) {\n        options.push(...infrastructureIbmOcpOptions);\n    }\n    if (hasAzure) {\n        options.push(...infrastructureAzureOptions);\n    }\n    if (hasAzureOcp) {\n        options.push(...infrastructureAzureOcpOptions);\n    }\n    if (hasOci) {\n        options.push(...infrastructureOciOptions);\n    }\n    return options;\n};\nconst Perspective = ({ currentItem, hasAws, hasAwsOcp, hasAzure, hasAzureOcp, hasGcp, hasGcpOcp, hasIbm, hasIbmOcp, hasOci, hasOcp, hasOcpCloud, hasRhel, isDisabled, isIbmFeatureEnabled, isInfrastructureTab, isRhelTab, onSelected, }) => {\n    // Dynamically show options if providers are available\n    const options = [];\n    // Note isInfrastructureTab and isRhelTab will be undefined for cost explorer\n    if (isInfrastructureTab !== undefined || isRhelTab !== undefined) {\n        if (isInfrastructureTab) {\n            if (hasOcpCloud) {\n                options.push(...infrastructureOcpCloudOptions);\n            }\n            options.push(...getInfrastructureOptions({\n                hasAws,\n                hasAwsOcp,\n                hasAzure,\n                hasAzureOcp,\n                hasGcp,\n                hasGcpOcp,\n                hasIbm,\n                hasIbmOcp,\n                hasOci,\n                isIbmFeatureEnabled,\n            }));\n        }\n        else if (isRhelTab) {\n            if (hasRhel) {\n                options.push(...rhelOptions);\n            }\n        }\n        else if (hasOcp) {\n            options.push(...ocpOptions);\n        }\n    }\n    else {\n        if (hasOcp) {\n            options.push(...ocpOptions);\n        }\n        if (hasOcpCloud) {\n            options.push(...infrastructureOcpCloudOptions);\n        }\n        if (hasRhel) {\n            options.push(...rhelOptions);\n        }\n        options.push(...getInfrastructureOptions({\n            hasAws,\n            hasAwsOcp,\n            hasAzure,\n            hasAzureOcp,\n            hasGcp,\n            hasGcpOcp,\n            hasIbm,\n            hasIbmOcp,\n            hasOci,\n            isIbmFeatureEnabled,\n        }));\n    }\n    return (React.createElement(PerspectiveSelect, { currentItem: currentItem || options[0].value, isDisabled: isDisabled, onSelected: onSelected, options: options }));\n};\nexport default Perspective;\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nconst DashboardBase = ({ costType, currency, DashboardWidget, selectWidgets, widgets }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { hasGutter: true }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return widget.details && widget.details.showHorizontal ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(DashboardWidget, Object.assign({ widgetId: widgetId }, (costType && { costType }), (currency && { currency }))))) : (React.createElement(GridItem, { lg: 12, xl: 6, xl2: 4, key: widgetId },\n            React.createElement(DashboardWidget, Object.assign({ widgetId: widgetId }, (costType && { costType }), (currency && { currency })))));\n    }))));\nexport default DashboardBase;\n","import global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nexport const styles = {\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n};\n","import './optimizationsSummary.scss';\nimport { Button, ButtonVariant, Card, CardBody, CardTitle, Popover, Skeleton, Title, TitleSizes, } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { skeletonWidth } from 'routes/utils/skeleton';\nimport { FetchStatus } from 'store/common';\nimport { formatPath } from 'utils/paths';\nimport { styles } from './optimizations.styles';\nconst OptimizationsSummaryBase = ({ intl, report, status, title }) => {\n    const count = report && report.meta ? report.meta.count : 0;\n    const description = intl.formatMessage(messages.optimizationsDetails, { count });\n    return (React.createElement(Card, { className: \"summary\" },\n        React.createElement(CardTitle, null,\n            React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg },\n                intl.formatMessage(title),\n                React.createElement(\"span\", { style: styles.infoIcon },\n                    React.createElement(Popover, { \"aria-label\": intl.formatMessage(messages.optimizationsInfoArialLabel), enableFlip: true, bodyContent: React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.optimizationsInfo)) },\n                        React.createElement(Button, { \"aria-label\": intl.formatMessage(messages.optimizationsInfoButtonArialLabel), variant: ButtonVariant.plain },\n                            React.createElement(OutlinedQuestionCircleIcon, null)))))),\n        React.createElement(CardBody, null, status === FetchStatus.inProgress ? (React.createElement(React.Fragment, null,\n            React.createElement(Skeleton, { width: \"16%\" }),\n            React.createElement(Skeleton, { className: \"skeleton\", width: skeletonWidth.md }))) : count > 0 ? (React.createElement(Link, { to: formatPath(routes.optimizations.path) }, description)) : (description))));\n};\nconst OptimizationsSummary = injectIntl(OptimizationsSummaryBase);\nexport default OptimizationsSummary;\n","import { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport React from 'react';\nclass ChartComparisonBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            currentItem: this.props.options ? this.props.options.find(option => option.default).value : undefined,\n            isSelectOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getSelect = () => {\n            const { isDisabled } = this.props;\n            const { currentItem, isSelectOpen } = this.state;\n            const selectOptions = this.getSelectOptions();\n            const selection = selectOptions.find((option) => option.value === currentItem);\n            return (React.createElement(Select, { id: \"comparisonSelect\", isDisabled: isDisabled, isOpen: isSelectOpen, onSelect: this.handleSelect, onToggle: this.handleToggle, selections: selection, variant: SelectVariant.single }, selectOptions.map(option => (React.createElement(SelectOption, { key: option.value, value: option })))));\n        };\n        this.getSelectOptions = () => {\n            const { options } = this.props;\n            const selectOptions = [];\n            options.map(option => {\n                selectOptions.push({\n                    toString: () => option.label,\n                    value: option.value,\n                });\n            });\n            return selectOptions;\n        };\n        this.handleSelect = (event, selection) => {\n            const { onItemClicked } = this.props;\n            if (onItemClicked) {\n                onItemClicked(selection.value);\n            }\n            this.setState({\n                currentItem: selection.value,\n                isSelectOpen: false,\n            });\n        };\n        this.handleToggle = isSelectOpen => {\n            this.setState({ isSelectOpen });\n        };\n    }\n    render() {\n        return this.getSelect();\n    }\n}\nconst ChartComparison = ChartComparisonBase;\nexport { ChartComparison };\n","import global_spacer_2xl from '@patternfly/react-tokens/dist/js/global_spacer_2xl';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_xl from '@patternfly/react-tokens/dist/js/global_spacer_xl';\nexport const chartStyles = {\n    chartAltHeight: 250,\n    chartHeight: 180,\n    containerAltHeight: 250,\n    containerTrendHeight: 180,\n    containerUsageHeight: 180,\n};\nexport const styles = {\n    comparison: {\n        marginBottom: global_spacer_md.value,\n    },\n    comparisonContainer: {\n        display: 'flex',\n    },\n    tabs: {\n        marginTop: global_spacer_2xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n};\n","import { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { getQuery } from 'api/queries/query';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ComputedReportItemType, DatumType, transformReport } from 'routes/components/charts/common/chartDatum';\nimport { getComputedForecast, transformForecast, transformForecastCone, } from 'routes/components/charts/common/chartDatumForecast';\nimport { ReportSummary, ReportSummaryAlt, ReportSummaryCost, ReportSummaryDailyCost, ReportSummaryDailyTrend, ReportSummaryDetails, ReportSummaryItem, ReportSummaryItems, ReportSummaryTrend, ReportSummaryUsage, } from 'routes/components/reports/reportSummary';\nimport { OptimizationsSummary } from 'routes/overview/components/optimizationsSummary';\nimport { DashboardChartType } from 'store/dashboard/common/dashboardCommon';\nimport { OcpDashboardTab } from 'store/dashboard/ocpDashboard';\nimport { formatCurrency, formatUnits, unitsLookupKey } from 'utils/format';\nimport { ChartComparison } from './chartComparison';\nimport { chartStyles, styles } from './dashboardWidget.styles';\n// eslint-disable-next-line no-shadow\nvar Comparison;\n(function (Comparison) {\n    Comparison[\"cumulative\"] = \"cumulative\";\n    Comparison[\"daily\"] = \"daily\";\n})(Comparison || (Comparison = {}));\nclass DashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            activeTabKey: 0,\n            currentComparison: Comparison.cumulative,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.buildDetailsLink = (tab) => {\n            const { details, getIdKeyForTab } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return `${details.viewAllPath}?${getQuery({\n                group_by: {\n                    [currentTab]: '*',\n                },\n            })}`;\n        };\n        this.getChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { chartType, trend } = this.props;\n            if (chartType === DashboardChartType.dailyTrend) {\n                return this.getDailyTrendChart(containerHeight, height, adjustContainerHeight, trend.showSupplementaryLabel);\n            }\n            else if (chartType === DashboardChartType.dailyCost) {\n                return this.getDailyCostChart(containerHeight, height, adjustContainerHeight);\n            }\n            else if (chartType === DashboardChartType.trend) {\n                return this.getTrendChart(containerHeight, height, adjustContainerHeight, trend.showSupplementaryLabel);\n            }\n            else if (chartType === DashboardChartType.usage) {\n                return this.getUsageChart(height, adjustContainerHeight);\n            }\n            else {\n                return null;\n            }\n        };\n        // This dropdown is for cumulative and daily cost\n        this.getChartComparison = () => {\n            const { intl, trend } = this.props;\n            const { currentComparison } = this.state;\n            const units = this.getFormattedUnits();\n            const cumulativeTitle = intl.formatMessage(trend.titleKey, { units });\n            const dailyTitle = intl.formatMessage(trend.dailyTitleKey, { units });\n            const options = [\n                { label: dailyTitle, value: Comparison.daily },\n                { label: cumulativeTitle, value: Comparison.cumulative, default: true },\n            ];\n            return (React.createElement(ChartComparison, { currentItem: currentComparison || options[0].value, onItemClicked: this.handleComparisonClick, options: options }));\n        };\n        // This chart displays cumulative and daily cost compared to infrastructure cost\n        this.getDailyCostChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { chartFormatter, currentReport, previousReport, trend } = this.props;\n            const { currentComparison } = this.state;\n            const computedReportItem = trend.computedReportItem; // cost, supplementary cost, etc.\n            const computedReportItemValue = trend.computedReportItemValue; // infrastructure usage cost\n            const daily = currentComparison === Comparison.daily;\n            const type = daily ? DatumType.rolling : trend.datumType;\n            // Cost data\n            const currentCostData = transformReport(currentReport, type, 'date', computedReportItem, computedReportItemValue);\n            const previousCostData = transformReport(previousReport, type, 'date', computedReportItem, computedReportItemValue);\n            // Forecast data\n            const forecastData = this.getForecastData(currentReport, trend.computedForecastItem);\n            const ReportSummaryComponent = daily ? ReportSummaryDailyCost : ReportSummaryCost;\n            return (React.createElement(React.Fragment, null,\n                React.createElement(\"div\", { style: styles.comparisonContainer },\n                    React.createElement(\"div\", { style: styles.comparison }, this.getChartComparison())),\n                React.createElement(ReportSummaryComponent, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentCostData: currentCostData, forecastConeData: forecastData.forecastConeData, forecastData: forecastData.forecastData, formatOptions: trend.formatOptions, formatter: chartFormatter || formatCurrency, height: height, previousCostData: previousCostData, showForecast: trend.computedForecastItem !== undefined })));\n        };\n        // This chart displays cumulative and daily cost\n        this.getDailyTrendChart = (containerHeight, height, adjustContainerHeight = false, showSupplementaryLabel = false) => {\n            const { chartFormatter, chartName, currentReport, details, previousReport, trend } = this.props;\n            const { currentComparison } = this.state;\n            const computedReportItem = trend.computedReportItem; // cost, supplementary cost, etc.\n            const computedReportItemValue = trend.computedReportItemValue; // infrastructure usage cost\n            const daily = currentComparison === Comparison.daily;\n            const type = daily ? DatumType.rolling : trend.datumType;\n            // Cost data\n            const currentData = transformReport(currentReport, type, 'date', computedReportItem, computedReportItemValue);\n            const previousData = transformReport(previousReport, type, 'date', computedReportItem, computedReportItemValue);\n            // Forecast data\n            const { forecastData, forecastConeData } = this.getForecastData(currentReport, trend.computedForecastItem);\n            const ReportSummaryComponent = daily ? ReportSummaryDailyTrend : ReportSummaryTrend;\n            return (React.createElement(React.Fragment, null,\n                React.createElement(\"div\", { style: styles.comparisonContainer },\n                    React.createElement(\"div\", { style: styles.comparison }, this.getChartComparison())),\n                React.createElement(ReportSummaryComponent, { adjustContainerHeight: adjustContainerHeight, chartName: chartName, containerHeight: containerHeight, currentData: currentData, forecastData: forecastData, forecastConeData: forecastConeData, formatOptions: trend.formatOptions, formatter: chartFormatter || formatUnits, height: height, previousData: previousData, showForecast: trend.computedForecastItem !== undefined, showSupplementaryLabel: showSupplementaryLabel, showUsageLegendLabel: details.showUsageLegendLabel, units: this.getUnits() })));\n        };\n        this.getForecastData = (report, computedForecastItem = 'cost') => {\n            const { forecast, trend } = this.props;\n            const { currentComparison } = this.state;\n            // Todo: Add cumulative / daily prop\n            const daily = currentComparison === Comparison.daily;\n            const datumType = daily ? DatumType.rolling : trend.datumType;\n            const computedForecast = getComputedForecast(forecast, report, computedForecastItem, datumType);\n            const forecastData = transformForecast(computedForecast, datumType, computedForecastItem);\n            const forecastConeData = transformForecastCone(computedForecast, datumType, computedForecastItem);\n            return { forecastData, forecastConeData };\n        };\n        // This chart displays cumulative cost only\n        this.getTrendChart = (containerHeight, height, adjustContainerHeight = false, showSupplementaryLabel = false) => {\n            const { chartFormatter, chartName, currentReport, details, intl, previousReport, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost'; // cost, supplementary cost, etc.\n            const computedReportItemValue = trend.computedReportItemValue; // infrastructure usage cost\n            const title = intl.formatMessage(trend.titleKey, { units: this.getFormattedUnits() });\n            // Cost data\n            const currentData = transformReport(currentReport, trend.datumType, 'date', computedReportItem, computedReportItemValue);\n            const previousData = transformReport(previousReport, trend.datumType, 'date', computedReportItem, computedReportItemValue);\n            // Forecast data\n            const { forecastData, forecastConeData } = this.getForecastData(currentReport, trend.computedForecastItem);\n            return (React.createElement(ReportSummaryTrend, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, chartName: chartName, currentData: currentData, forecastData: forecastData, forecastConeData: forecastConeData, formatOptions: trend.formatOptions, formatter: chartFormatter || formatUnits, height: height, previousData: previousData, showForecast: trend.computedForecastItem !== undefined, showSupplementaryLabel: showSupplementaryLabel, showUsageLegendLabel: details.showUsageLegendLabel, title: title, units: this.getUnits() }));\n        };\n        // This chart displays usage and requests\n        this.getUsageChart = (height, adjustContainerHeight = false) => {\n            const { chartFormatter, chartName, currentReport, intl, previousReport, trend } = this.props;\n            const title = intl.formatMessage(trend.titleKey, {\n                units: this.getFormattedUnits(),\n            });\n            // Request data\n            const currentRequestData = transformReport(currentReport, trend.datumType, 'date', 'request');\n            const previousRequestData = transformReport(previousReport, trend.datumType, 'date', 'request');\n            // Usage data\n            const currentUsageData = transformReport(currentReport, trend.datumType, 'date', 'usage');\n            const previousUsageData = transformReport(previousReport, trend.datumType, 'date', 'usage');\n            return (React.createElement(ReportSummaryUsage, { adjustContainerHeight: adjustContainerHeight, chartName: chartName, containerHeight: chartStyles.containerUsageHeight, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatOptions: trend.formatOptions, formatter: chartFormatter || formatUnits, height: height, previousRequestData: previousRequestData, previousUsageData: previousUsageData, title: title }));\n        };\n        this.getDetails = () => {\n            const { chartType, currentReport, details, reportType, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            return (React.createElement(ReportSummaryDetails, { chartType: chartType, computedReportItem: computedReportItem, computedReportItemValue: computedReportItemValue, costLabel: this.getDetailsLabel(details.costKey), formatOptions: details.formatOptions, report: currentReport, reportType: reportType, requestLabel: this.getDetailsLabel(details.requestKey), showTooltip: details.showTooltip, showUnits: details.showUnits, showUsageFirst: details.showUsageFirst, units: this.getUnits(), usageFormatOptions: details.usageFormatOptions, usageLabel: this.getDetailsLabel(details.usageKey) }));\n        };\n        this.getDetailsLabel = (key) => {\n            const { intl } = this.props;\n            return key ? intl.formatMessage(key) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, details } = this.props;\n            if (details.viewAllPath) {\n                return React.createElement(Link, { to: this.buildDetailsLink(currentTab) }, this.getDetailsLinkTitle(currentTab));\n            }\n            return null;\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { getIdKeyForTab, intl } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return intl.formatMessage(messages.groupByAll, { value: key, count: 2 });\n        };\n        this.getFormattedUnits = () => {\n            const { intl, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const units = this.getUnits();\n            if (computedReportItem === ComputedReportItemType.usage) {\n                return intl.formatMessage(messages.units, { units: unitsLookupKey(units) });\n            }\n            return intl.formatMessage(messages.currencyUnits, { units });\n        };\n        this.getHorizontalLayout = () => {\n            const { containerAltHeight = chartStyles.containerAltHeight, chartAltHeight = chartStyles.chartAltHeight, currentReportFetchStatus, details, } = this.props;\n            return (React.createElement(ReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(containerAltHeight, chartAltHeight, details.adjustContainerHeight)));\n        };\n        this.getOptimizationsSummary = () => {\n            const { rosReportFetchStatus, rosReport, titleKey } = this.props;\n            return React.createElement(OptimizationsSummary, { status: rosReportFetchStatus, report: rosReport, title: titleKey });\n        };\n        this.getTab = (tab, index) => {\n            const { getIdKeyForTab, tabsReport, tabsReportFetchStatus } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) },\n                React.createElement(\"div\", { style: styles.tabItems },\n                    React.createElement(ReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport, status: tabsReportFetchStatus }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, getIdKeyForTab, tabsReport, topItems, trend } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.costDistribution && tab === OcpDashboardTab.projects\n                ? trend.costDistribution\n                : trend.computedReportItemValue || 'total';\n            let totalValue;\n            const hasTotal = tabsReport && tabsReport.meta && tabsReport.meta.total;\n            if (computedReportItem === ComputedReportItemType.usage) {\n                if (hasTotal && tabsReport.meta.total.usage) {\n                    totalValue = tabsReport.meta.total.usage.value;\n                }\n            }\n            else {\n                if (hasTotal &&\n                    tabsReport.meta.total[computedReportItem] &&\n                    tabsReport.meta.total[computedReportItem][computedReportItemValue]) {\n                    totalValue = tabsReport.meta.total[computedReportItem][computedReportItemValue].value;\n                }\n            }\n            if (activeTab === currentTab) {\n                return (React.createElement(ReportSummaryItem, { formatOptions: topItems ? topItems.formatOptions : undefined, key: `${reportItem.id}-item`, label: reportItem.label ? reportItem.label.toString() : '', totalValue: totalValue, units: this.getUnits(), value: reportItem[computedReportItem][computedReportItemValue].value }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { getIdKeyForTab, intl } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return intl.formatMessage(messages.groupByTop, { value: key, count: 2 });\n        };\n        this.getTitle = () => {\n            const { intl, titleKey } = this.props;\n            return intl.formatMessage(titleKey);\n        };\n        this.getUnits = () => {\n            const { currentReport, details, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            if (details.units) {\n                return details.units;\n            }\n            if (!currentReport) {\n                return '';\n            }\n            const hasTotal = currentReport && currentReport.meta && currentReport.meta.total;\n            if (computedReportItem === ComputedReportItemType.usage) {\n                const hasUsage = hasTotal && currentReport.meta.total.usage;\n                return hasUsage ? currentReport.meta.total.usage.units : undefined;\n            }\n            else {\n                const hasCost = hasTotal &&\n                    currentReport.meta.total[computedReportItem] &&\n                    currentReport.meta.total[computedReportItem][computedReportItemValue];\n                return hasCost ? currentReport.meta.total[computedReportItem][computedReportItemValue].units : 'USD';\n            }\n        };\n        this.getVerticalLayout = () => {\n            const { availableTabs, currentReportFetchStatus, details } = this.props;\n            return (React.createElement(ReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerTrendHeight, chartStyles.chartHeight, details.adjustContainerHeight),\n                availableTabs && React.createElement(\"div\", { style: styles.tabs }, this.getTabs())));\n        };\n        this.handleComparisonClick = (value) => {\n            this.setState({ currentComparison: value });\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({ activeTabKey: tabIndex });\n        };\n        this.updateForecasts = () => {\n            const { fetchForecasts, widgetId } = this.props;\n            if (fetchForecasts) {\n                fetchForecasts(widgetId);\n            }\n        };\n        this.updateReports = () => {\n            const { fetchReports, widgetId } = this.props;\n            if (fetchReports) {\n                fetchReports(widgetId);\n            }\n        };\n        this.updateRosReports = () => {\n            const { fetchRosReports, isRosFeatureEnabled, widgetId } = this.props;\n            if (fetchRosReports && isRosFeatureEnabled) {\n                fetchRosReports(widgetId);\n            }\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, details, id, trend, updateTab } = this.props;\n        if (availableTabs) {\n            updateTab(id, availableTabs[0]);\n        }\n        if (trend && trend.computedForecastItem !== undefined) {\n            this.updateForecasts();\n        }\n        if (!details.showOptimizations) {\n            this.updateReports();\n        }\n        if (details.showOptimizations) {\n            this.updateRosReports();\n        }\n    }\n    componentDidUpdate(prevProps) {\n        const { costType, currency, trend } = this.props;\n        if (prevProps.costType !== costType || prevProps.currency !== currency) {\n            this.updateReports();\n            if (trend && trend.computedForecastItem !== undefined) {\n                this.updateForecasts();\n            }\n        }\n    }\n    render() {\n        const { details, isRosFeatureEnabled } = this.props;\n        if (details.showOptimizations) {\n            return isRosFeatureEnabled ? this.getOptimizationsSummary() : null;\n        }\n        return details.showHorizontal ? this.getHorizontalLayout() : this.getVerticalLayout();\n    }\n}\nexport default DashboardWidgetBase;\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { awsDashboardActions, awsDashboardSelectors, AwsDashboardTab } from 'store/dashboard/awsDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCostType, getCurrency } from 'utils/localStorage';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case AwsDashboardTab.services:\n            return 'service';\n        case AwsDashboardTab.accounts:\n            return 'account';\n        case AwsDashboardTab.regions:\n            return 'region';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), costType: getCostType(), getIdKeyForTab }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: awsDashboardActions.fetchWidgetForecasts,\n    fetchReports: awsDashboardActions.fetchWidgetReports,\n    updateTab: awsDashboardActions.changeWidgetTab,\n};\nconst AwsDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AwsDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { awsDashboardSelectors } from 'store/dashboard/awsDashboard';\nimport { AwsDashboardWidget } from './awsDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: AwsDashboardWidget,\n        selectWidgets: awsDashboardSelectors.selectWidgets(state),\n        widgets: awsDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default AwsDashboard;\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { awsOcpDashboardActions, awsOcpDashboardSelectors, AwsOcpDashboardTab } from 'store/dashboard/awsOcpDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCostType, getCurrency } from 'utils/localStorage';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case AwsOcpDashboardTab.services:\n            return 'service';\n        case AwsOcpDashboardTab.accounts:\n            return 'account';\n        case AwsOcpDashboardTab.regions:\n            return 'region';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsOcpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsOcpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), costType: getCostType(), getIdKeyForTab }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: awsOcpDashboardActions.fetchWidgetForecasts,\n    fetchReports: awsOcpDashboardActions.fetchWidgetReports,\n    updateTab: awsOcpDashboardActions.changeWidgetTab,\n};\nconst AwsOcpDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AwsOcpDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { awsOcpDashboardSelectors } from 'store/dashboard/awsOcpDashboard';\nimport { AwsOcpDashboardWidget } from './awsOcpDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: AwsOcpDashboardWidget,\n        selectWidgets: awsOcpDashboardSelectors.selectWidgets(state),\n        widgets: awsOcpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsOcpDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default AwsOcpDashboard;\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { azureDashboardActions, azureDashboardSelectors, AzureDashboardTab } from 'store/dashboard/azureDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case AzureDashboardTab.service_names:\n            return 'service_name';\n        case AzureDashboardTab.subscription_guids:\n            return 'subscription_guid';\n        case AzureDashboardTab.resource_locations:\n            return 'resource_location';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = azureDashboardSelectors.selectWidget(state, widgetId);\n    const queries = azureDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), getIdKeyForTab }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: azureDashboardActions.fetchWidgetForecasts,\n    fetchReports: azureDashboardActions.fetchWidgetReports,\n    updateTab: azureDashboardActions.changeWidgetTab,\n};\nconst AzureDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AzureDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { azureDashboardSelectors } from 'store/dashboard/azureDashboard';\nimport { AzureDashboardWidget } from './azureDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: AzureDashboardWidget,\n        selectWidgets: azureDashboardSelectors.selectWidgets(state),\n        widgets: azureDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AzureDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default AzureDashboard;\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { azureOcpDashboardActions, azureOcpDashboardSelectors, AzureOcpDashboardTab, } from 'store/dashboard/azureOcpDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case AzureOcpDashboardTab.service_names:\n            return 'service_name';\n        case AzureOcpDashboardTab.subscription_guids:\n            return 'subscription_guid';\n        case AzureOcpDashboardTab.resource_locations:\n            return 'resource_location';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = azureOcpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = azureOcpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), getIdKeyForTab }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: azureOcpDashboardActions.fetchWidgetForecasts,\n    fetchReports: azureOcpDashboardActions.fetchWidgetReports,\n    updateTab: azureOcpDashboardActions.changeWidgetTab,\n};\nconst AzureOcpDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AzureOcpDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { azureOcpDashboardSelectors } from 'store/dashboard/azureOcpDashboard';\nimport { AzureOcpDashboardWidget } from './azureOcpDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: AzureOcpDashboardWidget,\n        selectWidgets: azureOcpDashboardSelectors.selectWidgets(state),\n        widgets: azureOcpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AzureOcpDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default AzureOcpDashboard;\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { gcpDashboardActions, gcpDashboardSelectors, GcpDashboardTab } from 'store/dashboard/gcpDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case GcpDashboardTab.gcpProjects:\n            return 'gcp_project';\n        case GcpDashboardTab.regions:\n            return 'region';\n        case GcpDashboardTab.services:\n            return 'service';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = gcpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = gcpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), getIdKeyForTab }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: gcpDashboardActions.fetchWidgetForecasts,\n    fetchReports: gcpDashboardActions.fetchWidgetReports,\n    updateTab: gcpDashboardActions.changeWidgetTab,\n};\nconst GcpDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { GcpDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { gcpDashboardSelectors } from 'store/dashboard/gcpDashboard';\nimport { GcpDashboardWidget } from './gcpDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: GcpDashboardWidget,\n        selectWidgets: gcpDashboardSelectors.selectWidgets(state),\n        widgets: gcpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst GcpDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default GcpDashboard;\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { gcpOcpDashboardActions, gcpOcpDashboardSelectors, GcpOcpDashboardTab } from 'store/dashboard/gcpOcpDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case GcpOcpDashboardTab.gcpProjects:\n            return 'gcp_project';\n        case GcpOcpDashboardTab.regions:\n            return 'region';\n        case GcpOcpDashboardTab.services:\n            return 'service';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = gcpOcpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = gcpOcpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), getIdKeyForTab }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: gcpOcpDashboardActions.fetchWidgetForecasts,\n    fetchReports: gcpOcpDashboardActions.fetchWidgetReports,\n    updateTab: gcpOcpDashboardActions.changeWidgetTab,\n};\nconst GcpOcpDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { GcpOcpDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { gcpOcpDashboardSelectors } from 'store/dashboard/gcpOcpDashboard';\nimport { GcpOcpDashboardWidget } from './gcpOcpDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: GcpOcpDashboardWidget,\n        selectWidgets: gcpOcpDashboardSelectors.selectWidgets(state),\n        widgets: gcpOcpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst GcpOcpDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default GcpOcpDashboard;\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { ibmDashboardActions, ibmDashboardSelectors, IbmDashboardTab } from 'store/dashboard/ibmDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case IbmDashboardTab.services:\n            return 'service';\n        case IbmDashboardTab.projects:\n            return 'project';\n        case IbmDashboardTab.regions:\n            return 'region';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ibmDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ibmDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), getIdKeyForTab }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: ibmDashboardActions.fetchWidgetForecasts,\n    fetchReports: ibmDashboardActions.fetchWidgetReports,\n    updateTab: ibmDashboardActions.changeWidgetTab,\n};\nconst IbmDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { IbmDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { ibmDashboardSelectors } from 'store/dashboard/ibmDashboard';\nimport { IbmDashboardWidget } from './ibmDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: IbmDashboardWidget,\n        selectWidgets: ibmDashboardSelectors.selectWidgets(state),\n        widgets: ibmDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst IbmDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default IbmDashboard;\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardActions, ocpCloudDashboardSelectors, OcpCloudDashboardTab, } from 'store/dashboard/ocpCloudDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case OcpCloudDashboardTab.accounts:\n            return 'account';\n        case OcpCloudDashboardTab.regions:\n            return 'region';\n        case OcpCloudDashboardTab.services:\n            return 'service';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), getIdKeyForTab }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: ocpCloudDashboardActions.fetchWidgetForecasts,\n    fetchReports: ocpCloudDashboardActions.fetchWidgetReports,\n    updateTab: ocpCloudDashboardActions.changeWidgetTab,\n};\nconst OcpCloudDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpCloudDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardSelectors } from 'store/dashboard/ocpCloudDashboard';\nimport { OcpCloudDashboardWidget } from './ocpCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: OcpCloudDashboardWidget,\n        selectWidgets: ocpCloudDashboardSelectors.selectWidgets(state),\n        widgets: ocpCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpCloudDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default OcpCloudDashboard;\n","export const chartStyles = {\n    chartAltHeight: 250,\n    containerAltHeight: 250,\n};\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardActions, ocpDashboardSelectors, OcpDashboardTab } from 'store/dashboard/ocpDashboard';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { rosSelectors } from 'store/ros';\nimport { getCurrency } from 'utils/localStorage';\nimport { chartStyles } from './ocpDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case OcpDashboardTab.clusters:\n            return 'cluster';\n        case OcpDashboardTab.nodes:\n            return 'node';\n        case OcpDashboardTab.projects:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), getIdKeyForTab, chartAltHeight: chartStyles.chartAltHeight, containerAltHeight: chartStyles.containerAltHeight }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    })), (widget.rosPathsType &&\n        widget.rosType && {\n        isRosFeatureEnabled: featureFlagsSelectors.selectIsRosFeatureEnabled(state),\n        rosReport: rosSelectors.selectRos(state, widget.rosPathsType, widget.rosType, queries.optimizations),\n        rosReportError: rosSelectors.selectRosError(state, widget.rosPathsType, widget.rosType, queries.optimizations),\n        rosReportFetchStatus: rosSelectors.selectRosFetchStatus(state, widget.rosPathsType, widget.rosType, queries.optimizations),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: ocpDashboardActions.fetchWidgetForecasts,\n    fetchReports: ocpDashboardActions.fetchWidgetReports,\n    fetchRosReports: ocpDashboardActions.fetchWidgetRosReports,\n    updateTab: ocpDashboardActions.changeWidgetTab,\n};\nconst OcpDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardSelectors } from 'store/dashboard/ocpDashboard';\nimport { OcpDashboardWidget } from './ocpDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: OcpDashboardWidget,\n        selectWidgets: ocpDashboardSelectors.selectWidgets(state),\n        widgets: ocpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default OcpDashboard;\n","export const chartStyles = {\n    chartAltHeight: 250,\n    containerAltHeight: 250,\n};\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { rhelDashboardActions, rhelDashboardSelectors, RhelDashboardTab } from 'store/dashboard/rhelDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nimport { chartStyles } from './rhelDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case RhelDashboardTab.clusters:\n            return 'cluster';\n        case RhelDashboardTab.nodes:\n            return 'node';\n        case RhelDashboardTab.projects:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = rhelDashboardSelectors.selectWidget(state, widgetId);\n    const queries = rhelDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), getIdKeyForTab, chartAltHeight: chartStyles.chartAltHeight, containerAltHeight: chartStyles.containerAltHeight }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: rhelDashboardActions.fetchWidgetForecasts,\n    fetchReports: rhelDashboardActions.fetchWidgetReports,\n    updateTab: rhelDashboardActions.changeWidgetTab,\n};\nconst RhelDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { RhelDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { rhelDashboardSelectors } from 'store/dashboard/rhelDashboard';\nimport { RhelDashboardWidget } from './rhelDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: RhelDashboardWidget,\n        selectWidgets: rhelDashboardSelectors.selectWidgets(state),\n        widgets: rhelDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst RhelDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default RhelDashboard;\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { ociDashboardActions, ociDashboardSelectors, OciDashboardTab } from 'store/dashboard/ociDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case OciDashboardTab.product_services:\n            return 'product_service';\n        case OciDashboardTab.payer_tenant_ids:\n            return 'payer_tenant_id';\n        case OciDashboardTab.regions:\n            return 'region';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ociDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ociDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), getIdKeyForTab }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: ociDashboardActions.fetchWidgetForecasts,\n    fetchReports: ociDashboardActions.fetchWidgetReports,\n    updateTab: ociDashboardActions.changeWidgetTab,\n};\nconst OciDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OciDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { ociDashboardSelectors } from 'store/dashboard/ociDashboard';\nimport { OciDashboardWidget } from './ociDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: OciDashboardWidget,\n        selectWidgets: ociDashboardSelectors.selectWidgets(state),\n        widgets: ociDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OciDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default OciDashboard;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    date: {\n        alignSelf: 'center',\n        flexGrow: 1,\n        textAlign: 'end',\n    },\n    costType: {\n        marginLeft: global_spacer_md.var,\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentLeft: {\n        display: 'flex',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    main: {\n        padding: global_spacer_lg.value,\n    },\n    tabs: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        paddingBottom: global_spacer_lg.var,\n        paddingTop: global_spacer_lg.var,\n    },\n};\n","import './overview.scss';\nimport { Button, ButtonVariant, Popover, Tab, TabContent, Tabs, TabTitleText, Title, TitleSizes, } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon';\nimport { ProviderType } from 'api/providers';\nimport { getQueryRoute, parseQuery } from 'api/queries/overviewQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { getUserAccessQuery } from 'api/queries/userAccessQuery';\nimport { UserAccessType } from 'api/userAccess';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { CostType } from 'routes/components/costType';\nimport { Currency } from 'routes/components/currency';\nimport { Loading } from 'routes/components/page/loading';\nimport NoData from 'routes/components/page/noData/noData';\nimport { NoProviders } from 'routes/components/page/noProviders';\nimport { Perspective } from 'routes/components/perspective';\nimport { AwsDashboard } from 'routes/overview/awsDashboard';\nimport { AwsOcpDashboard } from 'routes/overview/awsOcpDashboard';\nimport { AzureDashboard } from 'routes/overview/azureDashboard';\nimport { AzureOcpDashboard } from 'routes/overview/azureOcpDashboard';\nimport { GcpDashboard } from 'routes/overview/gcpDashboard';\nimport { GcpOcpDashboard } from 'routes/overview/gcpOcpDashboard';\nimport { IbmDashboard } from 'routes/overview/ibmDashboard';\nimport { OcpCloudDashboard } from 'routes/overview/ocpCloudDashboard';\nimport { OcpDashboard } from 'routes/overview/ocpDashboard';\nimport { RhelDashboard } from 'routes/overview/rhelDashboard';\nimport { filterProviders, hasCloudCurrentMonthData, hasCloudData, hasCloudPreviousMonthData, hasCloudProvider, hasCurrentMonthData, hasPreviousMonthData, } from 'routes/utils/providers';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { userAccessQuery, userAccessSelectors } from 'store/userAccess';\nimport { getSinceDateRangeString } from 'utils/dates';\nimport { getCostType, getCurrency } from 'utils/localStorage';\nimport { withRouter } from 'utils/router';\nimport { hasAwsAccess, hasAzureAccess, hasGcpAccess, hasIbmAccess, isAwsAvailable, isAzureAvailable, isGcpAvailable, isIbmAvailable, isOciAvailable, isOcpAvailable, isRhelAvailable, } from 'utils/userAccess';\nimport { OciDashboard } from './ociDashboard';\nimport { styles } from './overview.styles';\n// eslint-disable-next-line no-shadow\nvar InfrastructurePerspective;\n(function (InfrastructurePerspective) {\n    InfrastructurePerspective[\"aws\"] = \"aws\";\n    InfrastructurePerspective[\"awsOcp\"] = \"aws_ocp\";\n    InfrastructurePerspective[\"azure\"] = \"azure\";\n    InfrastructurePerspective[\"azureOcp\"] = \"azure_ocp\";\n    InfrastructurePerspective[\"gcp\"] = \"gcp\";\n    InfrastructurePerspective[\"gcpOcp\"] = \"gcp_ocp\";\n    InfrastructurePerspective[\"ibm\"] = \"ibm\";\n    InfrastructurePerspective[\"ibmOcp\"] = \"ibm_ocp\";\n    InfrastructurePerspective[\"oci\"] = \"oci\";\n    InfrastructurePerspective[\"ocpCloud\"] = \"ocp_cloud\";\n})(InfrastructurePerspective || (InfrastructurePerspective = {}));\n// eslint-disable-next-line no-shadow\nvar OcpPerspective;\n(function (OcpPerspective) {\n    OcpPerspective[\"ocp\"] = \"ocp\";\n})(OcpPerspective || (OcpPerspective = {}));\n// eslint-disable-next-line no-shadow\nvar OverviewTab;\n(function (OverviewTab) {\n    OverviewTab[\"infrastructure\"] = \"infrastructure\";\n    OverviewTab[\"ocp\"] = \"ocp\";\n    OverviewTab[\"rhel\"] = \"rhel\";\n})(OverviewTab || (OverviewTab = {}));\n// eslint-disable-next-line no-shadow\nvar RhelPerspective;\n(function (RhelPerspective) {\n    RhelPerspective[\"rhel\"] = \"rhel\";\n})(RhelPerspective || (RhelPerspective = {}));\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case OverviewTab.infrastructure:\n            return 'infrastructure';\n        case OverviewTab.ocp:\n            return 'ocp';\n        case OverviewTab.rhel:\n            return 'rhel';\n    }\n};\nclass OverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            activeTabKey: 0,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getAvailableTabs = () => {\n            const { isFinsightsFeatureEnabled } = this.props;\n            const availableTabs = [];\n            const infrastructureTabs = this.isAwsAvailable() ||\n                this.isAzureAvailable() ||\n                this.isGcpAvailable() ||\n                this.isIbmAvailable() ||\n                this.isOciAvailable() ||\n                this.isOcpCloudAvailable()\n                ? [\n                    {\n                        contentRef: React.createRef(),\n                        tab: OverviewTab.infrastructure,\n                    },\n                ]\n                : undefined;\n            const ocpTabs = this.isOcpAvailable()\n                ? [\n                    {\n                        contentRef: React.createRef(),\n                        tab: OverviewTab.ocp,\n                    },\n                ]\n                : undefined;\n            const rhelTabs = this.isRhelAvailable()\n                ? [\n                    {\n                        contentRef: React.createRef(),\n                        tab: OverviewTab.rhel,\n                    },\n                ]\n                : undefined;\n            if (isFinsightsFeatureEnabled) {\n                if (infrastructureTabs) {\n                    availableTabs.push(...infrastructureTabs);\n                }\n                if (rhelTabs) {\n                    availableTabs.push(...rhelTabs);\n                }\n                if (ocpTabs) {\n                    availableTabs.push(...ocpTabs);\n                }\n            }\n            else {\n                if (ocpTabs) {\n                    availableTabs.push(...ocpTabs);\n                }\n                if (infrastructureTabs) {\n                    availableTabs.push(...infrastructureTabs);\n                }\n            }\n            return availableTabs;\n        };\n        this.getCostType = () => {\n            const { costType } = this.props;\n            const { currentInfrastructurePerspective, currentOcpPerspective } = this.state;\n            const currentItem = this.getCurrentTab() === OverviewTab.infrastructure ? currentInfrastructurePerspective : currentOcpPerspective;\n            if (currentItem === InfrastructurePerspective.aws || currentItem === InfrastructurePerspective.awsOcp) {\n                return (React.createElement(\"div\", { style: styles.costType },\n                    React.createElement(CostType, { costType: costType, onSelect: this.handleOnCostTypeSelected })));\n            }\n            return null;\n        };\n        this.getCurrency = () => {\n            const { currency } = this.props;\n            return React.createElement(Currency, { onSelect: this.handleOnCurrencySelected, currency: currency });\n        };\n        this.getCurrentTab = () => {\n            const { isFinsightsFeatureEnabled } = this.props;\n            const { activeTabKey } = this.state;\n            const hasAws = this.isAwsAvailable();\n            const hasAzure = this.isAzureAvailable();\n            const hasOci = this.isOciAvailable();\n            const hasGcp = this.isGcpAvailable();\n            const hasIbm = this.isIbmAvailable();\n            const hasOcp = this.isOcpAvailable();\n            const hasOcpCloud = this.isOcpCloudAvailable();\n            const hasRhel = this.isRhelAvailable();\n            const hasInfrastructure = hasAws || hasAzure || hasOci || hasGcp || hasIbm || hasOcpCloud;\n            const showInfrastructureOnly = hasInfrastructure && !hasOcp && !hasRhel;\n            const showOcpOnly = hasOcp && !hasInfrastructure && !hasRhel;\n            const showRhelOnly = hasRhel && !hasInfrastructure && !hasOcp;\n            if (showOcpOnly) {\n                return OverviewTab.ocp;\n            }\n            else if (showInfrastructureOnly) {\n                return OverviewTab.infrastructure;\n            }\n            else if (showRhelOnly) {\n                return OverviewTab.rhel;\n            }\n            else {\n                if (isFinsightsFeatureEnabled) {\n                    switch (activeTabKey) {\n                        case 0:\n                            return OverviewTab.infrastructure;\n                        case 1:\n                            return OverviewTab.rhel;\n                        case 2:\n                            return OverviewTab.ocp;\n                    }\n                }\n                switch (activeTabKey) {\n                    case 0:\n                        return OverviewTab.ocp;\n                    case 1:\n                        return OverviewTab.infrastructure;\n                }\n            }\n        };\n        this.getDefaultInfrastructurePerspective = () => {\n            const { perspective } = this.props;\n            // Upon page refresh, perspective param takes precedence\n            switch (perspective) {\n                case InfrastructurePerspective.aws:\n                case InfrastructurePerspective.awsOcp:\n                case InfrastructurePerspective.azure:\n                case InfrastructurePerspective.oci:\n                case InfrastructurePerspective.azureOcp:\n                case InfrastructurePerspective.gcp:\n                case InfrastructurePerspective.gcpOcp:\n                case InfrastructurePerspective.ibm:\n                case InfrastructurePerspective.ibmOcp:\n                case InfrastructurePerspective.ocpCloud:\n                    return perspective;\n            }\n            if (this.isOcpCloudAvailable()) {\n                return InfrastructurePerspective.ocpCloud;\n            }\n            if (this.isAwsAvailable()) {\n                return InfrastructurePerspective.aws;\n            }\n            if (this.isAzureAvailable()) {\n                return InfrastructurePerspective.azure;\n            }\n            if (this.isOciAvailable()) {\n                return InfrastructurePerspective.oci;\n            }\n            if (this.isGcpAvailable()) {\n                return InfrastructurePerspective.gcp;\n            }\n            if (this.isIbmAvailable()) {\n                return InfrastructurePerspective.ibm;\n            }\n            return undefined;\n        };\n        this.getDefaultOcpPerspective = () => {\n            const { ocpProviders, perspective, userAccess } = this.props;\n            // Upon page refresh, perspective param takes precedence\n            switch (perspective) {\n                case OcpPerspective.ocp:\n                    return perspective;\n            }\n            if (isOcpAvailable(userAccess, ocpProviders)) {\n                return OcpPerspective.ocp;\n            }\n            return undefined;\n        };\n        this.getDefaultRhelPerspective = () => {\n            const { perspective, rhelProviders, userAccess } = this.props;\n            // Upon page refresh, perspective param takes precedence\n            switch (perspective) {\n                case RhelPerspective.rhel:\n                    return perspective;\n            }\n            if (isRhelAvailable(userAccess, rhelProviders)) {\n                return RhelPerspective.rhel;\n            }\n            return undefined;\n        };\n        this.getPerspective = () => {\n            const { isIbmFeatureEnabled } = this.props;\n            const { currentInfrastructurePerspective, currentOcpPerspective, currentRhelPerspective } = this.state;\n            const hasAws = this.isAwsAvailable();\n            const hasAzure = this.isAzureAvailable();\n            const hasGcp = this.isGcpAvailable();\n            const hasIbm = this.isIbmAvailable();\n            const hasOci = this.isOciAvailable();\n            const hasOcp = this.isOcpAvailable();\n            const hasRhel = this.isRhelAvailable();\n            // Note: No need to test \"OCP on cloud\" here, since that requires at least one of the providers below\n            if (!(hasAws || hasAzure || hasGcp || hasIbm || hasOci || hasOcp || hasRhel)) {\n                return null;\n            }\n            let currentItem;\n            const currentTab = this.getCurrentTab();\n            switch (currentTab) {\n                case OverviewTab.infrastructure:\n                    currentItem = currentInfrastructurePerspective;\n                    break;\n                case OverviewTab.ocp:\n                    currentItem = currentOcpPerspective;\n                    break;\n                case OverviewTab.rhel:\n                    currentItem = currentRhelPerspective;\n                    break;\n            }\n            return (React.createElement(Perspective, { currentItem: currentItem, hasAws: hasAws, hasAwsOcp: this.isAwsOcpAvailable(), hasAzure: hasAzure, hasAzureOcp: this.isAzureOcpAvailable(), hasGcp: hasGcp, hasGcpOcp: this.isGcpOcpAvailable(), hasIbm: hasIbm, hasIbmOcp: this.isIbmOcpAvailable(), hasOci: hasOci, hasOcp: hasOcp, hasOcpCloud: this.isOcpCloudAvailable(), hasRhel: hasRhel, isIbmFeatureEnabled: isIbmFeatureEnabled, isInfrastructureTab: OverviewTab.infrastructure === currentTab, isRhelTab: OverviewTab.rhel === currentTab, onSelected: this.handlePerspectiveSelected }));\n        };\n        this.getRouteForQuery = (query) => {\n            const { router } = this.props;\n            return `${router.location.pathname}?${getQueryRoute(query)}`;\n        };\n        this.getTab = (tab, contentRef, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, tabContentId: `tab-${index}`, tabContentRef: contentRef, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) }));\n        };\n        this.getTabContent = (availableTabs) => {\n            return availableTabs.map((val, index) => {\n                return (React.createElement(TabContent, { eventKey: index, key: `${getIdKeyForTab(val.tab)}-tabContent`, id: `tab-${index}`, ref: val.contentRef }, this.getTabItem(val.tab, index)));\n            });\n        };\n        this.getTabItem = (tab, index) => {\n            const { awsProviders, azureProviders, ociProviders, costType, currency, gcpProviders, ibmProviders, ocpProviders, rhelProviders, } = this.props;\n            const { activeTabKey, currentInfrastructurePerspective, currentOcpPerspective, currentRhelPerspective } = this.state;\n            const emptyTab = React.createElement(React.Fragment, null); // Lazily load tabs\n            const noData = React.createElement(NoData, { showReload: false });\n            if (activeTabKey !== index) {\n                return emptyTab;\n            }\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === OverviewTab.infrastructure) {\n                if (currentInfrastructurePerspective === InfrastructurePerspective.ocpCloud) {\n                    const hasData = hasCloudData(awsProviders, ocpProviders) ||\n                        hasCloudData(azureProviders, ocpProviders) ||\n                        hasCloudData(gcpProviders, ocpProviders) ||\n                        hasCloudData(ibmProviders, ocpProviders);\n                    return hasData ? React.createElement(OcpCloudDashboard, { currency: currency }) : noData;\n                }\n                else if (currentInfrastructurePerspective === InfrastructurePerspective.aws) {\n                    const hasData = hasCurrentMonthData(awsProviders) || hasPreviousMonthData(awsProviders);\n                    return hasData ? React.createElement(AwsDashboard, { costType: costType }) : noData;\n                }\n                else if (currentInfrastructurePerspective === InfrastructurePerspective.awsOcp) {\n                    const hasData = hasCloudCurrentMonthData(awsProviders, ocpProviders) || hasCloudPreviousMonthData(awsProviders, ocpProviders);\n                    return hasData ? React.createElement(AwsOcpDashboard, { currency: currency }) : noData;\n                }\n                else if (currentInfrastructurePerspective === InfrastructurePerspective.azure) {\n                    const hasData = hasCurrentMonthData(azureProviders) || hasPreviousMonthData(azureProviders);\n                    return hasData ? React.createElement(AzureDashboard, { currency: currency }) : noData;\n                }\n                else if (currentInfrastructurePerspective === InfrastructurePerspective.azureOcp) {\n                    const hasData = hasCloudCurrentMonthData(azureProviders, ocpProviders) ||\n                        hasCloudPreviousMonthData(azureProviders, ocpProviders);\n                    return hasData ? React.createElement(AzureOcpDashboard, { currency: currency }) : noData;\n                }\n                else if (currentInfrastructurePerspective === InfrastructurePerspective.gcp) {\n                    const hasData = hasCurrentMonthData(gcpProviders) || hasPreviousMonthData(gcpProviders);\n                    return hasData ? React.createElement(GcpDashboard, { currency: currency }) : noData;\n                }\n                else if (currentInfrastructurePerspective === InfrastructurePerspective.gcpOcp) {\n                    const hasData = hasCloudCurrentMonthData(gcpProviders, ocpProviders) || hasCloudPreviousMonthData(gcpProviders, ocpProviders);\n                    return hasData ? React.createElement(GcpOcpDashboard, { currency: currency }) : noData;\n                }\n                else if (currentInfrastructurePerspective === InfrastructurePerspective.ibm) {\n                    const hasData = hasCurrentMonthData(ibmProviders) || hasPreviousMonthData(ibmProviders);\n                    return hasData ? React.createElement(IbmDashboard, { currency: currency }) : noData;\n                }\n                else if (currentInfrastructurePerspective === InfrastructurePerspective.oci) {\n                    const hasData = hasCurrentMonthData(ociProviders) || hasPreviousMonthData(ociProviders);\n                    return hasData ? React.createElement(OciDashboard, { currency: currency }) : noData;\n                }\n                else {\n                    return noData;\n                }\n            }\n            else if (currentTab === OverviewTab.ocp) {\n                const hasData = hasCurrentMonthData(ocpProviders) || hasPreviousMonthData(ocpProviders);\n                if (currentOcpPerspective === OcpPerspective.ocp) {\n                    return hasData ? React.createElement(OcpDashboard, { currency: currency }) : noData;\n                }\n                else {\n                    return noData;\n                }\n            }\n            else if (currentTab === OverviewTab.rhel) {\n                const hasData = hasCurrentMonthData(rhelProviders) || hasPreviousMonthData(rhelProviders);\n                if (currentRhelPerspective === RhelPerspective.rhel) {\n                    return hasData ? React.createElement(RhelDashboard, { currency: currency }) : noData;\n                }\n                else {\n                    return noData;\n                }\n            }\n            else {\n                return emptyTab;\n            }\n        };\n        this.getTabs = (availableTabs) => {\n            const { activeTabKey } = this.state;\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((val, index) => this.getTab(val.tab, val.contentRef, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { intl, isFinsightsFeatureEnabled } = this.props;\n            if (tab === OverviewTab.infrastructure) {\n                if (isFinsightsFeatureEnabled) {\n                    return intl.formatMessage(messages.summary);\n                }\n                return intl.formatMessage(messages.infrastructure);\n            }\n            else if (tab === OverviewTab.ocp) {\n                return intl.formatMessage(messages.openShift);\n            }\n            else if (tab === OverviewTab.rhel) {\n                return intl.formatMessage(messages.rhel);\n            }\n        };\n        this.handleOnCostTypeSelected = () => {\n            const { query, router } = this.props;\n            const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n            router.navigate(this.getRouteForQuery(newQuery), { replace: true });\n        };\n        this.handleOnCurrencySelected = () => {\n            const { router, query } = this.props;\n            const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n            router.navigate(this.getRouteForQuery(newQuery), { replace: true });\n        };\n        this.handlePerspectiveSelected = (value) => {\n            const { query, router } = this.props;\n            const currentTab = this.getCurrentTab();\n            this.setState(Object.assign(Object.assign({}, (currentTab === OverviewTab.infrastructure && {\n                currentInfrastructurePerspective: value,\n            })), (currentTab === OverviewTab.ocp && { currentOcpPerspective: value })), () => {\n                const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { perspective: value });\n                router.navigate(this.getRouteForQuery(newQuery), { replace: true });\n            });\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { query, router } = this.props;\n            const { activeTabKey } = this.state;\n            if (activeTabKey !== tabIndex) {\n                this.setState({\n                    activeTabKey: tabIndex,\n                }, () => {\n                    const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { tabKey: tabIndex });\n                    router.navigate(this.getRouteForQuery(newQuery), { replace: true });\n                });\n            }\n        };\n        this.isAwsAvailable = () => {\n            const { awsProviders, userAccess } = this.props;\n            return isAwsAvailable(userAccess, awsProviders);\n        };\n        this.isAwsOcpAvailable = () => {\n            const { awsProviders, ocpProviders, userAccess } = this.props;\n            return hasAwsAccess(userAccess) && hasCloudProvider(awsProviders, ocpProviders);\n        };\n        this.isAzureAvailable = () => {\n            const { azureProviders, userAccess } = this.props;\n            return isAzureAvailable(userAccess, azureProviders);\n        };\n        this.isAzureOcpAvailable = () => {\n            const { azureProviders, ocpProviders, userAccess } = this.props;\n            return hasAzureAccess(userAccess) && hasCloudProvider(azureProviders, ocpProviders);\n        };\n        this.isGcpAvailable = () => {\n            const { gcpProviders, userAccess } = this.props;\n            return isGcpAvailable(userAccess, gcpProviders);\n        };\n        this.isGcpOcpAvailable = () => {\n            const { gcpProviders, ocpProviders, userAccess } = this.props;\n            return hasGcpAccess(userAccess) && hasCloudProvider(gcpProviders, ocpProviders);\n        };\n        this.isIbmAvailable = () => {\n            const { ibmProviders, userAccess } = this.props;\n            return isIbmAvailable(userAccess, ibmProviders);\n        };\n        this.isIbmOcpAvailable = () => {\n            const { ibmProviders, ocpProviders, userAccess } = this.props;\n            return hasIbmAccess(userAccess) && hasCloudProvider(ibmProviders, ocpProviders);\n        };\n        this.isOciAvailable = () => {\n            const { ociProviders, userAccess } = this.props;\n            return isOciAvailable(userAccess, ociProviders);\n        };\n        this.isOcpAvailable = () => {\n            const { ocpProviders, userAccess } = this.props;\n            return isOcpAvailable(userAccess, ocpProviders);\n        };\n        this.isOcpCloudAvailable = () => {\n            const hasAwsOcp = this.isAwsOcpAvailable();\n            const hasAzureOcp = this.isAzureOcpAvailable();\n            const hasGcpOcp = this.isGcpOcpAvailable();\n            const hasIbmOcp = this.isIbmOcpAvailable();\n            return hasAwsOcp || hasAzureOcp || hasGcpOcp || hasIbmOcp;\n        };\n        this.isRhelAvailable = () => {\n            const { isFinsightsFeatureEnabled, rhelProviders, userAccess } = this.props;\n            return isFinsightsFeatureEnabled && isRhelAvailable(userAccess, rhelProviders);\n        };\n    }\n    componentDidMount() {\n        const { tabKey } = this.props;\n        this.setState({\n            activeTabKey: tabKey,\n            currentInfrastructurePerspective: this.getDefaultInfrastructurePerspective(),\n            currentOcpPerspective: this.getDefaultOcpPerspective(),\n            currentRhelPerspective: this.getDefaultRhelPerspective(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { providers, tabKey, userAccess } = this.props;\n        // Note: User access and providers are fetched via the AccountSettings component used by all routes\n        if (prevProps.userAccess !== userAccess || prevProps.providers !== providers) {\n            this.setState({\n                activeTabKey: tabKey,\n                currentInfrastructurePerspective: this.getDefaultInfrastructurePerspective(),\n                currentOcpPerspective: this.getDefaultOcpPerspective(),\n                currentRhelPerspective: this.getDefaultRhelPerspective(),\n            });\n        }\n    }\n    render() {\n        const { providersFetchStatus, intl, isFinsightsFeatureEnabled, isIbmFeatureEnabled, userAccessFetchStatus } = this.props;\n        // Note: No need to test OCP on cloud here, since that requires at least one provider\n        const noProviders = providersFetchStatus === FetchStatus.complete &&\n            !this.isAwsAvailable() &&\n            !this.isAzureAvailable() &&\n            !this.isGcpAvailable() &&\n            !this.isIbmAvailable() &&\n            !this.isOciAvailable() &&\n            !this.isOcpAvailable() &&\n            !this.isRhelAvailable();\n        const isLoading = providersFetchStatus === FetchStatus.inProgress || userAccessFetchStatus === FetchStatus.inProgress;\n        const availableTabs = this.getAvailableTabs();\n        const title = intl.formatMessage(messages.overviewTitle);\n        if (isLoading) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (noProviders) {\n            return React.createElement(NoProviders, { title: title });\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"header\", { style: styles.header },\n                React.createElement(\"div\", { style: styles.headerContent },\n                    React.createElement(Title, { headingLevel: \"h1\", size: TitleSizes['2xl'] },\n                        title,\n                        React.createElement(\"span\", { style: styles.infoIcon },\n                            React.createElement(Popover, { \"aria-label\": intl.formatMessage(messages.overviewInfoArialLabel), enableFlip: true, bodyContent: React.createElement(React.Fragment, null,\n                                    React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.openShiftCloudInfrastructure)),\n                                    React.createElement(\"p\", null, intl.formatMessage(messages.openShiftCloudInfrastructureDesc)),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.openShift)),\n                                    React.createElement(\"p\", null, intl.formatMessage(messages.openShiftDesc)),\n                                    React.createElement(\"br\", null),\n                                    isFinsightsFeatureEnabled && (React.createElement(React.Fragment, null,\n                                        React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.rhel)),\n                                        React.createElement(\"p\", null, intl.formatMessage(messages.rhelDesc)),\n                                        React.createElement(\"br\", null))),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.aws)),\n                                    React.createElement(\"p\", null, intl.formatMessage(messages.awsDesc)),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.gcp)),\n                                    React.createElement(\"p\", null, intl.formatMessage(messages.gcpDesc)),\n                                    isIbmFeatureEnabled && (React.createElement(React.Fragment, null,\n                                        React.createElement(\"br\", null),\n                                        React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.ibm)),\n                                        React.createElement(\"p\", null, intl.formatMessage(messages.ibmDesc)))),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.azure)),\n                                    React.createElement(\"p\", null, intl.formatMessage(messages.azureDesc)),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.oci)),\n                                    React.createElement(\"p\", null, intl.formatMessage(messages.ociDesc))) },\n                                React.createElement(Button, { \"aria-label\": intl.formatMessage(messages.overviewInfoButtonArialLabel), variant: ButtonVariant.plain },\n                                    React.createElement(OutlinedQuestionCircleIcon, null))))),\n                    React.createElement(\"div\", { style: styles.headerContentRight }, this.getCurrency())),\n                React.createElement(\"div\", { style: styles.tabs }, this.getTabs(availableTabs)),\n                React.createElement(\"div\", { style: styles.headerContent },\n                    React.createElement(\"div\", { style: styles.headerContentLeft },\n                        this.getPerspective(),\n                        this.getCostType()),\n                    React.createElement(\"div\", { style: styles.date }, getSinceDateRangeString()))),\n            React.createElement(\"div\", { style: styles.main }, this.getTabContent(availableTabs))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const tabKey = queryFromRoute.tabKey && !Number.isNaN(queryFromRoute.tabKey) ? Number(queryFromRoute.tabKey) : 0;\n    const perspective = queryFromRoute.perspective;\n    const currency = getCurrency();\n    const costType = perspective === InfrastructurePerspective.aws || perspective === InfrastructurePerspective.awsOcp\n        ? getCostType()\n        : undefined;\n    const query = Object.assign({}, queryFromRoute);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    const userAccessQueryString = getUserAccessQuery(userAccessQuery);\n    const userAccess = userAccessSelectors.selectUserAccess(state, UserAccessType.all, userAccessQueryString);\n    const userAccessError = userAccessSelectors.selectUserAccessError(state, UserAccessType.all, userAccessQueryString);\n    const userAccessFetchStatus = userAccessSelectors.selectUserAccessFetchStatus(state, UserAccessType.all, userAccessQueryString);\n    return {\n        awsProviders: filterProviders(providers, ProviderType.aws),\n        azureProviders: filterProviders(providers, ProviderType.azure),\n        costType,\n        currency,\n        gcpProviders: filterProviders(providers, ProviderType.gcp),\n        ibmProviders: filterProviders(providers, ProviderType.ibm),\n        isFinsightsFeatureEnabled: featureFlagsSelectors.selectIsFinsightsFeatureEnabled(state),\n        isIbmFeatureEnabled: featureFlagsSelectors.selectIsIbmFeatureEnabled(state),\n        ociProviders: filterProviders(providers, ProviderType.oci),\n        ocpProviders: filterProviders(providers, ProviderType.ocp),\n        providers,\n        providersError,\n        providersFetchStatus,\n        perspective,\n        query,\n        rhelProviders: filterProviders(providers, ProviderType.rhel),\n        tabKey,\n        userAccess,\n        userAccessError,\n        userAccessFetchStatus,\n        userAccessQueryString,\n    };\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst Overview = injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(OverviewBase)));\nexport default Overview;\n","import * as utils from './query';\n// filter_by props are converted and returned with logical OR/AND prefix\nexport function getQuery(query) {\n    return utils.getQuery(query);\n}\n// filter_by props are not converted\nexport function getQueryRoute(query) {\n    return utils.getQueryRoute(query);\n}\nexport function parseQuery(query) {\n    return utils.parseQuery(query);\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costType: {\n        marginBottom: global_spacer_lg.var,\n        marginTop: global_spacer_lg.var,\n        width: 'fit-content',\n    },\n    costTypeContainer: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        paddingBottom: global_spacer_lg.var,\n        paddingLeft: global_spacer_lg.var,\n        paddingRight: global_spacer_lg.var,\n        paddingTop: global_spacer_lg.var,\n    },\n    currency: {\n        marginTop: global_spacer_lg.var,\n        width: 'fit-content',\n    },\n    currencyContainer: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        paddingBottom: global_spacer_lg.var,\n        paddingLeft: global_spacer_lg.var,\n        paddingRight: global_spacer_lg.var,\n        paddingTop: global_spacer_lg.var,\n    },\n    resetContainer: {\n        display: 'inline-block',\n        paddingLeft: global_spacer_md.var,\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { PageSection, Title, TitleSizes } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { CostType } from 'routes/components/costType';\nimport { Currency } from 'routes/components/currency';\nimport { createMapStateToProps } from 'store/common';\nimport { settingsActions, settingsSelectors } from 'store/settings';\nimport { getCostType, getCurrency, setAccountCurrency, setCostType, setCurrency } from 'utils/localStorage';\nimport { withRouter } from 'utils/router';\nimport { styles } from './calculations.styles';\nclass SettingsBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            currentCostType: getCostType(),\n            currentCurrency: getCurrency(),\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getCostType = () => {\n            const { intl } = this.props;\n            const { currentCostType } = this.state;\n            return (React.createElement(\"div\", { style: styles.costTypeContainer },\n                React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: TitleSizes.md }, intl.formatMessage(messages.costTypeSettingsLabel)),\n                intl.formatMessage(messages.costTypeSettingsDesc),\n                React.createElement(\"div\", { style: styles.costType },\n                    React.createElement(CostType, { costType: currentCostType, isLocalStorage: false, onSelect: this.handleOnCostTypeSelected, showLabel: false }))));\n        };\n        this.getCurrency = () => {\n            const { intl } = this.props;\n            const { currentCurrency } = this.state;\n            return (React.createElement(\"div\", { style: styles.currencyContainer },\n                React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: TitleSizes.md }, intl.formatMessage(messages.currency)),\n                intl.formatMessage(messages.currencyDesc),\n                React.createElement(\"div\", { style: styles.currency },\n                    React.createElement(Currency, { currency: currentCurrency, isLocalStorage: false, onSelect: this.handleOnCurrencySelected, showLabel: false }))));\n        };\n        this.handleOnCostTypeSelected = value => {\n            const { updateSettings } = this.props;\n            this.setState({ currentCostType: value }, () => {\n                setCostType(value);\n                updateSettings({\n                    api: {\n                        settings: {\n                            cost_type: value,\n                        },\n                    },\n                });\n            });\n        };\n        this.handleOnCurrencySelected = value => {\n            const { updateSettings } = this.props;\n            this.setState({ currentCurrency: value }, () => {\n                setCurrency(value);\n                setAccountCurrency(value); // Todo: remove account currency after settings page has been moved\n                updateSettings({\n                    api: {\n                        settings: {\n                            currency: value,\n                        },\n                    },\n                });\n            });\n        };\n    }\n    render() {\n        return (React.createElement(PageSection, { isFilled: true },\n            this.getCurrency(),\n            this.getCostType()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps(state => {\n    const updateSettingsStatus = settingsSelectors.selectSettingsUpdateStatus(state);\n    return {\n        updateSettingsStatus,\n    };\n});\nconst mapDispatchToProps = {\n    updateSettings: settingsActions.updateSettings,\n};\nconst Calculations = injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(SettingsBase)));\nexport default Calculations;\n","import { SortByDirection } from '@patternfly/react-table';\nexport const initialCostModelsQuery = {\n    limit: 10,\n    offset: 0,\n    ordering: null,\n    name: null,\n    source_type: null,\n    description: null,\n};\nexport const costModelsQueryKeys = Object.keys(initialCostModelsQuery);\nexport function stringifySearch(query) {\n    return Object.keys(query).reduce((acc, cur) => {\n        if (query[cur] === null) {\n            return acc;\n        }\n        return acc === '' ? `?${cur}=${query[cur]}` : `${acc}&${cur}=${query[cur]}`;\n    }, '');\n}\nexport function objectifySearch(search) {\n    if (!search) {\n        return initialCostModelsQuery;\n    }\n    const urlQuery = search\n        .slice(1)\n        .split('&')\n        .map(term => term.split('='))\n        .filter(key_value => key_value.length === 2);\n    const nameTerm = urlQuery.find(term => term[0] === 'name');\n    const sourceTypeTerm = urlQuery.find(term => term[0] === 'source_type');\n    const descriptionTerm = urlQuery.find(term => term[0] === 'description');\n    const orderingTerm = urlQuery.find(term => term[0] === 'ordering');\n    const limitTerm = urlQuery.find(term => term[0] === 'limit');\n    const offsetTerm = urlQuery.find(term => term[0] === 'offset');\n    return {\n        name: nameTerm === undefined ? null : nameTerm[1],\n        description: descriptionTerm === undefined ? null : descriptionTerm[1],\n        source_type: sourceTypeTerm === undefined ? null : sourceTypeTerm[1],\n        ordering: orderingTerm === undefined ? null : orderingTerm[1],\n        offset: offsetTerm === undefined ? 0 : Number(offsetTerm[1]),\n        limit: limitTerm === undefined ? 10 : Number(limitTerm[1]),\n    };\n}\nexport function parseOrdering(query, cells) {\n    const { ordering } = query;\n    if (ordering === null) {\n        return {};\n    }\n    const name = ordering[0] === '-' ? ordering.slice(1) : ordering;\n    const direction = ordering[0] === '-' ? SortByDirection.desc : SortByDirection.asc;\n    const index = cells.findIndex(cell => cell.data && cell.data.orderName === name);\n    return { index, direction };\n}\nexport function limitTransform(perPage) {\n    return perPage;\n}\nexport function offsetTransform(page, perPage) {\n    return (page - 1) * perPage;\n}\n","import { Pagination, PaginationVariant, Toolbar, ToolbarContent, ToolbarItem, ToolbarItemVariant, } from '@patternfly/react-core';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { costModelsSelectors } from 'store/costModels';\nimport { withRouter } from 'utils/router';\nimport { initialCostModelsQuery, limitTransform, offsetTransform, stringifySearch } from './utils/query';\nconst BottomPaginationBase = props => {\n    const { variant, intl = defaultIntl, // for testing\n    itemCount, page, perPage, onSetPage, onPerPageSelect, } = props;\n    return (React.createElement(Toolbar, null,\n        React.createElement(ToolbarContent, null,\n            React.createElement(ToolbarItem, { variant: ToolbarItemVariant.pagination },\n                React.createElement(Pagination, { onPerPageSelect: onPerPageSelect, onSetPage: onSetPage, variant: variant, itemCount: itemCount, page: page, perPage: perPage, titles: {\n                        paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                            title: intl.formatMessage(messages.costModelsDetailsTitle),\n                            placement: 'bottom',\n                        }),\n                    } })))));\n};\nconst mapStateToProps = (state) => {\n    const { count, page, perPage } = costModelsSelectors.pagination(state);\n    const query = costModelsSelectors.query(state);\n    return {\n        query,\n        count,\n        page,\n        perPage,\n    };\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { router } = ownProps;\n    const { count, page, perPage, query } = stateProps;\n    return {\n        itemCount: count,\n        page,\n        perPage,\n        variant: PaginationVariant.bottom,\n        onSetPage: (_evt, newPage, newPerPage) => {\n            router.navigate(stringifySearch(Object.assign(Object.assign(Object.assign({}, initialCostModelsQuery), query), { offset: offsetTransform(newPage, newPerPage) })));\n        },\n        onPerPageSelect: (_evt, newPerPage) => {\n            router.navigate(stringifySearch(Object.assign(Object.assign(Object.assign({}, initialCostModelsQuery), query), { limit: limitTransform(newPerPage), offset: 0 })));\n        },\n    };\n};\nexport const CostModelsBottomPagination = withRouter(connect(mapStateToProps, undefined, mergeProps)(injectIntl(BottomPaginationBase)));\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    descContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        padding: global_spacer_md.value,\n    },\n};\n","import { fetchProviders } from 'api/providers';\nexport const fetchSources = ({ type, page, perPage, query }) => {\n    const offset = (page - 1) * perPage;\n    const limit = perPage;\n    const queryParam = Object.keys(query).reduce((acc, cur) => (acc ? `${acc}&${cur}=${query[cur]}` : `${cur}=${query[cur]}`), '');\n    return fetchProviders(`type=${type}&limit=${limit}&offset=${offset}&${queryParam}`).then(sources => {\n        const payload = sources.data;\n        return payload.data.map(src => ({\n            name: src.name,\n            uuid: src.uuid,\n            costmodel: src.cost_models.map(cm => cm.name).join(','),\n            meta: payload.meta,\n        }));\n    });\n};\n// .then(sources => sources.data.data)\n","import React from 'react';\nimport { getAccountCurrency } from 'utils/localStorage';\nexport const defaultCostModelContext = {\n    apiError: null,\n    checked: {},\n    clearQuery: () => null,\n    createError: null,\n    createProcess: false,\n    createSuccess: false,\n    currencyUnits: getAccountCurrency(),\n    dataFetched: false,\n    description: '',\n    dirtyName: false,\n    distribution: '',\n    distributePlatformUnallocated: true,\n    distributeWorkerUnallocated: true,\n    error: null,\n    fetchSources: (type, query, page, perPage) => null,\n    filterName: '',\n    goToAddPL: (value) => null,\n    isDiscount: false,\n    handleMarkupDiscountChange: (...args) => null,\n    handleDistributionChange: (...args) => null,\n    handleDistributePlatformUnallocatedChange: (...args) => null,\n    handleDistributeWorkerUnallocatedChange: (...args) => null,\n    handleSignChange: (...args) => null,\n    loading: false,\n    markup: '',\n    metricsHash: {},\n    name: '',\n    onClose: () => null,\n    onCurrencyChange: (value) => null,\n    onDescChange: (value) => null,\n    onFilterChange: (value) => null,\n    onPageChange: (_evt, value) => null,\n    onPerPageChange: (_evt, value) => null,\n    onTypeChange: (value) => null,\n    onNameChange: (value) => null,\n    onSourceSelect: (...args) => null,\n    page: 1,\n    perPage: 10,\n    priceListPagination: {\n        page: 1,\n        perPage: 4,\n        onPerPageSet: (_evt, perPage) => null,\n        onPageSet: (_evt, page) => null,\n    },\n    query: {},\n    step: 1,\n    setSources: (value) => null,\n    sources: [],\n    submitTiers: (tiers) => null,\n    tiers: [],\n    total: 0,\n    type: '',\n};\nexport const CostModelContext = React.createContext(defaultCostModelContext);\n","export const styles = {\n    form: {\n        width: '350px',\n    },\n    textArea: {\n        maxWidth: '450px',\n        minWidth: '350px',\n        minHeight: '75px',\n        maxHeight: '150px',\n    },\n    selector: {\n        maxHeight: '350px',\n    },\n    titleWithLearnMore: {\n        display: 'inline-block',\n        marginRight: '1em',\n    },\n};\n","import { FormGroup, Radio, Stack, StackItem, Text, TextContent, Title, TitleSizes } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Form } from 'routes/settings/costModels/components/forms/form';\nimport { createMapStateToProps } from 'store/common';\nimport { CostModelContext } from './context';\nimport { styles } from './wizard.styles';\nclass DistributionBase extends React.Component {\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(CostModelContext.Consumer, null, ({ handleDistributionChange, handleDistributePlatformUnallocatedChange, handleDistributeWorkerUnallocatedChange, distribution, distributePlatformUnallocated, distributeWorkerUnallocated, }) => {\n            return (React.createElement(Stack, { hasGutter: true },\n                React.createElement(StackItem, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.xl, style: styles.titleWithLearnMore }, intl.formatMessage(messages.costDistribution)),\n                    React.createElement(\"a\", { href: intl.formatMessage(messages.docsCostModelsDistribution), rel: \"noreferrer\", target: \"_blank\" }, intl.formatMessage(messages.learnMore))),\n                React.createElement(StackItem, null,\n                    React.createElement(Title, { headingLevel: \"h3\", size: TitleSizes.md }, intl.formatMessage(messages.distributionType)),\n                    React.createElement(TextContent, null,\n                        React.createElement(Text, { style: styles.cardDescription }, intl.formatMessage(messages.distributionModelDesc)))),\n                React.createElement(StackItem, { isFilled: true },\n                    React.createElement(Form, null,\n                        React.createElement(FormGroup, { isInline: true, fieldId: \"cost-distribution-type\", isRequired: true },\n                            React.createElement(Radio, { isChecked: distribution === 'cpu', name: \"distributionType\", label: intl.formatMessage(messages.cpuTitle), \"aria-label\": intl.formatMessage(messages.cpuTitle), id: \"cpuDistribution\", value: \"cpu\", onChange: handleDistributionChange }),\n                            React.createElement(Radio, { isChecked: distribution === 'memory', name: \"distributionType\", label: intl.formatMessage(messages.memoryTitle), \"aria-label\": intl.formatMessage(messages.memoryTitle), id: \"memoryDistribution\", value: \"memory\", onChange: handleDistributionChange })))),\n                React.createElement(StackItem, null,\n                    React.createElement(Title, { headingLevel: \"h3\", size: TitleSizes.md }, intl.formatMessage(messages.platform)),\n                    React.createElement(TextContent, null,\n                        React.createElement(Text, { style: styles.cardDescription }, intl.formatMessage(messages.platformDesc)))),\n                React.createElement(StackItem, { isFilled: true },\n                    React.createElement(Form, null,\n                        React.createElement(FormGroup, { isInline: true, fieldId: \"cost-distribution-platform-unallocated\", isRequired: true },\n                            React.createElement(Radio, { isChecked: distributePlatformUnallocated, name: \"distributePlatformUnallocated\", label: intl.formatMessage(messages.distribute), \"aria-label\": intl.formatMessage(messages.distribute), id: \"distributePlatformTrue\", value: \"true\", onChange: handleDistributePlatformUnallocatedChange }),\n                            React.createElement(Radio, { isChecked: !distributePlatformUnallocated, name: \"distributePlatformUnallocated\", label: intl.formatMessage(messages.doNotDistribute), \"aria-label\": intl.formatMessage(messages.doNotDistribute), id: \"distributePlatformFalse\", value: \"false\", onChange: handleDistributePlatformUnallocatedChange })))),\n                React.createElement(StackItem, null,\n                    React.createElement(Title, { headingLevel: \"h3\", size: TitleSizes.md }, intl.formatMessage(messages.workerUnallocated)),\n                    React.createElement(TextContent, null,\n                        React.createElement(Text, { style: styles.cardDescription }, intl.formatMessage(messages.workerUnallocatedDesc)))),\n                React.createElement(StackItem, { isFilled: true },\n                    React.createElement(Form, null,\n                        React.createElement(FormGroup, { isInline: true, fieldId: \"cost-distribution-worker-unallocated\", isRequired: true },\n                            React.createElement(Radio, { isChecked: distributeWorkerUnallocated, name: \"distributeWorkerUnallocated\", label: intl.formatMessage(messages.distribute), \"aria-label\": intl.formatMessage(messages.distribute), id: \"distributeWorkerTrue\", value: \"true\", onChange: handleDistributeWorkerUnallocatedChange }),\n                            React.createElement(Radio, { isChecked: !distributeWorkerUnallocated, name: \"distributeWorkerUnallocated\", label: intl.formatMessage(messages.doNotDistribute), \"aria-label\": intl.formatMessage(messages.doNotDistribute), id: \"distributeWorkerFalse\", value: \"false\", onChange: handleDistributeWorkerUnallocatedChange }))))));\n        }));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst Distribution = injectIntl(connect(mapStateToProps, {})(DistributionBase));\nexport default Distribution;\n","import messages from 'locales/messages';\nimport { countDecimals, isPercentageFormatValid } from 'utils/format';\nexport const nameErrors = (name) => {\n    if (name.length === 0) {\n        return messages.costModelsRequiredField;\n    }\n    if (name.length > 100) {\n        return messages.costModelsInfoTooLong;\n    }\n    return null;\n};\nexport const descriptionErrors = (description) => {\n    if (description.length > 500) {\n        return messages.costModelsDescTooLong;\n    }\n    return null;\n};\nconst isMarkupValid = value => {\n    if (value.trim() === '') {\n        return false;\n    }\n    if (!isPercentageFormatValid(value)) {\n        return false;\n    }\n    // Test number of decimals\n    const decimals = countDecimals(value);\n    if (decimals > 10) {\n        return false;\n    }\n    return true;\n};\nexport const validatorsHash = {\n    '': [() => false],\n    AWS: [\n        ctx => nameErrors(ctx.name) === null && descriptionErrors(ctx.description) === null && ctx.type !== '',\n        ctx => isMarkupValid(ctx.markup),\n        () => true,\n        () => true,\n    ],\n    Azure: [\n        ctx => nameErrors(ctx.name) === null && descriptionErrors(ctx.description) === null && ctx.type !== '',\n        ctx => isMarkupValid(ctx.markup),\n        () => true,\n        () => true,\n    ],\n    GCP: [\n        ctx => nameErrors(ctx.name) === null && descriptionErrors(ctx.description) === null && ctx.type !== '',\n        ctx => isMarkupValid(ctx.markup),\n        () => true,\n        () => true,\n    ],\n    OCP: [\n        ctx => nameErrors(ctx.name) === null && descriptionErrors(ctx.description) === null && ctx.type !== '',\n        ctx => ctx.priceListCurrent.justSaved,\n        ctx => isMarkupValid(ctx.markup),\n        () => true,\n        () => true,\n        () => true,\n    ],\n};\n","import { FormGroup, SelectDirection, Stack, StackItem, TextArea, TextInput, Title, TitleSizes, } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { currencyOptions } from 'routes/components/currency';\nimport { Form } from 'routes/settings/costModels/components/forms/form';\nimport { Selector } from 'routes/settings/costModels/components/inputs/selector';\nimport { createMapStateToProps } from 'store/common';\nimport { CostModelContext } from './context';\nimport { descriptionErrors, nameErrors } from './steps';\nimport { styles } from './wizard.styles';\nclass GeneralInformation extends React.Component {\n    render() {\n        const getValueLabel = (valStr, options) => {\n            const val = options.find(o => o.value === valStr);\n            return !val ? valStr : intl.formatMessage(val.label, { units: val.value });\n        };\n        const { intl } = this.props;\n        const sourceTypeOptions = [\n            {\n                label: messages.costModelsWizardOnboardAws,\n                value: 'AWS',\n            },\n            {\n                label: messages.azure,\n                value: 'Azure',\n            },\n            {\n                label: messages.gcp,\n                value: 'GCP',\n            },\n            {\n                label: messages.costModelsWizardOnboardOcp,\n                value: 'OCP',\n            },\n        ];\n        return (React.createElement(CostModelContext.Consumer, null, ({ currencyUnits, dirtyName, description, name, type, onCurrencyChange, onNameChange, onDescChange, onTypeChange, }) => (React.createElement(Stack, { hasGutter: true },\n            React.createElement(StackItem, null,\n                React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.xl, style: styles.titleWithLearnMore }, intl.formatMessage(messages.costModelsWizardGeneralInfoTitle)),\n                React.createElement(\"a\", { href: intl.formatMessage(messages.docsConfigCostModels), rel: \"noreferrer\", target: \"_blank\" }, intl.formatMessage(messages.learnMore))),\n            React.createElement(StackItem, null,\n                React.createElement(Form, { style: styles.form },\n                    React.createElement(FormGroup, { helperTextInvalid: nameErrors(name) && intl.formatMessage(nameErrors(name)), validated: nameErrors(name) === null || !dirtyName ? 'default' : 'error', label: intl.formatMessage(messages.names, { count: 1 }), isRequired: true, fieldId: \"name\" },\n                        React.createElement(TextInput, { validated: nameErrors(name) === null || !dirtyName ? 'default' : 'error', isRequired: true, type: \"text\", id: \"name\", name: \"name\", value: name, onChange: onNameChange })),\n                    React.createElement(FormGroup, { helperTextInvalid: descriptionErrors(description) && intl.formatMessage(descriptionErrors(description)), validated: descriptionErrors(description) === null ? 'default' : 'error', label: intl.formatMessage(messages.description), fieldId: \"description\" },\n                        React.createElement(TextArea, { style: styles.textArea, type: \"text\", id: \"description\", name: \"description\", value: description, validated: descriptionErrors(description) === null ? 'default' : 'error', onChange: onDescChange })),\n                    React.createElement(Selector, { isRequired: true, id: \"source-type-selector\", direction: SelectDirection.up, appendMenuTo: \"inline\", maxHeight: styles.selector.maxHeight, label: messages.sourceType, toggleAriaLabel: intl.formatMessage(messages.costModelsWizardEmptySourceTypeLabel), placeholderText: intl.formatMessage(messages.costModelsWizardEmptySourceTypeLabel), value: getValueLabel(type, sourceTypeOptions), onChange: onTypeChange, options: sourceTypeOptions }),\n                    React.createElement(Selector, { label: messages.currency, direction: SelectDirection.up, appendMenuTo: \"inline\", maxHeight: styles.selector.maxHeight, toggleAriaLabel: intl.formatMessage(messages.costModelsWizardCurrencyToggleLabel), value: getValueLabel(currencyUnits, currencyOptions), onChange: onCurrencyChange, id: \"currency-units-selector\", options: currencyOptions.map(o => {\n                            return {\n                                label: intl.formatMessage(o.label, { units: o.value }),\n                                value: o.value,\n                            };\n                        }) })))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst mapDispatchToProps = {\n// TDB\n};\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(GeneralInformation));\n","import { Flex, FlexItem, FormGroup, InputGroup, InputGroupText, List, ListItem, Radio, Stack, StackItem, Text, TextContent, TextInput, TextVariants, Title, TitleSizes, } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Form } from 'routes/settings/costModels/components/forms/form';\nimport { styles as costCalcStyles } from 'routes/settings/costModels/costModel/costCalc.styles';\nimport { createMapStateToProps } from 'store/common';\nimport { countDecimals, isPercentageFormatValid } from 'utils/format';\nimport { CostModelContext } from './context';\nimport { styles } from './wizard.styles';\nclass MarkupWithDistributionBase extends React.Component {\n    render() {\n        const { intl } = this.props;\n        const handleOnKeyDown = event => {\n            // Prevent 'enter', '+', and '-'\n            if (event.keyCode === 13 || event.keyCode === 187 || event.keyCode === 189) {\n                event.preventDefault();\n            }\n        };\n        const markupValidator = value => {\n            if (!isPercentageFormatValid(value)) {\n                return messages.markupOrDiscountNumber;\n            }\n            // Test number of decimals\n            const decimals = countDecimals(value);\n            if (decimals > 10) {\n                return messages.markupOrDiscountTooLong;\n            }\n            return undefined;\n        };\n        return (React.createElement(CostModelContext.Consumer, null, ({ handleSignChange, handleMarkupDiscountChange, markup, isDiscount }) => {\n            const helpText = markupValidator(markup);\n            const validated = helpText ? 'error' : 'default';\n            return (React.createElement(Stack, { hasGutter: true },\n                React.createElement(StackItem, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.xl, style: styles.titleWithLearnMore }, intl.formatMessage(messages.costCalculationsOptional)),\n                    React.createElement(\"a\", { href: intl.formatMessage(messages.docsCostModelsMarkup), rel: \"noreferrer\", target: \"_blank\" }, intl.formatMessage(messages.learnMore))),\n                React.createElement(StackItem, null,\n                    React.createElement(Title, { headingLevel: \"h3\", size: TitleSizes.md }, intl.formatMessage(messages.markupOrDiscount)),\n                    React.createElement(TextContent, null,\n                        React.createElement(Text, null, intl.formatMessage(messages.markupOrDiscountModalDesc)))),\n                React.createElement(StackItem, null,\n                    React.createElement(Flex, { style: costCalcStyles.markupRadioContainer },\n                        React.createElement(Flex, { direction: { default: 'column' }, alignSelf: { default: 'alignSelfCenter' } },\n                            React.createElement(FlexItem, null,\n                                React.createElement(Radio, { isChecked: !isDiscount, name: \"discount\", label: intl.formatMessage(messages.markupPlus), \"aria-label\": intl.formatMessage(messages.markupPlus), id: \"markup\", value: \"false\" // \"+\"\n                                    , onChange: handleSignChange, style: costCalcStyles.markupRadio }),\n                                React.createElement(Radio, { isChecked: isDiscount, name: \"discount\", label: intl.formatMessage(messages.discountMinus), \"aria-label\": intl.formatMessage(messages.discountMinus), id: \"discount\", value: \"true\" // '-'\n                                    , onChange: handleSignChange }))),\n                        React.createElement(Flex, { direction: { default: 'column' }, alignSelf: { default: 'alignSelfCenter' } },\n                            React.createElement(FlexItem, null,\n                                React.createElement(Form, null,\n                                    React.createElement(FormGroup, { fieldId: \"markup-input-box\", helperTextInvalid: helpText ? intl.formatMessage(helpText) : undefined, style: costCalcStyles.rateContainer, validated: validated },\n                                        React.createElement(InputGroup, null,\n                                            React.createElement(InputGroupText, { style: costCalcStyles.sign }, isDiscount\n                                                ? intl.formatMessage(messages.discountMinus)\n                                                : intl.formatMessage(messages.markupPlus)),\n                                            React.createElement(TextInput, { \"aria-label\": intl.formatMessage(messages.rate), id: \"markup-input-box\", isRequired: true, onKeyDown: handleOnKeyDown, onChange: handleMarkupDiscountChange, placeholder: '0', style: costCalcStyles.inputField, type: \"text\", validated: validated, value: markup }),\n                                            React.createElement(InputGroupText, { style: costCalcStyles.percent }, intl.formatMessage(messages.percentSymbol))))))))),\n                React.createElement(StackItem, null,\n                    React.createElement(\"div\", { style: costCalcStyles.exampleMargin },\n                        React.createElement(TextContent, null,\n                            React.createElement(Text, { component: TextVariants.h3 }, intl.formatMessage(messages.examplesTitle))),\n                        React.createElement(List, null,\n                            React.createElement(ListItem, null, intl.formatMessage(messages.costModelsExamplesNoAdjust)),\n                            React.createElement(ListItem, null, intl.formatMessage(messages.costModelsExamplesDoubleMarkup)),\n                            React.createElement(ListItem, null, intl.formatMessage(messages.costModelsExamplesReduceZero)),\n                            React.createElement(ListItem, null, intl.formatMessage(messages.costModelsExamplesReduceSeventyfive)))))));\n        }));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst MarkupWithDistribution = injectIntl(connect(mapStateToProps, {})(MarkupWithDistributionBase));\nexport default MarkupWithDistribution;\n","import { ActionGroup, Button, ButtonVariant, Form, Stack, StackItem, Text, TextContent, TextVariants, Title, TitleSizes, } from '@patternfly/react-core';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { canSubmit as isReadyForSubmit, RateForm, useRateData } from 'routes/settings/costModels/components/rateForm';\nimport { CostModelContext } from 'routes/settings/costModels/costModelWizard/context';\nconst AddPriceList = ({ cancel, currencyUnits, intl = defaultIntl, // Default required for testing\nmetricsHash, submitRate, }) => {\n    const { tiers } = React.useContext(CostModelContext);\n    const rateFormData = useRateData(metricsHash, undefined, tiers);\n    const canSubmit = React.useMemo(() => isReadyForSubmit(rateFormData), [rateFormData.errors, rateFormData.rateKind]);\n    return (React.createElement(Stack, { hasGutter: true },\n        React.createElement(StackItem, null,\n            React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.xl }, intl.formatMessage(messages.costModelsWizardCreatePriceList))),\n        React.createElement(StackItem, null,\n            React.createElement(TextContent, null,\n                React.createElement(Text, { component: TextVariants.h3 }, intl.formatMessage(messages.costModelsWizardPriceListMetric)))),\n        React.createElement(StackItem, null,\n            React.createElement(Form, null,\n                React.createElement(RateForm, { currencyUnits: currencyUnits, metricsHash: metricsHash, rateFormData: rateFormData }))),\n        React.createElement(StackItem, null,\n            React.createElement(ActionGroup, null,\n                React.createElement(Button, { variant: ButtonVariant.primary, isDisabled: !canSubmit, onClick: () => submitRate(rateFormData) }, intl.formatMessage(messages.createRate)),\n                React.createElement(Button, { variant: ButtonVariant.link, onClick: cancel }, intl.formatMessage(messages.cancel))))));\n};\nexport default injectIntl(AddPriceList);\n","import { Pagination, Toolbar, ToolbarContent, ToolbarItem } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nexport const PaginationToolbarTemplateBase = ({ id, intl, itemCount, perPage, page, variant, onPerPageSelect, onSetPage, }) => {\n    return (React.createElement(Toolbar, { id: id },\n        React.createElement(ToolbarContent, null,\n            React.createElement(ToolbarItem, { variant: \"pagination\" },\n                React.createElement(Pagination, { variant: variant, itemCount: itemCount, perPage: perPage, page: page, onSetPage: onSetPage, onPerPageSelect: onPerPageSelect, titles: {\n                        paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                            title: intl.formatMessage(messages.createCostModelTitle),\n                            placement: 'bottom',\n                        }),\n                    } })))));\n};\nexport const PaginationToolbarTemplate = injectIntl(PaginationToolbarTemplateBase);\n","import { Bullseye, Button, EmptyState, EmptyStateBody, EmptyStateIcon, Pagination, Stack, StackItem, Text, TextContent, Title, TitleSizes, } from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { SortByDirection } from '@patternfly/react-table';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { WithPriceListSearch } from 'routes/settings/costModels/components/hoc/withPriceListSearch';\nimport { PaginationToolbarTemplate } from 'routes/settings/costModels/components/paginationToolbarTemplate';\nimport { PriceListToolbar } from 'routes/settings/costModels/components/priceListToolbar';\nimport { compareBy } from 'routes/settings/costModels/components/rateForm/utils';\nimport { RateTable } from 'routes/settings/costModels/components/rateTable';\nimport { CheckboxSelector } from 'routes/settings/costModels/components/toolbar/checkboxSelector';\nimport { PrimarySelector } from 'routes/settings/costModels/components/toolbar/primarySelector';\nimport { createMapStateToProps } from 'store/common';\nimport { metricsSelectors } from 'store/metrics';\nimport { unitsLookupKey } from 'utils/format';\nimport { CostModelContext } from './context';\nclass PriceListTable extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            metrics: [],\n            measurements: [],\n            sortBy: {\n                index: 0,\n                direction: SortByDirection.asc,\n            },\n        };\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { addRateAction, deleteRateAction, intl, items, metricsHash } = this.props;\n        const getMetricLabel = m => {\n            // Match message descriptor or default to API string\n            const value = m.replace(/ /g, '_').toLowerCase();\n            const label = intl.formatMessage(messages.metricValues, { value });\n            return label ? label : m;\n        };\n        const getMeasurementLabel = m => {\n            // Match message descriptor or default to API string\n            const label = intl.formatMessage(messages.measurementValues, {\n                value: m.toLowerCase().replace('-', '_'),\n                count: 1,\n            });\n            return label ? label : m;\n        };\n        const metricOpts = Object.keys(metricsHash).map(m => ({\n            label: getMetricLabel(m),\n            value: m,\n        }));\n        const measurementOpts = metricOpts.reduce((acc, curr) => {\n            const measurs = Object.keys(metricsHash[curr.value])\n                .filter(m => !acc.map(i => i.value).includes(m))\n                .map(m => ({ label: getMeasurementLabel(m), value: m }));\n            return [...acc, ...measurs];\n        }, []);\n        const NoTiersEmptyState = () => (React.createElement(Bullseye, null,\n            React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: PlusCircleIcon }),\n                React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, intl.formatMessage(messages.costModelsWizardEmptyStateTitle)),\n                React.createElement(EmptyStateBody, null,\n                    intl.formatMessage(messages.costModelsWizardEmptyStateSkipStep, {\n                        value: React.createElement(\"strong\", null, intl.formatMessage(messages.next)),\n                    }),\n                    React.createElement(\"br\", null),\n                    intl.formatMessage(messages.costModelsWizardEmptyStateOtherTime)))));\n        return (React.createElement(CostModelContext.Consumer, null, ({ priceListPagination }) => {\n            return (React.createElement(Stack, { hasGutter: true },\n                React.createElement(StackItem, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.xl }, intl.formatMessage(messages.costModelsWizardCreatePriceList))),\n                React.createElement(StackItem, null,\n                    React.createElement(TextContent, null,\n                        React.createElement(Text, null, intl.formatMessage(messages.costModelsWizardSubTitleTable)))),\n                React.createElement(StackItem, null,\n                    React.createElement(WithPriceListSearch, { initialFilters: {\n                            primary: 'metrics',\n                            metrics: [],\n                            measurements: [],\n                        } }, ({ search, setSearch, onRemove, onSelect, onClearAll }) => {\n                        const getMetric = value => intl.formatMessage(messages.metricValues, { value }) || value;\n                        const getMeasurement = (measurement, units) => {\n                            units = intl.formatMessage(messages.units, { units: unitsLookupKey(units) }) || units;\n                            return intl.formatMessage(messages.measurementValues, {\n                                value: measurement.toLowerCase().replace('-', '_'),\n                                units,\n                                count: 2,\n                            });\n                        };\n                        const from = (priceListPagination.page - 1) * priceListPagination.perPage;\n                        const to = priceListPagination.page * priceListPagination.perPage;\n                        const filtered = items\n                            .map((item, index) => {\n                            return Object.assign(Object.assign({}, item), { stateIndex: index });\n                        })\n                            .filter(rate => search.metrics.length === 0 || search.metrics.includes(rate.metric.label_metric))\n                            .filter(rate => search.measurements.length === 0 ||\n                            search.measurements.includes(rate.metric.label_measurement))\n                            .sort((r1, r2) => {\n                            const projection = this.state.sortBy.index === 1\n                                ? (r) => getMetric(r.metric.label_metric)\n                                : this.state.sortBy.index === 2\n                                    ? (r) => getMeasurement(r.metric.label_measurement, r.metric.label_measurement_unit)\n                                    : () => '';\n                            return compareBy(r1, r2, this.state.sortBy.direction, projection);\n                        });\n                        const res = filtered.slice(from, to);\n                        return (React.createElement(React.Fragment, null,\n                            React.createElement(PriceListToolbar, { primary: React.createElement(PrimarySelector, { isDisabled: items.length === 0, primary: search.primary, setPrimary: (primary) => setSearch({ primary }), options: [\n                                        {\n                                            label: intl.formatMessage(messages.metric),\n                                            value: 'metrics',\n                                        },\n                                        {\n                                            label: intl.formatMessage(messages.measurement),\n                                            value: 'measurements',\n                                        },\n                                    ] }), selected: search.primary, secondaries: [\n                                    {\n                                        component: (React.createElement(CheckboxSelector, { isDisabled: items.length === 0, placeholderText: intl.formatMessage(messages.toolBarPriceListMeasurementPlaceHolder), selections: search.measurements, setSelections: (selection) => onSelect('measurements', selection), options: measurementOpts })),\n                                        name: 'measurements',\n                                        onRemove,\n                                        filters: search.measurements,\n                                    },\n                                    {\n                                        component: (React.createElement(CheckboxSelector, { isDisabled: items.length === 0, placeholderText: intl.formatMessage(messages.toolBarPriceListMetricPlaceHolder), selections: search.metrics, setSelections: (selection) => onSelect('metrics', selection), options: metricOpts })),\n                                        name: 'metrics',\n                                        onRemove,\n                                        filters: search.metrics,\n                                    },\n                                ], button: React.createElement(Button, { onClick: addRateAction }, intl.formatMessage(messages.createRate)), onClear: onClearAll, pagination: React.createElement(Pagination, { isCompact: true, itemCount: filtered.length, perPage: priceListPagination.perPage, page: priceListPagination.page, onSetPage: priceListPagination.onPageSet, onPerPageSelect: priceListPagination.onPerPageSet, titles: {\n                                        paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                                            title: intl.formatMessage(messages.costModelsAssignSourcesParen),\n                                            placement: 'top',\n                                        }),\n                                    } }) }),\n                            res.length === 0 &&\n                                (this.state.metrics.length !== 0 || this.state.measurements.length !== 0) && (React.createElement(Bullseye, null,\n                                React.createElement(EmptyFilterState, null))),\n                            res.length === 0 &&\n                                this.state.metrics.length === 0 &&\n                                this.state.measurements.length === 0 && React.createElement(NoTiersEmptyState, null),\n                            res.length > 0 && (React.createElement(RateTable, { actions: [\n                                    {\n                                        title: intl.formatMessage(messages.remove),\n                                        onClick: (_evt, _rowId, rowData) => {\n                                            deleteRateAction(rowData.data.stateIndex);\n                                        },\n                                    },\n                                ], tiers: res, sortCallback: e => {\n                                    this.setState(Object.assign(Object.assign({}, this.state), { sortBy: Object.assign({}, e) }));\n                                } })),\n                            React.createElement(PaginationToolbarTemplate, { isCompact: true, itemCount: filtered.length, perPage: priceListPagination.perPage, page: priceListPagination.page, onSetPage: priceListPagination.onPageSet, onPerPageSelect: priceListPagination.onPerPageSet, titles: {\n                                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                                        title: intl.formatMessage(messages.costModelsAssignSourcesParen),\n                                        placement: 'bottom',\n                                    }),\n                                } })));\n                    }))));\n        }));\n    }\n}\nexport default connect(createMapStateToProps(state => ({\n    metricsHash: metricsSelectors.metrics(state),\n})))(injectIntl(PriceListTable));\n","import React from 'react';\nimport AddPriceList from 'routes/settings/costModels/components/addPriceList';\nimport { transformFormDataToRequest } from 'routes/settings/costModels/components/rateForm/index';\nimport { CostModelContext } from './context';\nimport PriceListTable from './priceListTable';\nconst PriceList = () => {\n    const { currencyUnits, goToAddPL, metricsHash, tiers, submitTiers } = React.useContext(CostModelContext);\n    const [state, setState] = React.useState('table');\n    const submit = (rate) => {\n        submitTiers([...tiers, rate]);\n        setState('table');\n        goToAddPL(true);\n    };\n    if (state === 'table') {\n        return (React.createElement(PriceListTable, { items: tiers, deleteRateAction: (index) => {\n                const items = [...tiers.slice(0, index), ...tiers.slice(index + 1)];\n                submitTiers(items);\n                if (items.length === 0) {\n                    goToAddPL(true);\n                }\n            }, addRateAction: () => {\n                setState('form');\n                goToAddPL(false);\n            } }));\n    }\n    if (state === 'form') {\n        return (React.createElement(AddPriceList, { currencyUnits: currencyUnits, metricsHash: metricsHash, submitRate: (rateFormData) => {\n                const rate = transformFormDataToRequest(rateFormData, metricsHash, currencyUnits);\n                submit(rate);\n            }, cancel: () => {\n                setState('table');\n                goToAddPL(true);\n            } }));\n    }\n    return null;\n};\nexport default PriceList;\n","import { Alert, Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateSecondaryActions, Stack, StackItem, Text, TextContent, TextList, TextListItem, TextListItemVariants, TextListVariants, Title, TitleSizes, } from '@patternfly/react-core';\nimport { OkIcon } from '@patternfly/react-icons/dist/esm/icons/ok-icon';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { RateTable } from 'routes/settings/costModels/components/rateTable';\nimport { WarningIcon } from 'routes/settings/costModels/components/warningIcon';\nimport { createMapStateToProps } from 'store/common';\nimport { CostModelContext } from './context';\nconst ReviewSuccessBase = ({ intl }) => (React.createElement(CostModelContext.Consumer, null, ({ onClose, name }) => (React.createElement(EmptyState, null,\n    React.createElement(EmptyStateIcon, { icon: OkIcon, color: \"green\" }),\n    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, intl.formatMessage(messages.costModelsWizardReviewStatusTitle)),\n    React.createElement(EmptyStateBody, null, intl.formatMessage(messages.costModelsWizardReviewStatusSubTitle, { value: name })),\n    React.createElement(EmptyStateSecondaryActions, null,\n        React.createElement(Button, { variant: \"link\", onClick: onClose }, intl.formatMessage(messages.close)))))));\nconst ReviewSuccess = injectIntl(ReviewSuccessBase);\nconst ReviewDetailsBase = ({ intl }) => (React.createElement(CostModelContext.Consumer, null, ({ checked, createError, currencyUnits, description, distribution, distributePlatformUnallocated, distributeWorkerUnallocated, isDiscount, markup, name, tiers, type, }) => {\n    const selectedSources = Object.keys(checked)\n        .filter(key => checked[key].selected)\n        .map(key => checked[key].meta);\n    return (React.createElement(React.Fragment, null,\n        createError && React.createElement(Alert, { variant: \"danger\", title: `${createError}` }),\n        React.createElement(Stack, { hasGutter: true },\n            React.createElement(StackItem, null,\n                React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.xl }, intl.formatMessage(messages.costModelsWizardStepsReview))),\n            React.createElement(StackItem, null,\n                React.createElement(TextContent, null,\n                    React.createElement(Text, null, intl.formatMessage(messages.costModelsWizardReviewStatusSubDetails, {\n                        create: React.createElement(\"strong\", null, intl.formatMessage(messages.create)),\n                        back: React.createElement(\"strong\", null, intl.formatMessage(messages.back)),\n                    })))),\n            React.createElement(StackItem, null,\n                React.createElement(TextContent, null,\n                    React.createElement(TextList, { component: TextListVariants.dl },\n                        React.createElement(TextListItem, { component: TextListItemVariants.dt }, intl.formatMessage(messages.names, { count: 1 })),\n                        React.createElement(TextListItem, { component: TextListItemVariants.dd }, name),\n                        React.createElement(TextListItem, { component: TextListItemVariants.dt }, intl.formatMessage(messages.description)),\n                        React.createElement(TextListItem, { component: TextListItemVariants.dd }, description),\n                        React.createElement(TextListItem, { component: TextListItemVariants.dt }, intl.formatMessage(messages.currency)),\n                        React.createElement(TextListItem, { component: TextListItemVariants.dd }, intl.formatMessage(messages.currencyOptions, { units: currencyUnits })),\n                        type === 'OCP' && (React.createElement(React.Fragment, null,\n                            React.createElement(TextListItem, { component: TextListItemVariants.dt }, intl.formatMessage(messages.priceList)),\n                            React.createElement(TextListItem, { component: TextListItemVariants.dd }, tiers.length > 0 ? (React.createElement(RateTable, { tiers: tiers })) : (intl.formatMessage(messages.costModelsWizardNoRatesAdded))))),\n                        React.createElement(TextListItem, { component: TextListItemVariants.dt }, intl.formatMessage(messages.costModelsWizardReviewMarkDiscount)),\n                        React.createElement(TextListItem, { component: TextListItemVariants.dd }, intl.formatMessage(messages.percent, { value: isDiscount ? '-' + markup : markup })),\n                        type === 'OCP' && (React.createElement(React.Fragment, null,\n                            React.createElement(TextListItem, { component: TextListItemVariants.dt }, intl.formatMessage(messages.costDistribution)),\n                            React.createElement(TextListItem, { component: TextListItemVariants.dd }, intl.formatMessage(messages.distributionTypeDesc, { type: distribution })),\n                            React.createElement(TextListItem, { component: TextListItemVariants.dd }, intl.formatMessage(messages.distributeCosts, {\n                                value: distributePlatformUnallocated,\n                                type: 'platform',\n                            })),\n                            React.createElement(TextListItem, { component: TextListItemVariants.dd }, intl.formatMessage(messages.distributeCosts, {\n                                value: distributeWorkerUnallocated,\n                                type: 'worker',\n                            })))),\n                        React.createElement(TextListItem, { component: TextListItemVariants.dt },\n                            intl.formatMessage(messages.costModelsAssignSources, { count: 2 }),\n                            ' ',\n                            selectedSources.find(src => Boolean(src.costmodel)) && (React.createElement(WarningIcon, { text: intl.formatMessage(messages.costModelsWizardWarningSources) }))),\n                        React.createElement(TextListItem, { component: TextListItemVariants.dd }, selectedSources.map(r => r.name).join(', '))))))));\n}));\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst ReviewDetails = injectIntl(connect(mapStateToProps, {})(ReviewDetailsBase));\nconst ReviewWithDistribution = () => {\n    return (React.createElement(CostModelContext.Consumer, null, ({ createSuccess }) => {\n        if (!createSuccess) {\n            return React.createElement(ReviewDetails, null);\n        }\n        return React.createElement(ReviewSuccess, null);\n    }));\n};\nexport default ReviewWithDistribution;\n","import { InputGroup, InputGroupText, Pagination, TextInput, Toolbar, ToolbarContent, ToolbarFilter, ToolbarItem, ToolbarToggleGroup, } from '@patternfly/react-core';\nimport { FilterIcon } from '@patternfly/react-icons/dist/esm/icons/filter-icon';\nimport { SearchIcon } from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nconst FilterInput = ({ id, placeholder = '', value, onChange, onSearch }) => {\n    return (React.createElement(InputGroup, null,\n        React.createElement(TextInput, { value: value, placeholder: placeholder, id: id, onChange: onChange, onKeyPress: (evt) => {\n                if (evt.key !== 'Enter' || value === '') {\n                    return;\n                }\n                onSearch(evt);\n            } }),\n        React.createElement(InputGroupText, { style: { borderLeft: '0' } },\n            React.createElement(SearchIcon, null))));\n};\nexport const AssignSourcesToolbarBase = ({ intl, filterInputProps, paginationProps, filter, }) => {\n    return (React.createElement(Toolbar, { id: \"assign-sources-toolbar\", clearAllFilters: filter.onClearAll },\n        React.createElement(ToolbarContent, null,\n            React.createElement(ToolbarToggleGroup, { breakpoint: \"xl\", toggleIcon: React.createElement(FilterIcon, null) },\n                React.createElement(ToolbarItem, { variant: \"search-filter\" },\n                    React.createElement(ToolbarFilter, { deleteChip: filter.onRemove, chips: filter.query.name, categoryName: \"name\" },\n                        React.createElement(FilterInput, Object.assign({ placeholder: intl.formatMessage(messages.costModelsFilterPlaceholder) }, filterInputProps))))),\n            React.createElement(ToolbarItem, { variant: \"pagination\" },\n                React.createElement(Pagination, { isCompact: paginationProps.isCompact, itemCount: paginationProps.itemCount, page: paginationProps.page, perPage: paginationProps.perPage, onSetPage: paginationProps.onSetPage, onPerPageSelect: paginationProps.onPerPageSelect, titles: {\n                        paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                            title: intl.formatMessage(messages.costModelsAssignSourcesParen),\n                            placement: 'bottom',\n                        }),\n                    } })))));\n};\nexport const AssignSourcesToolbar = injectIntl(AssignSourcesToolbarBase);\n","import { Checkbox, Stack, StackItem, Text, TextContent, TextVariants, Title, TitleSizes } from '@patternfly/react-core';\nimport { TableComposable, TableVariant, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { LoadingState } from 'routes/components/state/loadingState';\nimport { addMultiValueQuery, removeMultiValueQuery } from 'routes/settings/costModels/components/filterLogic';\nimport { PaginationToolbarTemplate } from 'routes/settings/costModels/components/paginationToolbarTemplate';\nimport { WarningIcon } from 'routes/settings/costModels/components/warningIcon';\nimport { AssignSourcesToolbar } from './assignSourcesToolbar';\nimport { CostModelContext } from './context';\nconst SourcesTable = ({ intl }) => {\n    return (React.createElement(CostModelContext.Consumer, null, ({ checked, loading, onSourceSelect, sources, perPage, page, type, query, fetchSources, filterName, onFilterChange, }) => {\n        const sourceType = type === 'Azure' ? 'Azure' : type;\n        const itemCount = sources.length > 0 ? sources[0].meta.count : 0;\n        return (React.createElement(Stack, { hasGutter: true },\n            React.createElement(StackItem, null,\n                React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.xl }, intl.formatMessage(messages.costModelsWizardSourceTitle))),\n            React.createElement(StackItem, null,\n                React.createElement(TextContent, null,\n                    React.createElement(Text, null, intl.formatMessage(messages.costModelsWizardSourceSubtitle)))),\n            React.createElement(StackItem, null,\n                React.createElement(TextContent, null,\n                    React.createElement(Text, { component: TextVariants.h3 }, intl.formatMessage(messages.costModelsWizardSourceCaption, {\n                        value: type.toLowerCase(),\n                    })))),\n            React.createElement(StackItem, null,\n                React.createElement(AssignSourcesToolbar, { filter: {\n                        onRemove: (category, chip) => fetchSources(sourceType, removeMultiValueQuery(query)(category, chip), 1, perPage),\n                        onClearAll: () => fetchSources(sourceType, {}, 1, perPage),\n                        query,\n                    }, filterInputProps: {\n                        id: 'assign-source-search-input',\n                        value: filterName,\n                        onChange: onFilterChange,\n                        onSearch: () => {\n                            fetchSources(sourceType, addMultiValueQuery(query)('name', filterName), 1, perPage);\n                        },\n                    }, paginationProps: {\n                        isCompact: true,\n                        itemCount,\n                        perPage,\n                        page,\n                        onSetPage: (_evt, newPage) => {\n                            fetchSources(sourceType, query, newPage, perPage);\n                        },\n                        onPerPageSelect: (_evt, newPerPage) => fetchSources(sourceType, query, 1, newPerPage),\n                    } }),\n                loading ? (React.createElement(LoadingState, null)) : (React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.costModelsWizardSourceTableAriaLabel), variant: TableVariant.compact },\n                    React.createElement(Thead, null,\n                        React.createElement(Tr, null, [\n                            '',\n                            intl.formatMessage(messages.names, { count: 1 }),\n                            intl.formatMessage(messages.costModelsWizardSourceTableCostModel),\n                        ].map((c, i) => (React.createElement(Th, { key: i }, c))))),\n                    React.createElement(Tbody, null, sources.map((row, rowIndex) => (React.createElement(Tr, { key: rowIndex },\n                        React.createElement(Td, null,\n                            React.createElement(Checkbox, { onChange: isChecked => {\n                                    onSourceSelect(rowIndex, isChecked);\n                                }, id: row.name, key: row.name, \"aria-label\": intl.formatMessage(messages.selectRow, { value: rowIndex }), isChecked: checked[row.uuid] && checked[row.uuid].selected, isDisabled: Boolean(row.costmodel) })),\n                        React.createElement(Td, null,\n                            row.name,\n                            ' ',\n                            row.costmodel && (React.createElement(WarningIcon, { key: `wrng-${row.name}`, text: intl.formatMessage(messages.costModelsWizardSourceWarning, {\n                                    costModel: row.costmodel,\n                                }) }))),\n                        React.createElement(Td, null, row.costmodel ? row.costmodel : ''))))))),\n                React.createElement(PaginationToolbarTemplate, { itemCount: itemCount, perPage: perPage, page: page, titles: {\n                        paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                            title: intl.formatMessage(messages.sources),\n                            placement: 'bottom',\n                        }),\n                    }, onSetPage: (_evt, newPage) => {\n                        fetchSources(sourceType, query, newPage, perPage);\n                    }, onPerPageSelect: (_evt, newPerPage) => fetchSources(sourceType, query, 1, newPerPage) }))));\n    }));\n};\nexport default injectIntl(SourcesTable);\n","import React from 'react';\nimport { LoadingState } from 'routes/components/state/loadingState';\nimport { SourceStepErrorState } from 'routes/settings/costModels/components/errorState';\nimport { CostModelContext } from './context';\nimport SourcesTable from './table';\nclass Sources extends React.Component {\n    constructor(props) {\n        super(props);\n        this.fetchData = () => null;\n        this.fetchData = () => {\n            const { type, query, page, perPage, fetchSources } = this.context;\n            const sourceType = type === 'Azure' ? 'Azure' : type;\n            fetchSources(sourceType, query, page, perPage);\n        };\n    }\n    componentDidMount() {\n        const { dataFetched } = this.context;\n        if (dataFetched) {\n            return;\n        }\n        this.fetchData();\n    }\n    renderContent() {\n        if (this.context.loading) {\n            return React.createElement(LoadingState, null);\n        }\n        if (this.context.apiError) {\n            return React.createElement(SourceStepErrorState, { onRefresh: this.fetchData });\n        }\n        return React.createElement(SourcesTable, null);\n    }\n    render() {\n        return this.renderContent();\n    }\n}\nSources.contextType = CostModelContext;\nexport default Sources;\n","import { Title, TitleSizes, Wizard } from '@patternfly/react-core';\nimport { Button, Modal } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport { addCostModel } from 'api/costModels';\nimport messages from 'locales/messages';\nimport { cloneDeep } from 'lodash';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nimport { metricsSelectors } from 'store/metrics';\nimport { unFormat } from 'utils/format';\nimport { getAccountCurrency } from 'utils/localStorage';\nimport { fetchSources as apiSources } from './api';\nimport { CostModelContext } from './context';\nimport Distribution from './distribution';\nimport GeneralInformation from './generalInformation';\nimport Markup from './markup';\nimport { parseApiError } from './parseError';\nimport PriceList from './priceList';\nimport Review from './review';\nimport Sources from './sources';\nimport { validatorsHash } from './steps';\n// Update tiers currency\nconst updateTiersCurrency = (tiers, currencyUnits = 'USD') => {\n    const rates = cloneDeep(tiers);\n    rates.map(val => {\n        if (val.tiered_rates) {\n            for (const rate of val.tiered_rates) {\n                rate.unit = currencyUnits;\n                rate.usage.unit = currencyUnits;\n            }\n        }\n        if (val.tag_rates) {\n            for (const rate of val.tag_rates.tag_values) {\n                rate.unit = currencyUnits;\n            }\n        }\n    });\n    return rates;\n};\nconst InternalWizardBase = ({ intl, isProcess, isSuccess, closeFnc, isOpen, onMove, validators, steps, current = 1, context, setError, setSuccess, updateCostModel, }) => {\n    const newSteps = steps.map((step, ix) => {\n        return Object.assign(Object.assign({}, step), { canJumpTo: current > ix });\n    });\n    newSteps[current - 1].enableNext = validators[current - 1](context);\n    const isAddingRate = context.type === 'OCP' && current === 2 && !validators[current - 1](context);\n    if (current === steps.length && context.type !== '') {\n        newSteps[current - 1].nextButtonText = intl.formatMessage(messages.create);\n    }\n    return isOpen ? (React.createElement(Wizard, { isOpen: true, title: intl.formatMessage(messages.createCostModelTitle), description: intl.formatMessage(messages.createCostModelDesc), steps: newSteps, startAtStep: current, onNext: onMove, onBack: onMove, onGoToStep: onMove, onClose: closeFnc, footer: isSuccess || isProcess || isAddingRate ? React.createElement(\"div\", null) : null, onSave: () => {\n            const { currency, description, distribution, distributePlatformUnallocated, distributeWorkerUnallocated, isDiscount, markup, name, type, tiers, sources, } = context;\n            addCostModel({\n                name,\n                source_type: type,\n                currency,\n                description,\n                distribution_info: {\n                    distribution_type: distribution,\n                    platform_cost: distributePlatformUnallocated,\n                    worker_cost: distributeWorkerUnallocated,\n                },\n                rates: tiers,\n                markup: {\n                    value: `${isDiscount ? '-' : ''}${unFormat(markup)}`,\n                    unit: 'percent',\n                },\n                source_uuids: sources.map(src => src.uuid),\n            })\n                .then(() => {\n                setSuccess();\n                updateCostModel();\n            })\n                .catch(err => setError(parseApiError(err)));\n        } })) : null;\n};\nconst InternalWizard = injectIntl(InternalWizardBase);\nclass CostModelWizardBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            apiError: null,\n            checked: {},\n            createError: null,\n            createProcess: false,\n            createSuccess: false,\n            currencyUnits: getAccountCurrency(),\n            dataFetched: false,\n            dirtyName: false,\n            description: '',\n            distribution: 'cpu',\n            distributePlatformUnallocated: true,\n            distributeWorkerUnallocated: true,\n            error: null,\n            filterName: '',\n            isDialogOpen: false,\n            isDiscount: false,\n            loading: false,\n            markup: '0',\n            name: '',\n            page: 1,\n            perPage: 10,\n            priceListCurrent: {\n                metric: '',\n                measurement: '',\n                rate: '',\n                justSaved: true,\n            },\n            priceListPagination: {\n                page: 1,\n                perPage: 10,\n            },\n            query: {},\n            sources: [],\n            step: 1,\n            tiers: [],\n            total: 0,\n            type: '',\n        };\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { metricsHash, intl } = this.props;\n        /*\n         */\n        const closeConfirmDialog = () => {\n            this.setState({ isDialogOpen: false }, this.props.openWizard);\n        };\n        const stepsHash = () => ({\n            '': [\n                {\n                    id: 1,\n                    name: intl.formatMessage(messages.costModelsWizardStepsGenInfo),\n                    component: React.createElement(GeneralInformation, null),\n                },\n            ],\n            Azure: [\n                {\n                    id: 1,\n                    name: intl.formatMessage(messages.costModelsWizardStepsGenInfo),\n                    component: React.createElement(GeneralInformation, null),\n                },\n                {\n                    id: 2,\n                    name: intl.formatMessage(messages.costCalculations),\n                    component: React.createElement(Markup, null),\n                },\n                {\n                    id: 3,\n                    name: intl.formatMessage(messages.costModelsWizardStepsSources),\n                    component: React.createElement(Sources, null),\n                },\n                {\n                    id: 4,\n                    name: intl.formatMessage(messages.costModelsWizardStepsReview),\n                    component: React.createElement(Review, null),\n                },\n            ],\n            AWS: [\n                {\n                    id: 1,\n                    name: intl.formatMessage(messages.costModelsWizardStepsGenInfo),\n                    component: React.createElement(GeneralInformation, null),\n                },\n                {\n                    id: 2,\n                    name: intl.formatMessage(messages.costCalculations),\n                    component: React.createElement(Markup, null),\n                },\n                {\n                    id: 3,\n                    name: intl.formatMessage(messages.costModelsWizardStepsSources),\n                    component: React.createElement(Sources, null),\n                },\n                {\n                    id: 4,\n                    name: intl.formatMessage(messages.costModelsWizardStepsReview),\n                    component: React.createElement(Review, null),\n                },\n            ],\n            GCP: [\n                {\n                    id: 1,\n                    name: intl.formatMessage(messages.costModelsWizardStepsGenInfo),\n                    component: React.createElement(GeneralInformation, null),\n                },\n                {\n                    id: 2,\n                    name: intl.formatMessage(messages.costCalculations),\n                    component: React.createElement(Markup, null),\n                },\n                {\n                    id: 3,\n                    name: intl.formatMessage(messages.costModelsWizardStepsSources),\n                    component: React.createElement(Sources, null),\n                },\n                {\n                    id: 4,\n                    name: intl.formatMessage(messages.costModelsWizardStepsReview),\n                    component: React.createElement(Review, null),\n                },\n            ],\n            OCP: [\n                {\n                    id: 1,\n                    name: intl.formatMessage(messages.costModelsWizardStepsGenInfo),\n                    component: React.createElement(GeneralInformation, null),\n                },\n                {\n                    id: 2,\n                    name: intl.formatMessage(messages.priceList),\n                    component: React.createElement(PriceList, null),\n                },\n                {\n                    id: 3,\n                    name: intl.formatMessage(messages.costCalculations),\n                    component: React.createElement(Markup, null),\n                },\n                {\n                    id: 4,\n                    name: intl.formatMessage(messages.costDistribution),\n                    component: React.createElement(Distribution, null),\n                },\n                {\n                    id: 5,\n                    name: intl.formatMessage(messages.costModelsWizardStepsSources),\n                    component: React.createElement(Sources, null),\n                },\n                {\n                    id: 6,\n                    name: intl.formatMessage(messages.costModelsWizardStepsReview),\n                    component: React.createElement(Review, null),\n                },\n            ],\n        });\n        const CancelButton = (React.createElement(Button, { key: \"cancel\", variant: \"link\", onClick: closeConfirmDialog }, intl.formatMessage(messages.createCostModelNoContinue)));\n        const OkButton = (React.createElement(Button, { key: \"ok\", variant: \"primary\", onClick: () => this.setState(Object.assign({}, this.defaultState)) }, intl.formatMessage(messages.createCostModelExitYes)));\n        return (React.createElement(CostModelContext.Provider, { value: {\n                apiError: this.state.apiError,\n                checked: this.state.checked,\n                clearQuery: () => this.setState({ query: {} }),\n                createError: this.state.createError,\n                createProcess: this.state.createProcess,\n                createSuccess: this.state.createSuccess,\n                currencyUnits: this.state.currencyUnits,\n                description: this.state.description,\n                dataFetched: this.state.dataFetched,\n                dirtyName: this.state.dirtyName,\n                distribution: this.state.distribution,\n                distributePlatformUnallocated: this.state.distributePlatformUnallocated,\n                distributeWorkerUnallocated: this.state.distributeWorkerUnallocated,\n                error: this.state.error,\n                filterName: this.state.filterName,\n                fetchSources: (type, query, page, perPage) => {\n                    this.setState({ loading: true, apiError: null, filterName: '' }, () => apiSources({ type, query, page, perPage })\n                        .then((resp) => this.setState({\n                        sources: resp,\n                        query,\n                        page,\n                        perPage,\n                        loading: false,\n                        dataFetched: true,\n                        filterName: '',\n                    }))\n                        .catch(err => this.setState({\n                        apiError: err,\n                        loading: false,\n                        dataFetched: true,\n                        filterName: '',\n                    })));\n                },\n                goToAddPL: (value) => this.setState({\n                    priceListCurrent: Object.assign(Object.assign({}, this.state.priceListCurrent), { justSaved: value ? value : false }),\n                }),\n                handleDistributionChange: (_, event) => {\n                    const { value } = event.currentTarget;\n                    this.setState({ distribution: value });\n                },\n                handleDistributePlatformUnallocatedChange: (_, event) => {\n                    const { value } = event.currentTarget;\n                    this.setState({ distributePlatformUnallocated: value === 'true' });\n                },\n                handleDistributeWorkerUnallocatedChange: (_, event) => {\n                    const { value } = event.currentTarget;\n                    this.setState({ distributeWorkerUnallocated: value === 'true' });\n                },\n                handleMarkupDiscountChange: (_, event) => {\n                    const { value } = event.currentTarget;\n                    this.setState({ markup: value });\n                },\n                handleSignChange: (_, event) => {\n                    const { value } = event.currentTarget;\n                    this.setState({ isDiscount: value === 'true' });\n                },\n                isDiscount: this.state.isDiscount,\n                loading: this.state.loading,\n                metricsHash,\n                onClose: () => this.setState(Object.assign({}, this.defaultState), this.props.closeWizard),\n                onCurrencyChange: value => this.setState({ currencyUnits: value, tiers: updateTiersCurrency(this.state.tiers, value) }),\n                onDescChange: value => this.setState({ description: value }),\n                onFilterChange: value => this.setState({ filterName: value }),\n                onNameChange: value => this.setState({ name: value, dirtyName: true }),\n                onPageChange: (_evt, page) => this.setState({ page }),\n                onPerPageChange: (_evt, perPage) => this.setState({ page: 1, perPage }),\n                onSourceSelect: (rowId, isSelected) => {\n                    if (rowId === -1) {\n                        const pageSelections = this.state.sources.map(s => ({\n                            [s.uuid]: { selected: isSelected, meta: s },\n                        }));\n                        const newState = Object.assign(Object.assign({}, this.state.checked), pageSelections);\n                        return this.setState({ checked: newState });\n                    }\n                    const newState = Object.assign(Object.assign({}, this.state.checked), { [this.state.sources[rowId].uuid]: {\n                            selected: isSelected,\n                            meta: this.state.sources[rowId],\n                        } });\n                    return this.setState({ checked: newState });\n                },\n                onTypeChange: value => this.setState({ type: value, dataFetched: false, loading: false }),\n                page: this.state.page,\n                priceListPagination: {\n                    page: this.state.priceListPagination.page,\n                    perPage: this.state.priceListPagination.perPage,\n                    onPageSet: (_evt, page) => this.setState({\n                        priceListPagination: Object.assign(Object.assign({}, this.state.priceListPagination), { page }),\n                    }),\n                    onPerPageSet: (_evt, perPage) => this.setState({\n                        priceListPagination: {\n                            page: 1,\n                            perPage,\n                        },\n                    }),\n                },\n                markup: this.state.markup,\n                name: this.state.name,\n                perPage: this.state.perPage,\n                query: this.state.query,\n                setSources: sources => this.setState({ sources, dataFetched: true, loading: false }),\n                sources: this.state.sources,\n                step: this.state.step,\n                submitTiers: (tiers) => {\n                    this.setState({\n                        tiers,\n                    });\n                },\n                tiers: this.state.tiers,\n                total: this.state.total,\n                type: this.state.type,\n            } },\n            React.createElement(InternalWizard, { metricsHash: metricsHash, isProcess: this.state.createProcess, isSuccess: this.state.createSuccess, closeFnc: () => {\n                    if ((this.state.type === 'OCP' && this.state.step > 1 && this.state.tiers.length > 0) ||\n                        (this.state.type !== 'OCP' && this.state.step > 2)) {\n                        this.setState({ isDialogOpen: true }, this.props.closeWizard);\n                    }\n                    else {\n                        this.setState(Object.assign({}, this.defaultState), this.props.closeWizard);\n                    }\n                }, isOpen: this.props.isOpen, onMove: curr => this.setState({ step: Number(curr.id) }), steps: stepsHash()[this.state.type], current: this.state.step, validators: validatorsHash[this.state.type], setError: errorMessage => this.setState({ createError: errorMessage }), setSuccess: () => this.setState({ createError: null, createSuccess: true }), updateCostModel: () => this.props.fetch(), context: {\n                    name: this.state.name,\n                    type: this.state.type,\n                    currency: this.state.currencyUnits,\n                    description: this.state.description,\n                    distribution: this.state.distribution,\n                    distributePlatformUnallocated: this.state.distributePlatformUnallocated,\n                    distributeWorkerUnallocated: this.state.distributeWorkerUnallocated,\n                    markup: `${this.state.isDiscount ? '-' : ''}${this.state.markup}`,\n                    tiers: this.state.tiers,\n                    priceListCurrent: this.state.priceListCurrent,\n                    sources: Object.keys(this.state.checked).map(key => this.state.checked[key].meta),\n                } }),\n            React.createElement(Modal, { \"aria-label\": intl.formatMessage(messages.createCostModelExit), isOpen: this.state.isDialogOpen, header: React.createElement(Title, { headingLevel: \"h1\", size: TitleSizes['2xl'] },\n                    React.createElement(ExclamationTriangleIcon, { color: \"orange\" }),\n                    \" \",\n                    intl.formatMessage(messages.createCostModelExit)), onClose: closeConfirmDialog, actions: [OkButton, CancelButton], variant: \"small\" }, intl.formatMessage(messages.createCostModelConfirmMsg))));\n    }\n}\nconst CostModelWizard = connect(createMapStateToProps(state => ({\n    metricsHash: metricsSelectors.metrics(state),\n})), { fetch: costModelsActions.fetchCostModels })(injectIntl(CostModelWizardBase));\nexport default CostModelWizard;\n","import { Button } from '@patternfly/react-core';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ReadOnlyTooltip } from 'routes/settings/costModels/components/readOnlyTooltip';\nimport { CostModelWizard } from 'routes/settings/costModels/costModelWizard';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { rbacSelectors } from 'store/rbac';\nconst buttonMapStateToProps = (state) => {\n    return {\n        canWrite: rbacSelectors.isCostModelWritePermission(state),\n    };\n};\nconst buttonMapDispatchToProps = (dispatch) => {\n    return {\n        openWizard: () => dispatch(costModelsActions.setCostModelDialog({ name: 'createWizard', isOpen: true })),\n        closeWizard: () => dispatch(costModelsActions.setCostModelDialog({ name: 'createWizard', isOpen: false })),\n    };\n};\nconst buttonMergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { intl = defaultIntl } = ownProps; // Default required for testing\n    const { canWrite } = stateProps;\n    const { openWizard } = dispatchProps;\n    return {\n        isDisabled: !canWrite,\n        tooltip: intl.formatMessage(messages.costModelsReadOnly),\n        children: (React.createElement(Button, { isDisabled: !canWrite, onClick: openWizard }, intl.formatMessage(messages.costModelsWizardCreateCostModel))),\n    };\n};\nexport const CreateCostModelButton = injectIntl(connect(buttonMapStateToProps, buttonMapDispatchToProps, buttonMergeProps)(ReadOnlyTooltip));\nconst wizardMapStateProps = (state) => {\n    return {\n        isOpen: costModelsSelectors.isDialogOpen(state)('costmodel').createWizard,\n    };\n};\nconst wizardMapDispatchProps = (dispatch) => {\n    return {\n        openWizard: () => {\n            dispatch(costModelsActions.setCostModelDialog({ name: 'createWizard', isOpen: true }));\n        },\n        closeWizard: () => {\n            dispatch(costModelsActions.setCostModelDialog({ name: 'createWizard', isOpen: false }));\n        },\n    };\n};\nconst wizardMergeProps = (stateProps, dispatchProps) => {\n    const { isOpen } = stateProps;\n    const { openWizard, closeWizard } = dispatchProps;\n    return { isOpen, openWizard, closeWizard };\n};\nexport const CreateCostModelWizard = connect(wizardMapStateProps, wizardMapDispatchProps, wizardMergeProps)(CostModelWizard);\n","import { Alert, AlertVariant, Button, ButtonVariant, Stack, StackItem, Text, TextContent, TextList, TextListItem, TextListVariants, } from '@patternfly/react-core';\nimport React from 'react';\nexport function DeleteDialogActions({ status, deleteText, deleteAction, cancelText, cancelAction, sourcesNo, }) {\n    let actions = [];\n    if (status === 'loading') {\n        actions = [\n            React.createElement(Button, { key: \"pending_delete\", variant: ButtonVariant.danger, isDisabled: true }, deleteText),\n            React.createElement(Button, { key: \"pending_cancel\", variant: ButtonVariant.link, isDisabled: true }, cancelText),\n        ];\n    }\n    if (['failure', 'open'].includes(status) && sourcesNo > 0) {\n        actions = [\n            React.createElement(Button, { key: \"sources_cancel\", variant: ButtonVariant.link, onClick: cancelAction }, cancelText),\n        ];\n    }\n    if (['failure', 'open'].includes(status) && sourcesNo === 0) {\n        actions = [\n            React.createElement(Button, { key: \"delete\", variant: ButtonVariant.danger, onClick: deleteAction }, deleteText),\n            React.createElement(Button, { key: \"cancel\", variant: ButtonVariant.link, onClick: cancelAction }, cancelText),\n        ];\n    }\n    return actions;\n}\nfunction CannotDeleteContent({ head, body, sources }) {\n    return (React.createElement(Stack, { hasGutter: true },\n        React.createElement(StackItem, null,\n            React.createElement(TextContent, null,\n                React.createElement(Text, null, head))),\n        React.createElement(StackItem, null,\n            React.createElement(TextContent, null,\n                React.createElement(Text, null, body),\n                React.createElement(TextList, { component: TextListVariants.ol }, sources.map(source => (React.createElement(TextListItem, { key: source }, source))))))));\n}\nexport function DeleteDialogBody({ status, sources, error, cannotDeleteTitle, cannotDeleteBody, canDeleteBody, }) {\n    if (status !== 'close' && sources.length > 0) {\n        return React.createElement(CannotDeleteContent, { head: cannotDeleteTitle, body: cannotDeleteBody, sources: sources });\n    }\n    if (status !== 'close' && sources.length === 0) {\n        return (React.createElement(Stack, { hasGutter: true },\n            status === 'failure' ? (React.createElement(StackItem, null,\n                React.createElement(Alert, { variant: AlertVariant.danger, title: error }))) : null,\n            React.createElement(StackItem, null, canDeleteBody)));\n    }\n}\nexport function getDialogStateName(isLoading, isOpen, error) {\n    if (!isOpen) {\n        return 'close';\n    }\n    if (isLoading) {\n        return 'loading';\n    }\n    if (error) {\n        return 'failure';\n    }\n    return 'open';\n}\n","import { Modal, ModalVariant } from '@patternfly/react-core';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { DeleteDialogActions, DeleteDialogBody, getDialogStateName } from './utils/dialog';\nconst mapStateToProps = (state) => {\n    return {\n        isOpen: costModelsSelectors.isDialogOpen(state)('costmodel').deleteCostModel,\n        isLoading: costModelsSelectors.deleteProcessing(state),\n        deleteError: costModelsSelectors.deleteError(state),\n        dialogData: costModelsSelectors.dialogData(state),\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        closeDialog: () => dispatch(costModelsActions.setCostModelDialog({ name: 'deleteCostModel', isOpen: false })),\n        deleteCostModel: (uuid) => costModelsActions.deleteCostModel(uuid, 'deleteCostModel')(dispatch),\n    };\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { intl = defaultIntl } = ownProps; // Default required for testing\n    const stateName = getDialogStateName(stateProps.isLoading, stateProps.isOpen, stateProps.deleteError);\n    const data = stateProps.dialogData && stateProps.dialogData.costModel ? stateProps.dialogData.costModel : null;\n    const name = data ? data.name : '';\n    const sources = data ? data.sources.map(source => source.name) : [];\n    const uuid = data ? data.uuid : '';\n    const actions = DeleteDialogActions({\n        status: stateName,\n        deleteText: intl.formatMessage(messages.costModelsDelete),\n        deleteAction: () => dispatchProps.deleteCostModel(uuid),\n        cancelText: intl.formatMessage(messages.cancel),\n        cancelAction: dispatchProps.closeDialog,\n        sourcesNo: sources.length,\n    });\n    const children = DeleteDialogBody({\n        status: stateName,\n        sources,\n        error: stateProps.deleteError,\n        cannotDeleteTitle: intl.formatMessage(messages.costModelsDeleteSource),\n        cannotDeleteBody: intl.formatMessage(messages.costModelsCanNotDelete, { name }),\n        canDeleteBody: intl.formatMessage(messages.costModelsCanDelete, { name }),\n    });\n    return {\n        actions,\n        isOpen: stateName !== 'close',\n        variant: ModalVariant.small,\n        'aria-label': intl.formatMessage(messages.costModelsDelete),\n        title: intl.formatMessage(messages.costModelsDelete),\n        titleIconVariant: 'warning',\n        onClose: dispatchProps.closeDialog,\n        children,\n    };\n};\nconst DeleteDialog = injectIntl(connect(mapStateToProps, mapDispatchToProps, mergeProps)(Modal));\nexport default DeleteDialog;\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, Title, TitleSizes } from '@patternfly/react-core';\nimport React from 'react';\nfunction EmptyStateBase(props) {\n    return (React.createElement(EmptyState, { className: \"pf-m-redhat-font\" },\n        React.createElement(EmptyStateIcon, { icon: props.icon }),\n        React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, props.title),\n        React.createElement(EmptyStateBody, null, props.description),\n        props.actions ? props.actions : null));\n}\nexport default EmptyStateBase;\n","import { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { CreateCostModelButton } from 'routes/settings/costModels/costModelsDetails/createCostModelButton';\nimport EmptyStateBase from './emptyStateBase';\n// defaultIntl required for testing\nconst NoCostModels = ({ intl = defaultIntl }) => {\n    return (React.createElement(EmptyStateBase, { title: intl.formatMessage(messages.costModelsEmptyState), description: intl.formatMessage(messages.costModelsEmptyStateDesc), icon: PlusCircleIcon, actions: React.createElement(React.Fragment, null,\n            React.createElement(CreateCostModelButton, null),\n            React.createElement(\"br\", null),\n            React.createElement(\"br\", null),\n            React.createElement(\"a\", { href: intl.formatMessage(messages.docsConfigCostModels), rel: \"noreferrer\", target: \"_blank\" }, intl.formatMessage(messages.costModelsEmptyStateLearnMore))) }));\n};\nexport default injectIntl(NoCostModels);\n","import { ActionsColumn, TableComposable, TableVariant, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport { sortable, TableGridBreakpoint } from '@patternfly/react-table';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { rbacSelectors } from 'store/rbac';\nimport { withRouter } from 'utils/router';\nimport { createActions, createOnSort, getRowsByStateName } from './utils/table';\nclass CostModelsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            dialogSource: null,\n            activeSortDirection: 'asc',\n            activeSortIndex: 0,\n        };\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { intl = defaultIntl, // Default required for testing\n        canWrite, costData, openDeleteDialog, query, router, stateName, } = this.props;\n        const rows = getRowsByStateName(stateName, costData);\n        const cells = [\n            Object.assign({ title: intl.formatMessage(messages.names, { count: 1 }), data: { orderName: 'name' } }, (rows.length && { transforms: [sortable] })),\n            { title: intl.formatMessage(messages.description) },\n            Object.assign({ title: intl.formatMessage(messages.sourceType), data: { orderName: 'source_type' } }, (rows.length && { transforms: [sortable] })),\n            { title: intl.formatMessage(messages.costModelsAssignedSources) },\n            Object.assign({ title: intl.formatMessage(messages.costModelsLastChange), data: { orderName: 'updated_timestamp' } }, (rows.length && { transforms: [sortable] })),\n            {\n                title: '',\n                props: { 'aria-label': intl.formatMessage(messages.costModelsActions) },\n            },\n        ];\n        const actions = createActions(stateName, canWrite, [\n            {\n                title: intl.formatMessage(messages.delete),\n                tooltip: intl.formatMessage(messages.costModelsReadOnly),\n                onClick: (_evt, _rowIx, rowData) => {\n                    openDeleteDialog(rowData.data);\n                },\n            },\n        ]);\n        const onSort = createOnSort(cells, query, router);\n        const getSortParams = (columnIndex) => ({\n            sortBy: {\n                index: this.state.activeSortIndex,\n                direction: this.state.activeSortDirection,\n                defaultDirection: 'asc',\n            },\n            onSort: (_evt, index, direction) => {\n                this.setState(Object.assign(Object.assign({}, this.state), { activeSortDirection: direction, activeSortIndex: index }));\n                onSort(_evt, index, direction);\n            },\n            columnIndex,\n        });\n        return (React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.costModelsTableAriaLabel), gridBreakPoint: TableGridBreakpoint.grid2xl, variant: TableVariant.compact },\n            React.createElement(Thead, null,\n                React.createElement(Tr, null,\n                    cells.map((c, cellIndex) => (React.createElement(Th, { key: cellIndex, sort: c.transforms ? getSortParams(cellIndex) : undefined }, c.title))),\n                    React.createElement(Th, null))),\n            React.createElement(Tbody, null, rows.map((r, rowIndex) => (React.createElement(Tr, { key: rowIndex },\n                r.cells.map((c, cellIndex) => (React.createElement(Td, { colSpan: c.props ? c.props.colSpan : undefined, key: cellIndex }, c.title ? c.title : c))),\n                !r.heightAuto && (React.createElement(Td, { isActionCell: true },\n                    React.createElement(ActionsColumn, { items: actions.map(a => {\n                            return Object.assign(Object.assign({}, a), { onClick: _evt => a.onClick(_evt, rowIndex, r, null) });\n                        }) })))))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        canWrite: rbacSelectors.isCostModelWritePermission(state),\n        query: costModelsSelectors.query(state),\n        costData: costModelsSelectors.costModels(state),\n        stateName: costModelsSelectors.stateName(state),\n    };\n});\nconst mapDispatchToProps = (dispatch) => {\n    const setDialogActionCreator = costModelsActions.setCostModelDialog;\n    return {\n        openDeleteDialog: (item) => dispatch(setDialogActionCreator({ name: 'deleteCostModel', isOpen: true, meta: item })),\n    };\n};\nconst CostModelsTableConnect = connect(mapStateToProps, mapDispatchToProps)(CostModelsTableBase);\nconst CostModelsTable = injectIntl(withRouter(CostModelsTableConnect));\nexport default CostModelsTable;\n","import { Bullseye } from '@patternfly/react-core';\nimport { SortByDirection } from '@patternfly/react-table';\nimport { Unavailable } from '@redhat-cloud-services/frontend-components/Unavailable';\nimport { intl } from 'components/i18n';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { LoadingState } from 'routes/components/state/loadingState';\nimport NoCostModels from 'routes/settings/costModels/costModelsDetails/noCostModels';\nimport { formatPath } from 'utils/paths';\nimport { stringifySearch } from './query';\nexport function getRowsByStateName(stateName, data) {\n    let component = null;\n    if (stateName === 'loading') {\n        component = React.createElement(LoadingState, null);\n    }\n    if (stateName === 'empty') {\n        component = React.createElement(NoCostModels, null);\n    }\n    if (stateName === 'no-match') {\n        component = React.createElement(EmptyFilterState, null);\n    }\n    if (stateName === 'failure') {\n        component = React.createElement(Unavailable, null);\n    }\n    if (component !== null) {\n        return [\n            {\n                heightAuto: true,\n                cells: [\n                    {\n                        props: { colSpan: 6 },\n                        title: React.createElement(Bullseye, null,\n                            \" \",\n                            component,\n                            \" \"),\n                    },\n                ],\n            },\n        ];\n    }\n    return data.map((item) => {\n        const dateTime = intl.formatDate(item.updated_timestamp, {\n            day: 'numeric',\n            hour: 'numeric',\n            hour12: false,\n            minute: 'numeric',\n            month: 'short',\n            timeZone: 'UTC',\n            timeZoneName: 'short',\n            year: 'numeric',\n        });\n        return {\n            cells: [\n                {\n                    title: React.createElement(Link, { to: `${formatPath(routes.costModel.basePath)}/${item.uuid}` }, item.name),\n                },\n                item.description,\n                item.source_type,\n                item.sources.length.toString(),\n                dateTime,\n            ],\n            data: { costModel: item },\n        };\n    });\n}\nexport function createOnSort(cells, query, router) {\n    return function (_event, index, direction) {\n        const name = cells[index] && cells[index].data ? cells[index].data.orderName : null;\n        if (name === null) {\n            return;\n        }\n        if (direction === SortByDirection.asc) {\n            router.navigate(stringifySearch(Object.assign(Object.assign({}, query), { ordering: name })));\n            return;\n        }\n        router.navigate(stringifySearch(Object.assign(Object.assign({}, query), { ordering: `-${name}` })));\n    };\n}\nexport function createActions(stateName, canWrite, actions) {\n    if (stateName !== 'success') {\n        return [];\n    }\n    return actions.map(action => {\n        return Object.assign(Object.assign({}, action), { isDisabled: !canWrite, style: !canWrite ? { pointerEvents: 'auto' } : undefined, tooltip: !canWrite ? action.tooltip : undefined });\n    });\n}\n","import { Dropdown, DropdownItem, DropdownToggle, InputGroup, InputGroupText, TextInput, Toolbar, ToolbarFilter, } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { costModelsSelectors } from 'store/costModels';\nimport { withRouter } from 'utils/router';\nimport { initialCostModelsQuery, stringifySearch } from './query';\nconst FilterInput = ({ placeholder = '', value, onChange, onKeyPress }) => {\n    return (React.createElement(InputGroup, null,\n        React.createElement(TextInput, { \"aria-label\": placeholder, value: value, placeholder: placeholder, onChange: onChange, onKeyPress: (evt) => {\n                if (evt.key !== 'Enter' || value === '') {\n                    return;\n                }\n                onKeyPress(evt);\n            } }),\n        React.createElement(InputGroupText, { style: { borderLeft: '0' } },\n            React.createElement(SearchIcon, null))));\n};\nexport const onKeyPress = (router, key, query, inputer) => (event) => {\n    if (event.key === 'Enter' && inputer.value !== '') {\n        const currentValue = inputer.value;\n        router.navigate(stringifySearch(Object.assign(Object.assign({}, query), { [key]: query[key] ? `${query[key]},${currentValue}` : currentValue })));\n        inputer.setValue('');\n    }\n};\nexport const onDeleteChip = (router, key, query) => {\n    return (_filterName, chipName) => {\n        const newState = query[key] ? query[key].split(',').filter(qval => qval !== chipName) : null;\n        router.navigate(stringifySearch(Object.assign(Object.assign({}, query), { [key]: newState === null || newState.length === 0 ? null : newState.join(',') })));\n    };\n};\nexport const onDeleteChipGroup = (router, query, key) => {\n    return () => {\n        router.navigate(stringifySearch(Object.assign(Object.assign({}, query), { [key]: null })));\n    };\n};\nconst descriptionMapStateToProps = (state) => {\n    const filterType = costModelsSelectors.currentFilterType(state);\n    const query = costModelsSelectors.query(state);\n    return { filterType, query };\n};\nconst descriptionMergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { intl = defaultIntl, // Default required for testing\n    router, } = ownProps;\n    const { filterType, query } = stateProps;\n    const chips = query.description ? query.description.split(',') : [];\n    return {\n        categoryName: intl.formatMessage(messages.description),\n        chips,\n        deleteChip: onDeleteChip(router, 'description', Object.assign(Object.assign({}, initialCostModelsQuery), query)),\n        deleteChipGroup: onDeleteChipGroup(router, Object.assign(Object.assign({}, initialCostModelsQuery), query), 'description'),\n        filterType,\n        intl,\n        query,\n        router,\n    };\n};\nconst DescriptionFilterBase = ({ deleteChip, deleteChipGroup, filterType, intl, chips, categoryName, query, router, }) => {\n    const [value, setValue] = React.useState('');\n    const children = filterType === 'description' ? (React.createElement(FilterInput, { placeholder: intl.formatMessage(messages.filterByPlaceholder, { value: filterType }), value: value, onChange: (text) => setValue(text), onKeyPress: onKeyPress(router, 'description', Object.assign(Object.assign({}, initialCostModelsQuery), query), { value, setValue }) })) : null;\n    return (React.createElement(ToolbarFilter, { deleteChip: deleteChip, deleteChipGroup: deleteChipGroup, chips: chips, categoryName: categoryName }, children));\n};\nconst DescriptionFilterConnect = connect(descriptionMapStateToProps, undefined, descriptionMergeProps)(DescriptionFilterBase);\nexport const DescriptionFilter = injectIntl(withRouter(DescriptionFilterConnect));\nconst nameFilterMapStateToProps = (state) => {\n    const filterType = costModelsSelectors.currentFilterType(state);\n    const query = costModelsSelectors.query(state);\n    return { filterType, query };\n};\nconst nameFilterMergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { intl = defaultIntl, // Default required for testing\n    router, } = ownProps;\n    const { filterType, query } = stateProps;\n    const chips = query.name ? query.name.split(',') : [];\n    return {\n        deleteChip: onDeleteChip(router, 'name', Object.assign(Object.assign({}, initialCostModelsQuery), query)),\n        deleteChipGroup: onDeleteChipGroup(router, Object.assign(Object.assign({}, initialCostModelsQuery), query), 'name'),\n        filterType,\n        chips,\n        categoryName: intl.formatMessage(messages.names, { count: 1 }),\n        intl,\n        query,\n        router,\n    };\n};\nconst NameFilterBase = ({ deleteChip, deleteChipGroup, filterType, intl, chips, categoryName, query, router, }) => {\n    const [value, setValue] = React.useState('');\n    const children = filterType === 'name' ? (React.createElement(FilterInput, { placeholder: intl.formatMessage(messages.filterByPlaceholder, { value: filterType }), value: value, onChange: (text) => setValue(text), onKeyPress: onKeyPress(router, 'name', Object.assign(Object.assign({}, initialCostModelsQuery), query), { value, setValue }) })) : null;\n    return (React.createElement(ToolbarFilter, { deleteChip: deleteChip, deleteChipGroup: deleteChipGroup, chips: chips, categoryName: categoryName }, children));\n};\nconst NameFilterConnect = connect(nameFilterMapStateToProps, undefined, nameFilterMergeProps)(NameFilterBase);\nexport const NameFilter = injectIntl(withRouter(NameFilterConnect));\nexport const onSelect = (id, setToggle) => {\n    return () => {\n        setToggle(false);\n        const element = document.getElementById(id);\n        element && element.focus();\n    };\n};\nconst sourceTypeFilterMapStateToProps = (state) => {\n    const filterType = costModelsSelectors.currentFilterType(state);\n    const query = costModelsSelectors.query(state);\n    return { filterType, query };\n};\nconst sourceTypeFilterMergeProps = (stateProps, _dispatchProps, ownProps) => {\n    const { intl = defaultIntl, // Default required for testing\n    router, } = ownProps;\n    const { filterType, query } = stateProps;\n    const chips = query.source_type ? [query.source_type] : [];\n    return {\n        chips,\n        categoryName: intl.formatMessage(messages.sourceType),\n        deleteChip: onDeleteChipGroup(router, Object.assign(Object.assign({}, initialCostModelsQuery), query), 'source_type'),\n        filterType,\n        intl,\n        query,\n        router,\n    };\n};\nconst SourceTypeFilterBase = ({ deleteChip, deleteChipGroup, filterType, intl, chips, categoryName, query, router, }) => {\n    const [isOpen, setIsOpen] = React.useState(false);\n    const id = 'source-type-filter';\n    const onFilter = (source) => router.navigate(stringifySearch(Object.assign(Object.assign(Object.assign({}, initialCostModelsQuery), query), { source_type: source })));\n    const children = filterType === 'sourceType' ? (React.createElement(Dropdown, { onSelect: onSelect(id, setIsOpen), isOpen: isOpen, toggle: React.createElement(DropdownToggle, { onToggle: (value) => {\n                setIsOpen(value);\n            }, id: id }, intl.formatMessage(messages.filterByPlaceholder, { value: 'source_type' })), dropdownItems: [\n            React.createElement(DropdownItem, { key: \"aws\", component: \"button\", onClick: () => onFilter('aws') }, intl.formatMessage(messages.aws)),\n            React.createElement(DropdownItem, { key: \"azure\", component: \"button\", onClick: () => onFilter('azure') }, intl.formatMessage(messages.azure)),\n            React.createElement(DropdownItem, { key: \"ocp\", component: \"button\", onClick: () => onFilter('ocp') }, intl.formatMessage(messages.openShift)),\n        ] })) : null;\n    return (React.createElement(ToolbarFilter, { deleteChip: deleteChip, deleteChipGroup: deleteChipGroup, chips: chips, categoryName: categoryName }, children));\n};\nconst SourceTypeFilterConnect = connect(sourceTypeFilterMapStateToProps, undefined, sourceTypeFilterMergeProps)(SourceTypeFilterBase);\nexport const SourceTypeFilter = injectIntl(withRouter(SourceTypeFilterConnect));\nconst toolbarMapStateToProps = (state) => {\n    const query = costModelsSelectors.query(state);\n    return { query };\n};\nconst toolbarMergeProps = (stateProps, _dispatchProps, ownProps) => {\n    const { children, router } = ownProps;\n    const { query } = stateProps;\n    return {\n        id: 'cost-models-toolbar',\n        clearAllFilters: () => router.navigate(stringifySearch(Object.assign(Object.assign(Object.assign({}, initialCostModelsQuery), query), { description: null, source_type: null, name: null }))),\n        children,\n    };\n};\nexport const ClearableToolbar = withRouter(connect(toolbarMapStateToProps, undefined, toolbarMergeProps)(Toolbar));\n","import { Pagination, PaginationVariant, Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { FilterIcon } from '@patternfly/react-icons/dist/esm/icons/filter-icon';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { withRouter } from 'utils/router';\nimport { initialCostModelsQuery, limitTransform, offsetTransform, stringifySearch } from './query';\nconst costModelsFilterSelectorMapStateToProps = (state) => {\n    return {\n        filterType: costModelsSelectors.currentFilterType(state),\n    };\n};\nconst costModelsFilterSelectorMapDispatchToProps = (dispatch) => {\n    return {\n        updateFilterType: (value) => {\n            dispatch(costModelsActions.updateFilterToolbar({\n                currentFilterType: value,\n            }));\n        },\n    };\n};\nconst costModelsFilterMergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { intl = defaultIntl } = ownProps; // Default required for testing\n    const { filterType } = stateProps;\n    return {\n        filterType,\n        intl,\n        updateFilterType: dispatchProps.updateFilterType,\n    };\n};\nconst CostModelsFilterSelectorBase = ({ filterType, intl, updateFilterType, }) => {\n    const [isOpen, setIsOpen] = React.useState(false);\n    const options = [\n        React.createElement(SelectOption, { key: \"name\", value: \"name\" }, intl.formatMessage(messages.names, { count: 1 })),\n        React.createElement(SelectOption, { key: \"description\", value: \"description\" }, intl.formatMessage(messages.description)),\n        React.createElement(SelectOption, { key: \"sourceType\", value: \"sourceType\" }, intl.formatMessage(messages.sourceType)),\n    ];\n    return (React.createElement(Select, { isOpen: isOpen, onSelect: (_event, value) => {\n            updateFilterType(value);\n            setIsOpen(false);\n        }, onToggle: setIsOpen, selections: filterType, toggleIcon: React.createElement(FilterIcon, null), variant: SelectVariant.single }, options));\n};\nconst CostModelsFilterSelectorConnect = connect(costModelsFilterSelectorMapStateToProps, costModelsFilterSelectorMapDispatchToProps, costModelsFilterMergeProps)(CostModelsFilterSelectorBase);\nexport const CostModelsFilterSelector = injectIntl(withRouter(CostModelsFilterSelectorConnect));\nconst topPaginationMapStateToProps = (state) => {\n    const { count, page, perPage } = costModelsSelectors.pagination(state);\n    const query = costModelsSelectors.query(state);\n    return { count, page, perPage, query };\n};\nconst topPaginationMergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { router } = ownProps;\n    const { count, page, perPage, query } = stateProps;\n    return {\n        isCompact: true,\n        itemCount: count,\n        page,\n        perPage,\n        variant: PaginationVariant.top,\n        onSetPage: (_evt, newPage, newPerPage) => {\n            router.navigate(stringifySearch(Object.assign(Object.assign(Object.assign({}, initialCostModelsQuery), query), { offset: offsetTransform(newPage, newPerPage) })));\n        },\n        onPerPageSelect: (_evt, newPerPage) => {\n            router.navigate(stringifySearch(Object.assign(Object.assign(Object.assign({}, initialCostModelsQuery), query), { limit: limitTransform(newPerPage), offset: 0 })));\n        },\n    };\n};\nexport const CostModelsTopPagination = withRouter(connect(topPaginationMapStateToProps, undefined, topPaginationMergeProps)(Pagination));\n","import { ToolbarContent, ToolbarGroup, ToolbarItem, ToolbarItemVariant, ToolbarToggleGroup, } from '@patternfly/react-core';\nimport { FilterIcon } from '@patternfly/react-icons/dist/esm/icons/filter-icon';\nimport React from 'react';\nimport { CreateCostModelButton } from './createCostModelButton';\nimport { ClearableToolbar, DescriptionFilter, NameFilter, SourceTypeFilter } from './utils/filters';\nimport { CostModelsFilterSelector, CostModelsTopPagination } from './utils/toolbar';\nconst CostModelsToolbar = () => {\n    return (React.createElement(ClearableToolbar, null,\n        React.createElement(ToolbarContent, null,\n            React.createElement(ToolbarToggleGroup, { breakpoint: \"xl\", toggleIcon: React.createElement(FilterIcon, null) },\n                React.createElement(ToolbarGroup, { variant: \"filter-group\" },\n                    React.createElement(ToolbarItem, null,\n                        React.createElement(CostModelsFilterSelector, null)),\n                    React.createElement(NameFilter, null),\n                    React.createElement(DescriptionFilter, null),\n                    React.createElement(SourceTypeFilter, null))),\n            React.createElement(ToolbarGroup, null,\n                React.createElement(CreateCostModelButton, null)),\n            React.createElement(ToolbarItem, { variant: ToolbarItemVariant.pagination },\n                React.createElement(CostModelsTopPagination, null)))));\n};\nexport default CostModelsToolbar;\n","import { PageSection } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport { parse, stringify } from 'qs';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { costModelsActions } from 'store/costModels';\nimport { metricsActions } from 'store/metrics';\nimport { rbacActions } from 'store/rbac';\nimport { withRouter } from 'utils/router';\nimport { CostModelsBottomPagination } from './bottomPagination';\nimport { styles } from './costModelsDetails.styles';\nimport { CreateCostModelWizard } from './createCostModelButton';\nimport DeleteDialog from './dialog';\nimport CostModelsTable from './table';\nimport CostModelsToolbar from './toolbar';\nclass CostModelsDetailsBase extends React.Component {\n    componentDidMount() {\n        const { getCostModelsData, getMetricsData, getRbacData, search } = this.props;\n        getCostModelsData(search);\n        getMetricsData();\n        getRbacData();\n    }\n    componentDidUpdate(prevProps) {\n        const { getCostModelsData, search } = this.props;\n        if (prevProps.search !== search) {\n            getCostModelsData(search);\n        }\n    }\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(PageSection, { isFilled: true },\n            React.createElement(\"div\", { style: styles.descContainer }, intl.formatMessage(messages.costModelsDesc, {\n                learnMore: (React.createElement(\"a\", { href: intl.formatMessage(messages.docsUsingCostModels), rel: \"noreferrer\", target: \"_blank\" }, intl.formatMessage(messages.learnMore))),\n            })),\n            React.createElement(CreateCostModelWizard, null),\n            React.createElement(DeleteDialog, null),\n            React.createElement(CostModelsToolbar, null),\n            React.createElement(CostModelsTable, null),\n            React.createElement(CostModelsBottomPagination, null)));\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getCostModelsData: (query) => costModelsActions.fetchCostModels(query)(dispatch),\n        getRbacData: () => rbacActions.fetchRbac()(dispatch),\n        getMetricsData: () => metricsActions.fetchMetrics()(dispatch),\n    };\n};\nconst mapStateToProps = (state, ownProps) => {\n    const query = parse(ownProps.router.location.search, { ignoreQueryPrefix: true });\n    const searchQuery = Object.assign(Object.assign({}, query), { tabKey: undefined });\n    return {\n        search: stringify(searchQuery, { encode: false, indices: false }),\n    };\n};\nconst CostModelsDetails = withRouter(injectIntl(connect(mapStateToProps, mapDispatchToProps)(CostModelsDetailsBase)));\nexport default CostModelsDetails;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    action: {\n        marginLeft: global_spacer_md.var,\n    },\n    descContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingLeft: global_spacer_md.value,\n        paddingRight: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport 'routes/components/dataTable/dataTable.scss';\nimport { Label } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { DataTable } from 'routes/components/dataTable';\nimport { styles } from 'routes/components/dataTable/dataTable.styles';\nimport { getUnsortedComputedReportItems } from 'routes/utils/computedReport/getComputedReportItems';\nimport { withRouter } from 'utils/router';\nexport const PlatformTableColumnIds = {\n    infrastructure: 'infrastructure',\n    monthOverMonth: 'monthOverMonth',\n    supplementary: 'supplementary',\n};\nclass PlatformTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { intl, isAllSelected, report, selectedItems } = this.props;\n            if (!report) {\n                return;\n            }\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: 'project',\n            });\n            const columns = [\n                {\n                    name: '', // Selection column\n                },\n                Object.assign({ orderBy: 'project', name: intl.formatMessage(messages.detailsResourceNames, { value: 'name' }) }, (computedItems.length && { isSortable: true })),\n                Object.assign({ orderBy: 'group', name: intl.formatMessage(messages.detailsResourceNames, { value: 'group' }) }, (computedItems.length && { isSortable: true })),\n                Object.assign(Object.assign({ orderBy: 'cluster', name: intl.formatMessage(messages.clusters) }, (computedItems.length && { isSortable: true })), { style: styles.lastItemColumn }),\n            ];\n            computedItems.map(item => {\n                const label = item && item.label !== null ? item.label : '';\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: label,\n                        },\n                        {\n                            value: (React.createElement(Label, { variant: \"outline\", color: \"green\" }, intl.formatMessage(messages.platform))),\n                        },\n                        { value: 'cluster', style: styles.lastItem },\n                    ],\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                });\n            });\n            const filteredColumns = columns.filter(column => !column.hidden);\n            const filteredRows = rows.map((_a) => {\n                var row = __rest(_a, []);\n                row.cells = row.cells.filter(cell => !cell.hidden);\n                return row;\n            });\n            this.setState({\n                columns: filteredColumns,\n                rows: filteredRows,\n            });\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport || prevProps.selectedItems !== selectedItems) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { filterBy, isLoading, onSelected, onSort, orderBy, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, filterBy: filterBy, isLoading: isLoading, onSelected: onSelected, onSort: onSort, orderBy: orderBy, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst PlatformTable = injectIntl(withRouter(PlatformTableBase));\nexport { PlatformTable };\n","import { Button, ButtonVariant, Tooltip } from '@patternfly/react-core';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { BasicToolbar } from 'routes/components/dataToolbar';\nimport { createMapStateToProps } from 'store/common';\nimport { styles } from './platformProjects.styles';\nexport class PlatformToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getActions = () => {\n            const { intl, onAddProjects, onRemoveProjects, selectedItems } = this.props;\n            const isDisabled = selectedItems.length === 0;\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Tooltip, { content: intl.formatMessage(messages.selectProjects) },\n                    React.createElement(Button, { isAriaDisabled: isDisabled, key: \"save\", onClick: onAddProjects, variant: ButtonVariant.primary }, intl.formatMessage(messages.addProjects))),\n                React.createElement(Tooltip, { content: intl.formatMessage(messages.selectProjects) },\n                    React.createElement(Button, { isAriaDisabled: isDisabled, key: \"reset\", onClick: onRemoveProjects, style: styles.action, variant: ButtonVariant.secondary }, intl.formatMessage(messages.removeProjects)))));\n        };\n        this.getCategoryOptions = () => {\n            const { intl } = this.props;\n            const options = [\n                { name: intl.formatMessage(messages.filterByValues, { value: 'name' }), key: 'project' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'group' }), key: 'group' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'cluster' }), key: 'cluster' },\n            ];\n            return options;\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        });\n    }\n    render() {\n        const { isAllSelected, isDisabled, itemsPerPage, itemsTotal, onBulkSelected, onFilterAdded, onFilterRemoved, pagination, query, selectedItems, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(BasicToolbar, { actions: this.getActions(), categoryOptions: categoryOptions, isAllSelected: isAllSelected, isDisabled: isDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.ocp, selectedItems: selectedItems, showBulkSelect: true, showFilter: true }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n    // TBD...\n    };\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst PlatformToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(PlatformToolbarBase);\nconst PlatformToolbar = injectIntl(PlatformToolbarConnect);\nexport { PlatformToolbar };\n","import { PageSection, Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { getQuery } from 'api/queries/query';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React, { useEffect, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Loading } from 'routes/components/page/loading';\nimport { NotAvailable } from 'routes/components/page/notAvailable';\nimport { getUnsortedComputedReportItems } from 'routes/utils/computedReport/getComputedReportItems';\nimport * as queryUtils from 'routes/utils/query';\nimport { FetchStatus } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { styles } from './platformProjects.styles';\nimport { PlatformTable } from './platformTable';\nimport { PlatformToolbar } from './platformToolbar';\nconst baseQuery = {\n    filter: {\n        resolution: 'monthly',\n        time_scope_units: 'month',\n        time_scope_value: -1,\n        limit: 10,\n        offset: 0,\n    },\n    filter_by: {},\n    group_by: {\n        project: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst PlatformProjects = () => {\n    const [isAllSelected, setIsAllSelected] = useState(false);\n    const [query, setQuery] = useState(Object.assign({}, baseQuery));\n    const [selectedItems, setSelectedItems] = useState([]);\n    const intl = useIntl();\n    const { report, reportError, reportFetchStatus, reportQueryString } = useMapToProps({ query });\n    const getComputedItems = () => {\n        return getUnsortedComputedReportItems({\n            report,\n            idKey: 'project',\n        });\n    };\n    const getPagination = (isDisabled = false, isBottom = false) => {\n        const count = report && report.meta ? report.meta.count : 0;\n        const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n            ? report.meta.filter.limit\n            : baseQuery.filter.limit;\n        const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n            ? report.meta.filter.offset\n            : baseQuery.filter.offset;\n        const page = Math.trunc(offset / limit + 1);\n        return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handleOnPerPageSelect(perPage), onSetPage: (event, pageNumber) => handleOnSetPage(pageNumber), page: page, perPage: limit, titles: {\n                paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                    title: intl.formatMessage(messages.openShift),\n                    placement: isBottom ? 'bottom' : 'top',\n                }),\n            }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n    };\n    const getTable = () => {\n        return (React.createElement(PlatformTable, { filterBy: query.filter_by, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, orderBy: query.order_by, onSelected: handleOnSelected, onSort: (sortType, isSortAscending) => handleOnSort(sortType, isSortAscending), report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n    };\n    const getToolbar = (computedItems) => {\n        const isDisabled = computedItems.length === 0;\n        const itemsTotal = report && report.meta ? report.meta.count : 0;\n        return (React.createElement(PlatformToolbar, { isAllSelected: isAllSelected, isDisabled: isDisabled, itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onAddProjects: handleOnAddProjects, onBulkSelected: handleOnBulkSelected, onFilterAdded: filter => handleOnFilterAdded(filter), onFilterRemoved: filter => handleOnFilterRemoved(filter), onRemoveProjects: handleOnRemoveProjects, pagination: getPagination(isDisabled), query: query, selectedItems: selectedItems }));\n    };\n    const handleOnBulkSelected = (action) => {\n        if (action === 'none') {\n            setIsAllSelected(false);\n            setSelectedItems([]);\n        }\n        else if (action === 'page') {\n            setIsAllSelected(false);\n            setSelectedItems(getComputedItems());\n        }\n        else if (action === 'all') {\n            setIsAllSelected(!isAllSelected);\n            setSelectedItems([]);\n        }\n    };\n    const handleOnAddProjects = () => { };\n    const handleOnRemoveProjects = () => { };\n    const handleOnFilterAdded = filter => {\n        const newQuery = queryUtils.handleOnFilterAdded(query, filter);\n        setQuery(newQuery);\n    };\n    const handleOnFilterRemoved = filter => {\n        const newQuery = queryUtils.handleOnFilterRemoved(query, filter);\n        setQuery(newQuery);\n    };\n    const handleOnPerPageSelect = perPage => {\n        const newQuery = queryUtils.handleOnPerPageSelect(query, perPage);\n        setQuery(newQuery);\n    };\n    const handleOnSetPage = pageNumber => {\n        const newQuery = queryUtils.handleOnSetPage(query, report, pageNumber);\n        setQuery(newQuery);\n    };\n    const handleOnSelected = (items, isSelected = false) => {\n        let newItems = [...(isAllSelected ? getComputedItems() : selectedItems)];\n        if (items && items.length > 0) {\n            if (isSelected) {\n                items.map(item => newItems.push(item));\n            }\n            else {\n                items.map(item => {\n                    newItems = newItems.filter(val => val.id !== item.id);\n                });\n            }\n        }\n        setIsAllSelected(false);\n        setSelectedItems(newItems);\n    };\n    const handleOnSort = (sortType, isSortAscending) => {\n        const newQuery = queryUtils.handleOnSort(query, sortType, isSortAscending);\n        setQuery(newQuery);\n    };\n    const computedItems = getComputedItems();\n    const isDisabled = computedItems.length === 0;\n    // Note: Providers are fetched via the AccountSettings component used by all routes\n    if (reportError) {\n        return React.createElement(NotAvailable, null);\n    }\n    return (React.createElement(PageSection, { isFilled: true },\n        React.createElement(\"div\", { style: styles.descContainer }, intl.formatMessage(messages.platfomProjectaDesc, {\n            learnMore: (React.createElement(\"a\", { href: intl.formatMessage(messages.docsConfigPlatformProjects), rel: \"noreferrer\", target: \"_blank\" }, intl.formatMessage(messages.learnMore))),\n        })),\n        getToolbar(computedItems),\n        reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n            getTable(),\n            React.createElement(\"div\", { style: styles.pagination }, getPagination(isDisabled, true))))));\n};\n// eslint-disable-next-line no-empty-pattern\nconst useMapToProps = ({ query }) => {\n    const reportType = ReportType.cost;\n    const reportPathsType = ReportPathsType.ocp;\n    const dispatch = useDispatch();\n    const reportQueryString = getQuery(query);\n    const report = useSelector((state) => reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString));\n    const reportFetchStatus = useSelector((state) => reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString));\n    const reportError = useSelector((state) => reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString));\n    useEffect(() => {\n        if (!reportError && reportFetchStatus !== FetchStatus.inProgress) {\n            dispatch(reportActions.fetchReport(reportPathsType, reportType, reportQueryString));\n        }\n    }, [query]);\n    return {\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n    };\n};\nexport default PlatformProjects;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    action: {\n        marginLeft: global_spacer_md.var,\n    },\n    descContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingLeft: global_spacer_md.value,\n        paddingRight: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport 'routes/components/dataTable/dataTable.scss';\nimport { Label } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { DataTable } from 'routes/components/dataTable';\nimport { styles } from 'routes/components/dataTable/dataTable.styles';\nimport { getUnsortedComputedReportItems } from 'routes/utils/computedReport/getComputedReportItems';\nimport { withRouter } from 'utils/router';\nexport const TagTableColumnIds = {\n    infrastructure: 'infrastructure',\n    monthOverMonth: 'monthOverMonth',\n    supplementary: 'supplementary',\n};\nclass TagTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { intl, isAllSelected, report, selectedItems } = this.props;\n            if (!report) {\n                return;\n            }\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: 'project',\n            });\n            const columns = [\n                {\n                    name: '', // Selection column\n                },\n                Object.assign({ orderBy: 'project', name: intl.formatMessage(messages.detailsResourceNames, { value: 'name' }) }, (computedItems.length && { isSortable: true })),\n                Object.assign({ orderBy: 'status', name: intl.formatMessage(messages.detailsResourceNames, { value: 'status' }) }, (computedItems.length && { isSortable: true })),\n                Object.assign(Object.assign({ orderBy: 'source_type', name: intl.formatMessage(messages.sourceType) }, (computedItems.length && { isSortable: true })), { style: styles.lastItemColumn }),\n            ];\n            computedItems.map(item => {\n                const label = item && item.label !== null ? item.label : '';\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: label,\n                        },\n                        {\n                            value: (React.createElement(Label, { variant: \"outline\", color: \"green\" }, intl.formatMessage(messages.enabled))),\n                        },\n                        { value: 'source type', style: styles.lastItem },\n                    ],\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                });\n            });\n            const filteredColumns = columns.filter(column => !column.hidden);\n            const filteredRows = rows.map((_a) => {\n                var row = __rest(_a, []);\n                row.cells = row.cells.filter(cell => !cell.hidden);\n                return row;\n            });\n            this.setState({\n                columns: filteredColumns,\n                rows: filteredRows,\n            });\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport || prevProps.selectedItems !== selectedItems) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { filterBy, isLoading, onSelected, onSort, orderBy, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, filterBy: filterBy, isLoading: isLoading, onSelected: onSelected, onSort: onSort, orderBy: orderBy, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst TagTable = injectIntl(withRouter(TagTableBase));\nexport { TagTable };\n","import { Button, ButtonVariant, Tooltip } from '@patternfly/react-core';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { BasicToolbar } from 'routes/components/dataToolbar';\nimport { createMapStateToProps } from 'store/common';\nimport { styles } from './tagDetails.styles';\nexport class TagToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getActions = () => {\n            const { intl, onDisableTags, onEnableTags, selectedItems } = this.props;\n            const isDisabled = selectedItems.length === 0;\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Tooltip, { content: intl.formatMessage(messages.selectTags) },\n                    React.createElement(Button, { isAriaDisabled: isDisabled, key: \"save\", onClick: onEnableTags, variant: ButtonVariant.primary }, intl.formatMessage(messages.enableTags))),\n                React.createElement(Tooltip, { content: intl.formatMessage(messages.selectTags) },\n                    React.createElement(Button, { isAriaDisabled: isDisabled, key: \"reset\", onClick: onDisableTags, style: styles.action, variant: ButtonVariant.secondary }, intl.formatMessage(messages.disableTags)))));\n        };\n        this.getCategoryOptions = () => {\n            const { intl } = this.props;\n            const options = [\n                { name: intl.formatMessage(messages.filterByValues, { value: 'name' }), key: 'project' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'status' }), key: 'status' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'source_type' }), key: 'source_type' },\n            ];\n            return options;\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        });\n    }\n    render() {\n        const { isAllSelected, isDisabled, itemsPerPage, itemsTotal, onBulkSelected, onFilterAdded, onFilterRemoved, pagination, query, selectedItems, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(BasicToolbar, { actions: this.getActions(), categoryOptions: categoryOptions, isAllSelected: isAllSelected, isDisabled: isDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.ocp, selectedItems: selectedItems, showBulkSelect: true, showFilter: true }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n    // TBD...\n    };\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst TagToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(TagToolbarBase);\nconst TagToolbar = injectIntl(TagToolbarConnect);\nexport { TagToolbar };\n","import { PageSection, Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { getQuery } from 'api/queries/query';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React, { useEffect, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Loading } from 'routes/components/page/loading';\nimport { NotAvailable } from 'routes/components/page/notAvailable';\nimport { getUnsortedComputedReportItems } from 'routes/utils/computedReport/getComputedReportItems';\nimport * as queryUtils from 'routes/utils/query';\nimport { FetchStatus } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { styles } from './tagDetails.styles';\nimport { TagTable } from './tagTable';\nimport { TagToolbar } from './tagToolbar';\nconst baseQuery = {\n    filter: {\n        resolution: 'monthly',\n        time_scope_units: 'month',\n        time_scope_value: -1,\n        limit: 10,\n        offset: 0,\n    },\n    filter_by: {},\n    group_by: {\n        project: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst TagDetails = () => {\n    const [isAllSelected, setIsAllSelected] = useState(false);\n    const [query, setQuery] = useState(Object.assign({}, baseQuery));\n    const [selectedItems, setSelectedItems] = useState([]);\n    const intl = useIntl();\n    const { report, reportError, reportFetchStatus, reportQueryString } = useMapToProps({ query });\n    const getComputedItems = () => {\n        return getUnsortedComputedReportItems({\n            report,\n            idKey: 'project',\n        });\n    };\n    const getPagination = (isDisabled = false, isBottom = false) => {\n        const count = report && report.meta ? report.meta.count : 0;\n        const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n            ? report.meta.filter.limit\n            : baseQuery.filter.limit;\n        const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n            ? report.meta.filter.offset\n            : baseQuery.filter.offset;\n        const page = Math.trunc(offset / limit + 1);\n        return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handleOnPerPageSelect(perPage), onSetPage: (event, pageNumber) => handleOnSetPage(pageNumber), page: page, perPage: limit, titles: {\n                paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                    title: intl.formatMessage(messages.openShift),\n                    placement: isBottom ? 'bottom' : 'top',\n                }),\n            }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n    };\n    const getTable = () => {\n        return (React.createElement(TagTable, { filterBy: query.filter_by, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, orderBy: query.order_by, onSelected: handleOnSelected, onSort: (sortType, isSortAscending) => handleOnSort(sortType, isSortAscending), report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n    };\n    const getToolbar = (computedItems) => {\n        const isDisabled = computedItems.length === 0;\n        const itemsTotal = report && report.meta ? report.meta.count : 0;\n        return (React.createElement(TagToolbar, { isAllSelected: isAllSelected, isDisabled: isDisabled, itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: handleOnBulkSelected, onDisableTags: handleOnDisableTags, onEnableTags: handleOnEnableTags, onFilterAdded: filter => handleOnFilterAdded(filter), onFilterRemoved: filter => handleOnFilterRemoved(filter), pagination: getPagination(isDisabled), query: query, selectedItems: selectedItems }));\n    };\n    const handleOnBulkSelected = (action) => {\n        if (action === 'none') {\n            setIsAllSelected(false);\n            setSelectedItems([]);\n        }\n        else if (action === 'page') {\n            setIsAllSelected(false);\n            setSelectedItems(getComputedItems());\n        }\n        else if (action === 'all') {\n            setIsAllSelected(!isAllSelected);\n            setSelectedItems([]);\n        }\n    };\n    const handleOnDisableTags = () => { };\n    const handleOnEnableTags = () => { };\n    const handleOnFilterAdded = filter => {\n        const newQuery = queryUtils.handleOnFilterAdded(query, filter);\n        setQuery(newQuery);\n    };\n    const handleOnFilterRemoved = filter => {\n        const newQuery = queryUtils.handleOnFilterRemoved(query, filter);\n        setQuery(newQuery);\n    };\n    const handleOnPerPageSelect = perPage => {\n        const newQuery = queryUtils.handleOnPerPageSelect(query, perPage);\n        setQuery(newQuery);\n    };\n    const handleOnSetPage = pageNumber => {\n        const newQuery = queryUtils.handleOnSetPage(query, report, pageNumber);\n        setQuery(newQuery);\n    };\n    const handleOnSelected = (items, isSelected = false) => {\n        let newItems = [...(isAllSelected ? getComputedItems() : selectedItems)];\n        if (items && items.length > 0) {\n            if (isSelected) {\n                items.map(item => newItems.push(item));\n            }\n            else {\n                items.map(item => {\n                    newItems = newItems.filter(val => val.id !== item.id);\n                });\n            }\n        }\n        setIsAllSelected(false);\n        setSelectedItems(newItems);\n    };\n    const handleOnSort = (sortType, isSortAscending) => {\n        const newQuery = queryUtils.handleOnSort(query, sortType, isSortAscending);\n        setQuery(newQuery);\n    };\n    const computedItems = getComputedItems();\n    const isDisabled = computedItems.length === 0;\n    // Note: Providers are fetched via the AccountSettings component used by all routes\n    if (reportError) {\n        return React.createElement(NotAvailable, null);\n    }\n    return (React.createElement(PageSection, { isFilled: true },\n        React.createElement(\"div\", { style: styles.descContainer }, intl.formatMessage(messages.tagDesc, {\n            learnMore: (React.createElement(\"a\", { href: intl.formatMessage(messages.docsConfigTags), rel: \"noreferrer\", target: \"_blank\" }, intl.formatMessage(messages.learnMore))),\n        })),\n        getToolbar(computedItems),\n        reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n            getTable(),\n            React.createElement(\"div\", { style: styles.pagination }, getPagination(isDisabled, true))))));\n};\n// eslint-disable-next-line no-empty-pattern\nconst useMapToProps = ({ query }) => {\n    const reportType = ReportType.cost;\n    const reportPathsType = ReportPathsType.ocp;\n    const dispatch = useDispatch();\n    const reportQueryString = getQuery(query);\n    const report = useSelector((state) => reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString));\n    const reportFetchStatus = useSelector((state) => reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString));\n    const reportError = useSelector((state) => reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString));\n    useEffect(() => {\n        if (!reportError && reportFetchStatus !== FetchStatus.inProgress) {\n            dispatch(reportActions.fetchReport(reportPathsType, reportType, reportQueryString));\n        }\n    }, [query]);\n    return {\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n    };\n};\nexport default TagDetails;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    action: {\n        marginLeft: global_spacer_md.var,\n    },\n    descContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingLeft: global_spacer_md.value,\n        paddingRight: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport 'routes/components/dataTable/dataTable.scss';\nimport { Label } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { DataTable } from 'routes/components/dataTable';\nimport { getUnsortedComputedReportItems } from 'routes/utils/computedReport/getComputedReportItems';\nimport { withRouter } from 'utils/router';\nexport const CostCategoryColumnIds = {\n    infrastructure: 'infrastructure',\n    monthOverMonth: 'monthOverMonth',\n    supplementary: 'supplementary',\n};\nclass CostCategoryBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { intl, isAllSelected, report, selectedItems } = this.props;\n            if (!report) {\n                return;\n            }\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: 'project',\n            });\n            const columns = [\n                {\n                    name: '', // Selection column\n                },\n                Object.assign({ orderBy: 'project', name: intl.formatMessage(messages.detailsResourceNames, { value: 'name' }) }, (computedItems.length && { isSortable: true })),\n                Object.assign({ orderBy: 'status', name: intl.formatMessage(messages.detailsResourceNames, { value: 'status' }) }, (computedItems.length && { isSortable: true })),\n            ];\n            computedItems.map(item => {\n                const label = item && item.label !== null ? item.label : '';\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: label,\n                        },\n                        {\n                            value: (React.createElement(Label, { variant: \"outline\", color: \"green\" }, intl.formatMessage(messages.enabled))),\n                        },\n                    ],\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                });\n            });\n            const filteredColumns = columns.filter(column => !column.hidden);\n            const filteredRows = rows.map((_a) => {\n                var row = __rest(_a, []);\n                row.cells = row.cells.filter(cell => !cell.hidden);\n                return row;\n            });\n            this.setState({\n                columns: filteredColumns,\n                rows: filteredRows,\n            });\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport || prevProps.selectedItems !== selectedItems) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { filterBy, isLoading, onSelected, onSort, orderBy, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, filterBy: filterBy, isLoading: isLoading, onSelected: onSelected, onSort: onSort, orderBy: orderBy, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst CostCategoryTable = injectIntl(withRouter(CostCategoryBase));\nexport { CostCategoryTable };\n","import { Button, ButtonVariant, Tooltip } from '@patternfly/react-core';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { BasicToolbar } from 'routes/components/dataToolbar';\nimport { createMapStateToProps } from 'store/common';\nimport { styles } from './costCategory.styles';\nexport class CostCategoryToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getActions = () => {\n            const { intl, onDisableTags, onEnableTags, selectedItems } = this.props;\n            const isDisabled = selectedItems.length === 0;\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Tooltip, { content: intl.formatMessage(messages.selectCategories) },\n                    React.createElement(Button, { isAriaDisabled: isDisabled, key: \"save\", onClick: onEnableTags, variant: ButtonVariant.primary }, intl.formatMessage(messages.enableCategories))),\n                React.createElement(Tooltip, { content: intl.formatMessage(messages.selectCategories) },\n                    React.createElement(Button, { isAriaDisabled: isDisabled, key: \"reset\", onClick: onDisableTags, style: styles.action, variant: ButtonVariant.secondary }, intl.formatMessage(messages.disableCategories)))));\n        };\n        this.getCategoryOptions = () => {\n            const { intl } = this.props;\n            const options = [\n                { name: intl.formatMessage(messages.filterByValues, { value: 'name' }), key: 'project' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'status' }), key: 'status' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'source_type' }), key: 'source_type' },\n            ];\n            return options;\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        });\n    }\n    render() {\n        const { isAllSelected, isDisabled, itemsPerPage, itemsTotal, onBulkSelected, onFilterAdded, onFilterRemoved, pagination, query, selectedItems, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(BasicToolbar, { actions: this.getActions(), categoryOptions: categoryOptions, isAllSelected: isAllSelected, isDisabled: isDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.ocp, selectedItems: selectedItems, showBulkSelect: true, showFilter: true }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst CostCategoryToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(CostCategoryToolbarBase);\nconst CostCategoryToolbar = injectIntl(CostCategoryToolbarConnect);\nexport { CostCategoryToolbar };\n","import { PageSection, Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { getQuery } from 'api/queries/query';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React, { useEffect, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Loading } from 'routes/components/page/loading';\nimport { NotAvailable } from 'routes/components/page/notAvailable';\nimport { getUnsortedComputedReportItems } from 'routes/utils/computedReport/getComputedReportItems';\nimport * as queryUtils from 'routes/utils/query';\nimport { FetchStatus } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { styles } from './costCategory.styles';\nimport { CostCategoryTable } from './costCategoryTable';\nimport { CostCategoryToolbar } from './costCategoryToolbar';\nconst baseQuery = {\n    filter: {\n        resolution: 'monthly',\n        time_scope_units: 'month',\n        time_scope_value: -1,\n        limit: 10,\n        offset: 0,\n    },\n    filter_by: {},\n    group_by: {\n        project: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst CostCategory = () => {\n    const [isAllSelected, setIsAllSelected] = useState(false);\n    const [query, setQuery] = useState(Object.assign({}, baseQuery));\n    const [selectedItems, setSelectedItems] = useState([]);\n    const intl = useIntl();\n    const { report, reportError, reportFetchStatus, reportQueryString } = useMapToProps({ query });\n    const getComputedItems = () => {\n        return getUnsortedComputedReportItems({\n            report,\n            idKey: 'project',\n        });\n    };\n    const getPagination = (isDisabled = false, isBottom = false) => {\n        const count = report && report.meta ? report.meta.count : 0;\n        const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n            ? report.meta.filter.limit\n            : baseQuery.filter.limit;\n        const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n            ? report.meta.filter.offset\n            : baseQuery.filter.offset;\n        const page = Math.trunc(offset / limit + 1);\n        return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handleOnPerPageSelect(perPage), onSetPage: (event, pageNumber) => handleOnSetPage(pageNumber), page: page, perPage: limit, titles: {\n                paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                    title: intl.formatMessage(messages.openShift),\n                    placement: isBottom ? 'bottom' : 'top',\n                }),\n            }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n    };\n    const getTable = () => {\n        return (React.createElement(CostCategoryTable, { filterBy: query.filter_by, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, orderBy: query.order_by, onSelected: handleOnSelected, onSort: (sortType, isSortAscending) => handleOnSort(sortType, isSortAscending), report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n    };\n    const getToolbar = (computedItems) => {\n        const isDisabled = computedItems.length === 0;\n        const itemsTotal = report && report.meta ? report.meta.count : 0;\n        return (React.createElement(CostCategoryToolbar, { isAllSelected: isAllSelected, isDisabled: isDisabled, itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: handleOnBulkSelected, onDisableTags: handleOnDisableCategories, onEnableTags: handleOnEnableCategories, onFilterAdded: filter => handleOnFilterAdded(filter), onFilterRemoved: filter => handleOnFilterRemoved(filter), pagination: getPagination(isDisabled), query: query, selectedItems: selectedItems }));\n    };\n    const handleOnBulkSelected = (action) => {\n        if (action === 'none') {\n            setIsAllSelected(false);\n            setSelectedItems([]);\n        }\n        else if (action === 'page') {\n            setIsAllSelected(false);\n            setSelectedItems(getComputedItems());\n        }\n        else if (action === 'all') {\n            setIsAllSelected(!isAllSelected);\n            setSelectedItems([]);\n        }\n    };\n    const handleOnDisableCategories = () => { };\n    const handleOnEnableCategories = () => { };\n    const handleOnFilterAdded = filter => {\n        const newQuery = queryUtils.handleOnFilterAdded(query, filter);\n        setQuery(newQuery);\n    };\n    const handleOnFilterRemoved = filter => {\n        const newQuery = queryUtils.handleOnFilterRemoved(query, filter);\n        setQuery(newQuery);\n    };\n    const handleOnPerPageSelect = perPage => {\n        const newQuery = queryUtils.handleOnPerPageSelect(query, perPage);\n        setQuery(newQuery);\n    };\n    const handleOnSetPage = pageNumber => {\n        const newQuery = queryUtils.handleOnSetPage(query, report, pageNumber);\n        setQuery(newQuery);\n    };\n    const handleOnSelected = (items, isSelected = false) => {\n        let newItems = [...(isAllSelected ? getComputedItems() : selectedItems)];\n        if (items && items.length > 0) {\n            if (isSelected) {\n                items.map(item => newItems.push(item));\n            }\n            else {\n                items.map(item => {\n                    newItems = newItems.filter(val => val.id !== item.id);\n                });\n            }\n        }\n        setIsAllSelected(false);\n        setSelectedItems(newItems);\n    };\n    const handleOnSort = (sortType, isSortAscending) => {\n        const newQuery = queryUtils.handleOnSort(query, sortType, isSortAscending);\n        setQuery(newQuery);\n    };\n    const computedItems = getComputedItems();\n    const isDisabled = computedItems.length === 0;\n    // Note: Providers are fetched via the AccountSettings component used by all routes\n    if (reportError) {\n        return React.createElement(NotAvailable, null);\n    }\n    return (React.createElement(PageSection, { isFilled: true },\n        React.createElement(\"div\", { style: styles.descContainer }, intl.formatMessage(messages.costCategoryDesc, {\n            learnMore: (React.createElement(\"a\", { href: intl.formatMessage(messages.docsConfigCostCategory), rel: \"noreferrer\", target: \"_blank\" }, intl.formatMessage(messages.learnMore))),\n        })),\n        getToolbar(computedItems),\n        reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n            getTable(),\n            React.createElement(\"div\", { style: styles.pagination }, getPagination(isDisabled, true))))));\n};\n// eslint-disable-next-line no-empty-pattern\nconst useMapToProps = ({ query }) => {\n    const reportType = ReportType.cost;\n    const reportPathsType = ReportPathsType.ocp;\n    const dispatch = useDispatch();\n    const reportQueryString = getQuery(query);\n    const report = useSelector((state) => reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString));\n    const reportFetchStatus = useSelector((state) => reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString));\n    const reportError = useSelector((state) => reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString));\n    useEffect(() => {\n        if (!reportError && reportFetchStatus !== FetchStatus.inProgress) {\n            dispatch(reportActions.fetchReport(reportPathsType, reportType, reportQueryString));\n        }\n    }, [query]);\n    return {\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n    };\n};\nexport default CostCategory;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const styles = {\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        paddingLeft: global_spacer_lg.var,\n        paddingRight: global_spacer_lg.var,\n        paddingTop: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    tabs: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        paddingTop: global_spacer_lg.var,\n    },\n};\n","import './settings.scss';\nimport { Tab, TabContent, Tabs, TabTitleText, Title, TitleSizes } from '@patternfly/react-core';\nimport { getUserAccessQuery } from 'api/queries/userAccessQuery';\nimport { UserAccessType } from 'api/userAccess';\nimport messages from 'locales/messages';\nimport React, { useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useSelector } from 'react-redux';\nimport { routes } from 'routes';\nimport { Loading } from 'routes/components/page/loading';\nimport { NotAuthorized } from 'routes/components/page/notAuthorized';\nimport { Calculations } from 'routes/settings/calculations';\nimport { CostModelsDetails } from 'routes/settings/costModels';\nimport { PlatformProjects } from 'routes/settings/platformProjects';\nimport { TagDetails } from 'routes/settings/tagDetails';\nimport { FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { userAccessQuery, userAccessSelectors } from 'store/userAccess';\nimport { withChrome } from 'utils/chrome';\nimport { formatPath } from 'utils/paths';\nimport { hasCostModelAccess } from 'utils/userAccess';\nimport { CostCategory } from './costCategory';\nimport { styles } from './settings.styles';\n// eslint-disable-next-line no-shadow\nvar SettingsTab;\n(function (SettingsTab) {\n    SettingsTab[\"costModels\"] = \"cost_models\";\n    SettingsTab[\"calculations\"] = \"calculations\";\n    SettingsTab[\"costCategory\"] = \"cost_category\";\n    SettingsTab[\"platformProjects\"] = \"platform_projects\";\n    SettingsTab[\"tags\"] = \"tags\";\n})(SettingsTab || (SettingsTab = {}));\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case SettingsTab.costModels:\n            return 'cost_models';\n        case SettingsTab.calculations:\n            return 'calculations';\n        case SettingsTab.costCategory:\n            return 'cost_category';\n        case SettingsTab.platformProjects:\n            return 'platform_projects';\n        case SettingsTab.tags:\n            return 'tags';\n    }\n};\nconst Settings = ({ chrome }) => {\n    const [activeTabKey, setActiveTabKey] = useState(0);\n    const { isSettingsPlatformEnabled, userAccess, userAccessFetchStatus } = useMapToProps();\n    const intl = useIntl();\n    const getAvailableTabs = () => {\n        const availableTabs = [\n            {\n                contentRef: React.createRef(),\n                tab: SettingsTab.costModels,\n            },\n            {\n                contentRef: React.createRef(),\n                tab: SettingsTab.calculations,\n            },\n            {\n                contentRef: React.createRef(),\n                tab: SettingsTab.tags,\n            },\n            {\n                contentRef: React.createRef(),\n                tab: SettingsTab.costCategory,\n            },\n        ];\n        if (isSettingsPlatformEnabled) {\n            availableTabs.push({\n                contentRef: React.createRef(),\n                tab: SettingsTab.platformProjects,\n            });\n        }\n        return availableTabs;\n    };\n    const getTab = (tab, contentRef, index) => {\n        return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, tabContentId: `tab-${index}`, tabContentRef: contentRef, title: React.createElement(TabTitleText, null, getTabTitle(tab)) }));\n    };\n    const getTabContent = (availableTabs) => {\n        return availableTabs.map((val, index) => {\n            return (React.createElement(TabContent, { eventKey: index, key: `${getIdKeyForTab(val.tab)}-tabContent`, id: `tab-${index}`, ref: val.contentRef }, getTabItem(val.tab, index)));\n        });\n    };\n    const getTabItem = (tab, index) => {\n        const notAuthorized = React.createElement(NotAuthorized, { pathname: formatPath(routes.settings.path) });\n        const emptyTab = React.createElement(React.Fragment, null); // Lazily load tabs\n        if (activeTabKey !== index) {\n            return emptyTab;\n        }\n        const currentTab = getIdKeyForTab(tab);\n        if (currentTab === SettingsTab.costModels) {\n            return chrome.isOrgAdmin || hasCostModelAccess(userAccess) ? (React.createElement(CostModelsDetails, null)) : (React.createElement(NotAuthorized, { pathname: formatPath(routes.costModel.path) }));\n        }\n        else if (currentTab === SettingsTab.calculations) {\n            return chrome.isOrgAdmin ? React.createElement(Calculations, null) : notAuthorized;\n        }\n        else if (currentTab === SettingsTab.costCategory) {\n            return chrome.isOrgAdmin ? React.createElement(CostCategory, null) : notAuthorized;\n        }\n        else if (currentTab === SettingsTab.platformProjects) {\n            return chrome.isOrgAdmin ? React.createElement(PlatformProjects, null) : notAuthorized;\n        }\n        else if (currentTab === SettingsTab.tags) {\n            return chrome.isOrgAdmin ? React.createElement(TagDetails, null) : notAuthorized;\n        }\n        else {\n            return emptyTab;\n        }\n    };\n    const getTabs = (availableTabs) => {\n        return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: handleTabClick }, availableTabs.map((val, index) => getTab(val.tab, val.contentRef, index))));\n    };\n    const getTabTitle = (tab) => {\n        if (tab === SettingsTab.calculations) {\n            return intl.formatMessage(messages.currencyCalcuationsTitle);\n        }\n        else if (tab === SettingsTab.costCategory) {\n            return intl.formatMessage(messages.costCategoryTitle);\n        }\n        else if (tab === SettingsTab.costModels) {\n            return intl.formatMessage(messages.costModels);\n        }\n        else if (tab === SettingsTab.platformProjects) {\n            return intl.formatMessage(messages.platformProjectsTitle);\n        }\n        else if (tab === SettingsTab.tags) {\n            return intl.formatMessage(messages.tagLabelsTitle);\n        }\n    };\n    const handleTabClick = (event, tabIndex) => {\n        if (activeTabKey !== tabIndex) {\n            setActiveTabKey(tabIndex);\n        }\n    };\n    const availableTabs = getAvailableTabs();\n    return (React.createElement(\"div\", { className: \"tabsOverride\" },\n        React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", size: TitleSizes['2xl'] }, intl.formatMessage(messages.settingsTitle))),\n            userAccessFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(\"div\", { style: styles.tabs }, getTabs(availableTabs)))),\n        React.createElement(\"div\", null, getTabContent(availableTabs))));\n};\n// eslint-disable-next-line no-empty-pattern\nconst useMapToProps = () => {\n    const userAccessQueryString = getUserAccessQuery(userAccessQuery);\n    const userAccess = useSelector((state) => userAccessSelectors.selectUserAccess(state, UserAccessType.all, userAccessQueryString));\n    const userAccessError = useSelector((state) => userAccessSelectors.selectUserAccessError(state, UserAccessType.all, userAccessQueryString));\n    const userAccessFetchStatus = useSelector((state) => userAccessSelectors.selectUserAccessFetchStatus(state, UserAccessType.all, userAccessQueryString));\n    return {\n        isSettingsPlatformEnabled: useSelector((state) => featureFlagsSelectors.selectIsSettingsPlatformFeatureEnabled(state)),\n        userAccess,\n        userAccessError,\n        userAccessFetchStatus,\n        userAccessQueryString,\n    };\n};\nexport default withChrome(Settings);\n","// eslint-disable-next-line no-shadow\nvar DataType;\n(function (DataType) {\n    DataType[\"currentMonthData\"] = \"current_month_data\";\n    DataType[\"hasData\"] = \"has_data\";\n    DataType[\"previousMonthData\"] = \"previous_month_data\";\n})(DataType || (DataType = {}));\n// Returns the OCP provider matching the given infrastructure uuid\nconst _getOcpProvider = (ocpProviders, uuid) => {\n    let result;\n    if (ocpProviders && ocpProviders.data) {\n        for (const provider of ocpProviders.data) {\n            if (provider.infrastructure && provider.infrastructure.uuid === uuid) {\n                result = provider;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Returns new Provider matching the given provider type\n//\n// See https://issues.redhat.com/browse/COST-2202\nexport const filterProviders = (providers, sourceType) => {\n    if (!providers) {\n        return providers;\n    }\n    const data = providers.data.filter(provider => provider.source_type.toLowerCase() === sourceType);\n    const meta = Object.assign(Object.assign({}, providers.meta), { count: data.length });\n    return Object.assign(Object.assign({}, providers), { meta,\n        data });\n};\n// Ensure at least one source provider has data available\nconst _hasData = (providers, datumType) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            if (provider[datumType]) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one cloud source provider has data available\nconst _hasCloudData = (providers, ocpProviders, dataType) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            const ocpProvider = _getOcpProvider(ocpProviders, provider.uuid);\n            // Ensure AWS provider is filtered by OpenShift and has OCP data\n            if (ocpProvider && ocpProvider[dataType]) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one cloud source provider\nconst _hasCloudProvider = (providers, ocpProviders) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            const ocpProvider = _getOcpProvider(ocpProviders, provider.uuid);\n            // Ensure AWS provider is filtered by OpenShift\n            if (ocpProvider) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one cloud source provider has data available for the current month (e.g., \"AWS filtered by OpenShift\")\nexport const hasCloudCurrentMonthData = (providers, ocpProviders) => {\n    return _hasCloudData(providers, ocpProviders, DataType.currentMonthData);\n};\n// Ensure at least one cloud source provider has data available (e.g., \"AWS filtered by OpenShift\")\nexport const hasCloudData = (providers, ocpProviders) => {\n    return _hasCloudData(providers, ocpProviders, DataType.hasData);\n};\n// Ensure at least one cloud source provider has data available for the previous month (e.g., \"AWS filtered by OpenShift\")\nexport const hasCloudPreviousMonthData = (providers, ocpProviders) => {\n    return _hasCloudData(providers, ocpProviders, DataType.previousMonthData);\n};\n// Ensure at least one cloud source provider (e.g., \"AWS filtered by OpenShift\"), regardless if there is OCP data\nexport const hasCloudProvider = (providers, ocpProviders) => {\n    return _hasCloudProvider(providers, ocpProviders);\n};\n// Ensure at least one source provider has data available for the current month\nexport const hasCurrentMonthData = (providers) => {\n    return _hasData(providers, DataType.currentMonthData);\n};\n// Ensure at least one source provider has data available\nexport const hasData = (providers) => {\n    return _hasData(providers, DataType.hasData);\n};\n// Ensure at least one source provider has data available for the previous month\nexport const hasPreviousMonthData = (providers) => {\n    return _hasData(providers, DataType.previousMonthData);\n};\n","import { getQueryRoute } from 'api/queries/query';\nimport { addFilterToQuery, removeFilterFromQuery } from './filter';\nexport const initQuery = (query, reset = false, props = {}) => {\n    const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), props);\n    // Reset pagination\n    if (reset) {\n        if (newQuery.filter && newQuery.filter.offset !== undefined) {\n            newQuery.filter = Object.assign(Object.assign({}, query.filter), { offset: 0 });\n        }\n        if (newQuery.offset !== undefined) {\n            newQuery.offset = 0;\n        }\n    }\n    return newQuery;\n};\nexport const getRouteForQuery = (query, location, reset = false) => {\n    const newQuery = initQuery(query, reset);\n    return `${location.pathname}?${getQueryRoute(newQuery)}`;\n};\nexport const handleOnCurrencySelected = (query) => {\n    return initQuery(query);\n};\nexport const handleOnCostTypeSelected = (query) => {\n    return initQuery(query);\n};\nexport const handleOnCostDistributionSelected = (query) => {\n    return initQuery(query, false, {\n        order_by: undefined, // Clear sort\n    });\n};\nexport const handleOnFilterAdded = (query, filter) => {\n    const newQuery = initQuery(query, true);\n    return addFilterToQuery(newQuery, filter);\n};\nexport const handleOnFilterRemoved = (query, filter) => {\n    const newQuery = initQuery(query, true);\n    return removeFilterFromQuery(newQuery, filter);\n};\nexport const handleOnPerPageSelect = (query, perPage, isLimit = false) => {\n    return initQuery(query, false, Object.assign({}, (isLimit\n        ? {\n            limit: perPage,\n        }\n        : {\n            filter: Object.assign(Object.assign({}, query.filter), { limit: perPage }),\n        })));\n};\nexport const handleOnSetPage = (query, report, pageNumber, isLimit = false) => {\n    let limit = 10;\n    if (report && report.meta) {\n        if (isLimit && report.meta.limit !== undefined) {\n            limit = report.meta.limit;\n        }\n        else if (report.meta.filter && report.meta.filter.limit !== undefined) {\n            limit = report.meta.filter.limit;\n        }\n    }\n    const offset = pageNumber * limit - limit;\n    return initQuery(query, false, Object.assign({}, (isLimit\n        ? {\n            limit,\n            offset,\n        }\n        : {\n            filter: Object.assign(Object.assign({}, query.filter), { limit,\n                offset }),\n        })));\n};\nexport const handleOnSort = (query, sortType, isSortAscending, date = undefined) => {\n    return initQuery(query, false, {\n        order_by: Object.assign({ [sortType]: isSortAscending ? 'asc' : 'desc' }, (date && {\n            date,\n        })),\n    });\n};\n","import { useChrome } from '@redhat-cloud-services/frontend-components/useChrome';\nimport React, { useLayoutEffect, useRef, useState } from 'react';\nexport const withChrome = Component => {\n    const isOrgAdmin = async (auth) => {\n        var _a;\n        const data = await auth.getUser();\n        try {\n            return !!((_a = data === null || data === void 0 ? void 0 : data.identity.user) === null || _a === void 0 ? void 0 : _a.is_org_admin);\n        }\n        catch (_b) {\n            return false;\n        }\n    };\n    const ComponentWithChromeProp = props => {\n        const { auth } = useChrome();\n        const [initialized, setInitialized] = useState(false);\n        const [orgAdmin, setOrgAdmin] = useState(false);\n        const isMounted = useRef(false);\n        useLayoutEffect(() => {\n            isMounted.current = true;\n            return () => {\n                isMounted.current = false;\n            };\n        }, []);\n        useLayoutEffect(() => {\n            isOrgAdmin(auth).then(val => {\n                if (isMounted.current) {\n                    setOrgAdmin(val);\n                    setInitialized(true);\n                }\n            });\n        });\n        return initialized ? React.createElement(Component, Object.assign({}, props, { chrome: { isOrgAdmin: orgAdmin } })) : null;\n    };\n    return ComponentWithChromeProp;\n};\n","import { UserAccessType } from 'api/userAccess';\nconst hasAccess = (userAccess, userAccessType) => {\n    let result = false;\n    if (userAccess && Array.isArray(userAccess.data)) {\n        // Used with multiple types (e.g., type=)\n        const data = userAccess.data.find(d => d.type === userAccessType);\n        result = data && data.access;\n    }\n    else {\n        // Used with type=any, type=GCP, etc.\n        result = userAccess && userAccess.data === true;\n    }\n    return result;\n};\nconst hasProviders = (providers) => {\n    let result = false;\n    if (providers && providers.meta) {\n        // providers API returns empty data array for no sources\n        result = providers.meta.count > 0;\n    }\n    return result;\n};\n// Returns true if user has access to AWS\nexport const hasAwsAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.aws);\n};\n// Returns true if user has access to AWS and at least one source provider\nexport const isAwsAvailable = (userAccess, awsProviders) => {\n    return hasAwsAccess(userAccess) && hasProviders(awsProviders);\n};\n// Returns true if user has access to Azure\nexport const hasAzureAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.azure);\n};\n// Returns true if user has access to Azure and at least one source provider\nexport const isAzureAvailable = (userAccess, azureProviders) => {\n    return hasAzureAccess(userAccess) && hasProviders(azureProviders);\n};\n// Returns true if user has access to Oci\nexport const hasOciAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.oci);\n};\n// Returns true if user has access to Oci and at least one source provider\nexport const isOciAvailable = (userAccess, ociProviders) => {\n    return hasOciAccess(userAccess) && hasProviders(ociProviders);\n};\n// Returns true if user has access to cost models\nexport const hasCostModelAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.cost_model);\n};\n// Returns true if user has access to GCP\nexport const hasGcpAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.gcp);\n};\n// Returns true if user has access to GCP and at least one source provider\nexport const isGcpAvailable = (userAccess, gcpProviders) => {\n    return hasAccess(userAccess, UserAccessType.gcp) && hasProviders(gcpProviders);\n};\n// Returns true if user has access to IBM\nexport const hasIbmAccess = (userAccess) => {\n    return hasGcpAccess(userAccess);\n};\n// Returns true if user has access to IBM and at least one source provider\nexport const isIbmAvailable = (userAccess, ibmProviders) => {\n    return hasIbmAccess(userAccess) && hasProviders(ibmProviders);\n};\n// Returns true if user has access to OCP\nexport const hasOcpAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.ocp);\n};\n// Returns true if user has access to OCP and at least one source provider\nexport const isOcpAvailable = (userAccess, ocpProviders) => {\n    return hasOcpAccess(userAccess) && hasProviders(ocpProviders);\n};\n// Returns true if user has access to RHEL\nexport const hasRhelAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.rhel);\n};\n// Returns true if user has access to RHEL and at least one source provider\nexport const isRhelAvailable = (userAccess, rhelProviders) => {\n    return hasRhelAccess(userAccess) && hasProviders(rhelProviders);\n};\n// Returns true if user has access to ROS\nexport const hasRosAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.ros);\n};\n// Returns true if user has access to RHEL and at least one source provider\nexport const isRosAvailable = (userAccess, rosProviders) => {\n    return hasRosAccess(userAccess) && hasProviders(rosProviders);\n};\n"],"names":["CalculatorIconConfig","name","height","width","svgPath","yOffset","xOffset","CalculatorIcon","OkIconConfig","OkIcon","getProvidersQuery","query","stringify","encode","indices","getUserAccessQuery","styles","currencySelector","display","alignItems","currencyLabel","marginBottom","marginRight","whiteSpace","currencyOptions","label","messages","value","CurrencyBase","constructor","super","arguments","this","defaultState","isSelectOpen","state","Object","assign","getSelect","currency","isDisabled","showLabel","props","selectOptions","getSelectOptions","selection","find","option","Select","className","undefined","id","isOpen","onSelect","handleSelect","onToggle","handleToggle","selections","variant","SelectVariant","map","SelectOption","key","intl","options","push","toString","formatMessage","units","event","isLocalStorage","setState","render","style","Title","headingLevel","size","TitleSizes","mapStateToProps","CurrencyConnect","connect","injectIntl","costColumn","textAlign","justifyContent","paddingRight","defaultLabel","minWidth","emptyState","backgroundColor","paddingTop","infoArrow","position","infoArrowDesc","bottom","infoDescription","color","fontSize","lastItem","lastItemColumn","managedColumn","nameColumn","DataTable","getEmptyState","filterBy","val","values","filter","showMargin","EmptyState","EmptyStateIcon","icon","EmptyStateBody","getSortBy","index","columns","orderBy","direction","getSortParams","sortBy","onSort","handleOnSort","columnIndex","handleOnSelect","isSelected","rowId","onSelected","rows","newRows","items","row","selected","item","SortByDirection","bind","isActionsCell","isLoading","TableComposable","gridBreakPoint","TableVariant","Thead","Tr","col","Th","modifier","sort","isSortable","Tbody","Td","colSpan","Bullseye","Spinner","rowIndex","cells","cellIndex","dataLabel","select","disable","selectionDisabled","_event","isActionCell","length","SelectableTable","handleOnRowClick","onRowClick","hasSelectableRowCaption","isSelectable","isHoverable","isRowSelected","NoDataStateBase","showReload","EmptyStateVariant","Button","onClick","window","location","reload","NoDataState","title","PageHeader","PageHeaderTitle","PageSection","src","alt","iconSpacer","marginLeft","viewSources","marginTop","global_spacer_lg","NoProvidersStateBase","getDocLink","textKey","urlKey","href","rel","target","getRouteToSources","providerType","docUrlKey","descKey","titleKey","component","NoProvidersState","__assign","t","s","i","n","p","prototype","hasOwnProperty","call","apply","ContactBody","children","_a","_b","prevPageButtonText","_c","toLandingPageText","_d","actions","serviceName","_e","Icon","LockIcon","_f","description","_g","showReturnButton","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","heading","concat","document","referrer","history","back","NotAuthorizedStateBase","pathname","msg","routes","NotAuthorizedState","infrastructureAwsOptions","infrastructureAwsOcpOptions","infrastructureAzureOptions","infrastructureOciOptions","infrastructureAzureOcpOptions","infrastructureGcpOptions","infrastructureGcpOcpOptions","infrastructureIbmOptions","infrastructureIbmOcpOptions","infrastructureOcpCloudOptions","ocpOptions","rhelOptions","getInfrastructureOptions","hasAws","hasAwsOcp","hasAzure","hasAzureOcp","hasGcp","hasGcpOcp","hasIbm","hasIbmOcp","hasOci","isIbmFeatureEnabled","currentItem","hasOcp","hasOcpCloud","hasRhel","isInfrastructureTab","isRhelTab","costType","DashboardWidget","selectWidgets","widgets","Grid","hasGutter","widgetId","widget","details","showHorizontal","GridItem","sm","lg","xl","xl2","infoIcon","global_FontSize_md","report","status","count","meta","Card","CardTitle","Popover","enableFlip","bodyContent","infoTitle","ButtonVariant","CardBody","Skeleton","skeleton","Link","to","ChartComparisonBase","default","onItemClicked","ChartComparison","chartStyles","chartAltHeight","chartHeight","containerAltHeight","containerTrendHeight","containerUsageHeight","comparison","global_spacer_md","comparisonContainer","tabs","global_spacer_2xl","tabItems","global_spacer_xl","Comparison","DashboardWidgetBase","activeTabKey","currentComparison","cumulative","buildDetailsLink","tab","getIdKeyForTab","currentTab","viewAllPath","group_by","getChart","containerHeight","adjustContainerHeight","chartType","trend","getDailyTrendChart","showSupplementaryLabel","getDailyCostChart","getTrendChart","getUsageChart","getChartComparison","getFormattedUnits","cumulativeTitle","dailyTitleKey","daily","handleComparisonClick","chartFormatter","currentReport","previousReport","computedReportItem","computedReportItemValue","type","datumType","currentCostData","previousCostData","forecastData","getForecastData","computedForecastItem","ReportSummaryComponent","forecastConeData","formatOptions","formatter","format","showForecast","chartName","currentData","previousData","showUsageLegendLabel","getUnits","forecast","computedForecast","currentRequestData","previousRequestData","currentUsageData","previousUsageData","getDetails","reportType","costLabel","getDetailsLabel","costKey","requestLabel","requestKey","showTooltip","showUnits","showUsageFirst","usageFormatOptions","usageLabel","usageKey","getDetailsLink","getDetailsLinkTitle","getHorizontalLayout","currentReportFetchStatus","detailsLink","getTabs","getTitle","getOptimizationsSummary","rosReportFetchStatus","rosReport","getTab","tabsReport","tabsReportFetchStatus","Tab","eventKey","TabTitleText","getTabTitle","idKey","reportItem","getTabItem","availableTabs","topItems","activeTab","costDistribution","totalValue","hasTotal","total","usage","Tabs","isFilled","activeKey","handleTabClick","getVerticalLayout","tabIndex","updateTab","updateForecasts","fetchForecasts","updateReports","fetchReports","updateRosReports","fetchRosReports","isRosFeatureEnabled","componentDidMount","showOptimizations","componentDidUpdate","prevProps","awsDashboard","queries","forecastPathsType","forecastType","forecastError","forecastFetchStatus","reportPathsType","current","currentReportError","previous","previousReportError","previousReportFetchStatus","tabsReportError","mapDispatchToProps","AwsDashboardWidget","awsOcpDashboard","AwsOcpDashboardWidget","azureDashboard","AzureDashboardWidget","azureOcpDashboard","AzureOcpDashboardWidget","gcpDashboard","GcpDashboardWidget","gcpOcpDashboard","GcpOcpDashboardWidget","ibmDashboard","IbmDashboardWidget","ocpCloudDashboard","OcpCloudDashboardWidget","ocpDashboard","rosPathsType","rosType","featureFlags","ros","optimizations","rosReportError","OcpDashboardWidget","rhelDashboard","RhelDashboardWidget","ociDashboard","OciDashboardWidget","date","alignSelf","flexGrow","header","global_BackgroundColor_light_100","padding","headerContent","headerContentLeft","headerContentRight","fontWeight","main","paddingBottom","InfrastructurePerspective","OcpPerspective","OverviewTab","RhelPerspective","infrastructure","ocp","rhel","OverviewBase","getAvailableTabs","isFinsightsFeatureEnabled","infrastructureTabs","isAwsAvailable","isAzureAvailable","isGcpAvailable","isIbmAvailable","isOciAvailable","isOcpCloudAvailable","contentRef","ocpTabs","isOcpAvailable","rhelTabs","isRhelAvailable","getCostType","currentInfrastructurePerspective","currentOcpPerspective","getCurrentTab","aws","awsOcp","handleOnCostTypeSelected","getCurrency","handleOnCurrencySelected","hasInfrastructure","showInfrastructureOnly","showRhelOnly","getDefaultInfrastructurePerspective","perspective","azure","oci","azureOcp","gcp","gcpOcp","ibm","ibmOcp","ocpCloud","getDefaultOcpPerspective","ocpProviders","userAccess","getDefaultRhelPerspective","rhelProviders","getPerspective","currentRhelPerspective","isAwsOcpAvailable","isAzureOcpAvailable","isGcpOcpAvailable","isIbmOcpAvailable","handlePerspectiveSelected","getRouteForQuery","router","getQueryRoute","tabContentId","tabContentRef","getTabContent","TabContent","ref","awsProviders","azureProviders","ociProviders","gcpProviders","ibmProviders","emptyTab","noData","hasData","newQuery","JSON","parse","navigate","replace","tabKey","providers","providersFetchStatus","userAccessFetchStatus","noProviders","queryFromRoute","parseQuery","search","Number","isNaN","providersQueryString","providersError","userAccessQueryString","userAccessError","costTypeContainer","paddingLeft","currencyContainer","resetContainer","global_spacer_sm","SettingsBase","currentCostType","currentCurrency","updateSettings","api","settings","cost_type","updateSettingsStatus","initialCostModelsQuery","limit","offset","ordering","source_type","stringifySearch","keys","reduce","acc","cur","offsetTransform","page","perPage","CostModelsBottomPagination","costModels","stateProps","dispatchProps","ownProps","itemCount","PaginationVariant","onSetPage","_evt","newPage","newPerPage","onPerPageSelect","Toolbar","ToolbarContent","ToolbarItem","ToolbarItemVariant","Pagination","titles","paginationTitle","placement","descContainer","defaultCostModelContext","apiError","checked","clearQuery","createError","createProcess","createSuccess","currencyUnits","dataFetched","dirtyName","distribution","distributePlatformUnallocated","distributeWorkerUnallocated","error","fetchSources","filterName","goToAddPL","isDiscount","handleMarkupDiscountChange","args","handleDistributionChange","handleDistributePlatformUnallocatedChange","handleDistributeWorkerUnallocatedChange","handleSignChange","loading","markup","metricsHash","onClose","onCurrencyChange","onDescChange","onFilterChange","onPageChange","onPerPageChange","onTypeChange","onNameChange","onSourceSelect","priceListPagination","onPerPageSet","onPageSet","step","setSources","sources","submitTiers","tiers","CostModelContext","form","textArea","maxWidth","minHeight","maxHeight","selector","titleWithLearnMore","DistributionBase","Consumer","Stack","StackItem","TextContent","Text","FormGroup","isInline","fieldId","isRequired","Radio","isChecked","onChange","nameErrors","descriptionErrors","isMarkupValid","trim","validatorsHash","AWS","ctx","Azure","GCP","OCP","priceListCurrent","justSaved","GeneralInformation","getValueLabel","valStr","o","sourceTypeOptions","helperTextInvalid","validated","TextInput","TextArea","SelectDirection","appendMenuTo","toggleAriaLabel","placeholderText","MarkupWithDistributionBase","handleOnKeyDown","keyCode","preventDefault","helpText","Flex","FlexItem","InputGroup","InputGroupText","onKeyDown","placeholder","TextVariants","List","ListItem","cancel","submitRate","rateFormData","canSubmit","errors","rateKind","Form","ActionGroup","PaginationToolbarTemplate","PriceListTable","metrics","measurements","addRateAction","deleteRateAction","getMetricLabel","m","toLowerCase","getMeasurementLabel","metricOpts","measurementOpts","curr","measurs","includes","NoTiersEmptyState","initialFilters","primary","setSearch","onRemove","onClearAll","from","filtered","stateIndex","rate","metric","label_metric","label_measurement","r1","r2","projection","r","getMetric","getMeasurement","measurement","label_measurement_unit","res","slice","setPrimary","secondaries","setSelections","filters","button","onClear","pagination","isCompact","_rowId","rowData","data","sortCallback","ReviewSuccess","EmptyStateSecondaryActions","ReviewDetails","selectedSources","Alert","create","TextList","TextListVariants","TextListItem","TextListItemVariants","Boolean","costmodel","text","join","FilterInput","onSearch","onKeyPress","evt","borderLeft","AssignSourcesToolbar","filterInputProps","paginationProps","clearAllFilters","ToolbarToggleGroup","breakpoint","toggleIcon","ToolbarFilter","deleteChip","chips","categoryName","sourceType","category","chip","c","Checkbox","uuid","costModel","Sources","fetchData","context","renderContent","onRefresh","contextType","updateTiersCurrency","rates","cloneDeep","tiered_rates","unit","tag_rates","tag_values","InternalWizard","isProcess","isSuccess","closeFnc","onMove","validators","steps","setError","setSuccess","updateCostModel","newSteps","ix","canJumpTo","enableNext","isAddingRate","nextButtonText","Wizard","startAtStep","onNext","onBack","onGoToStep","footer","onSave","distribution_info","distribution_type","platform_cost","worker_cost","source_uuids","then","catch","err","CostModelWizardBase","isDialogOpen","closeConfirmDialog","openWizard","CancelButton","OkButton","Provider","queryParam","payload","cost_models","cm","resp","_","currentTarget","closeWizard","pageSelections","newState","errorMessage","fetch","Modal","CreateCostModelButton","canWrite","rbac","dispatch","tooltip","CreateCostModelWizard","createWizard","CannotDeleteContent","head","body","source","DeleteDialog","deleteCostModel","deleteError","dialogData","closeDialog","stateName","deleteText","deleteAction","cancelText","cancelAction","sourcesNo","DeleteDialogActions","cannotDeleteTitle","cannotDeleteBody","canDeleteBody","AlertVariant","DeleteDialogBody","ModalVariant","titleIconVariant","CostModelsTableBase","dialogSource","activeSortDirection","activeSortIndex","costData","openDeleteDialog","Unavailable","heightAuto","dateTime","updated_timestamp","day","hour","hour12","minute","month","timeZone","timeZoneName","year","getRowsByStateName","orderName","transforms","sortable","action","pointerEvents","createActions","_rowIx","createOnSort","defaultDirection","TableGridBreakpoint","ActionsColumn","a","CostModelsTableConnect","setDialogActionCreator","inputer","currentValue","setValue","onDeleteChip","_filterName","chipName","split","qval","onDeleteChipGroup","DescriptionFilterConnect","filterType","deleteChipGroup","DescriptionFilter","NameFilterConnect","NameFilter","setToggle","element","getElementById","focus","SourceTypeFilterConnect","_dispatchProps","setIsOpen","onFilter","Dropdown","toggle","DropdownToggle","dropdownItems","DropdownItem","SourceTypeFilter","ClearableToolbar","CostModelsFilterSelectorConnect","updateFilterType","currentFilterType","CostModelsFilterSelector","CostModelsTopPagination","ToolbarGroup","CostModelsDetailsBase","getCostModelsData","getMetricsData","getRbacData","learnMore","ignoreQueryPrefix","searchQuery","PlatformTableBase","initDatum","isAllSelected","selectedItems","computedItems","Label","filteredColumns","column","hidden","filteredRows","cell","PlatformTable","PlatformToolbarBase","getActions","onAddProjects","onRemoveProjects","Tooltip","content","isAriaDisabled","getCategoryOptions","categoryOptions","itemsPerPage","itemsTotal","onBulkSelected","onFilterAdded","onFilterRemoved","resourcePathsType","showBulkSelect","showFilter","PlatformToolbarConnect","PlatformToolbar","baseQuery","resolution","time_scope_units","time_scope_value","filter_by","project","order_by","cost","setIsAllSelected","useState","setQuery","setSelectedItems","useIntl","reportError","reportFetchStatus","reportQueryString","useDispatch","useSelector","useEffect","useMapToProps","getComputedItems","getPagination","isBottom","Math","trunc","handleOnPerPageSelect","pageNumber","handleOnSetPage","handleOnBulkSelected","handleOnAddProjects","handleOnRemoveProjects","handleOnFilterAdded","handleOnFilterRemoved","getToolbar","newItems","sortType","isSortAscending","TagTableBase","TagTable","TagToolbarBase","onDisableTags","onEnableTags","TagToolbarConnect","TagToolbar","handleOnDisableTags","handleOnEnableTags","CostCategoryBase","CostCategoryTable","CostCategoryToolbarBase","CostCategoryToolbarConnect","CostCategoryToolbar","handleOnDisableCategories","handleOnEnableCategories","SettingsTab","calculations","costCategory","platformProjects","tags","chrome","setActiveTabKey","isSettingsPlatformEnabled","notAuthorized","isOrgAdmin","DataType","_getOcpProvider","result","provider","filterProviders","_hasData","_hasCloudData","dataType","ocpProvider","hasCloudCurrentMonthData","currentMonthData","hasCloudData","hasCloudPreviousMonthData","previousMonthData","hasCloudProvider","_hasCloudProvider","hasCurrentMonthData","hasPreviousMonthData","initQuery","reset","handleOnCostDistributionSelected","isLimit","withChrome","Component","auth","initialized","setInitialized","orgAdmin","setOrgAdmin","isMounted","useRef","useLayoutEffect","async","getUser","identity","user","is_org_admin","hasAccess","userAccessType","Array","isArray","d","access","hasProviders","hasAwsAccess","hasAzureAccess","hasOciAccess","hasCostModelAccess","hasGcpAccess","hasIbmAccess","hasOcpAccess","hasRhelAccess","hasRosAccess"],"sourceRoot":""}