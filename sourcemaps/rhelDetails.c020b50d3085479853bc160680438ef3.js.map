{"version":3,"file":"js/rhelDetails.7bd6e1426dde7cc581bc.js","mappings":"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","sources":["webpack:///./src/api/queries/providersQuery.ts","webpack:///./src/routes/components/currency/currency.styles.ts","webpack:///./src/routes/components/currency/currency.tsx","webpack:///./src/routes/state/noData/noDataState.tsx","webpack:///./src/routes/state/noData/noData.tsx","webpack:///./src/routes/components/icons/costIcon/costIcon.tsx","webpack:///./src/routes/state/noProviders/noProvidersState.styles.ts","webpack:///./src/routes/state/noProviders/noProvidersState.tsx","webpack:///./src/routes/state/noProviders/noProviders.tsx","webpack:///./src/routes/state/notAvailable/notAvailable.tsx","webpack:///./src/utils/computedReport/getComputedRhelReportItems.ts","webpack:///./src/routes/views/details/rhelDetails/detailsHeader.styles.ts","webpack:///./src/routes/views/details/rhelDetails/detailsHeader.tsx","webpack:///./src/routes/views/details/rhelDetails/detailsTable.tsx","webpack:///./src/routes/views/details/rhelDetails/detailsToolbar.tsx","webpack:///./src/routes/views/details/rhelDetails/rhelDetails.styles.ts","webpack:///./src/routes/views/details/rhelDetails/rhelDetails.tsx","webpack:///./src/routes/views/utils/handles.ts","webpack:///./src/routes/views/utils/providers.ts","webpack:///./src/routes/views/utils/query.ts"],"sourcesContent":["import { parse, stringify } from 'qs';\nexport function getProvidersQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseProvidersQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    currencySelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    currencyLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n        whiteSpace: 'nowrap',\n    },\n};\n","import './currency.scss';\nimport { Select, SelectOption, SelectVariant, Title, TitleSizes } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { setCurrency } from 'utils/localStorage';\nimport { styles } from './currency.styles';\nexport const currencyOptions = [\n    { label: messages.currencyOptions, value: 'AUD' },\n    { label: messages.currencyOptions, value: 'CAD' },\n    { label: messages.currencyOptions, value: 'CHF' },\n    { label: messages.currencyOptions, value: 'CNY' },\n    { label: messages.currencyOptions, value: 'DKK' },\n    { label: messages.currencyOptions, value: 'EUR' },\n    { label: messages.currencyOptions, value: 'GBP' },\n    { label: messages.currencyOptions, value: 'HKD' },\n    { label: messages.currencyOptions, value: 'JPY' },\n    { label: messages.currencyOptions, value: 'NOK' },\n    { label: messages.currencyOptions, value: 'NZD' },\n    { label: messages.currencyOptions, value: 'SEK' },\n    { label: messages.currencyOptions, value: 'SGD' },\n    { label: messages.currencyOptions, value: 'USD' },\n    { label: messages.currencyOptions, value: 'ZAR' },\n];\nclass CurrencyBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isSelectOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getSelect = () => {\n            const { currency, isDisabled, showLabel = true } = this.props;\n            const { isSelectOpen } = this.state;\n            const selectOptions = this.getSelectOptions();\n            const selection = selectOptions.find((option) => option.value === currency);\n            return (React.createElement(Select, { className: showLabel ? 'currencyOverride' : undefined, id: \"currencySelect\", isDisabled: isDisabled, isOpen: isSelectOpen, onSelect: this.handleSelect, onToggle: this.handleToggle, selections: selection, variant: SelectVariant.single }, selectOptions.map(option => (React.createElement(SelectOption, { key: option.value, value: option })))));\n        };\n        this.getSelectOptions = () => {\n            const { intl } = this.props;\n            const options = [];\n            currencyOptions.map(option => {\n                options.push({\n                    toString: () => intl.formatMessage(option.label, { units: option.value }),\n                    value: option.value,\n                });\n            });\n            return options;\n        };\n        this.handleSelect = (event, selection) => {\n            const { isLocalStorage = true, onSelect } = this.props;\n            // Set currency units via local storage\n            if (isLocalStorage) {\n                setCurrency(selection.value);\n            }\n            this.setState({\n                isSelectOpen: false,\n            }, () => {\n                if (onSelect) {\n                    onSelect(selection.value);\n                }\n            });\n        };\n        this.handleToggle = isSelectOpen => {\n            this.setState({ isSelectOpen });\n        };\n    }\n    render() {\n        const { intl, showLabel = true } = this.props;\n        return (React.createElement(\"div\", { style: styles.currencySelector },\n            showLabel && (React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.md, style: styles.currencyLabel }, intl.formatMessage(messages.currency))),\n            this.getSelect()));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst CurrencyConnect = connect(mapStateToProps, mapDispatchToProps)(CurrencyBase);\nconst Currency = injectIntl(CurrencyConnect);\nexport default Currency;\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title, TitleSizes, } from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nclass NoDataStateBase extends React.Component {\n    render() {\n        const { intl, showReload = true } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: TitleSizes.lg }, intl.formatMessage(messages.noDataStateTitle)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(messages.noDataStateDesc)),\n            showReload && (React.createElement(Button, { variant: \"primary\", onClick: () => window.location.reload() }, intl.formatMessage(messages.noDataStateRefresh)))));\n    }\n}\nconst NoDataState = injectIntl(NoDataStateBase);\nexport { NoDataState };\n","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React from 'react';\nimport { NoDataState } from './noDataState';\nconst NoData = ({ showReload, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(NoDataState, { showReload: showReload }))));\n};\nexport default NoData;\n","import './costIcon.scss';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nconst icon = require('./Cost-icon.svg');\nconst CostIcon = ({ className, intl }) => {\n    return (React.createElement(\"img\", { className: `cost-icon ${className}`, src: icon, alt: intl.formatMessage(messages.costManagement), \"aria-hidden\": \"true\" }));\n};\nexport default injectIntl(CostIcon);\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    iconSpacer: {\n        marginLeft: global_spacer_xs.value,\n    },\n    viewSources: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title, TitleSizes, } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { ProviderType } from 'api/providers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { CostIcon } from 'routes/components/icons/costIcon';\nimport { getReleasePath } from 'utils/paths';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDocLink = (textKey, urlKey) => {\n            const { intl } = this.props;\n            return (React.createElement(\"a\", { href: intl.formatMessage(urlKey), rel: \"noreferrer\", target: \"_blank\" },\n                intl.formatMessage(textKey),\n                React.createElement(\"span\", { style: styles.iconSpacer },\n                    React.createElement(ExternalLinkAltIcon, null))));\n        };\n        this.getRouteToSources = () => {\n            const release = getReleasePath();\n            return `${release}/settings/sources`;\n        };\n    }\n    render() {\n        const { intl, providerType } = this.props;\n        let descKey = messages.noProvidersStateOverviewDesc;\n        let titleKey = messages.noProvidersStateOverviewTitle;\n        let docUrlKey;\n        let icon;\n        let textKey;\n        switch (providerType) {\n            case ProviderType.aws:\n                descKey = messages.noProvidersStateAwsDesc;\n                titleKey = messages.noProvidersStateAwsTitle;\n                break;\n            case ProviderType.azure:\n                descKey = messages.noProvidersStateAzureDesc;\n                titleKey = messages.noProvidersStateAzureTitle;\n                break;\n            case ProviderType.gcp:\n                descKey = messages.noProvidersStateGcpDesc;\n                titleKey = messages.noProvidersStateGcpTitle;\n                break;\n            case ProviderType.ibm:\n                descKey = messages.noProvidersStateIbmDesc;\n                titleKey = messages.noProvidersStateIbmTitle;\n                break;\n            case ProviderType.ocp:\n                descKey = messages.noProvidersStateOcpDesc;\n                docUrlKey = messages.docsAddOcpSources;\n                textKey = messages.noProvidersStateOcpAddSources;\n                titleKey = messages.noProvidersStateOcpTitle;\n                break;\n            default:\n                icon = CostIcon;\n        }\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: icon ? icon : PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h1\", size: TitleSizes.lg }, intl.formatMessage(titleKey)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(descKey)),\n            docUrlKey && textKey ? (React.createElement(\"div\", { style: styles.viewSources }, this.getDocLink(textKey, docUrlKey))) : (React.createElement(Button, { variant: \"primary\", component: \"a\", href: this.getRouteToSources() }, intl.formatMessage(messages.noProvidersStateGetStarted)))));\n    }\n}\nconst NoProvidersState = injectIntl(NoProvidersStateBase);\nexport { NoProvidersState };\n","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React from 'react';\nimport { NoProvidersState } from './noProvidersState';\nconst NoProviders = ({ providerType, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(NoProvidersState, { providerType: providerType }))));\n};\nexport default NoProviders;\n","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Unavailable } from '@redhat-cloud-services/frontend-components/Unavailable';\nimport React from 'react';\nconst NotAvailable = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(Unavailable, null))));\n};\nexport default NotAvailable;\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costValue: {\n        marginTop: global_spacer_lg.var,\n        marginBottom: 0,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    dateTitle: {\n        textAlign: 'end',\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentLeft: {\n        display: 'flex',\n        minHeight: '90px',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    info: {\n        verticalAlign: 'middle',\n    },\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes, Tooltip } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { TagPathsType } from 'api/tags/tag';\nimport { ExportsLink } from 'components/drawers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Currency } from 'routes/components/currency';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { GroupBy } from 'routes/views/components/groupBy';\nimport { filterProviders } from 'routes/views/utils/providers';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedRhelReportItems';\nimport { getSinceDateRangeString } from 'utils/dates';\nimport { formatCurrency } from 'utils/format';\nimport { styles } from './detailsHeader.styles';\nconst groupByOptions = [\n    { label: 'cluster', value: 'cluster' },\n    { label: 'node', value: 'node' },\n    { label: 'project', value: 'project' },\n];\nconst tagPathsType = TagPathsType.rhel;\nclass DetailsHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { currency, groupBy, isExportsFeatureEnabled, onCurrencySelected, onGroupBySelected, providers, providersError, report, intl, } = this.props;\n        const showContent = report && !providersError && providers && providers.meta && providers.meta.count > 0;\n        let cost = React.createElement(EmptyValueState, null);\n        let supplementaryCost = React.createElement(EmptyValueState, null);\n        let infrastructureCost = React.createElement(EmptyValueState, null);\n        if (report && report.meta && report.meta.total) {\n            const hasCost = report.meta.total.cost && report.meta.total.cost.total;\n            const hasSupplementaryCost = report.meta.total.supplementary && report.meta.total.supplementary.total;\n            const hasInfrastructureCost = report.meta.total.infrastructure && report.meta.total.infrastructure.total;\n            cost = formatCurrency(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD');\n            supplementaryCost = formatCurrency(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost ? report.meta.total.supplementary.total.units : 'USD');\n            infrastructureCost = formatCurrency(hasInfrastructureCost ? report.meta.total.infrastructure.total.value : 0, hasInfrastructureCost ? report.meta.total.infrastructure.total.units : 'USD');\n        }\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.rhelDetailsTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(\"div\", { style: styles.headerContentLeft },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: !showContent, onSelected: onGroupBySelected, options: groupByOptions, showTags: true, tagPathsType: tagPathsType })),\n                showContent && (React.createElement(\"div\", null,\n                    React.createElement(Tooltip, { content: intl.formatMessage(messages.dashboardTotalCostTooltip, {\n                            infrastructureCost,\n                            supplementaryCost,\n                        }), enableFlip: true },\n                        React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: TitleSizes['4xl'] }, cost)),\n                    React.createElement(\"div\", { style: styles.dateTitle }, getSinceDateRangeString()))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        providers: filterProviders(providers, ProviderType.rhel),\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n    };\n});\nconst DetailsHeader = injectIntl(connect(mapStateToProps, {})(DetailsHeaderBase));\nexport { DetailsHeader };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport 'routes/views/details/components/dataTable/dataTable.scss';\nimport { Label } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { ReportPathsType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { Actions } from 'routes/views/details/components/actions';\nimport { DataTable } from 'routes/views/details/components/dataTable';\nimport { styles } from 'routes/views/details/components/dataTable/dataTable.styles';\nimport { getBreakdownPath } from 'routes/views/utils/paths';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getForDateRangeString, getNoDataForDateRangeString } from 'utils/dates';\nimport { formatCurrency, formatPercentage } from 'utils/format';\nimport { formatPath } from 'utils/paths';\nimport { noPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nexport const DetailsTableColumnIds = {\n    infrastructure: 'infrastructure',\n    monthOverMonth: 'monthOverMonth',\n    supplementary: 'supplementary',\n};\nconst reportPathsType = ReportPathsType.rhel;\nclass DetailsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { groupBy, groupByTagKey, hiddenColumns, intl, isAllSelected, report, router, selectedItems } = this.props;\n            if (!report) {\n                return;\n            }\n            const showDefaultProject = groupBy === 'project';\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: (groupByTagKey ? groupByTagKey : groupBy),\n            });\n            const columns = groupByTagKey\n                ? [\n                    // Sorting with tag keys is not supported\n                    {\n                        name: '',\n                    },\n                    {\n                        name: intl.formatMessage(messages.tagNames),\n                        style: groupBy === 'project' ? styles.nameColumn : undefined,\n                    },\n                    {\n                        hidden: !showDefaultProject,\n                        name: '', // Default column\n                    },\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    {\n                        id: DetailsTableColumnIds.infrastructure,\n                        name: intl.formatMessage(messages.rhelDetailsInfrastructureCost),\n                        style: styles.managedColumn,\n                    },\n                    {\n                        id: DetailsTableColumnIds.supplementary,\n                        name: intl.formatMessage(messages.rhelDetailsSupplementaryCost),\n                        style: styles.managedColumn,\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign(Object.assign({ orderBy: groupBy, name: intl.formatMessage(messages.detailsResourceNames, { value: groupBy }) }, (computedItems.length && { isSortable: true })), { style: groupBy === 'project' ? styles.nameColumn : undefined }),\n                    {\n                        hidden: !showDefaultProject,\n                        name: '', // Default column\n                    },\n                    {\n                        id: DetailsTableColumnIds.monthOverMonth,\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    {\n                        id: DetailsTableColumnIds.infrastructure,\n                        orderBy: 'infrastructure_cost',\n                        name: intl.formatMessage(messages.rhelDetailsInfrastructureCost),\n                        style: styles.managedColumn,\n                        // Sort by infrastructure_cost is not supported -- https://github.com/project-koku/koku/issues/796\n                        // ...(computedItems.length && { isSortable: true }),\n                    },\n                    {\n                        id: DetailsTableColumnIds.supplementary,\n                        orderBy: 'supplementary_cost',\n                        name: intl.formatMessage(messages.rhelDetailsSupplementaryCost),\n                        style: styles.managedColumn,\n                        // Sort by supplementary_cost is not supported -- https://github.com/project-koku/koku/issues/796\n                        // ...(computedItems.length && { isSortable: true }),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ];\n            computedItems.map((item, index) => {\n                const cost = this.getTotalCost(item, index);\n                const label = item && item.label !== null ? item.label : '';\n                const monthOverMonth = this.getMonthOverMonthCost(item, index);\n                const supplementaryCost = this.getSupplementaryCost(item, index);\n                const InfrastructureCost = this.getInfrastructureCost(item, index);\n                const desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                const isDisabled = label === `${noPrefix}${groupBy}` || label === `${noPrefix}${groupByTagKey}`;\n                const actions = this.getActions(item, isDisabled);\n                const name = isDisabled ? label : (React.createElement(Link, { to: getBreakdownPath({\n                        basePath: formatPath(routes.rhelDetailsBreakdown.path),\n                        description: item.id,\n                        groupBy,\n                        id: item.id,\n                        router,\n                        title: label.toString(),\n                    }) }, label));\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: (React.createElement(React.Fragment, null,\n                                React.createElement(\"div\", null, name),\n                                React.createElement(\"div\", { style: styles.infoDescription }, desc))),\n                        },\n                        {\n                            hidden: !showDefaultProject,\n                            value: item.default_project ? (React.createElement(\"div\", null,\n                                React.createElement(Label, { variant: \"outline\", color: \"green\" }, intl.formatMessage(messages.default)))) : (React.createElement(\"div\", { style: styles.defaultLabel })),\n                        },\n                        { value: React.createElement(\"div\", null, monthOverMonth), id: DetailsTableColumnIds.monthOverMonth },\n                        {\n                            value: React.createElement(\"div\", null, InfrastructureCost),\n                            id: DetailsTableColumnIds.infrastructure,\n                            style: styles.managedColumn,\n                        },\n                        {\n                            value: React.createElement(\"div\", null, supplementaryCost),\n                            id: DetailsTableColumnIds.supplementary,\n                            style: styles.managedColumn,\n                        },\n                        { value: React.createElement(\"div\", null, cost), style: styles.managedColumn },\n                        { value: React.createElement(\"div\", null, actions) },\n                    ],\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                    selectionDisabled: isDisabled,\n                });\n            });\n            const filteredColumns = columns.filter(column => !hiddenColumns.has(column.id) && !column.hidden);\n            const filteredRows = rows.map((_a) => {\n                var row = __rest(_a, []);\n                row.cells = row.cells.filter(cell => !hiddenColumns.has(cell.id) && !cell.hidden);\n                return row;\n            });\n            this.setState({\n                columns: filteredColumns,\n                rows: filteredRows,\n            });\n        };\n        this.getActions = (item, isDisabled) => {\n            const { groupBy, reportQueryString } = this.props;\n            return (React.createElement(Actions, { groupBy: groupBy, isDisabled: isDisabled, item: item, providerType: ProviderType.rhel, reportPathsType: reportPathsType, reportQueryString: reportQueryString, showPriceListOption: groupBy === 'cluster' }));\n        };\n        this.getSupplementaryCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.supplementary.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.supplementary.total.value, item.supplementary.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n        this.getInfrastructureCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.infrastructure.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.infrastructure.total.value, item.infrastructure.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n        this.getMonthOverMonthCost = (item, index) => {\n            const { intl } = this.props;\n            const value = formatCurrency(Math.abs(item.cost.total.value - item.delta_value), item.cost.total.units);\n            const percentage = item.delta_percent !== null ? formatPercentage(Math.abs(item.delta_percent)) : 0;\n            const showPercentage = !(percentage === 0 || percentage === '0.00');\n            const showValue = item.delta_percent !== null; // Workaround for https://github.com/project-koku/koku/issues/1395\n            let iconOverride;\n            if (showPercentage) {\n                iconOverride = 'iconOverride';\n                if (item.delta_percent !== null && item.delta_value < 0) {\n                    iconOverride += ' decrease';\n                }\n                if (item.delta_percent !== null && item.delta_value > 0) {\n                    iconOverride += ' increase';\n                }\n            }\n            if (!showValue) {\n                return getNoDataForDateRangeString();\n            }\n            else {\n                return (React.createElement(\"div\", { className: \"monthOverMonthOverride\" },\n                    React.createElement(\"div\", { className: iconOverride, key: `month-over-month-cost-${index}` },\n                        showPercentage ? intl.formatMessage(messages.percent, { value: percentage }) : React.createElement(EmptyValueState, null),\n                        showPercentage && item.delta_percent !== null && item.delta_value > 0 && (React.createElement(\"span\", { className: \"fa fa-sort-up\", style: styles.infoArrow, key: `month-over-month-icon-${index}` })),\n                        showPercentage && item.delta_percent !== null && item.delta_value < 0 && (React.createElement(\"span\", { className: \"fa fa-sort-down\", style: Object.assign(Object.assign({}, styles.ininfoArrow), styles.infoArrowDesc), key: `month-over-month-icon-${index}` }))),\n                    React.createElement(\"div\", { style: styles.infoDescription, key: `month-over-month-info-${index}` }, getForDateRangeString(value))));\n            }\n        };\n        this.getTotalCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.cost.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.cost.total.value, item.cost.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { hiddenColumns, report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport ||\n            prevProps.selectedItems !== selectedItems ||\n            prevProps.hiddenColumns !== hiddenColumns) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { isLoading, onSelected, onSort, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, isLoading: isLoading, onSelected: onSelected, onSort: onSort, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst DetailsTable = injectIntl(withRouter(DetailsTableBase));\nexport { DetailsTable };\n","import { getQuery } from 'api/queries/ocpQuery';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType, TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { isEqual } from 'utils/equal';\nimport { tagKey } from 'utils/props';\nconst tagType = TagType.tag;\nconst tagPathsType = TagPathsType.ocp;\nexport class DetailsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { intl, tagReport } = this.props;\n            const options = [\n                { name: intl.formatMessage(messages.filterByValues, { value: 'cluster' }), key: 'cluster' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'node' }), key: 'node' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'project' }), key: 'project' },\n            ];\n            if (tagReport && tagReport.data && tagReport.data.length) {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: tagKey }),\n                    key: tagKey,\n                });\n            }\n            return options;\n        };\n        this.updateReport = () => {\n            const { fetchTag, tagQueryString } = this.props;\n            fetchTag(tagPathsType, tagType, tagQueryString);\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        }, () => {\n            this.updateReport();\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { query, tagReport } = this.props;\n        if (!isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            }, () => {\n                this.updateReport();\n            });\n        }\n        else if (query && !isEqual(query, prevProps.query)) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { groupBy, isAllSelected, isDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onColumnManagementClicked, onExportClicked, onFilterAdded, onFilterRemoved, pagination, query, selectedItems, tagReport, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, groupBy: groupBy, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onColumnManagementClicked: onColumnManagementClicked, onExportClicked: onExportClicked, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.ocp, selectedItems: selectedItems, showBulkSelect: true, showColumnManagement: true, showExcludes: true, showExport: true, showFilter: true, tagReport: tagReport, tagPathsType: tagPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        key_only: true,\n        limit: 1000,\n    });\n    const tagReport = tagSelectors.selectTag(state, tagPathsType, tagType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagPathsType, tagType, tagQueryString);\n    return {\n        tagReport,\n        tagReportFetchStatus,\n        tagQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst DetailsToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsToolbarBase);\nconst DetailsToolbar = injectIntl(DetailsToolbarConnect);\nexport { DetailsToolbar };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    ocpDetails: {\n        minHeight: '100%',\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    toolbarContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { getQuery, parseQuery } from 'api/queries/rhelQuery';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport { cloneDeep } from 'lodash';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoData } from 'routes/state/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { ExportModal } from 'routes/views/components/export';\nimport { ColumnManagementModal, initHiddenColumns } from 'routes/views/details/components/columnManagement';\nimport { getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { handleOnCurrencySelected, handleOnFilterAdded, handleOnFilterRemoved, handleOnPerPageSelect, handleOnSetPage, handleOnSort, } from 'routes/views/utils/handles';\nimport { filterProviders, hasCurrentMonthData } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedRhelReportItems';\nimport { getCurrency } from 'utils/localStorage';\nimport { noPrefix, tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { DetailsHeader } from './detailsHeader';\nimport { DetailsTable, DetailsTableColumnIds } from './detailsTable';\nimport { DetailsToolbar } from './detailsToolbar';\nimport { styles } from './rhelDetails.styles';\nconst baseQuery = {\n    filter: {\n        limit: 10,\n        offset: 0,\n    },\n    exclude: {},\n    filter_by: {},\n    group_by: {\n        project: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst defaultColumnOptions = [\n    { label: messages.monthOverMonthChange, value: DetailsTableColumnIds.monthOverMonth },\n    {\n        description: messages.ocpDetailsInfrastructureCostDesc,\n        label: messages.ocpDetailsInfrastructureCost,\n        value: DetailsTableColumnIds.infrastructure,\n        hidden: true,\n    },\n    {\n        description: messages.ocpDetailsSupplementaryCostDesc,\n        label: messages.ocpDetailsSupplementaryCost,\n        value: DetailsTableColumnIds.supplementary,\n        hidden: true,\n    },\n];\nconst reportType = ReportType.cost;\nconst reportPathsType = ReportPathsType.ocp;\nclass RhelDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            hiddenColumns: initHiddenColumns(defaultColumnOptions),\n            isAllSelected: false,\n            isColumnManagementModalOpen: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getColumnManagementModal = () => {\n            const { hiddenColumns, isColumnManagementModalOpen } = this.state;\n            const options = cloneDeep(defaultColumnOptions);\n            options.map(option => {\n                option.hidden = hiddenColumns.has(option.value);\n            });\n            return (React.createElement(ColumnManagementModal, { isOpen: isColumnManagementModalOpen, options: options, onClose: this.handleColumnManagementModalClose, onSave: this.handleColumnManagementModalSave }));\n        };\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey || groupById,\n            });\n        };\n        this.getExportModal = (computedItems) => {\n            const { query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `${noPrefix}${groupById}` || item.label === `${noPrefix}${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, report, router } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = Math.trunc(offset / limit + 1);\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handleOnPerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleOnSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.openShift),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { query, report, reportFetchStatus, reportQueryString, router } = this.props;\n            const { hiddenColumns, isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return (React.createElement(DetailsTable, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, groupByTagKey: groupByTagKey, hiddenColumns: hiddenColumns, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending) => handleOnSort(query, router, sortType, isSortAscending), report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, report, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(DetailsToolbar, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isDisabled || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onColumnManagementClicked: this.handleColumnManagementModalOpen, onExportClicked: this.handleExportModalOpen, onFilterAdded: filter => handleOnFilterAdded(query, router, filter), onFilterRemoved: filter => handleOnFilterRemoved(query, router, filter), pagination: this.getPagination(), query: query, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleColumnManagementModalClose = (isOpen) => {\n            this.setState({ isColumnManagementModalOpen: isOpen });\n        };\n        this.handleColumnManagementModalOpen = () => {\n            this.setState({ isColumnManagementModalOpen: true });\n        };\n        this.handleColumnManagementModalSave = (hiddenColumns) => {\n            this.setState({ hiddenColumns });\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            const groupByKey = groupBy;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: '*',\n                }, order_by: undefined, category: undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.updateReport = () => {\n            const { fetchReport, reportQueryString } = this.props;\n            fetchReport(reportPathsType, reportType, reportQueryString);\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleColumnManagementModalClose = this.handleColumnManagementModalClose.bind(this);\n        this.handleColumnManagementModalOpen = this.handleColumnManagementModalOpen.bind(this);\n        this.handleColumnManagementModalSave = this.handleColumnManagementModalSave.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { currency, intl, providers, providersFetchStatus, query, report, reportError, reportFetchStatus, router } = this.props;\n        const computedItems = this.getComputedItems();\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const isDisabled = computedItems.length === 0;\n        const title = intl.formatMessage(messages.ocpDetailsTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.inProgress) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.complete) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: ProviderType.ocp, title: title });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.ocpDetails },\n            React.createElement(DetailsHeader, { currency: currency, groupBy: groupById, onCurrencySelected: value => handleOnCurrencySelected(query, router, value), onGroupBySelected: this.handleGroupBySelected, report: report }),\n            React.createElement(\"div\", { style: styles.content },\n                React.createElement(\"div\", { style: styles.toolbarContainer }, this.getToolbar(computedItems)),\n                this.getExportModal(computedItems),\n                this.getColumnManagementModal(),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const currency = getCurrency();\n    const query = Object.assign(Object.assign({}, baseQuery), queryFromRoute);\n    const reportQuery = {\n        currency,\n        delta: 'cost',\n        exclude: query.exclude,\n        filter: Object.assign(Object.assign({}, query.filter), { resolution: 'monthly', time_scope_units: 'month', time_scope_value: -1 }),\n        filter_by: query.filter_by,\n        group_by: query.group_by,\n        order_by: query.order_by,\n    };\n    const reportQueryString = getQuery(reportQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        currency,\n        providers: filterProviders(providers, ProviderType.ocp),\n        providersFetchStatus,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(RhelDetails)));\n","import { addFilterToQuery, removeFilterFromQuery } from './filter';\nimport { getRouteForQuery } from './query';\nexport const handleSelected = (query, router, value, reset = false) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    router.navigate(getRouteForQuery(newQuery, router.location, reset), { replace: true }); // Don't reset pagination\n};\nexport const handleOnCurrencySelected = (query, router, value, reset = false) => {\n    handleSelected(query, router, value, reset);\n};\nexport const handleOnCostTypeSelected = (query, router, value, reset = false) => {\n    handleSelected(query, router, value, reset);\n};\nexport const handleOnCostDistributionSelected = (query, router, value, reset = false) => {\n    const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { order_by: undefined });\n    handleSelected(newQuery, router, value, reset);\n};\nexport const handleOnFilterAdded = (query, router, filter) => {\n    const filteredQuery = addFilterToQuery(query, filter);\n    router.navigate(getRouteForQuery(filteredQuery, router.location, true), { replace: true });\n};\nexport const handleOnFilterRemoved = (query, router, filter) => {\n    const filteredQuery = removeFilterFromQuery(query, filter);\n    router.navigate(getRouteForQuery(filteredQuery, router.location, true), { replace: true });\n};\nexport const handleOnPerPageSelect = (query, router, perPage) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    newQuery.filter = Object.assign(Object.assign({}, query.filter), { limit: perPage });\n    const filteredQuery = getRouteForQuery(newQuery, router.location, true);\n    router.navigate(filteredQuery, { replace: true });\n};\nexport const handleOnSetPage = (query, router, report, pageNumber) => {\n    const limit = report && report.meta && report.meta.filter && report.meta.filter.limit ? report.meta.filter.limit : 10;\n    const offset = pageNumber * limit - limit;\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    newQuery.filter = Object.assign(Object.assign({}, query.filter), { offset });\n    const filteredQuery = getRouteForQuery(newQuery, router.location);\n    router.navigate(filteredQuery, { replace: true });\n};\nexport const handleOnSort = (query, router, sortType, isSortAscending, date = undefined) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    newQuery.order_by = {};\n    newQuery.order_by[sortType] = isSortAscending ? 'asc' : 'desc';\n    if (date) {\n        newQuery.order_by.date = date;\n    }\n    const filteredQuery = getRouteForQuery(newQuery, router.location);\n    router.navigate(filteredQuery, { replace: true });\n};\n","// eslint-disable-next-line no-shadow\nvar DataType;\n(function (DataType) {\n    DataType[\"currentMonthData\"] = \"current_month_data\";\n    DataType[\"hasData\"] = \"has_data\";\n    DataType[\"previousMonthData\"] = \"previous_month_data\";\n})(DataType || (DataType = {}));\n// Returns the OCP provider matching the given infrastructure uuid\nconst _getOcpProvider = (ocpProviders, uuid) => {\n    let result;\n    if (ocpProviders && ocpProviders.data) {\n        for (const provider of ocpProviders.data) {\n            if (provider.infrastructure && provider.infrastructure.uuid === uuid) {\n                result = provider;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Returns new Provider matching the given provider type\n//\n// See https://issues.redhat.com/browse/COST-2202\nexport const filterProviders = (providers, sourceType) => {\n    if (!providers) {\n        return providers;\n    }\n    const data = providers.data.filter(provider => provider.source_type.toLowerCase() === sourceType);\n    const meta = Object.assign(Object.assign({}, providers.meta), { count: data.length });\n    return Object.assign(Object.assign({}, providers), { meta,\n        data });\n};\n// Ensure at least one source provider has data available\nconst _hasData = (providers, datumType) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            if (provider[datumType]) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one cloud source provider has data available\nconst _hasCloudData = (providers, ocpProviders, dataType) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            const ocpProvider = _getOcpProvider(ocpProviders, provider.uuid);\n            // Ensure AWS provider is filtered by OpenShift and has OCP data\n            if (ocpProvider && ocpProvider[dataType]) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one cloud source provider\nconst _hasCloudProvider = (providers, ocpProviders) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            const ocpProvider = _getOcpProvider(ocpProviders, provider.uuid);\n            // Ensure AWS provider is filtered by OpenShift\n            if (ocpProvider) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one cloud source provider has data available for the current month (e.g., \"AWS filtered by OpenShift\")\nexport const hasCloudCurrentMonthData = (providers, ocpProviders) => {\n    return _hasCloudData(providers, ocpProviders, DataType.currentMonthData);\n};\n// Ensure at least one cloud source provider has data available (e.g., \"AWS filtered by OpenShift\")\nexport const hasCloudData = (providers, ocpProviders) => {\n    return _hasCloudData(providers, ocpProviders, DataType.hasData);\n};\n// Ensure at least one cloud source provider has data available for the previous month (e.g., \"AWS filtered by OpenShift\")\nexport const hasCloudPreviousMonthData = (providers, ocpProviders) => {\n    return _hasCloudData(providers, ocpProviders, DataType.previousMonthData);\n};\n// Ensure at least one cloud source provider (e.g., \"AWS filtered by OpenShift\"), regardless if there is OCP data\nexport const hasCloudProvider = (providers, ocpProviders) => {\n    return _hasCloudProvider(providers, ocpProviders);\n};\n// Ensure at least one source provider has data available for the current month\nexport const hasCurrentMonthData = (providers) => {\n    return _hasData(providers, DataType.currentMonthData);\n};\n// Ensure at least one source provider has data available\nexport const hasData = (providers) => {\n    return _hasData(providers, DataType.hasData);\n};\n// Ensure at least one source provider has data available for the previous month\nexport const hasPreviousMonthData = (providers) => {\n    return _hasData(providers, DataType.previousMonthData);\n};\n","import { getQueryRoute } from 'api/queries/query';\nexport const getRouteForQuery = (query, location, reset = false) => {\n    // Reset pagination\n    if (reset) {\n        if (query.filter && query.filter.offset !== undefined) {\n            query.filter = Object.assign(Object.assign({}, query.filter), { offset: 0 });\n        }\n        if (query.offset !== undefined) {\n            query.offset = 0;\n        }\n    }\n    return `${location.pathname}?${getQueryRoute(query)}`;\n};\n"],"names":["getProvidersQuery","query","stringify","encode","indices","styles","currencySelector","display","alignItems","currencyLabel","marginBottom","marginRight","whiteSpace","currencyOptions","label","messages","value","CurrencyBase","constructor","super","arguments","this","defaultState","isSelectOpen","state","Object","assign","getSelect","currency","isDisabled","showLabel","props","selectOptions","getSelectOptions","selection","find","option","Select","className","undefined","id","isOpen","onSelect","handleSelect","onToggle","handleToggle","selections","variant","SelectVariant","map","SelectOption","key","intl","options","push","toString","formatMessage","units","event","isLocalStorage","setState","render","style","Title","headingLevel","size","TitleSizes","mapStateToProps","CurrencyConnect","connect","injectIntl","NoDataStateBase","showReload","EmptyState","EmptyStateVariant","EmptyStateIcon","icon","EmptyStateBody","Button","onClick","window","location","reload","NoDataState","title","PageHeader","PageHeaderTitle","PageSection","src","alt","iconSpacer","marginLeft","viewSources","marginTop","global_spacer_lg","NoProvidersStateBase","getDocLink","textKey","urlKey","href","rel","target","getRouteToSources","providerType","docUrlKey","descKey","titleKey","component","NoProvidersState","Unavailable","getIdKeyForGroupBy","groupBy","project","cluster","node","costValue","costLabelUnit","fontSize","global_FontSize_sm","color","global_Color_100","dateTitle","textAlign","header","backgroundColor","global_BackgroundColor_light_100","padding","headerContent","justifyContent","headerContentLeft","minHeight","headerContentRight","info","verticalAlign","infoIcon","global_FontSize_md","infoTitle","fontWeight","paddingBottom","global_spacer_sm","groupByOptions","tagPathsType","DetailsHeaderBase","isExportsFeatureEnabled","onCurrencySelected","onGroupBySelected","providers","providersError","report","showContent","meta","count","cost","supplementaryCost","infrastructureCost","total","hasCost","hasSupplementaryCost","supplementary","hasInfrastructureCost","infrastructure","format","onSelected","showTags","Tooltip","content","enableFlip","providersQueryString","providersFetchStatus","featureFlags","DetailsHeader","DetailsTableColumnIds","reportPathsType","DetailsTableBase","columns","rows","initDatum","groupByTagKey","hiddenColumns","isAllSelected","router","selectedItems","showDefaultProject","computedItems","idKey","name","hidden","orderBy","length","isSortable","item","index","getTotalCost","monthOverMonth","getMonthOverMonthCost","getSupplementaryCost","InfrastructureCost","getInfrastructureCost","desc","actions","getActions","Link","to","basePath","routes","description","cells","default_project","Label","selected","val","selectionDisabled","filteredColumns","filter","column","has","filteredRows","_a","row","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","__rest","cell","reportQueryString","showPriceListOption","percentValue","toFixed","Math","abs","delta_value","percentage","delta_percent","showPercentage","showValue","iconOverride","componentDidMount","componentDidUpdate","prevProps","currentReport","data","JSON","isLoading","onSort","DetailsTable","tagType","DetailsToolbarBase","getCategoryOptions","tagReport","updateReport","fetchTag","tagQueryString","categoryOptions","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onColumnManagementClicked","onExportClicked","onFilterAdded","onFilterRemoved","pagination","resourcePathsType","showBulkSelect","showColumnManagement","showExcludes","showExport","showFilter","resolution","time_scope_units","time_scope_value","key_only","limit","tagReportFetchStatus","mapDispatchToProps","DetailsToolbarConnect","DetailsToolbar","paddingTop","ocpDetails","paginationContainer","global_spacer_md","tableContainer","toolbarContainer","baseQuery","offset","exclude","filter_by","group_by","order_by","defaultColumnOptions","reportType","RhelDetails","stateProps","dispatchProps","isColumnManagementModalOpen","isExportModalOpen","getColumnManagementModal","cloneDeep","onClose","handleColumnManagementModalClose","onSave","handleColumnManagementModalSave","getComputedItems","groupById","getExportModal","items","isAllItems","handleExportModalClose","getPagination","isBottom","page","trunc","Pagination","isCompact","itemCount","onPerPageSelect","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","PaginationVariant","widgetId","getTable","reportFetchStatus","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","handleColumnManagementModalOpen","handleExportModalOpen","action","handleGroupBySelected","groupByKey","newQuery","parse","category","navigate","replace","isSelected","newItems","fetchReport","bind","prevState","reportError","noReport","noLocation","search","queryFromRoute","reportQuery","delta","reset","handleOnCurrencySelected","handleOnCostTypeSelected","handleOnCostDistributionSelected","handleOnFilterAdded","filteredQuery","handleOnFilterRemoved","handleOnPerPageSelect","handleOnSetPage","handleOnSort","date","DataType","_getOcpProvider","ocpProviders","uuid","result","provider","filterProviders","sourceType","source_type","toLowerCase","_hasData","datumType","_hasCloudData","dataType","ocpProvider","hasCloudCurrentMonthData","currentMonthData","hasCloudData","hasData","hasCloudPreviousMonthData","previousMonthData","hasCloudProvider","_hasCloudProvider","hasCurrentMonthData","hasPreviousMonthData","getRouteForQuery","pathname"],"sourceRoot":""}