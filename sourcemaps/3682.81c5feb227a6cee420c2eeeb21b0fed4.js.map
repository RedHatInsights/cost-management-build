{"version":3,"file":"js/3682.2c54c146a98f7174fda9.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/calculator-icon.js","webpack:///./src/routes/views/details/components/dataTable/dataTable.styles.ts","webpack:///./src/routes/views/details/components/dataTable/dataTable.tsx","webpack:///./src/routes/views/recommendations/recommendations.styles.ts","webpack:///./src/routes/views/recommendations/recommendationsHeader.tsx","webpack:///./src/routes/views/recommendations/recommendationsTable.tsx","webpack:///./src/routes/views/recommendations/recommendationsToolbar.tsx","webpack:///./src/routes/views/recommendations/recommendations.tsx","webpack:///./src/utils/computedReport/getComputedRosItems.ts","webpack:///./src/api/queries/rosQuery.ts"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const CalculatorIconConfig = {\n  name: 'CalculatorIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M400 0H48C22.4 0 0 22.4 0 48v416c0 25.6 22.4 48 48 48h352c25.6 0 48-22.4 48-48V48c0-25.6-22.4-48-48-48zM128 435.2c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm0-128c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm128 128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm0-128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm128 128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8V268.8c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v166.4zm0-256c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8V76.8C64 70.4 70.4 64 76.8 64h294.4c6.4 0 12.8 6.4 12.8 12.8v102.4z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const CalculatorIcon = createIcon(CalculatorIconConfig);\n\nexport default CalculatorIcon;","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    costColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingRight: 0,\n    },\n    defaultLabel: {\n        minWidth: '63px',\n    },\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    lastReported: {\n        textAlign: 'right',\n        paddingRight: '40px',\n    },\n    lastReportedColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    managedColumn: {\n        textAlign: 'right',\n    },\n    nameColumn: {\n        width: '1%',\n    },\n};\n","import './dataTable.scss';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport { parseQuery } from 'api/queries/ocpQuery';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass DataTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { intl, router } = this.props;\n            const queryFromRoute = parseQuery(router.location.search);\n            if (queryFromRoute.filter_by) {\n                for (const val of Object.values(queryFromRoute.filter_by)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, router } = this.props;\n            const orderBy = columns[index].orderBy;\n            const queryFromRoute = parseQuery(router.location.search);\n            const direction = queryFromRoute && queryFromRoute.order_by && queryFromRoute.order_by[orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected, rows } = this.props;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnRowClick = (event, rowIndex) => {\n            const { onRowClick, rows } = this.props;\n            rows.map(row => (row.selected = false));\n            rows[rowIndex].selected = true;\n            this.setState({ rows }, () => {\n                if (onRowClick) {\n                    onRowClick(event, rowIndex);\n                }\n            });\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isLoading, isRecommendations, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.dataTableAriaLabel), className: \"tableOverride\", gridBreakPoint: \"grid-2xl\", hasSelectableRowCaption: isRecommendations },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { isSelectable: isRecommendations, isHoverable: isRecommendations, isRowSelected: isRecommendations && row.selected, onRowClick: _event => this.handleOnRowClick(_event, rowIndex), key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 && !isRecommendations ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${cellIndex}-${rowIndex}`, modifier: \"nowrap\", select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    }, style: item.style })) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", isActionCell: !isRecommendations && cellIndex === row.cells.length - 1, style: item.style }, item.value))))))))),\n            Boolean(rows.length === 0) && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(DataTable));\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    recommendationsContainer: {\n        minHeight: '100vh',\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    toolbarContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import { Title, TitleSizes } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { styles } from './recommendations.styles';\nclass RecommendationsHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.recommendations)))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst RecommendationsHeader = injectIntl(connect(mapStateToProps, {})(RecommendationsHeaderBase));\nexport { RecommendationsHeader };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport 'routes/views/details/components/dataTable/dataTable.scss';\nimport { parseQuery } from 'api/queries/query';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataTable } from 'routes/views/details/components/dataTable';\nimport { styles } from 'routes/views/details/components/dataTable/dataTable.styles';\nimport { getGroupById } from 'routes/views/utils/groupBy';\nimport { createMapStateToProps } from 'store/common';\nimport { uiActions, uiSelectors } from 'store/ui';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { withRouter } from 'utils/router';\nclass RecommendationsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { groupBy, intl, report } = this.props;\n            if (!report) {\n                return;\n            }\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: 'project', // Todo: getUnsortedComputedReportItems required for fake data.\n            });\n            const columns = [\n                Object.assign({ name: intl.formatMessage(messages.recommendationsNames, { value: 'container' }), orderBy: 'container' }, (computedItems.length && { isSortable: true })),\n                Object.assign({ hidden: groupBy === 'project', name: intl.formatMessage(messages.recommendationsNames, { value: 'project' }), orderBy: 'project' }, (computedItems.length && { isSortable: true })),\n                Object.assign({ name: intl.formatMessage(messages.recommendationsNames, { value: 'workload' }), orderBy: 'workload' }, (computedItems.length && { isSortable: true })),\n                Object.assign({ name: intl.formatMessage(messages.recommendationsNames, { value: 'workload_type' }), orderBy: 'workload_type' }, (computedItems.length && { isSortable: true })),\n                Object.assign({ hidden: groupBy === 'cluster', name: intl.formatMessage(messages.recommendationsNames, { value: 'cluster' }), orderBy: 'cluster' }, (computedItems.length && { isSortable: true })),\n                Object.assign({ name: intl.formatMessage(messages.recommendationsNames, { value: 'last_reported' }), orderBy: 'last_reported', style: styles.lastReportedColumn }, (computedItems.length && { isSortable: true })),\n            ];\n            computedItems.map((item, index) => {\n                const cluster = item && item.clusters !== null ? item.clusters[0] : '';\n                const container = `Container${index}`;\n                const lastReported = `6 hours ago`;\n                const project = item && item.label !== null ? item.label : '';\n                const workload = `Workload${index}`;\n                const workloadType = `Workload type${index}`;\n                rows.push({\n                    cells: [\n                        { value: React.createElement(\"div\", null, container) },\n                        { value: React.createElement(\"div\", null, project), hidden: groupBy === 'project' },\n                        { value: React.createElement(\"div\", null, workload) },\n                        { value: React.createElement(\"div\", null, workloadType) },\n                        { value: React.createElement(\"div\", null, cluster), hidden: groupBy === 'cluster' },\n                        { value: React.createElement(\"div\", null, lastReported), style: styles.lastReported },\n                    ],\n                    item: {\n                        cluster,\n                        container,\n                        lastReported,\n                        project,\n                        workload,\n                        workloadType,\n                    },\n                });\n            });\n            const filteredColumns = columns.filter(column => !column.hidden);\n            const filteredRows = rows.map((_a) => {\n                var row = __rest(_a, []);\n                row.cells = row.cells.filter(cell => !cell.hidden);\n                return row;\n            });\n            this.setState({\n                columns: filteredColumns,\n                rows: filteredRows,\n            });\n        };\n        this.handleOnRowClick = (event, rowIndex) => {\n            const { openRecommendationsDrawer } = this.props;\n            const { rows } = this.state;\n            openRecommendationsDrawer(rows[rowIndex].item);\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { report } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { isLoading, onSort } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, isLoading: isLoading, isRecommendations: true, onSort: onSort, rows: rows, onRowClick: this.handleOnRowClick }));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    return {\n        groupBy: getGroupById(queryFromRoute),\n        isOpen: uiSelectors.selectIsRecommendationsDrawerOpen(state),\n    };\n});\nconst mapDispatchToProps = {\n    closeRecommendationsDrawer: uiActions.closeRecommendationsDrawer,\n    openRecommendationsDrawer: uiActions.openRecommendationsDrawer,\n    // authRequest: (...args) => dispatch(authRequest(...args)),\n};\nconst RecommendationsTable = injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(RecommendationsTableBase)));\nexport { RecommendationsTable };\n","import { ResourcePathsType } from 'api/resources/resource';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { createMapStateToProps } from 'store/common';\nexport class RecommendationsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { intl } = this.props;\n            const options = [\n                { name: intl.formatMessage(messages.filterByValues, { value: 'cluster' }), key: 'cluster' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'project' }), key: 'project' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'workload_type' }), key: 'workload_type' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'workload' }), key: 'workload' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'container' }), key: 'container' },\n            ];\n            return options;\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        });\n    }\n    render() {\n        const { isDisabled, itemsPerPage, itemsTotal, onFilterAdded, onFilterRemoved, pagination, query } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, isDisabled: isDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.ocp, showFilter: true }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst RecommendationsToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(RecommendationsToolbarBase);\nconst RecommendationsToolbar = injectIntl(RecommendationsToolbarConnect);\nexport { RecommendationsToolbar };\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { getQuery, parseQuery } from 'api/queries/rosQuery';\nimport { RosPathsType, RosType } from 'api/ros/ros';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoData } from 'routes/state/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { getGroupById, getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { handleFilterAdded, handleFilterRemoved, handlePerPageSelect, handleSetPage, handleSort, } from 'routes/views/utils/handles';\nimport { filterProviders, hasCurrentMonthData } from 'routes/views/utils/providers';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { rosActions } from 'store/ros';\nimport { rosSelectors } from 'store/ros';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedRosItems';\nimport { getCurrency } from 'utils/localStorage';\nimport { withRouter } from 'utils/router';\nimport { styles } from './recommendations.styles';\nimport { RecommendationsHeader } from './recommendationsHeader';\nimport { RecommendationsTable } from './recommendationsTable';\nimport { RecommendationsToolbar } from './recommendationsToolbar';\nconst baseQuery = {\n    delta: 'cost',\n    filter: {\n        limit: 10,\n        offset: 0,\n        resolution: 'monthly',\n        time_scope_units: 'month',\n        time_scope_value: -1,\n    },\n    exclude: {},\n    filter_by: {},\n    group_by: {\n        project: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst recommendationType = RosType.cost;\nconst recommendationPathsType = RosPathsType.recommendation;\nclass Recommendations extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            columns: [],\n            rows: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getComputedItems = () => {\n            const { query, recommendation } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return getUnsortedComputedReportItems({\n                report: recommendation,\n                idKey: groupByTagKey || groupById,\n            });\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, recommendation, router } = this.props;\n            const count = recommendation && recommendation.meta ? recommendation.meta.count : 0;\n            const limit = recommendation && recommendation.meta && recommendation.meta.filter && recommendation.meta.filter.limit\n                ? recommendation.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = recommendation && recommendation.meta && recommendation.meta.filter && recommendation.meta.filter.offset\n                ? recommendation.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = offset / limit + 1;\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handlePerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleSetPage(query, router, recommendation, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.openShift),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { query, recommendation, recommendationFetchStatus, recommendationQueryString, router } = this.props;\n            return (React.createElement(RecommendationsTable, { isLoading: recommendationFetchStatus === FetchStatus.inProgress, onSort: (sortType, isSortAscending) => handleSort(query, router, sortType, isSortAscending), report: recommendation, reportQueryString: recommendationQueryString }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, recommendation, router } = this.props;\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = recommendation && recommendation.meta ? recommendation.meta.count : 0;\n            return (React.createElement(RecommendationsToolbar, { isDisabled: isDisabled, itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onFilterAdded: filter => handleFilterAdded(query, router, filter), onFilterRemoved: filter => handleFilterRemoved(query, router, filter), pagination: this.getPagination(isDisabled), query: query }));\n        };\n        this.updateRecommendation = () => {\n            const { fetchRosReport, recommendationQueryString } = this.props;\n            fetchRosReport(recommendationPathsType, recommendationType, recommendationQueryString);\n        };\n    }\n    componentDidMount() {\n        this.updateRecommendation();\n    }\n    componentDidUpdate(prevProps) {\n        const { recommendation, recommendationError, recommendationQueryString, router } = this.props;\n        const newQuery = prevProps.recommendationQueryString !== recommendationQueryString;\n        const noRecommendation = !recommendation && !recommendationError;\n        const noLocation = !router.location.search;\n        if (newQuery || noRecommendation || noLocation) {\n            this.updateRecommendation();\n        }\n    }\n    render() {\n        const { groupBy, intl, providers, providersFetchStatus, recommendationError, recommendationFetchStatus } = this.props;\n        const computedItems = this.getComputedItems();\n        const isDisabled = computedItems.length === 0;\n        const isStandalone = groupBy === undefined;\n        const title = intl.formatMessage(messages.ocpDetailsTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (recommendationError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.inProgress) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.complete) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: ProviderType.ros, title: title });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.recommendationsContainer },\n            isStandalone && React.createElement(RecommendationsHeader, null),\n            React.createElement(\"div\", { style: isStandalone ? styles.content : undefined },\n                React.createElement(\"div\", { style: isStandalone ? styles.toolbarContainer : undefined }, this.getToolbar(computedItems)),\n                recommendationFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: isStandalone ? styles.tableContainer : undefined }, this.getTable()),\n                    React.createElement(\"div\", { style: isStandalone ? styles.paginationContainer : undefined },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const groupBy = getGroupById(queryFromRoute);\n    const currency = featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state) ? getCurrency() : undefined;\n    const query = {\n        delta: 'cost',\n        filter: Object.assign(Object.assign({}, baseQuery.filter), queryFromRoute.filter),\n        filter_by: queryFromRoute.filter_by || baseQuery.filter_by,\n        exclude: queryFromRoute.exclude || baseQuery.exclude,\n        order_by: queryFromRoute.order_by || baseQuery.order_by,\n    };\n    const recommendationQueryString = getQuery(Object.assign(Object.assign({}, query), { group_by: queryFromRoute.group_by || baseQuery.group_by, currency }));\n    const recommendation = rosSelectors.selectRos(state, recommendationPathsType, recommendationType, recommendationQueryString);\n    const recommendationError = rosSelectors.selectRosError(state, recommendationPathsType, recommendationType, recommendationQueryString);\n    const recommendationFetchStatus = rosSelectors.selectRosFetchStatus(state, recommendationPathsType, recommendationType, recommendationQueryString);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        currency,\n        groupBy,\n        providers: filterProviders(providers, ProviderType.ocp),\n        providersFetchStatus,\n        query,\n        recommendation,\n        recommendationError,\n        recommendationFetchStatus,\n        recommendationQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchRosReport: rosActions.fetchRosReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(Recommendations)));\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    return 'date';\n}\n","import * as utils from './query';\n// filter_by props are converted and returned with logical OR/AND prefix\nexport function getQuery(query) {\n    return utils.getQuery(query);\n}\n// filter_by props are not converted\nexport function getQueryRoute(query) {\n    return utils.getQueryRoute(query);\n}\nexport function parseQuery(query) {\n    return utils.parseQuery(query);\n}\n"],"names":["CalculatorIconConfig","name","height","width","svgPath","yOffset","xOffset","CalculatorIcon","styles","costColumn","textAlign","display","justifyContent","paddingRight","defaultLabel","minWidth","emptyState","backgroundColor","paddingTop","infoArrow","position","infoArrowDesc","bottom","infoDescription","color","fontSize","lastReported","lastReportedColumn","managedColumn","nameColumn","DataTable","constructor","props","super","this","getEmptyState","intl","router","queryFromRoute","location","search","filter_by","val","Object","values","filter","showMargin","EmptyState","EmptyStateIcon","icon","EmptyStateBody","formatMessage","messages","getSortBy","index","columns","orderBy","direction","order_by","getSortParams","sortBy","onSort","handleOnSort","columnIndex","handleOnSelect","event","isSelected","rowId","onSelected","rows","newRows","items","map","row","selected","item","setState","SortByDirection","handleOnRowClick","rowIndex","onRowClick","bind","render","isLoading","isRecommendations","TableComposable","className","gridBreakPoint","hasSelectableRowCaption","Thead","Tr","col","Th","key","value","modifier","sort","isSortable","undefined","style","Tbody","Td","colSpan","Bullseye","Spinner","size","isSelectable","isHoverable","isRowSelected","_event","cells","cellIndex","dataLabel","isActionCell","length","select","disable","selectionDisabled","onSelect","Boolean","injectIntl","content","paddingBottom","global_spacer_lg","header","global_BackgroundColor_light_100","padding","headerContent","paginationContainer","marginLeft","marginRight","pagination","global_spacer_md","recommendationsContainer","minHeight","tableContainer","toolbarContainer","RecommendationsHeaderBase","arguments","defaultState","state","assign","Title","headingLevel","title","TitleSizes","mapStateToProps","RecommendationsHeader","connect","RecommendationsTableBase","initDatum","groupBy","report","computedItems","idKey","hidden","cluster","clusters","container","project","label","workload","workloadType","push","filteredColumns","column","filteredRows","_a","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","__rest","cell","openRecommendationsDrawer","componentDidMount","componentDidUpdate","prevProps","currentReport","data","JSON","stringify","isOpen","ui","mapDispatchToProps","closeRecommendationsDrawer","RecommendationsTable","RecommendationsToolbarBase","getCategoryOptions","categoryOptions","isDisabled","itemsPerPage","itemsTotal","onFilterAdded","onFilterRemoved","query","resourcePathsType","showFilter","RecommendationsToolbarConnect","RecommendationsToolbar","baseQuery","delta","limit","offset","resolution","time_scope_units","time_scope_value","exclude","group_by","cost","recommendationType","recommendationPathsType","Recommendations","getComputedItems","recommendation","groupById","node","getIdKeyForGroupBy","groupByTagKey","getPagination","isBottom","count","meta","page","Pagination","isCompact","itemCount","onPerPageSelect","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","variant","PaginationVariant","widgetId","getTable","recommendationFetchStatus","recommendationQueryString","sortType","isSortAscending","reportQueryString","getToolbar","updateRecommendation","fetchRosReport","recommendationError","newQuery","noRecommendation","noLocation","providers","providersFetchStatus","isStandalone","providerType","parseQuery","currency","featureFlags","getQuery","providersQueryString"],"sourceRoot":""}