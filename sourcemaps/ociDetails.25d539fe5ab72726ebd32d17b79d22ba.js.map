{"version":3,"file":"js/ociDetails.f4f580ad4ffecbd60396.js","mappings":"sJAEO,MAAMA,EAA4B,CACvCC,KAAM,sBACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,0VACTC,QAAS,EACTC,QAAS,GAGEC,GAAsB,QAAWP,GAE9C,G,qECXO,MAAMQ,EAAkB,CAC7BP,KAAM,YACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,uHACTC,QAAS,EACTC,QAAS,GAGEG,GAAY,QAAWD,GAEpC,G,gBCXAE,EAAQ,GAAmB,CACzB,KAAQ,0BACR,MAAS,UACT,IAAO,gCAETA,EAAA,GAAqBA,EAAQ,E,gBCL7BA,EAAQ,GAAqB,CAC3B,KAAQ,4BACR,MAAS,UACT,IAAO,kCAETA,EAAA,GAAqBA,EAAQ,E,gBCL7BA,EAAQ,GAA4B,CAClC,KAAQ,mCACR,MAAS,UACT,IAAO,yCAETA,EAAA,GAAqBA,EAAQ,E,gBCL7BA,EAAQ,GAAoB,CAC1B,KAAQ,2BACR,MAAS,OACT,IAAO,iCAETA,EAAA,GAAqBA,EAAQ,E,gBCL7BA,EAAQ,GAAmB,CACzB,KAAQ,0BACR,MAAS,UACT,IAAO,gCAETA,EAAA,GAAqBA,EAAQ,E,wECPzBC,EAAsC,WAStC,OARAA,EAAWC,OAAOC,QAAU,SAASC,GACjC,IAAK,IAAIC,EAAGC,EAAI,EAAGC,EAAIC,UAAUC,OAAQH,EAAIC,EAAGD,IAE5C,IAAK,IAAII,KADTL,EAAIG,UAAUF,GACOJ,OAAOS,UAAUC,eAAeC,KAAKR,EAAGK,KACzDN,EAAEM,GAAKL,EAAEK,IAEjB,OAAON,CACX,EACOH,EAASa,MAAMC,KAAMP,UAChC,EAQA,QAHkB,WACd,OAAQ,UAAM,EAAAQ,WAAYf,EAAS,CAAEgB,QAAS,EAAAC,kBAAA,MAAyBC,UAAW,mDAAqD,CAAEC,SAAU,EAAC,SAAK,EAAAC,eAAgB,CAAEC,KAAM,EAAAC,yBAA0B,SAAK,EAAAC,MAAOvB,EAAS,CAAEwB,aAAc,KAAMC,KAAM,MAAQ,CAAEN,SAAU,2CAA4C,UAAM,EAAAO,eAAgB,CAAEP,SAAU,CAAC,0GAA0G,UAAM,IAAKnB,EAAS,CAAE2B,KAAM,6BAA8BC,OAAQ,SAAUC,IAAK,uBAAyB,CAAEV,SAAU,CAAC,IAAK,kBAAoB,IAAK,2BAClmB,C,sECdA,MAIA,EAJwB,IACZ,kBAAoB,OAAQ,CAAED,UAAW,uBAC7C,kBAAoB,KAAW,M,4JCKvC,MAAMY,UAA2B,cAC7BC,YAAYC,EAAYC,GACpBC,MAAMF,EAAYC,GAClBnB,KAAKqB,aAAe,CAChBC,gBAAgB,EAChBC,mBAAmB,GAEvBvB,KAAKwB,MAAQrC,OAAOC,OAAO,CAAC,EAAGY,KAAKqB,cACpCrB,KAAKyB,eAAiB,KAClB,MAAM,QAAEC,EAAO,KAAEC,EAAI,gBAAEC,EAAe,kBAAEC,GAAsB7B,KAAK8B,OAC7D,kBAAEP,GAAsBvB,KAAKwB,MACnC,OAAQ,kBAAoB,IAAa,CAAEO,MAAO,EAAGL,QAASA,EAASM,OAAQT,EAAmBU,MAAO,CAACN,GAAOO,QAASlC,KAAKmC,uBAAwBP,gBAAiBA,EAAiBC,kBAAmBA,GAAqB,EAErO7B,KAAKmC,uBAA0BH,IAC3BhC,KAAKoC,SAAS,CAAEb,kBAAmBS,GAAS,EAEhDhC,KAAKqC,sBAAwB,KACzBrC,KAAKoC,SAAS,CAAEb,mBAAmB,GAAO,EAE9CvB,KAAKsC,eAAiB,KAClB,MAAM,eAAEhB,GAAmBtB,KAAKwB,MAChCxB,KAAKoC,SAAS,CACVd,gBAAiBA,GACnB,EAENtB,KAAKuC,eAAkBjB,IACnBtB,KAAKoC,SAAS,CAAEd,kBAAiB,EAErCtB,KAAKmC,uBAAyBnC,KAAKmC,uBAAuBK,KAAKxC,MAC/DA,KAAKqC,sBAAwBrC,KAAKqC,sBAAsBG,KAAKxC,MAC7DA,KAAKuC,eAAiBvC,KAAKuC,eAAeC,KAAKxC,MAC/CA,KAAKsC,eAAiBtC,KAAKsC,eAAeE,KAAKxC,KACnD,CACAyC,SACI,MAAM,QAAEf,EAAO,WAAEgB,EAAU,oBAAEC,EAAmB,KAAEC,EAAMjB,MAAM,YAAEkB,GAAa,oBAAEC,EAAmB,OAAEC,GAAY/C,KAAK8B,MAE/GG,EAAQ,CACV,kBAAoB,EAAAe,aAAc,CAAEC,UAAW,SAAUP,WAAYA,EAAYQ,IAAK,gBAAiBC,QAASnD,KAAKqC,uBAAyBO,EAAKQ,cAAcC,EAAA,0BAKrK,OAHIV,GACAV,EAAMqB,QAAQ,kBAAoB,EAAAN,aAAc,CAAEC,UAAW,SAAUC,IAAK,oBAAqBR,WAAYA,GAAchB,EAAQ6B,SAAS,MAAqC,IAAvBV,EAAYnD,OAAcyD,QAAS,IAAML,EAAoBD,EAAY,GAAIE,IAAWH,EAAKQ,cAAcC,EAAA,6BAEjQ,kBAAoB,aAAgB,KACxC,kBAAoB,EAAAG,SAAU,CAAEC,SAAUzD,KAAKsC,eAAgBoB,OAAQ,kBAAoB,EAAAC,YAAa,CAAEC,SAAU5D,KAAKuC,iBAAmBP,OAAQhC,KAAKwB,MAAMF,eAAgBuC,SAAS,EAAMC,SAAU,QAASC,cAAe9B,IAChOjC,KAAKyB,iBACb,EAGJ,MAAMuC,GAAkB,SAAsB,CAACxC,EAAOM,KAC3C,CAAC,KAENmC,EAAqB,CACvBnB,oBAAqBoB,EAAA,sCAEnBC,GAAwB,IAAAC,SAAQJ,EAAiBC,EAAzB,CAA6CjD,GAE3E,GADgB,EAAAqD,EAAA,KAAW,OAAWF,G,8FC5D/B,MAAMG,EAAS,CAClBC,WAAY,CACRC,UAAW,SAEfC,aAAc,CACVC,SAAU,QAEdC,WAAY,CACRC,gBAAiB,WACjBC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WACZtG,OAAQ,OACRC,MAAO,QAEXsG,UAAW,CACPlB,SAAU,YAEdmB,cAAe,CACXC,OAAQ,YAEZC,gBAAiB,CACbC,MAAO,WACPC,SAAU,YAEdC,WAAY,CACR5G,MAAO,M,6JCrBf,MAAM6G,UAAkB,cACpBtE,YAAYa,GACRV,MAAMU,GACN9B,KAAKwF,cAAgB,KACjB,MAAM,KAAE5C,EAAI,OAAEG,GAAW/C,KAAK8B,MACxB2D,GAAiB,QAAW1C,EAAO2C,SAASC,QAClD,GAAIF,EAAeG,UACf,IAAK,MAAMC,KAAO1G,OAAO2G,OAAOL,EAAeG,WAC3C,GAAY,MAARC,EACA,OAAO,kBAAoB,IAAkB,CAAEE,OAAQF,EAAKG,YAAY,IAIpF,OAAQ,kBAAoB,EAAA/F,WAAY,KACpC,kBAAoB,EAAAK,eAAgB,CAAEC,KAAM,OAC5C,kBAAoB,EAAAK,eAAgB,KAAMgC,EAAKQ,cAAcC,EAAA,sBAA8B,EAEnGrD,KAAKiG,UAAYC,IACb,MAAM,QAAEC,EAAO,OAAEpD,GAAW/C,KAAK8B,MAC3BsE,EAAUD,EAAQD,GAAOE,QACzBX,GAAiB,QAAW1C,EAAO2C,SAASC,QAC5CU,EAAYZ,GAAkBA,EAAea,UAAYb,EAAea,SAASF,GACvF,OAAOC,EACD,CACEH,QACAG,aAEF,CAAC,CAAC,EAEZrG,KAAKuG,cAAiBL,IACX,CACHM,OAAQxG,KAAKiG,UAAUC,GACvBO,OAAQzG,KAAK0G,aACbC,YAAaT,IAGrBlG,KAAKsC,eAAiB,CAACsE,EAAOC,EAAYC,KACtC,MAAM,WAAEC,EAAU,KAAEC,GAAShH,KAAK8B,MAClC,IAAImF,EACAhF,EAAQ,IACG,IAAX6E,EACAG,EAAUD,EAAKE,KAAIC,IACfA,EAAIC,SAAWP,EACRM,MAIXF,EAAU,IAAID,GACdC,EAAQH,GAAOM,SAAWP,EAC1B5E,EAAQ,CAACgF,EAAQH,GAAOnF,OAE5B3B,KAAKoC,SAAS,CAAE4E,SAAQ,KAChBD,GACAA,EAAW9E,EAAO4E,EACtB,GACF,EAEN7G,KAAK0G,aAAe,CAACE,EAAOV,EAAOG,KAC/B,MAAM,QAAEF,EAAO,OAAEM,GAAWzG,KAAK8B,MAC7B2E,GAGAA,EAFgBN,EAAQD,GAAOE,QACPC,IAAc,EAAAgB,gBAAA,IAE1C,EAEJrH,KAAKsC,eAAiBtC,KAAKsC,eAAeE,KAAKxC,MAC/CA,KAAK0G,aAAe1G,KAAK0G,aAAalE,KAAKxC,KAC/C,CACAyC,SACI,MAAM,QAAE0D,EAAO,KAAEvD,EAAI,UAAE0E,EAAS,KAAEN,GAAShH,KAAK8B,MAChD,OAAQ,kBAAoB,aAAgB,KACxC,kBAAoB,EAAAyF,gBAAiB,CAAE,aAAc3E,EAAKQ,cAAcC,EAAA,sBAA8BmE,eAAgB,YAClH,kBAAoB,EAAAC,MAAO,KACvB,kBAAoB,EAAAC,GAAI,KAAMvB,EAAQe,KAAI,CAACS,EAAKzB,IAAW,kBAAoB,EAAA0B,GAAI,CAAE1E,IAAK,OAAOgD,KAASyB,EAAIE,QAASC,SAAU,SAAUC,KAAMJ,EAAIK,WAAahI,KAAKuG,cAAcL,QAAS+B,EAAWC,MAAOP,EAAIO,OAASP,EAAInJ,UACrO,kBAAoB,EAAA2J,MAAO,KAAMb,EAAa,kBAAoB,EAAAI,GAAI,KAClE,kBAAoB,EAAAU,GAAI,CAAEC,QAAS,KAC/B,kBAAoB,EAAAC,SAAU,KAC1B,kBAAoB,MAAO,CAAEJ,MAAO,CAAE1D,UAAW,WAC7C,kBAAoB,EAAA+D,QAAS,CAAE5H,KAAM,WAAgBqG,EAAKE,KAAI,CAACC,EAAKqB,IAAc,kBAAoB,EAAAd,GAAI,CAAExE,IAAK,OAAOsF,KAAcrB,EAAIsB,MAAMvB,KAAI,CAACvF,EAAM+G,IAA4B,IAAdA,EAAmB,kBAAoB,EAAAN,GAAI,CAAEO,UAAWxC,EAAQuC,GAAWlK,KAAM0E,IAAK,QAAQwF,KAAaF,IAAYV,SAAU,SAAUc,OAAQ,CACpUC,QAAS1B,EAAI2B,kBACbjC,WAAYM,EAAIC,SAChB3D,SAAU,CAACsF,EAAQlC,IAAe7G,KAAKsC,eAAeyG,EAAQlC,EAAY2B,GAC1EA,cACK,kBAAoB,EAAAJ,GAAI,CAAEO,UAAWxC,EAAQuC,GAAWlK,KAAM0E,IAAK,QAAQsF,KAAYE,IAAaZ,SAAU,SAAUkB,aAAcN,IAAcvB,EAAIsB,MAAM/I,OAAS,GAAKiC,EAAKkG,cAClMoB,QAAwB,IAAhBjC,EAAKtH,SAAiB,kBAAoB,MAAO,CAAEwI,MAAO,gBAAqBlI,KAAKwF,iBACpG,EAEJ,SAAe,EAAAnB,EAAA,KAAW,OAAWkB,G,4SCjG9B,SAAS2D,EAAmBxH,EAAU,CAAC,GAC1C,OAAIA,EAAQyH,gBACD,kBAEPzH,EAAQ0H,OACD,SAEP1H,EAAQ2H,gBACD,kBAEJ,MACX,C,uKCNO,MAAM/E,EAAS,CAClBgF,UAAW,CACPC,UAAWC,EAAA,OACXC,aAAc,GAElBC,cAAe,CACXrE,SAAUsE,EAAA,SACVvE,MAAOwE,EAAA,QAEXC,UAAW,CACPrF,UAAW,OAEfsF,OAAQ,CACJlF,gBAAiBmF,EAAA,OACjBC,QAASR,EAAA,QAEbS,cAAe,CACXpF,QAAS,OACTC,eAAgB,iBAEpBoF,kBAAmB,CACfrF,QAAS,OACTsF,UAAW,QAEfC,mBAAoB,CAChBvF,QAAS,QAEbwF,MAAO,CACHC,cAAeC,EAAA,SCdjBC,EAAiB,CACnB,CAAEC,MAAO,kBAAmB5C,MAAO,mBACnC,CAAE4C,MAAO,kBAAmB5C,MAAO,mBACnC,CAAE4C,MAAO,SAAU5C,MAAO,WAExB6C,EAAqB,QAC3B,MAAMC,UAA0B,cAC5BlI,SACI,MAAM,SAAEmI,EAAQ,QAAElJ,EAAO,yBAAEmJ,EAAwB,wBAAEC,EAAuB,mBAAEC,EAAkB,kBAAEC,EAAiB,UAAEC,EAAS,eAAEC,EAAc,OAAEC,EAAM,KAAEvI,GAAU5C,KAAK8B,MACjKsJ,EAAcD,IAAWD,GAAkBD,GAAaA,EAAUI,MAAQJ,EAAUI,KAAKtJ,MAAQ,EACjGuJ,EAAUH,GAAUA,EAAOE,MAAQF,EAAOE,KAAKE,OAASJ,EAAOE,KAAKE,MAAMC,MAAQL,EAAOE,KAAKE,MAAMC,KAAKD,MAC/G,OAAQ,kBAAoB,SAAU,CAAErD,MAAO5D,EAAOwF,QAClD,kBAAoB,MAAO,CAAE5B,MAAO5D,EAAO2F,eACvC,kBAAoB,EAAAxJ,MAAO,CAAEC,aAAc,KAAMwH,MAAO5D,EAAO+F,MAAO1J,KAAM,EAAA8K,WAAA,QAAqB7I,EAAKQ,cAAcC,EAAA,oBACpH,kBAAoB,MAAO,CAAE6E,MAAO5D,EAAO8F,oBACvCS,GAA4B,kBAAoB,IAAU,CAAED,SAAUA,EAAUnH,SAAUsH,IAC1FD,GAA2B,kBAAoB,IAAa,QACpE,kBAAoB,MAAO,CAAE5C,MAAO5D,EAAO2F,eACvC,kBAAoB,MAAO,CAAE/B,MAAO5D,EAAO4F,mBACvC,kBAAoB,IAAS,CAAEhB,mBAAoBA,EAAoBxH,QAASA,EAASgB,YAAa0I,EAAarE,WAAYiE,EAAmBU,QAASlB,EAAgBmB,UAAU,EAAMjB,mBAAoBA,KACnNzB,QAAQmC,IAAiB,kBAAoB,MAAO,KAChD,kBAAoB,EAAA3K,MAAO,CAAEC,aAAc,KAAMwH,MAAO5D,EAAOgF,UAAW3I,KAAM,EAAA8K,WAAA,SAAqB,EAAAG,EAAA,IAAeN,EAAUH,EAAOE,KAAKE,MAAMC,KAAKD,MAAM1D,MAAQ,EAAGyD,EAAUH,EAAOE,KAAKE,MAAMC,KAAKD,MAAMM,MAAQ,QACrN,kBAAoB,MAAO,CAAE3D,MAAO5D,EAAOuF,YAAa,aACxE,EAGJ,MAAM7F,GAAkB,SAAsB,CAACxC,EAAOM,KAClD,MAAMgK,GAAuB,OAAkB,MACzCb,EAAY,qBAAmCzJ,EAAO,QAAkBsK,GACxEZ,EAAiB,0BAAwC1J,EAAO,QAAkBsK,GAClFC,EAAuB,gCAA8CvK,EAAO,QAAkBsK,GACpG,MAAO,CACHjB,yBAA0BmB,EAAA,kCAAqDxK,GAC/EsJ,wBAAyBkB,EAAA,iCAAoDxK,GAC7EyJ,WAAW,QAAgBA,EAAW,SACtCC,iBACAa,uBACAD,uBACH,IAECG,GAAgB,EAAA5H,EAAA,KAAW,IAAAD,SAAQJ,EAAiB,CAAC,EAA1B,CAA6B2G,I,kFC1C9D,MAAM/I,GAAkB,QACxB,MAAMsK,WAAyB,cAC3BjL,cACIG,SAAS3B,WACTO,KAAKwB,MAAQ,CACT2E,QAAS,GACTa,KAAM,IAEVhH,KAAKmM,UAAY,KACb,MAAM,QAAEzK,EAAO,cAAE0K,EAAa,KAAExJ,EAAI,cAAEyJ,EAAa,OAAElB,EAAM,OAAEpI,EAAM,cAAEuJ,GAAkBtM,KAAK8B,MAC5F,IAAKqJ,EACD,OAEJ,MAAMnE,EAAO,GACPuF,GAAgB,OAA+B,CACjDpB,SACAqB,MAAOJ,GAAgC1K,IAErCyE,EAAUiG,EACV,CACE,CACI5N,KAAM,IAEV,CACIA,KAAMoE,EAAKQ,cAAcC,EAAA,aAE7B,CACI7E,KAAMoE,EAAKQ,cAAcC,EAAA,yBAE7BlE,OAAOC,OAAO,CAAEgH,QAAS,OAAQ5H,KAAMoE,EAAKQ,cAAcC,EAAA,QAAgB6E,MAAO,gBAAsBqE,EAAc7M,QAAU,CAAEsI,YAAY,IAC7I,CACIxJ,KAAM,KAGZ,CACE,CACIA,KAAM,IAEVW,OAAOC,OAAO,CAAEgH,QAAS1E,EAASlD,KAAMoE,EAAKQ,cAAcC,EAAA,uBAA+B,CAAEwE,MAAOnG,KAAe6K,EAAc7M,QAAU,CAAEsI,YAAY,IACxJ,CACIxJ,KAAMoE,EAAKQ,cAAcC,EAAA,yBAE7BlE,OAAOC,OAAO,CAAEgH,QAAS,OAAQ5H,KAAMoE,EAAKQ,cAAcC,EAAA,QAAgB6E,MAAO,gBAAsBqE,EAAc7M,QAAU,CAAEsI,YAAY,IAC7I,CACIxJ,KAAM,KAGlB+N,EAAcrF,KAAI,CAACvF,EAAMuE,KACrB,MAAMsF,EAAOxL,KAAKyM,aAAa9K,EAAMuE,GAC/BuE,EAAQ9I,GAAuB,OAAfA,EAAK8I,MAAiB9I,EAAK8I,MAAQ,GACnDiC,EAAiB1M,KAAK2M,sBAAsBhL,EAAMuE,GAClDxD,EAAa+H,IAAU,GAAG,OAAW/I,KAAa+I,IAAU,GAAG,OAAW2B,IAC1EQ,EAAOjL,EAAKkL,IAAMlL,EAAKkL,KAAOlL,EAAK8I,MAAQ,kBAAoB,MAAO,CAAEvC,MAAO,qBAA0BvG,EAAKkL,IAAM,KACpHC,EAAU9M,KAAK+M,WAAWpL,EAAMe,GAChClE,EAAOkE,EAAa+H,EAAS,kBAAoB,KAAM,CAAEuC,IAAI,SAAiB,CAC5EC,SAAU,yBACVC,YAAavL,EAAKkL,GAClBnL,UACAmL,GAAIlL,EAAKkL,GACT9J,SACAsH,MAAOI,EAAM0C,cACX1C,GACVzD,EAAKoG,KAAK,CACN3E,MAAO,CACH,CAAC,EACD,CACIZ,MAAQ,kBAAoB,MAAO,KAC/BrJ,EACAoO,IAER,CAAE/E,MAAO,kBAAoB,MAAO,KAAM6E,IAC1C,CAAE7E,MAAO,kBAAoB,MAAO,KAAM2D,IAC1C,CAAE3D,MAAO,kBAAoB,MAAO,KAAMiF,KAE9C9K,QAAQ,EACRL,OACAyF,SAAUiF,GAAkBC,QAAmErE,IAAlDqE,EAAce,MAAKxH,GAAOA,EAAIgH,KAAOlL,EAAKkL,KACvF/D,kBAAmBpG,GACrB,IAEN1C,KAAKoC,SAAS,CACV+D,UACAa,QACF,EAENhH,KAAK+M,WAAa,CAACpL,EAAMe,KACrB,MAAM,QAAEhB,EAAO,kBAAEG,GAAsB7B,KAAK8B,MAC5C,OAAQ,kBAAoB,IAAS,CAAEJ,QAASA,EAASgB,WAAYA,EAAYf,KAAMA,EAAMC,gBAAiBA,GAAiBC,kBAAmBA,GAAqB,EAE3K7B,KAAK2M,sBAAwB,CAAChL,EAAMuE,KAChC,MAAM,KAAEtD,GAAS5C,KAAK8B,MAChB+F,GAAQ,EAAA+D,EAAA,IAAe0B,KAAKC,IAAI5L,EAAK6J,KAAKD,MAAM1D,MAAQlG,EAAK6L,aAAc7L,EAAK6J,KAAKD,MAAMM,OAC3F4B,EAAoC,OAAvB9L,EAAK+L,eAAyB,EAAA9B,EAAA,IAAiB0B,KAAKC,IAAI5L,EAAK+L,gBAAkB,EAC5FC,IAAkC,IAAfF,GAAmC,SAAfA,GACvCG,EAAmC,OAAvBjM,EAAK+L,cACvB,IAAIG,EAUJ,OATIF,IACAE,EAAe,eACY,OAAvBlM,EAAK+L,eAA0B/L,EAAK6L,YAAc,IAClDK,GAAgB,aAEO,OAAvBlM,EAAK+L,eAA0B/L,EAAK6L,YAAc,IAClDK,GAAgB,cAGnBD,EAIO,kBAAoB,MAAO,CAAExN,UAAW,0BAC5C,kBAAoB,MAAO,CAAEA,UAAWyN,EAAc3K,IAAK,yBAAyBgD,KAChFyH,EAAiB/K,EAAKQ,cAAcC,EAAA,UAAkB,CAAEwE,MAAO4F,IAAgB,kBAAoB,IAAiB,MACpHxE,QAAQ0E,GAAyC,OAAvBhM,EAAK+L,eAA0B/L,EAAK6L,YAAc,IAAO,kBAAoB,OAAQ,CAAEpN,UAAW,gBAAiB8H,MAAO,cAAkBhF,IAAK,yBAAyBgD,MACpM+C,QAAQ0E,GAAyC,OAAvBhM,EAAK+L,eAA0B/L,EAAK6L,YAAc,IAAO,kBAAoB,OAAQ,CAAEpN,UAAW,kBAAmB8H,MAAO/I,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG,eAAmB,mBAAuB8D,IAAK,yBAAyBgD,OAClQ,kBAAoB,MAAO,CAAEgC,MAAO,oBAAwBhF,IAAK,yBAAyBgD,MAAW,OAAsB2B,MARxH,SASX,EAEJ7H,KAAKyM,aAAe,CAAC9K,EAAMuE,KACvB,MAAM,OAAEiF,EAAM,KAAEvI,GAAS5C,KAAK8B,MACxB0J,EAAOL,GAAUA,EAAOE,MAAQF,EAAOE,KAAKE,OAASJ,EAAOE,KAAKE,MAAMC,MAAQL,EAAOE,KAAKE,MAAMC,KAAKD,MACtGJ,EAAOE,KAAKE,MAAMC,KAAKD,MAAM1D,MAC7B,EACAiG,EAAwB,IAATtC,EAAaA,EAAKuC,QAAQ,IAAOpM,EAAK6J,KAAKD,MAAM1D,MAAQ2D,EAAQ,KAAKuC,QAAQ,GACnG,OAAQ,kBAAoB,aAAgB,MACxC,EAAAnC,EAAA,IAAejK,EAAK6J,KAAKD,MAAM1D,MAAOlG,EAAK6J,KAAKD,MAAMM,OACtD,kBAAoB,MAAO,CAAE3D,MAAO,oBAAwBhF,IAAK,cAAcgD,KAAWtD,EAAKQ,cAAcC,EAAA,gBAAwB,CAAEwE,MAAOiG,KAAkB,CAE5K,CACAE,oBACIhO,KAAKmM,WACT,CACA8B,mBAAmBC,GACf,MAAM,OAAE/C,EAAM,cAAEmB,GAAkBtM,KAAK8B,MACjCqM,EAAgBhD,GAAUA,EAAOiD,KAAOC,KAAKC,UAAUnD,EAAOiD,MAAQ,IACrDF,EAAU/C,QAAU+C,EAAU/C,OAAOiD,KAAOC,KAAKC,UAAUJ,EAAU/C,OAAOiD,MAAQ,MACpFD,GAAiBD,EAAU5B,gBAAkBA,GAChEtM,KAAKmM,WAEb,CACA1J,SACI,MAAM,UAAE6E,EAAS,WAAEP,EAAU,OAAEN,EAAM,cAAE6F,GAAkBtM,KAAK8B,OACxD,QAAEqE,EAAO,KAAEa,GAAShH,KAAKwB,MAC/B,OAAQ,kBAAoB,IAAW,CAAE2E,QAASA,EAASmB,UAAWA,EAAWP,WAAYA,EAAYN,OAAQA,EAAQO,KAAMA,EAAMsF,cAAeA,GACxJ,EAEJ,MAAMiC,IAAe,EAAAlK,EAAA,KAAW,OAAW6H,K,oDCtJ3C,MAAMsC,GAAgB,QAChB,GAAqB,QACpB,MAAMC,WAA2B,cACpCxN,cACIG,SAAS3B,WACTO,KAAKqB,aAAe,CAAC,EACrBrB,KAAKwB,MAAQrC,OAAOC,OAAO,CAAC,EAAGY,KAAKqB,cACpCrB,KAAK0O,mBAAqB,KACtB,MAAM,KAAE9L,EAAI,UAAE+L,GAAc3O,KAAK8B,MAC3B4J,EAAU,CACZ,CACIlN,KAAMoE,EAAKQ,cAAcC,EAAA,iBAAyB,CAAEwE,MAAO,oBAC3D3E,IAAK,mBAET,CACI1E,KAAMoE,EAAKQ,cAAcC,EAAA,iBAAyB,CAAEwE,MAAO,oBAC3D3E,IAAK,mBAET,CACI1E,KAAMoE,EAAKQ,cAAcC,EAAA,iBAAyB,CAAEwE,MAAO,WAC3D3E,IAAK,WAMb,OAHIyL,GAAaA,EAAUP,MAAQO,EAAUP,KAAK1O,QAC9CgM,EAAQ0B,KAAK,CAAE5O,KAAMoE,EAAKQ,cAAcC,EAAA,iBAAyB,CAAEwE,MAAO,OAAW3E,IAAK,OAEvFwI,CAAO,CAEtB,CACAsC,oBACI,MAAM,SAAEY,EAAQ,qBAAEC,EAAoB,eAAEC,GAAmB9O,KAAK8B,MAChE9B,KAAKoC,SAAS,CACV2M,gBAAiB/O,KAAK0O,uBACvB,KACKG,IAAyB,iBACzBD,EAAS,GAAoBJ,GAAeM,EAChD,GAER,CACAb,mBAAmBC,GACf,MAAM,SAAEU,EAAQ,MAAEI,EAAK,UAAEL,EAAS,qBAAEE,EAAoB,eAAEC,GAAmB9O,KAAK8B,OAC7E,QAAQ6M,EAAWT,EAAUS,WASzBK,KAAU,QAAQA,EAAOd,EAAUc,QACpCH,IAAyB,iBACzBD,EAAS,GAAoBJ,GAAeM,GAVhD9O,KAAKoC,SAAS,CACV2M,gBAAiB/O,KAAK0O,uBACvB,KACKG,IAAyB,iBACzBD,EAAS,GAAoBJ,GAAeM,EAChD,GAQZ,CACArM,SACI,MAAM,QAAEf,EAAO,cAAE2K,EAAa,iBAAE4C,EAAgB,aAAEC,EAAY,WAAEC,EAAU,eAAEC,EAAc,gBAAEC,EAAe,cAAEC,EAAa,gBAAEC,EAAe,WAAEC,EAAU,MAAER,EAAK,cAAE1C,EAAa,UAAEqC,GAAe3O,KAAK8B,OAC7L,gBAAEiN,GAAoB/O,KAAKwB,MACjC,OAAQ,kBAAoB,KAAa,CAAEuN,gBAAiBA,EAAiBrN,QAASA,EAAS2K,cAAeA,EAAe4C,iBAAkBA,EAAkBC,aAAcA,EAAcC,WAAYA,EAAYC,eAAgBA,EAAgBC,gBAAiBA,EAAiBC,cAAeA,EAAeC,gBAAiBA,EAAiBC,WAAYA,EAAYR,MAAOA,EAAOS,kBAAmB,SAAuBnD,cAAeA,EAAeoD,gBAAgB,EAAMC,YAAY,EAAMC,YAAY,EAAMjB,UAAWA,EAAWjE,mBAAoB,IAC7iB,EAGJ,MAAM,IAAkB,SAAsB,CAAClJ,EAAOM,KAGlD,MAAMgN,GAAiB,QAAS,CAC5B/I,OAAQ,CACJ8J,WAAY,UACZC,iBAAkB,QAClBC,kBAAmB,GAEvBC,UAAU,EACVC,MAAO,MAELtB,EAAY,gBAAuBnN,EAAO,GAAoBgN,GAAeM,GAEnF,MAAO,CACHD,qBAFyB,2BAAkCrN,EAAO,GAAoBgN,GAAeM,GAGrGH,YACAG,iBACH,IAEC7K,GAAqB,CACvB2K,SAAU,UAERsB,IAAwB,IAAA9L,SAAQ,GAAiBH,GAAzB,CAA6CwK,IACrE0B,IAAiB,EAAA9L,EAAA,IAAW6L,I,gBChG3B,MAAM,GAAS,CAClBE,WAAY,CACRjG,UAAW,QAEfkG,QAAS,CACL/F,cAAed,EAAA,SACfzE,WAAYyE,EAAA,UAEhB8G,oBAAqB,CACjBC,WAAY/G,EAAA,SACZgH,YAAahH,EAAA,UAEjBgG,WAAY,CACR5K,gBAAiBmF,EAAA,SACjBO,cAAemG,GAAA,SACf1L,WAAY0L,GAAA,UAEhBC,eAAgB,CACZH,WAAY/G,EAAA,SACZgH,YAAahH,EAAA,WCSfmH,GAAY,CACdC,MAAO,OACP7K,OAAQ,CACJkK,MAAO,GACPY,OAAQ,EACRhB,WAAY,UACZC,iBAAkB,QAClBC,kBAAmB,GAEvBe,QAAS,CAAC,EACVlL,UAAW,CAAC,EACZmL,SAAU,CACN5H,gBAAiB,KAErB7C,SAAU,CACNkF,KAAM,SAGRwF,GAAa,SACb,GAAkB,QACxB,MAAMC,WAAmB,cACrBhQ,YAAYC,EAAYC,GACpBC,MAAMF,EAAYC,GAClBnB,KAAKqB,aAAe,CAChB8E,QAAS,GACTkG,eAAe,EACf9K,mBAAmB,EACnByF,KAAM,GACNsF,cAAe,IAEnBtM,KAAKwB,MAAQrC,OAAOC,OAAO,CAAC,EAAGY,KAAKqB,cACpCrB,KAAKkR,iBAAmB,KACpB,MAAM,MAAElC,EAAK,OAAE7D,GAAWnL,KAAK8B,MACzBqP,EAAYjI,EAAmB8F,EAAM+B,UACrC3E,GAAgB,QAAiB4C,GACvC,OAAO,OAA+B,CAClC7D,SACAqB,MAAOJ,GAAiB+E,GAC1B,EAENnR,KAAKyB,eAAkB8K,IACnB,MAAM,MAAEyC,EAAK,OAAE7D,EAAM,kBAAEtJ,GAAsB7B,KAAK8B,OAC5C,cAAEuK,EAAa,kBAAE9K,EAAiB,cAAE+K,GAAkBtM,KAAKwB,MAC3D2P,EAAYjI,EAAmB8F,EAAM+B,UACrC3E,GAAgB,QAAiB4C,GACjCG,EAAahE,GAAUA,EAAOE,KAAOF,EAAOE,KAAKtJ,MAAQ,EAEzDE,EAAQ,GAMd,OALAqK,EAAcpF,KAAIvF,IACRA,EAAK8I,QAAU,GAAG,OAAW0G,KAAexP,EAAK8I,QAAU,GAAG,OAAW2B,KAC3EnK,EAAMmL,KAAKzL,EACf,IAEI,kBAAoB,IAAa,CAAEI,MAAOsK,EAAgB8C,EAAalN,EAAMvC,OAAQ0R,YAAa/E,GAAiBC,EAAc5M,SAAWyP,IAAe5C,EAAc7M,OAAS,EAAGgC,QAAS0K,EAAgB,GAAG,MAAYA,IAAkB+E,EAAWnP,OAAQT,EAAmBU,MAAOA,EAAOC,QAASlC,KAAKmC,uBAAwBP,gBAAiB,GAAiBC,kBAAmBA,GAAqB,EAE/Z7B,KAAKqR,cAAgB,CAACC,GAAW,KAC7B,MAAM,KAAE1O,EAAI,MAAEoM,EAAK,OAAE7D,EAAM,OAAEpI,GAAW/C,KAAK8B,MACvCC,EAAQoJ,GAAUA,EAAOE,KAAOF,EAAOE,KAAKtJ,MAAQ,EACpDkO,EAAQ9E,GAAUA,EAAOE,MAAQF,EAAOE,KAAKtF,QAAUoF,EAAOE,KAAKtF,OAAOkK,MAC1E9E,EAAOE,KAAKtF,OAAOkK,MACnBU,GAAU5K,OAAOkK,MAIjBsB,GAHSpG,GAAUA,EAAOE,MAAQF,EAAOE,KAAKtF,QAAUoF,EAAOE,KAAKtF,OAAO8K,OAC3E1F,EAAOE,KAAKtF,OAAO8K,OACnBF,GAAU5K,OAAO8K,QACDZ,EAAQ,EAC9B,OAAQ,kBAAoB,EAAAuB,WAAY,CAAEC,WAAYH,EAAUI,UAAW3P,EAAO4P,gBAAiB,CAAC/K,EAAOgL,KAAY,QAAoB5C,EAAOjM,EAAQ6O,GAAUC,UAAW,CAACjL,EAAOkL,KAAe,QAAc9C,EAAOjM,EAAQoI,EAAQ2G,GAAaP,KAAMA,EAAMK,QAAS3B,EAAO8B,OAAQ,CACpRC,gBAAiBpP,EAAKQ,cAAcC,EAAA,kBAA0B,CAC1DgH,MAAOzH,EAAKQ,cAAcC,EAAA,OAC1B4O,UAAWX,EAAW,SAAW,SAEtCpR,QAASoR,EAAW,EAAAY,kBAAA,OAA2B,EAAAA,kBAAA,IAAuBC,SAAU,sBAAqBb,EAAW,UAAY,KAAQ,EAE/ItR,KAAKoS,SAAW,KACZ,MAAM,MAAEpD,EAAK,OAAE7D,EAAM,kBAAEkH,EAAiB,kBAAExQ,EAAiB,OAAEkB,GAAW/C,KAAK8B,OACvE,cAAEuK,EAAa,cAAEC,GAAkBtM,KAAKwB,MACxC2P,EAAYjI,EAAmB8F,EAAM+B,UACrC3E,GAAgB,QAAiB4C,GACvC,OAAQ,kBAAoBT,GAAc,CAAE7M,QAAS0K,EAAgB,GAAG,MAAYA,IAAkB+E,EAAW/E,cAAeA,EAAeC,cAAeA,EAAe/E,UAAW+K,IAAsB,gBAAwBtL,WAAY/G,KAAKsS,eAAgB7L,OAAQ,CAAC8L,EAAUC,KAAoB,QAAWxD,EAAOjM,EAAQwP,EAAUC,GAAkBrH,OAAQA,EAAQtJ,kBAAmBA,EAAmByK,cAAeA,GAAiB,EAE9btM,KAAKyS,WAAclG,IACf,MAAM,MAAEyC,EAAK,OAAEjM,EAAM,OAAEoI,GAAWnL,KAAK8B,OACjC,cAAEuK,EAAa,cAAEC,GAAkBtM,KAAKwB,MACxC2P,EAAYjI,EAAmB8F,EAAM+B,UACrC3E,GAAgB,QAAiB4C,GACjCG,EAAahE,GAAUA,EAAOE,KAAOF,EAAOE,KAAKtJ,MAAQ,EAC/D,OAAQ,kBAAoBoO,GAAgB,CAAEzO,QAAS0K,EAAgB,GAAG,MAAYA,IAAkB+E,EAAW9E,cAAeA,EAAe4C,iBAA2C,IAAzB1C,EAAc7M,SAAkB2M,GAA0C,IAAzBC,EAAc5M,OAAewP,aAAc3C,EAAc7M,OAAQyP,WAAYA,EAAYC,eAAgBpP,KAAK0S,mBAAoBrD,gBAAiBrP,KAAKqC,sBAAuBiN,cAAevJ,IAAU,QAAkBiJ,EAAOjM,EAAQgD,GAASwJ,gBAAiBxJ,IAAU,QAAoBiJ,EAAOjM,EAAQgD,GAASyJ,WAAYxP,KAAKqR,gBAAiBrC,MAAOA,EAAO1C,cAAeA,GAAiB,EAEjmBtM,KAAK0S,mBAAsBC,IACvB,MAAM,cAAEtG,GAAkBrM,KAAKwB,MAChB,SAAXmR,EACA3S,KAAKoC,SAAS,CAAEiK,eAAe,EAAOC,cAAe,KAErC,SAAXqG,EACL3S,KAAKoC,SAAS,CACViK,eAAe,EACfC,cAAetM,KAAKkR,qBAGR,QAAXyB,GACL3S,KAAKoC,SAAS,CAAEiK,eAAgBA,EAAeC,cAAe,IAClE,EAEJtM,KAAKmC,uBAA0BH,IAC3BhC,KAAKoC,SAAS,CAAEb,kBAAmBS,GAAS,EAEhDhC,KAAKqC,sBAAwB,KACzBrC,KAAKoC,SAAS,CAAEb,mBAAmB,GAAO,EAE9CvB,KAAK4S,sBAAwBlR,IACzB,MAAM,MAAEsN,EAAK,OAAEjM,GAAW/C,KAAK8B,MACzB+Q,EAAanR,EACboR,EAAW3T,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGiP,KAAK0E,MAAM1E,KAAKC,UAAUU,KAAU,CAEjF+B,SAAU,CACN,CAAC8B,GAAa,KACfvM,SAAU,CAAEkF,KAAM,UACzBxL,KAAKoC,SAAS,CAAEiK,eAAe,EAAOC,cAAe,KAAM,KACvDvJ,EAAOiQ,UAAS,OAAiBF,EAAU/P,EAAO2C,UAAU,GAAO,CAAEuN,SAAS,GAAO,GACvF,EAENjT,KAAKsS,eAAiB,CAACrQ,EAAO4E,GAAa,KACvC,MAAM,cAAEwF,EAAa,cAAEC,GAAkBtM,KAAKwB,MAC9C,IAAI0R,EAAW,IAAK7G,EAAgBrM,KAAKkR,mBAAqB5E,GAC1DrK,GAASA,EAAMvC,OAAS,IACpBmH,EACA5E,EAAMiF,KAAIvF,GAAQuR,EAAS9F,KAAKzL,KAGhCM,EAAMiF,KAAIvF,IACNuR,EAAWA,EAASnN,QAAOF,GAAOA,EAAIgH,KAAOlL,EAAKkL,IAAG,KAIjE7M,KAAKoC,SAAS,CAAEiK,eAAe,EAAOC,cAAe4G,GAAW,EAEpElT,KAAKmT,aAAe,KAChB,MAAM,YAAEC,EAAW,MAAEpE,EAAK,kBAAEnN,EAAiB,OAAEkB,GAAW/C,KAAK8B,MAC1DiB,EAAO2C,SAASC,OAWjByN,EAAY,GAAiBpC,GAAYnP,GAVzCkB,EAAOiQ,UAAS,OAAiB,CAC7BlC,QAAS9B,EAAQA,EAAM8B,aAAU7I,EACjCrC,UAAWoJ,EAAQA,EAAMpJ,eAAYqC,EACrC8I,SAAU/B,EAAQA,EAAM+B,cAAW9I,EACnC3B,SAAU,CAAEkF,KAAM,SACnBzI,EAAO2C,UAAW,CACjBuN,SAAS,GAKjB,EAEJjT,KAAK0S,mBAAqB1S,KAAK0S,mBAAmBlQ,KAAKxC,MACvDA,KAAKmC,uBAAyBnC,KAAKmC,uBAAuBK,KAAKxC,MAC/DA,KAAKqC,sBAAwBrC,KAAKqC,sBAAsBG,KAAKxC,MAC7DA,KAAKsS,eAAiBtS,KAAKsS,eAAe9P,KAAKxC,KACnD,CACAgO,oBACIhO,KAAKmT,cACT,CACAlF,mBAAmBC,EAAWmF,GAC1B,MAAM,OAAElI,EAAM,YAAEmI,EAAW,kBAAEzR,EAAiB,OAAEkB,GAAW/C,KAAK8B,OAC1D,cAAEwK,GAAkBtM,KAAKwB,MACzBsR,EAAW5E,EAAUrM,oBAAsBA,EAC3C0R,GAAYpI,IAAWmI,EACvBE,GAAczQ,EAAO2C,SAASC,OAC9BuN,EAAWG,EAAU/G,gBAAkBA,GACzCwG,GAAYS,GAAYC,GAAcN,IACtClT,KAAKmT,cAEb,CACA1Q,SACI,MAAM,SAAEmI,EAAQ,KAAEhI,EAAI,UAAEqI,EAAS,qBAAEc,EAAoB,MAAEiD,EAAK,OAAE7D,EAAM,YAAEmI,EAAW,kBAAEjB,EAAiB,OAAEtP,GAAY/C,KAAK8B,MACnHqP,EAAYjI,EAAmB8F,EAAM+B,UACrCxE,EAAgBvM,KAAKkR,mBACrB7G,EAAQzH,EAAKQ,cAAcC,EAAA,mBAEjC,GAAIiQ,EACA,OAAO,kBAAoB,IAAc,CAAEjJ,MAAOA,IAEjD,GAAI0B,IAAyB,gBAC9B,OAAO,kBAAoB,IAAS,CAAE1B,MAAOA,IAE5C,GAAI0B,IAAyB,cAAsB,CAGpD,GADoBd,GAAaA,EAAUI,MAAiC,IAAzBJ,EAAUI,KAAKtJ,MAE9D,OAAO,kBAAoB,IAAa,CAAE0R,aAAc,QAAkBpJ,MAAOA,IAErF,KAAK,QAAoBY,GACrB,OAAO,kBAAoB,IAAQ,CAAEZ,MAAOA,GAEpD,CACA,OAAQ,kBAAoB,MAAO,CAAEnC,MAAO,eACxC,kBAAoB+D,EAAe,CAAErB,SAAUA,EAAUlJ,QAASyP,EAAWpG,mBAAoBlD,IAAS,QAAuBmH,EAAOjM,EAAQ8E,GAAQmD,kBAAmBhL,KAAK4S,sBAAuBzH,OAAQA,IAC/M,kBAAoB,MAAO,CAAEjD,MAAO,YAChClI,KAAKyS,WAAWlG,GAChBvM,KAAKyB,eAAe8K,GACpB8F,IAAsB,gBAA0B,kBAAoB,IAAS,MAAU,kBAAoB,aAAgB,KACvH,kBAAoB,MAAO,CAAEnK,MAAO,mBAAyBlI,KAAKoS,YAClE,kBAAoB,MAAO,CAAElK,MAAO,wBAChC,kBAAoB,MAAO,CAAEA,MAAO,eAAqBlI,KAAKqR,eAAc,OAChG,EAGJ,MAAM,IAAkB,SAAsB,CAAC7P,GAASuB,aACpD,MAAM0C,GAAiB,QAAW1C,EAAO2C,SAASC,QAC5CiF,EAAWoB,EAAA,kCAAqDxK,IAAS,eAAgByG,EACzF+G,EAAQ,CACV4B,MAAO,OACP7K,OAAQ5G,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGuR,GAAU5K,QAASN,EAAeM,QAC1EH,UAAWH,EAAeG,WAAa+K,GAAU/K,UACjDkL,QAASrL,EAAeqL,SAAWH,GAAUG,QAC7CC,SAAUtL,EAAesL,UAAYJ,GAAUI,SAC/CzK,SAAUb,EAAea,UAAYqK,GAAUrK,UAE7CzE,GAAoB,QAAS1C,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG4P,GAAQ,CAAEpE,cACvEO,EAAS,kBAA6B3J,EAAO,GAAiBwP,GAAYnP,GAC1EyR,EAAc,uBAAkC9R,EAAO,GAAiBwP,GAAYnP,GACpFwQ,EAAoB,6BAAwC7Q,EAAO,GAAiBwP,GAAYnP,GAChGiK,GAAuB,OAAkB,MACzCb,EAAY,qBAAmCzJ,EAAO,QAAkBsK,GACxEZ,EAAiB,0BAAwC1J,EAAO,QAAkBsK,GAClFC,EAAuB,gCAA8CvK,EAAO,QAAkBsK,GACpG,MAAO,CACHlB,WACAK,WAAW,QAAgBA,EAAW,SACtCC,iBACAa,uBACAiD,QACA7D,SACAmI,cACAjB,oBACAxQ,oBAeH,IAEC,GAAqB,CACvBuR,YAAa,kBAEjB,IAAe,EAAA/O,EAAA,KAAW,QAAW,IAAAD,SAAQ,GAAiB,GAAzB,CAA6C6M,K,gFCxR3E,MAAMyC,EAAmB,EAAGzG,WAAUC,cAAaxL,UAASmL,KAAI8G,kBAAiB5Q,SAAQsH,YAC5F,MAAM5E,GAAiB,QAAW1C,EAAO2C,SAASC,QAC5CmN,EAAW3T,OAAOC,OAAOD,OAAOC,OAAOD,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGqG,GAAkByH,GAAeA,IAAgB7C,GAAS,CAAE,CAAC,MAAmB6C,IAAkB7C,GAAS,CAAE,CAAC,MAAoBA,IAAW,CAAE0G,SAAU,CAC9N,CAACrP,GAAUiS,EAAkB,IAAM9G,KAQ3C,OANI8G,IACKb,EAAS/M,SACV+M,EAAS/M,OAAS,CAAC,GAEvB+M,EAAS/M,OAAO6N,SAAW,MAExB,GAAG3G,MAAY,QAAc6F,IAAW,EAEtCe,EAAsB,EAAG5G,WAAUC,cAAaxL,UAASoS,aAAYjH,KAAI9J,SAAQsH,QAAO0J,WACjG,MAAMtO,GAAiB,QAAW1C,EAAO2C,SAASC,QAC5CmN,EAAW3T,OAAOC,OAAOD,OAAOC,OAAOD,OAAOC,OAAOD,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGqG,GAAkByH,GAAeA,IAAgB7C,GAAS,CAAE,CAAC,MAAmB6C,IAAkB7C,GAAS,CAAE,CAAC,MAAoBA,IAAYyJ,GAAc,CAAE,CAAC,MAAeA,IAAgB,CAAE/C,SAAU,CAC7R,CAACrP,GAAUmL,KAgBnB,MAda,YAATkH,GACKjB,EAAS/M,SACV+M,EAAS/M,OAAS,CAAC,GAEvB+M,EAAS/M,OAAOiO,QAAUnH,EAC1BiG,EAAS/B,SAAW,CAChB,CAAC,MAAe+C,IAGN,wBAATC,IACLjB,EAAS/B,SAAW,CAChB,CAAC,MAAelE,IAGjB,GAAGI,MAAY,QAAc6F,IAAW,EAEtCa,EAAmBlO,GACrBA,GAAkBA,EAAeM,QAAUN,EAAeM,OAAO6N,WAAa,I","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/external-link-alt-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/minus-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_Color_100.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_FontSize_xs.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_disabled_color_100.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_3xl.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_xs.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Unavailable/Unavailable.js","webpack:///./src/routes/components/state/emptyValueState/emptyValueState.tsx","webpack:///./src/routes/views/details/components/actions/actions.tsx","webpack:///./src/routes/views/details/components/dataTable/dataTable.styles.ts","webpack:///./src/routes/views/details/components/dataTable/dataTable.tsx","webpack:///./src/utils/computedReport/getComputedOciReportItems.ts","webpack:///./src/routes/views/details/ociDetails/detailsHeader.styles.ts","webpack:///./src/routes/views/details/ociDetails/detailsHeader.tsx","webpack:///./src/routes/views/details/ociDetails/detailsTable.tsx","webpack:///./src/routes/views/details/ociDetails/detailsToolbar.tsx","webpack:///./src/routes/views/details/ociDetails/ociDetails.styles.ts","webpack:///./src/routes/views/details/ociDetails/ociDetails.tsx","webpack:///./src/routes/views/utils/paths.ts"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExternalLinkAltIcon = createIcon(ExternalLinkAltIconConfig);\n\nexport default ExternalLinkAltIcon;","import { createIcon } from '../createIcon';\n\nexport const MinusIconConfig = {\n  name: 'MinusIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const MinusIcon = createIcon(MinusIconConfig);\n\nexport default MinusIcon;","\"use strict\";\nexports.__esModule = true;\nexports.global_Color_100 = {\n  \"name\": \"--pf-global--Color--100\",\n  \"value\": \"#151515\",\n  \"var\": \"var(--pf-global--Color--100)\"\n};\nexports[\"default\"] = exports.global_Color_100;","\"use strict\";\nexports.__esModule = true;\nexports.global_FontSize_xs = {\n  \"name\": \"--pf-global--FontSize--xs\",\n  \"value\": \"0.75rem\",\n  \"var\": \"var(--pf-global--FontSize--xs)\"\n};\nexports[\"default\"] = exports.global_FontSize_xs;","\"use strict\";\nexports.__esModule = true;\nexports.global_disabled_color_100 = {\n  \"name\": \"--pf-global--disabled-color--100\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--disabled-color--100)\"\n};\nexports[\"default\"] = exports.global_disabled_color_100;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_3xl = {\n  \"name\": \"--pf-global--spacer--3xl\",\n  \"value\": \"4rem\",\n  \"var\": \"var(--pf-global--spacer--3xl)\"\n};\nexports[\"default\"] = exports.global_spacer_3xl;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_xs = {\n  \"name\": \"--pf-global--spacer--xs\",\n  \"value\": \"0.25rem\",\n  \"var\": \"var(--pf-global--spacer--xs)\"\n};\nexports[\"default\"] = exports.global_spacer_xs;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport '../Unavailable/Unavailable.css';\nvar Unavailable = function () {\n    return (_jsxs(EmptyState, __assign({ variant: EmptyStateVariant.large, className: \"ins-c-empty-state__unavailable pf-m-redhat-font\" }, { children: [_jsx(EmptyStateIcon, { icon: ExclamationCircleIcon }), _jsx(Title, __assign({ headingLevel: \"h5\", size: \"lg\" }, { children: \"This page is temporarily unavailable\" })), _jsxs(EmptyStateBody, { children: [\"Try refreshing the page. If the problem persists, contact your organization administrator or visit our\", _jsxs(\"a\", __assign({ href: \"https://status.redhat.com/\", target: \"_blank\", rel: \"noopener noreferrer\" }, { children: [' ', \"status page\"] })), ' ', \"for known outages.\"] })] })));\n};\nexport default Unavailable;\n//# sourceMappingURL=Unavailable.js.map","import './emptyValueState.scss';\nimport { MinusIcon } from '@patternfly/react-icons/dist/esm/icons/minus-icon';\nimport React from 'react';\nconst EmptyValueState = () => {\n    return (React.createElement(\"span\", { className: \"emptyValueContainer\" },\n        React.createElement(MinusIcon, null)));\n};\nexport default EmptyValueState;\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ExportModal } from 'routes/views/components/export';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nimport { tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, reportPathsType, reportQueryString } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { count: 1, groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, intl, item: { source_uuid }, redirectToCostModel, router, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, intl.formatMessage(messages.detailsActionsExport)),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], router) }, intl.formatMessage(messages.detailsActionsPriceList)));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = injectIntl(withRouter(DetailsActionsConnect));\nexport default Actions;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    costColumn: {\n        textAlign: 'right',\n    },\n    defaultLabel: {\n        minWidth: '63px',\n    },\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    nameColumn: {\n        width: '1%',\n    },\n};\n","import { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport { parseQuery } from 'api/queries/ocpQuery';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass DataTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { intl, router } = this.props;\n            const queryFromRoute = parseQuery(router.location.search);\n            if (queryFromRoute.filter_by) {\n                for (const val of Object.values(queryFromRoute.filter_by)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, router } = this.props;\n            const orderBy = columns[index].orderBy;\n            const queryFromRoute = parseQuery(router.location.search);\n            const direction = queryFromRoute && queryFromRoute.order_by && queryFromRoute.order_by[orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected, rows } = this.props;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isLoading, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.dataTableAriaLabel), gridBreakPoint: \"grid-2xl\" },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${cellIndex}-${rowIndex}`, modifier: \"nowrap\", select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    } })) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", isActionCell: cellIndex === row.cells.length - 1 }, item.value))))))))),\n            Boolean(rows.length === 0) && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(DataTable));\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.payer_tenant_id) {\n        return 'payer_tenant_id';\n    }\n    if (groupBy.region) {\n        return 'region';\n    }\n    if (groupBy.product_service) {\n        return 'product_service';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costValue: {\n        marginTop: global_spacer_lg.var,\n        marginBottom: 0,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    dateTitle: {\n        textAlign: 'end',\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentLeft: {\n        display: 'flex',\n        minHeight: '90px',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { TagPathsType } from 'api/tags/tag';\nimport { ExportsLink } from 'components/exports';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Currency } from 'routes/components/currency';\nimport { GroupBy } from 'routes/views/components/groupBy';\nimport { filterProviders } from 'routes/views/utils/providers';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedOciReportItems';\nimport { getSinceDateRangeString } from 'utils/dates';\nimport { formatCurrency } from 'utils/format';\nimport { styles } from './detailsHeader.styles';\nconst groupByOptions = [\n    { label: 'payer_tenant_id', value: 'payer_tenant_id' },\n    { label: 'product_service', value: 'product_service' },\n    { label: 'region', value: 'region' },\n];\nconst tagReportPathsType = TagPathsType.oci;\nclass DetailsHeaderBase extends React.Component {\n    render() {\n        const { currency, groupBy, isCurrencyFeatureEnabled, isExportsFeatureEnabled, onCurrencySelected, onGroupBySelected, providers, providersError, report, intl, } = this.props;\n        const showContent = report && !providersError && providers && providers.meta && providers.meta.count > 0;\n        const hasCost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.ociDetailsTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    isCurrencyFeatureEnabled && React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(\"div\", { style: styles.headerContentLeft },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: !showContent, onSelected: onGroupBySelected, options: groupByOptions, showTags: true, tagReportPathsType: tagReportPathsType })),\n                Boolean(showContent) && (React.createElement(\"div\", null,\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: TitleSizes['4xl'] }, formatCurrency(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD')),\n                    React.createElement(\"div\", { style: styles.dateTitle }, getSinceDateRangeString()))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        isCurrencyFeatureEnabled: featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state),\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        providers: filterProviders(providers, ProviderType.oci),\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n    };\n});\nconst DetailsHeader = injectIntl(connect(mapStateToProps, {})(DetailsHeaderBase));\nexport { DetailsHeader };\n","import 'routes/views/details/components/dataTable/dataTable.scss';\nimport { ReportPathsType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { paths } from 'routes';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { Actions } from 'routes/views/details/components/actions';\nimport { DataTable } from 'routes/views/details/components/dataTable';\nimport { styles } from 'routes/views/details/components/dataTable/dataTable.styles';\nimport { getBreakdownPath } from 'routes/views/utils/paths';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getForDateRangeString, getNoDataForDateRangeString } from 'utils/dates';\nimport { formatCurrency, formatPercentage } from 'utils/format';\nimport { noPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nconst reportPathsType = ReportPathsType.oci;\nclass DetailsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { groupBy, groupByTagKey, intl, isAllSelected, report, router, selectedItems } = this.props;\n            if (!report) {\n                return;\n            }\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey ? groupByTagKey : groupBy,\n            });\n            const columns = groupByTagKey\n                ? [\n                    {\n                        name: '',\n                    },\n                    {\n                        name: intl.formatMessage(messages.tagNames),\n                    },\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign({ orderBy: groupBy, name: intl.formatMessage(messages.detailsResourceNames, { value: groupBy }) }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ];\n            computedItems.map((item, index) => {\n                const cost = this.getTotalCost(item, index);\n                const label = item && item.label !== null ? item.label : '';\n                const monthOverMonth = this.getMonthOverMonthCost(item, index);\n                const isDisabled = label === `${noPrefix}${groupBy}` || label === `${noPrefix}${groupByTagKey}`;\n                const desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                const actions = this.getActions(item, isDisabled);\n                const name = isDisabled ? label : (React.createElement(Link, { to: getBreakdownPath({\n                        basePath: paths.ociDetailsBreakdown,\n                        description: item.id,\n                        groupBy,\n                        id: item.id,\n                        router,\n                        title: label.toString(),\n                    }) }, label));\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: (React.createElement(\"div\", null,\n                                name,\n                                desc)),\n                        },\n                        { value: React.createElement(\"div\", null, monthOverMonth) },\n                        { value: React.createElement(\"div\", null, cost) },\n                        { value: React.createElement(\"div\", null, actions) },\n                    ],\n                    isOpen: false,\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                    selectionDisabled: isDisabled,\n                });\n            });\n            this.setState({\n                columns,\n                rows,\n            });\n        };\n        this.getActions = (item, isDisabled) => {\n            const { groupBy, reportQueryString } = this.props;\n            return (React.createElement(Actions, { groupBy: groupBy, isDisabled: isDisabled, item: item, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getMonthOverMonthCost = (item, index) => {\n            const { intl } = this.props;\n            const value = formatCurrency(Math.abs(item.cost.total.value - item.delta_value), item.cost.total.units);\n            const percentage = item.delta_percent !== null ? formatPercentage(Math.abs(item.delta_percent)) : 0;\n            const showPercentage = !(percentage === 0 || percentage === '0.00');\n            const showValue = item.delta_percent !== null; // Workaround for https://github.com/project-koku/koku/issues/1395\n            let iconOverride;\n            if (showPercentage) {\n                iconOverride = 'iconOverride';\n                if (item.delta_percent !== null && item.delta_value < 0) {\n                    iconOverride += ' decrease';\n                }\n                if (item.delta_percent !== null && item.delta_value > 0) {\n                    iconOverride += ' increase';\n                }\n            }\n            if (!showValue) {\n                return getNoDataForDateRangeString();\n            }\n            else {\n                return (React.createElement(\"div\", { className: \"monthOverMonthOverride\" },\n                    React.createElement(\"div\", { className: iconOverride, key: `month-over-month-cost-${index}` },\n                        showPercentage ? intl.formatMessage(messages.percent, { value: percentage }) : React.createElement(EmptyValueState, null),\n                        Boolean(showPercentage && item.delta_percent !== null && item.delta_value > 0) && (React.createElement(\"span\", { className: \"fa fa-sort-up\", style: styles.infoArrow, key: `month-over-month-icon-${index}` })),\n                        Boolean(showPercentage && item.delta_percent !== null && item.delta_value < 0) && (React.createElement(\"span\", { className: \"fa fa-sort-down\", style: Object.assign(Object.assign({}, styles.infoArrow), styles.infoArrowDesc), key: `month-over-month-icon-${index}` }))),\n                    React.createElement(\"div\", { style: styles.infoDescription, key: `month-over-month-info-${index}` }, getForDateRangeString(value))));\n            }\n        };\n        this.getTotalCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.cost.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.cost.total.value, item.cost.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport || prevProps.selectedItems !== selectedItems) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { isLoading, onSelected, onSort, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, isLoading: isLoading, onSelected: onSelected, onSort: onSort, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst DetailsTable = injectIntl(withRouter(DetailsTableBase));\nexport { DetailsTable };\n","import { getQuery } from 'api/queries/ociQuery';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType, TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { isEqual } from 'utils/equal';\nimport { tagKey } from 'utils/props';\nconst tagReportType = TagType.tag;\nconst tagReportPathsType = TagPathsType.oci;\nexport class DetailsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { intl, tagReport } = this.props;\n            const options = [\n                {\n                    name: intl.formatMessage(messages.filterByValues, { value: 'payer_tenant_id' }),\n                    key: 'payer_tenant_id',\n                },\n                {\n                    name: intl.formatMessage(messages.filterByValues, { value: 'product_service' }),\n                    key: 'product_service',\n                },\n                {\n                    name: intl.formatMessage(messages.filterByValues, { value: 'region' }),\n                    key: 'region',\n                },\n            ];\n            if (tagReport && tagReport.data && tagReport.data.length) {\n                options.push({ name: intl.formatMessage(messages.filterByValues, { value: tagKey }), key: tagKey });\n            }\n            return options;\n        };\n    }\n    componentDidMount() {\n        const { fetchTag, tagReportFetchStatus, tagQueryString } = this.props;\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        }, () => {\n            if (tagReportFetchStatus !== FetchStatus.inProgress) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchTag, query, tagReport, tagReportFetchStatus, tagQueryString } = this.props;\n        if (!isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            }, () => {\n                if (tagReportFetchStatus !== FetchStatus.inProgress) {\n                    fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n                }\n            });\n        }\n        else if (query && !isEqual(query, prevProps.query)) {\n            if (tagReportFetchStatus !== FetchStatus.inProgress) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n        }\n    }\n    render() {\n        const { groupBy, isAllSelected, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onExportClicked, onFilterAdded, onFilterRemoved, pagination, query, selectedItems, tagReport, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, groupBy: groupBy, isAllSelected: isAllSelected, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onExportClicked: onExportClicked, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.oci, selectedItems: selectedItems, showBulkSelect: true, showExport: true, showFilter: true, tagReport: tagReport, tagReportPathsType: tagReportPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        key_only: true,\n        limit: 1000,\n    });\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, tagQueryString);\n    return {\n        tagReportFetchStatus,\n        tagReport,\n        tagQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst DetailsToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsToolbarBase);\nconst DetailsToolbar = injectIntl(DetailsToolbarConnect);\nexport { DetailsToolbar };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    ociDetails: {\n        minHeight: '100%',\n    },\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getQuery, parseQuery } from 'api/queries/ociQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoData } from 'routes/state/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { ExportModal } from 'routes/views/components/export';\nimport { getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { handleCurrencySelected, handleFilterAdded, handleFilterRemoved, handlePerPageSelect, handleSetPage, handleSort, } from 'routes/views/utils/handles';\nimport { filterProviders, hasCurrentMonthData } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedOciReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getCurrency } from 'utils/localStorage';\nimport { noPrefix, tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { DetailsHeader } from './detailsHeader';\nimport { DetailsTable } from './detailsTable';\nimport { DetailsToolbar } from './detailsToolbar';\nimport { styles } from './ociDetails.styles';\nconst baseQuery = {\n    delta: 'cost',\n    filter: {\n        limit: 10,\n        offset: 0,\n        resolution: 'monthly',\n        time_scope_units: 'month',\n        time_scope_value: -1,\n    },\n    exclude: {},\n    filter_by: {},\n    group_by: {\n        payer_tenant_id: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst reportType = ReportType.cost;\nconst reportPathsType = ReportPathsType.oci;\nclass OciDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            isAllSelected: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey || groupById,\n            });\n        };\n        this.getExportModal = (computedItems) => {\n            const { query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `${noPrefix}${groupById}` || item.label === `${noPrefix}${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getPagination = (isBottom = false) => {\n            const { intl, query, report, router } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = offset / limit + 1;\n            return (React.createElement(Pagination, { isCompact: !isBottom, itemCount: count, onPerPageSelect: (event, perPage) => handlePerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.oci),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { query, report, reportFetchStatus, reportQueryString, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return (React.createElement(DetailsTable, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, groupByTagKey: groupByTagKey, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending) => handleSort(query, router, sortType, isSortAscending), report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, router, report } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(DetailsToolbar, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isAllSelected: isAllSelected, isExportDisabled: computedItems.length === 0 || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onExportClicked: this.handleExportModalOpen, onFilterAdded: filter => handleFilterAdded(query, router, filter), onFilterRemoved: filter => handleFilterRemoved(query, router, filter), pagination: this.getPagination(), query: query, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            const groupByKey = groupBy;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: '*',\n                }, order_by: { cost: 'desc' } });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.updateReport = () => {\n            const { fetchReport, query, reportQueryString, router } = this.props;\n            if (!router.location.search) {\n                router.navigate(getRouteForQuery({\n                    exclude: query ? query.exclude : undefined,\n                    filter_by: query ? query.filter_by : undefined,\n                    group_by: query ? query.group_by : undefined,\n                    order_by: { cost: 'desc' },\n                }, router.location), {\n                    replace: true,\n                });\n            }\n            else {\n                fetchReport(reportPathsType, reportType, reportQueryString);\n            }\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { currency, intl, providers, providersFetchStatus, query, report, reportError, reportFetchStatus, router, } = this.props;\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const computedItems = this.getComputedItems();\n        const title = intl.formatMessage(messages.ociDetailsTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.inProgress) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.complete) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: ProviderType.oci, title: title });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.ociDetails },\n            React.createElement(DetailsHeader, { currency: currency, groupBy: groupById, onCurrencySelected: value => handleCurrencySelected(query, router, value), onGroupBySelected: this.handleGroupBySelected, report: report }),\n            React.createElement(\"div\", { style: styles.content },\n                this.getToolbar(computedItems),\n                this.getExportModal(computedItems),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const currency = featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state) ? getCurrency() : undefined;\n    const query = {\n        delta: 'cost',\n        filter: Object.assign(Object.assign({}, baseQuery.filter), queryFromRoute.filter),\n        filter_by: queryFromRoute.filter_by || baseQuery.filter_by,\n        exclude: queryFromRoute.exclude || baseQuery.exclude,\n        group_by: queryFromRoute.group_by || baseQuery.group_by,\n        order_by: queryFromRoute.order_by || baseQuery.order_by,\n    };\n    const reportQueryString = getQuery(Object.assign(Object.assign({}, query), { currency }));\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        currency,\n        providers: filterProviders(providers, ProviderType.oci),\n        providersError,\n        providersFetchStatus,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n        // Testing...\n        //\n        // providers: {\n        //   meta: {\n        //     count: 0,\n        //   },\n        // } as any,\n        // providersError: {\n        //   response: {\n        //     // status: 401\n        //     status: 500\n        //   }\n        // } as any,\n        // providersFetchStatus: FetchStatus.inProgress,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(OciDetails)));\n","import { getQueryRoute } from 'api/queries/query';\nimport { parseQuery } from 'api/queries/query';\nimport { breakdownDescKey, breakdownTitleKey, orgUnitIdKey, platformCategoryKey } from 'utils/props';\nexport const getBreakdownPath = ({ basePath, description, groupBy, id, isPlatformCosts, router, title, }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const newQuery = Object.assign(Object.assign(Object.assign(Object.assign({}, queryFromRoute), (description && description !== title && { [breakdownDescKey]: description })), (title && { [breakdownTitleKey]: title })), { group_by: {\n            [groupBy]: isPlatformCosts ? '*' : id, // Use ID here -- see https://github.com/project-koku/koku-ui/pull/2821\n        } });\n    if (isPlatformCosts) {\n        if (!newQuery.filter) {\n            newQuery.filter = {};\n        }\n        newQuery.filter.category = platformCategoryKey;\n    }\n    return `${basePath}?${getQueryRoute(newQuery)}`;\n};\nexport const getOrgBreakdownPath = ({ basePath, description, groupBy, groupByOrg, id, router, title, type, }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const newQuery = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, queryFromRoute), (description && description !== title && { [breakdownDescKey]: description })), (title && { [breakdownTitleKey]: title })), (groupByOrg && { [orgUnitIdKey]: groupByOrg })), { group_by: {\n            [groupBy]: id, // This may be overridden below\n        } });\n    if (type === 'account') {\n        if (!newQuery.filter) {\n            newQuery.filter = {};\n        }\n        newQuery.filter.account = id;\n        newQuery.group_by = {\n            [orgUnitIdKey]: groupByOrg,\n        };\n    }\n    else if (type === 'organizational_unit') {\n        newQuery.group_by = {\n            [orgUnitIdKey]: id,\n        };\n    }\n    return `${basePath}?${getQueryRoute(newQuery)}`;\n};\nexport const isPlatformCosts = (queryFromRoute) => {\n    return queryFromRoute && queryFromRoute.filter && queryFromRoute.filter.category === platformCategoryKey;\n};\n"],"names":["ExternalLinkAltIconConfig","name","height","width","svgPath","yOffset","xOffset","ExternalLinkAltIcon","MinusIconConfig","MinusIcon","exports","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","EmptyState","variant","EmptyStateVariant","className","children","EmptyStateIcon","icon","ExclamationCircleIcon","Title","headingLevel","size","EmptyStateBody","href","target","rel","DetailsActionsBase","constructor","stateProps","dispatchProps","super","defaultState","isDropdownOpen","isExportModalOpen","state","getExportModal","groupBy","item","reportPathsType","reportQueryString","props","count","isOpen","items","onClose","handleExportModalClose","setState","handleExportModalOpen","handleOnSelect","handleOnToggle","bind","render","isDisabled","showPriceListOption","intl","source_uuid","redirectToCostModel","router","DropdownItem","component","key","onClick","formatMessage","messages","unshift","includes","Dropdown","onSelect","toggle","KebabToggle","onToggle","isPlain","position","dropdownItems","mapStateToProps","mapDispatchToProps","costModels","DetailsActionsConnect","connect","injectIntl","styles","costColumn","textAlign","defaultLabel","minWidth","emptyState","backgroundColor","display","justifyContent","paddingTop","infoArrow","infoArrowDesc","bottom","infoDescription","color","fontSize","nameColumn","DataTable","getEmptyState","queryFromRoute","location","search","filter_by","val","values","filter","showMargin","getSortBy","index","columns","orderBy","direction","order_by","getSortParams","sortBy","onSort","handleOnSort","columnIndex","event","isSelected","rowId","onSelected","rows","newRows","map","row","selected","SortByDirection","isLoading","TableComposable","gridBreakPoint","Thead","Tr","col","Th","value","modifier","sort","isSortable","undefined","style","Tbody","Td","colSpan","Bullseye","Spinner","rowIndex","cells","cellIndex","dataLabel","select","disable","selectionDisabled","_event","isActionCell","Boolean","getIdKeyForGroupBy","payer_tenant_id","region","product_service","costValue","marginTop","global_spacer_lg","marginBottom","costLabelUnit","global_FontSize_sm","global_Color_100","dateTitle","header","global_BackgroundColor_light_100","padding","headerContent","headerContentLeft","minHeight","headerContentRight","title","paddingBottom","global_spacer_sm","groupByOptions","label","tagReportPathsType","DetailsHeaderBase","currency","isCurrencyFeatureEnabled","isExportsFeatureEnabled","onCurrencySelected","onGroupBySelected","providers","providersError","report","showContent","meta","hasCost","total","cost","TitleSizes","options","showTags","format","units","providersQueryString","providersFetchStatus","featureFlags","DetailsHeader","DetailsTableBase","initDatum","groupByTagKey","isAllSelected","selectedItems","computedItems","idKey","getTotalCost","monthOverMonth","getMonthOverMonthCost","desc","id","actions","getActions","to","basePath","description","toString","push","find","Math","abs","delta_value","percentage","delta_percent","showPercentage","showValue","iconOverride","percentValue","toFixed","componentDidMount","componentDidUpdate","prevProps","currentReport","data","JSON","stringify","DetailsTable","tagReportType","DetailsToolbarBase","getCategoryOptions","tagReport","fetchTag","tagReportFetchStatus","tagQueryString","categoryOptions","query","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onExportClicked","onFilterAdded","onFilterRemoved","pagination","resourcePathsType","showBulkSelect","showExport","showFilter","resolution","time_scope_units","time_scope_value","key_only","limit","DetailsToolbarConnect","DetailsToolbar","ociDetails","content","paginationContainer","marginLeft","marginRight","global_spacer_md","tableContainer","baseQuery","delta","offset","exclude","group_by","reportType","OciDetails","getComputedItems","groupById","isAllItems","getPagination","isBottom","page","Pagination","isCompact","itemCount","onPerPageSelect","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","PaginationVariant","widgetId","getTable","reportFetchStatus","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","action","handleGroupBySelected","groupByKey","newQuery","parse","navigate","replace","newItems","updateReport","fetchReport","prevState","reportError","noReport","noLocation","providerType","getBreakdownPath","isPlatformCosts","category","getOrgBreakdownPath","groupByOrg","type","account"],"sourceRoot":""}