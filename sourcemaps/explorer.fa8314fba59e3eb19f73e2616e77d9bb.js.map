{"version":3,"file":"js/explorer.ad648ebcf40d24c1b11e.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-tokens/dist/js/chart_color_cyan_300.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/chart_color_gold_300.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/chart_color_purple_300.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_Color_100.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_Color_200.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_FontSize_xs.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_disabled_color_100.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_3xl.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Unavailable/Unavailable.js","webpack:///./src/api/queries/userAccessQuery.ts","webpack:///./src/routes/views/components/charts/chartTheme/theme-koku.ts","webpack:///./src/routes/views/components/charts/chartTheme/index.ts","webpack:///./src/routes/views/components/charts/chartTheme/theme-utils.ts","webpack:///./src/routes/views/components/charts/common/chartUtils.ts","webpack:///./src/routes/views/components/costType/costType.styles.ts","webpack:///./src/routes/views/components/costType/costType.tsx","webpack:///./src/routes/views/components/perspective/perspective.tsx","webpack:///./src/utils/computedReport/getComputedExplorerReportItems.ts","webpack:///./src/routes/views/explorer/explorer.styles.ts","webpack:///./node_modules/victory-stack/es/helper-methods.js","webpack:///./node_modules/victory-stack/es/victory-stack.js","webpack:///./node_modules/@patternfly/react-charts/dist/esm/components/ChartStack/ChartStack.js","webpack:///./src/routes/views/components/charts/costExplorerChart/costExplorerChart.styles.ts","webpack:///./src/routes/views/components/charts/costExplorerChart/costExplorerChart.tsx","webpack:///./src/routes/views/explorer/explorerChart.styles.ts","webpack:///./src/routes/views/explorer/explorerUtils.ts","webpack:///./src/routes/views/explorer/explorerChart.tsx","webpack:///./src/routes/views/explorer/explorerDatePicker.styles.ts","webpack:///./src/routes/views/explorer/explorerDatePicker.tsx","webpack:///./src/routes/views/explorer/explorerDateRange.tsx","webpack:///./src/routes/views/explorer/explorerFilter.styles.ts","webpack:///./src/routes/views/explorer/explorerFilter.tsx","webpack:///./src/routes/views/explorer/explorerHeader.styles.ts","webpack:///./src/routes/views/explorer/explorerHeader.tsx","webpack:///./src/routes/views/explorer/explorerTable.styles.ts","webpack:///./src/routes/views/explorer/explorerTable.tsx","webpack:///./src/routes/views/explorer/explorerToolbar.tsx","webpack:///./src/routes/views/explorer/explorer.tsx","webpack:///./src/utils/skeleton.ts","webpack:///./src/utils/userAccess.ts"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.chart_color_cyan_300 = {\n  \"name\": \"--pf-chart-color-cyan-300\",\n  \"value\": \"#009596\",\n  \"var\": \"var(--pf-chart-color-cyan-300, #009596)\"\n};\nexports[\"default\"] = exports.chart_color_cyan_300;","\"use strict\";\nexports.__esModule = true;\nexports.chart_color_gold_300 = {\n  \"name\": \"--pf-chart-color-gold-300\",\n  \"value\": \"#f4c145\",\n  \"var\": \"var(--pf-chart-color-gold-300, #f4c145)\"\n};\nexports[\"default\"] = exports.chart_color_gold_300;","\"use strict\";\nexports.__esModule = true;\nexports.chart_color_purple_300 = {\n  \"name\": \"--pf-chart-color-purple-300\",\n  \"value\": \"#5752d1\",\n  \"var\": \"var(--pf-chart-color-purple-300, #5752d1)\"\n};\nexports[\"default\"] = exports.chart_color_purple_300;","\"use strict\";\nexports.__esModule = true;\nexports.global_Color_100 = {\n  \"name\": \"--pf-global--Color--100\",\n  \"value\": \"#151515\",\n  \"var\": \"var(--pf-global--Color--100)\"\n};\nexports[\"default\"] = exports.global_Color_100;","\"use strict\";\nexports.__esModule = true;\nexports.global_Color_200 = {\n  \"name\": \"--pf-global--Color--200\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--Color--200)\"\n};\nexports[\"default\"] = exports.global_Color_200;","\"use strict\";\nexports.__esModule = true;\nexports.global_FontSize_xs = {\n  \"name\": \"--pf-global--FontSize--xs\",\n  \"value\": \"0.75rem\",\n  \"var\": \"var(--pf-global--FontSize--xs)\"\n};\nexports[\"default\"] = exports.global_FontSize_xs;","\"use strict\";\nexports.__esModule = true;\nexports.global_disabled_color_100 = {\n  \"name\": \"--pf-global--disabled-color--100\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--disabled-color--100)\"\n};\nexports[\"default\"] = exports.global_disabled_color_100;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_3xl = {\n  \"name\": \"--pf-global--spacer--3xl\",\n  \"value\": \"4rem\",\n  \"var\": \"var(--pf-global--spacer--3xl)\"\n};\nexports[\"default\"] = exports.global_spacer_3xl;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport '../Unavailable/Unavailable.css';\nvar Unavailable = function () {\n    return (_jsxs(EmptyState, __assign({ variant: EmptyStateVariant.large, className: \"ins-c-empty-state__unavailable pf-m-redhat-font\" }, { children: [_jsx(EmptyStateIcon, { icon: ExclamationCircleIcon }), _jsx(Title, __assign({ headingLevel: \"h5\", size: \"lg\" }, { children: \"This page is temporarily unavailable\" })), _jsxs(EmptyStateBody, { children: [\"Try refreshing the page. If the problem persists, contact your organization administrator or visit our\", _jsxs(\"a\", __assign({ href: \"https://status.redhat.com/\", target: \"_blank\", rel: \"noopener noreferrer\" }, { children: [' ', \"status page\"] })), ' ', \"for known outages.\"] })] })));\n};\nexport default Unavailable;\n//# sourceMappingURL=Unavailable.js.map","import { parse, stringify } from 'qs';\nexport function getUserAccessQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseUserAccessQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","// Layout\nconst LAYOUT_PROPS = {\n    padding: 8,\n};\n// Victory theme properties only\nexport default {\n    area: Object.assign({}, LAYOUT_PROPS),\n    axis: Object.assign({}, LAYOUT_PROPS),\n    bar: Object.assign({}, LAYOUT_PROPS),\n    boxplot: Object.assign({}, LAYOUT_PROPS),\n    candlestick: Object.assign({}, LAYOUT_PROPS),\n    chart: Object.assign({}, LAYOUT_PROPS),\n    errorbar: Object.assign({}, LAYOUT_PROPS),\n    group: Object.assign({}, LAYOUT_PROPS),\n    legend: {},\n    line: Object.assign({}, LAYOUT_PROPS),\n    pie: Object.assign({}, LAYOUT_PROPS),\n    scatter: Object.assign({}, LAYOUT_PROPS),\n    stack: Object.assign({}, LAYOUT_PROPS),\n    tooltip: {},\n    voronoi: Object.assign({}, LAYOUT_PROPS),\n};\n","import getTheme from './theme-utils';\nconst ChartTheme = getTheme();\nexport default ChartTheme;\n","import { ChartThemeColor, getCustomTheme } from '@patternfly/react-charts';\nimport { default as ChartTheme } from './theme-koku';\n// Applies theme color and variant to base theme\nconst getTheme = () => getCustomTheme(ChartThemeColor.default, null, ChartTheme);\nexport default getTheme;\n","import { getInteractiveLegendItemStyles } from '@patternfly/react-charts';\nimport { intl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport { getMaxMinValues, getTooltipContent } from './chartDatum';\n// Returns groups of chart names associated with each data series\nexport const getChartNames = (series) => {\n    const result = [];\n    if (series) {\n        series.map(serie => {\n            // Each group of chart names are hidden / shown together\n            result.push(serie.childName);\n        });\n    }\n    return result;\n};\nexport const getDomain = (series, hiddenSeries) => {\n    const domain = { x: [1, 31] };\n    let maxValue = -1;\n    let minValue = -1;\n    if (series) {\n        series.forEach((s, index) => {\n            if (!isSeriesHidden(hiddenSeries, index) && s.data && s.data.length !== 0) {\n                const { max, min } = getMaxMinValues(s.data);\n                maxValue = Math.max(maxValue, max);\n                if (minValue === -1) {\n                    minValue = min;\n                }\n                else {\n                    minValue = Math.min(minValue, min);\n                }\n            }\n        });\n    }\n    const threshold = maxValue * 0.1;\n    const max = maxValue > 0 ? Math.ceil(maxValue + threshold) : 0;\n    const _min = minValue > 0 ? Math.max(0, Math.floor(minValue - threshold)) : 0;\n    const min = _min > 0 ? _min : 0;\n    if (max > 0) {\n        domain.y = [min, max];\n    }\n    return domain;\n};\n// Returns legend data styled per hiddenSeries\nexport const getLegendData = (series, hiddenSeries, tooltip = false) => {\n    if (!series) {\n        return undefined;\n    }\n    const result = series.map((s, index) => {\n        const data = Object.assign(Object.assign(Object.assign({ childName: s.childName }, s.legendItem), (tooltip && { name: s.legendItem.tooltip })), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n        return data;\n    });\n    return result;\n};\n// Note: Forecast is expected to use both datum.y and datum.y0\nexport const getTooltipLabel = (datum, formatter, formatOptions) => {\n    const tooltipFormatter = getTooltipContent(formatter);\n    const dy = datum.y !== undefined && datum.y !== null ? tooltipFormatter(datum.y, datum.units, formatOptions) : undefined;\n    const dy0 = datum.y0 !== undefined && datum.y0 !== null ? tooltipFormatter(datum.y0, datum.units, formatOptions) : undefined;\n    if (dy !== undefined && dy0 !== undefined) {\n        return intl.formatMessage(messages.chartCostForecastConeTooltip, { value0: dy0, value1: dy });\n    }\n    return dy !== undefined ? dy : intl.formatMessage(messages.chartNoData);\n};\nexport const getResizeObserver = (containerRef, handleResize) => {\n    const containerElement = containerRef;\n    const { ResizeObserver } = window;\n    let _navToggle;\n    let _resizeObserver;\n    if (containerElement && ResizeObserver) {\n        const resizeObserver = new ResizeObserver(entries => {\n            // We wrap it in requestAnimationFrame to avoid this error - ResizeObserver loop limit exceeded\n            window.requestAnimationFrame(() => {\n                if (!Array.isArray(entries) || !entries.length) {\n                    return;\n                }\n                handleResize();\n            });\n        });\n        resizeObserver.observe(containerElement);\n        _resizeObserver = () => resizeObserver.unobserve(containerElement);\n    }\n    else {\n        handleResize();\n        window.addEventListener('resize', handleResize);\n        _resizeObserver = () => window.removeEventListener('resize', handleResize);\n        _navToggle = insights.chrome.on('NAVIGATION_TOGGLE', setTimeout(handleResize, 500));\n    }\n    return () => {\n        if (_resizeObserver) {\n            _resizeObserver();\n        }\n        if (_navToggle) {\n            _navToggle();\n        }\n    };\n};\nexport const initHiddenSeries = (series, hiddenSeries, index) => {\n    const result = new Set(hiddenSeries);\n    if (!result.delete(index)) {\n        result.add(index);\n    }\n    return result;\n};\n// Returns true if at least one data series is available\nexport const isDataAvailable = (series, hiddenSeries) => {\n    const unavailable = []; // API data may not be available (e.g., on 1st of month)\n    if (series) {\n        series.forEach((s, index) => {\n            if (isSeriesHidden(hiddenSeries, index) || (s.data && s.data.length === 0)) {\n                unavailable.push(index);\n            }\n        });\n    }\n    return unavailable.length !== (series ? series.length : 0);\n};\n// Returns true if data series is hidden\nexport const isDataHidden = (series, hiddenSeries, data) => {\n    if (data && data.length) {\n        for (let keys = hiddenSeries.keys(), key; !(key = keys.next()).done;) {\n            let dataChildName;\n            let serieChildName;\n            for (const item of data) {\n                if (item.childName) {\n                    dataChildName = item.childName;\n                    break;\n                }\n            }\n            for (const item of series[key.value].data) {\n                if (item.childName) {\n                    serieChildName = item.childName;\n                    break;\n                }\n            }\n            if (serieChildName && dataChildName && serieChildName === dataChildName) {\n                return true;\n            }\n        }\n    }\n    return false;\n};\n// Returns true if data series is hidden\nexport const isSeriesHidden = (hiddenSeries, index) => {\n    return hiddenSeries.has(index);\n};\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    costSelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    costLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n        whiteSpace: 'nowrap',\n    },\n};\n","import './costType.scss';\nimport { Select, SelectOption, SelectVariant, Title } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { CostTypes } from 'utils/costType';\nimport { invalidateSession, setCostType } from 'utils/localStorage';\nimport { styles } from './costType.styles';\nconst costTypeOptions = [\n    { desc: messages.costTypeAmortizedDesc, label: messages.costTypeAmortized, value: CostTypes.amortized },\n    { desc: messages.costTypeBlendedDesc, label: messages.costTypeBlended, value: CostTypes.blended },\n    { desc: messages.costTypeUnblendedDesc, label: messages.costTypeUnblended, value: CostTypes.unblended },\n];\nclass CostTypeBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isSelectOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getSelect = () => {\n            const { costType, isDisabled } = this.props;\n            const { isSelectOpen } = this.state;\n            const selectOptions = this.getSelectOptions();\n            const selection = selectOptions.find((option) => option.value === costType);\n            return (React.createElement(Select, { className: \"selectOverride\", id: \"costTypeSelect\", isDisabled: isDisabled, isOpen: isSelectOpen, onSelect: this.handleSelect, onToggle: this.handleToggle, selections: selection, variant: SelectVariant.single }, selectOptions.map(option => (React.createElement(SelectOption, { description: option.desc, key: option.value, value: option })))));\n        };\n        this.getSelectOptions = () => {\n            const { intl } = this.props;\n            const options = [];\n            costTypeOptions.map(option => {\n                options.push({\n                    desc: intl.formatMessage(option.desc),\n                    toString: () => intl.formatMessage(option.label),\n                    value: option.value,\n                });\n            });\n            return options;\n        };\n        this.handleSelect = (event, selection) => {\n            const { onSelect } = this.props;\n            setCostType(selection.value); // Set cost type in local storage\n            this.setState({\n                isSelectOpen: false,\n            }, () => {\n                if (onSelect) {\n                    onSelect(selection.value);\n                }\n            });\n        };\n        this.handleToggle = isSelectOpen => {\n            this.setState({ isSelectOpen });\n        };\n    }\n    render() {\n        const { intl } = this.props;\n        // Clear local storage value if current session is not valid\n        invalidateSession();\n        return (React.createElement(\"div\", { style: styles.costSelector },\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\", style: styles.costLabel }, intl.formatMessage(messages.costTypeLabel)),\n            this.getSelect()));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst CostTypeConnect = connect(mapStateToProps, mapDispatchToProps)(CostTypeBase);\nconst CostType = injectIntl(CostTypeConnect);\nexport default CostType;\n","import messages from 'locales/messages';\nimport React from 'react';\nimport { PerspectiveSelect } from 'routes/views/components/perspective/perspectiveSelect';\n// Infrastructure AWS options\nconst infrastructureAwsOptions = [{ label: messages.perspectiveValues, value: 'aws' }];\n// Infrastructure AWS filtered by OpenShift options\nconst infrastructureAwsOcpOptions = [{ label: messages.perspectiveValues, value: 'aws_ocp' }];\n// Infrastructure Azure options\nconst infrastructureAzureOptions = [{ label: messages.perspectiveValues, value: 'azure' }];\n// Infrastructure Oci options\nconst infrastructureOciOptions = [{ label: messages.perspectiveValues, value: 'oci' }];\n// Infrastructure Azure filtered by OpenShift options\nconst infrastructureAzureOcpOptions = [{ label: messages.perspectiveValues, value: 'azure_ocp' }];\n// Infrastructure GCP options\nconst infrastructureGcpOptions = [{ label: messages.perspectiveValues, value: 'gcp' }];\n// Infrastructure GCP filtered by OCP options\nconst infrastructureGcpOcpOptions = [{ label: messages.perspectiveValues, value: 'gcp_ocp' }];\n// Infrastructure IBM options\nconst infrastructureIbmOptions = [{ label: messages.perspectiveValues, value: 'ibm' }];\n// Infrastructure IBM filtered by OCP options\nconst infrastructureIbmOcpOptions = [{ label: messages.perspectiveValues, value: 'ibm_ocp' }];\n// Infrastructure Ocp cloud options\nconst infrastructureOcpCloudOptions = [{ label: messages.perspectiveValues, value: 'ocp_cloud' }];\n// Ocp options\nconst ocpOptions = [{ label: messages.perspectiveValues, value: 'ocp' }];\n// RHEL options\nconst rhelOptions = [{ label: messages.perspectiveValues, value: 'rhel' }];\nconst getInfrastructureOptions = ({ hasAws, hasAwsOcp, hasAzure, hasAzureOcp, hasGcp, hasGcpOcp, hasIbm, hasIbmOcp, hasOci, isIbmFeatureEnabled, isOciFeatureEnabled, }) => {\n    const options = [];\n    if (hasAws) {\n        options.push(...infrastructureAwsOptions);\n    }\n    if (hasAwsOcp) {\n        options.push(...infrastructureAwsOcpOptions);\n    }\n    if (hasGcp) {\n        options.push(...infrastructureGcpOptions);\n    }\n    if (hasGcpOcp) {\n        options.push(...infrastructureGcpOcpOptions);\n    }\n    if (hasIbm) {\n        options.push(...infrastructureIbmOptions);\n    }\n    if (hasIbmOcp && isIbmFeatureEnabled) {\n        options.push(...infrastructureIbmOcpOptions);\n    }\n    if (hasAzure) {\n        options.push(...infrastructureAzureOptions);\n    }\n    if (hasAzureOcp) {\n        options.push(...infrastructureAzureOcpOptions);\n    }\n    if (hasOci && isOciFeatureEnabled) {\n        options.push(...infrastructureOciOptions);\n    }\n    return options;\n};\nconst Perspective = ({ currentItem, hasAws, hasAwsOcp, hasAzure, hasAzureOcp, hasGcp, hasGcpOcp, hasIbm, hasIbmOcp, hasOci, hasOcp, hasOcpCloud, hasRhel, isDisabled, isIbmFeatureEnabled, isInfrastructureTab, isOciFeatureEnabled, isRhelTab, onSelected, }) => {\n    // Dynamically show options if providers are available\n    const options = [];\n    // Note isInfrastructureTab and isRhelTab will be undefined for cost explorer\n    if (isInfrastructureTab !== undefined || isRhelTab !== undefined) {\n        if (isInfrastructureTab) {\n            if (hasOcpCloud) {\n                options.push(...infrastructureOcpCloudOptions);\n            }\n            options.push(...getInfrastructureOptions({\n                hasAws,\n                hasAwsOcp,\n                hasAzure,\n                hasAzureOcp,\n                hasGcp,\n                hasGcpOcp,\n                hasIbm,\n                hasIbmOcp,\n                hasOci,\n                isIbmFeatureEnabled,\n                isOciFeatureEnabled,\n            }));\n        }\n        else if (isRhelTab) {\n            if (hasRhel) {\n                options.push(...rhelOptions);\n            }\n        }\n        else if (hasOcp) {\n            options.push(...ocpOptions);\n        }\n    }\n    else {\n        if (hasOcp) {\n            options.push(...ocpOptions);\n        }\n        if (hasOcpCloud) {\n            options.push(...infrastructureOcpCloudOptions);\n        }\n        if (hasRhel) {\n            options.push(...rhelOptions);\n        }\n        options.push(...getInfrastructureOptions({\n            hasAws,\n            hasAwsOcp,\n            hasAzure,\n            hasAzureOcp,\n            hasGcp,\n            hasGcpOcp,\n            hasIbm,\n            hasIbmOcp,\n            hasOci,\n            isIbmFeatureEnabled,\n            isOciFeatureEnabled,\n        }));\n    }\n    return (React.createElement(PerspectiveSelect, { currentItem: currentItem || options[0].value, isDisabled: isDisabled, onSelected: onSelected, options: options }));\n};\nexport default Perspective;\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.account) {\n        return 'account';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.gcp_project) {\n        return 'gcp_project';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    if (groupBy.org_unit_id) {\n        return 'org_unit_id';\n    }\n    if (groupBy.payer_tenant_id) {\n        return 'payer_tenant_id';\n    }\n    if (groupBy.product_service) {\n        return 'product_service';\n    }\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.region) {\n        return 'region';\n    }\n    if (groupBy.resource_location) {\n        return 'resource_location';\n    }\n    if (groupBy.service) {\n        return 'service';\n    }\n    if (groupBy.service_name) {\n        return 'service_name';\n    }\n    if (groupBy.subscription_guid) {\n        return 'subscription_guid';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    chartContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n        paddingRight: global_spacer_lg.value,\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    chartContent: {\n        paddingTop: global_spacer_lg.value,\n    },\n    explorer: {\n        minHeight: '100%',\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    tableContent: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    toolbarContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import _orderBy from \"lodash/orderBy\";\nimport _keys from \"lodash/keys\";\nimport _assign from \"lodash/assign\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Helpers, Scale, Wrapper } from \"victory-core\";\nimport isEqual from \"react-fast-compare\";\nvar fallbackProps = {\n  width: 450,\n  height: 300,\n  padding: 50\n}; // Assumes data in `datasets` is sorted by `Data.getData`.\n\nfunction fillData(props, datasets) {\n  var fillInMissingData = props.fillInMissingData;\n  var xMap = datasets.reduce(function (prev, dataset) {\n    dataset.forEach(function (datum) {\n      prev[datum._x instanceof Date ? datum._x.getTime() : datum._x] = true;\n    });\n    return prev;\n  }, {});\n\n  var xKeys = _keys(xMap).map(function (k) {\n    return Number(k);\n  });\n\n  var xArr = _orderBy(xKeys);\n\n  return datasets.map(function (dataset) {\n    var indexOffset = 0;\n    var isDate = dataset[0] && dataset[0]._x instanceof Date;\n    var filledInData = xArr.map(function (x, index) {\n      x = Number(x);\n      var datum = dataset[index - indexOffset];\n\n      if (datum) {\n        var x1 = isDate ? datum._x.getTime() : datum._x;\n\n        if (x1 === x) {\n          return datum;\n        }\n\n        indexOffset++;\n\n        var _y = fillInMissingData ? 0 : null;\n\n        x = isDate ? new Date(x) : x;\n        return {\n          x: x,\n          y: _y,\n          _x: x,\n          _y: _y\n        };\n      }\n\n      var y = fillInMissingData ? 0 : null;\n      x = isDate ? new Date(x) : x;\n      return {\n        x: x,\n        y: y,\n        _x: x,\n        _y: y\n      };\n    });\n    return filledInData;\n  });\n}\n\nfunction getY0(datum, index, datasets) {\n  if (datum.y0) {\n    return datum.y0;\n  }\n\n  var y = datum._y;\n  var group = datum._group;\n  var firstDatasetBaseline = datasets[0].map(function (d) {\n    return d.y0;\n  });\n  var previousDatasets = datasets.slice(0, index);\n  var previousPoints = previousDatasets.reduce(function (prev, dataset) {\n    return prev.concat(dataset.filter(function (previousDatum) {\n      return datum._x instanceof Date ? previousDatum._x.getTime() === datum._x.getTime() : previousDatum._x === datum._x;\n    }).map(function (previousDatum) {\n      return previousDatum._y || 0;\n    }));\n  }, []);\n  var y0 = previousPoints.length && previousPoints.reduce(function (memo, value) {\n    var sameSign = y < 0 && value < 0 || y >= 0 && value >= 0;\n    return sameSign ? Number(value) + memo : memo;\n  }, firstDatasetBaseline[group] || 0);\n  return previousPoints.some(function (point) {\n    return point instanceof Date;\n  }) ? new Date(y0) : y0;\n}\n/* eslint-disable no-nested-ternary */\n\n\nfunction addLayoutData(props, datasets, index) {\n  var xOffset = props.xOffset || 0;\n  return datasets[index].map(function (datum) {\n    var yOffset = getY0(datum, index, datasets) || 0;\n    return _assign({}, datum, {\n      _y0: !(datum._y instanceof Date) ? yOffset : yOffset ? new Date(yOffset) : datum._y,\n      _y1: datum._y === null ? null : datum._y instanceof Date ? new Date(Number(datum._y) + Number(yOffset)) : datum._y + yOffset,\n      _x1: datum._x === null ? null : datum._x instanceof Date ? new Date(Number(datum._x) + Number(xOffset)) : datum._x + xOffset\n    });\n  });\n}\n/* eslint-enable no-nested-ternary */\n\n\nfunction stackData(props, childComponents) {\n  var dataFromChildren = Wrapper.getDataFromChildren(props, childComponents);\n  var filterNullChildData = dataFromChildren.map(function (dataset) {\n    return dataset.filter(function (datum) {\n      return datum._x !== null && datum._y !== null;\n    });\n  });\n  var datasets = fillData(props, filterNullChildData);\n  return datasets.map(function (d, i) {\n    return addLayoutData(props, datasets, i);\n  });\n}\n\nexport function getCalculatedProps(props, childComponents) {\n  childComponents = childComponents || React.Children.toArray(props.children);\n  var role = \"stack\";\n  props = Helpers.modifyProps(props, fallbackProps, role);\n  var style = Wrapper.getStyle(props.theme, props.style, role);\n  var categories = props.categories || Wrapper.getCategories(props, childComponents);\n  var datasets = props.datasets || stackData(props, childComponents);\n  var children = childComponents.map(function (c, i) {\n    return /*#__PURE__*/React.cloneElement(c, {\n      data: datasets[i]\n    });\n  });\n  var domain = {\n    x: Wrapper.getDomain(_assign({}, props, {\n      categories: categories\n    }), \"x\", children),\n    y: Wrapper.getDomain(_assign({}, props, {\n      categories: categories\n    }), \"y\", children)\n  };\n  var range = props.range || {\n    x: Helpers.getRange(props, \"x\"),\n    y: Helpers.getRange(props, \"y\")\n  };\n  var baseScale = {\n    x: Scale.getScaleFromProps(props, \"x\") || Wrapper.getScale(props, \"x\"),\n    y: Scale.getScaleFromProps(props, \"y\") || Wrapper.getScale(props, \"y\")\n  };\n  var scale = {\n    x: baseScale.x.domain(domain.x).range(props.horizontal ? range.y : range.x),\n    y: baseScale.y.domain(domain.y).range(props.horizontal ? range.x : range.y)\n  };\n  var _props = props,\n      colorScale = _props.colorScale,\n      horizontal = _props.horizontal;\n  return {\n    datasets: datasets,\n    categories: categories,\n    range: range,\n    domain: domain,\n    horizontal: horizontal,\n    scale: scale,\n    style: style,\n    colorScale: colorScale,\n    role: role\n  };\n} // We need to remove sharedEvents in order to memoize the calculated data\n// With shared events, the props change on every event, and every value is re-calculated\n\nvar withoutSharedEvents = function (props) {\n  var children = props.children;\n  var modifiedChildren = React.Children.toArray(children).map(function (_child) {\n    var child = _child;\n    return _objectSpread(_objectSpread({}, child), {}, {\n      props: Helpers.omit(child.props, [\"sharedEvents\"])\n    });\n  });\n  props.children = modifiedChildren;\n  return props;\n};\n\nexport function useMemoizedProps(initialProps) {\n  var modifiedProps = withoutSharedEvents(initialProps);\n\n  var _React$useState = React.useState(modifiedProps),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      props = _React$useState2[0],\n      setProps = _React$useState2[1]; // React.memo uses shallow equality to compare objects. This way props\n  // will only be re-calculated when they change.\n\n\n  React.useEffect(function () {\n    if (!isEqual(modifiedProps, props)) {\n      setProps(modifiedProps);\n    }\n  }, [props, setProps, modifiedProps]);\n  return React.useMemo(function () {\n    return getCalculatedProps(props, props.children);\n  }, [props]);\n}\n\nfunction getLabels(props, datasets, index) {\n  if (!props.labels) {\n    return undefined;\n  }\n\n  return datasets.length === index + 1 ? props.labels : undefined;\n}\n\nexport function getChildProps(props, calculatedProps) {\n  var categories = calculatedProps.categories,\n      domain = calculatedProps.domain,\n      range = calculatedProps.range,\n      scale = calculatedProps.scale,\n      horizontal = calculatedProps.horizontal;\n  return {\n    height: props.height,\n    width: props.width,\n    padding: Helpers.getPadding(props),\n    standalone: false,\n    theme: props.theme,\n    categories: categories,\n    domain: domain,\n    range: range,\n    scale: scale,\n    horizontal: horizontal\n  };\n}\n\nfunction getColorScale(props, child) {\n  var role = child.type && child.type.role;\n  var colorScaleOptions = child.props.colorScale || props.colorScale;\n\n  if (role !== \"group\" && role !== \"stack\") {\n    return undefined;\n  }\n\n  return props.theme ? colorScaleOptions || props.theme.props.colorScale : colorScaleOptions;\n}\n\nexport function getChildren(props, childComponents, calculatedProps) {\n  props = Helpers.modifyProps(props, fallbackProps, \"stack\");\n  childComponents = childComponents || React.Children.toArray(props.children);\n  calculatedProps = calculatedProps || getCalculatedProps(props, childComponents);\n  var _calculatedProps = calculatedProps,\n      datasets = _calculatedProps.datasets;\n  var childProps = getChildProps(props, calculatedProps);\n  var parentName = props.name || \"stack\";\n  return childComponents.map(function (child, index) {\n    var role = child.type && child.type.role;\n    var data = datasets[index];\n    var style = Wrapper.getChildStyle(child, index, calculatedProps);\n    var labels = props.labels ? getLabels(props, datasets, index) : child.props.labels;\n    var name = child.props.name || \"\".concat(parentName, \"-\").concat(role, \"-\").concat(index);\n    return /*#__PURE__*/React.cloneElement(child, _assign({\n      key: \"\".concat(name, \"-key-\").concat(index),\n      labels: labels,\n      name: name,\n      domainPadding: child.props.domainPadding || props.domainPadding,\n      theme: props.theme,\n      labelComponent: props.labelComponent || child.props.labelComponent,\n      style: style,\n      colorScale: getColorScale(props, child),\n      data: data,\n      polar: props.polar\n    }, childProps));\n  });\n}","import _isEmpty from \"lodash/isEmpty\";\nimport _defaults from \"lodash/defaults\";\nimport _assign from \"lodash/assign\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { CommonProps, Helpers, Hooks, PropTypes as CustomPropTypes, UserProps, VictoryContainer, VictoryTheme, Wrapper } from \"victory-core\";\nimport { VictorySharedEvents } from \"victory-shared-events\";\nimport { getChildren, useMemoizedProps } from \"./helper-methods\";\nimport isEqual from \"react-fast-compare\";\nvar fallbackProps = {\n  width: 450,\n  height: 300,\n  padding: 50\n};\n\nvar VictoryStackBase = function (initialProps) {\n  // eslint-disable-next-line no-use-before-define\n  var role = VictoryStack.role;\n\n  var _Hooks$useAnimationSt = Hooks.useAnimationState(),\n      setAnimationState = _Hooks$useAnimationSt.setAnimationState,\n      getAnimationProps = _Hooks$useAnimationSt.getAnimationProps,\n      getProps = _Hooks$useAnimationSt.getProps;\n\n  var props = getProps(initialProps);\n  var modifiedProps = Helpers.modifyProps(props, fallbackProps, role);\n  var eventKey = modifiedProps.eventKey,\n      containerComponent = modifiedProps.containerComponent,\n      standalone = modifiedProps.standalone,\n      groupComponent = modifiedProps.groupComponent,\n      externalEventMutations = modifiedProps.externalEventMutations,\n      width = modifiedProps.width,\n      height = modifiedProps.height,\n      theme = modifiedProps.theme,\n      polar = modifiedProps.polar,\n      horizontal = modifiedProps.horizontal,\n      name = modifiedProps.name;\n  var childComponents = React.Children.toArray(modifiedProps.children);\n  var calculatedProps = useMemoizedProps(modifiedProps);\n  var domain = calculatedProps.domain,\n      scale = calculatedProps.scale,\n      style = calculatedProps.style;\n  var newChildren = React.useMemo(function () {\n    var children = getChildren(props, childComponents, calculatedProps);\n    var orderedChildren = children.map(function (child, index) {\n      var childProps = _assign({\n        animate: getAnimationProps(props, child, index)\n      }, child.props);\n\n      return /*#__PURE__*/React.cloneElement(child, childProps);\n    });\n    /*\n      reverse render order for children of `VictoryStack` so that higher children in the stack\n      are rendered behind lower children. This looks nicer for stacked bars with cornerRadius, and\n      areas with strokes\n    */\n\n    return orderedChildren.reverse();\n  }, [props, childComponents, calculatedProps, getAnimationProps]);\n  var containerProps = React.useMemo(function () {\n    if (standalone) {\n      return {\n        domain: domain,\n        scale: scale,\n        width: width,\n        height: height,\n        standalone: standalone,\n        theme: theme,\n        style: style.parent,\n        horizontal: horizontal,\n        polar: polar,\n        name: name\n      };\n    }\n\n    return {};\n  }, [standalone, domain, scale, width, height, theme, style, horizontal, polar, name]);\n  var userProps = React.useMemo(function () {\n    return UserProps.getSafeUserProps(initialProps);\n  }, [initialProps]);\n  var container = React.useMemo(function () {\n    if (standalone) {\n      var defaultContainerProps = _defaults({}, containerComponent.props, containerProps, userProps);\n\n      return /*#__PURE__*/React.cloneElement(containerComponent, defaultContainerProps);\n    }\n\n    return /*#__PURE__*/React.cloneElement(groupComponent, userProps);\n  }, [groupComponent, standalone, containerComponent, containerProps, userProps]);\n  var events = React.useMemo(function () {\n    return Wrapper.getAllEvents(props);\n  }, [props]);\n  var previousProps = Hooks.usePreviousProps(initialProps);\n  React.useEffect(function () {\n    // This is called before dismount to keep state in sync\n    return function () {\n      if (initialProps.animate) {\n        setAnimationState(previousProps, initialProps);\n      }\n    };\n  }, [setAnimationState, previousProps, initialProps]);\n\n  if (!_isEmpty(events)) {\n    return /*#__PURE__*/React.createElement(VictorySharedEvents, {\n      container: container,\n      eventKey: eventKey,\n      events: events,\n      externalEventMutations: externalEventMutations\n    }, newChildren);\n  }\n\n  return /*#__PURE__*/React.cloneElement(container, container.props, newChildren);\n};\n\nVictoryStackBase.propTypes = _objectSpread(_objectSpread({}, CommonProps.baseProps), {}, {\n  bins: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([CustomPropTypes.nonNegative, PropTypes.instanceOf(Date)])), CustomPropTypes.nonNegative]),\n  categories: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.shape({\n    x: PropTypes.arrayOf(PropTypes.string),\n    y: PropTypes.arrayOf(PropTypes.string)\n  })]),\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  colorScale: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.oneOf([\"grayscale\", \"qualitative\", \"heatmap\", \"warm\", \"cool\", \"red\", \"green\", \"blue\"])]),\n  fillInMissingData: PropTypes.bool,\n  horizontal: PropTypes.bool,\n  labelComponent: PropTypes.element,\n  labels: PropTypes.oneOfType([PropTypes.func, PropTypes.array]),\n  style: PropTypes.shape({\n    parent: PropTypes.object,\n    data: PropTypes.object,\n    labels: PropTypes.object\n  }),\n  xOffset: PropTypes.number\n});\nVictoryStackBase.defaultProps = {\n  containerComponent: /*#__PURE__*/React.createElement(VictoryContainer, null),\n  groupComponent: /*#__PURE__*/React.createElement(\"g\", null),\n  standalone: true,\n  theme: VictoryTheme.grayscale,\n  fillInMissingData: true\n};\nvar componentConfig = {\n  role: \"stack\",\n  expectedComponents: [\"groupComponent\", \"containerComponent\", \"labelComponent\"],\n  getChildren: getChildren\n};\nexport var VictoryStack = Object.assign( /*#__PURE__*/React.memo(VictoryStackBase, isEqual), componentConfig);\nVictoryStack.displayName = \"VictoryStack\";","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryStack } from 'victory-stack';\nimport { ChartContainer } from '../ChartContainer';\nimport { getClassName, useDefaultPatternProps, getTheme, renderChildrenWithPatterns } from '../ChartUtils';\nexport const ChartStack = (_a) => {\n    var { ariaDesc, ariaTitle, children, colorScale, containerComponent = React.createElement(ChartContainer, null), hasPatterns, patternScale, themeColor, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    themeVariant, \n    // destructure last\n    theme = getTheme(themeColor) } = _a, rest = __rest(_a, [\"ariaDesc\", \"ariaTitle\", \"children\", \"colorScale\", \"containerComponent\", \"hasPatterns\", \"patternScale\", \"themeColor\", \"themeVariant\", \"theme\"]);\n    // Clone so users can override container props\n    const container = React.cloneElement(containerComponent, Object.assign(Object.assign({ desc: ariaDesc, title: ariaTitle, theme }, containerComponent.props), { className: getClassName({ className: containerComponent.props.className }) // Override VictoryContainer class name\n     }));\n    const { defaultPatternScale } = useDefaultPatternProps({\n        colorScale,\n        hasPatterns,\n        patternScale,\n        themeColorScale: theme.stack.colorScale\n    });\n    // Note: containerComponent is required for theme\n    return (React.createElement(VictoryStack, Object.assign({ colorScale: colorScale, containerComponent: container, theme: theme }, rest), renderChildrenWithPatterns({\n        children,\n        patternScale: defaultPatternScale\n    })));\n};\nChartStack.displayName = 'ChartStack';\n// Note: VictoryStack.getChildren & VictoryStack.role must be hoisted\nhoistNonReactStatics(ChartStack, VictoryStack);\n//# sourceMappingURL=ChartStack.js.map","import { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_cyan_300 } from '@patternfly/react-tokens/dist/js/chart_color_cyan_300';\nimport { chart_color_gold_300 } from '@patternfly/react-tokens/dist/js/chart_color_gold_300';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_orange_300 } from '@patternfly/react-tokens/dist/js/chart_color_orange_300';\nimport { chart_color_purple_300 } from '@patternfly/react-tokens/dist/js/chart_color_purple_300';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    colorScale: [\n        chart_color_blue_300.value,\n        chart_color_gold_300.value,\n        chart_color_green_300.value,\n        chart_color_purple_300.value,\n        chart_color_orange_300.value,\n        chart_color_cyan_300.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n    yAxisAlt: {\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'routes/views/components/charts/common/chart.scss';\nimport { Chart, ChartAxis, ChartBar, ChartLegend, ChartLegendTooltip, ChartStack, ChartThemeColor, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { default as ChartTheme } from 'routes/views/components/charts/chartTheme';\nimport { getMaxValue } from 'routes/views/components/charts/common/chartDatum';\nimport { getChartNames, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isDataHidden, isSeriesHidden, } from 'routes/views/components/charts/common/chartUtils';\nimport { formatCurrencyAbbreviation } from 'utils/format';\nimport { noop } from 'utils/noop';\nimport { chartStyles } from './costExplorerChart.styles';\nclass CostExplorerChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            tickValues: [],\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { top1stData, top2ndData, top3rdData, top4thData, top5thData, top6thData } = this.props;\n            const series = [];\n            if (top1stData && top1stData.length) {\n                const name = this.getTruncatedString(top1stData[0].name);\n                series.push({\n                    childName: 'top1stData',\n                    data: this.initDatumChildName(top1stData, 'top1stData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[0],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[0],\n                        },\n                    },\n                });\n            }\n            if (top2ndData && top2ndData.length) {\n                const name = this.getTruncatedString(top2ndData[0].name);\n                series.push({\n                    childName: 'top2ndData',\n                    data: this.initDatumChildName(top2ndData, 'top2ndData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[1],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[1],\n                        },\n                    },\n                });\n            }\n            if (top3rdData && top3rdData.length) {\n                const name = this.getTruncatedString(top3rdData[0].name);\n                series.push({\n                    childName: 'top3rdData',\n                    data: this.initDatumChildName(top3rdData, 'top3rdData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[2],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[2],\n                        },\n                    },\n                });\n            }\n            if (top4thData && top4thData.length) {\n                const name = this.getTruncatedString(top4thData[0].name);\n                series.push({\n                    childName: 'top4thData',\n                    data: this.initDatumChildName(top4thData, 'top4thData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[3],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[3],\n                        },\n                    },\n                });\n            }\n            if (top5thData && top5thData.length) {\n                const name = this.getTruncatedString(top5thData[0].name);\n                series.push({\n                    childName: 'top5thData',\n                    data: this.initDatumChildName(top5thData, 'top5thData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[4],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[4],\n                        },\n                    },\n                });\n            }\n            if (top6thData && top6thData.length) {\n                const name = this.getTruncatedString(top6thData[0].name);\n                series.push({\n                    childName: 'top6thData',\n                    data: this.initDatumChildName(top6thData, 'top6thData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[5],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[5],\n                        },\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            const units = this.getUnits(series);\n            this.setState({ cursorVoronoiContainer, series, tickValues: this.getTickValues(), units });\n        };\n        // Adds a child name to help identify hidden data series\n        this.initDatumChildName = (data, childName) => {\n            data.map(datum => (datum.childName = childName));\n            return data;\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (width > 675 && width < 1250) {\n                    adjustedContainerHeight += 25;\n                }\n                else if (width > 400 && width < 650) {\n                    adjustedContainerHeight += 50;\n                }\n                else if (width <= 400) {\n                    adjustedContainerHeight += 150;\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        // If bar width exceeds max and domainPadding is true, extra width is returned to help center bars horizontally\n        this.getBarWidth = (domainPadding = false) => {\n            const { hiddenSeries, series, width } = this.state;\n            const maxWidth = 200;\n            let maxValue = -1;\n            if (series) {\n                series.forEach((s, index) => {\n                    if (!isSeriesHidden(hiddenSeries, index) && s.data && s.data.length !== 0) {\n                        if (s.data.length > maxValue) {\n                            maxValue = s.data.length;\n                        }\n                    }\n                });\n            }\n            // Divide available width into equal sections\n            const sections = maxValue * 2 + 1;\n            const sectionWidth = maxValue > 0 ? width / sections : 0;\n            if (domainPadding) {\n                // Add any extra bar width for domain padding\n                const extraWidth = sectionWidth > maxWidth ? (sectionWidth - maxWidth) * maxValue : 0;\n                return (sectionWidth + extraWidth / 2) * 2;\n            }\n            return sectionWidth > maxWidth ? maxWidth : sectionWidth;\n        };\n        this.getChart = (series, index, barWidth) => {\n            const { hiddenSeries } = this.state;\n            const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n            return (React.createElement(ChartBar, { barWidth: barWidth, data: data, key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatter, formatOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatter, formatOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        // Returns domain only if max y values are zero\n        this.getDomain = (series, hiddenSeries) => {\n            let maxValue = -1;\n            let domain;\n            if (series) {\n                series.forEach((s, index) => {\n                    if (!isSeriesHidden(hiddenSeries, index) && s.data && s.data.length !== 0) {\n                        const max = getMaxValue(s.data);\n                        maxValue = Math.max(maxValue, max);\n                    }\n                });\n            }\n            if (maxValue <= 0) {\n                domain = { y: [0, 100] };\n            }\n            return domain;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const { name = '' } = this.props;\n            const { hiddenSeries, series } = this.state;\n            const result = getInteractiveLegendEvents({\n                chartNames: getChartNames(series),\n                isDataHidden: data => isDataHidden(series, hiddenSeries, data),\n                isHidden: index => isSeriesHidden(hiddenSeries, index),\n                legendName: `${name}-legend`,\n                onLegendClick: props => this.handleLegendClick(props.index),\n            });\n            return result;\n        };\n        this.getLegend = () => {\n            const { name = '' } = this.props;\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, name: `${name}-legend`, responsive: false }));\n        };\n        // This ensures we show every 3rd tick value, including the first and last value\n        //\n        // Note: We're not using Victory's tickCount because it won't always include the last tick value.\n        this.getTickValues = () => {\n            const { top1stData, top2ndData, top3rdData, top4thData, top5thData, top6thData } = this.props;\n            // Find the datum with the greatest number of values\n            const allDatums = [top1stData, top2ndData, top3rdData, top4thData, top5thData, top6thData];\n            let datum;\n            allDatums.map(val => {\n                if (!datum || datum.length < val.length) {\n                    datum = val;\n                }\n            });\n            const values = [];\n            datum.map(val => {\n                values.push(val.x);\n            });\n            // Prune tick values\n            const tickValues = [];\n            const modVal = values.length < 6 ? 2 : 3;\n            for (let i = 0; i < values.length; i++) {\n                if (i % modVal === 0 && i + 2 < values.length) {\n                    tickValues.push(values[i]);\n                }\n                else if (values.length < 3 && i + 1 < values.length) {\n                    tickValues.push(values[i]);\n                }\n            }\n            tickValues.push(values[values.length - 1]);\n            return tickValues;\n        };\n        this.getTruncatedString = (str) => {\n            const maxChars = 20;\n            return str.length > maxChars ? str.substring(0, maxChars - 1) + '...' : str;\n        };\n        this.getTickValue = (t) => {\n            const { units } = this.state;\n            return formatCurrencyAbbreviation(t, units);\n        };\n        this.getUnits = (series) => {\n            if (series) {\n                for (const s of series) {\n                    for (const datum of s.data) {\n                        if (datum.units) {\n                            return datum.units;\n                        }\n                    }\n                }\n            }\n            return 'USD';\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.top1stData !== this.props.top1stData ||\n            prevProps.top2ndData !== this.props.top2ndData ||\n            prevProps.top3rdData !== this.props.top3rdData ||\n            prevProps.top4thData !== this.props.top4thData ||\n            prevProps.top5thData !== this.props.top5thData ||\n            prevProps.top6thData !== this.props.top6thData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    render() {\n        const { height, intl, name, padding = {\n            bottom: 50,\n            left: 40,\n            right: 8,\n            top: 8,\n        }, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, tickValues, width } = this.state;\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => intl.formatMessage(messages.chartDayOfTheMonth, { day: datum.x }) })),\n            })\n            : undefined;\n        const barWidth = this.getBarWidth();\n        // Note: For tooltip values to match properly, chart groups must be rendered in the order given as legend data\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n            React.createElement(\"div\", { style: { height, width } },\n                React.createElement(Chart, { ariaTitle: intl.formatMessage(messages.explorerChartAriaTitle), containerComponent: container, domain: this.getDomain(series, hiddenSeries), domainPadding: { x: this.getBarWidth(true) }, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", name: name, padding: padding, theme: ChartTheme, themeColor: ChartThemeColor.multiOrdered, width: width },\n                    series && series.length > 0 && (React.createElement(ChartStack, null, series.map((s, index) => this.getChart(s, index, barWidth)))),\n                    React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: tickValues, fixLabelOverlap: true }),\n                    React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis, tickFormat: this.getTickValue })))));\n    }\n}\nconst CostExplorerChart = injectIntl(CostExplorerChartBase);\nexport default CostExplorerChart;\n","import global_spacer_2xl from '@patternfly/react-tokens/dist/js/global_spacer_2xl';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    chartHeight: 300,\n    chartContainerHeight: 300,\n};\nexport const styles = {\n    chartContainer: {\n        marginLeft: global_spacer_2xl.value,\n    },\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n    costChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    titleContainer: {\n        marginLeft: global_spacer_lg.value,\n    },\n    trendChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    usageChart: {\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import { OrgPathsType } from 'api/orgs/org';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport { ComputedReportItemType, ComputedReportItemValueType } from 'routes/views/components/charts/common/chartDatum';\nimport { hasCloudProvider } from 'routes/views/utils/providers';\nimport { hasAwsAccess, hasAzureAccess, hasGcpAccess, hasIbmAccess, isAwsAvailable, isAzureAvailable, isGcpAvailable, isIbmAvailable, isOciAvailable, isOcpAvailable, isRhelAvailable, } from 'utils/userAccess';\n// eslint-disable-next-line no-shadow\nexport var PerspectiveType;\n(function (PerspectiveType) {\n    PerspectiveType[\"aws\"] = \"aws\";\n    PerspectiveType[\"awsOcp\"] = \"aws_ocp\";\n    PerspectiveType[\"azure\"] = \"azure\";\n    PerspectiveType[\"azureOcp\"] = \"azure_ocp\";\n    PerspectiveType[\"gcp\"] = \"gcp\";\n    PerspectiveType[\"gcpOcp\"] = \"gcp_ocp\";\n    PerspectiveType[\"ibm\"] = \"ibm\";\n    PerspectiveType[\"ibmOcp\"] = \"ibm_ocp\";\n    PerspectiveType[\"oci\"] = \"oci\";\n    PerspectiveType[\"ocp\"] = \"ocp\";\n    PerspectiveType[\"ocpCloud\"] = \"ocp_cloud\";\n    PerspectiveType[\"rhel\"] = \"rhel\";\n})(PerspectiveType || (PerspectiveType = {}));\nexport const baseQuery = {\n    filter: {\n        limit: 10,\n        offset: 0,\n    },\n    exclude: {},\n    filter_by: {},\n    order_by: {\n        cost: 'desc',\n    },\n};\nexport const dateRangeOptions = [\n    { label: messages.explorerDateRange, value: 'current_month_to_date' },\n    { label: messages.explorerDateRange, value: 'previous_month' },\n    { label: messages.explorerDateRange, value: 'previous_month_to_date' },\n    { label: messages.explorerDateRange, value: 'last_thirty_days' },\n    { label: messages.explorerDateRange, value: 'last_sixty_days' },\n    { label: messages.explorerDateRange, value: 'last_ninety_days' },\n    { label: messages.explorerDateRange, value: 'custom' },\n];\nexport const groupByAwsOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByAzureOptions = [\n    { label: 'subscription_guid', value: 'subscription_guid' },\n    { label: 'service_name', value: 'service_name' },\n    { label: 'resource_location', value: 'resource_location' },\n];\nexport const groupByGcpOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'gcp_project', value: 'gcp_project' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByGcpOcpOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'gcp_project', value: 'gcp_project' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByIbmOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'project', value: 'project' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByOciOptions = [\n    { label: 'payer_tenant_id', value: 'payer_tenant_id' },\n    { label: 'product_service', value: 'product_service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByOcpOptions = [\n    { label: 'cluster', value: 'cluster' },\n    { label: 'node', value: 'node' },\n    { label: 'project', value: 'project' },\n];\nexport const groupByRhelOptions = [\n    { label: 'cluster', value: 'cluster' },\n    { label: 'node', value: 'node' },\n    { label: 'project', value: 'project' },\n];\nexport const getComputedReportItemType = (perspective) => {\n    let result;\n    switch (perspective) {\n        // Removed \"OpenShift supplementary & usage\" perspectives -- see https://issues.redhat.com/browse/COST-1722\n        default:\n            result = ComputedReportItemType.cost;\n            break;\n    }\n    return result;\n};\nexport const getComputedReportItemValueType = (perspective) => {\n    let result;\n    switch (perspective) {\n        // Removed \"OpenShift usage\" perspective -- see https://issues.redhat.com/browse/COST-1722\n        default:\n            result = ComputedReportItemValueType.total;\n            break;\n    }\n    return result;\n};\nexport const getPerspectiveDefault = ({ awsProviders, azureProviders, ociProviders, gcpProviders, ibmProviders, ocpProviders, queryFromRoute, rhelProviders, userAccess, }) => {\n    const perspective = queryFromRoute.perspective;\n    // Upon page refresh, perspective param takes precedence\n    switch (perspective) {\n        case PerspectiveType.aws:\n        case PerspectiveType.awsOcp:\n        case PerspectiveType.azure:\n        case PerspectiveType.azureOcp:\n        case PerspectiveType.gcp:\n        case PerspectiveType.gcpOcp:\n        case PerspectiveType.ibm:\n        case PerspectiveType.ibmOcp:\n        case PerspectiveType.oci:\n        case PerspectiveType.ocpCloud:\n        case PerspectiveType.rhel:\n            return perspective;\n    }\n    if (isOcpAvailable(userAccess, ocpProviders)) {\n        return PerspectiveType.ocp;\n    }\n    if (isRhelAvailable(userAccess, rhelProviders)) {\n        return PerspectiveType.rhel;\n    }\n    const hasAwsCloud = hasAwsAccess(userAccess) && hasCloudProvider(awsProviders, ocpProviders);\n    const hasAzureCloud = hasAzureAccess(userAccess) && hasCloudProvider(azureProviders, ocpProviders);\n    const hasGcpCloud = hasGcpAccess(userAccess) && hasCloudProvider(gcpProviders, ocpProviders);\n    const hasIbmCloud = hasIbmAccess(userAccess) && hasCloudProvider(ibmProviders, ocpProviders);\n    if (hasAwsCloud || hasAzureCloud || hasGcpCloud || hasIbmCloud) {\n        return PerspectiveType.ocpCloud;\n    }\n    if (isAwsAvailable(userAccess, awsProviders)) {\n        return PerspectiveType.aws;\n    }\n    if (isAzureAvailable(userAccess, azureProviders)) {\n        return PerspectiveType.azure;\n    }\n    if (isGcpAvailable(userAccess, gcpProviders)) {\n        return PerspectiveType.gcp;\n    }\n    if (isIbmAvailable(userAccess, ibmProviders)) {\n        return PerspectiveType.ibm;\n    }\n    if (isOciAvailable(userAccess, ociProviders)) {\n        return PerspectiveType.oci;\n    }\n    return undefined;\n};\nexport const getGroupByDefault = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n        case PerspectiveType.awsOcp:\n        case PerspectiveType.gcp:\n        case PerspectiveType.gcpOcp:\n        case PerspectiveType.ibm:\n            result = 'account';\n            break;\n        case PerspectiveType.azure:\n        case PerspectiveType.azureOcp:\n            result = 'subscription_guid';\n            break;\n        case PerspectiveType.oci:\n            result = 'payer_tenant_id';\n            break;\n        case PerspectiveType.ocp:\n        case PerspectiveType.ocpCloud:\n        case PerspectiveType.rhel:\n            result = 'project';\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getGroupByOptions = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n        case PerspectiveType.awsOcp:\n            result = groupByAwsOptions;\n            break;\n        case PerspectiveType.azure:\n        case PerspectiveType.azureOcp:\n            result = groupByAzureOptions;\n            break;\n        case PerspectiveType.gcp:\n            result = groupByGcpOptions;\n            break;\n        case PerspectiveType.gcpOcp:\n            result = groupByGcpOcpOptions;\n            break;\n        case PerspectiveType.ibm:\n            result = groupByIbmOptions;\n            break;\n        case PerspectiveType.oci:\n            result = groupByOciOptions;\n            break;\n        case PerspectiveType.ocp:\n        case PerspectiveType.ocpCloud:\n            result = groupByOcpOptions;\n            break;\n        case PerspectiveType.rhel:\n            result = groupByRhelOptions;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getOrgReportPathsType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n            result = OrgPathsType.aws;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getReportType = (perspective) => {\n    let result;\n    switch (perspective) {\n        default:\n            result = ReportType.cost;\n            break;\n    }\n    return result;\n};\nexport const getReportPathsType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n            result = ReportPathsType.aws;\n            break;\n        case PerspectiveType.awsOcp:\n            result = ReportPathsType.awsOcp;\n            break;\n        case PerspectiveType.azure:\n            result = ReportPathsType.azure;\n            break;\n        case PerspectiveType.azureOcp:\n            result = ReportPathsType.azureOcp;\n            break;\n        case PerspectiveType.gcp:\n            result = ReportPathsType.gcp;\n            break;\n        case PerspectiveType.gcpOcp:\n            result = ReportPathsType.gcpOcp;\n            break;\n        case PerspectiveType.ibm:\n            result = ReportPathsType.ibm;\n            break;\n        case PerspectiveType.oci:\n            result = ReportPathsType.oci;\n            break;\n        case PerspectiveType.ocp:\n            result = ReportPathsType.ocp;\n            break;\n        case PerspectiveType.ocpCloud:\n            result = ReportPathsType.ocpCloud;\n            break;\n        case PerspectiveType.rhel:\n            result = ReportPathsType.rhel;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getResourcePathsType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n            return ResourcePathsType.aws;\n            break;\n        case PerspectiveType.awsOcp:\n            return ResourcePathsType.awsOcp;\n            break;\n        case PerspectiveType.azure:\n            return ResourcePathsType.azure;\n            break;\n        case PerspectiveType.azureOcp:\n            return ResourcePathsType.azureOcp;\n            break;\n        case PerspectiveType.gcp:\n            return ResourcePathsType.gcp;\n        case PerspectiveType.gcpOcp:\n            return ResourcePathsType.gcpOcp;\n        case PerspectiveType.ibm:\n            return ResourcePathsType.ibm;\n            break;\n        case PerspectiveType.oci:\n            return ResourcePathsType.oci;\n            break;\n        case PerspectiveType.ocp:\n            return ResourcePathsType.ocp;\n            break;\n        case PerspectiveType.ocpCloud:\n            return ResourcePathsType.ocpCloud;\n            break;\n        case PerspectiveType.rhel:\n            return ResourcePathsType.rhel;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getTagReportPathsType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n            return TagPathsType.aws;\n            break;\n        case PerspectiveType.awsOcp:\n            return TagPathsType.awsOcp;\n            break;\n        case PerspectiveType.azure:\n            return TagPathsType.azure;\n            break;\n        case PerspectiveType.azureOcp:\n            return TagPathsType.azureOcp;\n            break;\n        case PerspectiveType.gcp:\n            return TagPathsType.gcp;\n            break;\n        case PerspectiveType.gcpOcp:\n            return TagPathsType.gcpOcp;\n            break;\n        case PerspectiveType.ibm:\n            return TagPathsType.ibm;\n            break;\n        case PerspectiveType.oci:\n            return TagPathsType.oci;\n            break;\n        case PerspectiveType.ocp:\n            return TagPathsType.ocp;\n            break;\n        case PerspectiveType.ocpCloud:\n            return TagPathsType.ocpCloud;\n            break;\n        case PerspectiveType.rhel:\n            return TagPathsType.rhel;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\n","import { Skeleton, Title } from '@patternfly/react-core';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { format } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ComputedReportItemType, ComputedReportItemValueType, isFloat, isInt, } from 'routes/views/components/charts/common/chartDatum';\nimport { CostExplorerChart } from 'routes/views/components/charts/costExplorerChart';\nimport { getDateRangeFromQuery } from 'routes/views/utils/dateRange';\nimport { getGroupByOrgValue, getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedExplorerReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { formatUnits } from 'utils/format';\nimport { withRouter } from 'utils/router';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { chartStyles, styles } from './explorerChart.styles';\nimport { baseQuery, getGroupByDefault, getReportPathsType, getReportType } from './explorerUtils';\nclass ExplorerChartBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.createReportDatum = (value, computedItem, reportItem = 'cost', reportItemValue = 'total') => {\n            const { intl } = this.props;\n            const computedItemDate = new Date(computedItem.date + 'T00:00:00');\n            const xVal = intl.formatDate(computedItemDate, {\n                day: 'numeric',\n                month: 'short',\n            });\n            const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n            return Object.assign(Object.assign({ x: xVal, y: value === null ? null : yVal }, (value === null && { _y: 0 })), { date: computedItem.date, key: computedItem.id, name: computedItem.label ? computedItem.label : computedItem.id, units: computedItem[reportItem]\n                    ? computedItem[reportItem][reportItemValue]\n                        ? computedItem[reportItem][reportItemValue].units // cost, infrastructure, supplementary\n                        : computedItem[reportItem].units // capacity, limit, request, usage\n                    : undefined });\n        };\n        this.fetchReport = () => {\n            const { fetchReport, perspective, reportQueryString } = this.props;\n            if (perspective) {\n                const reportPathsType = getReportPathsType(perspective);\n                const reportType = getReportType(perspective);\n                fetchReport(reportPathsType, reportType, reportQueryString);\n            }\n        };\n        this.getChartDatums = (computedItems) => {\n            const { computedReportItemType = ComputedReportItemType.cost, computedReportItemValueType = ComputedReportItemValueType.total, } = this.props;\n            const reportItem = computedReportItemType;\n            const reportItemValue = computedReportItemValueType;\n            const chartDatums = [];\n            computedItems.map(computedItem => {\n                const datums = [];\n                if (computedItem instanceof Map) {\n                    const items = Array.from(computedItem.values());\n                    items.map(i => {\n                        const val = i[reportItem][reportItemValue] ? i[reportItem][reportItemValue].value : i[reportItem].value;\n                        datums.push(this.createReportDatum(val, i, reportItem, reportItemValue));\n                    });\n                }\n                chartDatums.push(datums);\n            });\n            return this.padChartDatums(chartDatums);\n        };\n        this.getComputedItems = () => {\n            const { report } = this.props;\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: this.getGroupBy(),\n                isDateMap: true,\n            });\n        };\n        this.getGroupBy = () => {\n            const { query } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByOrg = getGroupByOrgValue(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            return groupByTagKey ? groupByTagKey : groupByOrg ? 'org_entities' : groupById;\n        };\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, width: skeletonWidth.xs })));\n        };\n        // This pads chart datums with null datum objects, representing missing data at the beginning and end of the\n        // data series. The remaining data is left as is to allow for extrapolation. This allows us to display a \"no data\"\n        // message in the tooltip, which helps distinguish between zero values and when there is no data available.\n        this.padChartDatums = (items) => {\n            const { end_date, start_date } = this.props;\n            const result = [];\n            items.map(datums => {\n                const key = datums[0].key;\n                const label = datums[0].name;\n                const newItems = [];\n                for (let padDate = new Date(start_date + 'T00:00:00'); padDate <= new Date(end_date + 'T00:00:00'); padDate.setDate(padDate.getDate() + 1)) {\n                    const id = format(padDate, 'yyyy-MM-dd');\n                    const chartDatum = datums.find(val => val.date === id);\n                    if (chartDatum) {\n                        newItems.push(chartDatum);\n                    }\n                    else {\n                        const date = format(padDate, 'yyyy-MM-dd');\n                        newItems.push(this.createReportDatum(null, { date, id: key, label }, 'cost', null));\n                    }\n                }\n                result.push(newItems);\n            });\n            return result;\n        };\n    }\n    componentDidMount() {\n        this.fetchReport();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, reportError, reportQueryString } = this.props;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        if (newQuery || noReport) {\n            this.fetchReport();\n        }\n    }\n    render() {\n        const { perspective, reportFetchStatus, intl } = this.props;\n        const datums = this.getChartDatums(this.getComputedItems());\n        // Todo: get title from perspective menu\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { style: styles.titleContainer },\n                React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, intl.formatMessage(messages.explorerChartTitle, { value: perspective }))),\n            React.createElement(\"div\", { style: styles.chartContainer },\n                React.createElement(\"div\", { style: styles.costChart }, reportFetchStatus === FetchStatus.inProgress ? (this.getSkeleton()) : (React.createElement(CostExplorerChart, { adjustContainerHeight: true, containerHeight: chartStyles.chartContainerHeight, formatOptions: {}, formatter: formatUnits, height: chartStyles.chartHeight, top1stData: datums.length > 0 ? datums[0] : [], top2ndData: datums.length > 1 ? datums[1] : [], top3rdData: datums.length > 2 ? datums[2] : [], top4thData: datums.length > 3 ? datums[3] : [], top5thData: datums.length > 4 ? datums[4] : [], top6thData: datums.length > 5 ? datums[5] : [] }))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { costType, currency, perspective, router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const { end_date, start_date } = getDateRangeFromQuery(queryFromRoute);\n    // Ensure group_by key is not undefined\n    let groupBy = queryFromRoute.group_by;\n    if (!groupBy && perspective) {\n        groupBy = { [getGroupByDefault(perspective)]: '*' };\n    }\n    const query = {\n        filter: Object.assign(Object.assign(Object.assign({}, baseQuery.filter), queryFromRoute.filter), { limit: 5, offset: undefined }),\n        filter_by: queryFromRoute.filter_by || baseQuery.filter_by,\n        exclude: queryFromRoute.exclude || baseQuery.exclude,\n        group_by: groupBy,\n        cost_type: costType,\n        currency,\n        start_date,\n        end_date,\n    };\n    const reportPathsType = getReportPathsType(perspective);\n    const reportType = getReportType(perspective);\n    const reportQueryString = getQuery(query);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    return {\n        end_date,\n        perspective,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n        start_date,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst ExplorerChartConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerChartBase);\nconst ExplorerChart = injectIntl(withRouter(ExplorerChartConnect));\nexport { ExplorerChart };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    toContainer: {\n        marginLeft: global_spacer_md.var,\n        marginRight: global_spacer_md.var,\n    },\n};\n","import { DatePicker } from '@patternfly/react-core';\nimport { parseQuery } from 'api/queries/query';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { DateRangeType, getDateRangeFromQuery, getDateRangeTypeDefault } from 'routes/views/utils/dateRange';\nimport { formatDate, getLast90DaysDate, getToday } from 'utils/dates';\nimport { withRouter } from 'utils/router';\nimport { styles } from './explorerDatePicker.styles';\nconst MAX_DAYS = 65; // Max date range allowed for cost API\nclass ExplorerDatePickerBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n        // TBD\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.startDateRef = React.createRef();\n        this.endDateRef = React.createRef();\n        this.getStartDatePicker = () => {\n            const { intl } = this.props;\n            const { startDate } = this.state;\n            const { start_date, end_date } = getLast90DaysDate(false);\n            const rangeValidator = (date) => {\n                if (date < start_date) {\n                    return intl.formatMessage(messages.datePickerBeforeError);\n                }\n                else if (date > end_date) {\n                    return intl.formatMessage(messages.datePickerAfterError);\n                }\n                return '';\n            };\n            return (React.createElement(DatePicker, { \"aria-label\": intl.formatMessage(messages.datePickerStartDateAriaLabel), onChange: this.handleStartDateOnChange, placeholder: intl.formatMessage(messages.start), ref: this.startDateRef, validators: [rangeValidator], value: formatDate(startDate) }));\n        };\n        this.getEndDatePicker = () => {\n            const { intl } = this.props;\n            const { endDate, startDate } = this.state;\n            const end_date = this.getMaxEndDate();\n            const rangeValidator = (date) => {\n                if (date < startDate) {\n                    return intl.formatMessage(messages.datePickerBeforeError);\n                }\n                else if (date > end_date) {\n                    return intl.formatMessage(messages.datePickerAfterError);\n                }\n                return '';\n            };\n            return (React.createElement(DatePicker, { \"aria-label\": intl.formatMessage(messages.datePickerEndDateAriaLabel), isDisabled: !startDate, onChange: this.handleEndDateOnChange, placeholder: intl.formatMessage(messages.end), rangeStart: startDate, ref: this.endDateRef, validators: [rangeValidator], value: formatDate(endDate) }));\n        };\n        this.getMaxEndDate = () => {\n            const { startDate } = this.state;\n            const today = getToday();\n            const end_date = startDate ? new Date(startDate.getTime()) : today;\n            end_date.setDate(end_date.getDate() + MAX_DAYS - 1); // 65 days including start date\n            if (end_date > today) {\n                end_date.setTime(today.getTime());\n            }\n            return end_date;\n        };\n        this.isEndDateValid = (startDate, endDate) => {\n            const minDate = startDate;\n            const maxDate = startDate ? new Date(startDate.getTime()) : undefined;\n            if (maxDate) {\n                maxDate.setDate(maxDate.getDate() + MAX_DAYS - 1); // 65 days including start date\n            }\n            return endDate >= minDate && endDate <= maxDate;\n        };\n        this.isStartDateValid = startDate => {\n            const maxDate = getToday();\n            const { start_date: minDate } = getLast90DaysDate(false);\n            return startDate >= minDate && startDate <= maxDate;\n        };\n        this.handleEndDateOnChange = (evt, value, date) => {\n            const { onSelected } = this.props;\n            const { startDate } = this.state;\n            if (date && this.isEndDateValid(startDate, date)) {\n                this.setState({ endDate: date }, () => {\n                    if (onSelected) {\n                        onSelected(startDate, date);\n                    }\n                });\n            }\n        };\n        this.handleStartDateOnChange = (evt, value, date) => {\n            if (date && this.isStartDateValid(date)) {\n                this.setState({ startDate: date }, () => {\n                    if (this.endDateRef && this.endDateRef.current) {\n                        this.endDateRef.current.setCalendarOpen(true);\n                    }\n                });\n            }\n        };\n    }\n    componentDidMount() {\n        const { router } = this.props;\n        const queryFromRoute = parseQuery(router.location.search);\n        const dateRangeType = getDateRangeTypeDefault(queryFromRoute);\n        const { end_date, start_date } = getDateRangeFromQuery(queryFromRoute);\n        if (this.startDateRef && this.startDateRef.current) {\n            this.startDateRef.current.setCalendarOpen(dateRangeType !== DateRangeType.custom);\n        }\n        if (dateRangeType === DateRangeType.custom) {\n            this.setState({\n                startDate: new Date(start_date + 'T00:00:00'),\n                endDate: new Date(end_date + 'T00:00:00'),\n            });\n        }\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { endDate, startDate } = this.state;\n        if (prevState.startDate !== startDate) {\n            // Don't adjust unless an end date has already been selected\n            if (endDate && !this.isEndDateValid(startDate, endDate)) {\n                this.setState({ endDate: undefined });\n            }\n        }\n    }\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(React.Fragment, null,\n            this.getStartDatePicker(),\n            React.createElement(\"span\", { style: styles.toContainer }, intl.formatMessage(messages.to)),\n            this.getEndDatePicker()));\n    }\n}\nconst ExplorerDatePicker = injectIntl(withRouter(ExplorerDatePickerBase));\nexport { ExplorerDatePicker };\n","import { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nclass ExplorerDateRangeBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isSelectOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getSelect = () => {\n            const { dateRangeType, isDisabled } = this.props;\n            const { isSelectOpen } = this.state;\n            const selectOptions = this.getSelectOptions();\n            const selection = selectOptions.find((option) => option.value === dateRangeType);\n            return (React.createElement(Select, { id: \"dateRangeSelect\", isDisabled: isDisabled, isOpen: isSelectOpen, onSelect: this.handleSelect, onToggle: this.handleToggle, selections: selection, variant: SelectVariant.single }, selectOptions.map(option => (React.createElement(SelectOption, { key: option.value, value: option })))));\n        };\n        this.getSelectOptions = () => {\n            const { intl, options } = this.props;\n            const selectOptions = [];\n            options.map(option => {\n                selectOptions.push({\n                    toString: () => intl.formatMessage(option.label, { value: option.value }),\n                    value: option.value,\n                });\n            });\n            return selectOptions;\n        };\n        this.handleSelect = (event, selection) => {\n            const { onSelected } = this.props;\n            if (onSelected) {\n                onSelected(selection.value);\n            }\n            this.setState({\n                isSelectOpen: false,\n            });\n        };\n        this.handleToggle = isSelectOpen => {\n            this.setState({ isSelectOpen });\n        };\n    }\n    render() {\n        return this.getSelect();\n    }\n}\nconst ExplorerDateRange = injectIntl(ExplorerDateRangeBase);\nexport { ExplorerDateRange };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    toolbarContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        marginLeft: global_spacer_md.var,\n        paddingTop: global_spacer_sm.var,\n    },\n};\n","import { OrgType } from 'api/orgs/org';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { DateRangeType, getDateRangeFromQuery, getDateRangeTypeDefault } from 'routes/views/utils/dateRange';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps } from 'store/common';\nimport { orgActions, orgSelectors } from 'store/orgs';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { formatStartEndDate } from 'utils/dates';\nimport { isEqual } from 'utils/equal';\nimport { orgUnitIdKey, tagKey } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { ExplorerDatePicker } from './explorerDatePicker';\nimport { ExplorerDateRange } from './explorerDateRange';\nimport { styles } from './explorerFilter.styles';\nimport { dateRangeOptions, getGroupByOptions, getOrgReportPathsType, getTagReportPathsType } from './explorerUtils';\nconst orgReportType = OrgType.org;\nconst tagReportType = TagType.tag;\nexport class ExplorerFilterBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            showDatePicker: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { orgReport, perspective, intl, tagReport } = this.props;\n            const options = [];\n            const groupByOptions = getGroupByOptions(perspective);\n            groupByOptions.map(option => {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: option.label }),\n                    key: option.value,\n                });\n            });\n            if (orgReport && orgReport.data && orgReport.data.length > 0) {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: 'org_unit_id' }),\n                    key: orgUnitIdKey,\n                });\n            }\n            if (tagReport && tagReport.data && tagReport.data.length > 0) {\n                options.push({ name: intl.formatMessage(messages.filterByValues, { value: 'tag' }), key: tagKey });\n            }\n            return options;\n        };\n        this.getDateRangeComponent = () => {\n            const { isDisabled } = this.props;\n            const { currentDateRangeType } = this.state;\n            return (React.createElement(ExplorerDateRange, { dateRangeType: currentDateRangeType, isDisabled: isDisabled, onSelected: this.handleDateRangeSelected, options: dateRangeOptions }));\n        };\n        this.getDatePickerComponent = () => {\n            const { showDatePicker } = this.state;\n            return showDatePicker ? React.createElement(ExplorerDatePicker, { onSelected: this.handleDatePickerSelected }) : undefined;\n        };\n        this.handleDatePickerSelected = (startDate, endDate) => {\n            const { query, router } = this.props;\n            const { start_date, end_date } = formatStartEndDate(startDate, endDate);\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { dateRangeType: DateRangeType.custom, start_date,\n                end_date });\n            router.navigate(getRouteForQuery(newQuery, router.location), { replace: true });\n        };\n        this.handleDateRangeSelected = (value) => {\n            const { query, router } = this.props;\n            const showDatePicker = value === DateRangeType.custom;\n            this.setState({ currentDateRangeType: value, showDatePicker }, () => {\n                if (!showDatePicker) {\n                    const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { dateRangeType: value, start_date: undefined, end_date: undefined });\n                    router.navigate(getRouteForQuery(newQuery, router.location), { replace: true });\n                }\n            });\n        };\n    }\n    componentDidMount() {\n        const { dateRangeType, fetchOrg, fetchTag, orgQueryString, orgReportPathsType, tagQueryString, tagReportPathsType, } = this.props;\n        if (orgReportPathsType) {\n            fetchOrg(orgReportPathsType, orgReportType, orgQueryString);\n        }\n        if (tagReportPathsType) {\n            fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n        }\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n            currentDateRangeType: dateRangeType,\n            showDatePicker: dateRangeType === DateRangeType.custom,\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchOrg, fetchTag, orgQueryString, orgReport, orgReportPathsType, perspective, query, tagQueryString, tagReport, tagReportPathsType, } = this.props;\n        if (query && !isEqual(query, prevProps.query)) {\n            if (orgReportPathsType) {\n                fetchOrg(orgReportPathsType, orgReportType, orgQueryString);\n            }\n            if (tagReportPathsType) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n        }\n        if (!isEqual(orgReport, prevProps.orgReport) || !isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            });\n        }\n        // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n        if (prevProps.perspective !== perspective) {\n            this.handleDateRangeSelected(dateRangeOptions[0].value);\n        }\n    }\n    render() {\n        const { groupBy, isDisabled, onFilterAdded, onFilterRemoved, orgReport, query, resourcePathsType, tagReport, tagReportPathsType, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, dateRange: this.getDateRangeComponent(), datePicker: this.getDatePickerComponent(), groupBy: groupBy, isDisabled: isDisabled, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, orgReport: orgReport, query: query, resourcePathsType: resourcePathsType, style: styles.toolbarContainer, showFilter: true, tagReport: tagReport, tagReportPathsType: tagReportPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { perspective, router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const dateRangeType = getDateRangeTypeDefault(queryFromRoute);\n    const { end_date, start_date } = getDateRangeFromQuery(queryFromRoute);\n    // Omitting key_only to share a single request -- the toolbar needs key values\n    const orgQueryString = getQuery({\n        end_date,\n        start_date,\n        limit: 1000,\n    });\n    let orgReport;\n    let orgReportFetchStatus;\n    const orgReportPathsType = getOrgReportPathsType(perspective);\n    if (orgReportPathsType) {\n        orgReport = orgSelectors.selectOrg(state, orgReportPathsType, orgReportType, orgQueryString);\n        orgReportFetchStatus = orgSelectors.selectOrgFetchStatus(state, orgReportPathsType, orgReportType, orgQueryString);\n    }\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        end_date,\n        start_date,\n        key_only: true,\n        limit: 1000,\n    });\n    let tagReport;\n    let tagReportFetchStatus;\n    const tagReportPathsType = getTagReportPathsType(perspective);\n    if (tagReportPathsType) {\n        tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, tagQueryString);\n        tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, tagQueryString);\n    }\n    return {\n        dateRangeType,\n        orgQueryString,\n        orgReport,\n        orgReportFetchStatus,\n        orgReportPathsType,\n        perspective,\n        tagQueryString,\n        tagReport,\n        tagReportFetchStatus,\n        tagReportPathsType,\n    };\n});\nconst mapDispatchToProps = {\n    fetchOrg: orgActions.fetchOrg,\n    fetchTag: tagActions.fetchTag,\n};\nconst ExplorerFilterConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerFilterBase);\nconst ExplorerFilter = injectIntl(withRouter(ExplorerFilterConnect));\nexport { ExplorerFilter };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_Color_200 from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    cost: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    costLabel: {},\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    costLabelDate: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_200.var,\n    },\n    costType: {\n        display: 'flex',\n        marginLeft: global_spacer_md.var,\n    },\n    groupBy: {\n        paddingLeft: global_spacer_lg.var,\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        paddingBottom: global_spacer_sm.var,\n        paddingLeft: global_spacer_lg.var,\n        paddingRight: global_spacer_lg.var,\n        paddingTop: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    perspectiveContainer: {\n        display: 'flex',\n        marginTop: global_spacer_md.var,\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { parseQuery } from 'api/queries/query';\nimport { getUserAccessQuery } from 'api/queries/userAccessQuery';\nimport { UserAccessType } from 'api/userAccess';\nimport { ExportsLink } from 'components/drawers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Currency } from 'routes/components/currency';\nimport { CostType } from 'routes/views/components/costType';\nimport { GroupBy } from 'routes/views/components/groupBy';\nimport { Perspective } from 'routes/views/components/perspective';\nimport { DateRangeType, getDateRangeFromQuery, getDateRangeTypeDefault } from 'routes/views/utils/dateRange';\nimport { filterProviders, hasCloudProvider } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { userAccessQuery, userAccessSelectors } from 'store/userAccess';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedExplorerReportItems';\nimport { withRouter } from 'utils/router';\nimport { hasAwsAccess, hasAzureAccess, hasGcpAccess, hasIbmAccess, isAwsAvailable, isAzureAvailable, isGcpAvailable, isIbmAvailable, isOciAvailable, isOcpAvailable, isRhelAvailable, } from 'utils/userAccess';\nimport { ExplorerFilter } from './explorerFilter';\nimport { styles } from './explorerHeader.styles';\nimport { baseQuery, getGroupByDefault, getGroupByOptions, getOrgReportPathsType, getResourcePathsType, getTagReportPathsType, PerspectiveType, } from './explorerUtils';\nclass ExplorerHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n        // TBD...\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getPerspective = (isDisabled) => {\n            const { isIbmFeatureEnabled, isOciFeatureEnabled } = this.props;\n            const { currentPerspective } = this.state;\n            const hasAws = this.isAwsAvailable();\n            const hasAzure = this.isAzureAvailable();\n            const hasOci = this.isOciAvailable();\n            const hasGcp = this.isGcpAvailable();\n            const hasIbm = this.isIbmAvailable();\n            const hasOcp = this.isOcpAvailable();\n            const hasRhel = this.isRhelAvailable();\n            // Note: No need to test \"OCP on cloud\" here, since that requires at least one of the providers below\n            if (!(hasAws || hasAzure || hasOci || hasGcp || hasIbm || hasOcp || hasRhel)) {\n                return null;\n            }\n            return (React.createElement(Perspective, { currentItem: currentPerspective, hasAws: hasAws, hasAwsOcp: this.isAwsOcpAvailable(), hasAzure: hasAzure, hasAzureOcp: this.isAzureOcpAvailable(), hasGcp: hasGcp, hasGcpOcp: this.isGcpOcpAvailable(), hasIbm: hasIbm, hasIbmOcp: this.isIbmOcpAvailable(), hasOci: hasOci, hasOcp: hasOcp, hasOcpCloud: this.isOcpCloudAvailable(), hasRhel: hasRhel, isDisabled: isDisabled, isIbmFeatureEnabled: isIbmFeatureEnabled, isOciFeatureEnabled: isOciFeatureEnabled, onSelected: this.handlePerspectiveSelected }));\n        };\n        this.handlePerspectiveSelected = (value) => {\n            const { onPerspectiveClicked, query, router } = this.props;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { exclude: undefined, filter_by: undefined, group_by: { [getGroupByDefault(value)]: '*' }, order_by: undefined, perspective: value });\n            this.setState({ currentPerspective: value }, () => {\n                if (onPerspectiveClicked) {\n                    onPerspectiveClicked(value);\n                }\n                router.navigate(getRouteForQuery(newQuery, router.location), { replace: true });\n            });\n        };\n        this.isAwsAvailable = () => {\n            const { awsProviders, userAccess } = this.props;\n            return isAwsAvailable(userAccess, awsProviders);\n        };\n        this.isAwsOcpAvailable = () => {\n            const { awsProviders, ocpProviders, userAccess } = this.props;\n            return hasAwsAccess(userAccess) && hasCloudProvider(awsProviders, ocpProviders);\n        };\n        this.isAzureAvailable = () => {\n            const { azureProviders, userAccess } = this.props;\n            return isAzureAvailable(userAccess, azureProviders);\n        };\n        this.isAzureOcpAvailable = () => {\n            const { azureProviders, ocpProviders, userAccess } = this.props;\n            return hasAzureAccess(userAccess) && hasCloudProvider(azureProviders, ocpProviders);\n        };\n        this.isGcpAvailable = () => {\n            const { gcpProviders, userAccess } = this.props;\n            return isGcpAvailable(userAccess, gcpProviders);\n        };\n        this.isGcpOcpAvailable = () => {\n            const { gcpProviders, ocpProviders, userAccess } = this.props;\n            return hasGcpAccess(userAccess) && hasCloudProvider(gcpProviders, ocpProviders);\n        };\n        this.isIbmAvailable = () => {\n            const { ibmProviders, userAccess } = this.props;\n            return isIbmAvailable(userAccess, ibmProviders);\n        };\n        this.isIbmOcpAvailable = () => {\n            const { ibmProviders, ocpProviders, userAccess } = this.props;\n            return hasIbmAccess(userAccess) && hasCloudProvider(ibmProviders, ocpProviders);\n        };\n        this.isOciAvailable = () => {\n            const { ociProviders, userAccess } = this.props;\n            return isOciAvailable(userAccess, ociProviders);\n        };\n        this.isOcpAvailable = () => {\n            const { ocpProviders, userAccess } = this.props;\n            return isOcpAvailable(userAccess, ocpProviders);\n        };\n        this.isOcpCloudAvailable = () => {\n            const hasAwsOcp = this.isAwsOcpAvailable();\n            const hasAzureOcp = this.isAzureOcpAvailable();\n            const hasGcpOcp = this.isGcpOcpAvailable();\n            const hasIbmOcp = this.isIbmOcpAvailable();\n            return hasAwsOcp || hasAzureOcp || hasGcpOcp || hasIbmOcp;\n        };\n        this.isRhelAvailable = () => {\n            const { isFinsightsFeatureEnabled, rhelProviders, userAccess } = this.props;\n            return isFinsightsFeatureEnabled && isRhelAvailable(userAccess, rhelProviders);\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            currentPerspective: this.props.perspective,\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { perspective } = this.props;\n        if (prevProps.perspective !== perspective) {\n            this.setState({\n                currentPerspective: this.props.perspective,\n            });\n        }\n    }\n    render() {\n        const { costType, currency, groupBy, intl, isCostTypeFeatureEnabled, isCurrencyFeatureEnabled, isExportsFeatureEnabled, onCostTypeSelected, onCurrencySelected, onFilterAdded, onFilterRemoved, onGroupBySelected, perspective, providersFetchStatus, query, } = this.props;\n        // Note: No need to test OCP on cloud here, since that requires at least one provider\n        const noAwsProviders = !this.isAwsAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noAzureProviders = !this.isAzureAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noGcpProviders = !this.isGcpAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noIbmProviders = !this.isIbmAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noOcpProviders = !this.isOcpAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noRhelProviders = !this.isRhelAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noProviders = noAwsProviders && noAzureProviders && noGcpProviders && noIbmProviders && noOcpProviders && noRhelProviders;\n        const groupByOptions = getGroupByOptions(perspective);\n        const orgReportPathsType = getOrgReportPathsType(perspective);\n        const resourcePathsType = getResourcePathsType(perspective);\n        const tagReportPathsType = getTagReportPathsType(perspective);\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.explorerTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    isCurrencyFeatureEnabled && React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.perspectiveContainer },\n                this.getPerspective(noProviders),\n                React.createElement(\"div\", { style: styles.groupBy },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: noProviders, onSelected: onGroupBySelected, options: groupByOptions, orgReportPathsType: orgReportPathsType, perspective: perspective, showOrgs: orgReportPathsType, showTags: tagReportPathsType, tagReportPathsType: tagReportPathsType })),\n                (perspective === PerspectiveType.aws ||\n                    (perspective === PerspectiveType.awsOcp && isCostTypeFeatureEnabled)) && (React.createElement(\"div\", { style: styles.costType },\n                    React.createElement(CostType, { costType: costType, onSelect: onCostTypeSelected })))),\n            React.createElement(ExplorerFilter, { groupBy: groupBy, isDisabled: noProviders, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, perspective: perspective, query: query, resourcePathsType: resourcePathsType })));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { perspective, router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const dateRangeType = getDateRangeTypeDefault(queryFromRoute);\n    const { end_date, start_date } = getDateRangeFromQuery(queryFromRoute);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    const userAccessQueryString = getUserAccessQuery(userAccessQuery);\n    const userAccess = userAccessSelectors.selectUserAccess(state, UserAccessType.all, userAccessQueryString);\n    const userAccessError = userAccessSelectors.selectUserAccessError(state, UserAccessType.all, userAccessQueryString);\n    const userAccessFetchStatus = userAccessSelectors.selectUserAccessFetchStatus(state, UserAccessType.all, userAccessQueryString);\n    // Ensure group_by key is not undefined\n    let groupBy = queryFromRoute.group_by;\n    if (!groupBy && perspective) {\n        groupBy = { [getGroupByDefault(perspective)]: '*' };\n    }\n    const query = Object.assign({ filter: Object.assign(Object.assign({}, baseQuery.filter), queryFromRoute.filter), exclude: queryFromRoute.exclude || baseQuery.exclude, filter_by: queryFromRoute.filter_by || baseQuery.filter_by, group_by: groupBy, order_by: queryFromRoute.order_by, perspective,\n        dateRangeType }, (dateRangeType === DateRangeType.custom && {\n        end_date,\n        start_date,\n    }));\n    return {\n        awsProviders: filterProviders(providers, ProviderType.aws),\n        azureProviders: filterProviders(providers, ProviderType.azure),\n        gcpProviders: filterProviders(providers, ProviderType.gcp),\n        ibmProviders: filterProviders(providers, ProviderType.ibm),\n        isCostTypeFeatureEnabled: featureFlagsSelectors.selectIsCostTypeFeatureEnabled(state),\n        isCurrencyFeatureEnabled: featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state),\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        isFinsightsFeatureEnabled: featureFlagsSelectors.selectIsFinsightsFeatureEnabled(state),\n        isIbmFeatureEnabled: featureFlagsSelectors.selectIsIbmFeatureEnabled(state),\n        isOciFeatureEnabled: featureFlagsSelectors.selectIsOciFeatureEnabled(state),\n        ociProviders: filterProviders(providers, ProviderType.oci),\n        ocpProviders: filterProviders(providers, ProviderType.ocp),\n        providers,\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n        query,\n        rhelProviders: filterProviders(providers, ProviderType.rhel),\n        userAccess,\n        userAccessError,\n        userAccessFetchStatus,\n        userAccessQueryString,\n    };\n});\nconst ExplorerHeader = injectIntl(withRouter(connect(mapStateToProps, {})(ExplorerHeaderBase)));\nexport { ExplorerHeader };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n};\n","import './explorerTable.scss';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { InnerScrollContainer, SortByDirection, TableComposable, Tbody, Td, Th, Thead, Tr, } from '@patternfly/react-table';\nimport { parseQuery } from 'api/queries/query';\nimport { format } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { ComputedReportItemType, ComputedReportItemValueType } from 'routes/views/components/charts/common/chartDatum';\nimport { getDateRangeFromQuery } from 'routes/views/utils/dateRange';\nimport { createMapStateToProps } from 'store/common';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { formatCurrency } from 'utils/format';\nimport { noPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { styles } from './explorerTable.styles';\nimport { PerspectiveType } from './explorerUtils';\nclass ExplorerTableBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { computedReportItemType = ComputedReportItemType.cost, computedReportItemValueType = ComputedReportItemValueType.total, end_date, groupBy, groupByOrg, groupByTagKey, isAllSelected, perspective, report, selectedItems, start_date, intl, } = this.props;\n            if (!report) {\n                return;\n            }\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                isDateMap: true,\n                idKey: groupByTagKey ? groupByTagKey : groupByOrg ? 'org_entities' : groupBy,\n            });\n            // Add first two column headings (i.e., select and name)\n            const columns = groupByTagKey || groupByOrg\n                ? [\n                    {\n                        name: '',\n                    },\n                    {\n                        name: groupByOrg\n                            ? intl.formatMessage(messages.names, { count: 2 })\n                            : intl.formatMessage(messages.tagNames),\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign({ date: undefined, name: intl.formatMessage(messages.groupByValueNames, { groupBy }), orderBy: groupBy === 'account' && perspective === PerspectiveType.aws ? 'account_alias' : groupBy }, (computedItems.length && { isSortable: true })),\n                ];\n            // Fill in missing columns\n            for (let currentDate = new Date(start_date + 'T00:00:00'); currentDate <= new Date(end_date + 'T00:00:00'); currentDate.setDate(currentDate.getDate() + 1)) {\n                const mapId = format(currentDate, 'yyyy-MM-dd');\n                let isSortable = false;\n                computedItems.map(rowItem => {\n                    const item = rowItem.get(mapId);\n                    if (!item) {\n                        rowItem.set(mapId, {\n                            date: mapId,\n                        });\n                    }\n                    else {\n                        isSortable = true; // At least one row must be available\n                    }\n                });\n                // Add column headings\n                const mapIdDate = new Date(mapId + 'T00:00:00');\n                columns.push({\n                    name: intl.formatDate(mapIdDate, {\n                        day: 'numeric',\n                        month: 'short',\n                    }),\n                    date: mapId,\n                    isSortable,\n                    orderBy: 'cost',\n                });\n            }\n            const reportItem = computedReportItemType;\n            const reportItemValue = computedReportItemValueType;\n            // Sort by date and fill in missing cells\n            computedItems.map(rowItem => {\n                const cells = [];\n                let desc; // First column description (i.e., show ID if different than label)\n                let name; // For first column resource name\n                let selectItem; // Save for row selection\n                const items = Array.from(rowItem.values()).sort((a, b) => {\n                    if (new Date(a.date) > new Date(b.date)) {\n                        return 1;\n                    }\n                    else if (new Date(a.date) < new Date(b.date)) {\n                        return -1;\n                    }\n                    else {\n                        return 0;\n                    }\n                });\n                items.map(item => {\n                    if (!name) {\n                        name = item && item.label && item.label !== null ? item.label : null;\n                    }\n                    if (!desc) {\n                        desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                    }\n                    if (item.id && !selectItem) {\n                        selectItem = item;\n                    }\n                    // Add row cells\n                    cells.push({\n                        value: item[reportItem] && item[reportItem][reportItemValue]\n                            ? formatCurrency(item[reportItem][reportItemValue].value, item[reportItem][reportItemValue].units)\n                            : intl.formatMessage(messages.chartNoData),\n                    });\n                });\n                // Add first row cells\n                cells.unshift({}, // Empty cell for row selection\n                {\n                    value: (React.createElement(\"div\", null,\n                        name,\n                        desc)),\n                });\n                rows.push({\n                    cells,\n                    selectionDisabled: selectItem.label === `${noPrefix}${groupBy}` || selectItem.label === `${noPrefix}${groupByTagKey}`,\n                    item: selectItem,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === selectItem.id) !== undefined),\n                });\n            });\n            this.setState({\n                columns,\n                rows,\n            });\n        };\n        this.getEmptyState = () => {\n            const { query, intl } = this.props;\n            for (const val of Object.values(query.filter_by)) {\n                if (val !== '*') {\n                    return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                }\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { query } = this.props;\n            const { columns } = this.state;\n            let direction;\n            const column = columns[index];\n            const hasOrderBy = query && query.order_by && query.order_by;\n            if (column.orderBy && !column.date) {\n                direction = hasOrderBy && query.order_by[column.orderBy];\n            }\n            else if (hasOrderBy && query.order_by.date === column.date) {\n                direction = hasOrderBy && query.order_by[column.orderBy];\n            }\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected } = this.props;\n            const { rows } = this.state;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { onSort } = this.props;\n            const { columns } = this.state;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending, columns[index].date);\n            }\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport || prevProps.selectedItems !== selectedItems) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { intl, isLoading } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(InnerScrollContainer, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.explorerTableAriaLabel), className: \"explorerTableOverride\", gridBreakPoint: \"\" },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${cellIndex}-${rowIndex}`, modifier: \"nowrap\", select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    } })) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", isActionCell: cellIndex === row.cells.length - 1 }, item.value))))))))),\n            Boolean(rows.length === 0) && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { perspective, router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const { end_date, start_date } = getDateRangeFromQuery(queryFromRoute);\n    return {\n        end_date,\n        perspective,\n        start_date,\n    };\n});\nconst mapDispatchToProps = {};\nconst ExplorerTableConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerTableBase);\nconst ExplorerTable = injectIntl(withRouter(ExplorerTableConnect));\nexport { ExplorerTable };\n","import React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { createMapStateToProps } from 'store/common';\nimport { getTagReportPathsType } from './explorerUtils';\nexport class ExplorerToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { isAllSelected, isBulkSelectDisabled, isDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onExportClicked, pagination, perspective, selectedItems, } = this.props;\n        const tagReportPathsType = getTagReportPathsType(perspective);\n        return (React.createElement(DataToolbar, { isAllSelected: isAllSelected, isBulkSelectDisabled: isBulkSelectDisabled, isDisabled: isDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onExportClicked: onExportClicked, pagination: pagination, selectedItems: selectedItems, showBulkSelect: true, showExport: true, tagReportPathsType: tagReportPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst ExplorerToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerToolbarBase);\nconst ExplorerToolbar = injectIntl(ExplorerToolbarConnect);\nexport { ExplorerToolbar };\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { getUserAccessQuery } from 'api/queries/userAccessQuery';\nimport { UserAccessType } from 'api/userAccess';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoData } from 'routes/state/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { ExportModal } from 'routes/views/components/export';\nimport { DateRangeType } from 'routes/views/utils/dateRange';\nimport { getDateRangeFromQuery, getDateRangeTypeDefault } from 'routes/views/utils/dateRange';\nimport { getGroupByOrgValue, getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { handleCostTypeSelected, handleCurrencySelected, handleFilterAdded, handleFilterRemoved, handlePerPageSelect, handleSetPage, handleSort, } from 'routes/views/utils/handles';\nimport { filterProviders, hasData } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { userAccessQuery, userAccessSelectors } from 'store/userAccess';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedExplorerReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getCostType } from 'utils/costType';\nimport { getCurrency } from 'utils/localStorage';\nimport { noPrefix, orgUnitIdKey, tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { isAwsAvailable, isAzureAvailable, isGcpAvailable, isIbmAvailable, isOciAvailable, isOcpAvailable, isRhelAvailable, } from 'utils/userAccess';\nimport { styles } from './explorer.styles';\nimport { ExplorerChart } from './explorerChart';\nimport { ExplorerHeader } from './explorerHeader';\nimport { ExplorerTable } from './explorerTable';\nimport { ExplorerToolbar } from './explorerToolbar';\nimport { baseQuery, getComputedReportItemType, getComputedReportItemValueType, getGroupByDefault, getPerspectiveDefault, getReportPathsType, getReportType, PerspectiveType, } from './explorerUtils';\nclass Explorer extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            isAllSelected: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByOrg = getGroupByOrgValue(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey ? groupByTagKey : groupByOrg ? 'org_entities' : groupById,\n                isDateMap: false, // Don't use isDateMap here, so we can use a flattened data structure with row selection\n            });\n            return computedItems;\n        };\n        this.getExportModal = (computedItems) => {\n            const { perspective, query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `${noPrefix}${groupById}` || item.label === `${noPrefix}${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: getReportPathsType(perspective), reportQueryString: reportQueryString, resolution: \"daily\", showTimeScope: false }));\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, report, router } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = offset / limit + 1;\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handlePerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.explorerTitle),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { perspective, query, report, reportFetchStatus, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const groupByOrg = getGroupByOrgValue(query);\n            return (React.createElement(ExplorerTable, { computedReportItemType: getComputedReportItemType(perspective), computedReportItemValueType: getComputedReportItemValueType(perspective), groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, groupByTagKey: groupByTagKey, groupByOrg: groupByOrg, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending, date) => handleSort(query, router, sortType, isSortAscending, date), perspective: perspective, query: query, report: report, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { perspective, report } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(ExplorerToolbar, { isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isDisabled || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onExportClicked: this.handleExportModalOpen, pagination: this.getPagination(isDisabled), perspective: perspective, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleDatePickerSelected = (startDate, endDate) => {\n            this.setState({ startDate, endDate });\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            let groupByKey = groupBy;\n            let value = '*';\n            // Check for org units\n            const index = groupBy.indexOf(orgUnitIdKey);\n            if (index !== -1) {\n                groupByKey = orgUnitIdKey.substring(0, orgUnitIdKey.length);\n                value = groupBy.slice(orgUnitIdKey.length);\n            }\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: value,\n                }, order_by: undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handlePerspectiveClick = () => {\n            this.setState({ isAllSelected: false, selectedItems: [] });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.isAwsAvailable = () => {\n            const { awsProviders, userAccess } = this.props;\n            return isAwsAvailable(userAccess, awsProviders);\n        };\n        this.isAzureAvailable = () => {\n            const { azureProviders, userAccess } = this.props;\n            return isAzureAvailable(userAccess, azureProviders);\n        };\n        this.isOciAvailable = () => {\n            const { ociProviders, userAccess } = this.props;\n            return isOciAvailable(userAccess, ociProviders);\n        };\n        this.isGcpAvailable = () => {\n            const { gcpProviders, userAccess } = this.props;\n            return isGcpAvailable(userAccess, gcpProviders);\n        };\n        this.isIbmAvailable = () => {\n            const { ibmProviders, userAccess } = this.props;\n            return isIbmAvailable(userAccess, ibmProviders);\n        };\n        this.isOcpAvailable = () => {\n            const { ocpProviders, userAccess } = this.props;\n            return isOcpAvailable(userAccess, ocpProviders);\n        };\n        this.isRhelAvailable = () => {\n            const { isFinsightsFeatureEnabled, rhelProviders, userAccess } = this.props;\n            return isFinsightsFeatureEnabled && isRhelAvailable(userAccess, rhelProviders);\n        };\n        this.updateReport = () => {\n            const { fetchReport, perspective, reportQueryString } = this.props;\n            fetchReport(getReportPathsType(perspective), getReportType(perspective), reportQueryString);\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handlePerspectiveClick = this.handlePerspectiveClick.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { perspective, report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newPerspective = prevProps.perspective !== perspective;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newPerspective || newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { awsProviders, azureProviders, ociProviders, costType, currency, gcpProviders, ibmProviders, intl, ocpProviders, providersFetchStatus, perspective, userAccessFetchStatus, query, report, reportError, reportFetchStatus, router, } = this.props;\n        // Note: No need to test OCP on cloud here, since that requires at least one provider\n        const noAwsProviders = !this.isAwsAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noAzureProviders = !this.isAzureAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noGcpProviders = !this.isGcpAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noIbmProviders = !this.isIbmAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noOcpProviders = !this.isOcpAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noOciProviders = !this.isOciAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noRhelProviders = !this.isRhelAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noProviders = noAwsProviders &&\n            noAzureProviders &&\n            noGcpProviders &&\n            noIbmProviders &&\n            noOciProviders &&\n            noOcpProviders &&\n            noRhelProviders;\n        const isLoading = providersFetchStatus === FetchStatus.inProgress || userAccessFetchStatus === FetchStatus.inProgress;\n        const computedItems = this.getComputedItems();\n        const isDisabled = computedItems.length === 0;\n        const itemsTotal = report && report.meta ? report.meta.count : 0;\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const groupByTagKey = getGroupByTagKey(query);\n        const title = intl.formatMessage(messages.explorerTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (isLoading) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (noProviders) {\n            return React.createElement(NoProviders, { title: title });\n        }\n        else if (!(hasData(awsProviders) ||\n            hasData(azureProviders) ||\n            hasData(ociProviders) ||\n            hasData(gcpProviders) ||\n            hasData(ibmProviders) ||\n            hasData(ocpProviders))) {\n            return React.createElement(NoData, { title: title });\n        }\n        return (React.createElement(\"div\", { style: styles.explorer },\n            React.createElement(ExplorerHeader, { costType: costType, currency: currency, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, onCostTypeSelected: value => handleCostTypeSelected(query, router, value), onCurrencySelected: value => handleCurrencySelected(query, router, value), onDatePickerSelected: this.handleDatePickerSelected, onFilterAdded: filter => handleFilterAdded(query, router, filter), onFilterRemoved: filter => handleFilterRemoved(query, router, filter), onGroupBySelected: this.handleGroupBySelected, onPerspectiveClicked: this.handlePerspectiveClick, perspective: perspective }),\n            itemsTotal > 0 && (React.createElement(\"div\", { style: styles.chartContent },\n                React.createElement(\"div\", { style: styles.chartContainer },\n                    React.createElement(ExplorerChart, { costType: costType, currency: currency, computedReportItemType: getComputedReportItemType(perspective), computedReportItemValueType: getComputedReportItemValueType(perspective), perspective: perspective })))),\n            React.createElement(\"div\", { style: styles.tableContent },\n                React.createElement(\"div\", { style: styles.toolbarContainer }, this.getToolbar(computedItems)),\n                this.getExportModal(computedItems),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    const awsProviders = filterProviders(providers, ProviderType.aws);\n    const azureProviders = filterProviders(providers, ProviderType.azure);\n    const ociProviders = filterProviders(providers, ProviderType.oci);\n    const gcpProviders = filterProviders(providers, ProviderType.gcp);\n    const ibmProviders = filterProviders(providers, ProviderType.ibm);\n    const ocpProviders = filterProviders(providers, ProviderType.ocp);\n    const rhelProviders = filterProviders(providers, ProviderType.rhel);\n    const userAccessQueryString = getUserAccessQuery(userAccessQuery);\n    const userAccess = userAccessSelectors.selectUserAccess(state, UserAccessType.all, userAccessQueryString);\n    const userAccessError = userAccessSelectors.selectUserAccessError(state, UserAccessType.all, userAccessQueryString);\n    const userAccessFetchStatus = userAccessSelectors.selectUserAccessFetchStatus(state, UserAccessType.all, userAccessQueryString);\n    // Cost Report\n    const queryFromRoute = parseQuery(router.location.search);\n    const dateRangeType = getDateRangeTypeDefault(queryFromRoute);\n    const { end_date, start_date } = getDateRangeFromQuery(queryFromRoute);\n    const perspective = getPerspectiveDefault({\n        awsProviders,\n        azureProviders,\n        ociProviders,\n        gcpProviders,\n        ibmProviders,\n        ocpProviders,\n        queryFromRoute,\n        rhelProviders,\n        userAccess,\n    });\n    // Ensure group_by key is not undefined\n    let groupBy = queryFromRoute.group_by;\n    if (!groupBy && perspective) {\n        groupBy = { [getGroupByDefault(perspective)]: '*' };\n    }\n    const isCostTypeFeatureEnabled = featureFlagsSelectors.selectIsCostTypeFeatureEnabled(state);\n    const costType = perspective === PerspectiveType.aws || (perspective === PerspectiveType.awsOcp && isCostTypeFeatureEnabled)\n        ? getCostType()\n        : undefined;\n    const currency = featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state) ? getCurrency() : undefined;\n    const query = Object.assign({ filter: Object.assign(Object.assign({}, baseQuery.filter), queryFromRoute.filter), filter_by: queryFromRoute.filter_by || baseQuery.filter_by, exclude: queryFromRoute.exclude || baseQuery.exclude, group_by: groupBy, order_by: queryFromRoute.order_by, perspective,\n        dateRangeType }, (dateRangeType === DateRangeType.custom && {\n        end_date,\n        start_date,\n    }));\n    const reportQueryString = getQuery(Object.assign(Object.assign(Object.assign(Object.assign({}, query), { cost_type: costType, currency }), (dateRangeType !== DateRangeType.custom && {\n        end_date,\n        start_date,\n    })), { dateRangeType: undefined, perspective: undefined }));\n    const reportPathsType = getReportPathsType(perspective);\n    const reportType = getReportType(perspective);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    return {\n        awsProviders,\n        azureProviders,\n        costType,\n        currency,\n        dateRangeType,\n        gcpProviders,\n        ibmProviders,\n        isFinsightsFeatureEnabled: featureFlagsSelectors.selectIsFinsightsFeatureEnabled(state),\n        ociProviders,\n        ocpProviders,\n        perspective,\n        providers,\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n        rhelProviders,\n        userAccess,\n        userAccessError,\n        userAccessFetchStatus,\n        userAccessQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(Explorer)));\n","export const skeletonWidth = {\n    xs: '16%',\n    sm: '33%',\n    md: '66%',\n    lg: '100%',\n};\n","import { UserAccessType } from 'api/userAccess';\nconst hasAccess = (userAccess, userAccessType) => {\n    let result = false;\n    if (userAccess && Array.isArray(userAccess.data)) {\n        // Used with multiple types (e.g., type=)\n        const data = userAccess.data.find(d => d.type === userAccessType);\n        result = data && data.access;\n    }\n    else {\n        // Used with type=any, type=GCP, etc.\n        result = userAccess && userAccess.data === true;\n    }\n    return result;\n};\nconst hasProviders = (providers) => {\n    let result = false;\n    if (providers && providers.meta) {\n        // providers API returns empty data array for no sources\n        result = providers.meta.count > 0;\n    }\n    return result;\n};\n// Returns true if user has access to AWS\nexport const hasAwsAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.aws);\n};\n// Returns true if user has access to AWS and at least one source provider\nexport const isAwsAvailable = (userAccess, awsProviders) => {\n    return hasAwsAccess(userAccess) && hasProviders(awsProviders);\n};\n// Returns true if user has access to Azure\nexport const hasAzureAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.azure);\n};\n// Returns true if user has access to Azure and at least one source provider\nexport const isAzureAvailable = (userAccess, azureProviders) => {\n    return hasAzureAccess(userAccess) && hasProviders(azureProviders);\n};\n// Returns true if user has access to Oci\nexport const hasOciAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.oci);\n};\n// Returns true if user has access to Oci and at least one source provider\nexport const isOciAvailable = (userAccess, ociProviders) => {\n    return hasOciAccess(userAccess) && hasProviders(ociProviders);\n};\n// Returns true if user has access to cost models\nexport const hasCostModelAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.cost_model);\n};\n// Returns true if user has access to GCP\nexport const hasGcpAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.gcp);\n};\n// Returns true if user has access to GCP and at least one source provider\nexport const isGcpAvailable = (userAccess, gcpProviders) => {\n    return hasAccess(userAccess, UserAccessType.gcp) && hasProviders(gcpProviders);\n};\n// Returns true if user has access to IBM\nexport const hasIbmAccess = (userAccess) => {\n    return hasGcpAccess(userAccess);\n};\n// Returns true if user has access to IBM and at least one source provider\nexport const isIbmAvailable = (userAccess, ibmProviders) => {\n    return hasIbmAccess(userAccess) && hasProviders(ibmProviders);\n};\n// Returns true if user has access to OCP\nexport const hasOcpAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.ocp);\n};\n// Returns true if user has access to OCP and at least one source provider\nexport const isOcpAvailable = (userAccess, ocpProviders) => {\n    return hasOcpAccess(userAccess) && hasProviders(ocpProviders);\n};\n// Returns true if user has access to RHEL\nexport const hasRhelAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.rhel);\n};\n// Returns true if user has access to RHEL and at least one source provider\nexport const isRhelAvailable = (userAccess, rhelProviders) => {\n    return hasRhelAccess(userAccess) && hasProviders(rhelProviders);\n};\n// Returns true if user has access to ROS\nexport const hasRosAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.ros);\n};\n// Returns true if user has access to RHEL and at least one source provider\nexport const isRosAvailable = (userAccess, rosProviders) => {\n    return hasRosAccess(userAccess) && hasProviders(rosProviders);\n};\n"],"names":["exports","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","EmptyState","variant","EmptyStateVariant","className","children","EmptyStateIcon","icon","ExclamationCircleIcon","Title","headingLevel","size","EmptyStateBody","href","target","rel","getUserAccessQuery","query","stringify","encode","indices","LAYOUT_PROPS","padding","area","axis","bar","boxplot","candlestick","chart","errorbar","group","legend","line","pie","scatter","stack","tooltip","voronoi","ChartTheme","getChartNames","series","result","map","serie","push","childName","getDomain","hiddenSeries","domain","x","maxValue","minValue","forEach","index","isSeriesHidden","data","max","min","Math","threshold","ceil","_min","floor","y","getLegendData","legendItem","name","has","getTooltipLabel","datum","formatter","formatOptions","tooltipFormatter","dy","undefined","units","dy0","y0","value0","value1","getResizeObserver","containerRef","handleResize","containerElement","ResizeObserver","window","_navToggle","_resizeObserver","resizeObserver","entries","requestAnimationFrame","Array","isArray","observe","unobserve","addEventListener","removeEventListener","insights","chrome","on","setTimeout","initHiddenSeries","Set","delete","add","isDataAvailable","unavailable","isDataHidden","key","keys","next","done","dataChildName","serieChildName","item","value","styles","costSelector","display","alignItems","costLabel","marginBottom","marginRight","whiteSpace","costTypeOptions","desc","messages","label","CostTypeBase","constructor","super","defaultState","isSelectOpen","state","getSelect","costType","isDisabled","props","selectOptions","getSelectOptions","selection","find","option","Select","id","isOpen","onSelect","handleSelect","onToggle","handleToggle","selections","SelectVariant","SelectOption","description","intl","options","formatMessage","toString","event","setState","render","style","mapStateToProps","CostTypeConnect","connect","injectIntl","infrastructureAwsOptions","infrastructureAwsOcpOptions","infrastructureAzureOptions","infrastructureOciOptions","infrastructureAzureOcpOptions","infrastructureGcpOptions","infrastructureGcpOcpOptions","infrastructureIbmOptions","infrastructureIbmOcpOptions","infrastructureOcpCloudOptions","ocpOptions","rhelOptions","getInfrastructureOptions","hasAws","hasAwsOcp","hasAzure","hasAzureOcp","hasGcp","hasGcpOcp","hasIbm","hasIbmOcp","hasOci","isIbmFeatureEnabled","isOciFeatureEnabled","currentItem","hasOcp","hasOcpCloud","hasRhel","isInfrastructureTab","isRhelTab","onSelected","getIdKeyForGroupBy","groupBy","account","cluster","gcp_project","node","org_unit_id","payer_tenant_id","product_service","project","region","resource_location","service","service_name","subscription_guid","chartContainer","backgroundColor","global_BackgroundColor_light_100","marginLeft","global_spacer_lg","paddingRight","paddingBottom","paddingTop","chartContent","explorer","minHeight","paginationContainer","pagination","global_spacer_md","tableContainer","tableContent","toolbarContainer","_arrayLikeToArray","arr","len","arr2","ownKeys","object","enumerableOnly","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","_objectSpread","source","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","configurable","writable","fallbackProps","width","height","stackData","childComponents","filterNullChildData","dataset","_x","_y","datasets","fillInMissingData","xMap","reduce","prev","Date","getTime","xKeys","k","Number","xArr","indexOffset","isDate","fillData","d","xOffset","yOffset","_group","firstDatasetBaseline","previousPoints","slice","concat","previousDatum","memo","some","point","getY0","_y0","_y1","_x1","addLayoutData","getCalculatedProps","role","theme","categories","c","range","baseScale","scale","horizontal","_props","colorScale","useMemoizedProps","initialProps","modifiedProps","modifiedChildren","_child","child","withoutSharedEvents","_React$useState2","_arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","err","_iterableToArrayLimit","o","minLen","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","setProps","getColorScale","type","colorScaleOptions","getChildren","calculatedProps","childProps","standalone","getChildProps","parentName","labels","getLabels","domainPadding","labelComponent","polar","VictoryStackBase","VictoryStack","_Hooks$useAnimationSt","setAnimationState","getAnimationProps","getProps","eventKey","containerComponent","groupComponent","externalEventMutations","newChildren","animate","reverse","containerProps","parent","userProps","container","defaultContainerProps","events","previousProps","propTypes","bins","defaultProps","componentConfig","expectedComponents","displayName","ChartStack","_a","ariaDesc","ariaTitle","ChartContainer","hasPatterns","patternScale","themeColor","themeVariant","rest","title","g","defaultPatternScale","themeColorScale","chartStyles","chart_color_blue_300","chart_color_gold_300","chart_color_green_300","chart_color_purple_300","chart_color_orange_300","chart_color_cyan_300","yAxis","axisLabel","grid","stroke","ticks","yAxisAlt","tickLabels","fontSize","xAxis","CostExplorerChartBase","observer","noop","tickValues","initDatum","top1stData","top2ndData","top3rdData","top4thData","top5thData","top6thData","getTruncatedString","initDatumChildName","symbol","fill","cursorVoronoiContainer","getCursorVoronoiContainer","getUnits","getTickValues","getAdjustedContainerHeight","adjustContainerHeight","containerHeight","adjustedContainerHeight","getBarWidth","maxWidth","sectionWidth","getChart","barWidth","ChartBar","CursorVoronoiContainer","cursorDimension","mouseFollowTooltips","voronoiDimension","voronoiPadding","bottom","left","right","top","getEvents","chartNames","isHidden","legendName","onLegendClick","handleLegendClick","getLegend","ChartLegend","gutter","responsive","val","values","modVal","str","substring","maxChars","getTickValue","clientWidth","current","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","disable","ChartLegendTooltip","legendData","day","ref","Chart","legendAllowWrap","legendComponent","legendPosition","ChartAxis","C","fixLabelOverlap","dependentAxis","tickFormat","global_spacer_2xl","chartSkeleton","marginTop","global_spacer_3xl","costChart","global_spacer_sm","legendSkeleton","titleContainer","trendChart","usageChart","PerspectiveType","baseQuery","limit","offset","exclude","filter_by","order_by","cost","dateRangeOptions","groupByAwsOptions","groupByAzureOptions","groupByGcpOptions","groupByGcpOcpOptions","groupByIbmOptions","groupByOciOptions","groupByOcpOptions","groupByRhelOptions","getComputedReportItemType","perspective","getComputedReportItemValueType","getGroupByDefault","aws","awsOcp","gcp","gcpOcp","ibm","azure","azureOcp","oci","ocp","ocpCloud","rhel","getGroupByOptions","getOrgReportPathsType","getReportType","getReportPathsType","getTagReportPathsType","ExplorerChartBase","stateProps","dispatchProps","createReportDatum","computedItem","reportItem","reportItemValue","computedItemDate","date","xVal","formatDate","month","yVal","parseFloat","toFixed","fetchReport","reportQueryString","getChartDatums","computedItems","computedReportItemType","computedReportItemValueType","chartDatums","datums","Map","padChartDatums","getComputedItems","report","idKey","getGroupBy","isDateMap","groupById","group_by","groupByOrg","getSkeleton","Skeleton","skeleton","items","end_date","start_date","newItems","padDate","setDate","getDate","format","chartDatum","reportError","reportFetchStatus","currency","router","queryFromRoute","location","search","cost_type","reportPathsType","reportType","mapDispatchToProps","ExplorerChartConnect","ExplorerChart","toContainer","ExplorerDatePickerBase","startDateRef","endDateRef","getStartDatePicker","startDate","DatePicker","onChange","handleStartDateOnChange","placeholder","validators","getEndDatePicker","endDate","getMaxEndDate","handleEndDateOnChange","rangeStart","today","setTime","isEndDateValid","minDate","maxDate","isStartDateValid","evt","setCalendarOpen","dateRangeType","prevState","ExplorerDatePicker","ExplorerDateRangeBase","ExplorerDateRange","orgReportType","tagReportType","ExplorerFilterBase","showDatePicker","getCategoryOptions","orgReport","tagReport","getDateRangeComponent","currentDateRangeType","handleDateRangeSelected","getDatePickerComponent","handleDatePickerSelected","newQuery","JSON","parse","navigate","replace","fetchOrg","fetchTag","orgQueryString","orgReportPathsType","tagQueryString","tagReportPathsType","categoryOptions","onFilterAdded","onFilterRemoved","resourcePathsType","dateRange","datePicker","showFilter","orgReportFetchStatus","key_only","tagReportFetchStatus","ExplorerFilterConnect","ExplorerFilter","costValue","costLabelUnit","global_FontSize_sm","color","global_Color_100","costLabelDate","global_Color_200","paddingLeft","header","headerContent","justifyContent","headerContentRight","perspectiveContainer","ExplorerHeaderBase","getPerspective","currentPerspective","isAwsAvailable","isAzureAvailable","isOciAvailable","isGcpAvailable","isIbmAvailable","isOcpAvailable","isRhelAvailable","isAwsOcpAvailable","isAzureOcpAvailable","isGcpOcpAvailable","isIbmOcpAvailable","isOcpCloudAvailable","handlePerspectiveSelected","onPerspectiveClicked","awsProviders","userAccess","ocpProviders","azureProviders","gcpProviders","ibmProviders","ociProviders","isFinsightsFeatureEnabled","rhelProviders","isCostTypeFeatureEnabled","isCurrencyFeatureEnabled","isExportsFeatureEnabled","onCostTypeSelected","onCurrencySelected","onGroupBySelected","providersFetchStatus","noAwsProviders","noAzureProviders","noGcpProviders","noIbmProviders","noOcpProviders","noRhelProviders","noProviders","groupByOptions","getResourcePathsType","TitleSizes","showOrgs","showTags","providersQueryString","providers","providersError","userAccessQueryString","userAccessError","userAccessFetchStatus","featureFlags","ExplorerHeader","emptyState","infoArrow","position","infoArrowDesc","global_spacer_xs","infoDescription","global_disabled_color_100","global_FontSize_xs","ExplorerTableBase","columns","rows","groupByTagKey","isAllSelected","selectedItems","count","orderBy","isSortable","currentDate","mapId","rowItem","get","set","mapIdDate","cells","selectItem","sort","a","b","unshift","selectionDisabled","selected","getEmptyState","showMargin","getSortBy","direction","column","hasOrderBy","getSortParams","sortBy","onSort","handleOnSort","columnIndex","handleOnSelect","isSelected","rowId","newRows","row","SortByDirection","bind","currentReport","isLoading","InnerScrollContainer","TableComposable","gridBreakPoint","Thead","Tr","col","Th","modifier","Tbody","Td","colSpan","Bullseye","textAlign","Spinner","rowIndex","cellIndex","dataLabel","select","_event","isActionCell","Boolean","ExplorerTableConnect","ExplorerTable","ExplorerToolbarBase","isBulkSelectDisabled","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onExportClicked","showBulkSelect","showExport","ExplorerToolbarConnect","ExplorerToolbar","Explorer","isExportModalOpen","getExportModal","meta","isAllItems","onClose","handleExportModalClose","resolution","showTimeScope","getPagination","isBottom","page","Pagination","isCompact","itemCount","onPerPageSelect","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","PaginationVariant","widgetId","getTable","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","handleExportModalOpen","action","handleGroupBySelected","groupByKey","indexOf","handlePerspectiveClick","updateReport","newPerspective","noReport","noLocation","noOciProviders","onDatePickerSelected","ibmOcp","hasAwsCloud","hasAzureCloud","hasGcpCloud","hasIbmCloud","getPerspectiveDefault","skeletonWidth","xs","sm","md","lg","hasAccess","userAccessType","access","hasProviders","hasAwsAccess","hasAzureAccess","hasOciAccess","hasCostModelAccess","hasGcpAccess","hasIbmAccess","hasOcpAccess","hasRhelAccess","hasRosAccess"],"sourceRoot":""}