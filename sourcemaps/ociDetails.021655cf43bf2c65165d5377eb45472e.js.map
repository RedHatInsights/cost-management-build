{"version":3,"file":"js/ociDetails.f225309cd4aa8b848d2e.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/external-link-alt-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_xs.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Unavailable/Unavailable.js","webpack:///./src/api/queries/providersQuery.ts","webpack:///./src/routes/components/currency/currency.styles.ts","webpack:///./src/routes/components/currency/currency.tsx","webpack:///./src/routes/state/noData/noDataState.tsx","webpack:///./src/routes/state/noData/noData.tsx","webpack:///./src/routes/components/icons/optimizationIcon/optimizationIcon.tsx","webpack:///./src/routes/state/noOptimizations/noOptimizationsState.tsx","webpack:///./src/routes/components/icons/costIcon/costIcon.tsx","webpack:///./src/routes/state/noProviders/noProvidersState.styles.ts","webpack:///./src/routes/state/noProviders/noProvidersState.tsx","webpack:///./src/routes/state/noProviders/noProviders.tsx","webpack:///./src/routes/state/notAvailable/notAvailable.tsx","webpack:///./src/routes/views/details/components/actions/actions.tsx","webpack:///./src/routes/views/details/components/dataTable/dataTable.styles.ts","webpack:///./src/routes/views/details/components/dataTable/dataTable.tsx","webpack:///./src/utils/computedReport/getComputedOciReportItems.ts","webpack:///./src/routes/views/details/ociDetails/detailsHeader.styles.ts","webpack:///./src/routes/views/details/ociDetails/detailsHeader.tsx","webpack:///./src/routes/views/details/ociDetails/detailsTable.tsx","webpack:///./src/routes/views/details/ociDetails/detailsToolbar.tsx","webpack:///./src/routes/views/details/ociDetails/ociDetails.styles.ts","webpack:///./src/routes/views/details/ociDetails/ociDetails.tsx","webpack:///./src/routes/views/utils/handles.ts","webpack:///./src/routes/views/utils/providers.ts","webpack:///./src/routes/views/utils/query.ts"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExternalLinkAltIcon = createIcon(ExternalLinkAltIconConfig);\n\nexport default ExternalLinkAltIcon;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_xs = {\n  \"name\": \"--pf-global--spacer--xs\",\n  \"value\": \"0.25rem\",\n  \"var\": \"var(--pf-global--spacer--xs)\"\n};\nexports[\"default\"] = exports.global_spacer_xs;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport '../Unavailable/Unavailable.css';\nvar Unavailable = function () {\n    return (_jsxs(EmptyState, __assign({ variant: EmptyStateVariant.large, className: \"ins-c-empty-state__unavailable pf-m-redhat-font\" }, { children: [_jsx(EmptyStateIcon, { icon: ExclamationCircleIcon }), _jsx(Title, __assign({ headingLevel: \"h5\", size: \"lg\" }, { children: \"This page is temporarily unavailable\" })), _jsxs(EmptyStateBody, { children: [\"Try refreshing the page. If the problem persists, contact your organization administrator or visit our\", _jsxs(\"a\", __assign({ href: \"https://status.redhat.com/\", target: \"_blank\", rel: \"noopener noreferrer\" }, { children: [' ', \"status page\"] })), ' ', \"for known outages.\"] })] })));\n};\nexport default Unavailable;\n//# sourceMappingURL=Unavailable.js.map","import { parse, stringify } from 'qs';\nexport function getProvidersQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseProvidersQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    currencySelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    currencyLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n        whiteSpace: 'nowrap',\n    },\n};\n","import './currency.scss';\nimport { Select, SelectOption, SelectVariant, Title } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { setCurrency } from 'utils/localStorage';\nimport { styles } from './currency.styles';\nexport const currencyOptions = [\n    { label: messages.currencyOptions, value: 'AUD' },\n    { label: messages.currencyOptions, value: 'CAD' },\n    { label: messages.currencyOptions, value: 'CHF' },\n    { label: messages.currencyOptions, value: 'CNY' },\n    { label: messages.currencyOptions, value: 'DKK' },\n    { label: messages.currencyOptions, value: 'EUR' },\n    { label: messages.currencyOptions, value: 'GBP' },\n    { label: messages.currencyOptions, value: 'HKD' },\n    { label: messages.currencyOptions, value: 'JPY' },\n    { label: messages.currencyOptions, value: 'NOK' },\n    { label: messages.currencyOptions, value: 'NZD' },\n    { label: messages.currencyOptions, value: 'SEK' },\n    { label: messages.currencyOptions, value: 'SGD' },\n    { label: messages.currencyOptions, value: 'USD' },\n    { label: messages.currencyOptions, value: 'ZAR' },\n];\nclass CurrencyBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isSelectOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getSelect = () => {\n            const { currency, isDisabled, showLabel = true } = this.props;\n            const { isSelectOpen } = this.state;\n            const selectOptions = this.getSelectOptions();\n            const selection = selectOptions.find((option) => option.value === currency);\n            return (React.createElement(Select, { className: showLabel ? 'currencyOverride' : undefined, id: \"currencySelect\", isDisabled: isDisabled, isOpen: isSelectOpen, onSelect: this.handleSelect, onToggle: this.handleToggle, selections: selection, variant: SelectVariant.single }, selectOptions.map(option => (React.createElement(SelectOption, { key: option.value, value: option })))));\n        };\n        this.getSelectOptions = () => {\n            const { intl } = this.props;\n            const options = [];\n            currencyOptions.map(option => {\n                options.push({\n                    toString: () => intl.formatMessage(option.label, { units: option.value }),\n                    value: option.value,\n                });\n            });\n            return options;\n        };\n        this.handleSelect = (event, selection) => {\n            const { isLocalStorage = true, onSelect } = this.props;\n            // Set currency units via local storage\n            if (isLocalStorage) {\n                setCurrency(selection.value);\n            }\n            this.setState({\n                isSelectOpen: false,\n            }, () => {\n                if (onSelect) {\n                    onSelect(selection.value);\n                }\n            });\n        };\n        this.handleToggle = isSelectOpen => {\n            this.setState({ isSelectOpen });\n        };\n    }\n    render() {\n        const { intl, showLabel = true } = this.props;\n        return (React.createElement(\"div\", { style: styles.currencySelector },\n            showLabel && (React.createElement(Title, { headingLevel: \"h2\", size: \"md\", style: styles.currencyLabel }, intl.formatMessage(messages.currency))),\n            this.getSelect()));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst CurrencyConnect = connect(mapStateToProps, mapDispatchToProps)(CurrencyBase);\nconst Currency = injectIntl(CurrencyConnect);\nexport default Currency;\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nclass NoDataStateBase extends React.Component {\n    render() {\n        const { intl, showReload = true } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, intl.formatMessage(messages.noDataStateTitle)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(messages.noDataStateDesc)),\n            showReload && (React.createElement(Button, { variant: \"primary\", onClick: () => window.location.reload() }, intl.formatMessage(messages.noDataStateRefresh)))));\n    }\n}\nconst NoDataState = injectIntl(NoDataStateBase);\nexport { NoDataState };\n","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React from 'react';\nimport { NoDataState } from './noDataState';\nconst NoData = ({ showReload, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(NoDataState, { showReload: showReload }))));\n};\nexport default NoData;\n","import './optimizationIcon.scss';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nconst icon = require('./Red_Hat-IT_Optimization-Gray.svg');\nconst OptimizationIcon = ({ className, intl }) => {\n    return (React.createElement(\"img\", { className: `optimization-icon ${className}`, src: icon, alt: intl.formatMessage(messages.optimizations), \"aria-hidden\": \"true\" }));\n};\nexport default injectIntl(OptimizationIcon);\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { OptimizationIcon } from 'routes/components/icons/optimizationIcon';\nclass NoOptimizationsStateBase extends React.Component {\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: OptimizationIcon }),\n            React.createElement(Title, { headingLevel: \"h1\", size: \"lg\" }, intl.formatMessage(messages.noOptimizationsTitle)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(messages.noOptimizationsDesc))));\n    }\n}\nconst NoOptimizationsState = injectIntl(NoOptimizationsStateBase);\nexport { NoOptimizationsState };\n","import './costIcon.scss';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nconst icon = require('./Cost-icon.svg');\nconst CostIcon = ({ className, intl }) => {\n    return (React.createElement(\"img\", { className: `cost-icon ${className}`, src: icon, alt: intl.formatMessage(messages.costManagement), \"aria-hidden\": \"true\" }));\n};\nexport default injectIntl(CostIcon);\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    iconSpacer: {\n        marginLeft: global_spacer_xs.value,\n    },\n    viewSources: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { ProviderType } from 'api/providers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { CostIcon } from 'routes/components/icons/costIcon';\nimport { getReleasePath } from 'utils/paths';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDocLink = (textKey, urlKey) => {\n            const { intl } = this.props;\n            return (React.createElement(\"a\", { href: intl.formatMessage(urlKey), rel: \"noreferrer\", target: \"_blank\" },\n                intl.formatMessage(textKey),\n                React.createElement(\"span\", { style: styles.iconSpacer },\n                    React.createElement(ExternalLinkAltIcon, null))));\n        };\n        this.getRouteToSources = () => {\n            const release = getReleasePath();\n            return `${release}/settings/sources`;\n        };\n    }\n    render() {\n        const { intl, providerType } = this.props;\n        let descKey = messages.noProvidersStateOverviewDesc;\n        let titleKey = messages.noProvidersStateOverviewTitle;\n        let docUrlKey;\n        let icon;\n        let textKey;\n        switch (providerType) {\n            case ProviderType.aws:\n                descKey = messages.noProvidersStateAwsDesc;\n                titleKey = messages.noProvidersStateAwsTitle;\n                break;\n            case ProviderType.azure:\n                descKey = messages.noProvidersStateAzureDesc;\n                titleKey = messages.noProvidersStateAzureTitle;\n                break;\n            case ProviderType.gcp:\n                descKey = messages.noProvidersStateGcpDesc;\n                titleKey = messages.noProvidersStateGcpTitle;\n                break;\n            case ProviderType.ibm:\n                descKey = messages.noProvidersStateIbmDesc;\n                titleKey = messages.noProvidersStateIbmTitle;\n                break;\n            case ProviderType.ocp:\n                descKey = messages.noProvidersStateOcpDesc;\n                docUrlKey = messages.docsAddOcpSources;\n                textKey = messages.noProvidersStateOcpAddSources;\n                titleKey = messages.noProvidersStateOcpTitle;\n                break;\n            default:\n                icon = CostIcon;\n        }\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: icon ? icon : PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h1\", size: \"lg\" }, intl.formatMessage(titleKey)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(descKey)),\n            docUrlKey && textKey ? (React.createElement(\"div\", { style: styles.viewSources }, this.getDocLink(textKey, docUrlKey))) : (React.createElement(Button, { variant: \"primary\", component: \"a\", href: this.getRouteToSources() }, intl.formatMessage(messages.noProvidersStateGetStarted)))));\n    }\n}\nconst NoProvidersState = injectIntl(NoProvidersStateBase);\nexport { NoProvidersState };\n","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React from 'react';\nimport { NoProvidersState } from './noProvidersState';\nconst NoProviders = ({ providerType, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(NoProvidersState, { providerType: providerType }))));\n};\nexport default NoProviders;\n","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Unavailable } from '@redhat-cloud-services/frontend-components/Unavailable';\nimport React from 'react';\nconst NotAvailable = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(Unavailable, null))));\n};\nexport default NotAvailable;\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ExportModal } from 'routes/views/components/export';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nimport { tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, reportPathsType, reportQueryString } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { count: 1, groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, intl, item: { source_uuid }, redirectToCostModel, router, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, intl.formatMessage(messages.detailsActionsExport)),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], router) }, intl.formatMessage(messages.detailsActionsPriceList)));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = injectIntl(withRouter(DetailsActionsConnect));\nexport default Actions;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    costColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingRight: 0,\n    },\n    defaultLabel: {\n        minWidth: '50px',\n    },\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    lastReported: {\n        textAlign: 'right',\n        paddingRight: '40px',\n    },\n    lastReportedColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    managedColumn: {\n        textAlign: 'right',\n    },\n    nameColumn: {\n        width: '1%',\n    },\n};\n","import './dataTable.scss';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, TableVariant, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport { parseQuery } from 'api/queries/ocpQuery';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { NoOptimizationsState } from 'routes/state/noOptimizations/noOptimizationsState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass DataTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { intl, isOptimizations, router } = this.props;\n            const queryFromRoute = parseQuery(router.location.search);\n            if (queryFromRoute.filter_by) {\n                for (const val of Object.values(queryFromRoute.filter_by)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            if (isOptimizations) {\n                return React.createElement(NoOptimizationsState, null);\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, router } = this.props;\n            const orderBy = columns[index].orderBy;\n            const queryFromRoute = parseQuery(router.location.search);\n            const direction = queryFromRoute && queryFromRoute.order_by && queryFromRoute.order_by[orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected, rows } = this.props;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnRowClick = (event, rowIndex) => {\n            const { onRowClick, rows } = this.props;\n            rows.map(row => (row.selected = false));\n            rows[rowIndex].selected = true;\n            this.setState({ rows }, () => {\n                if (onRowClick) {\n                    onRowClick(event, rowIndex);\n                }\n            });\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isLoading, isOptimizations, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.dataTableAriaLabel), className: \"tableOverride\", gridBreakPoint: \"grid-2xl\", hasSelectableRowCaption: isOptimizations, variant: TableVariant.compact },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { isSelectable: isOptimizations, isHoverable: isOptimizations, isRowSelected: isOptimizations && row.selected, onRowClick: isOptimizations ? _event => this.handleOnRowClick(_event, rowIndex) : undefined, key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 && !isOptimizations ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${cellIndex}-${rowIndex}`, modifier: \"nowrap\", select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    }, style: item.style })) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", isActionCell: !isOptimizations && cellIndex === row.cells.length - 1, style: item.style }, item.value))))))))),\n            rows.length === 0 && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(DataTable));\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.payer_tenant_id) {\n        return 'payer_tenant_id';\n    }\n    if (groupBy.region) {\n        return 'region';\n    }\n    if (groupBy.product_service) {\n        return 'product_service';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costValue: {\n        marginTop: global_spacer_lg.var,\n        marginBottom: 0,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    dateTitle: {\n        textAlign: 'end',\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentLeft: {\n        display: 'flex',\n        minHeight: '90px',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { TagPathsType } from 'api/tags/tag';\nimport { ExportsLink } from 'components/drawers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Currency } from 'routes/components/currency';\nimport { GroupBy } from 'routes/views/components/groupBy';\nimport { filterProviders } from 'routes/views/utils/providers';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedOciReportItems';\nimport { getSinceDateRangeString } from 'utils/dates';\nimport { formatCurrency } from 'utils/format';\nimport { styles } from './detailsHeader.styles';\nconst groupByOptions = [\n    { label: 'payer_tenant_id', value: 'payer_tenant_id' },\n    { label: 'product_service', value: 'product_service' },\n    { label: 'region', value: 'region' },\n];\nconst tagPathsType = TagPathsType.oci;\nclass DetailsHeaderBase extends React.Component {\n    render() {\n        const { currency, groupBy, isExportsFeatureEnabled, onCurrencySelected, onGroupBySelected, providers, providersError, report, intl, } = this.props;\n        const showContent = report && !providersError && providers && providers.meta && providers.meta.count > 0;\n        const hasCost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.ociDetailsTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(\"div\", { style: styles.headerContentLeft },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: !showContent, onSelected: onGroupBySelected, options: groupByOptions, showTags: true, tagPathsType: tagPathsType })),\n                showContent && (React.createElement(\"div\", null,\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: TitleSizes['4xl'] }, formatCurrency(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD')),\n                    React.createElement(\"div\", { style: styles.dateTitle }, getSinceDateRangeString()))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        providers: filterProviders(providers, ProviderType.oci),\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n    };\n});\nconst DetailsHeader = injectIntl(connect(mapStateToProps, {})(DetailsHeaderBase));\nexport { DetailsHeader };\n","import 'routes/views/details/components/dataTable/dataTable.scss';\nimport { ReportPathsType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { Actions } from 'routes/views/details/components/actions';\nimport { DataTable } from 'routes/views/details/components/dataTable';\nimport { styles } from 'routes/views/details/components/dataTable/dataTable.styles';\nimport { getBreakdownPath } from 'routes/views/utils/paths';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getForDateRangeString, getNoDataForDateRangeString } from 'utils/dates';\nimport { formatCurrency, formatPercentage } from 'utils/format';\nimport { formatPath } from 'utils/paths';\nimport { noPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nconst reportPathsType = ReportPathsType.oci;\nclass DetailsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { groupBy, groupByTagKey, intl, isAllSelected, report, router, selectedItems } = this.props;\n            if (!report) {\n                return;\n            }\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: (groupByTagKey ? groupByTagKey : groupBy),\n            });\n            const columns = groupByTagKey\n                ? [\n                    {\n                        name: '',\n                    },\n                    {\n                        name: intl.formatMessage(messages.tagNames),\n                    },\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign({ orderBy: groupBy, name: intl.formatMessage(messages.detailsResourceNames, { value: groupBy }) }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ];\n            computedItems.map((item, index) => {\n                const cost = this.getTotalCost(item, index);\n                const label = item && item.label !== null ? item.label : '';\n                const monthOverMonth = this.getMonthOverMonthCost(item, index);\n                const isDisabled = label === `${noPrefix}${groupBy}` || label === `${noPrefix}${groupByTagKey}`;\n                const desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                const actions = this.getActions(item, isDisabled);\n                const name = isDisabled ? label : (React.createElement(Link, { to: getBreakdownPath({\n                        basePath: formatPath(routes.ociDetailsBreakdown.path),\n                        description: item.id,\n                        groupBy,\n                        id: item.id,\n                        router,\n                        title: label.toString(),\n                    }) }, label));\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: (React.createElement(\"div\", null,\n                                name,\n                                desc)),\n                        },\n                        { value: monthOverMonth },\n                        { value: cost, style: styles.managedColumn },\n                        { value: actions },\n                    ],\n                    isOpen: false,\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                    selectionDisabled: isDisabled,\n                });\n            });\n            this.setState({\n                columns,\n                rows,\n            });\n        };\n        this.getActions = (item, isDisabled) => {\n            const { groupBy, reportQueryString } = this.props;\n            return (React.createElement(Actions, { groupBy: groupBy, isDisabled: isDisabled, item: item, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getMonthOverMonthCost = (item, index) => {\n            const { intl } = this.props;\n            const value = formatCurrency(Math.abs(item.cost.total.value - item.delta_value), item.cost.total.units);\n            const percentage = item.delta_percent !== null ? formatPercentage(Math.abs(item.delta_percent)) : 0;\n            const showPercentage = !(percentage === 0 || percentage === '0.00');\n            const showValue = item.delta_percent !== null; // Workaround for https://github.com/project-koku/koku/issues/1395\n            let iconOverride;\n            if (showPercentage) {\n                iconOverride = 'iconOverride';\n                if (item.delta_percent !== null && item.delta_value < 0) {\n                    iconOverride += ' decrease';\n                }\n                if (item.delta_percent !== null && item.delta_value > 0) {\n                    iconOverride += ' increase';\n                }\n            }\n            if (!showValue) {\n                return getNoDataForDateRangeString();\n            }\n            else {\n                return (React.createElement(\"div\", { className: \"monthOverMonthOverride\" },\n                    React.createElement(\"div\", { className: iconOverride, key: `month-over-month-cost-${index}` },\n                        showPercentage ? intl.formatMessage(messages.percent, { value: percentage }) : React.createElement(EmptyValueState, null),\n                        showPercentage && item.delta_percent !== null && item.delta_value > 0 && (React.createElement(\"span\", { className: \"fa fa-sort-up\", style: styles.infoArrow, key: `month-over-month-icon-${index}` })),\n                        showPercentage && item.delta_percent !== null && item.delta_value < 0 && (React.createElement(\"span\", { className: \"fa fa-sort-down\", style: Object.assign(Object.assign({}, styles.infoArrow), styles.infoArrowDesc), key: `month-over-month-icon-${index}` }))),\n                    React.createElement(\"div\", { style: styles.infoDescription, key: `month-over-month-info-${index}` }, getForDateRangeString(value))));\n            }\n        };\n        this.getTotalCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.cost.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.cost.total.value, item.cost.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport || prevProps.selectedItems !== selectedItems) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { isLoading, onSelected, onSort, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, isLoading: isLoading, onSelected: onSelected, onSort: onSort, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst DetailsTable = injectIntl(withRouter(DetailsTableBase));\nexport { DetailsTable };\n","import { getQuery } from 'api/queries/ociQuery';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType, TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { isEqual } from 'utils/equal';\nimport { tagKey } from 'utils/props';\nconst tagType = TagType.tag;\nconst tagPathsType = TagPathsType.oci;\nexport class DetailsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { intl, tagReport } = this.props;\n            const options = [\n                {\n                    name: intl.formatMessage(messages.filterByValues, { value: 'payer_tenant_id' }),\n                    key: 'payer_tenant_id',\n                },\n                {\n                    name: intl.formatMessage(messages.filterByValues, { value: 'product_service' }),\n                    key: 'product_service',\n                },\n                {\n                    name: intl.formatMessage(messages.filterByValues, { value: 'region' }),\n                    key: 'region',\n                },\n            ];\n            if (tagReport && tagReport.data && tagReport.data.length) {\n                options.push({ name: intl.formatMessage(messages.filterByValues, { value: tagKey }), key: tagKey });\n            }\n            return options;\n        };\n        this.updateReport = () => {\n            const { fetchTag, tagQueryString } = this.props;\n            fetchTag(tagPathsType, tagType, tagQueryString);\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        }, () => {\n            this.updateReport();\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { query, tagReport } = this.props;\n        if (!isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            }, () => {\n                this.updateReport();\n            });\n        }\n        else if (query && !isEqual(query, prevProps.query)) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { groupBy, isAllSelected, isDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onExportClicked, onFilterAdded, onFilterRemoved, pagination, query, selectedItems, tagReport, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, groupBy: groupBy, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onExportClicked: onExportClicked, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.oci, selectedItems: selectedItems, showBulkSelect: true, showExcludes: true, showExport: true, showFilter: true, tagReport: tagReport, tagPathsType: tagPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        key_only: true,\n        limit: 1000,\n    });\n    const tagReport = tagSelectors.selectTag(state, tagPathsType, tagType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagPathsType, tagType, tagQueryString);\n    return {\n        tagReportFetchStatus,\n        tagReport,\n        tagQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst DetailsToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsToolbarBase);\nconst DetailsToolbar = injectIntl(DetailsToolbarConnect);\nexport { DetailsToolbar };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    ociDetails: {\n        minHeight: '100%',\n    },\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    toolbarContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getQuery, parseQuery } from 'api/queries/ociQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoData } from 'routes/state/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { ExportModal } from 'routes/views/components/export';\nimport { getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { handleOnCurrencySelected, handleOnFilterAdded, handleOnFilterRemoved, handleOnPerPageSelect, handleOnSetPage, handleOnSort, } from 'routes/views/utils/handles';\nimport { filterProviders, hasCurrentMonthData } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedOciReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getCurrency } from 'utils/localStorage';\nimport { noPrefix, tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { DetailsHeader } from './detailsHeader';\nimport { DetailsTable } from './detailsTable';\nimport { DetailsToolbar } from './detailsToolbar';\nimport { styles } from './ociDetails.styles';\nconst baseQuery = {\n    filter: {\n        limit: 10,\n        offset: 0,\n    },\n    exclude: {},\n    filter_by: {},\n    group_by: {\n        payer_tenant_id: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst reportType = ReportType.cost;\nconst reportPathsType = ReportPathsType.oci;\nclass OciDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            isAllSelected: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey || groupById,\n            });\n        };\n        this.getExportModal = (computedItems) => {\n            const { query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `${noPrefix}${groupById}` || item.label === `${noPrefix}${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, report, router } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = Math.trunc(offset / limit + 1);\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handleOnPerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleOnSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.oci),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { query, report, reportFetchStatus, reportQueryString, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return (React.createElement(DetailsTable, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, groupByTagKey: groupByTagKey, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending) => handleOnSort(query, router, sortType, isSortAscending), report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, router, report } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(DetailsToolbar, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: computedItems.length === 0 || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onExportClicked: this.handleExportModalOpen, onFilterAdded: filter => handleOnFilterAdded(query, router, filter), onFilterRemoved: filter => handleOnFilterRemoved(query, router, filter), pagination: this.getPagination(isDisabled), query: query, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            const groupByKey = groupBy;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: '*',\n                }, order_by: undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.updateReport = () => {\n            const { fetchReport, reportQueryString } = this.props;\n            fetchReport(reportPathsType, reportType, reportQueryString);\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { currency, intl, providers, providersFetchStatus, query, report, reportError, reportFetchStatus, router, } = this.props;\n        const computedItems = this.getComputedItems();\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const isDisabled = computedItems.length === 0;\n        const title = intl.formatMessage(messages.ociDetailsTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.inProgress) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.complete) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: ProviderType.oci, title: title });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.ociDetails },\n            React.createElement(DetailsHeader, { currency: currency, groupBy: groupById, onCurrencySelected: value => handleOnCurrencySelected(query, router, value), onGroupBySelected: this.handleGroupBySelected, report: report }),\n            React.createElement(\"div\", { style: styles.content },\n                React.createElement(\"div\", { style: styles.toolbarContainer }, this.getToolbar(computedItems)),\n                this.getExportModal(computedItems),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const currency = getCurrency();\n    const query = Object.assign(Object.assign({}, baseQuery), queryFromRoute);\n    const reportQuery = {\n        currency,\n        delta: 'cost',\n        exclude: query.exclude,\n        filter: Object.assign(Object.assign({}, query.filter), { resolution: 'monthly', time_scope_units: 'month', time_scope_value: -1 }),\n        filter_by: query.filter_by,\n        group_by: query.group_by,\n        order_by: query.order_by,\n    };\n    const reportQueryString = getQuery(reportQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        currency,\n        providers: filterProviders(providers, ProviderType.oci),\n        providersError,\n        providersFetchStatus,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(OciDetails)));\n","import { addFilterToQuery, removeFilterFromQuery } from './filter';\nimport { getRouteForQuery } from './query';\nexport const handleSelected = (query, router, value, reset = false) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    router.navigate(getRouteForQuery(newQuery, router.location, reset), { replace: true }); // Don't reset pagination\n};\nexport const handleOnCurrencySelected = (query, router, value, reset = false) => {\n    handleSelected(query, router, value, reset);\n};\nexport const handleOnCostTypeSelected = (query, router, value, reset = false) => {\n    handleSelected(query, router, value, reset);\n};\nexport const handleOnCostDistributionSelected = (query, router, value, reset = false) => {\n    const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { order_by: undefined });\n    handleSelected(newQuery, router, value, reset);\n};\nexport const handleOnFilterAdded = (query, router, filter) => {\n    const filteredQuery = addFilterToQuery(query, filter);\n    router.navigate(getRouteForQuery(filteredQuery, router.location, true), { replace: true });\n};\nexport const handleOnFilterRemoved = (query, router, filter) => {\n    const filteredQuery = removeFilterFromQuery(query, filter);\n    router.navigate(getRouteForQuery(filteredQuery, router.location, true), { replace: true });\n};\nexport const handleOnPerPageSelect = (query, router, perPage) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    newQuery.filter = Object.assign(Object.assign({}, query.filter), { limit: perPage });\n    const filteredQuery = getRouteForQuery(newQuery, router.location, true);\n    router.navigate(filteredQuery, { replace: true });\n};\nexport const handleOnSetPage = (query, router, report, pageNumber) => {\n    const limit = report && report.meta && report.meta.filter && report.meta.filter.limit ? report.meta.filter.limit : 10;\n    const offset = pageNumber * limit - limit;\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    newQuery.filter = Object.assign(Object.assign({}, query.filter), { offset });\n    const filteredQuery = getRouteForQuery(newQuery, router.location);\n    router.navigate(filteredQuery, { replace: true });\n};\nexport const handleOnSort = (query, router, sortType, isSortAscending, date = undefined) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    newQuery.order_by = {};\n    newQuery.order_by[sortType] = isSortAscending ? 'asc' : 'desc';\n    if (date) {\n        newQuery.order_by.date = date;\n    }\n    const filteredQuery = getRouteForQuery(newQuery, router.location);\n    router.navigate(filteredQuery, { replace: true });\n};\n","// eslint-disable-next-line no-shadow\nvar DataType;\n(function (DataType) {\n    DataType[\"currentMonthData\"] = \"current_month_data\";\n    DataType[\"hasData\"] = \"has_data\";\n    DataType[\"previousMonthData\"] = \"previous_month_data\";\n})(DataType || (DataType = {}));\n// Returns the OCP provider matching the given infrastructure uuid\nconst _getOcpProvider = (ocpProviders, uuid) => {\n    let result;\n    if (ocpProviders && ocpProviders.data) {\n        for (const provider of ocpProviders.data) {\n            if (provider.infrastructure && provider.infrastructure.uuid === uuid) {\n                result = provider;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Returns new Provider matching the given provider type\n//\n// See https://issues.redhat.com/browse/COST-2202\nexport const filterProviders = (providers, sourceType) => {\n    if (!providers) {\n        return providers;\n    }\n    const data = providers.data.filter(provider => provider.source_type.toLowerCase() === sourceType);\n    const meta = Object.assign(Object.assign({}, providers.meta), { count: data.length });\n    return Object.assign(Object.assign({}, providers), { meta,\n        data });\n};\n// Ensure at least one source provider has data available\nconst _hasData = (providers, datumType) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            if (provider[datumType]) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one cloud source provider has data available\nconst _hasCloudData = (providers, ocpProviders, dataType) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            const ocpProvider = _getOcpProvider(ocpProviders, provider.uuid);\n            // Ensure AWS provider is filtered by OpenShift and has OCP data\n            if (ocpProvider && ocpProvider[dataType]) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one cloud source provider\nconst _hasCloudProvider = (providers, ocpProviders) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            const ocpProvider = _getOcpProvider(ocpProviders, provider.uuid);\n            // Ensure AWS provider is filtered by OpenShift\n            if (ocpProvider) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one cloud source provider has data available for the current month (e.g., \"AWS filtered by OpenShift\")\nexport const hasCloudCurrentMonthData = (providers, ocpProviders) => {\n    return _hasCloudData(providers, ocpProviders, DataType.currentMonthData);\n};\n// Ensure at least one cloud source provider has data available (e.g., \"AWS filtered by OpenShift\")\nexport const hasCloudData = (providers, ocpProviders) => {\n    return _hasCloudData(providers, ocpProviders, DataType.hasData);\n};\n// Ensure at least one cloud source provider has data available for the previous month (e.g., \"AWS filtered by OpenShift\")\nexport const hasCloudPreviousMonthData = (providers, ocpProviders) => {\n    return _hasCloudData(providers, ocpProviders, DataType.previousMonthData);\n};\n// Ensure at least one cloud source provider (e.g., \"AWS filtered by OpenShift\"), regardless if there is OCP data\nexport const hasCloudProvider = (providers, ocpProviders) => {\n    return _hasCloudProvider(providers, ocpProviders);\n};\n// Ensure at least one source provider has data available for the current month\nexport const hasCurrentMonthData = (providers) => {\n    return _hasData(providers, DataType.currentMonthData);\n};\n// Ensure at least one source provider has data available\nexport const hasData = (providers) => {\n    return _hasData(providers, DataType.hasData);\n};\n// Ensure at least one source provider has data available for the previous month\nexport const hasPreviousMonthData = (providers) => {\n    return _hasData(providers, DataType.previousMonthData);\n};\n","import { getQueryRoute } from 'api/queries/query';\nexport const getRouteForQuery = (query, location, reset = false) => {\n    // Reset pagination\n    if (reset) {\n        if (query.filter && query.filter.offset !== undefined) {\n            query.filter = Object.assign(Object.assign({}, query.filter), { offset: 0 });\n        }\n        if (query.offset !== undefined) {\n            query.offset = 0;\n        }\n    }\n    return `${location.pathname}?${getQueryRoute(query)}`;\n};\n"],"names":["ExternalLinkAltIconConfig","name","height","width","svgPath","yOffset","xOffset","ExternalLinkAltIcon","exports","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","EmptyState","variant","EmptyStateVariant","className","children","EmptyStateIcon","icon","ExclamationCircleIcon","Title","headingLevel","size","EmptyStateBody","href","target","rel","getProvidersQuery","query","stringify","encode","indices","styles","currencySelector","display","alignItems","currencyLabel","marginBottom","marginRight","whiteSpace","currencyOptions","label","messages","value","CurrencyBase","constructor","super","defaultState","isSelectOpen","state","getSelect","currency","isDisabled","showLabel","props","selectOptions","getSelectOptions","selection","find","option","Select","undefined","id","isOpen","onSelect","handleSelect","onToggle","handleToggle","selections","SelectVariant","map","SelectOption","key","intl","options","push","toString","formatMessage","units","event","isLocalStorage","setState","render","style","mapStateToProps","CurrencyConnect","connect","injectIntl","NoDataStateBase","showReload","Button","onClick","window","location","reload","NoDataState","title","PageHeader","PageHeaderTitle","PageSection","src","alt","NoOptimizationsStateBase","NoOptimizationsState","iconSpacer","marginLeft","viewSources","marginTop","global_spacer_lg","NoProvidersStateBase","getDocLink","textKey","urlKey","getRouteToSources","providerType","docUrlKey","descKey","titleKey","component","NoProvidersState","Unavailable","DetailsActionsBase","stateProps","dispatchProps","isDropdownOpen","isExportModalOpen","getExportModal","groupBy","item","reportPathsType","reportQueryString","count","items","onClose","handleExportModalClose","handleExportModalOpen","handleOnSelect","handleOnToggle","bind","showPriceListOption","source_uuid","redirectToCostModel","router","DropdownItem","unshift","includes","Dropdown","toggle","KebabToggle","isPlain","position","dropdownItems","mapDispatchToProps","costModels","DetailsActionsConnect","costColumn","textAlign","justifyContent","paddingRight","defaultLabel","minWidth","emptyState","backgroundColor","paddingTop","infoArrow","infoArrowDesc","bottom","infoDescription","color","fontSize","lastReported","lastReportedColumn","managedColumn","nameColumn","DataTable","getEmptyState","isOptimizations","queryFromRoute","search","filter_by","val","values","filter","showMargin","getSortBy","index","columns","orderBy","direction","order_by","getSortParams","sortBy","onSort","handleOnSort","columnIndex","isSelected","rowId","onSelected","rows","newRows","row","selected","SortByDirection","handleOnRowClick","rowIndex","onRowClick","isLoading","TableComposable","gridBreakPoint","hasSelectableRowCaption","TableVariant","Thead","Tr","col","Th","modifier","sort","isSortable","Tbody","Td","colSpan","Bullseye","Spinner","isSelectable","isHoverable","isRowSelected","_event","cells","cellIndex","dataLabel","isActionCell","select","disable","selectionDisabled","getIdKeyForGroupBy","payer_tenant_id","region","product_service","costValue","costLabelUnit","global_FontSize_sm","global_Color_100","dateTitle","header","global_BackgroundColor_light_100","padding","headerContent","headerContentLeft","minHeight","headerContentRight","paddingBottom","global_spacer_sm","groupByOptions","tagPathsType","DetailsHeaderBase","isExportsFeatureEnabled","onCurrencySelected","onGroupBySelected","providers","providersError","report","showContent","meta","hasCost","total","cost","TitleSizes","showTags","format","providersQueryString","providersFetchStatus","featureFlags","DetailsHeader","DetailsTableBase","initDatum","groupByTagKey","isAllSelected","selectedItems","computedItems","idKey","getTotalCost","monthOverMonth","getMonthOverMonthCost","desc","actions","getActions","Link","to","basePath","routes","description","Math","abs","delta_value","percentage","delta_percent","showPercentage","showValue","iconOverride","percentValue","toFixed","componentDidMount","componentDidUpdate","prevProps","currentReport","data","JSON","DetailsTable","tagType","DetailsToolbarBase","getCategoryOptions","tagReport","updateReport","fetchTag","tagQueryString","categoryOptions","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onExportClicked","onFilterAdded","onFilterRemoved","pagination","resourcePathsType","showBulkSelect","showExcludes","showExport","showFilter","resolution","time_scope_units","time_scope_value","key_only","limit","tagReportFetchStatus","DetailsToolbarConnect","DetailsToolbar","ociDetails","content","paginationContainer","global_spacer_md","tableContainer","toolbarContainer","baseQuery","offset","exclude","group_by","reportType","OciDetails","getComputedItems","groupById","isAllItems","getPagination","isBottom","page","trunc","Pagination","isCompact","itemCount","onPerPageSelect","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","PaginationVariant","widgetId","getTable","reportFetchStatus","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","action","handleGroupBySelected","groupByKey","newQuery","parse","navigate","replace","newItems","fetchReport","prevState","reportError","noReport","noLocation","reportQuery","delta","reset","handleOnCurrencySelected","handleOnCostTypeSelected","handleOnCostDistributionSelected","handleOnFilterAdded","filteredQuery","handleOnFilterRemoved","handleOnPerPageSelect","handleOnSetPage","date","DataType","_getOcpProvider","ocpProviders","uuid","result","provider","infrastructure","filterProviders","sourceType","source_type","toLowerCase","_hasData","datumType","_hasCloudData","dataType","ocpProvider","hasCloudCurrentMonthData","currentMonthData","hasCloudData","hasData","hasCloudPreviousMonthData","previousMonthData","hasCloudProvider","_hasCloudProvider","hasCurrentMonthData","hasPreviousMonthData","getRouteForQuery","pathname"],"sourceRoot":""}