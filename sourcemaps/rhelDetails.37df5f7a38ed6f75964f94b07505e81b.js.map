{"version":3,"file":"js/rhelDetails.2f849f88d87b8e64ead0.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/external-link-alt-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_FontSize_md.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_xs.js","webpack:///./src/api/queries/providersQuery.ts","webpack:///./src/routes/components/currency/currency.styles.ts","webpack:///./src/routes/components/currency/currency.tsx","webpack:///./src/routes/state/noData/noDataState.tsx","webpack:///./src/routes/state/noData/noData.tsx","webpack:///./src/routes/components/icons/optimizationIcon/optimizationIcon.tsx","webpack:///./src/routes/state/noOptimizations/noOptimizationsState.tsx","webpack:///./src/routes/components/icons/costIcon/costIcon.tsx","webpack:///./src/routes/state/noProviders/noProvidersState.styles.ts","webpack:///./src/routes/state/noProviders/noProvidersState.tsx","webpack:///./src/routes/state/noProviders/noProviders.tsx","webpack:///./src/routes/state/notAvailable/notAvailable.tsx","webpack:///./src/routes/views/details/components/actions/actions.tsx","webpack:///./src/routes/views/details/components/columnManagement/columnManagementModal.tsx","webpack:///./src/routes/views/details/components/dataTable/dataTable.styles.ts","webpack:///./src/routes/views/details/components/dataTable/dataTable.tsx","webpack:///./src/utils/computedReport/getComputedRhelReportItems.ts","webpack:///./src/routes/views/details/rhelDetails/detailsHeader.styles.ts","webpack:///./src/routes/views/details/rhelDetails/detailsHeader.tsx","webpack:///./src/routes/views/details/rhelDetails/detailsTable.tsx","webpack:///./src/routes/views/details/rhelDetails/detailsToolbar.tsx","webpack:///./src/routes/views/details/rhelDetails/rhelDetails.styles.ts","webpack:///./src/routes/views/details/rhelDetails/rhelDetails.tsx","webpack:///./src/routes/views/utils/handles.ts","webpack:///./src/routes/views/utils/providers.ts","webpack:///./src/routes/views/utils/query.ts"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExternalLinkAltIcon = createIcon(ExternalLinkAltIconConfig);\n\nexport default ExternalLinkAltIcon;","\"use strict\";\nexports.__esModule = true;\nexports.global_FontSize_md = {\n  \"name\": \"--pf-global--FontSize--md\",\n  \"value\": \"1rem\",\n  \"var\": \"var(--pf-global--FontSize--md)\"\n};\nexports[\"default\"] = exports.global_FontSize_md;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_xs = {\n  \"name\": \"--pf-global--spacer--xs\",\n  \"value\": \"0.25rem\",\n  \"var\": \"var(--pf-global--spacer--xs)\"\n};\nexports[\"default\"] = exports.global_spacer_xs;","import { parse, stringify } from 'qs';\nexport function getProvidersQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseProvidersQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    currencySelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    currencyLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n        whiteSpace: 'nowrap',\n    },\n};\n","import './currency.scss';\nimport { Select, SelectOption, SelectVariant, Title } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { invalidateSession, setCurrency } from 'utils/localStorage';\nimport { styles } from './currency.styles';\nexport const currencyOptions = [\n    { label: messages.currencyOptions, value: 'AUD' },\n    { label: messages.currencyOptions, value: 'CAD' },\n    { label: messages.currencyOptions, value: 'CHF' },\n    { label: messages.currencyOptions, value: 'CNY' },\n    { label: messages.currencyOptions, value: 'DKK' },\n    { label: messages.currencyOptions, value: 'EUR' },\n    { label: messages.currencyOptions, value: 'GBP' },\n    { label: messages.currencyOptions, value: 'HKD' },\n    { label: messages.currencyOptions, value: 'JPY' },\n    { label: messages.currencyOptions, value: 'NOK' },\n    { label: messages.currencyOptions, value: 'NZD' },\n    { label: messages.currencyOptions, value: 'SEK' },\n    { label: messages.currencyOptions, value: 'SGD' },\n    { label: messages.currencyOptions, value: 'USD' },\n    { label: messages.currencyOptions, value: 'ZAR' },\n];\nclass CurrencyBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isSelectOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getSelect = () => {\n            const { currency, isDisabled } = this.props;\n            const { isSelectOpen } = this.state;\n            const selectOptions = this.getSelectOptions();\n            const selection = selectOptions.find((option) => option.value === currency);\n            return (React.createElement(Select, { className: \"currencyOverride\", id: \"currencySelect\", isDisabled: isDisabled, isOpen: isSelectOpen, onSelect: this.handleSelect, onToggle: this.handleToggle, selections: selection, variant: SelectVariant.single }, selectOptions.map(option => (React.createElement(SelectOption, { key: option.value, value: option })))));\n        };\n        this.getSelectOptions = () => {\n            const { intl } = this.props;\n            const options = [];\n            currencyOptions.map(option => {\n                options.push({\n                    toString: () => intl.formatMessage(option.label, { units: option.value }),\n                    value: option.value,\n                });\n            });\n            return options;\n        };\n        this.handleSelect = (event, selection) => {\n            const { onSelect } = this.props;\n            setCurrency(selection.value); // Set currency units via local storage\n            this.setState({\n                isSelectOpen: false,\n            }, () => {\n                if (onSelect) {\n                    onSelect(selection.value);\n                }\n            });\n        };\n        this.handleToggle = isSelectOpen => {\n            this.setState({ isSelectOpen });\n        };\n    }\n    render() {\n        const { intl } = this.props;\n        // Clear local storage value if current session is not valid\n        invalidateSession();\n        return (React.createElement(\"div\", { style: styles.currencySelector },\n            React.createElement(Title, { headingLevel: \"h2\", size: \"md\", style: styles.currencyLabel }, intl.formatMessage(messages.currency)),\n            this.getSelect()));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst CurrencyConnect = connect(mapStateToProps, mapDispatchToProps)(CurrencyBase);\nconst Currency = injectIntl(CurrencyConnect);\nexport default Currency;\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nclass NoDataStateBase extends React.Component {\n    render() {\n        const { intl, showReload = true } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, intl.formatMessage(messages.noDataStateTitle)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(messages.noDataStateDesc)),\n            showReload && (React.createElement(Button, { variant: \"primary\", onClick: () => window.location.reload() }, intl.formatMessage(messages.noDataStateRefresh)))));\n    }\n}\nconst NoDataState = injectIntl(NoDataStateBase);\nexport { NoDataState };\n","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React from 'react';\nimport { NoDataState } from './noDataState';\nconst NoData = ({ showReload, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(NoDataState, { showReload: showReload }))));\n};\nexport default NoData;\n","import './optimizationIcon.scss';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nconst icon = require('./Red_Hat-IT_Optimization-Gray.svg');\nconst OptimizationIcon = ({ className, intl }) => {\n    return (React.createElement(\"img\", { className: `optimization-icon ${className}`, src: icon, alt: intl.formatMessage(messages.optimizations), \"aria-hidden\": \"true\" }));\n};\nexport default injectIntl(OptimizationIcon);\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { OptimizationIcon } from 'routes/components/icons/optimizationIcon';\nclass NoOptimizationsStateBase extends React.Component {\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: OptimizationIcon }),\n            React.createElement(Title, { headingLevel: \"h1\", size: \"lg\" }, intl.formatMessage(messages.noOptimizationsTitle)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(messages.noOptimizationsDesc))));\n    }\n}\nconst NoOptimizationsState = injectIntl(NoOptimizationsStateBase);\nexport { NoOptimizationsState };\n","import './costIcon.scss';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nconst icon = require('./Cost-icon.svg');\nconst CostIcon = ({ className, intl }) => {\n    return (React.createElement(\"img\", { className: `cost-icon ${className}`, src: icon, alt: intl.formatMessage(messages.costManagement), \"aria-hidden\": \"true\" }));\n};\nexport default injectIntl(CostIcon);\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    iconSpacer: {\n        marginLeft: global_spacer_xs.value,\n    },\n    viewSources: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { ProviderType } from 'api/providers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { CostIcon } from 'routes/components/icons/costIcon';\nimport { getReleasePath } from 'utils/paths';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDocLink = (textKey, urlKey) => {\n            const { intl } = this.props;\n            return (React.createElement(\"a\", { href: intl.formatMessage(urlKey), rel: \"noreferrer\", target: \"_blank\" },\n                intl.formatMessage(textKey),\n                React.createElement(\"span\", { style: styles.iconSpacer },\n                    React.createElement(ExternalLinkAltIcon, null))));\n        };\n        this.getRouteToSources = () => {\n            const release = getReleasePath();\n            return `${release}/settings/sources`;\n        };\n    }\n    render() {\n        const { intl, providerType } = this.props;\n        let descKey = messages.noProvidersStateOverviewDesc;\n        let titleKey = messages.noProvidersStateOverviewTitle;\n        let docUrlKey;\n        let icon;\n        let textKey;\n        switch (providerType) {\n            case ProviderType.aws:\n                descKey = messages.noProvidersStateAwsDesc;\n                titleKey = messages.noProvidersStateAwsTitle;\n                break;\n            case ProviderType.azure:\n                descKey = messages.noProvidersStateAzureDesc;\n                titleKey = messages.noProvidersStateAzureTitle;\n                break;\n            case ProviderType.gcp:\n                descKey = messages.noProvidersStateGcpDesc;\n                titleKey = messages.noProvidersStateGcpTitle;\n                break;\n            case ProviderType.ibm:\n                descKey = messages.noProvidersStateIbmDesc;\n                titleKey = messages.noProvidersStateIbmTitle;\n                break;\n            case ProviderType.ocp:\n                descKey = messages.noProvidersStateOcpDesc;\n                docUrlKey = messages.docsAddOcpSources;\n                textKey = messages.noProvidersStateOcpAddSources;\n                titleKey = messages.noProvidersStateOcpTitle;\n                break;\n            default:\n                icon = CostIcon;\n        }\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: icon ? icon : PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h1\", size: \"lg\" }, intl.formatMessage(titleKey)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(descKey)),\n            docUrlKey && textKey ? (React.createElement(\"div\", { style: styles.viewSources }, this.getDocLink(textKey, docUrlKey))) : (React.createElement(Button, { variant: \"primary\", component: \"a\", href: this.getRouteToSources() }, intl.formatMessage(messages.noProvidersStateGetStarted)))));\n    }\n}\nconst NoProvidersState = injectIntl(NoProvidersStateBase);\nexport { NoProvidersState };\n","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React from 'react';\nimport { NoProvidersState } from './noProvidersState';\nconst NoProviders = ({ providerType, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(NoProvidersState, { providerType: providerType }))));\n};\nexport default NoProviders;\n","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Unavailable } from '@redhat-cloud-services/frontend-components/Unavailable';\nimport React from 'react';\nconst NotAvailable = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(Unavailable, null))));\n};\nexport default NotAvailable;\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ExportModal } from 'routes/views/components/export';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nimport { tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, reportPathsType, reportQueryString } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { count: 1, groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, intl, item: { source_uuid }, redirectToCostModel, router, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, intl.formatMessage(messages.detailsActionsExport)),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], router) }, intl.formatMessage(messages.detailsActionsPriceList)));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = injectIntl(withRouter(DetailsActionsConnect));\nexport default Actions;\n","import { Button, ButtonVariant, DataList, DataListCell, DataListCheck, DataListItem, DataListItemCells, DataListItemRow, Modal, ModalVariant, Text, TextContent, TextVariants, } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nexport const initHiddenColumns = (options) => {\n    const hiddenColumns = new Set();\n    options.map(option => {\n        if (option.hidden) {\n            hiddenColumns.add(option.value);\n        }\n    });\n    return hiddenColumns;\n};\nexport class ColumnManagementModalBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            hiddenColumns: initHiddenColumns(this.props.options),\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getHidden = (value) => {\n            const { hiddenColumns } = this.state;\n            const result = new Set(hiddenColumns);\n            if (!result.delete(value)) {\n                result.add(value);\n            }\n            return result;\n        };\n        this.isHidden = (value) => {\n            const { hiddenColumns } = this.state;\n            return hiddenColumns.has(value);\n        };\n        this.handleChange = (checked, event) => {\n            const hiddenColumns = this.getHidden(event.target.id);\n            this.setState({ hiddenColumns });\n        };\n        this.handleClose = () => {\n            // Reset defult state upon close\n            this.setState(Object.assign({}, this.defaultState), () => {\n                this.props.onClose(false);\n            });\n        };\n        this.handleSave = () => {\n            const { hiddenColumns } = this.state;\n            this.props.onSave(hiddenColumns);\n            this.handleClose();\n        };\n        this.selectAll = () => {\n            this.setState({ hiddenColumns: new Set() });\n        };\n    }\n    componentDidUpdate(prevProps) {\n        const { options } = this.props;\n        if (prevProps.options !== options) {\n            const hiddenColumns = initHiddenColumns(options);\n            this.setState({ hiddenColumns });\n        }\n    }\n    render() {\n        const { options, intl } = this.props;\n        return (React.createElement(Modal, { description: React.createElement(TextContent, null,\n                React.createElement(Text, { component: TextVariants.p }, intl.formatMessage(messages.manageColumnsDesc)),\n                React.createElement(Button, { isInline: true, onClick: this.selectAll, variant: \"link\" }, intl.formatMessage(messages.selectAll))), \n            // style={styles.modal}\n            isOpen: this.props.isOpen, onClose: this.handleClose, title: intl.formatMessage(messages.manageColumnsTitle), variant: ModalVariant.medium, actions: [\n                React.createElement(Button, { key: \"save\", onClick: this.handleSave, variant: ButtonVariant.link }, intl.formatMessage(messages.save)),\n                React.createElement(Button, { key: \"cancel\", onClick: this.handleClose, variant: ButtonVariant.link }, intl.formatMessage(messages.cancel)),\n            ] },\n            React.createElement(DataList, { \"aria-label\": intl.formatMessage(messages.manageColumnsAriaLabel), id: \"table-column-management\", isCompact: true }, options.map(option => (React.createElement(DataListItem, { \"aria-labelledby\": option.value, key: option.value },\n                React.createElement(DataListItemRow, null,\n                    React.createElement(DataListCheck, { \"aria-labelledby\": `${option.value}Label`, isChecked: !this.isHidden(option.value), name: option.value, id: option.value, onChange: this.handleChange }),\n                    React.createElement(DataListItemCells, { dataListCells: [\n                            React.createElement(DataListCell, { id: `${option.value}Label`, key: \"table-column-management-item1\" },\n                                React.createElement(\"span\", null, intl.formatMessage(option.label))),\n                            React.createElement(DataListCell, { key: \"table-column-management-item2\" }, option.description && React.createElement(\"span\", null, intl.formatMessage(option.description))),\n                        ] }))))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {};\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst ColumnManagementModalConnect = connect(mapStateToProps, mapDispatchToProps)(ColumnManagementModalBase);\nconst ColumnManagementModal = injectIntl(ColumnManagementModalConnect);\nexport default ColumnManagementModal;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    costColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingRight: 0,\n    },\n    defaultLabel: {\n        minWidth: '63px',\n    },\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    lastReported: {\n        textAlign: 'right',\n        paddingRight: '40px',\n    },\n    lastReportedColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    managedColumn: {\n        textAlign: 'right',\n    },\n    nameColumn: {\n        width: '1%',\n    },\n};\n","import './dataTable.scss';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport { parseQuery } from 'api/queries/ocpQuery';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { NoOptimizationsState } from 'routes/state/noOptimizations/noOptimizationsState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass DataTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { intl, isOptimizations, router } = this.props;\n            const queryFromRoute = parseQuery(router.location.search);\n            if (queryFromRoute.filter_by) {\n                for (const val of Object.values(queryFromRoute.filter_by)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            if (isOptimizations) {\n                return React.createElement(NoOptimizationsState, null);\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, router } = this.props;\n            const orderBy = columns[index].orderBy;\n            const queryFromRoute = parseQuery(router.location.search);\n            const direction = queryFromRoute && queryFromRoute.order_by && queryFromRoute.order_by[orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected, rows } = this.props;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnRowClick = (event, rowIndex) => {\n            const { onRowClick, rows } = this.props;\n            rows.map(row => (row.selected = false));\n            rows[rowIndex].selected = true;\n            this.setState({ rows }, () => {\n                if (onRowClick) {\n                    onRowClick(event, rowIndex);\n                }\n            });\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isLoading, isOptimizations, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.dataTableAriaLabel), className: \"tableOverride\", gridBreakPoint: \"grid-2xl\", hasSelectableRowCaption: isOptimizations },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { isSelectable: isOptimizations, isHoverable: isOptimizations, isRowSelected: isOptimizations && row.selected, onRowClick: isOptimizations ? _event => this.handleOnRowClick(_event, rowIndex) : undefined, key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 && !isOptimizations ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${cellIndex}-${rowIndex}`, modifier: \"nowrap\", select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    }, style: item.style })) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", isActionCell: !isOptimizations && cellIndex === row.cells.length - 1, style: item.style }, item.value))))))))),\n            rows.length === 0 && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(DataTable));\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costValue: {\n        marginTop: global_spacer_lg.var,\n        marginBottom: 0,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    dateTitle: {\n        textAlign: 'end',\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentLeft: {\n        display: 'flex',\n        minHeight: '90px',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    info: {\n        verticalAlign: 'middle',\n    },\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes, Tooltip } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { TagPathsType } from 'api/tags/tag';\nimport { ExportsLink } from 'components/drawers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Currency } from 'routes/components/currency';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { GroupBy } from 'routes/views/components/groupBy';\nimport { filterProviders } from 'routes/views/utils/providers';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedRhelReportItems';\nimport { getSinceDateRangeString } from 'utils/dates';\nimport { formatCurrency } from 'utils/format';\nimport { styles } from './detailsHeader.styles';\nconst groupByOptions = [\n    { label: 'cluster', value: 'cluster' },\n    { label: 'node', value: 'node' },\n    { label: 'project', value: 'project' },\n];\nconst tagPathsType = TagPathsType.rhel;\nclass DetailsHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { currency, groupBy, isExportsFeatureEnabled, onCurrencySelected, onGroupBySelected, providers, providersError, report, intl, } = this.props;\n        const showContent = report && !providersError && providers && providers.meta && providers.meta.count > 0;\n        let cost = React.createElement(EmptyValueState, null);\n        let supplementaryCost = React.createElement(EmptyValueState, null);\n        let infrastructureCost = React.createElement(EmptyValueState, null);\n        if (report && report.meta && report.meta.total) {\n            const hasCost = report.meta.total.cost && report.meta.total.cost.total;\n            const hasSupplementaryCost = report.meta.total.supplementary && report.meta.total.supplementary.total;\n            const hasInfrastructureCost = report.meta.total.infrastructure && report.meta.total.infrastructure.total;\n            cost = formatCurrency(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD');\n            supplementaryCost = formatCurrency(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost ? report.meta.total.supplementary.total.units : 'USD');\n            infrastructureCost = formatCurrency(hasInfrastructureCost ? report.meta.total.infrastructure.total.value : 0, hasInfrastructureCost ? report.meta.total.infrastructure.total.units : 'USD');\n        }\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.rhelDetailsTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(\"div\", { style: styles.headerContentLeft },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: !showContent, onSelected: onGroupBySelected, options: groupByOptions, showTags: true, tagPathsType: tagPathsType })),\n                showContent && (React.createElement(\"div\", null,\n                    React.createElement(Tooltip, { content: intl.formatMessage(messages.dashboardTotalCostTooltip, {\n                            infrastructureCost,\n                            supplementaryCost,\n                        }), enableFlip: true },\n                        React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: TitleSizes['4xl'] }, cost)),\n                    React.createElement(\"div\", { style: styles.dateTitle }, getSinceDateRangeString()))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        providers: filterProviders(providers, ProviderType.rhel),\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n    };\n});\nconst DetailsHeader = injectIntl(connect(mapStateToProps, {})(DetailsHeaderBase));\nexport { DetailsHeader };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport 'routes/views/details/components/dataTable/dataTable.scss';\nimport { Label } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { ReportPathsType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { Actions } from 'routes/views/details/components/actions';\nimport { DataTable } from 'routes/views/details/components/dataTable';\nimport { styles } from 'routes/views/details/components/dataTable/dataTable.styles';\nimport { getBreakdownPath } from 'routes/views/utils/paths';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getForDateRangeString, getNoDataForDateRangeString } from 'utils/dates';\nimport { formatCurrency, formatPercentage } from 'utils/format';\nimport { formatPath } from 'utils/paths';\nimport { noPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nexport const DetailsTableColumnIds = {\n    infrastructure: 'infrastructure',\n    monthOverMonth: 'monthOverMonth',\n    supplementary: 'supplementary',\n};\nconst reportPathsType = ReportPathsType.rhel;\nclass DetailsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { groupBy, groupByTagKey, hiddenColumns, intl, isAllSelected, report, router, selectedItems } = this.props;\n            if (!report) {\n                return;\n            }\n            const showDefaultProject = groupBy === 'project';\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: (groupByTagKey ? groupByTagKey : groupBy),\n            });\n            const columns = groupByTagKey\n                ? [\n                    // Sorting with tag keys is not supported\n                    {\n                        name: '',\n                    },\n                    {\n                        name: intl.formatMessage(messages.tagNames),\n                        style: groupBy === 'project' ? styles.nameColumn : undefined,\n                    },\n                    {\n                        hidden: !showDefaultProject,\n                        name: '', // Default column\n                    },\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    {\n                        id: DetailsTableColumnIds.infrastructure,\n                        name: intl.formatMessage(messages.rhelDetailsInfrastructureCost),\n                        style: styles.managedColumn,\n                    },\n                    {\n                        id: DetailsTableColumnIds.supplementary,\n                        name: intl.formatMessage(messages.rhelDetailsSupplementaryCost),\n                        style: styles.managedColumn,\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign(Object.assign({ orderBy: groupBy, name: intl.formatMessage(messages.detailsResourceNames, { value: groupBy }) }, (computedItems.length && { isSortable: true })), { style: groupBy === 'project' ? styles.nameColumn : undefined }),\n                    {\n                        hidden: !showDefaultProject,\n                        name: '', // Default column\n                    },\n                    {\n                        id: DetailsTableColumnIds.monthOverMonth,\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    {\n                        id: DetailsTableColumnIds.infrastructure,\n                        orderBy: 'infrastructure_cost',\n                        name: intl.formatMessage(messages.rhelDetailsInfrastructureCost),\n                        style: styles.managedColumn,\n                        // Sort by infrastructure_cost is not supported -- https://github.com/project-koku/koku/issues/796\n                        // ...(computedItems.length && { isSortable: true }),\n                    },\n                    {\n                        id: DetailsTableColumnIds.supplementary,\n                        orderBy: 'supplementary_cost',\n                        name: intl.formatMessage(messages.rhelDetailsSupplementaryCost),\n                        style: styles.managedColumn,\n                        // Sort by supplementary_cost is not supported -- https://github.com/project-koku/koku/issues/796\n                        // ...(computedItems.length && { isSortable: true }),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ];\n            computedItems.map((item, index) => {\n                const cost = this.getTotalCost(item, index);\n                const label = item && item.label !== null ? item.label : '';\n                const monthOverMonth = this.getMonthOverMonthCost(item, index);\n                const supplementaryCost = this.getSupplementaryCost(item, index);\n                const InfrastructureCost = this.getInfrastructureCost(item, index);\n                const desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                const isDisabled = label === `${noPrefix}${groupBy}` || label === `${noPrefix}${groupByTagKey}`;\n                const actions = this.getActions(item, isDisabled);\n                const name = isDisabled ? label : (React.createElement(Link, { to: getBreakdownPath({\n                        basePath: formatPath(routes.rhelDetailsBreakdown.path),\n                        description: item.id,\n                        groupBy,\n                        id: item.id,\n                        router,\n                        title: label.toString(),\n                    }) }, label));\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: (React.createElement(React.Fragment, null,\n                                React.createElement(\"div\", null, name),\n                                React.createElement(\"div\", { style: styles.infoDescription }, desc))),\n                        },\n                        {\n                            hidden: !showDefaultProject,\n                            value: item.default_project ? (React.createElement(\"div\", null,\n                                React.createElement(Label, { variant: \"outline\", color: \"green\" }, intl.formatMessage(messages.default)))) : (React.createElement(\"div\", { style: styles.defaultLabel })),\n                        },\n                        { value: React.createElement(\"div\", null, monthOverMonth), id: DetailsTableColumnIds.monthOverMonth },\n                        {\n                            value: React.createElement(\"div\", null, InfrastructureCost),\n                            id: DetailsTableColumnIds.infrastructure,\n                            style: styles.managedColumn,\n                        },\n                        {\n                            value: React.createElement(\"div\", null, supplementaryCost),\n                            id: DetailsTableColumnIds.supplementary,\n                            style: styles.managedColumn,\n                        },\n                        { value: React.createElement(\"div\", null, cost), style: styles.managedColumn },\n                        { value: React.createElement(\"div\", null, actions) },\n                    ],\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                    selectionDisabled: isDisabled,\n                });\n            });\n            const filteredColumns = columns.filter(column => !hiddenColumns.has(column.id) && !column.hidden);\n            const filteredRows = rows.map((_a) => {\n                var row = __rest(_a, []);\n                row.cells = row.cells.filter(cell => !hiddenColumns.has(cell.id) && !cell.hidden);\n                return row;\n            });\n            this.setState({\n                columns: filteredColumns,\n                rows: filteredRows,\n            });\n        };\n        this.getActions = (item, isDisabled) => {\n            const { groupBy, reportQueryString } = this.props;\n            return (React.createElement(Actions, { groupBy: groupBy, isDisabled: isDisabled, item: item, providerType: ProviderType.rhel, reportPathsType: reportPathsType, reportQueryString: reportQueryString, showPriceListOption: groupBy === 'cluster' }));\n        };\n        this.getSupplementaryCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.supplementary.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.supplementary.total.value, item.supplementary.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n        this.getInfrastructureCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.infrastructure.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.infrastructure.total.value, item.infrastructure.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n        this.getMonthOverMonthCost = (item, index) => {\n            const { intl } = this.props;\n            const value = formatCurrency(Math.abs(item.cost.total.value - item.delta_value), item.cost.total.units);\n            const percentage = item.delta_percent !== null ? formatPercentage(Math.abs(item.delta_percent)) : 0;\n            const showPercentage = !(percentage === 0 || percentage === '0.00');\n            const showValue = item.delta_percent !== null; // Workaround for https://github.com/project-koku/koku/issues/1395\n            let iconOverride;\n            if (showPercentage) {\n                iconOverride = 'iconOverride';\n                if (item.delta_percent !== null && item.delta_value < 0) {\n                    iconOverride += ' decrease';\n                }\n                if (item.delta_percent !== null && item.delta_value > 0) {\n                    iconOverride += ' increase';\n                }\n            }\n            if (!showValue) {\n                return getNoDataForDateRangeString();\n            }\n            else {\n                return (React.createElement(\"div\", { className: \"monthOverMonthOverride\" },\n                    React.createElement(\"div\", { className: iconOverride, key: `month-over-month-cost-${index}` },\n                        showPercentage ? intl.formatMessage(messages.percent, { value: percentage }) : React.createElement(EmptyValueState, null),\n                        showPercentage && item.delta_percent !== null && item.delta_value > 0 && (React.createElement(\"span\", { className: \"fa fa-sort-up\", style: styles.infoArrow, key: `month-over-month-icon-${index}` })),\n                        showPercentage && item.delta_percent !== null && item.delta_value < 0 && (React.createElement(\"span\", { className: \"fa fa-sort-down\", style: Object.assign(Object.assign({}, styles.ininfoArrow), styles.infoArrowDesc), key: `month-over-month-icon-${index}` }))),\n                    React.createElement(\"div\", { style: styles.infoDescription, key: `month-over-month-info-${index}` }, getForDateRangeString(value))));\n            }\n        };\n        this.getTotalCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.cost.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.cost.total.value, item.cost.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { hiddenColumns, report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport ||\n            prevProps.selectedItems !== selectedItems ||\n            prevProps.hiddenColumns !== hiddenColumns) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { isLoading, onSelected, onSort, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, isLoading: isLoading, onSelected: onSelected, onSort: onSort, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst DetailsTable = injectIntl(withRouter(DetailsTableBase));\nexport { DetailsTable };\n","import { getQuery } from 'api/queries/ocpQuery';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType, TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { isEqual } from 'utils/equal';\nimport { tagKey } from 'utils/props';\nconst tagType = TagType.tag;\nconst tagPathsType = TagPathsType.ocp;\nexport class DetailsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { intl, tagReport } = this.props;\n            const options = [\n                { name: intl.formatMessage(messages.filterByValues, { value: 'cluster' }), key: 'cluster' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'node' }), key: 'node' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'project' }), key: 'project' },\n            ];\n            if (tagReport && tagReport.data && tagReport.data.length) {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: tagKey }),\n                    key: tagKey,\n                });\n            }\n            return options;\n        };\n        this.updateReport = () => {\n            const { fetchTag, tagQueryString } = this.props;\n            fetchTag(tagPathsType, tagType, tagQueryString);\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        }, () => {\n            this.updateReport();\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { query, tagReport } = this.props;\n        if (!isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            }, () => {\n                this.updateReport();\n            });\n        }\n        else if (query && !isEqual(query, prevProps.query)) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { groupBy, isAllSelected, isDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onColumnManagementClicked, onExportClicked, onFilterAdded, onFilterRemoved, pagination, query, selectedItems, tagReport, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, groupBy: groupBy, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onColumnManagementClicked: onColumnManagementClicked, onExportClicked: onExportClicked, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.ocp, selectedItems: selectedItems, showBulkSelect: true, showColumnManagement: true, showExcludes: true, showExport: true, showFilter: true, tagReport: tagReport, tagPathsType: tagPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        key_only: true,\n        limit: 1000,\n    });\n    const tagReport = tagSelectors.selectTag(state, tagPathsType, tagType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagPathsType, tagType, tagQueryString);\n    return {\n        tagReport,\n        tagReportFetchStatus,\n        tagQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst DetailsToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsToolbarBase);\nconst DetailsToolbar = injectIntl(DetailsToolbarConnect);\nexport { DetailsToolbar };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    ocpDetails: {\n        minHeight: '100%',\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    toolbarContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { getQuery, parseQuery } from 'api/queries/rhelQuery';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport { cloneDeep } from 'lodash';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoData } from 'routes/state/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { ExportModal } from 'routes/views/components/export';\nimport { ColumnManagementModal, initHiddenColumns } from 'routes/views/details/components/columnManagement';\nimport { getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { handleCurrencySelected, handleFilterAdded, handleFilterRemoved, handlePerPageSelect, handleSetPage, handleSort, } from 'routes/views/utils/handles';\nimport { filterProviders, hasCurrentMonthData } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedRhelReportItems';\nimport { getCurrency } from 'utils/localStorage';\nimport { noPrefix, tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { DetailsHeader } from './detailsHeader';\nimport { DetailsTable, DetailsTableColumnIds } from './detailsTable';\nimport { DetailsToolbar } from './detailsToolbar';\nimport { styles } from './rhelDetails.styles';\nconst baseQuery = {\n    filter: {\n        limit: 10,\n        offset: 0,\n    },\n    exclude: {},\n    filter_by: {},\n    group_by: {\n        project: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst defaultColumnOptions = [\n    { label: messages.monthOverMonthChange, value: DetailsTableColumnIds.monthOverMonth },\n    {\n        description: messages.ocpDetailsInfrastructureCostDesc,\n        label: messages.ocpDetailsInfrastructureCost,\n        value: DetailsTableColumnIds.infrastructure,\n        hidden: true,\n    },\n    {\n        description: messages.ocpDetailsSupplementaryCostDesc,\n        label: messages.ocpDetailsSupplementaryCost,\n        value: DetailsTableColumnIds.supplementary,\n        hidden: true,\n    },\n];\nconst reportType = ReportType.cost;\nconst reportPathsType = ReportPathsType.ocp;\nclass RhelDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            hiddenColumns: initHiddenColumns(defaultColumnOptions),\n            isAllSelected: false,\n            isColumnManagementModalOpen: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getColumnManagementModal = () => {\n            const { hiddenColumns, isColumnManagementModalOpen } = this.state;\n            const options = cloneDeep(defaultColumnOptions);\n            options.map(option => {\n                option.hidden = hiddenColumns.has(option.value);\n            });\n            return (React.createElement(ColumnManagementModal, { isOpen: isColumnManagementModalOpen, options: options, onClose: this.handleColumnManagementModalClose, onSave: this.handleColumnManagementModalSave }));\n        };\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey || groupById,\n            });\n        };\n        this.getExportModal = (computedItems) => {\n            const { query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `${noPrefix}${groupById}` || item.label === `${noPrefix}${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, report, router } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = Math.trunc(offset / limit + 1);\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handlePerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.openShift),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { query, report, reportFetchStatus, reportQueryString, router } = this.props;\n            const { hiddenColumns, isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return (React.createElement(DetailsTable, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, groupByTagKey: groupByTagKey, hiddenColumns: hiddenColumns, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending) => handleSort(query, router, sortType, isSortAscending), report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, report, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(DetailsToolbar, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isDisabled || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onColumnManagementClicked: this.handleColumnManagementModalOpen, onExportClicked: this.handleExportModalOpen, onFilterAdded: filter => handleFilterAdded(query, router, filter), onFilterRemoved: filter => handleFilterRemoved(query, router, filter), pagination: this.getPagination(), query: query, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleColumnManagementModalClose = (isOpen) => {\n            this.setState({ isColumnManagementModalOpen: isOpen });\n        };\n        this.handleColumnManagementModalOpen = () => {\n            this.setState({ isColumnManagementModalOpen: true });\n        };\n        this.handleColumnManagementModalSave = (hiddenColumns) => {\n            this.setState({ hiddenColumns });\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            const groupByKey = groupBy;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: '*',\n                }, order_by: { cost: 'desc' }, category: undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.updateReport = () => {\n            const { fetchReport, reportQueryString } = this.props;\n            fetchReport(reportPathsType, reportType, reportQueryString);\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleColumnManagementModalClose = this.handleColumnManagementModalClose.bind(this);\n        this.handleColumnManagementModalOpen = this.handleColumnManagementModalOpen.bind(this);\n        this.handleColumnManagementModalSave = this.handleColumnManagementModalSave.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { currency, intl, providers, providersFetchStatus, query, report, reportError, reportFetchStatus, router } = this.props;\n        const computedItems = this.getComputedItems();\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const isDisabled = computedItems.length === 0;\n        const title = intl.formatMessage(messages.ocpDetailsTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.inProgress) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.complete) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: ProviderType.ocp, title: title });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.ocpDetails },\n            React.createElement(DetailsHeader, { currency: currency, groupBy: groupById, onCurrencySelected: value => handleCurrencySelected(query, router, value), onGroupBySelected: this.handleGroupBySelected, report: report }),\n            React.createElement(\"div\", { style: styles.content },\n                React.createElement(\"div\", { style: styles.toolbarContainer }, this.getToolbar(computedItems)),\n                this.getExportModal(computedItems),\n                this.getColumnManagementModal(),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const currency = getCurrency();\n    const query = Object.assign(Object.assign({}, baseQuery), queryFromRoute);\n    const reportQuery = {\n        currency,\n        delta: 'cost',\n        exclude: query.exclude,\n        filter: Object.assign(Object.assign({}, query.filter), { resolution: 'monthly', time_scope_units: 'month', time_scope_value: -1 }),\n        filter_by: query.filter_by,\n        group_by: query.group_by,\n        order_by: query.order_by,\n    };\n    const reportQueryString = getQuery(reportQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        currency,\n        providers: filterProviders(providers, ProviderType.ocp),\n        providersFetchStatus,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(RhelDetails)));\n","import { addFilterToQuery, removeFilterFromQuery } from './filter';\nimport { getRouteForQuery } from './query';\nexport const handleSelected = (query, router, value, reset = false) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    router.navigate(getRouteForQuery(newQuery, router.location, reset), { replace: true }); // Don't reset pagination\n};\nexport const handleCurrencySelected = (query, router, value, reset = false) => {\n    handleSelected(query, router, value, reset);\n};\nexport const handleCostTypeSelected = (query, router, value, reset = false) => {\n    handleSelected(query, router, value, reset);\n};\nexport const handleCostDistributionSelected = (query, router, value, reset = false) => {\n    handleSelected(query, router, value, reset);\n};\nexport const handleFilterAdded = (query, router, filter) => {\n    const filteredQuery = addFilterToQuery(query, filter);\n    router.navigate(getRouteForQuery(filteredQuery, router.location, true), { replace: true });\n};\nexport const handleFilterRemoved = (query, router, filter) => {\n    const filteredQuery = removeFilterFromQuery(query, filter);\n    router.navigate(getRouteForQuery(filteredQuery, router.location, true), { replace: true });\n};\nexport const handlePerPageSelect = (query, router, perPage) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    newQuery.filter = Object.assign(Object.assign({}, query.filter), { limit: perPage });\n    const filteredQuery = getRouteForQuery(newQuery, router.location, true);\n    router.navigate(filteredQuery, { replace: true });\n};\nexport const handleSetPage = (query, router, report, pageNumber) => {\n    const limit = report && report.meta && report.meta.filter && report.meta.filter.limit ? report.meta.filter.limit : 10;\n    const offset = pageNumber * limit - limit;\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    newQuery.filter = Object.assign(Object.assign({}, query.filter), { offset });\n    const filteredQuery = getRouteForQuery(newQuery, router.location);\n    router.navigate(filteredQuery, { replace: true });\n};\nexport const handleSort = (query, router, sortType, isSortAscending, date = undefined) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    newQuery.order_by = {};\n    newQuery.order_by[sortType] = isSortAscending ? 'asc' : 'desc';\n    if (date) {\n        newQuery.order_by.date = date;\n    }\n    const filteredQuery = getRouteForQuery(newQuery, router.location);\n    router.navigate(filteredQuery, { replace: true });\n};\n","// eslint-disable-next-line no-shadow\nvar DataType;\n(function (DataType) {\n    DataType[\"currentMonthData\"] = \"current_month_data\";\n    DataType[\"hasData\"] = \"has_data\";\n    DataType[\"previousMonthData\"] = \"previous_month_data\";\n})(DataType || (DataType = {}));\n// Returns the OCP provider matching the given infrastructure uuid\nconst _getOcpProvider = (ocpProviders, uuid) => {\n    let result;\n    if (ocpProviders && ocpProviders.data) {\n        for (const provider of ocpProviders.data) {\n            if (provider.infrastructure && provider.infrastructure.uuid === uuid) {\n                result = provider;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Returns new Provider matching the given provider type\n//\n// See https://issues.redhat.com/browse/COST-2202\nexport const filterProviders = (providers, sourceType) => {\n    if (!providers) {\n        return providers;\n    }\n    const data = providers.data.filter(provider => provider.source_type.toLowerCase() === sourceType);\n    const meta = Object.assign(Object.assign({}, providers.meta), { count: data.length });\n    return Object.assign(Object.assign({}, providers), { meta,\n        data });\n};\n// Ensure at least one source provider has data available\nconst _hasData = (providers, datumType) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            if (provider[datumType]) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one cloud source provider has data available\nconst _hasCloudData = (providers, ocpProviders, dataType) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            const ocpProvider = _getOcpProvider(ocpProviders, provider.uuid);\n            // Ensure AWS provider is filtered by OpenShift and has OCP data\n            if (ocpProvider && ocpProvider[dataType]) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one cloud source provider\nconst _hasCloudProvider = (providers, ocpProviders) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            const ocpProvider = _getOcpProvider(ocpProviders, provider.uuid);\n            // Ensure AWS provider is filtered by OpenShift\n            if (ocpProvider) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one cloud source provider has data available for the current month (e.g., \"AWS filtered by OpenShift\")\nexport const hasCloudCurrentMonthData = (providers, ocpProviders) => {\n    return _hasCloudData(providers, ocpProviders, DataType.currentMonthData);\n};\n// Ensure at least one cloud source provider has data available (e.g., \"AWS filtered by OpenShift\")\nexport const hasCloudData = (providers, ocpProviders) => {\n    return _hasCloudData(providers, ocpProviders, DataType.hasData);\n};\n// Ensure at least one cloud source provider has data available for the previous month (e.g., \"AWS filtered by OpenShift\")\nexport const hasCloudPreviousMonthData = (providers, ocpProviders) => {\n    return _hasCloudData(providers, ocpProviders, DataType.previousMonthData);\n};\n// Ensure at least one cloud source provider (e.g., \"AWS filtered by OpenShift\"), regardless if there is OCP data\nexport const hasCloudProvider = (providers, ocpProviders) => {\n    return _hasCloudProvider(providers, ocpProviders);\n};\n// Ensure at least one source provider has data available for the current month\nexport const hasCurrentMonthData = (providers) => {\n    return _hasData(providers, DataType.currentMonthData);\n};\n// Ensure at least one source provider has data available\nexport const hasData = (providers) => {\n    return _hasData(providers, DataType.hasData);\n};\n// Ensure at least one source provider has data available for the previous month\nexport const hasPreviousMonthData = (providers) => {\n    return _hasData(providers, DataType.previousMonthData);\n};\n","import { getQueryRoute } from 'api/queries/query';\nexport const getRouteForQuery = (query, location, reset = false) => {\n    // Reset pagination\n    if (reset) {\n        if (query.filter && query.filter.offset !== undefined) {\n            query.filter = Object.assign(Object.assign({}, query.filter), { offset: 0 });\n        }\n        if (query.offset !== undefined) {\n            query.offset = 0;\n        }\n    }\n    return `${location.pathname}?${getQueryRoute(query)}`;\n};\n"],"names":["ExternalLinkAltIconConfig","name","height","width","svgPath","yOffset","xOffset","ExternalLinkAltIcon","exports","getProvidersQuery","query","stringify","encode","indices","styles","currencySelector","display","alignItems","currencyLabel","marginBottom","marginRight","whiteSpace","currencyOptions","label","messages","value","CurrencyBase","constructor","super","arguments","this","defaultState","isSelectOpen","state","Object","assign","getSelect","currency","isDisabled","props","selectOptions","getSelectOptions","selection","find","option","Select","className","id","isOpen","onSelect","handleSelect","onToggle","handleToggle","selections","variant","SelectVariant","map","SelectOption","key","intl","options","push","toString","formatMessage","units","event","setState","render","style","Title","headingLevel","size","mapStateToProps","CurrencyConnect","connect","injectIntl","NoDataStateBase","showReload","EmptyState","EmptyStateVariant","EmptyStateIcon","icon","EmptyStateBody","Button","onClick","window","location","reload","NoDataState","title","PageHeader","PageHeaderTitle","PageSection","src","alt","NoOptimizationsStateBase","NoOptimizationsState","iconSpacer","marginLeft","viewSources","marginTop","global_spacer_lg","NoProvidersStateBase","getDocLink","textKey","urlKey","href","rel","target","getRouteToSources","providerType","docUrlKey","descKey","titleKey","component","NoProvidersState","Unavailable","DetailsActionsBase","stateProps","dispatchProps","isDropdownOpen","isExportModalOpen","getExportModal","groupBy","item","reportPathsType","reportQueryString","count","items","onClose","handleExportModalClose","handleExportModalOpen","handleOnSelect","handleOnToggle","bind","showPriceListOption","source_uuid","redirectToCostModel","router","DropdownItem","unshift","includes","length","Dropdown","toggle","KebabToggle","isPlain","position","dropdownItems","mapDispatchToProps","costModels","DetailsActionsConnect","initHiddenColumns","hiddenColumns","Set","hidden","add","ColumnManagementModalBase","getHidden","result","delete","isHidden","has","handleChange","checked","handleClose","handleSave","onSave","selectAll","componentDidUpdate","prevProps","Modal","description","TextContent","Text","TextVariants","isInline","ModalVariant","actions","ButtonVariant","DataList","isCompact","DataListItem","DataListItemRow","DataListCheck","isChecked","onChange","DataListItemCells","dataListCells","DataListCell","ColumnManagementModalConnect","costColumn","textAlign","justifyContent","paddingRight","defaultLabel","minWidth","emptyState","backgroundColor","paddingTop","infoArrow","infoArrowDesc","bottom","infoDescription","color","fontSize","lastReported","lastReportedColumn","managedColumn","nameColumn","DataTable","getEmptyState","isOptimizations","queryFromRoute","search","filter_by","val","values","filter","showMargin","getSortBy","index","columns","orderBy","direction","order_by","getSortParams","sortBy","onSort","handleOnSort","columnIndex","isSelected","rowId","onSelected","rows","newRows","row","selected","SortByDirection","handleOnRowClick","rowIndex","onRowClick","isLoading","TableComposable","gridBreakPoint","hasSelectableRowCaption","Thead","Tr","col","Th","modifier","sort","isSortable","undefined","Tbody","Td","colSpan","Bullseye","Spinner","isSelectable","isHoverable","isRowSelected","_event","cells","cellIndex","dataLabel","isActionCell","select","disable","selectionDisabled","getIdKeyForGroupBy","project","cluster","node","costValue","costLabelUnit","global_FontSize_sm","global_Color_100","dateTitle","header","global_BackgroundColor_light_100","padding","headerContent","headerContentLeft","minHeight","headerContentRight","info","verticalAlign","infoIcon","global_FontSize_md","infoTitle","fontWeight","paddingBottom","global_spacer_sm","groupByOptions","tagPathsType","DetailsHeaderBase","isExportsFeatureEnabled","onCurrencySelected","onGroupBySelected","providers","providersError","report","showContent","meta","cost","supplementaryCost","infrastructureCost","total","hasCost","hasSupplementaryCost","supplementary","hasInfrastructureCost","infrastructure","format","TitleSizes","showTags","Tooltip","content","enableFlip","providersQueryString","providersFetchStatus","featureFlags","DetailsHeader","DetailsTableColumnIds","DetailsTableBase","initDatum","groupByTagKey","isAllSelected","selectedItems","showDefaultProject","computedItems","idKey","getTotalCost","monthOverMonth","getMonthOverMonthCost","getSupplementaryCost","InfrastructureCost","getInfrastructureCost","desc","getActions","Link","to","basePath","routes","default_project","Label","filteredColumns","column","filteredRows","_a","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","__rest","cell","percentValue","toFixed","Math","abs","delta_value","percentage","delta_percent","showPercentage","showValue","iconOverride","componentDidMount","currentReport","data","JSON","DetailsTable","tagType","DetailsToolbarBase","getCategoryOptions","tagReport","updateReport","fetchTag","tagQueryString","categoryOptions","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onColumnManagementClicked","onExportClicked","onFilterAdded","onFilterRemoved","pagination","resourcePathsType","showBulkSelect","showColumnManagement","showExcludes","showExport","showFilter","resolution","time_scope_units","time_scope_value","key_only","limit","tagReportFetchStatus","DetailsToolbarConnect","DetailsToolbar","ocpDetails","paginationContainer","global_spacer_md","tableContainer","toolbarContainer","baseQuery","offset","exclude","group_by","defaultColumnOptions","reportType","RhelDetails","isColumnManagementModalOpen","getColumnManagementModal","cloneDeep","handleColumnManagementModalClose","handleColumnManagementModalSave","getComputedItems","groupById","isAllItems","getPagination","isBottom","page","trunc","Pagination","itemCount","onPerPageSelect","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","PaginationVariant","widgetId","getTable","reportFetchStatus","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","handleColumnManagementModalOpen","action","handleGroupBySelected","groupByKey","newQuery","parse","category","navigate","replace","newItems","fetchReport","prevState","reportError","noReport","noLocation","reportQuery","delta","reset","handleCurrencySelected","handleCostTypeSelected","handleCostDistributionSelected","handleFilterAdded","filteredQuery","handleFilterRemoved","handlePerPageSelect","handleSetPage","handleSort","date","DataType","_getOcpProvider","ocpProviders","uuid","provider","filterProviders","sourceType","source_type","toLowerCase","_hasData","datumType","_hasCloudData","dataType","ocpProvider","hasCloudCurrentMonthData","currentMonthData","hasCloudData","hasData","hasCloudPreviousMonthData","previousMonthData","hasCloudProvider","_hasCloudProvider","hasCurrentMonthData","hasPreviousMonthData","getRouteForQuery","pathname"],"sourceRoot":""}