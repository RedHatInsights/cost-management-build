{"version":3,"file":"js/azureDetails.129e6ea4483b669731b6.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/external-link-alt-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/minus-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_FontSize_xs.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_disabled_color_100.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_3xl.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_xs.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Unavailable/Unavailable.js","webpack:///./src/routes/components/dataTable/dataTable.styles.ts","webpack:///./src/routes/components/dataTable/dataTable.tsx","webpack:///./src/routes/components/dataTable/selectableTable.tsx","webpack:///./src/routes/components/state/emptyValueState/emptyValueState.tsx","webpack:///./src/routes/utils/computedReport/getComputedAzureReportItems.ts","webpack:///./src/routes/details/azureDetails/azureDetails.styles.ts","webpack:///./src/routes/details/azureDetails/detailsHeader.styles.ts","webpack:///./src/routes/details/azureDetails/detailsHeader.tsx","webpack:///./src/routes/details/azureDetails/detailsTable.tsx","webpack:///./src/routes/details/azureDetails/detailsToolbar.tsx","webpack:///./src/routes/details/azureDetails/azureDetails.tsx","webpack:///./src/routes/details/components/actions/actions.tsx"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExternalLinkAltIcon = createIcon(ExternalLinkAltIconConfig);\n\nexport default ExternalLinkAltIcon;","import { createIcon } from '../createIcon';\n\nexport const MinusIconConfig = {\n  name: 'MinusIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const MinusIcon = createIcon(MinusIconConfig);\n\nexport default MinusIcon;","\"use strict\";\nexports.__esModule = true;\nexports.global_FontSize_xs = {\n  \"name\": \"--pf-global--FontSize--xs\",\n  \"value\": \"0.75rem\",\n  \"var\": \"var(--pf-global--FontSize--xs)\"\n};\nexports[\"default\"] = exports.global_FontSize_xs;","\"use strict\";\nexports.__esModule = true;\nexports.global_disabled_color_100 = {\n  \"name\": \"--pf-global--disabled-color--100\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--disabled-color--100)\"\n};\nexports[\"default\"] = exports.global_disabled_color_100;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_3xl = {\n  \"name\": \"--pf-global--spacer--3xl\",\n  \"value\": \"4rem\",\n  \"var\": \"var(--pf-global--spacer--3xl)\"\n};\nexports[\"default\"] = exports.global_spacer_3xl;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_xs = {\n  \"name\": \"--pf-global--spacer--xs\",\n  \"value\": \"0.25rem\",\n  \"var\": \"var(--pf-global--spacer--xs)\"\n};\nexports[\"default\"] = exports.global_spacer_xs;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport '../Unavailable/Unavailable.css';\nvar Unavailable = function () {\n    return (_jsxs(EmptyState, __assign({ variant: EmptyStateVariant.large, className: \"ins-c-empty-state__unavailable pf-m-redhat-font\" }, { children: [_jsx(EmptyStateIcon, { icon: ExclamationCircleIcon }), _jsx(Title, __assign({ headingLevel: \"h5\", size: \"lg\" }, { children: \"This page is temporarily unavailable\" })), _jsxs(EmptyStateBody, { children: [\"Try refreshing the page. If the problem persists, contact your organization administrator or visit our\", _jsxs(\"a\", __assign({ href: \"https://status.redhat.com/\", target: \"_blank\", rel: \"noopener noreferrer\" }, { children: [' ', \"status page\"] })), ' ', \"for known outages.\"] })] })));\n};\nexport default Unavailable;\n//# sourceMappingURL=Unavailable.js.map","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    costColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingRight: 0,\n    },\n    defaultLabel: {\n        minWidth: '50px',\n    },\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    lastItem: {\n        textAlign: 'right',\n        paddingRight: '3.8rem',\n    },\n    lastItemColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    managedColumn: {\n        textAlign: 'right',\n    },\n    nameColumn: {\n        width: '1%',\n    },\n    warningIcon: {\n        paddingLeft: global_spacer_sm.var,\n    },\n};\n","import './dataTable.scss';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, TableVariant, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass DataTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { filterBy, intl } = this.props;\n            if (filterBy) {\n                for (const val of Object.values(filterBy)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, orderBy } = this.props;\n            const direction = orderBy && orderBy[columns[index].orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected, rows } = this.props;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isActionsCell = false, isLoading, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.dataTableAriaLabel), className: \"tableOverride\", gridBreakPoint: \"grid-2xl\", variant: TableVariant.compact },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${cellIndex}-${rowIndex}`, modifier: \"nowrap\", select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    }, style: item.style })) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", isActionCell: isActionsCell && cellIndex === row.cells.length - 1, style: item.style }, item.value))))))))),\n            rows.length === 0 && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(DataTable));\n","import { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, TableVariant, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass SelectableTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { emptyState, filterBy, intl } = this.props;\n            if (filterBy) {\n                for (const val of Object.values(filterBy)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            // Return custom empty state\n            if (emptyState) {\n                return emptyState;\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, orderBy } = this.props;\n            const direction = orderBy && orderBy[columns[index].orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnRowClick = (event, rowIndex) => {\n            const { onRowClick, rows } = this.props;\n            rows.map(row => (row.selected = false));\n            rows[rowIndex].selected = true;\n            this.setState({ rows }, () => {\n                if (onRowClick) {\n                    onRowClick(event, rowIndex);\n                }\n            });\n        };\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isLoading, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.selectableTableAriaLabel), gridBreakPoint: \"grid-2xl\", hasSelectableRowCaption: true, variant: TableVariant.compact },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { \"aria-label\": intl.formatMessage(messages.selectableTableRowAriaLabel), isSelectable: true, isHoverable: true, isRowSelected: row.selected, onRowClick: _event => this.handleOnRowClick(_event, rowIndex), key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 ? (React.createElement(Th, { \"aria-label\": intl.formatMessage(messages.selectableTableHeaderAriaLabel), dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", style: item.style }, item.value)) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", style: item.style }, item.value))))))))),\n            rows.length === 0 && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(SelectableTable));\n","import './emptyValueState.scss';\nimport { MinusIcon } from '@patternfly/react-icons/dist/esm/icons/minus-icon';\nimport React from 'react';\nconst EmptyValueState = () => {\n    return (React.createElement(\"span\", { className: \"emptyValueContainer\" },\n        React.createElement(MinusIcon, null)));\n};\nexport default EmptyValueState;\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.subscription_guid) {\n        return 'subscription_guid';\n    }\n    if (groupBy.resource_location) {\n        return 'resource_location';\n    }\n    if (groupBy.service_name) {\n        return 'service_name';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    azureDetails: {\n        minHeight: '100%',\n    },\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    toolbarContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costValue: {\n        marginTop: global_spacer_lg.var,\n        marginBottom: 0,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    dateTitle: {\n        textAlign: 'end',\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentLeft: {\n        display: 'flex',\n        minHeight: '90px',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { TagPathsType } from 'api/tags/tag';\nimport { ExportsLink } from 'components/drawers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Currency } from 'routes/components/currency';\nimport { GroupBy } from 'routes/components/groupBy';\nimport { getIdKeyForGroupBy } from 'routes/utils/computedReport/getComputedAzureReportItems';\nimport { filterProviders } from 'routes/utils/providers';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { getSinceDateRangeString } from 'utils/dates';\nimport { formatCurrency } from 'utils/format';\nimport { styles } from './detailsHeader.styles';\nconst groupByOptions = [\n    { label: 'subscription_guid', value: 'subscription_guid' },\n    { label: 'service_name', value: 'service_name' },\n    { label: 'resource_location', value: 'resource_location' },\n];\nconst tagPathsType = TagPathsType.azure;\nclass DetailsHeaderBase extends React.Component {\n    render() {\n        const { currency, groupBy, isExportsFeatureEnabled, onCurrencySelected, onGroupBySelected, providers, providersError, report, intl, } = this.props;\n        const showContent = report && !providersError && providers && providers.meta && providers.meta.count > 0;\n        const hasCost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.azureDetailsTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(\"div\", { style: styles.headerContentLeft },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: !showContent, onSelected: onGroupBySelected, options: groupByOptions, showTags: true, tagPathsType: tagPathsType })),\n                showContent && (React.createElement(\"div\", null,\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: TitleSizes['4xl'] }, formatCurrency(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD')),\n                    React.createElement(\"div\", { style: styles.dateTitle }, getSinceDateRangeString()))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        providers: filterProviders(providers, ProviderType.azure),\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n    };\n});\nconst DetailsHeader = injectIntl(connect(mapStateToProps, {})(DetailsHeaderBase));\nexport { DetailsHeader };\n","import 'routes/components/dataTable/dataTable.scss';\nimport { ReportPathsType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { DataTable } from 'routes/components/dataTable';\nimport { styles } from 'routes/components/dataTable/dataTable.styles';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { Actions } from 'routes/details/components/actions';\nimport { getUnsortedComputedReportItems } from 'routes/utils/computedReport/getComputedReportItems';\nimport { getBreakdownPath } from 'routes/utils/paths';\nimport { getForDateRangeString, getNoDataForDateRangeString } from 'utils/dates';\nimport { formatCurrency, formatPercentage } from 'utils/format';\nimport { formatPath } from 'utils/paths';\nimport { noPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nconst reportPathsType = ReportPathsType.azure;\nclass DetailsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { groupBy, groupByTagKey, intl, isAllSelected, report, selectedItems, router } = this.props;\n            if (!report) {\n                return;\n            }\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: (groupByTagKey ? groupByTagKey : groupBy),\n            });\n            const columns = groupByTagKey\n                ? [\n                    {\n                        name: '',\n                    },\n                    {\n                        name: intl.formatMessage(messages.tagNames),\n                    },\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign({ orderBy: groupBy === 'subscription_guid' ? 'subscription_name' : groupBy, name: intl.formatMessage(messages.detailsResourceNames, { value: groupBy }) }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ];\n            computedItems.map((item, index) => {\n                const cost = this.getTotalCost(item, index);\n                const label = item && item.label && item.label !== null ? item.label : '';\n                const monthOverMonth = this.getMonthOverMonthCost(item, index);\n                const isDisabled = label === `${noPrefix}${groupBy}` || label === `${noPrefix}${groupByTagKey}`;\n                const desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                const actions = this.getActions(item, isDisabled);\n                const name = isDisabled ? label : (React.createElement(Link, { to: getBreakdownPath({\n                        basePath: formatPath(routes.azureDetailsBreakdown.path),\n                        description: item.id,\n                        groupBy,\n                        id: item.id,\n                        router,\n                        title: label.toString(), // Convert IDs if applicable\n                    }) }, label));\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: (React.createElement(\"div\", null,\n                                name,\n                                desc)),\n                        },\n                        { value: monthOverMonth },\n                        { value: cost, style: styles.managedColumn },\n                        { value: actions },\n                    ],\n                    isOpen: false,\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                    selectionDisabled: isDisabled,\n                });\n            });\n            this.setState({\n                columns,\n                rows,\n            });\n        };\n        this.getActions = (item, isDisabled) => {\n            const { groupBy, reportQueryString } = this.props;\n            return (React.createElement(Actions, { groupBy: groupBy, isDisabled: isDisabled, item: item, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getMonthOverMonthCost = (item, index) => {\n            const { intl } = this.props;\n            const value = formatCurrency(Math.abs(item.cost.total.value - item.delta_value), item.cost.total.units);\n            const percentage = item.delta_percent !== null ? formatPercentage(Math.abs(item.delta_percent)) : 0;\n            const showPercentage = !(percentage === 0 || percentage === '0.00');\n            const showValue = item.delta_percent !== null; // Workaround for https://github.com/project-koku/koku/issues/1395\n            let iconOverride;\n            if (showPercentage) {\n                iconOverride = 'iconOverride';\n                if (item.delta_percent !== null && item.delta_value < 0) {\n                    iconOverride += ' decrease';\n                }\n                if (item.delta_percent !== null && item.delta_value > 0) {\n                    iconOverride += ' increase';\n                }\n            }\n            if (!showValue) {\n                return getNoDataForDateRangeString();\n            }\n            else {\n                return (React.createElement(\"div\", { className: \"monthOverMonthOverride\" },\n                    React.createElement(\"div\", { className: iconOverride, key: `month-over-month-cost-${index}` },\n                        showPercentage ? intl.formatMessage(messages.percent, { value: percentage }) : React.createElement(EmptyValueState, null),\n                        showPercentage && item.delta_percent !== null && item.delta_value > 0 && (React.createElement(\"span\", { className: \"fa fa-sort-up\", style: styles.infoArrow, key: `month-over-month-icon-${index}` })),\n                        showPercentage && item.delta_percent !== null && item.delta_value < 0 && (React.createElement(\"span\", { className: \"fa fa-sort-down\", style: Object.assign(Object.assign({}, styles.infoArrow), styles.infoArrowDesc), key: `month-over-month-icon-${index}` }))),\n                    React.createElement(\"div\", { style: styles.infoDescription, key: `month-over-month-info-${index}` }, getForDateRangeString(value))));\n            }\n        };\n        this.getTotalCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.cost.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.cost.total.value, item.cost.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport || prevProps.selectedItems !== selectedItems) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { filterBy, isLoading, onSelected, onSort, orderBy, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, filterBy: filterBy, isActionsCell: true, isLoading: isLoading, onSelected: onSelected, onSort: onSort, orderBy: orderBy, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst DetailsTable = injectIntl(withRouter(DetailsTableBase));\nexport { DetailsTable };\n","import { getQuery } from 'api/queries/azureQuery';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType, TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/components/dataToolbar';\nimport { isEqual } from 'routes/utils/equal';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { tagKey } from 'utils/props';\nconst tagType = TagType.tag;\nconst tagPathsType = TagPathsType.azure;\nexport class DetailsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { intl, tagReport } = this.props;\n            const options = [\n                {\n                    name: intl.formatMessage(messages.filterByValues, { value: 'subscription_guid' }),\n                    key: 'subscription_guid',\n                },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'service_name' }), key: 'service_name' },\n                {\n                    name: intl.formatMessage(messages.filterByValues, { value: 'resource_location' }),\n                    key: 'resource_location',\n                },\n            ];\n            if (tagReport && tagReport.data && tagReport.data.length) {\n                options.push({ name: intl.formatMessage(messages.filterByValues, { value: tagKey }), key: tagKey });\n            }\n            return options;\n        };\n        this.updateReport = () => {\n            const { fetchTag, tagQueryString } = this.props;\n            fetchTag(tagPathsType, tagType, tagQueryString);\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        }, () => {\n            this.updateReport();\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { query, tagReport } = this.props;\n        if (!isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            }, () => {\n                this.updateReport();\n            });\n        }\n        else if (query && !isEqual(query, prevProps.query)) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { groupBy, isAllSelected, isDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onExportClicked, onFilterAdded, onFilterRemoved, pagination, query, selectedItems, tagReport, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, groupBy: groupBy, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onExportClicked: onExportClicked, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.azure, selectedItems: selectedItems, showBulkSelect: true, showExcludes: true, showExport: true, showFilter: true, tagReport: tagReport, tagPathsType: tagPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        key_only: true,\n        limit: 1000,\n    });\n    const tagReport = tagSelectors.selectTag(state, tagPathsType, tagType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagPathsType, tagType, tagQueryString);\n    return {\n        tagReportFetchStatus,\n        tagReport,\n        tagQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst DetailsToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsToolbarBase);\nconst DetailsToolbar = injectIntl(DetailsToolbarConnect);\nexport { DetailsToolbar };\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getQuery, parseQuery } from 'api/queries/azureQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ExportModal } from 'routes/components/export';\nimport { Loading } from 'routes/components/page/loading';\nimport { NoData } from 'routes/components/page/noData';\nimport { NoProviders } from 'routes/components/page/noProviders';\nimport { NotAvailable } from 'routes/components/page/notAvailable';\nimport { getIdKeyForGroupBy } from 'routes/utils/computedReport/getComputedAzureReportItems';\nimport { getUnsortedComputedReportItems } from 'routes/utils/computedReport/getComputedReportItems';\nimport { getGroupByTagKey } from 'routes/utils/groupBy';\nimport { filterProviders, hasCurrentMonthData } from 'routes/utils/providers';\nimport { getRouteForQuery } from 'routes/utils/query';\nimport { handleOnCurrencySelected, handleOnFilterAdded, handleOnFilterRemoved, handleOnPerPageSelect, handleOnSetPage, handleOnSort, } from 'routes/utils/queryNavigate';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nimport { noPrefix, tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { styles } from './azureDetails.styles';\nimport { DetailsHeader } from './detailsHeader';\nimport { DetailsTable } from './detailsTable';\nimport { DetailsToolbar } from './detailsToolbar';\nconst baseQuery = {\n    filter: {\n        limit: 10,\n        offset: 0,\n    },\n    exclude: {},\n    filter_by: {},\n    group_by: {\n        subscription_guid: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst reportType = ReportType.cost;\nconst reportPathsType = ReportPathsType.azure;\nclass AzureDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            isAllSelected: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey || groupById,\n            });\n        };\n        this.getExportModal = (computedItems) => {\n            const { query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `${noPrefix}${groupById}` || item.label === `${noPrefix}${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, router, report } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = Math.trunc(offset / limit + 1);\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handleOnPerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleOnSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.azure),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { query, report, reportFetchStatus, reportQueryString, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return (React.createElement(DetailsTable, { filterBy: query.filter_by, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, groupByTagKey: groupByTagKey, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending) => handleOnSort(query, router, sortType, isSortAscending), orderBy: query.order_by, report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, router, report } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(DetailsToolbar, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isDisabled || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onExportClicked: this.handleExportModalOpen, onFilterAdded: filter => handleOnFilterAdded(query, router, filter), onFilterRemoved: filter => handleOnFilterRemoved(query, router, filter), pagination: this.getPagination(isDisabled), query: query, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            const groupByKey = groupBy;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: '*',\n                }, order_by: undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.updateReport = () => {\n            const { fetchReport, reportQueryString } = this.props;\n            fetchReport(reportPathsType, reportType, reportQueryString);\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { currency, intl, providers, providersFetchStatus, query, report, reportError, reportFetchStatus, router, } = this.props;\n        const computedItems = this.getComputedItems();\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const isDisabled = computedItems.length === 0;\n        const title = intl.formatMessage(messages.azureDetailsTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.inProgress) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.complete) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: ProviderType.azure, title: title });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.azureDetails },\n            React.createElement(DetailsHeader, { currency: currency, groupBy: groupById, onCurrencySelected: () => handleOnCurrencySelected(query, router), onGroupBySelected: this.handleGroupBySelected, report: report }),\n            React.createElement(\"div\", { style: styles.content },\n                React.createElement(\"div\", { style: styles.toolbarContainer }, this.getToolbar(computedItems)),\n                this.getExportModal(computedItems),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const currency = getCurrency();\n    const query = Object.assign(Object.assign({}, baseQuery), queryFromRoute);\n    const reportQuery = {\n        currency,\n        delta: 'cost',\n        exclude: query.exclude,\n        filter: Object.assign(Object.assign({}, query.filter), { resolution: 'monthly', time_scope_units: 'month', time_scope_value: -1 }),\n        filter_by: query.filter_by,\n        group_by: query.group_by,\n        order_by: query.order_by,\n    };\n    const reportQueryString = getQuery(reportQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        currency,\n        providers: filterProviders(providers, ProviderType.azure),\n        providersError,\n        providersFetchStatus,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(AzureDetails)));\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ExportModal } from 'routes/components/export';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nimport { tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, reportPathsType, reportQueryString } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { count: 1, groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, intl, item: { source_uuid }, redirectToCostModel, router, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, intl.formatMessage(messages.detailsActionsExport)),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], router) }, intl.formatMessage(messages.detailsActionsPriceList)));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = injectIntl(withRouter(DetailsActionsConnect));\nexport default Actions;\n"],"names":["ExternalLinkAltIconConfig","name","height","width","svgPath","yOffset","xOffset","ExternalLinkAltIcon","MinusIconConfig","MinusIcon","exports","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","EmptyState","variant","EmptyStateVariant","large","className","children","EmptyStateIcon","icon","ExclamationCircleIcon","Title","headingLevel","size","EmptyStateBody","href","target","rel","styles","costColumn","textAlign","display","justifyContent","paddingRight","defaultLabel","minWidth","emptyState","backgroundColor","value","paddingTop","infoArrow","position","infoArrowDesc","bottom","infoDescription","color","fontSize","lastItem","lastItemColumn","managedColumn","nameColumn","warningIcon","paddingLeft","var","DataTable","constructor","props","super","getEmptyState","filterBy","intl","val","values","filter","showMargin","formatMessage","messages","detailsEmptyState","getSortBy","index","columns","orderBy","direction","getSortParams","sortBy","onSort","handleOnSort","columnIndex","handleOnSelect","event","isSelected","rowId","onSelected","rows","newRows","items","map","row","selected","item","setState","SortByDirection","asc","bind","render","isActionsCell","isLoading","TableComposable","dataTableAriaLabel","gridBreakPoint","TableVariant","compact","Thead","Tr","col","Th","key","modifier","sort","isSortable","undefined","style","Tbody","Td","colSpan","Bullseye","Spinner","rowIndex","cells","cellIndex","dataLabel","select","disable","selectionDisabled","onSelect","_event","isActionCell","injectIntl","SelectableTable","handleOnRowClick","onRowClick","selectableTableAriaLabel","hasSelectableRowCaption","selectableTableRowAriaLabel","isSelectable","isHoverable","isRowSelected","selectableTableHeaderAriaLabel","getIdKeyForGroupBy","groupBy","subscription_guid","resource_location","service_name","azureDetails","minHeight","content","paddingBottom","global_spacer_lg","paginationContainer","marginLeft","marginRight","pagination","global_BackgroundColor_light_100","global_spacer_md","tableContainer","toolbarContainer","costValue","marginTop","marginBottom","costLabelUnit","global_FontSize_sm","global_Color_100","dateTitle","header","padding","headerContent","headerContentLeft","headerContentRight","title","global_spacer_sm","groupByOptions","label","tagPathsType","azure","DetailsHeaderBase","currency","isExportsFeatureEnabled","onCurrencySelected","onGroupBySelected","providers","providersError","report","showContent","meta","count","hasCost","total","cost","TitleSizes","azureDetailsTitle","isDisabled","options","showTags","format","units","mapStateToProps","state","providersQueryString","all","providersFetchStatus","featureFlags","DetailsHeader","connect","reportPathsType","DetailsTableBase","initDatum","groupByTagKey","isAllSelected","selectedItems","router","computedItems","idKey","tagNames","monthOverMonthChange","detailsResourceNames","getTotalCost","monthOverMonth","getMonthOverMonthCost","desc","id","actions","getActions","Link","to","basePath","routes","azureDetailsBreakdown","path","description","toString","push","isOpen","find","reportQueryString","Math","abs","delta_value","percentage","delta_percent","showPercentage","showValue","iconOverride","percent","percentValue","toFixed","percentOfCost","componentDidMount","componentDidUpdate","prevProps","currentReport","data","JSON","stringify","DetailsTable","tagType","tag","DetailsToolbarBase","defaultState","getCategoryOptions","tagReport","filterByValues","updateReport","fetchTag","tagQueryString","categoryOptions","query","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onExportClicked","onFilterAdded","onFilterRemoved","resourcePathsType","showBulkSelect","showExcludes","showExport","showFilter","resolution","time_scope_units","time_scope_value","key_only","limit","tagReportFetchStatus","mapDispatchToProps","DetailsToolbarConnect","DetailsToolbar","baseQuery","offset","exclude","filter_by","group_by","order_by","reportType","AzureDetails","stateProps","dispatchProps","isExportModalOpen","getComputedItems","groupById","getExportModal","isAllItems","onClose","handleExportModalClose","getPagination","isBottom","page","trunc","Pagination","isCompact","itemCount","onPerPageSelect","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","PaginationVariant","top","widgetId","getTable","reportFetchStatus","inProgress","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","handleExportModalOpen","action","handleGroupBySelected","groupByKey","newQuery","parse","navigate","location","replace","newItems","fetchReport","prevState","reportError","noReport","noLocation","search","complete","providerType","queryFromRoute","reportQuery","delta","DetailsActionsBase","isDropdownOpen","handleOnToggle","showPriceListOption","source_uuid","redirectToCostModel","DropdownItem","component","onClick","detailsActionsExport","unshift","includes","detailsActionsPriceList","Dropdown","toggle","KebabToggle","onToggle","isPlain","dropdownItems","costModels","DetailsActionsConnect"],"sourceRoot":""}