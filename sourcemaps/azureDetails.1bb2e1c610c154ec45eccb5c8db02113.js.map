{"version":3,"file":"js/azureDetails.d560ed63d09fa7a5c94c.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/external-link-alt-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/minus-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_Color_100.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_FontSize_xs.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_disabled_color_100.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_3xl.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_xs.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Unavailable/Unavailable.js","webpack:///./src/routes/components/state/emptyValueState/emptyValueState.tsx","webpack:///./src/utils/computedReport/getComputedAzureReportItems.ts","webpack:///./src/routes/views/details/azureDetails/azureDetails.styles.ts","webpack:///./src/routes/views/details/azureDetails/detailsHeader.styles.ts","webpack:///./src/routes/views/details/azureDetails/detailsHeader.tsx","webpack:///./src/routes/views/details/azureDetails/detailsTable.tsx","webpack:///./src/routes/views/details/azureDetails/detailsToolbar.tsx","webpack:///./src/routes/views/details/azureDetails/azureDetails.tsx","webpack:///./src/routes/views/details/components/actions/actions.tsx","webpack:///./src/routes/views/details/components/dataTable/dataTable.styles.ts","webpack:///./src/routes/views/details/components/dataTable/dataTable.tsx","webpack:///./src/routes/views/utils/paths.ts"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExternalLinkAltIcon = createIcon(ExternalLinkAltIconConfig);\n\nexport default ExternalLinkAltIcon;","import { createIcon } from '../createIcon';\n\nexport const MinusIconConfig = {\n  name: 'MinusIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const MinusIcon = createIcon(MinusIconConfig);\n\nexport default MinusIcon;","\"use strict\";\nexports.__esModule = true;\nexports.global_Color_100 = {\n  \"name\": \"--pf-global--Color--100\",\n  \"value\": \"#151515\",\n  \"var\": \"var(--pf-global--Color--100)\"\n};\nexports[\"default\"] = exports.global_Color_100;","\"use strict\";\nexports.__esModule = true;\nexports.global_FontSize_xs = {\n  \"name\": \"--pf-global--FontSize--xs\",\n  \"value\": \"0.75rem\",\n  \"var\": \"var(--pf-global--FontSize--xs)\"\n};\nexports[\"default\"] = exports.global_FontSize_xs;","\"use strict\";\nexports.__esModule = true;\nexports.global_disabled_color_100 = {\n  \"name\": \"--pf-global--disabled-color--100\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--disabled-color--100)\"\n};\nexports[\"default\"] = exports.global_disabled_color_100;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_3xl = {\n  \"name\": \"--pf-global--spacer--3xl\",\n  \"value\": \"4rem\",\n  \"var\": \"var(--pf-global--spacer--3xl)\"\n};\nexports[\"default\"] = exports.global_spacer_3xl;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_xs = {\n  \"name\": \"--pf-global--spacer--xs\",\n  \"value\": \"0.25rem\",\n  \"var\": \"var(--pf-global--spacer--xs)\"\n};\nexports[\"default\"] = exports.global_spacer_xs;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport '../Unavailable/Unavailable.css';\nvar Unavailable = function () {\n    return (_jsxs(EmptyState, __assign({ variant: EmptyStateVariant.large, className: \"ins-c-empty-state__unavailable pf-m-redhat-font\" }, { children: [_jsx(EmptyStateIcon, { icon: ExclamationCircleIcon }), _jsx(Title, __assign({ headingLevel: \"h5\", size: \"lg\" }, { children: \"This page is temporarily unavailable\" })), _jsxs(EmptyStateBody, { children: [\"Try refreshing the page. If the problem persists, contact your organization administrator or visit our\", _jsxs(\"a\", __assign({ href: \"https://status.redhat.com/\", target: \"_blank\", rel: \"noopener noreferrer\" }, { children: [' ', \"status page\"] })), ' ', \"for known outages.\"] })] })));\n};\nexport default Unavailable;\n//# sourceMappingURL=Unavailable.js.map","import './emptyValueState.scss';\nimport { MinusIcon } from '@patternfly/react-icons/dist/esm/icons/minus-icon';\nimport React from 'react';\nconst EmptyValueState = () => {\n    return (React.createElement(\"span\", { className: \"emptyValueContainer\" },\n        React.createElement(MinusIcon, null)));\n};\nexport default EmptyValueState;\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.subscription_guid) {\n        return 'subscription_guid';\n    }\n    if (groupBy.resource_location) {\n        return 'resource_location';\n    }\n    if (groupBy.service_name) {\n        return 'service_name';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    azureDetails: {\n        minHeight: '100%',\n    },\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costValue: {\n        marginTop: global_spacer_lg.var,\n        marginBottom: 0,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    dateTitle: {\n        textAlign: 'end',\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentLeft: {\n        display: 'flex',\n        minHeight: '90px',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { TagPathsType } from 'api/tags/tag';\nimport { ExportsLink } from 'components/exports';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Currency } from 'routes/components/currency';\nimport { GroupBy } from 'routes/views/components/groupBy';\nimport { filterProviders } from 'routes/views/utils/providers';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedAzureReportItems';\nimport { getSinceDateRangeString } from 'utils/dates';\nimport { formatCurrency } from 'utils/format';\nimport { styles } from './detailsHeader.styles';\nconst groupByOptions = [\n    { label: 'subscription_guid', value: 'subscription_guid' },\n    { label: 'service_name', value: 'service_name' },\n    { label: 'resource_location', value: 'resource_location' },\n];\nconst tagReportPathsType = TagPathsType.azure;\nclass DetailsHeaderBase extends React.Component {\n    render() {\n        const { currency, groupBy, isCurrencyFeatureEnabled, isExportsFeatureEnabled, onCurrencySelected, onGroupBySelected, providers, providersError, report, intl, } = this.props;\n        const showContent = report && !providersError && providers && providers.meta && providers.meta.count > 0;\n        const hasCost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.azureDetailsTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    isCurrencyFeatureEnabled && React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(\"div\", { style: styles.headerContentLeft },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: !showContent, onSelected: onGroupBySelected, options: groupByOptions, showTags: true, tagReportPathsType: tagReportPathsType })),\n                Boolean(showContent) && (React.createElement(\"div\", null,\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: TitleSizes['4xl'] }, formatCurrency(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD')),\n                    React.createElement(\"div\", { style: styles.dateTitle }, getSinceDateRangeString()))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        isCurrencyFeatureEnabled: featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state),\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        providers: filterProviders(providers, ProviderType.azure),\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n    };\n});\nconst DetailsHeader = injectIntl(connect(mapStateToProps, {})(DetailsHeaderBase));\nexport { DetailsHeader };\n","import 'routes/views/details/components/dataTable/dataTable.scss';\nimport { ReportPathsType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { Actions } from 'routes/views/details/components/actions';\nimport { DataTable } from 'routes/views/details/components/dataTable';\nimport { styles } from 'routes/views/details/components/dataTable/dataTable.styles';\nimport { getBreakdownPath } from 'routes/views/utils/paths';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getForDateRangeString, getNoDataForDateRangeString } from 'utils/dates';\nimport { formatCurrency, formatPercentage } from 'utils/format';\nimport { formatPath } from 'utils/paths';\nimport { noPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nconst reportPathsType = ReportPathsType.azure;\nclass DetailsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { groupBy, groupByTagKey, intl, isAllSelected, report, selectedItems, router } = this.props;\n            if (!report) {\n                return;\n            }\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey ? groupByTagKey : groupBy,\n            });\n            const columns = groupByTagKey\n                ? [\n                    {\n                        name: '',\n                    },\n                    {\n                        name: intl.formatMessage(messages.tagNames),\n                    },\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign({ orderBy: groupBy, name: intl.formatMessage(messages.detailsResourceNames, { value: groupBy }) }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ];\n            computedItems.map((item, index) => {\n                const cost = this.getTotalCost(item, index);\n                const label = item && item.label !== null ? item.label : '';\n                const monthOverMonth = this.getMonthOverMonthCost(item, index);\n                const isDisabled = label === `${noPrefix}${groupBy}` || label === `${noPrefix}${groupByTagKey}`;\n                const desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                const actions = this.getActions(item, isDisabled);\n                const name = isDisabled ? label : (React.createElement(Link, { to: getBreakdownPath({\n                        basePath: formatPath(routes.azureDetailsBreakdown.path),\n                        description: item.id,\n                        groupBy,\n                        id: item.id,\n                        router,\n                        title: label.toString(),\n                    }) }, label));\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: (React.createElement(\"div\", null,\n                                name,\n                                desc)),\n                        },\n                        { value: React.createElement(\"div\", null, monthOverMonth) },\n                        { value: React.createElement(\"div\", null, cost), style: styles.managedColumn },\n                        { value: React.createElement(\"div\", null, actions) },\n                    ],\n                    isOpen: false,\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                    selectionDisabled: isDisabled,\n                });\n            });\n            this.setState({\n                columns,\n                rows,\n            });\n        };\n        this.getActions = (item, isDisabled) => {\n            const { groupBy, reportQueryString } = this.props;\n            return (React.createElement(Actions, { groupBy: groupBy, isDisabled: isDisabled, item: item, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getMonthOverMonthCost = (item, index) => {\n            const { intl } = this.props;\n            const value = formatCurrency(Math.abs(item.cost.total.value - item.delta_value), item.cost.total.units);\n            const percentage = item.delta_percent !== null ? formatPercentage(Math.abs(item.delta_percent)) : 0;\n            const showPercentage = !(percentage === 0 || percentage === '0.00');\n            const showValue = item.delta_percent !== null; // Workaround for https://github.com/project-koku/koku/issues/1395\n            let iconOverride;\n            if (showPercentage) {\n                iconOverride = 'iconOverride';\n                if (item.delta_percent !== null && item.delta_value < 0) {\n                    iconOverride += ' decrease';\n                }\n                if (item.delta_percent !== null && item.delta_value > 0) {\n                    iconOverride += ' increase';\n                }\n            }\n            if (!showValue) {\n                return getNoDataForDateRangeString();\n            }\n            else {\n                return (React.createElement(\"div\", { className: \"monthOverMonthOverride\" },\n                    React.createElement(\"div\", { className: iconOverride, key: `month-over-month-cost-${index}` },\n                        showPercentage ? intl.formatMessage(messages.percent, { value: percentage }) : React.createElement(EmptyValueState, null),\n                        Boolean(showPercentage && item.delta_percent !== null && item.delta_value > 0) && (React.createElement(\"span\", { className: \"fa fa-sort-up\", style: styles.infoArrow, key: `month-over-month-icon-${index}` })),\n                        Boolean(showPercentage && item.delta_percent !== null && item.delta_value < 0) && (React.createElement(\"span\", { className: \"fa fa-sort-down\", style: Object.assign(Object.assign({}, styles.infoArrow), styles.infoArrowDesc), key: `month-over-month-icon-${index}` }))),\n                    React.createElement(\"div\", { style: styles.infoDescription, key: `month-over-month-info-${index}` }, getForDateRangeString(value))));\n            }\n        };\n        this.getTotalCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.cost.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.cost.total.value, item.cost.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport || prevProps.selectedItems !== selectedItems) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { isLoading, onSelected, onSort, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, isLoading: isLoading, onSelected: onSelected, onSort: onSort, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst DetailsTable = injectIntl(withRouter(DetailsTableBase));\nexport { DetailsTable };\n","import { getQuery } from 'api/queries/azureQuery';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType, TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { isEqual } from 'utils/equal';\nimport { tagKey } from 'utils/props';\nconst tagReportType = TagType.tag;\nconst tagReportPathsType = TagPathsType.azure;\nexport class DetailsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { intl, tagReport } = this.props;\n            const options = [\n                {\n                    name: intl.formatMessage(messages.filterByValues, { value: 'subscription_guid' }),\n                    key: 'subscription_guid',\n                },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'service_name' }), key: 'service_name' },\n                {\n                    name: intl.formatMessage(messages.filterByValues, { value: 'resource_location' }),\n                    key: 'resource_location',\n                },\n            ];\n            if (tagReport && tagReport.data && tagReport.data.length) {\n                options.push({ name: intl.formatMessage(messages.filterByValues, { value: tagKey }), key: tagKey });\n            }\n            return options;\n        };\n    }\n    componentDidMount() {\n        const { fetchTag, tagReportFetchStatus, tagQueryString } = this.props;\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        }, () => {\n            if (tagReportFetchStatus !== FetchStatus.inProgress) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchTag, query, tagReport, tagReportFetchStatus, tagQueryString } = this.props;\n        if (!isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            }, () => {\n                if (tagReportFetchStatus !== FetchStatus.inProgress) {\n                    fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n                }\n            });\n        }\n        else if (query && !isEqual(query, prevProps.query)) {\n            if (tagReportFetchStatus !== FetchStatus.inProgress) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n        }\n    }\n    render() {\n        const { groupBy, isAllSelected, isDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onExportClicked, onFilterAdded, onFilterRemoved, pagination, query, selectedItems, tagReport, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, groupBy: groupBy, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onExportClicked: onExportClicked, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.azure, selectedItems: selectedItems, showBulkSelect: true, showExport: true, showFilter: true, tagReport: tagReport, tagReportPathsType: tagReportPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        key_only: true,\n        limit: 1000,\n    });\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, tagQueryString);\n    return {\n        tagReportFetchStatus,\n        tagReport,\n        tagQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst DetailsToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsToolbarBase);\nconst DetailsToolbar = injectIntl(DetailsToolbarConnect);\nexport { DetailsToolbar };\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getQuery, parseQuery } from 'api/queries/azureQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoData } from 'routes/state/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { ExportModal } from 'routes/views/components/export';\nimport { getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { handleCurrencySelected, handleFilterAdded, handleFilterRemoved, handlePerPageSelect, handleSetPage, handleSort, } from 'routes/views/utils/handles';\nimport { filterProviders, hasCurrentMonthData } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedAzureReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getCurrency } from 'utils/localStorage';\nimport { noPrefix, tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { styles } from './azureDetails.styles';\nimport { DetailsHeader } from './detailsHeader';\nimport { DetailsTable } from './detailsTable';\nimport { DetailsToolbar } from './detailsToolbar';\nconst baseQuery = {\n    delta: 'cost',\n    filter: {\n        limit: 10,\n        offset: 0,\n        resolution: 'monthly',\n        time_scope_units: 'month',\n        time_scope_value: -1,\n    },\n    exclude: {},\n    filter_by: {},\n    group_by: {\n        subscription_guid: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst reportType = ReportType.cost;\nconst reportPathsType = ReportPathsType.azure;\nclass AzureDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            isAllSelected: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey || groupById,\n            });\n        };\n        this.getExportModal = (computedItems) => {\n            const { query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `${noPrefix}${groupById}` || item.label === `${noPrefix}${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, router, report } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = offset / limit + 1;\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handlePerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.azure),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { query, report, reportFetchStatus, reportQueryString, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return (React.createElement(DetailsTable, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, groupByTagKey: groupByTagKey, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending) => handleSort(query, router, sortType, isSortAscending), report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, router, report } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(DetailsToolbar, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isDisabled || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onExportClicked: this.handleExportModalOpen, onFilterAdded: filter => handleFilterAdded(query, router, filter), onFilterRemoved: filter => handleFilterRemoved(query, router, filter), pagination: this.getPagination(isDisabled), query: query, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            const groupByKey = groupBy;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: '*',\n                }, order_by: { cost: 'desc' } });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.updateReport = () => {\n            const { fetchReport, reportQueryString } = this.props;\n            fetchReport(reportPathsType, reportType, reportQueryString);\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { currency, intl, providers, providersFetchStatus, query, report, reportError, reportFetchStatus, router, } = this.props;\n        const computedItems = this.getComputedItems();\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const isDisabled = computedItems.length === 0;\n        const title = intl.formatMessage(messages.azureDetailsTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.inProgress) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.complete) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: ProviderType.azure, title: title });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.azureDetails },\n            React.createElement(DetailsHeader, { currency: currency, groupBy: groupById, onCurrencySelected: value => handleCurrencySelected(query, router, value), onGroupBySelected: this.handleGroupBySelected, report: report }),\n            React.createElement(\"div\", { style: styles.content },\n                this.getToolbar(computedItems),\n                this.getExportModal(computedItems),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const currency = featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state) ? getCurrency() : undefined;\n    const query = {\n        delta: 'cost',\n        filter: Object.assign(Object.assign({}, baseQuery.filter), queryFromRoute.filter),\n        filter_by: queryFromRoute.filter_by || baseQuery.filter_by,\n        exclude: queryFromRoute.exclude || baseQuery.exclude,\n        group_by: queryFromRoute.group_by || baseQuery.group_by,\n        order_by: queryFromRoute.order_by || baseQuery.order_by,\n    };\n    const reportQueryString = getQuery(Object.assign(Object.assign({}, query), { currency }));\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        currency,\n        providers: filterProviders(providers, ProviderType.azure),\n        providersError,\n        providersFetchStatus,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n        // Testing...\n        //\n        // providers: {\n        //   meta: {\n        //     count: 0,\n        //   },\n        // } as any,\n        // providersError: {\n        //   response: {\n        //     // status: 401\n        //     status: 500\n        //   }\n        // } as any,\n        // providersFetchStatus: FetchStatus.inProgress,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(AzureDetails)));\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ExportModal } from 'routes/views/components/export';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nimport { tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, reportPathsType, reportQueryString } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { count: 1, groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, intl, item: { source_uuid }, redirectToCostModel, router, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, intl.formatMessage(messages.detailsActionsExport)),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], router) }, intl.formatMessage(messages.detailsActionsPriceList)));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = injectIntl(withRouter(DetailsActionsConnect));\nexport default Actions;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    costColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingRight: 0,\n    },\n    defaultLabel: {\n        minWidth: '63px',\n    },\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    lastReportedColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    lastReportedCell: {\n        textAlign: 'right',\n        paddingRight: '40px',\n    },\n    managedColumn: {\n        textAlign: 'right',\n    },\n    nameColumn: {\n        width: '1%',\n    },\n};\n","import { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport { parseQuery } from 'api/queries/ocpQuery';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass DataTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { intl, router } = this.props;\n            const queryFromRoute = parseQuery(router.location.search);\n            if (queryFromRoute.filter_by) {\n                for (const val of Object.values(queryFromRoute.filter_by)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, router } = this.props;\n            const orderBy = columns[index].orderBy;\n            const queryFromRoute = parseQuery(router.location.search);\n            const direction = queryFromRoute && queryFromRoute.order_by && queryFromRoute.order_by[orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected, rows } = this.props;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isLoading, isRos, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.dataTableAriaLabel), gridBreakPoint: \"grid-2xl\" },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => !isRos && cellIndex === 0 ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${cellIndex}-${rowIndex}`, modifier: \"nowrap\", select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    }, style: item.style })) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", isActionCell: !isRos && cellIndex === row.cells.length - 1, style: item.style }, item.value))))))))),\n            Boolean(rows.length === 0) && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(DataTable));\n","import { getQueryRoute } from 'api/queries/query';\nimport { parseQuery } from 'api/queries/query';\nimport { breakdownDescKey, breakdownTitleKey, orgUnitIdKey, platformCategoryKey } from 'utils/props';\nexport const getBreakdownPath = ({ basePath, description, groupBy, id, isPlatformCosts, router, title, }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const newQuery = Object.assign(Object.assign(Object.assign(Object.assign({}, queryFromRoute), (description && description !== title && { [breakdownDescKey]: description })), (title && { [breakdownTitleKey]: title })), { group_by: {\n            [groupBy]: isPlatformCosts ? '*' : id, // Use ID here -- see https://github.com/project-koku/koku-ui/pull/2821\n        } });\n    if (isPlatformCosts) {\n        if (!newQuery.filter) {\n            newQuery.filter = {};\n        }\n        newQuery.filter.category = platformCategoryKey;\n    }\n    return `${basePath}?${getQueryRoute(newQuery)}`;\n};\nexport const getOrgBreakdownPath = ({ basePath, description, groupBy, groupByOrg, id, router, title, type, }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const newQuery = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, queryFromRoute), (description && description !== title && { [breakdownDescKey]: description })), (title && { [breakdownTitleKey]: title })), (groupByOrg && { [orgUnitIdKey]: groupByOrg })), { group_by: {\n            [groupBy]: id, // This may be overridden below\n        } });\n    if (type === 'account') {\n        if (!newQuery.filter) {\n            newQuery.filter = {};\n        }\n        newQuery.filter.account = id;\n        newQuery.group_by = {\n            [orgUnitIdKey]: groupByOrg,\n        };\n    }\n    else if (type === 'organizational_unit') {\n        newQuery.group_by = {\n            [orgUnitIdKey]: id,\n        };\n    }\n    return `${basePath}?${getQueryRoute(newQuery)}`;\n};\nexport const isPlatformCosts = (queryFromRoute) => {\n    return queryFromRoute && queryFromRoute.filter && queryFromRoute.filter.category === platformCategoryKey;\n};\n"],"names":["ExternalLinkAltIconConfig","name","height","width","svgPath","yOffset","xOffset","ExternalLinkAltIcon","MinusIconConfig","MinusIcon","exports","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","EmptyState","variant","EmptyStateVariant","className","children","EmptyStateIcon","icon","ExclamationCircleIcon","Title","headingLevel","size","EmptyStateBody","href","target","rel","getIdKeyForGroupBy","groupBy","subscription_guid","resource_location","service_name","styles","azureDetails","minHeight","content","paddingBottom","global_spacer_lg","paddingTop","paginationContainer","marginLeft","marginRight","pagination","backgroundColor","global_BackgroundColor_light_100","global_spacer_md","tableContainer","costValue","marginTop","marginBottom","costLabelUnit","fontSize","global_FontSize_sm","color","global_Color_100","dateTitle","textAlign","header","padding","headerContent","display","justifyContent","headerContentLeft","headerContentRight","title","global_spacer_sm","groupByOptions","label","value","tagReportPathsType","DetailsHeaderBase","render","currency","isCurrencyFeatureEnabled","isExportsFeatureEnabled","onCurrencySelected","onGroupBySelected","providers","providersError","report","intl","props","showContent","meta","count","hasCost","total","cost","style","TitleSizes","formatMessage","messages","onSelect","isDisabled","onSelected","options","showTags","Boolean","format","units","mapStateToProps","state","providersQueryString","providersFetchStatus","featureFlags","DetailsHeader","injectIntl","connect","reportPathsType","DetailsTableBase","constructor","super","columns","rows","initDatum","groupByTagKey","isAllSelected","selectedItems","router","computedItems","idKey","orderBy","isSortable","map","item","index","getTotalCost","monthOverMonth","getMonthOverMonthCost","desc","id","actions","getActions","Link","to","basePath","routes","description","toString","push","cells","isOpen","selected","undefined","find","val","selectionDisabled","setState","reportQueryString","Math","abs","delta_value","percentage","delta_percent","showPercentage","showValue","iconOverride","key","percentValue","toFixed","componentDidMount","componentDidUpdate","prevProps","currentReport","data","JSON","stringify","isLoading","onSort","DetailsTable","tagReportType","DetailsToolbarBase","defaultState","getCategoryOptions","tagReport","fetchTag","tagReportFetchStatus","tagQueryString","categoryOptions","query","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onExportClicked","onFilterAdded","onFilterRemoved","resourcePathsType","showBulkSelect","showExport","showFilter","filter","resolution","time_scope_units","time_scope_value","key_only","limit","mapDispatchToProps","DetailsToolbarConnect","DetailsToolbar","baseQuery","delta","offset","exclude","filter_by","group_by","order_by","reportType","AzureDetails","stateProps","dispatchProps","isExportModalOpen","getComputedItems","groupById","getExportModal","items","isAllItems","onClose","handleExportModalClose","getPagination","isBottom","page","Pagination","isCompact","itemCount","onPerPageSelect","event","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","PaginationVariant","widgetId","getTable","reportFetchStatus","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","handleExportModalOpen","action","handleGroupBySelected","groupByKey","newQuery","parse","navigate","location","replace","isSelected","newItems","updateReport","fetchReport","bind","prevState","reportError","noReport","noLocation","search","providerType","queryFromRoute","DetailsActionsBase","isDropdownOpen","handleOnSelect","handleOnToggle","showPriceListOption","source_uuid","redirectToCostModel","DropdownItem","component","onClick","unshift","includes","Dropdown","toggle","KebabToggle","onToggle","isPlain","position","dropdownItems","costModels","DetailsActionsConnect","costColumn","paddingRight","defaultLabel","minWidth","emptyState","infoArrow","infoArrowDesc","bottom","infoDescription","lastReportedColumn","lastReportedCell","managedColumn","nameColumn","DataTable","getEmptyState","values","showMargin","getSortBy","direction","getSortParams","sortBy","handleOnSort","columnIndex","rowId","newRows","row","SortByDirection","isRos","TableComposable","gridBreakPoint","Thead","Tr","col","Th","modifier","sort","Tbody","Td","colSpan","Bullseye","Spinner","rowIndex","cellIndex","dataLabel","isActionCell","select","disable","_event","getBreakdownPath","isPlatformCosts","category","getOrgBreakdownPath","groupByOrg","type","account"],"sourceRoot":""}