{"version":3,"file":"js/awsDetails.11c8b1a10775ef02b77d.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/external-link-alt-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_FontSize_xs.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_disabled_color_100.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_3xl.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_xs.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Unavailable/Unavailable.js","webpack:///./src/routes/components/dataTable/dataTable.styles.ts","webpack:///./src/routes/components/dataTable/dataTable.tsx","webpack:///./src/routes/components/icons/optimizationIcon/optimizationIcon.tsx","webpack:///./src/routes/state/noOptimizations/noOptimizationsState.tsx","webpack:///./src/routes/views/utils/computedReport/getComputedAwsReportItems.ts","webpack:///./src/routes/views/details/awsDetails/awsDetails.styles.ts","webpack:///./src/routes/views/details/awsDetails/detailsHeader.styles.ts","webpack:///./src/routes/views/details/awsDetails/detailsHeader.tsx","webpack:///./src/routes/views/details/awsDetails/detailsTable.tsx","webpack:///./src/routes/views/details/awsDetails/detailsToolbar.tsx","webpack:///./src/routes/views/details/awsDetails/awsDetails.tsx","webpack:///./src/routes/views/details/components/actions/actions.tsx"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExternalLinkAltIcon = createIcon(ExternalLinkAltIconConfig);\n\nexport default ExternalLinkAltIcon;","\"use strict\";\nexports.__esModule = true;\nexports.global_FontSize_xs = {\n  \"name\": \"--pf-global--FontSize--xs\",\n  \"value\": \"0.75rem\",\n  \"var\": \"var(--pf-global--FontSize--xs)\"\n};\nexports[\"default\"] = exports.global_FontSize_xs;","\"use strict\";\nexports.__esModule = true;\nexports.global_disabled_color_100 = {\n  \"name\": \"--pf-global--disabled-color--100\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--disabled-color--100)\"\n};\nexports[\"default\"] = exports.global_disabled_color_100;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_3xl = {\n  \"name\": \"--pf-global--spacer--3xl\",\n  \"value\": \"4rem\",\n  \"var\": \"var(--pf-global--spacer--3xl)\"\n};\nexports[\"default\"] = exports.global_spacer_3xl;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_xs = {\n  \"name\": \"--pf-global--spacer--xs\",\n  \"value\": \"0.25rem\",\n  \"var\": \"var(--pf-global--spacer--xs)\"\n};\nexports[\"default\"] = exports.global_spacer_xs;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport '../Unavailable/Unavailable.css';\nvar Unavailable = function () {\n    return (_jsxs(EmptyState, __assign({ variant: EmptyStateVariant.large, className: \"ins-c-empty-state__unavailable pf-m-redhat-font\" }, { children: [_jsx(EmptyStateIcon, { icon: ExclamationCircleIcon }), _jsx(Title, __assign({ headingLevel: \"h5\", size: \"lg\" }, { children: \"This page is temporarily unavailable\" })), _jsxs(EmptyStateBody, { children: [\"Try refreshing the page. If the problem persists, contact your organization administrator or visit our\", _jsxs(\"a\", __assign({ href: \"https://status.redhat.com/\", target: \"_blank\", rel: \"noopener noreferrer\" }, { children: [' ', \"status page\"] })), ' ', \"for known outages.\"] })] })));\n};\nexport default Unavailable;\n//# sourceMappingURL=Unavailable.js.map","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    costColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingRight: 0,\n    },\n    defaultLabel: {\n        minWidth: '50px',\n    },\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    lastItem: {\n        textAlign: 'right',\n        paddingRight: '3.8rem',\n    },\n    lastItemColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    managedColumn: {\n        textAlign: 'right',\n    },\n    nameColumn: {\n        width: '1%',\n    },\n};\n","import './dataTable.scss';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, TableVariant, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { NoOptimizationsState } from 'routes/state/noOptimizations/noOptimizationsState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass DataTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { filterBy, intl, isOptimizations } = this.props;\n            if (filterBy) {\n                for (const val of Object.values(filterBy)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            if (isOptimizations) {\n                return React.createElement(NoOptimizationsState, null);\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, orderBy } = this.props;\n            const direction = orderBy && orderBy[columns[index].orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected, rows } = this.props;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnRowClick = (event, rowIndex) => {\n            const { onRowClick, rows } = this.props;\n            rows.map(row => (row.selected = false));\n            rows[rowIndex].selected = true;\n            this.setState({ rows }, () => {\n                if (onRowClick) {\n                    onRowClick(event, rowIndex);\n                }\n            });\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isActionsCell = false, isLoading, isOptimizations, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.dataTableAriaLabel), className: \"tableOverride\", gridBreakPoint: \"grid-2xl\", hasSelectableRowCaption: isOptimizations, variant: TableVariant.compact },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { isSelectable: isOptimizations, isHoverable: isOptimizations, isRowSelected: isOptimizations && row.selected, onRowClick: isOptimizations ? _event => this.handleOnRowClick(_event, rowIndex) : undefined, key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 && !isOptimizations ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${cellIndex}-${rowIndex}`, modifier: \"nowrap\", select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    }, style: item.style })) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", isActionCell: isActionsCell && cellIndex === row.cells.length - 1, style: item.style }, item.value))))))))),\n            rows.length === 0 && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(DataTable));\n","import './optimizationIcon.scss';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nconst icon = require('./Red_Hat-IT_Optimization-Gray.svg');\nconst OptimizationIcon = ({ className, intl }) => {\n    return (React.createElement(\"img\", { className: `optimization-icon ${className}`, src: icon, alt: intl.formatMessage(messages.optimizations), \"aria-hidden\": \"true\" }));\n};\nexport default injectIntl(OptimizationIcon);\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title, TitleSizes, } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { OptimizationIcon } from 'routes/components/icons/optimizationIcon';\nclass NoOptimizationsStateBase extends React.Component {\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: OptimizationIcon }),\n            React.createElement(Title, { headingLevel: \"h1\", size: TitleSizes.lg }, intl.formatMessage(messages.noOptimizationsTitle)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(messages.noOptimizationsDesc))));\n    }\n}\nconst NoOptimizationsState = injectIntl(NoOptimizationsStateBase);\nexport { NoOptimizationsState };\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.account) {\n        return 'account';\n    }\n    if (groupBy.aws_category) {\n        return 'aws_category';\n    }\n    if (groupBy.org_unit_id) {\n        return 'org_unit_id';\n    }\n    if (groupBy.region) {\n        return 'region';\n    }\n    if (groupBy.service) {\n        return 'service';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    awsDetails: {\n        minHeight: '100%',\n    },\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    toolbarContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    costType: {\n        display: 'flex',\n        marginLeft: global_spacer_md.var,\n    },\n    costValue: {\n        marginTop: global_spacer_lg.var,\n        marginBottom: 0,\n    },\n    dateTitle: {\n        textAlign: 'end',\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentLeft: {\n        display: 'flex',\n        minHeight: '90px',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes } from '@patternfly/react-core';\nimport { OrgPathsType } from 'api/orgs/org';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType } from 'api/tags/tag';\nimport { ExportsLink } from 'components/drawers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { CostType } from 'routes/components/costType';\nimport { Currency } from 'routes/components/currency';\nimport { GroupBy } from 'routes/views/components/groupBy';\nimport { getIdKeyForGroupBy } from 'routes/views/utils/computedReport/getComputedAwsReportItems';\nimport { filterProviders } from 'routes/views/utils/providers';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { getSinceDateRangeString } from 'utils/dates';\nimport { formatCurrency } from 'utils/format';\nimport { styles } from './detailsHeader.styles';\nconst groupByOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nconst orgPathsType = OrgPathsType.aws;\nconst resourcePathsType = ResourcePathsType.aws;\nconst tagPathsType = TagPathsType.aws;\nclass DetailsHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.handleOnCostTypeSelected = (value) => {\n            const { onCostTypeSelected } = this.props;\n            if (onCostTypeSelected) {\n                onCostTypeSelected(value);\n            }\n        };\n    }\n    render() {\n        const { costType, currency, groupBy, isExportsFeatureEnabled, onCurrencySelected, onGroupBySelected, providers, providersError, report, intl, } = this.props;\n        const showContent = report && !providersError && providers && providers.meta && providers.meta.count > 0;\n        const hasCost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.awsDetailsTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(\"div\", { style: styles.headerContentLeft },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: !showContent, onSelected: onGroupBySelected, options: groupByOptions, orgPathsType: orgPathsType, resourcePathsType: resourcePathsType, showCostCategories: true, showOrgs: true, showTags: true, tagPathsType: tagPathsType }),\n                    React.createElement(\"div\", { style: styles.costType },\n                        React.createElement(CostType, { costType: costType, onSelect: this.handleOnCostTypeSelected }))),\n                showContent && (React.createElement(\"div\", null,\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: TitleSizes['4xl'] }, formatCurrency(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD')),\n                    React.createElement(\"div\", { style: styles.dateTitle }, getSinceDateRangeString()))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        providers: filterProviders(providers, ProviderType.aws),\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n    };\n});\nconst DetailsHeader = injectIntl(connect(mapStateToProps, {})(DetailsHeaderBase));\nexport { DetailsHeader };\n","import 'routes/components/dataTable/dataTable.scss';\nimport { ReportPathsType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { DataTable } from 'routes/components/dataTable';\nimport { styles } from 'routes/components/dataTable/dataTable.styles';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { Actions } from 'routes/views/details/components/actions';\nimport { getUnsortedComputedReportItems } from 'routes/views/utils/computedReport/getComputedReportItems';\nimport { getOrgBreakdownPath } from 'routes/views/utils/paths';\nimport { getForDateRangeString, getNoDataForDateRangeString } from 'utils/dates';\nimport { formatCurrency, formatPercentage } from 'utils/format';\nimport { formatPath } from 'utils/paths';\nimport { noPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nconst reportPathsType = ReportPathsType.aws;\nclass DetailsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { groupBy, groupByCostCategory, groupByOrg, groupByTagKey, intl, isAllSelected, report, router, selectedItems, } = this.props;\n            if (!report) {\n                return;\n            }\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: (groupByCostCategory\n                    ? groupByCostCategory\n                    : groupByTagKey\n                        ? groupByTagKey\n                        : groupByOrg\n                            ? 'org_entities'\n                            : groupBy),\n            });\n            const columns = groupByCostCategory || groupByTagKey || groupByOrg\n                ? [\n                    {\n                        name: '',\n                    },\n                    {\n                        name: groupByCostCategory\n                            ? intl.formatMessage(messages.costCategoryNames)\n                            : groupByOrg\n                                ? intl.formatMessage(messages.names, { count: 2 })\n                                : intl.formatMessage(messages.tagNames),\n                    },\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign({ orderBy: groupBy === 'account' ? 'account_alias' : groupBy, name: intl.formatMessage(messages.detailsResourceNames, { value: groupBy }) }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ];\n            computedItems.map((item, index) => {\n                const cost = this.getTotalCost(item, index);\n                const monthOverMonth = this.getMonthOverMonthCost(item, index);\n                const label = item && item.label && item.label !== null ? item.label : '';\n                const isDisabled = label === `${noPrefix}${groupBy}` ||\n                    label === `${noPrefix}${groupByCostCategory}` ||\n                    label === `${noPrefix}${groupByTagKey}`;\n                const desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                const actions = this.getActions(item, isDisabled);\n                const name = isDisabled ? label : (React.createElement(Link, { to: getOrgBreakdownPath({\n                        basePath: formatPath(routes.awsDetailsBreakdown.path),\n                        description: item.id,\n                        groupBy,\n                        groupByOrg,\n                        id: item.id,\n                        router,\n                        title: item.label,\n                        type: item.type,\n                    }) }, label));\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: (React.createElement(\"div\", null,\n                                name,\n                                desc)),\n                        },\n                        { value: monthOverMonth },\n                        { value: cost, style: styles.managedColumn },\n                        { value: actions },\n                    ],\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                    selectionDisabled: isDisabled,\n                });\n            });\n            this.setState({\n                columns,\n                rows,\n            });\n        };\n        this.getActions = (item, isDisabled = false) => {\n            const { groupBy, reportQueryString } = this.props;\n            return (React.createElement(Actions, { groupBy: groupBy, isDisabled: isDisabled, item: item, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getMonthOverMonthCost = (item, index) => {\n            const { intl } = this.props;\n            const value = formatCurrency(Math.abs(item.cost.total.value - item.delta_value), item.cost.total.units);\n            const percentage = item.delta_percent !== null ? formatPercentage(Math.abs(item.delta_percent)) : 0;\n            const showPercentage = !(percentage === 0 || percentage === '0.00');\n            const showValue = item.delta_percent !== null; // Workaround for https://github.com/project-koku/koku/issues/1395\n            let iconOverride;\n            if (showPercentage) {\n                iconOverride = 'iconOverride';\n                if (item.delta_percent !== null && item.delta_value < 0) {\n                    iconOverride += ' decrease';\n                }\n                if (item.delta_percent !== null && item.delta_value > 0) {\n                    iconOverride += ' increase';\n                }\n            }\n            if (!showValue) {\n                return getNoDataForDateRangeString();\n            }\n            else {\n                return (React.createElement(\"div\", { className: \"monthOverMonthOverride\" },\n                    React.createElement(\"div\", { className: iconOverride, key: `month-over-month-cost-${index}` },\n                        showPercentage ? intl.formatMessage(messages.percent, { value: percentage }) : React.createElement(EmptyValueState, null),\n                        showPercentage && item.delta_percent !== null && item.delta_value > 0 && (React.createElement(\"span\", { className: \"fa fa-sort-up\", style: styles.infoArrow, key: `month-over-month-icon-${index}` })),\n                        showPercentage && item.delta_percent !== null && item.delta_value < 0 && (React.createElement(\"span\", { className: \"fa fa-sort-down\", style: Object.assign(Object.assign({}, styles.infoArrow), styles.infoArrowDesc), key: `month-over-month-icon-${index}` }))),\n                    React.createElement(\"div\", { style: styles.infoDescription, key: `month-over-month-info-${index}` }, getForDateRangeString(value))));\n            }\n        };\n        this.getTotalCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.cost.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.cost.total.value, item.cost.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport || prevProps.selectedItems !== selectedItems) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { filterBy, isLoading, onSelected, onSort, orderBy, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, filterBy: filterBy, isActionsCell: true, isLoading: isLoading, onSelected: onSelected, onSort: onSort, orderBy: orderBy, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst DetailsTable = injectIntl(withRouter(DetailsTableBase));\nexport { DetailsTable };\n","import { OrgPathsType, OrgType } from 'api/orgs/org';\nimport { getQuery } from 'api/queries/query';\nimport { ResourcePathsType, ResourceType } from 'api/resources/resource';\nimport { TagPathsType, TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/components/dataToolbar';\nimport { isEqual } from 'routes/views/utils/equal';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { orgActions, orgSelectors } from 'store/orgs';\nimport { resourceActions, resourceSelectors } from 'store/resources';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { awsCategoryKey, orgUnitIdKey, tagKey } from 'utils/props';\nconst orgPathsType = OrgPathsType.aws;\nconst orgType = OrgType.org;\nconst resourcePathsType = ResourcePathsType.aws;\nconst resourceType = ResourceType.aws_category;\nconst tagPathsType = TagPathsType.aws;\nconst tagType = TagType.tag;\nexport class DetailsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { intl, isCostCategoriesFeatureEnabled, orgReport, resourceReport, tagReport } = this.props;\n            const options = [\n                { name: intl.formatMessage(messages.filterByValues, { value: 'account' }), key: 'account' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'service' }), key: 'service' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'region' }), key: 'region' },\n            ];\n            if (orgReport && orgReport.data && orgReport.data.length) {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: 'org_unit_id' }),\n                    key: orgUnitIdKey,\n                });\n            }\n            if (tagReport && tagReport.data && tagReport.data.length) {\n                options.push({ name: intl.formatMessage(messages.filterByValues, { value: tagKey }), key: tagKey });\n            }\n            if (resourceReport && resourceReport.data && resourceReport.data.length && isCostCategoriesFeatureEnabled) {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: awsCategoryKey }),\n                    key: awsCategoryKey,\n                });\n            }\n            return options.sort((a, b) => {\n                if (a.name < b.name) {\n                    return -1;\n                }\n                if (a.name > b.name) {\n                    return 1;\n                }\n                return 0;\n            });\n        };\n        this.updateReport = () => {\n            const { fetchOrg, fetchResource, fetchTag, isCostCategoriesFeatureEnabled, orgQueryString, resourceQueryString, tagQueryString, } = this.props;\n            fetchOrg(orgPathsType, orgType, orgQueryString);\n            if (isCostCategoriesFeatureEnabled) {\n                fetchResource(resourcePathsType, resourceType, resourceQueryString);\n            }\n            fetchTag(tagPathsType, tagType, tagQueryString);\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        }, () => {\n            this.updateReport();\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { orgReport, query, resourceReport, tagReport } = this.props;\n        if (!isEqual(orgReport, prevProps.orgReport) ||\n            !isEqual(resourceReport, prevProps.resourceReport) ||\n            !isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            }, () => {\n                this.updateReport();\n            });\n        }\n        else if (query && !isEqual(query, prevProps.query)) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { groupBy, isAllSelected, isBulkSelectDisabled, isDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onExportClicked, onFilterAdded, onFilterRemoved, orgReport, pagination, query, resourceReport, selectedItems, tagReport, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, groupBy: groupBy, isAllSelected: isAllSelected, isDisabled: isDisabled, isBulkSelectDisabled: isBulkSelectDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onExportClicked: onExportClicked, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, orgReport: orgReport, pagination: pagination, query: query, resourcePathsType: resourcePathsType, resourceReport: resourceReport, selectedItems: selectedItems, showBulkSelect: true, showExcludes: true, showExport: true, showFilter: true, tagPathsType: tagPathsType, tagReport: tagReport }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    // Note: Omitting key_only would help to share a single, cached request. Only the toolbar requires key values;\n    // however, for better server-side performance, we chose to use key_only here.\n    const baseQuery = {\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        key_only: true,\n        limit: 1000,\n    };\n    const resourceQueryString = getQuery({\n        key_only: true,\n    });\n    const resourceReport = resourceSelectors.selectResource(state, resourcePathsType, resourceType, resourceQueryString);\n    const resourceReportFetchStatus = resourceSelectors.selectResourceFetchStatus(state, resourcePathsType, resourceType, resourceQueryString);\n    const tagQueryString = getQuery(Object.assign({}, baseQuery));\n    const tagReport = tagSelectors.selectTag(state, tagPathsType, tagType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagPathsType, tagType, tagQueryString);\n    const orgQueryString = getQuery(Object.assign({}, baseQuery));\n    const orgReport = orgSelectors.selectOrg(state, orgPathsType, orgType, orgQueryString);\n    const orgReportFetchStatus = orgSelectors.selectOrgFetchStatus(state, orgPathsType, orgType, orgQueryString);\n    return {\n        isCostCategoriesFeatureEnabled: featureFlagsSelectors.selectIsCostCategoriesFeatureEnabled(state),\n        orgReport,\n        orgReportFetchStatus,\n        orgQueryString,\n        resourceReport,\n        resourceReportFetchStatus,\n        resourceQueryString,\n        tagReport,\n        tagReportFetchStatus,\n        tagQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchOrg: orgActions.fetchOrg,\n    fetchResource: resourceActions.fetchResource,\n    fetchTag: tagActions.fetchTag,\n};\nconst DetailsToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsToolbarBase);\nconst DetailsToolbar = injectIntl(DetailsToolbarConnect);\nexport { DetailsToolbar };\n","import 'routes/components/dataTable/dataTable.scss';\nimport { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getQuery, parseQuery } from 'api/queries/awsQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoData } from 'routes/state/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { ExportModal } from 'routes/views/components/export';\nimport { getIdKeyForGroupBy } from 'routes/views/utils/computedReport/getComputedAwsReportItems';\nimport { getUnsortedComputedReportItems } from 'routes/views/utils/computedReport/getComputedReportItems';\nimport { getGroupByCostCategory, getGroupByOrgValue, getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { handleOnCostTypeSelected, handleOnCurrencySelected, handleOnFilterAdded, handleOnFilterRemoved, handleOnPerPageSelect, handleOnSetPage, handleOnSort, } from 'routes/views/utils/navHandles';\nimport { filterProviders, hasCurrentMonthData } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getCostType, getCurrency } from 'utils/localStorage';\nimport { awsCategoryPrefix, logicalOrPrefix, noPrefix, orgUnitIdKey, tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { styles } from './awsDetails.styles';\nimport { DetailsHeader } from './detailsHeader';\nimport { DetailsTable } from './detailsTable';\nimport { DetailsToolbar } from './detailsToolbar';\nconst baseQuery = {\n    filter: {\n        limit: 10,\n        offset: 0,\n    },\n    exclude: {},\n    filter_by: {},\n    group_by: {\n        account: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst reportType = ReportType.cost;\nconst reportPathsType = ReportPathsType.aws;\nclass AwsDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            isAllSelected: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const groupBy = groupByTagKey || groupById;\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: groupBy === orgUnitIdKey ? 'org_entities' : groupBy,\n            });\n        };\n        this.getExportModal = (computedItems) => {\n            const { query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByCostCategory = getGroupByCostCategory(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `${noPrefix}${groupById}` || item.label === `${noPrefix}${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByCostCategory\n                    ? `${awsCategoryPrefix}${groupByCostCategory}`\n                    : groupByTagKey\n                        ? `${tagPrefix}${groupByTagKey}`\n                        : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, router, report } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = Math.trunc(offset / limit + 1);\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handleOnPerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleOnSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.aws),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { query, report, reportFetchStatus, reportQueryString, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByCostCategory = getGroupByCostCategory(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            const groupByOrg = getGroupByOrgValue(query);\n            return (React.createElement(DetailsTable, { filterBy: query.filter_by, groupBy: groupByCostCategory\n                    ? `${awsCategoryPrefix}${groupByCostCategory}`\n                    : groupByTagKey\n                        ? `${tagPrefix}${groupByTagKey}`\n                        : groupById, groupByCostCategory: groupByCostCategory, groupByTagKey: groupByTagKey, groupByOrg: groupByOrg, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending) => handleOnSort(query, router, sortType, isSortAscending), orderBy: query.order_by, report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, router, report } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByCostCategory = getGroupByCostCategory(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(DetailsToolbar, { groupBy: groupByCostCategory\n                    ? `${awsCategoryPrefix}${groupByCostCategory}`\n                    : groupByTagKey\n                        ? `${tagPrefix}${groupByTagKey}`\n                        : groupById, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isDisabled || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onExportClicked: this.handleExportModalOpen, onFilterAdded: filter => handleOnFilterAdded(query, router, filter), onFilterRemoved: filter => handleOnFilterRemoved(query, router, filter), pagination: this.getPagination(isDisabled), query: query, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            let groupByKey = groupBy;\n            let value = '*';\n            // Check for org units\n            const index = groupBy && groupBy.indexOf(orgUnitIdKey);\n            if (index !== -1) {\n                groupByKey = orgUnitIdKey.substring(0, orgUnitIdKey.length);\n                value = groupBy.slice(orgUnitIdKey.length);\n            }\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: value,\n                }, order_by: undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.updateReport = () => {\n            const { fetchReport, reportQueryString } = this.props;\n            fetchReport(reportPathsType, reportType, reportQueryString);\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { costType, currency, intl, providers, providersFetchStatus, query, report, reportError, reportFetchStatus, router, } = this.props;\n        const computedItems = this.getComputedItems();\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const isDisabled = computedItems.length === 0;\n        const title = intl.formatMessage(messages.awsDetailsTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.inProgress) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.complete) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: ProviderType.aws, title: title });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.awsDetails },\n            React.createElement(DetailsHeader, { costType: costType, currency: currency, groupBy: groupById, onCostTypeSelected: () => handleOnCostTypeSelected(query, router), onCurrencySelected: () => handleOnCurrencySelected(query, router), onGroupBySelected: this.handleGroupBySelected, report: report }),\n            React.createElement(\"div\", { style: styles.content },\n                React.createElement(\"div\", { style: styles.toolbarContainer }, this.getToolbar(computedItems)),\n                this.getExportModal(computedItems),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const costType = getCostType();\n    const currency = getCurrency();\n    const query = Object.assign(Object.assign({}, baseQuery), queryFromRoute);\n    const reportQuery = {\n        cost_type: costType,\n        currency,\n        delta: 'cost',\n        exclude: query.exclude,\n        filter: Object.assign(Object.assign({}, query.filter), { resolution: 'monthly', time_scope_units: 'month', time_scope_value: -1 }),\n        filter_by: Object.assign(Object.assign({}, query.filter_by), (query.filter_by &&\n            query.filter_by[orgUnitIdKey] && {\n            [`${logicalOrPrefix}${orgUnitIdKey}`]: query.filter_by[orgUnitIdKey],\n            [orgUnitIdKey]: undefined,\n        })),\n        group_by: query.group_by,\n        order_by: query.order_by,\n    };\n    const reportQueryString = getQuery(reportQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        costType,\n        currency,\n        providers: filterProviders(providers, ProviderType.aws),\n        providersError,\n        providersFetchStatus,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(AwsDetails)));\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ExportModal } from 'routes/views/components/export';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nimport { tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, reportPathsType, reportQueryString } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { count: 1, groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, intl, item: { source_uuid }, redirectToCostModel, router, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, intl.formatMessage(messages.detailsActionsExport)),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], router) }, intl.formatMessage(messages.detailsActionsPriceList)));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = injectIntl(withRouter(DetailsActionsConnect));\nexport default Actions;\n"],"names":["ExternalLinkAltIconConfig","name","height","width","svgPath","yOffset","xOffset","ExternalLinkAltIcon","exports","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","EmptyState","variant","EmptyStateVariant","className","children","EmptyStateIcon","icon","ExclamationCircleIcon","Title","headingLevel","size","EmptyStateBody","href","target","rel","styles","costColumn","textAlign","display","justifyContent","paddingRight","defaultLabel","minWidth","emptyState","backgroundColor","paddingTop","infoArrow","position","infoArrowDesc","bottom","infoDescription","color","fontSize","lastItem","lastItemColumn","managedColumn","nameColumn","DataTable","constructor","props","super","getEmptyState","filterBy","intl","isOptimizations","val","values","filter","showMargin","formatMessage","messages","getSortBy","index","columns","orderBy","direction","getSortParams","sortBy","onSort","handleOnSort","columnIndex","handleOnSelect","event","isSelected","rowId","onSelected","rows","newRows","items","map","row","selected","item","setState","SortByDirection","handleOnRowClick","rowIndex","onRowClick","bind","render","isActionsCell","isLoading","TableComposable","gridBreakPoint","hasSelectableRowCaption","TableVariant","Thead","Tr","col","Th","key","value","modifier","sort","isSortable","undefined","style","Tbody","Td","colSpan","Bullseye","Spinner","isSelectable","isHoverable","isRowSelected","_event","cells","cellIndex","dataLabel","isActionCell","select","disable","selectionDisabled","onSelect","injectIntl","src","alt","NoOptimizationsStateBase","TitleSizes","NoOptimizationsState","getIdKeyForGroupBy","groupBy","account","aws_category","org_unit_id","region","service","awsDetails","minHeight","content","paddingBottom","global_spacer_lg","paginationContainer","marginLeft","marginRight","pagination","global_BackgroundColor_light_100","global_spacer_md","tableContainer","toolbarContainer","costLabelUnit","global_FontSize_sm","global_Color_100","costType","costValue","marginTop","marginBottom","dateTitle","header","padding","headerContent","headerContentLeft","headerContentRight","title","global_spacer_sm","groupByOptions","label","orgPathsType","resourcePathsType","tagPathsType","DetailsHeaderBase","handleOnCostTypeSelected","onCostTypeSelected","currency","isExportsFeatureEnabled","onCurrencySelected","onGroupBySelected","providers","providersError","report","showContent","meta","count","hasCost","total","cost","isDisabled","options","showCostCategories","showOrgs","showTags","format","units","mapStateToProps","state","providersQueryString","providersFetchStatus","featureFlags","DetailsHeader","connect","reportPathsType","DetailsTableBase","initDatum","groupByCostCategory","groupByOrg","groupByTagKey","isAllSelected","router","selectedItems","computedItems","idKey","getTotalCost","monthOverMonth","getMonthOverMonthCost","desc","id","actions","getActions","Link","to","basePath","routes","description","type","push","find","reportQueryString","Math","abs","delta_value","percentage","delta_percent","showPercentage","showValue","iconOverride","percentValue","toFixed","componentDidMount","componentDidUpdate","prevProps","currentReport","data","JSON","stringify","DetailsTable","orgType","resourceType","tagType","DetailsToolbarBase","defaultState","getCategoryOptions","isCostCategoriesFeatureEnabled","orgReport","resourceReport","tagReport","a","b","updateReport","fetchOrg","fetchResource","fetchTag","orgQueryString","resourceQueryString","tagQueryString","categoryOptions","query","isBulkSelectDisabled","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onExportClicked","onFilterAdded","onFilterRemoved","showBulkSelect","showExcludes","showExport","showFilter","baseQuery","resolution","time_scope_units","time_scope_value","key_only","limit","resourceReportFetchStatus","tagReportFetchStatus","orgReportFetchStatus","mapDispatchToProps","DetailsToolbarConnect","DetailsToolbar","offset","exclude","filter_by","group_by","order_by","reportType","AwsDetails","stateProps","dispatchProps","isExportModalOpen","getComputedItems","groupById","getExportModal","isAllItems","isOpen","onClose","handleExportModalClose","getPagination","isBottom","page","trunc","Pagination","isCompact","itemCount","onPerPageSelect","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","PaginationVariant","widgetId","getTable","reportFetchStatus","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","handleExportModalOpen","action","handleGroupBySelected","groupByKey","indexOf","slice","newQuery","parse","navigate","location","replace","newItems","fetchReport","prevState","reportError","noReport","noLocation","search","providerType","queryFromRoute","reportQuery","cost_type","delta","DetailsActionsBase","isDropdownOpen","handleOnToggle","showPriceListOption","source_uuid","redirectToCostModel","DropdownItem","component","onClick","unshift","includes","Dropdown","toggle","KebabToggle","onToggle","isPlain","dropdownItems","costModels","DetailsActionsConnect"],"sourceRoot":""}