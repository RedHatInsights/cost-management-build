{"version":3,"file":"js/overview.c77e6599c3d66971399a.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/ok-icon.js","webpack:///./src/api/queries/providersQuery.ts","webpack:///./src/api/queries/userAccessQuery.ts","webpack:///./src/routes/components/currency/currency.styles.ts","webpack:///./src/routes/components/currency/currency.tsx","webpack:///./src/routes/settings/calculations/calculations.styles.ts","webpack:///./src/routes/settings/calculations/calculations.tsx","webpack:///./src/routes/settings/costModelsDetails/utils/query.tsx","webpack:///./src/routes/settings/costModelsDetails/bottomPagination.tsx","webpack:///./src/routes/settings/costModelsDetails/costModelsDetails.styles.ts","webpack:///./src/routes/settings/costModelWizard/api.ts","webpack:///./src/routes/settings/costModelWizard/context.ts","webpack:///./src/routes/settings/costModelWizard/wizard.styles.ts","webpack:///./src/routes/settings/costModelWizard/distribution.tsx","webpack:///./src/routes/settings/costModelWizard/steps.tsx","webpack:///./src/routes/settings/costModelWizard/generalInformation.tsx","webpack:///./src/routes/settings/costModelWizard/markup.tsx","webpack:///./src/routes/settings/components/addPriceList.tsx","webpack:///./src/routes/settings/components/paginationToolbarTemplate.tsx","webpack:///./src/routes/settings/costModelWizard/priceListTable.tsx","webpack:///./src/routes/settings/costModelWizard/priceList.tsx","webpack:///./src/routes/settings/costModelWizard/review.tsx","webpack:///./src/routes/settings/costModelWizard/assignSourcesToolbar.tsx","webpack:///./src/routes/settings/costModelWizard/table.tsx","webpack:///./src/routes/settings/costModelWizard/sources.tsx","webpack:///./src/routes/settings/costModelWizard/costModelWizard.tsx","webpack:///./src/routes/settings/costModelsDetails/createCostModelButton.tsx","webpack:///./src/routes/settings/costModelsDetails/utils/dialog.tsx","webpack:///./src/routes/settings/costModelsDetails/dialog.tsx","webpack:///./src/routes/settings/costModelsDetails/emptyStateBase.tsx","webpack:///./src/routes/settings/costModelsDetails/noCostModels.tsx","webpack:///./src/routes/settings/costModelsDetails/table.tsx","webpack:///./src/routes/settings/costModelsDetails/utils/table.tsx","webpack:///./src/routes/settings/costModelsDetails/utils/filters.tsx","webpack:///./src/routes/settings/costModelsDetails/utils/toolbar.tsx","webpack:///./src/routes/settings/costModelsDetails/toolbar.tsx","webpack:///./src/routes/settings/costModelsDetails/costModelsDetails.tsx","webpack:///./src/routes/settings/settings.styles.ts","webpack:///./src/routes/settings/settings.tsx","webpack:///./src/routes/state/noData/noDataState.tsx","webpack:///./src/routes/state/noData/noData.tsx","webpack:///./src/routes/components/icons/costIcon/costIcon.tsx","webpack:///./src/routes/state/noProviders/noProvidersState.styles.ts","webpack:///./src/routes/state/noProviders/noProvidersState.tsx","webpack:///./src/routes/state/noProviders/noProviders.tsx","webpack:///./src/routes/views/components/perspective/perspective.tsx","webpack:///./src/routes/views/overview/components/dashboardBase.tsx","webpack:///./src/routes/views/overview/components/optimizationsSummary/optimizations.styles.ts","webpack:///./src/routes/views/overview/components/optimizationsSummary/optimizationsSummary.tsx","webpack:///./src/routes/views/overview/components/chartComparison.tsx","webpack:///./src/routes/views/overview/components/dashboardWidget.styles.ts","webpack:///./src/routes/views/overview/components/dashboardWidgetBase.tsx","webpack:///./src/routes/views/overview/awsDashboard/awsDashboardWidget.tsx","webpack:///./src/routes/views/overview/awsDashboard/awsDashboard.tsx","webpack:///./src/routes/views/overview/awsOcpDashboard/awsOcpDashboardWidget.tsx","webpack:///./src/routes/views/overview/awsOcpDashboard/awsOcpDashboard.tsx","webpack:///./src/routes/views/overview/azureDashboard/azureDashboardWidget.tsx","webpack:///./src/routes/views/overview/azureDashboard/azureDashboard.tsx","webpack:///./src/routes/views/overview/azureOcpDashboard/azureOcpDashboardWidget.tsx","webpack:///./src/routes/views/overview/azureOcpDashboard/azureOcpDashboard.tsx","webpack:///./src/routes/views/overview/gcpDashboard/gcpDashboardWidget.tsx","webpack:///./src/routes/views/overview/gcpDashboard/gcpDashboard.tsx","webpack:///./src/routes/views/overview/gcpOcpDashboard/gcpOcpDashboardWidget.tsx","webpack:///./src/routes/views/overview/gcpOcpDashboard/gcpOcpDashboard.tsx","webpack:///./src/routes/views/overview/ibmDashboard/ibmDashboardWidget.tsx","webpack:///./src/routes/views/overview/ibmDashboard/ibmDashboard.tsx","webpack:///./src/routes/views/overview/ocpCloudDashboard/ocpCloudDashboardWidget.tsx","webpack:///./src/routes/views/overview/ocpCloudDashboard/ocpCloudDashboard.tsx","webpack:///./src/routes/views/overview/ocpDashboard/ocpDashboardWidget.styles.ts","webpack:///./src/routes/views/overview/ocpDashboard/ocpDashboardWidget.tsx","webpack:///./src/routes/views/overview/ocpDashboard/ocpDashboard.tsx","webpack:///./src/routes/views/overview/rhelDashboard/rhelDashboardWidget.styles.ts","webpack:///./src/routes/views/overview/rhelDashboard/rhelDashboardWidget.tsx","webpack:///./src/routes/views/overview/rhelDashboard/rhelDashboard.tsx","webpack:///./src/routes/views/overview/ociDashboard/ociDashboardWidget.tsx","webpack:///./src/routes/views/overview/ociDashboard/ociDashboard.tsx","webpack:///./src/routes/views/overview/overview.styles.ts","webpack:///./src/routes/views/overview/overview.tsx","webpack:///./src/api/queries/overviewQuery.ts","webpack:///./src/routes/views/utils/providers.ts","webpack:///./src/utils/userAccess.ts"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const OkIconConfig = {\n  name: 'OkIcon',\n  height: 1024,\n  width: 1024,\n  svgPath: 'M668.3,361.4 L465.1,564.6 L352.2,451.7 C346.210177,445.698444 338.079189,442.325817 329.6,442.325817 C321.120811,442.325817 312.989823,445.698444 307,451.7 L261.8,496.9 C255.798444,502.889823 252.425817,511.020811 252.425817,519.5 C252.425817,527.979189 255.798444,536.110177 261.8,542.1 L442.4,722.7 C448.389823,728.701556 456.520811,732.074183 465,732.074183 C473.479189,732.074183 481.610177,728.701556 487.6,722.7 L758.6,451.7 C764.601556,445.710177 767.974183,437.579189 767.974183,429.1 C767.974183,420.620811 764.601556,412.489823 758.6,406.5 L713.4,361.3 C700.916226,348.87879 680.728569,348.923552 668.3,361.4 M512.1,127.9 C300.3,127.9 128.1,300.2 128.1,511.9 C128.1,723.8 300.3,895.9 512.1,895.9 C723.9,895.9 896.1,723.7 896.1,511.9 C896.1,300.1 723.8,127.9 512.1,127.9 M512.1,1024 C229.7,1024 0,794.3 0,512 C0,229.7 229.7,0 512.1,0 C794.3,0 1024,229.7 1024,512 C1024,794.3 794.3,1024 512.1,1024',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const OkIcon = createIcon(OkIconConfig);\n\nexport default OkIcon;","import { parse, stringify } from 'qs';\nexport function getProvidersQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseProvidersQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","import { parse, stringify } from 'qs';\nexport function getUserAccessQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseUserAccessQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    currencySelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    currencyLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n        whiteSpace: 'nowrap',\n    },\n};\n","import './currency.scss';\nimport { Select, SelectOption, SelectVariant, Title, TitleSizes } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { setCurrency } from 'utils/localStorage';\nimport { styles } from './currency.styles';\nexport const currencyOptions = [\n    { label: messages.currencyOptions, value: 'AUD' },\n    { label: messages.currencyOptions, value: 'CAD' },\n    { label: messages.currencyOptions, value: 'CHF' },\n    { label: messages.currencyOptions, value: 'CNY' },\n    { label: messages.currencyOptions, value: 'DKK' },\n    { label: messages.currencyOptions, value: 'EUR' },\n    { label: messages.currencyOptions, value: 'GBP' },\n    { label: messages.currencyOptions, value: 'HKD' },\n    { label: messages.currencyOptions, value: 'JPY' },\n    { label: messages.currencyOptions, value: 'NOK' },\n    { label: messages.currencyOptions, value: 'NZD' },\n    { label: messages.currencyOptions, value: 'SEK' },\n    { label: messages.currencyOptions, value: 'SGD' },\n    { label: messages.currencyOptions, value: 'USD' },\n    { label: messages.currencyOptions, value: 'ZAR' },\n];\nclass CurrencyBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isSelectOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getSelect = () => {\n            const { currency, isDisabled, showLabel = true } = this.props;\n            const { isSelectOpen } = this.state;\n            const selectOptions = this.getSelectOptions();\n            const selection = selectOptions.find((option) => option.value === currency);\n            return (React.createElement(Select, { className: showLabel ? 'currencyOverride' : undefined, id: \"currencySelect\", isDisabled: isDisabled, isOpen: isSelectOpen, onSelect: this.handleSelect, onToggle: this.handleToggle, selections: selection, variant: SelectVariant.single }, selectOptions.map(option => (React.createElement(SelectOption, { key: option.value, value: option })))));\n        };\n        this.getSelectOptions = () => {\n            const { intl } = this.props;\n            const options = [];\n            currencyOptions.map(option => {\n                options.push({\n                    toString: () => intl.formatMessage(option.label, { units: option.value }),\n                    value: option.value,\n                });\n            });\n            return options;\n        };\n        this.handleSelect = (event, selection) => {\n            const { isLocalStorage = true, onSelect } = this.props;\n            // Set currency units via local storage\n            if (isLocalStorage) {\n                setCurrency(selection.value);\n            }\n            this.setState({\n                isSelectOpen: false,\n            }, () => {\n                if (onSelect) {\n                    onSelect(selection.value);\n                }\n            });\n        };\n        this.handleToggle = isSelectOpen => {\n            this.setState({ isSelectOpen });\n        };\n    }\n    render() {\n        const { intl, showLabel = true } = this.props;\n        return (React.createElement(\"div\", { style: styles.currencySelector },\n            showLabel && (React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.md, style: styles.currencyLabel }, intl.formatMessage(messages.currency))),\n            this.getSelect()));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst CurrencyConnect = connect(mapStateToProps, mapDispatchToProps)(CurrencyBase);\nconst Currency = injectIntl(CurrencyConnect);\nexport default Currency;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    actionsContainer: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        paddingBottom: global_spacer_lg.var,\n        paddingLeft: global_spacer_lg.var,\n        paddingRight: global_spacer_lg.var,\n        // paddingTop: global_spacer_lg.var,\n    },\n    costType: {\n        marginBottom: global_spacer_lg.var,\n        marginTop: global_spacer_lg.var,\n        width: 'fit-content',\n    },\n    costTypeContainer: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        paddingBottom: global_spacer_lg.var,\n        paddingLeft: global_spacer_lg.var,\n        paddingRight: global_spacer_lg.var,\n        paddingTop: global_spacer_lg.var,\n    },\n    currency: {\n        marginTop: global_spacer_lg.var,\n        width: 'fit-content',\n    },\n    currencyContainer: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        paddingBottom: global_spacer_lg.var,\n        paddingLeft: global_spacer_lg.var,\n        paddingRight: global_spacer_lg.var,\n        paddingTop: global_spacer_lg.var,\n    },\n    resetContainer: {\n        display: 'inline-block',\n        paddingLeft: global_spacer_md.var,\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { PageSection, Title, TitleSizes } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { CostType } from 'routes/components/costType';\nimport { Currency } from 'routes/components/currency';\nimport { createMapStateToProps } from 'store/common';\nimport { settingsActions, settingsSelectors } from 'store/settings';\nimport { getCostType, getCurrency, setAccountCurrency, setCostType, setCurrency } from 'utils/localStorage';\nimport { withRouter } from 'utils/router';\nimport { styles } from './calculations.styles';\nclass SettingsBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            currentCostType: getCostType(),\n            currentCurrency: getCurrency(),\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getCostType = () => {\n            const { intl } = this.props;\n            const { currentCostType } = this.state;\n            return (React.createElement(\"div\", { style: styles.costTypeContainer },\n                React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: TitleSizes.md }, intl.formatMessage(messages.costTypeSettingsLabel)),\n                intl.formatMessage(messages.costTypeSettingsDesc),\n                React.createElement(\"div\", { style: styles.costType },\n                    React.createElement(CostType, { costType: currentCostType, isLocalStorage: false, onSelect: this.handleOnCostTypeSelected, showLabel: false }))));\n        };\n        this.getCurrency = () => {\n            const { intl } = this.props;\n            const { currentCurrency } = this.state;\n            return (React.createElement(\"div\", { style: styles.currencyContainer },\n                React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: TitleSizes.md }, intl.formatMessage(messages.currency)),\n                intl.formatMessage(messages.currencyDesc),\n                React.createElement(\"div\", { style: styles.currency },\n                    React.createElement(Currency, { currency: currentCurrency, isLocalStorage: false, onSelect: this.handleOnCurrencySelected, showLabel: false }))));\n        };\n        this.handleOnCostTypeSelected = value => {\n            const { updateSettings } = this.props;\n            this.setState({ currentCostType: value }, () => {\n                setCostType(value);\n                updateSettings({\n                    api: {\n                        settings: {\n                            cost_type: value,\n                        },\n                    },\n                });\n            });\n        };\n        this.handleOnCurrencySelected = value => {\n            const { updateSettings } = this.props;\n            this.setState({ currentCurrency: value }, () => {\n                setCurrency(value);\n                setAccountCurrency(value); // Todo: remove account currency after settings page has been moved\n                updateSettings({\n                    api: {\n                        settings: {\n                            currency: value,\n                        },\n                    },\n                });\n            });\n        };\n    }\n    render() {\n        return (React.createElement(PageSection, { isFilled: true },\n            this.getCurrency(),\n            this.getCostType()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps(state => {\n    const updateSettingsStatus = settingsSelectors.selectSettingsUpdateStatus(state);\n    return {\n        updateSettingsStatus,\n    };\n});\nconst mapDispatchToProps = {\n    updateSettings: settingsActions.updateSettings,\n};\nconst Calculations = injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(SettingsBase)));\nexport default Calculations;\n","import { SortByDirection } from '@patternfly/react-table';\nexport const initialCostModelsQuery = {\n    limit: 10,\n    offset: 0,\n    ordering: null,\n    name: null,\n    source_type: null,\n    description: null,\n};\nexport const costModelsQueryKeys = Object.keys(initialCostModelsQuery);\nexport function stringifySearch(query) {\n    return Object.keys(query).reduce((acc, cur) => {\n        if (query[cur] === null) {\n            return acc;\n        }\n        return acc === '' ? `?${cur}=${query[cur]}` : `${acc}&${cur}=${query[cur]}`;\n    }, '');\n}\nexport function objectifySearch(search) {\n    if (!search) {\n        return initialCostModelsQuery;\n    }\n    const urlQuery = search\n        .slice(1)\n        .split('&')\n        .map(term => term.split('='))\n        .filter(key_value => key_value.length === 2);\n    const nameTerm = urlQuery.find(term => term[0] === 'name');\n    const sourceTypeTerm = urlQuery.find(term => term[0] === 'source_type');\n    const descriptionTerm = urlQuery.find(term => term[0] === 'description');\n    const orderingTerm = urlQuery.find(term => term[0] === 'ordering');\n    const limitTerm = urlQuery.find(term => term[0] === 'limit');\n    const offsetTerm = urlQuery.find(term => term[0] === 'offset');\n    return {\n        name: nameTerm === undefined ? null : nameTerm[1],\n        description: descriptionTerm === undefined ? null : descriptionTerm[1],\n        source_type: sourceTypeTerm === undefined ? null : sourceTypeTerm[1],\n        ordering: orderingTerm === undefined ? null : orderingTerm[1],\n        offset: offsetTerm === undefined ? 0 : Number(offsetTerm[1]),\n        limit: limitTerm === undefined ? 10 : Number(limitTerm[1]),\n    };\n}\nexport function parseOrdering(query, cells) {\n    const { ordering } = query;\n    if (ordering === null) {\n        return {};\n    }\n    const name = ordering[0] === '-' ? ordering.slice(1) : ordering;\n    const direction = ordering[0] === '-' ? SortByDirection.desc : SortByDirection.asc;\n    const index = cells.findIndex(cell => cell.data && cell.data.orderName === name);\n    return { index, direction };\n}\nexport function limitTransform(perPage) {\n    return perPage;\n}\nexport function offsetTransform(page, perPage) {\n    return (page - 1) * perPage;\n}\n","import { Pagination, PaginationVariant, Toolbar, ToolbarContent, ToolbarItem, ToolbarItemVariant, } from '@patternfly/react-core';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { costModelsSelectors } from 'store/costModels';\nimport { withRouter } from 'utils/router';\nimport { initialCostModelsQuery, limitTransform, offsetTransform, stringifySearch } from './utils/query';\nconst BottomPaginationBase = props => {\n    const { variant, intl = defaultIntl, // for testing\n    itemCount, page, perPage, onSetPage, onPerPageSelect, } = props;\n    return (React.createElement(Toolbar, null,\n        React.createElement(ToolbarContent, null,\n            React.createElement(ToolbarItem, { variant: ToolbarItemVariant.pagination },\n                React.createElement(Pagination, { onPerPageSelect: onPerPageSelect, onSetPage: onSetPage, variant: variant, itemCount: itemCount, page: page, perPage: perPage, titles: {\n                        paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                            title: intl.formatMessage(messages.costModelsDetailsTitle),\n                            placement: 'bottom',\n                        }),\n                    } })))));\n};\nconst mapStateToProps = (state) => {\n    const { count, page, perPage } = costModelsSelectors.pagination(state);\n    const query = costModelsSelectors.query(state);\n    return {\n        query,\n        count,\n        page,\n        perPage,\n    };\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { router } = ownProps;\n    const { count, page, perPage, query } = stateProps;\n    return {\n        itemCount: count,\n        page,\n        perPage,\n        variant: PaginationVariant.bottom,\n        onSetPage: (_evt, newPage, newPerPage) => {\n            router.navigate(stringifySearch(Object.assign(Object.assign(Object.assign({}, initialCostModelsQuery), query), { offset: offsetTransform(newPage, newPerPage) })));\n        },\n        onPerPageSelect: (_evt, newPerPage) => {\n            router.navigate(stringifySearch(Object.assign(Object.assign(Object.assign({}, initialCostModelsQuery), query), { limit: limitTransform(newPerPage), offset: 0 })));\n        },\n    };\n};\nexport const CostModelsBottomPagination = withRouter(connect(mapStateToProps, undefined, mergeProps)(injectIntl(BottomPaginationBase)));\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    descContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        padding: global_spacer_md.value,\n    },\n};\n","import { fetchProviders } from 'api/providers';\nexport const fetchSources = ({ type, page, perPage, query }) => {\n    const offset = (page - 1) * perPage;\n    const limit = perPage;\n    const queryParam = Object.keys(query).reduce((acc, cur) => (acc ? `${acc}&${cur}=${query[cur]}` : `${cur}=${query[cur]}`), '');\n    return fetchProviders(`type=${type}&limit=${limit}&offset=${offset}&${queryParam}`).then(sources => {\n        const payload = sources.data;\n        return payload.data.map(src => ({\n            name: src.name,\n            uuid: src.uuid,\n            costmodel: src.cost_models.map(cm => cm.name).join(','),\n            meta: payload.meta,\n        }));\n    });\n};\n// .then(sources => sources.data.data)\n","import React from 'react';\nimport { getAccountCurrency } from 'utils/localStorage';\nexport const defaultCostModelContext = {\n    apiError: null,\n    checked: {},\n    clearQuery: () => null,\n    createError: null,\n    createProcess: false,\n    createSuccess: false,\n    currencyUnits: getAccountCurrency(),\n    dataFetched: false,\n    description: '',\n    dirtyName: false,\n    distribution: '',\n    distributePlatformUnallocated: true,\n    distributeWorkerUnallocated: true,\n    error: null,\n    fetchSources: (type, query, page, perPage) => null,\n    filterName: '',\n    goToAddPL: (value) => null,\n    isDiscount: false,\n    handleMarkupDiscountChange: (...args) => null,\n    handleDistributionChange: (...args) => null,\n    handleDistributePlatformUnallocatedChange: (...args) => null,\n    handleDistributeWorkerUnallocatedChange: (...args) => null,\n    handleSignChange: (...args) => null,\n    loading: false,\n    markup: '',\n    metricsHash: {},\n    name: '',\n    onClose: () => null,\n    onCurrencyChange: (value) => null,\n    onDescChange: (value) => null,\n    onFilterChange: (value) => null,\n    onPageChange: (_evt, value) => null,\n    onPerPageChange: (_evt, value) => null,\n    onTypeChange: (value) => null,\n    onNameChange: (value) => null,\n    onSourceSelect: (...args) => null,\n    page: 1,\n    perPage: 10,\n    priceListPagination: {\n        page: 1,\n        perPage: 4,\n        onPerPageSet: (_evt, perPage) => null,\n        onPageSet: (_evt, page) => null,\n    },\n    query: {},\n    step: 1,\n    setSources: (value) => null,\n    sources: [],\n    submitTiers: (tiers) => null,\n    tiers: [],\n    total: 0,\n    type: '',\n};\nexport const CostModelContext = React.createContext(defaultCostModelContext);\n","export const styles = {\n    form: {\n        width: '350px',\n    },\n    textArea: {\n        maxWidth: '450px',\n        minWidth: '350px',\n        minHeight: '75px',\n        maxHeight: '150px',\n    },\n    selector: {\n        maxHeight: '350px',\n    },\n    titleWithLearnMore: {\n        display: 'inline-block',\n        marginRight: '1em',\n    },\n};\n","import { FormGroup, Radio, Stack, StackItem, Text, TextContent, Title, TitleSizes } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Form } from 'routes/settings/components/forms/form';\nimport { createMapStateToProps } from 'store/common';\nimport { CostModelContext } from './context';\nimport { styles } from './wizard.styles';\nclass DistributionBase extends React.Component {\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(CostModelContext.Consumer, null, ({ handleDistributionChange, handleDistributePlatformUnallocatedChange, handleDistributeWorkerUnallocatedChange, distribution, distributePlatformUnallocated, distributeWorkerUnallocated, }) => {\n            return (React.createElement(Stack, { hasGutter: true },\n                React.createElement(StackItem, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.xl, style: styles.titleWithLearnMore }, intl.formatMessage(messages.costDistribution)),\n                    React.createElement(\"a\", { href: intl.formatMessage(messages.docsCostModelsDistribution), rel: \"noreferrer\", target: \"_blank\" }, intl.formatMessage(messages.learnMore))),\n                React.createElement(StackItem, null,\n                    React.createElement(Title, { headingLevel: \"h3\", size: TitleSizes.md }, intl.formatMessage(messages.distributionType)),\n                    React.createElement(TextContent, null,\n                        React.createElement(Text, { style: styles.cardDescription }, intl.formatMessage(messages.distributionModelDesc)))),\n                React.createElement(StackItem, { isFilled: true },\n                    React.createElement(Form, null,\n                        React.createElement(FormGroup, { isInline: true, fieldId: \"cost-distribution-type\", isRequired: true },\n                            React.createElement(Radio, { isChecked: distribution === 'cpu', name: \"distributionType\", label: intl.formatMessage(messages.cpuTitle), \"aria-label\": intl.formatMessage(messages.cpuTitle), id: \"cpuDistribution\", value: \"cpu\", onChange: handleDistributionChange }),\n                            React.createElement(Radio, { isChecked: distribution === 'memory', name: \"distributionType\", label: intl.formatMessage(messages.memoryTitle), \"aria-label\": intl.formatMessage(messages.memoryTitle), id: \"memoryDistribution\", value: \"memory\", onChange: handleDistributionChange })))),\n                React.createElement(StackItem, null,\n                    React.createElement(Title, { headingLevel: \"h3\", size: TitleSizes.md }, intl.formatMessage(messages.platform)),\n                    React.createElement(TextContent, null,\n                        React.createElement(Text, { style: styles.cardDescription }, intl.formatMessage(messages.platformDesc)))),\n                React.createElement(StackItem, { isFilled: true },\n                    React.createElement(Form, null,\n                        React.createElement(FormGroup, { isInline: true, fieldId: \"cost-distribution-platform-unallocated\", isRequired: true },\n                            React.createElement(Radio, { isChecked: distributePlatformUnallocated, name: \"distributePlatformUnallocated\", label: intl.formatMessage(messages.distribute), \"aria-label\": intl.formatMessage(messages.distribute), id: \"distributePlatformTrue\", value: \"true\", onChange: handleDistributePlatformUnallocatedChange }),\n                            React.createElement(Radio, { isChecked: !distributePlatformUnallocated, name: \"distributePlatformUnallocated\", label: intl.formatMessage(messages.doNotDistribute), \"aria-label\": intl.formatMessage(messages.doNotDistribute), id: \"distributePlatformFalse\", value: \"false\", onChange: handleDistributePlatformUnallocatedChange })))),\n                React.createElement(StackItem, null,\n                    React.createElement(Title, { headingLevel: \"h3\", size: TitleSizes.md }, intl.formatMessage(messages.workerUnallocated)),\n                    React.createElement(TextContent, null,\n                        React.createElement(Text, { style: styles.cardDescription }, intl.formatMessage(messages.workerUnallocatedDesc)))),\n                React.createElement(StackItem, { isFilled: true },\n                    React.createElement(Form, null,\n                        React.createElement(FormGroup, { isInline: true, fieldId: \"cost-distribution-worker-unallocated\", isRequired: true },\n                            React.createElement(Radio, { isChecked: distributeWorkerUnallocated, name: \"distributeWorkerUnallocated\", label: intl.formatMessage(messages.distribute), \"aria-label\": intl.formatMessage(messages.distribute), id: \"distributeWorkerTrue\", value: \"true\", onChange: handleDistributeWorkerUnallocatedChange }),\n                            React.createElement(Radio, { isChecked: !distributeWorkerUnallocated, name: \"distributeWorkerUnallocated\", label: intl.formatMessage(messages.doNotDistribute), \"aria-label\": intl.formatMessage(messages.doNotDistribute), id: \"distributeWorkerFalse\", value: \"false\", onChange: handleDistributeWorkerUnallocatedChange }))))));\n        }));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst Distribution = injectIntl(connect(mapStateToProps, {})(DistributionBase));\nexport default Distribution;\n","import messages from 'locales/messages';\nimport { countDecimals, isPercentageFormatValid } from 'utils/format';\nexport const nameErrors = (name) => {\n    if (name.length === 0) {\n        return messages.costModelsRequiredField;\n    }\n    if (name.length > 100) {\n        return messages.costModelsInfoTooLong;\n    }\n    return null;\n};\nexport const descriptionErrors = (description) => {\n    if (description.length > 500) {\n        return messages.costModelsDescTooLong;\n    }\n    return null;\n};\nconst isMarkupValid = value => {\n    if (value.trim() === '') {\n        return false;\n    }\n    if (!isPercentageFormatValid(value)) {\n        return false;\n    }\n    // Test number of decimals\n    const decimals = countDecimals(value);\n    if (decimals > 10) {\n        return false;\n    }\n    return true;\n};\nexport const validatorsHash = {\n    '': [() => false],\n    AWS: [\n        ctx => nameErrors(ctx.name) === null && descriptionErrors(ctx.description) === null && ctx.type !== '',\n        ctx => isMarkupValid(ctx.markup),\n        () => true,\n        () => true,\n    ],\n    Azure: [\n        ctx => nameErrors(ctx.name) === null && descriptionErrors(ctx.description) === null && ctx.type !== '',\n        ctx => isMarkupValid(ctx.markup),\n        () => true,\n        () => true,\n    ],\n    GCP: [\n        ctx => nameErrors(ctx.name) === null && descriptionErrors(ctx.description) === null && ctx.type !== '',\n        ctx => isMarkupValid(ctx.markup),\n        () => true,\n        () => true,\n    ],\n    OCP: [\n        ctx => nameErrors(ctx.name) === null && descriptionErrors(ctx.description) === null && ctx.type !== '',\n        ctx => ctx.priceListCurrent.justSaved,\n        ctx => isMarkupValid(ctx.markup),\n        () => true,\n        () => true,\n        () => true,\n    ],\n};\n","import { FormGroup, SelectDirection, Stack, StackItem, TextArea, TextInput, Title, TitleSizes, } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { currencyOptions } from 'routes/components/currency';\nimport { Form } from 'routes/settings/components/forms/form';\nimport { Selector } from 'routes/settings/components/inputs/selector';\nimport { createMapStateToProps } from 'store/common';\nimport { CostModelContext } from './context';\nimport { descriptionErrors, nameErrors } from './steps';\nimport { styles } from './wizard.styles';\nclass GeneralInformation extends React.Component {\n    render() {\n        const getValueLabel = (valStr, options) => {\n            const val = options.find(o => o.value === valStr);\n            return !val ? valStr : intl.formatMessage(val.label, { units: val.value });\n        };\n        const { intl } = this.props;\n        const sourceTypeOptions = [\n            {\n                label: messages.costModelsWizardOnboardAws,\n                value: 'AWS',\n            },\n            {\n                label: messages.azure,\n                value: 'Azure',\n            },\n            {\n                label: messages.gcp,\n                value: 'GCP',\n            },\n            {\n                label: messages.costModelsWizardOnboardOcp,\n                value: 'OCP',\n            },\n        ];\n        return (React.createElement(CostModelContext.Consumer, null, ({ currencyUnits, dirtyName, description, name, type, onCurrencyChange, onNameChange, onDescChange, onTypeChange, }) => (React.createElement(Stack, { hasGutter: true },\n            React.createElement(StackItem, null,\n                React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.xl, style: styles.titleWithLearnMore }, intl.formatMessage(messages.costModelsWizardGeneralInfoTitle)),\n                React.createElement(\"a\", { href: intl.formatMessage(messages.docsConfigCostModels), rel: \"noreferrer\", target: \"_blank\" }, intl.formatMessage(messages.learnMore))),\n            React.createElement(StackItem, null,\n                React.createElement(Form, { style: styles.form },\n                    React.createElement(FormGroup, { helperTextInvalid: nameErrors(name) && intl.formatMessage(nameErrors(name)), validated: nameErrors(name) === null || !dirtyName ? 'default' : 'error', label: intl.formatMessage(messages.names, { count: 1 }), isRequired: true, fieldId: \"name\" },\n                        React.createElement(TextInput, { validated: nameErrors(name) === null || !dirtyName ? 'default' : 'error', isRequired: true, type: \"text\", id: \"name\", name: \"name\", value: name, onChange: onNameChange })),\n                    React.createElement(FormGroup, { helperTextInvalid: descriptionErrors(description) && intl.formatMessage(descriptionErrors(description)), validated: descriptionErrors(description) === null ? 'default' : 'error', label: intl.formatMessage(messages.description), fieldId: \"description\" },\n                        React.createElement(TextArea, { style: styles.textArea, type: \"text\", id: \"description\", name: \"description\", value: description, validated: descriptionErrors(description) === null ? 'default' : 'error', onChange: onDescChange })),\n                    React.createElement(Selector, { isRequired: true, id: \"source-type-selector\", direction: SelectDirection.up, appendMenuTo: \"inline\", maxHeight: styles.selector.maxHeight, label: messages.costModelsSourceType, toggleAriaLabel: intl.formatMessage(messages.costModelsWizardEmptySourceTypeLabel), placeholderText: intl.formatMessage(messages.costModelsWizardEmptySourceTypeLabel), value: getValueLabel(type, sourceTypeOptions), onChange: onTypeChange, options: sourceTypeOptions }),\n                    React.createElement(Selector, { label: messages.currency, direction: SelectDirection.up, appendMenuTo: \"inline\", maxHeight: styles.selector.maxHeight, toggleAriaLabel: intl.formatMessage(messages.costModelsWizardCurrencyToggleLabel), value: getValueLabel(currencyUnits, currencyOptions), onChange: onCurrencyChange, id: \"currency-units-selector\", options: currencyOptions.map(o => {\n                            return {\n                                label: intl.formatMessage(o.label, { units: o.value }),\n                                value: o.value,\n                            };\n                        }) })))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst mapDispatchToProps = {\n// TDB\n};\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(GeneralInformation));\n","import { Flex, FlexItem, FormGroup, InputGroup, InputGroupText, List, ListItem, Radio, Stack, StackItem, Text, TextContent, TextInput, TextVariants, Title, TitleSizes, } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Form } from 'routes/settings/components/forms/form';\nimport { styles as costCalcStyles } from 'routes/settings/costModel/costCalc.styles';\nimport { createMapStateToProps } from 'store/common';\nimport { countDecimals, isPercentageFormatValid } from 'utils/format';\nimport { CostModelContext } from './context';\nimport { styles } from './wizard.styles';\nclass MarkupWithDistributionBase extends React.Component {\n    render() {\n        const { intl } = this.props;\n        const handleOnKeyDown = event => {\n            // Prevent 'enter', '+', and '-'\n            if (event.keyCode === 13 || event.keyCode === 187 || event.keyCode === 189) {\n                event.preventDefault();\n            }\n        };\n        const markupValidator = value => {\n            if (!isPercentageFormatValid(value)) {\n                return messages.markupOrDiscountNumber;\n            }\n            // Test number of decimals\n            const decimals = countDecimals(value);\n            if (decimals > 10) {\n                return messages.markupOrDiscountTooLong;\n            }\n            return undefined;\n        };\n        return (React.createElement(CostModelContext.Consumer, null, ({ handleSignChange, handleMarkupDiscountChange, markup, isDiscount }) => {\n            const helpText = markupValidator(markup);\n            const validated = helpText ? 'error' : 'default';\n            return (React.createElement(Stack, { hasGutter: true },\n                React.createElement(StackItem, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.xl, style: styles.titleWithLearnMore }, intl.formatMessage(messages.costCalculationsOptional)),\n                    React.createElement(\"a\", { href: intl.formatMessage(messages.docsCostModelsMarkup), rel: \"noreferrer\", target: \"_blank\" }, intl.formatMessage(messages.learnMore))),\n                React.createElement(StackItem, null,\n                    React.createElement(Title, { headingLevel: \"h3\", size: TitleSizes.md }, intl.formatMessage(messages.markupOrDiscount)),\n                    React.createElement(TextContent, null,\n                        React.createElement(Text, null, intl.formatMessage(messages.markupOrDiscountModalDesc)))),\n                React.createElement(StackItem, null,\n                    React.createElement(Flex, { style: costCalcStyles.markupRadioContainer },\n                        React.createElement(Flex, { direction: { default: 'column' }, alignSelf: { default: 'alignSelfCenter' } },\n                            React.createElement(FlexItem, null,\n                                React.createElement(Radio, { isChecked: !isDiscount, name: \"discount\", label: intl.formatMessage(messages.markupPlus), \"aria-label\": intl.formatMessage(messages.markupPlus), id: \"markup\", value: \"false\" // \"+\"\n                                    , onChange: handleSignChange, style: costCalcStyles.markupRadio }),\n                                React.createElement(Radio, { isChecked: isDiscount, name: \"discount\", label: intl.formatMessage(messages.discountMinus), \"aria-label\": intl.formatMessage(messages.discountMinus), id: \"discount\", value: \"true\" // '-'\n                                    , onChange: handleSignChange }))),\n                        React.createElement(Flex, { direction: { default: 'column' }, alignSelf: { default: 'alignSelfCenter' } },\n                            React.createElement(FlexItem, null,\n                                React.createElement(Form, null,\n                                    React.createElement(FormGroup, { fieldId: \"markup-input-box\", helperTextInvalid: helpText ? intl.formatMessage(helpText) : undefined, style: costCalcStyles.rateContainer, validated: validated },\n                                        React.createElement(InputGroup, null,\n                                            React.createElement(InputGroupText, { style: costCalcStyles.sign }, isDiscount\n                                                ? intl.formatMessage(messages.discountMinus)\n                                                : intl.formatMessage(messages.markupPlus)),\n                                            React.createElement(TextInput, { \"aria-label\": intl.formatMessage(messages.rate), id: \"markup-input-box\", isRequired: true, onKeyDown: handleOnKeyDown, onChange: handleMarkupDiscountChange, placeholder: '0', style: costCalcStyles.inputField, type: \"text\", validated: validated, value: markup }),\n                                            React.createElement(InputGroupText, { style: costCalcStyles.percent }, intl.formatMessage(messages.percentSymbol))))))))),\n                React.createElement(StackItem, null,\n                    React.createElement(\"div\", { style: costCalcStyles.exampleMargin },\n                        React.createElement(TextContent, null,\n                            React.createElement(Text, { component: TextVariants.h3 }, intl.formatMessage(messages.examplesTitle))),\n                        React.createElement(List, null,\n                            React.createElement(ListItem, null, intl.formatMessage(messages.costModelsExamplesNoAdjust)),\n                            React.createElement(ListItem, null, intl.formatMessage(messages.costModelsExamplesDoubleMarkup)),\n                            React.createElement(ListItem, null, intl.formatMessage(messages.costModelsExamplesReduceZero)),\n                            React.createElement(ListItem, null, intl.formatMessage(messages.costModelsExamplesReduceSeventyfive)))))));\n        }));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst MarkupWithDistribution = injectIntl(connect(mapStateToProps, {})(MarkupWithDistributionBase));\nexport default MarkupWithDistribution;\n","import { ActionGroup, Button, ButtonVariant, Form, Stack, StackItem, Text, TextContent, TextVariants, Title, TitleSizes, } from '@patternfly/react-core';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { canSubmit as isReadyForSubmit, RateForm, useRateData } from 'routes/settings/components/rateForm';\nimport { CostModelContext } from 'routes/settings/costModelWizard/context';\nconst AddPriceList = ({ cancel, currencyUnits, intl = defaultIntl, // Default required for testing\nmetricsHash, submitRate, }) => {\n    const { tiers } = React.useContext(CostModelContext);\n    const rateFormData = useRateData(metricsHash, undefined, tiers);\n    const canSubmit = React.useMemo(() => isReadyForSubmit(rateFormData), [rateFormData.errors, rateFormData.rateKind]);\n    return (React.createElement(Stack, { hasGutter: true },\n        React.createElement(StackItem, null,\n            React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.xl }, intl.formatMessage(messages.costModelsWizardCreatePriceList))),\n        React.createElement(StackItem, null,\n            React.createElement(TextContent, null,\n                React.createElement(Text, { component: TextVariants.h3 }, intl.formatMessage(messages.costModelsWizardPriceListMetric)))),\n        React.createElement(StackItem, null,\n            React.createElement(Form, null,\n                React.createElement(RateForm, { currencyUnits: currencyUnits, metricsHash: metricsHash, rateFormData: rateFormData }))),\n        React.createElement(StackItem, null,\n            React.createElement(ActionGroup, null,\n                React.createElement(Button, { variant: ButtonVariant.primary, isDisabled: !canSubmit, onClick: () => submitRate(rateFormData) }, intl.formatMessage(messages.createRate)),\n                React.createElement(Button, { variant: ButtonVariant.link, onClick: cancel }, intl.formatMessage(messages.cancel))))));\n};\nexport default injectIntl(AddPriceList);\n","import { Pagination, Toolbar, ToolbarContent, ToolbarItem } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nexport const PaginationToolbarTemplateBase = ({ id, intl, itemCount, perPage, page, variant, onPerPageSelect, onSetPage, }) => {\n    return (React.createElement(Toolbar, { id: id },\n        React.createElement(ToolbarContent, null,\n            React.createElement(ToolbarItem, { variant: \"pagination\" },\n                React.createElement(Pagination, { variant: variant, itemCount: itemCount, perPage: perPage, page: page, onSetPage: onSetPage, onPerPageSelect: onPerPageSelect, titles: {\n                        paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                            title: intl.formatMessage(messages.createCostModelTitle),\n                            placement: 'bottom',\n                        }),\n                    } })))));\n};\nexport const PaginationToolbarTemplate = injectIntl(PaginationToolbarTemplateBase);\n","import { Bullseye, Button, EmptyState, EmptyStateBody, EmptyStateIcon, Pagination, Stack, StackItem, Text, TextContent, Title, TitleSizes, } from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { SortByDirection } from '@patternfly/react-table';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { WithPriceListSearch } from 'routes/settings/components/hoc/withPriceListSearch';\nimport { PaginationToolbarTemplate } from 'routes/settings/components/paginationToolbarTemplate';\nimport { PriceListToolbar } from 'routes/settings/components/priceListToolbar';\nimport { compareBy } from 'routes/settings/components/rateForm/utils';\nimport { RateTable } from 'routes/settings/components/rateTable';\nimport { CheckboxSelector } from 'routes/settings/components/toolbar/checkboxSelector';\nimport { PrimarySelector } from 'routes/settings/components/toolbar/primarySelector';\nimport { createMapStateToProps } from 'store/common';\nimport { metricsSelectors } from 'store/metrics';\nimport { unitsLookupKey } from 'utils/format';\nimport { CostModelContext } from './context';\nclass PriceListTable extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            metrics: [],\n            measurements: [],\n            sortBy: {\n                index: 0,\n                direction: SortByDirection.asc,\n            },\n        };\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { addRateAction, deleteRateAction, intl, items, metricsHash } = this.props;\n        const getMetricLabel = m => {\n            // Match message descriptor or default to API string\n            const value = m.replace(/ /g, '_').toLowerCase();\n            const label = intl.formatMessage(messages.metricValues, { value });\n            return label ? label : m;\n        };\n        const getMeasurementLabel = m => {\n            // Match message descriptor or default to API string\n            const label = intl.formatMessage(messages.measurementValues, {\n                value: m.toLowerCase().replace('-', '_'),\n                count: 1,\n            });\n            return label ? label : m;\n        };\n        const metricOpts = Object.keys(metricsHash).map(m => ({\n            label: getMetricLabel(m),\n            value: m,\n        }));\n        const measurementOpts = metricOpts.reduce((acc, curr) => {\n            const measurs = Object.keys(metricsHash[curr.value])\n                .filter(m => !acc.map(i => i.value).includes(m))\n                .map(m => ({ label: getMeasurementLabel(m), value: m }));\n            return [...acc, ...measurs];\n        }, []);\n        const NoTiersEmptyState = () => (React.createElement(Bullseye, null,\n            React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: PlusCircleIcon }),\n                React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, intl.formatMessage(messages.costModelsWizardEmptyStateTitle)),\n                React.createElement(EmptyStateBody, null,\n                    intl.formatMessage(messages.costModelsWizardEmptyStateSkipStep, {\n                        value: React.createElement(\"strong\", null, intl.formatMessage(messages.next)),\n                    }),\n                    React.createElement(\"br\", null),\n                    intl.formatMessage(messages.costModelsWizardEmptyStateOtherTime)))));\n        return (React.createElement(CostModelContext.Consumer, null, ({ priceListPagination }) => {\n            return (React.createElement(Stack, { hasGutter: true },\n                React.createElement(StackItem, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.xl }, intl.formatMessage(messages.costModelsWizardCreatePriceList))),\n                React.createElement(StackItem, null,\n                    React.createElement(TextContent, null,\n                        React.createElement(Text, null, intl.formatMessage(messages.costModelsWizardSubTitleTable)))),\n                React.createElement(StackItem, null,\n                    React.createElement(WithPriceListSearch, { initialFilters: {\n                            primary: 'metrics',\n                            metrics: [],\n                            measurements: [],\n                        } }, ({ search, setSearch, onRemove, onSelect, onClearAll }) => {\n                        const getMetric = value => intl.formatMessage(messages.metricValues, { value }) || value;\n                        const getMeasurement = (measurement, units) => {\n                            units = intl.formatMessage(messages.units, { units: unitsLookupKey(units) }) || units;\n                            return intl.formatMessage(messages.measurementValues, {\n                                value: measurement.toLowerCase().replace('-', '_'),\n                                units,\n                                count: 2,\n                            });\n                        };\n                        const from = (priceListPagination.page - 1) * priceListPagination.perPage;\n                        const to = priceListPagination.page * priceListPagination.perPage;\n                        const filtered = items\n                            .map((item, index) => {\n                            return Object.assign(Object.assign({}, item), { stateIndex: index });\n                        })\n                            .filter(rate => search.metrics.length === 0 || search.metrics.includes(rate.metric.label_metric))\n                            .filter(rate => search.measurements.length === 0 ||\n                            search.measurements.includes(rate.metric.label_measurement))\n                            .sort((r1, r2) => {\n                            const projection = this.state.sortBy.index === 1\n                                ? (r) => getMetric(r.metric.label_metric)\n                                : this.state.sortBy.index === 2\n                                    ? (r) => getMeasurement(r.metric.label_measurement, r.metric.label_measurement_unit)\n                                    : () => '';\n                            return compareBy(r1, r2, this.state.sortBy.direction, projection);\n                        });\n                        const res = filtered.slice(from, to);\n                        return (React.createElement(React.Fragment, null,\n                            React.createElement(PriceListToolbar, { primary: React.createElement(PrimarySelector, { isDisabled: items.length === 0, primary: search.primary, setPrimary: (primary) => setSearch({ primary }), options: [\n                                        {\n                                            label: intl.formatMessage(messages.metric),\n                                            value: 'metrics',\n                                        },\n                                        {\n                                            label: intl.formatMessage(messages.measurement),\n                                            value: 'measurements',\n                                        },\n                                    ] }), selected: search.primary, secondaries: [\n                                    {\n                                        component: (React.createElement(CheckboxSelector, { isDisabled: items.length === 0, placeholderText: intl.formatMessage(messages.toolBarPriceListMeasurementPlaceHolder), selections: search.measurements, setSelections: (selection) => onSelect('measurements', selection), options: measurementOpts })),\n                                        name: 'measurements',\n                                        onRemove,\n                                        filters: search.measurements,\n                                    },\n                                    {\n                                        component: (React.createElement(CheckboxSelector, { isDisabled: items.length === 0, placeholderText: intl.formatMessage(messages.toolBarPriceListMetricPlaceHolder), selections: search.metrics, setSelections: (selection) => onSelect('metrics', selection), options: metricOpts })),\n                                        name: 'metrics',\n                                        onRemove,\n                                        filters: search.metrics,\n                                    },\n                                ], button: React.createElement(Button, { onClick: addRateAction }, intl.formatMessage(messages.createRate)), onClear: onClearAll, pagination: React.createElement(Pagination, { isCompact: true, itemCount: filtered.length, perPage: priceListPagination.perPage, page: priceListPagination.page, onSetPage: priceListPagination.onPageSet, onPerPageSelect: priceListPagination.onPerPageSet, titles: {\n                                        paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                                            title: intl.formatMessage(messages.costModelsAssignSourcesParen),\n                                            placement: 'top',\n                                        }),\n                                    } }) }),\n                            res.length === 0 &&\n                                (this.state.metrics.length !== 0 || this.state.measurements.length !== 0) && (React.createElement(Bullseye, null,\n                                React.createElement(EmptyFilterState, null))),\n                            res.length === 0 &&\n                                this.state.metrics.length === 0 &&\n                                this.state.measurements.length === 0 && React.createElement(NoTiersEmptyState, null),\n                            res.length > 0 && (React.createElement(RateTable, { actions: [\n                                    {\n                                        title: intl.formatMessage(messages.remove),\n                                        onClick: (_evt, _rowId, rowData) => {\n                                            deleteRateAction(rowData.data.stateIndex);\n                                        },\n                                    },\n                                ], tiers: res, sortCallback: e => {\n                                    this.setState(Object.assign(Object.assign({}, this.state), { sortBy: Object.assign({}, e) }));\n                                } })),\n                            React.createElement(PaginationToolbarTemplate, { isCompact: true, itemCount: filtered.length, perPage: priceListPagination.perPage, page: priceListPagination.page, onSetPage: priceListPagination.onPageSet, onPerPageSelect: priceListPagination.onPerPageSet, titles: {\n                                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                                        title: intl.formatMessage(messages.costModelsAssignSourcesParen),\n                                        placement: 'bottom',\n                                    }),\n                                } })));\n                    }))));\n        }));\n    }\n}\nexport default connect(createMapStateToProps(state => ({\n    metricsHash: metricsSelectors.metrics(state),\n})))(injectIntl(PriceListTable));\n","import React from 'react';\nimport AddPriceList from 'routes/settings/components/addPriceList';\nimport { transformFormDataToRequest } from 'routes/settings/components/rateForm/index';\nimport { CostModelContext } from './context';\nimport PriceListTable from './priceListTable';\nconst PriceList = () => {\n    const { currencyUnits, goToAddPL, metricsHash, tiers, submitTiers } = React.useContext(CostModelContext);\n    const [state, setState] = React.useState('table');\n    const submit = (rate) => {\n        submitTiers([...tiers, rate]);\n        setState('table');\n        goToAddPL(true);\n    };\n    if (state === 'table') {\n        return (React.createElement(PriceListTable, { items: tiers, deleteRateAction: (index) => {\n                const items = [...tiers.slice(0, index), ...tiers.slice(index + 1)];\n                submitTiers(items);\n                if (items.length === 0) {\n                    goToAddPL(true);\n                }\n            }, addRateAction: () => {\n                setState('form');\n                goToAddPL(false);\n            } }));\n    }\n    if (state === 'form') {\n        return (React.createElement(AddPriceList, { currencyUnits: currencyUnits, metricsHash: metricsHash, submitRate: (rateFormData) => {\n                const rate = transformFormDataToRequest(rateFormData, metricsHash, currencyUnits);\n                submit(rate);\n            }, cancel: () => {\n                setState('table');\n                goToAddPL(true);\n            } }));\n    }\n    return null;\n};\nexport default PriceList;\n","import { Alert, Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateSecondaryActions, Stack, StackItem, Text, TextContent, TextList, TextListItem, TextListItemVariants, TextListVariants, Title, TitleSizes, } from '@patternfly/react-core';\nimport { OkIcon } from '@patternfly/react-icons/dist/esm/icons/ok-icon';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { RateTable } from 'routes/settings/components/rateTable';\nimport { WarningIcon } from 'routes/settings/components/warningIcon';\nimport { createMapStateToProps } from 'store/common';\nimport { CostModelContext } from './context';\nconst ReviewSuccessBase = ({ intl }) => (React.createElement(CostModelContext.Consumer, null, ({ onClose, name }) => (React.createElement(EmptyState, null,\n    React.createElement(EmptyStateIcon, { icon: OkIcon, color: \"green\" }),\n    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, intl.formatMessage(messages.costModelsWizardReviewStatusTitle)),\n    React.createElement(EmptyStateBody, null, intl.formatMessage(messages.costModelsWizardReviewStatusSubTitle, { value: name })),\n    React.createElement(EmptyStateSecondaryActions, null,\n        React.createElement(Button, { variant: \"link\", onClick: onClose }, intl.formatMessage(messages.close)))))));\nconst ReviewSuccess = injectIntl(ReviewSuccessBase);\nconst ReviewDetailsBase = ({ intl }) => (React.createElement(CostModelContext.Consumer, null, ({ checked, createError, currencyUnits, description, distribution, distributePlatformUnallocated, distributeWorkerUnallocated, isDiscount, markup, name, tiers, type, }) => {\n    const selectedSources = Object.keys(checked)\n        .filter(key => checked[key].selected)\n        .map(key => checked[key].meta);\n    return (React.createElement(React.Fragment, null,\n        createError && React.createElement(Alert, { variant: \"danger\", title: `${createError}` }),\n        React.createElement(Stack, { hasGutter: true },\n            React.createElement(StackItem, null,\n                React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.xl }, intl.formatMessage(messages.costModelsWizardStepsReview))),\n            React.createElement(StackItem, null,\n                React.createElement(TextContent, null,\n                    React.createElement(Text, null, intl.formatMessage(messages.costModelsWizardReviewStatusSubDetails, {\n                        create: React.createElement(\"strong\", null, intl.formatMessage(messages.create)),\n                        back: React.createElement(\"strong\", null, intl.formatMessage(messages.back)),\n                    })))),\n            React.createElement(StackItem, null,\n                React.createElement(TextContent, null,\n                    React.createElement(TextList, { component: TextListVariants.dl },\n                        React.createElement(TextListItem, { component: TextListItemVariants.dt }, intl.formatMessage(messages.names, { count: 1 })),\n                        React.createElement(TextListItem, { component: TextListItemVariants.dd }, name),\n                        React.createElement(TextListItem, { component: TextListItemVariants.dt }, intl.formatMessage(messages.description)),\n                        React.createElement(TextListItem, { component: TextListItemVariants.dd }, description),\n                        React.createElement(TextListItem, { component: TextListItemVariants.dt }, intl.formatMessage(messages.currency)),\n                        React.createElement(TextListItem, { component: TextListItemVariants.dd }, intl.formatMessage(messages.currencyOptions, { units: currencyUnits })),\n                        type === 'OCP' && (React.createElement(React.Fragment, null,\n                            React.createElement(TextListItem, { component: TextListItemVariants.dt }, intl.formatMessage(messages.priceList)),\n                            React.createElement(TextListItem, { component: TextListItemVariants.dd }, tiers.length > 0 ? (React.createElement(RateTable, { tiers: tiers })) : (intl.formatMessage(messages.costModelsWizardNoRatesAdded))))),\n                        React.createElement(TextListItem, { component: TextListItemVariants.dt }, intl.formatMessage(messages.costModelsWizardReviewMarkDiscount)),\n                        React.createElement(TextListItem, { component: TextListItemVariants.dd }, intl.formatMessage(messages.percent, { value: isDiscount ? '-' + markup : markup })),\n                        type === 'OCP' && (React.createElement(React.Fragment, null,\n                            React.createElement(TextListItem, { component: TextListItemVariants.dt }, intl.formatMessage(messages.costDistribution)),\n                            React.createElement(TextListItem, { component: TextListItemVariants.dd }, intl.formatMessage(messages.distributionTypeDesc, { type: distribution })),\n                            React.createElement(TextListItem, { component: TextListItemVariants.dd }, intl.formatMessage(messages.distributeCosts, {\n                                value: distributePlatformUnallocated,\n                                type: 'platform',\n                            })),\n                            React.createElement(TextListItem, { component: TextListItemVariants.dd }, intl.formatMessage(messages.distributeCosts, {\n                                value: distributeWorkerUnallocated,\n                                type: 'worker',\n                            })))),\n                        React.createElement(TextListItem, { component: TextListItemVariants.dt },\n                            intl.formatMessage(messages.costModelsAssignSources, { count: 2 }),\n                            ' ',\n                            selectedSources.find(src => Boolean(src.costmodel)) && (React.createElement(WarningIcon, { text: intl.formatMessage(messages.costModelsWizardWarningSources) }))),\n                        React.createElement(TextListItem, { component: TextListItemVariants.dd }, selectedSources.map(r => r.name).join(', '))))))));\n}));\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst ReviewDetails = injectIntl(connect(mapStateToProps, {})(ReviewDetailsBase));\nconst ReviewWithDistribution = () => {\n    return (React.createElement(CostModelContext.Consumer, null, ({ createSuccess }) => {\n        if (!createSuccess) {\n            return React.createElement(ReviewDetails, null);\n        }\n        return React.createElement(ReviewSuccess, null);\n    }));\n};\nexport default ReviewWithDistribution;\n","import { InputGroup, InputGroupText, Pagination, TextInput, Toolbar, ToolbarContent, ToolbarFilter, ToolbarItem, ToolbarToggleGroup, } from '@patternfly/react-core';\nimport { FilterIcon } from '@patternfly/react-icons/dist/esm/icons/filter-icon';\nimport { SearchIcon } from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nconst FilterInput = ({ id, placeholder = '', value, onChange, onSearch }) => {\n    return (React.createElement(InputGroup, null,\n        React.createElement(TextInput, { value: value, placeholder: placeholder, id: id, onChange: onChange, onKeyPress: (evt) => {\n                if (evt.key !== 'Enter' || value === '') {\n                    return;\n                }\n                onSearch(evt);\n            } }),\n        React.createElement(InputGroupText, { style: { borderLeft: '0' } },\n            React.createElement(SearchIcon, null))));\n};\nexport const AssignSourcesToolbarBase = ({ intl, filterInputProps, paginationProps, filter, }) => {\n    return (React.createElement(Toolbar, { id: \"assign-sources-toolbar\", clearAllFilters: filter.onClearAll },\n        React.createElement(ToolbarContent, null,\n            React.createElement(ToolbarToggleGroup, { breakpoint: \"xl\", toggleIcon: React.createElement(FilterIcon, null) },\n                React.createElement(ToolbarItem, { variant: \"search-filter\" },\n                    React.createElement(ToolbarFilter, { deleteChip: filter.onRemove, chips: filter.query.name, categoryName: \"name\" },\n                        React.createElement(FilterInput, Object.assign({ placeholder: intl.formatMessage(messages.costModelsFilterPlaceholder) }, filterInputProps))))),\n            React.createElement(ToolbarItem, { variant: \"pagination\" },\n                React.createElement(Pagination, { isCompact: paginationProps.isCompact, itemCount: paginationProps.itemCount, page: paginationProps.page, perPage: paginationProps.perPage, onSetPage: paginationProps.onSetPage, onPerPageSelect: paginationProps.onPerPageSelect, titles: {\n                        paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                            title: intl.formatMessage(messages.costModelsAssignSourcesParen),\n                            placement: 'bottom',\n                        }),\n                    } })))));\n};\nexport const AssignSourcesToolbar = injectIntl(AssignSourcesToolbarBase);\n","import { Checkbox, Stack, StackItem, Text, TextContent, TextVariants, Title, TitleSizes } from '@patternfly/react-core';\nimport { TableComposable, TableVariant, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { LoadingState } from 'routes/components/state/loadingState';\nimport { addMultiValueQuery, removeMultiValueQuery } from 'routes/settings/components/filterLogic';\nimport { PaginationToolbarTemplate } from 'routes/settings/components/paginationToolbarTemplate';\nimport { WarningIcon } from 'routes/settings/components/warningIcon';\nimport { AssignSourcesToolbar } from './assignSourcesToolbar';\nimport { CostModelContext } from './context';\nconst SourcesTable = ({ intl }) => {\n    return (React.createElement(CostModelContext.Consumer, null, ({ checked, loading, onSourceSelect, sources, perPage, page, type, query, fetchSources, filterName, onFilterChange, }) => {\n        const sourceType = type === 'Azure' ? 'Azure' : type;\n        const itemCount = sources.length > 0 ? sources[0].meta.count : 0;\n        return (React.createElement(Stack, { hasGutter: true },\n            React.createElement(StackItem, null,\n                React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.xl }, intl.formatMessage(messages.costModelsWizardSourceTitle))),\n            React.createElement(StackItem, null,\n                React.createElement(TextContent, null,\n                    React.createElement(Text, null, intl.formatMessage(messages.costModelsWizardSourceSubtitle)))),\n            React.createElement(StackItem, null,\n                React.createElement(TextContent, null,\n                    React.createElement(Text, { component: TextVariants.h3 }, intl.formatMessage(messages.costModelsWizardSourceCaption, {\n                        value: type.toLowerCase(),\n                    })))),\n            React.createElement(StackItem, null,\n                React.createElement(AssignSourcesToolbar, { filter: {\n                        onRemove: (category, chip) => fetchSources(sourceType, removeMultiValueQuery(query)(category, chip), 1, perPage),\n                        onClearAll: () => fetchSources(sourceType, {}, 1, perPage),\n                        query,\n                    }, filterInputProps: {\n                        id: 'assign-source-search-input',\n                        value: filterName,\n                        onChange: onFilterChange,\n                        onSearch: () => {\n                            fetchSources(sourceType, addMultiValueQuery(query)('name', filterName), 1, perPage);\n                        },\n                    }, paginationProps: {\n                        isCompact: true,\n                        itemCount,\n                        perPage,\n                        page,\n                        onSetPage: (_evt, newPage) => {\n                            fetchSources(sourceType, query, newPage, perPage);\n                        },\n                        onPerPageSelect: (_evt, newPerPage) => fetchSources(sourceType, query, 1, newPerPage),\n                    } }),\n                loading ? (React.createElement(LoadingState, null)) : (React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.costModelsWizardSourceTableAriaLabel), variant: TableVariant.compact },\n                    React.createElement(Thead, null,\n                        React.createElement(Tr, null, [\n                            '',\n                            intl.formatMessage(messages.names, { count: 1 }),\n                            intl.formatMessage(messages.costModelsWizardSourceTableCostModel),\n                        ].map((c, i) => (React.createElement(Th, { key: i }, c))))),\n                    React.createElement(Tbody, null, sources.map((row, rowIndex) => (React.createElement(Tr, { key: rowIndex },\n                        React.createElement(Td, null,\n                            React.createElement(Checkbox, { onChange: isChecked => {\n                                    onSourceSelect(rowIndex, isChecked);\n                                }, id: row.name, key: row.name, \"aria-label\": intl.formatMessage(messages.selectRow, { value: rowIndex }), isChecked: checked[row.uuid] && checked[row.uuid].selected, isDisabled: Boolean(row.costmodel) })),\n                        React.createElement(Td, null,\n                            row.name,\n                            ' ',\n                            row.costmodel && (React.createElement(WarningIcon, { key: `wrng-${row.name}`, text: intl.formatMessage(messages.costModelsWizardSourceWarning, {\n                                    costModel: row.costmodel,\n                                }) }))),\n                        React.createElement(Td, null, row.costmodel ? row.costmodel : ''))))))),\n                React.createElement(PaginationToolbarTemplate, { itemCount: itemCount, perPage: perPage, page: page, titles: {\n                        paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                            title: intl.formatMessage(messages.sources),\n                            placement: 'bottom',\n                        }),\n                    }, onSetPage: (_evt, newPage) => {\n                        fetchSources(sourceType, query, newPage, perPage);\n                    }, onPerPageSelect: (_evt, newPerPage) => fetchSources(sourceType, query, 1, newPerPage) }))));\n    }));\n};\nexport default injectIntl(SourcesTable);\n","import React from 'react';\nimport { LoadingState } from 'routes/components/state/loadingState';\nimport { SourceStepErrorState } from 'routes/settings/components/errorState';\nimport { CostModelContext } from './context';\nimport SourcesTable from './table';\nclass Sources extends React.Component {\n    constructor(props) {\n        super(props);\n        this.fetchData = () => null;\n        this.fetchData = () => {\n            const { type, query, page, perPage, fetchSources } = this.context;\n            const sourceType = type === 'Azure' ? 'Azure' : type;\n            fetchSources(sourceType, query, page, perPage);\n        };\n    }\n    componentDidMount() {\n        const { dataFetched } = this.context;\n        if (dataFetched) {\n            return;\n        }\n        this.fetchData();\n    }\n    renderContent() {\n        if (this.context.loading) {\n            return React.createElement(LoadingState, null);\n        }\n        if (this.context.apiError) {\n            return React.createElement(SourceStepErrorState, { onRefresh: this.fetchData });\n        }\n        return React.createElement(SourcesTable, null);\n    }\n    render() {\n        return this.renderContent();\n    }\n}\nSources.contextType = CostModelContext;\nexport default Sources;\n","import { Title, TitleSizes, Wizard } from '@patternfly/react-core';\nimport { Button, Modal } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport { addCostModel } from 'api/costModels';\nimport messages from 'locales/messages';\nimport { cloneDeep } from 'lodash';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nimport { metricsSelectors } from 'store/metrics';\nimport { unFormat } from 'utils/format';\nimport { getAccountCurrency } from 'utils/localStorage';\nimport { fetchSources as apiSources } from './api';\nimport { CostModelContext } from './context';\nimport Distribution from './distribution';\nimport GeneralInformation from './generalInformation';\nimport Markup from './markup';\nimport { parseApiError } from './parseError';\nimport PriceList from './priceList';\nimport Review from './review';\nimport Sources from './sources';\nimport { validatorsHash } from './steps';\n// Update tiers currency\nconst updateTiersCurrency = (tiers, currencyUnits = 'USD') => {\n    const rates = cloneDeep(tiers);\n    rates.map(val => {\n        if (val.tiered_rates) {\n            for (const rate of val.tiered_rates) {\n                rate.unit = currencyUnits;\n                rate.usage.unit = currencyUnits;\n            }\n        }\n        if (val.tag_rates) {\n            for (const rate of val.tag_rates.tag_values) {\n                rate.unit = currencyUnits;\n            }\n        }\n    });\n    return rates;\n};\nconst InternalWizardBase = ({ intl, isProcess, isSuccess, closeFnc, isOpen, onMove, validators, steps, current = 1, context, setError, setSuccess, updateCostModel, }) => {\n    const newSteps = steps.map((step, ix) => {\n        return Object.assign(Object.assign({}, step), { canJumpTo: current > ix });\n    });\n    newSteps[current - 1].enableNext = validators[current - 1](context);\n    const isAddingRate = context.type === 'OCP' && current === 2 && !validators[current - 1](context);\n    if (current === steps.length && context.type !== '') {\n        newSteps[current - 1].nextButtonText = intl.formatMessage(messages.create);\n    }\n    return isOpen ? (React.createElement(Wizard, { isOpen: true, title: intl.formatMessage(messages.createCostModelTitle), description: intl.formatMessage(messages.createCostModelDesc), steps: newSteps, startAtStep: current, onNext: onMove, onBack: onMove, onGoToStep: onMove, onClose: closeFnc, footer: isSuccess || isProcess || isAddingRate ? React.createElement(\"div\", null) : null, onSave: () => {\n            const { currency, description, distribution, distributePlatformUnallocated, distributeWorkerUnallocated, isDiscount, markup, name, type, tiers, sources, } = context;\n            addCostModel({\n                name,\n                source_type: type,\n                currency,\n                description,\n                distribution_info: {\n                    distribution_type: distribution,\n                    platform_cost: distributePlatformUnallocated,\n                    worker_cost: distributeWorkerUnallocated,\n                },\n                rates: tiers,\n                markup: {\n                    value: `${isDiscount ? '-' : ''}${unFormat(markup)}`,\n                    unit: 'percent',\n                },\n                source_uuids: sources.map(src => src.uuid),\n            })\n                .then(() => {\n                setSuccess();\n                updateCostModel();\n            })\n                .catch(err => setError(parseApiError(err)));\n        } })) : null;\n};\nconst InternalWizard = injectIntl(InternalWizardBase);\nclass CostModelWizardBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            apiError: null,\n            checked: {},\n            createError: null,\n            createProcess: false,\n            createSuccess: false,\n            currencyUnits: getAccountCurrency(),\n            dataFetched: false,\n            dirtyName: false,\n            description: '',\n            distribution: 'cpu',\n            distributePlatformUnallocated: true,\n            distributeWorkerUnallocated: true,\n            error: null,\n            filterName: '',\n            isDialogOpen: false,\n            isDiscount: false,\n            loading: false,\n            markup: '0',\n            name: '',\n            page: 1,\n            perPage: 10,\n            priceListCurrent: {\n                metric: '',\n                measurement: '',\n                rate: '',\n                justSaved: true,\n            },\n            priceListPagination: {\n                page: 1,\n                perPage: 10,\n            },\n            query: {},\n            sources: [],\n            step: 1,\n            tiers: [],\n            total: 0,\n            type: '',\n        };\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { metricsHash, intl } = this.props;\n        /*\n         */\n        const closeConfirmDialog = () => {\n            this.setState({ isDialogOpen: false }, this.props.openWizard);\n        };\n        const stepsHash = () => ({\n            '': [\n                {\n                    id: 1,\n                    name: intl.formatMessage(messages.costModelsWizardStepsGenInfo),\n                    component: React.createElement(GeneralInformation, null),\n                },\n            ],\n            Azure: [\n                {\n                    id: 1,\n                    name: intl.formatMessage(messages.costModelsWizardStepsGenInfo),\n                    component: React.createElement(GeneralInformation, null),\n                },\n                {\n                    id: 2,\n                    name: intl.formatMessage(messages.costCalculations),\n                    component: React.createElement(Markup, null),\n                },\n                {\n                    id: 3,\n                    name: intl.formatMessage(messages.costModelsWizardStepsSources),\n                    component: React.createElement(Sources, null),\n                },\n                {\n                    id: 4,\n                    name: intl.formatMessage(messages.costModelsWizardStepsReview),\n                    component: React.createElement(Review, null),\n                },\n            ],\n            AWS: [\n                {\n                    id: 1,\n                    name: intl.formatMessage(messages.costModelsWizardStepsGenInfo),\n                    component: React.createElement(GeneralInformation, null),\n                },\n                {\n                    id: 2,\n                    name: intl.formatMessage(messages.costCalculations),\n                    component: React.createElement(Markup, null),\n                },\n                {\n                    id: 3,\n                    name: intl.formatMessage(messages.costModelsWizardStepsSources),\n                    component: React.createElement(Sources, null),\n                },\n                {\n                    id: 4,\n                    name: intl.formatMessage(messages.costModelsWizardStepsReview),\n                    component: React.createElement(Review, null),\n                },\n            ],\n            GCP: [\n                {\n                    id: 1,\n                    name: intl.formatMessage(messages.costModelsWizardStepsGenInfo),\n                    component: React.createElement(GeneralInformation, null),\n                },\n                {\n                    id: 2,\n                    name: intl.formatMessage(messages.costCalculations),\n                    component: React.createElement(Markup, null),\n                },\n                {\n                    id: 3,\n                    name: intl.formatMessage(messages.costModelsWizardStepsSources),\n                    component: React.createElement(Sources, null),\n                },\n                {\n                    id: 4,\n                    name: intl.formatMessage(messages.costModelsWizardStepsReview),\n                    component: React.createElement(Review, null),\n                },\n            ],\n            OCP: [\n                {\n                    id: 1,\n                    name: intl.formatMessage(messages.costModelsWizardStepsGenInfo),\n                    component: React.createElement(GeneralInformation, null),\n                },\n                {\n                    id: 2,\n                    name: intl.formatMessage(messages.priceList),\n                    component: React.createElement(PriceList, null),\n                },\n                {\n                    id: 3,\n                    name: intl.formatMessage(messages.costCalculations),\n                    component: React.createElement(Markup, null),\n                },\n                {\n                    id: 4,\n                    name: intl.formatMessage(messages.costDistribution),\n                    component: React.createElement(Distribution, null),\n                },\n                {\n                    id: 5,\n                    name: intl.formatMessage(messages.costModelsWizardStepsSources),\n                    component: React.createElement(Sources, null),\n                },\n                {\n                    id: 6,\n                    name: intl.formatMessage(messages.costModelsWizardStepsReview),\n                    component: React.createElement(Review, null),\n                },\n            ],\n        });\n        const CancelButton = (React.createElement(Button, { key: \"cancel\", variant: \"link\", onClick: closeConfirmDialog }, intl.formatMessage(messages.createCostModelNoContinue)));\n        const OkButton = (React.createElement(Button, { key: \"ok\", variant: \"primary\", onClick: () => this.setState(Object.assign({}, this.defaultState)) }, intl.formatMessage(messages.createCostModelExitYes)));\n        return (React.createElement(CostModelContext.Provider, { value: {\n                apiError: this.state.apiError,\n                checked: this.state.checked,\n                clearQuery: () => this.setState({ query: {} }),\n                createError: this.state.createError,\n                createProcess: this.state.createProcess,\n                createSuccess: this.state.createSuccess,\n                currencyUnits: this.state.currencyUnits,\n                description: this.state.description,\n                dataFetched: this.state.dataFetched,\n                dirtyName: this.state.dirtyName,\n                distribution: this.state.distribution,\n                distributePlatformUnallocated: this.state.distributePlatformUnallocated,\n                distributeWorkerUnallocated: this.state.distributeWorkerUnallocated,\n                error: this.state.error,\n                filterName: this.state.filterName,\n                fetchSources: (type, query, page, perPage) => {\n                    this.setState({ loading: true, apiError: null, filterName: '' }, () => apiSources({ type, query, page, perPage })\n                        .then((resp) => this.setState({\n                        sources: resp,\n                        query,\n                        page,\n                        perPage,\n                        loading: false,\n                        dataFetched: true,\n                        filterName: '',\n                    }))\n                        .catch(err => this.setState({\n                        apiError: err,\n                        loading: false,\n                        dataFetched: true,\n                        filterName: '',\n                    })));\n                },\n                goToAddPL: (value) => this.setState({\n                    priceListCurrent: Object.assign(Object.assign({}, this.state.priceListCurrent), { justSaved: value ? value : false }),\n                }),\n                handleDistributionChange: (_, event) => {\n                    const { value } = event.currentTarget;\n                    this.setState({ distribution: value });\n                },\n                handleDistributePlatformUnallocatedChange: (_, event) => {\n                    const { value } = event.currentTarget;\n                    this.setState({ distributePlatformUnallocated: value === 'true' });\n                },\n                handleDistributeWorkerUnallocatedChange: (_, event) => {\n                    const { value } = event.currentTarget;\n                    this.setState({ distributeWorkerUnallocated: value === 'true' });\n                },\n                handleMarkupDiscountChange: (_, event) => {\n                    const { value } = event.currentTarget;\n                    this.setState({ markup: value });\n                },\n                handleSignChange: (_, event) => {\n                    const { value } = event.currentTarget;\n                    this.setState({ isDiscount: value === 'true' });\n                },\n                isDiscount: this.state.isDiscount,\n                loading: this.state.loading,\n                metricsHash,\n                onClose: () => this.setState(Object.assign({}, this.defaultState), this.props.closeWizard),\n                onCurrencyChange: value => this.setState({ currencyUnits: value, tiers: updateTiersCurrency(this.state.tiers, value) }),\n                onDescChange: value => this.setState({ description: value }),\n                onFilterChange: value => this.setState({ filterName: value }),\n                onNameChange: value => this.setState({ name: value, dirtyName: true }),\n                onPageChange: (_evt, page) => this.setState({ page }),\n                onPerPageChange: (_evt, perPage) => this.setState({ page: 1, perPage }),\n                onSourceSelect: (rowId, isSelected) => {\n                    if (rowId === -1) {\n                        const pageSelections = this.state.sources.map(s => ({\n                            [s.uuid]: { selected: isSelected, meta: s },\n                        }));\n                        const newState = Object.assign(Object.assign({}, this.state.checked), pageSelections);\n                        return this.setState({ checked: newState });\n                    }\n                    const newState = Object.assign(Object.assign({}, this.state.checked), { [this.state.sources[rowId].uuid]: {\n                            selected: isSelected,\n                            meta: this.state.sources[rowId],\n                        } });\n                    return this.setState({ checked: newState });\n                },\n                onTypeChange: value => this.setState({ type: value, dataFetched: false, loading: false }),\n                page: this.state.page,\n                priceListPagination: {\n                    page: this.state.priceListPagination.page,\n                    perPage: this.state.priceListPagination.perPage,\n                    onPageSet: (_evt, page) => this.setState({\n                        priceListPagination: Object.assign(Object.assign({}, this.state.priceListPagination), { page }),\n                    }),\n                    onPerPageSet: (_evt, perPage) => this.setState({\n                        priceListPagination: {\n                            page: 1,\n                            perPage,\n                        },\n                    }),\n                },\n                markup: this.state.markup,\n                name: this.state.name,\n                perPage: this.state.perPage,\n                query: this.state.query,\n                setSources: sources => this.setState({ sources, dataFetched: true, loading: false }),\n                sources: this.state.sources,\n                step: this.state.step,\n                submitTiers: (tiers) => {\n                    this.setState({\n                        tiers,\n                    });\n                },\n                tiers: this.state.tiers,\n                total: this.state.total,\n                type: this.state.type,\n            } },\n            React.createElement(InternalWizard, { metricsHash: metricsHash, isProcess: this.state.createProcess, isSuccess: this.state.createSuccess, closeFnc: () => {\n                    if ((this.state.type === 'OCP' && this.state.step > 1 && this.state.tiers.length > 0) ||\n                        (this.state.type !== 'OCP' && this.state.step > 2)) {\n                        this.setState({ isDialogOpen: true }, this.props.closeWizard);\n                    }\n                    else {\n                        this.setState(Object.assign({}, this.defaultState), this.props.closeWizard);\n                    }\n                }, isOpen: this.props.isOpen, onMove: curr => this.setState({ step: Number(curr.id) }), steps: stepsHash()[this.state.type], current: this.state.step, validators: validatorsHash[this.state.type], setError: errorMessage => this.setState({ createError: errorMessage }), setSuccess: () => this.setState({ createError: null, createSuccess: true }), updateCostModel: () => this.props.fetch(), context: {\n                    name: this.state.name,\n                    type: this.state.type,\n                    currency: this.state.currencyUnits,\n                    description: this.state.description,\n                    distribution: this.state.distribution,\n                    distributePlatformUnallocated: this.state.distributePlatformUnallocated,\n                    distributeWorkerUnallocated: this.state.distributeWorkerUnallocated,\n                    markup: `${this.state.isDiscount ? '-' : ''}${this.state.markup}`,\n                    tiers: this.state.tiers,\n                    priceListCurrent: this.state.priceListCurrent,\n                    sources: Object.keys(this.state.checked).map(key => this.state.checked[key].meta),\n                } }),\n            React.createElement(Modal, { \"aria-label\": intl.formatMessage(messages.createCostModelExit), isOpen: this.state.isDialogOpen, header: React.createElement(Title, { headingLevel: \"h1\", size: TitleSizes['2xl'] },\n                    React.createElement(ExclamationTriangleIcon, { color: \"orange\" }),\n                    \" \",\n                    intl.formatMessage(messages.createCostModelExit)), onClose: closeConfirmDialog, actions: [OkButton, CancelButton], variant: \"small\" }, intl.formatMessage(messages.createCostModelConfirmMsg))));\n    }\n}\nconst CostModelWizard = connect(createMapStateToProps(state => ({\n    metricsHash: metricsSelectors.metrics(state),\n})), { fetch: costModelsActions.fetchCostModels })(injectIntl(CostModelWizardBase));\nexport default CostModelWizard;\n","import { Button } from '@patternfly/react-core';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ReadOnlyTooltip } from 'routes/settings/components/readOnlyTooltip';\nimport { CostModelWizard } from 'routes/settings/costModelWizard';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { rbacSelectors } from 'store/rbac';\nconst buttonMapStateToProps = (state) => {\n    return {\n        canWrite: rbacSelectors.isCostModelWritePermission(state),\n    };\n};\nconst buttonMapDispatchToProps = (dispatch) => {\n    return {\n        openWizard: () => dispatch(costModelsActions.setCostModelDialog({ name: 'createWizard', isOpen: true })),\n        closeWizard: () => dispatch(costModelsActions.setCostModelDialog({ name: 'createWizard', isOpen: false })),\n    };\n};\nconst buttonMergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { intl = defaultIntl } = ownProps; // Default required for testing\n    const { canWrite } = stateProps;\n    const { openWizard } = dispatchProps;\n    return {\n        isDisabled: !canWrite,\n        tooltip: intl.formatMessage(messages.costModelsReadOnly),\n        children: (React.createElement(Button, { isDisabled: !canWrite, onClick: openWizard }, intl.formatMessage(messages.costModelsWizardCreateCostModel))),\n    };\n};\nexport const CreateCostModelButton = injectIntl(connect(buttonMapStateToProps, buttonMapDispatchToProps, buttonMergeProps)(ReadOnlyTooltip));\nconst wizardMapStateProps = (state) => {\n    return {\n        isOpen: costModelsSelectors.isDialogOpen(state)('costmodel').createWizard,\n    };\n};\nconst wizardMapDispatchProps = (dispatch) => {\n    return {\n        openWizard: () => {\n            dispatch(costModelsActions.setCostModelDialog({ name: 'createWizard', isOpen: true }));\n        },\n        closeWizard: () => {\n            dispatch(costModelsActions.setCostModelDialog({ name: 'createWizard', isOpen: false }));\n        },\n    };\n};\nconst wizardMergeProps = (stateProps, dispatchProps) => {\n    const { isOpen } = stateProps;\n    const { openWizard, closeWizard } = dispatchProps;\n    return { isOpen, openWizard, closeWizard };\n};\nexport const CreateCostModelWizard = connect(wizardMapStateProps, wizardMapDispatchProps, wizardMergeProps)(CostModelWizard);\n","import { Alert, AlertVariant, Button, ButtonVariant, Stack, StackItem, Text, TextContent, TextList, TextListItem, TextListVariants, } from '@patternfly/react-core';\nimport React from 'react';\nexport function DeleteDialogActions({ status, deleteText, deleteAction, cancelText, cancelAction, sourcesNo, }) {\n    let actions = [];\n    if (status === 'loading') {\n        actions = [\n            React.createElement(Button, { key: \"pending_delete\", variant: ButtonVariant.danger, isDisabled: true }, deleteText),\n            React.createElement(Button, { key: \"pending_cancel\", variant: ButtonVariant.link, isDisabled: true }, cancelText),\n        ];\n    }\n    if (['failure', 'open'].includes(status) && sourcesNo > 0) {\n        actions = [\n            React.createElement(Button, { key: \"sources_cancel\", variant: ButtonVariant.link, onClick: cancelAction }, cancelText),\n        ];\n    }\n    if (['failure', 'open'].includes(status) && sourcesNo === 0) {\n        actions = [\n            React.createElement(Button, { key: \"delete\", variant: ButtonVariant.danger, onClick: deleteAction }, deleteText),\n            React.createElement(Button, { key: \"cancel\", variant: ButtonVariant.link, onClick: cancelAction }, cancelText),\n        ];\n    }\n    return actions;\n}\nfunction CannotDeleteContent({ head, body, sources }) {\n    return (React.createElement(Stack, { hasGutter: true },\n        React.createElement(StackItem, null,\n            React.createElement(TextContent, null,\n                React.createElement(Text, null, head))),\n        React.createElement(StackItem, null,\n            React.createElement(TextContent, null,\n                React.createElement(Text, null, body),\n                React.createElement(TextList, { component: TextListVariants.ol }, sources.map(source => (React.createElement(TextListItem, { key: source }, source))))))));\n}\nexport function DeleteDialogBody({ status, sources, error, cannotDeleteTitle, cannotDeleteBody, canDeleteBody, }) {\n    if (status !== 'close' && sources.length > 0) {\n        return React.createElement(CannotDeleteContent, { head: cannotDeleteTitle, body: cannotDeleteBody, sources: sources });\n    }\n    if (status !== 'close' && sources.length === 0) {\n        return (React.createElement(Stack, { hasGutter: true },\n            status === 'failure' ? (React.createElement(StackItem, null,\n                React.createElement(Alert, { variant: AlertVariant.danger, title: error }))) : null,\n            React.createElement(StackItem, null, canDeleteBody)));\n    }\n}\nexport function getDialogStateName(isLoading, isOpen, error) {\n    if (!isOpen) {\n        return 'close';\n    }\n    if (isLoading) {\n        return 'loading';\n    }\n    if (error) {\n        return 'failure';\n    }\n    return 'open';\n}\n","import { Modal, ModalVariant } from '@patternfly/react-core';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { DeleteDialogActions, DeleteDialogBody, getDialogStateName } from './utils/dialog';\nconst mapStateToProps = (state) => {\n    return {\n        isOpen: costModelsSelectors.isDialogOpen(state)('costmodel').deleteCostModel,\n        isLoading: costModelsSelectors.deleteProcessing(state),\n        deleteError: costModelsSelectors.deleteError(state),\n        dialogData: costModelsSelectors.dialogData(state),\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        closeDialog: () => dispatch(costModelsActions.setCostModelDialog({ name: 'deleteCostModel', isOpen: false })),\n        deleteCostModel: (uuid) => costModelsActions.deleteCostModel(uuid, 'deleteCostModel')(dispatch),\n    };\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { intl = defaultIntl } = ownProps; // Default required for testing\n    const stateName = getDialogStateName(stateProps.isLoading, stateProps.isOpen, stateProps.deleteError);\n    const data = stateProps.dialogData && stateProps.dialogData.costModel ? stateProps.dialogData.costModel : null;\n    const name = data ? data.name : '';\n    const sources = data ? data.sources.map(source => source.name) : [];\n    const uuid = data ? data.uuid : '';\n    const actions = DeleteDialogActions({\n        status: stateName,\n        deleteText: intl.formatMessage(messages.costModelsDelete),\n        deleteAction: () => dispatchProps.deleteCostModel(uuid),\n        cancelText: intl.formatMessage(messages.cancel),\n        cancelAction: dispatchProps.closeDialog,\n        sourcesNo: sources.length,\n    });\n    const children = DeleteDialogBody({\n        status: stateName,\n        sources,\n        error: stateProps.deleteError,\n        cannotDeleteTitle: intl.formatMessage(messages.costModelsDeleteSource),\n        cannotDeleteBody: intl.formatMessage(messages.costModelsCanNotDelete, { name }),\n        canDeleteBody: intl.formatMessage(messages.costModelsCanDelete, { name }),\n    });\n    return {\n        actions,\n        isOpen: stateName !== 'close',\n        variant: ModalVariant.small,\n        'aria-label': intl.formatMessage(messages.costModelsDelete),\n        title: intl.formatMessage(messages.costModelsDelete),\n        titleIconVariant: 'warning',\n        onClose: dispatchProps.closeDialog,\n        children,\n    };\n};\nconst DeleteDialog = injectIntl(connect(mapStateToProps, mapDispatchToProps, mergeProps)(Modal));\nexport default DeleteDialog;\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, Title, TitleSizes } from '@patternfly/react-core';\nimport React from 'react';\nfunction EmptyStateBase(props) {\n    return (React.createElement(EmptyState, { className: \"pf-m-redhat-font\" },\n        React.createElement(EmptyStateIcon, { icon: props.icon }),\n        React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, props.title),\n        React.createElement(EmptyStateBody, null, props.description),\n        props.actions ? props.actions : null));\n}\nexport default EmptyStateBase;\n","import { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { CreateCostModelButton } from 'routes/settings/costModelsDetails/createCostModelButton';\nimport EmptyStateBase from './emptyStateBase';\n// defaultIntl required for testing\nconst NoCostModels = ({ intl = defaultIntl }) => {\n    return (React.createElement(EmptyStateBase, { title: intl.formatMessage(messages.costModelsEmptyState), description: intl.formatMessage(messages.costModelsEmptyStateDesc), icon: PlusCircleIcon, actions: React.createElement(React.Fragment, null,\n            React.createElement(CreateCostModelButton, null),\n            React.createElement(\"br\", null),\n            React.createElement(\"br\", null),\n            React.createElement(\"a\", { href: intl.formatMessage(messages.docsConfigCostModels), rel: \"noreferrer\", target: \"_blank\" }, intl.formatMessage(messages.costModelsEmptyStateLearnMore))) }));\n};\nexport default injectIntl(NoCostModels);\n","import { ActionsColumn, TableComposable, TableVariant, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport { sortable, TableGridBreakpoint } from '@patternfly/react-table';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { rbacSelectors } from 'store/rbac';\nimport { withRouter } from 'utils/router';\nimport { createActions, createOnSort, getRowsByStateName } from './utils/table';\nclass CostModelsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            dialogSource: null,\n            activeSortDirection: 'asc',\n            activeSortIndex: 0,\n        };\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { intl = defaultIntl, // Default required for testing\n        canWrite, costData, openDeleteDialog, query, router, stateName, } = this.props;\n        const rows = getRowsByStateName(stateName, costData);\n        const cells = [\n            Object.assign({ title: intl.formatMessage(messages.names, { count: 1 }), data: { orderName: 'name' } }, (rows.length && { transforms: [sortable] })),\n            { title: intl.formatMessage(messages.description) },\n            Object.assign({ title: intl.formatMessage(messages.costModelsSourceType), data: { orderName: 'source_type' } }, (rows.length && { transforms: [sortable] })),\n            { title: intl.formatMessage(messages.costModelsAssignedSources) },\n            Object.assign({ title: intl.formatMessage(messages.costModelsLastChange), data: { orderName: 'updated_timestamp' } }, (rows.length && { transforms: [sortable] })),\n            {\n                title: '',\n                props: { 'aria-label': intl.formatMessage(messages.costModelsActions) },\n            },\n        ];\n        const actions = createActions(stateName, canWrite, [\n            {\n                title: intl.formatMessage(messages.delete),\n                tooltip: intl.formatMessage(messages.costModelsReadOnly),\n                onClick: (_evt, _rowIx, rowData) => {\n                    openDeleteDialog(rowData.data);\n                },\n            },\n        ]);\n        const onSort = createOnSort(cells, query, router);\n        const getSortParams = (columnIndex) => ({\n            sortBy: {\n                index: this.state.activeSortIndex,\n                direction: this.state.activeSortDirection,\n                defaultDirection: 'asc',\n            },\n            onSort: (_evt, index, direction) => {\n                this.setState(Object.assign(Object.assign({}, this.state), { activeSortDirection: direction, activeSortIndex: index }));\n                onSort(_evt, index, direction);\n            },\n            columnIndex,\n        });\n        return (React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.costModelsTableAriaLabel), gridBreakPoint: TableGridBreakpoint.grid2xl, variant: TableVariant.compact },\n            React.createElement(Thead, null,\n                React.createElement(Tr, null,\n                    cells.map((c, cellIndex) => (React.createElement(Th, { key: cellIndex, sort: c.transforms ? getSortParams(cellIndex) : undefined }, c.title))),\n                    React.createElement(Th, null))),\n            React.createElement(Tbody, null, rows.map((r, rowIndex) => (React.createElement(Tr, { key: rowIndex },\n                r.cells.map((c, cellIndex) => (React.createElement(Td, { colSpan: c.props ? c.props.colSpan : undefined, key: cellIndex }, c.title ? c.title : c))),\n                !r.heightAuto && (React.createElement(Td, { isActionCell: true },\n                    React.createElement(ActionsColumn, { items: actions.map(a => {\n                            return Object.assign(Object.assign({}, a), { onClick: _evt => a.onClick(_evt, rowIndex, r, null) });\n                        }) })))))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        canWrite: rbacSelectors.isCostModelWritePermission(state),\n        query: costModelsSelectors.query(state),\n        costData: costModelsSelectors.costModels(state),\n        stateName: costModelsSelectors.stateName(state),\n    };\n});\nconst mapDispatchToProps = (dispatch) => {\n    const setDialogActionCreator = costModelsActions.setCostModelDialog;\n    return {\n        openDeleteDialog: (item) => dispatch(setDialogActionCreator({ name: 'deleteCostModel', isOpen: true, meta: item })),\n    };\n};\nconst CostModelsTableConnect = connect(mapStateToProps, mapDispatchToProps)(CostModelsTableBase);\nconst CostModelsTable = injectIntl(withRouter(CostModelsTableConnect));\nexport default CostModelsTable;\n","import { Bullseye } from '@patternfly/react-core';\nimport { SortByDirection } from '@patternfly/react-table';\nimport { Unavailable } from '@redhat-cloud-services/frontend-components/Unavailable';\nimport { intl } from 'components/i18n';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { LoadingState } from 'routes/components/state/loadingState';\nimport NoCostModels from 'routes/settings/costModelsDetails/noCostModels';\nimport { formatPath } from 'utils/paths';\nimport { stringifySearch } from './query';\nexport function getRowsByStateName(stateName, data) {\n    let component = null;\n    if (stateName === 'loading') {\n        component = React.createElement(LoadingState, null);\n    }\n    if (stateName === 'empty') {\n        component = React.createElement(NoCostModels, null);\n    }\n    if (stateName === 'no-match') {\n        component = React.createElement(EmptyFilterState, null);\n    }\n    if (stateName === 'failure') {\n        component = React.createElement(Unavailable, null);\n    }\n    if (component !== null) {\n        return [\n            {\n                heightAuto: true,\n                cells: [\n                    {\n                        props: { colSpan: 6 },\n                        title: React.createElement(Bullseye, null,\n                            \" \",\n                            component,\n                            \" \"),\n                    },\n                ],\n            },\n        ];\n    }\n    return data.map((item) => {\n        const dateTime = intl.formatDate(item.updated_timestamp, {\n            day: 'numeric',\n            hour: 'numeric',\n            hour12: false,\n            minute: 'numeric',\n            month: 'short',\n            timeZone: 'UTC',\n            timeZoneName: 'short',\n            year: 'numeric',\n        });\n        return {\n            cells: [\n                {\n                    title: React.createElement(Link, { to: `${formatPath(routes.costModel.basePath)}/${item.uuid}` }, item.name),\n                },\n                item.description,\n                item.source_type,\n                item.sources.length.toString(),\n                dateTime,\n            ],\n            data: { costModel: item },\n        };\n    });\n}\nexport function createOnSort(cells, query, router) {\n    return function (_event, index, direction) {\n        const name = cells[index] && cells[index].data ? cells[index].data.orderName : null;\n        if (name === null) {\n            return;\n        }\n        if (direction === SortByDirection.asc) {\n            router.navigate(stringifySearch(Object.assign(Object.assign({}, query), { ordering: name })));\n            return;\n        }\n        router.navigate(stringifySearch(Object.assign(Object.assign({}, query), { ordering: `-${name}` })));\n    };\n}\nexport function createActions(stateName, canWrite, actions) {\n    if (stateName !== 'success') {\n        return [];\n    }\n    return actions.map(action => {\n        return Object.assign(Object.assign({}, action), { isDisabled: !canWrite, style: !canWrite ? { pointerEvents: 'auto' } : undefined, tooltip: !canWrite ? action.tooltip : undefined });\n    });\n}\n","import { Dropdown, DropdownItem, DropdownToggle, InputGroup, InputGroupText, TextInput, Toolbar, ToolbarFilter, } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { costModelsSelectors } from 'store/costModels';\nimport { withRouter } from 'utils/router';\nimport { initialCostModelsQuery, stringifySearch } from './query';\nconst FilterInput = ({ placeholder = '', value, onChange, onKeyPress }) => {\n    return (React.createElement(InputGroup, null,\n        React.createElement(TextInput, { \"aria-label\": placeholder, value: value, placeholder: placeholder, onChange: onChange, onKeyPress: (evt) => {\n                if (evt.key !== 'Enter' || value === '') {\n                    return;\n                }\n                onKeyPress(evt);\n            } }),\n        React.createElement(InputGroupText, { style: { borderLeft: '0' } },\n            React.createElement(SearchIcon, null))));\n};\nexport const onKeyPress = (router, key, query, inputer) => (event) => {\n    if (event.key === 'Enter' && inputer.value !== '') {\n        const currentValue = inputer.value;\n        router.navigate(stringifySearch(Object.assign(Object.assign({}, query), { [key]: query[key] ? `${query[key]},${currentValue}` : currentValue })));\n        inputer.setValue('');\n    }\n};\nexport const onDeleteChip = (router, key, query) => {\n    return (_filterName, chipName) => {\n        const newState = query[key] ? query[key].split(',').filter(qval => qval !== chipName) : null;\n        router.navigate(stringifySearch(Object.assign(Object.assign({}, query), { [key]: newState === null || newState.length === 0 ? null : newState.join(',') })));\n    };\n};\nexport const onDeleteChipGroup = (router, query, key) => {\n    return () => {\n        router.navigate(stringifySearch(Object.assign(Object.assign({}, query), { [key]: null })));\n    };\n};\nconst descriptionMapStateToProps = (state) => {\n    const filterType = costModelsSelectors.currentFilterType(state);\n    const query = costModelsSelectors.query(state);\n    return { filterType, query };\n};\nconst descriptionMergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { intl = defaultIntl, // Default required for testing\n    router, } = ownProps;\n    const { filterType, query } = stateProps;\n    const chips = query.description ? query.description.split(',') : [];\n    return {\n        categoryName: intl.formatMessage(messages.description),\n        chips,\n        deleteChip: onDeleteChip(router, 'description', Object.assign(Object.assign({}, initialCostModelsQuery), query)),\n        deleteChipGroup: onDeleteChipGroup(router, Object.assign(Object.assign({}, initialCostModelsQuery), query), 'description'),\n        filterType,\n        intl,\n        query,\n        router,\n    };\n};\nconst DescriptionFilterBase = ({ deleteChip, deleteChipGroup, filterType, intl, chips, categoryName, query, router, }) => {\n    const [value, setValue] = React.useState('');\n    const children = filterType === 'description' ? (React.createElement(FilterInput, { placeholder: intl.formatMessage(messages.filterByPlaceholder, { value: filterType }), value: value, onChange: (text) => setValue(text), onKeyPress: onKeyPress(router, 'description', Object.assign(Object.assign({}, initialCostModelsQuery), query), { value, setValue }) })) : null;\n    return (React.createElement(ToolbarFilter, { deleteChip: deleteChip, deleteChipGroup: deleteChipGroup, chips: chips, categoryName: categoryName }, children));\n};\nconst DescriptionFilterConnect = connect(descriptionMapStateToProps, undefined, descriptionMergeProps)(DescriptionFilterBase);\nexport const DescriptionFilter = injectIntl(withRouter(DescriptionFilterConnect));\nconst nameFilterMapStateToProps = (state) => {\n    const filterType = costModelsSelectors.currentFilterType(state);\n    const query = costModelsSelectors.query(state);\n    return { filterType, query };\n};\nconst nameFilterMergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { intl = defaultIntl, // Default required for testing\n    router, } = ownProps;\n    const { filterType, query } = stateProps;\n    const chips = query.name ? query.name.split(',') : [];\n    return {\n        deleteChip: onDeleteChip(router, 'name', Object.assign(Object.assign({}, initialCostModelsQuery), query)),\n        deleteChipGroup: onDeleteChipGroup(router, Object.assign(Object.assign({}, initialCostModelsQuery), query), 'name'),\n        filterType,\n        chips,\n        categoryName: intl.formatMessage(messages.names, { count: 1 }),\n        intl,\n        query,\n        router,\n    };\n};\nconst NameFilterBase = ({ deleteChip, deleteChipGroup, filterType, intl, chips, categoryName, query, router, }) => {\n    const [value, setValue] = React.useState('');\n    const children = filterType === 'name' ? (React.createElement(FilterInput, { placeholder: intl.formatMessage(messages.filterByPlaceholder, { value: filterType }), value: value, onChange: (text) => setValue(text), onKeyPress: onKeyPress(router, 'name', Object.assign(Object.assign({}, initialCostModelsQuery), query), { value, setValue }) })) : null;\n    return (React.createElement(ToolbarFilter, { deleteChip: deleteChip, deleteChipGroup: deleteChipGroup, chips: chips, categoryName: categoryName }, children));\n};\nconst NameFilterConnect = connect(nameFilterMapStateToProps, undefined, nameFilterMergeProps)(NameFilterBase);\nexport const NameFilter = injectIntl(withRouter(NameFilterConnect));\nexport const onSelect = (id, setToggle) => {\n    return () => {\n        setToggle(false);\n        const element = document.getElementById(id);\n        element && element.focus();\n    };\n};\nconst sourceTypeFilterMapStateToProps = (state) => {\n    const filterType = costModelsSelectors.currentFilterType(state);\n    const query = costModelsSelectors.query(state);\n    return { filterType, query };\n};\nconst sourceTypeFilterMergeProps = (stateProps, _dispatchProps, ownProps) => {\n    const { intl = defaultIntl, // Default required for testing\n    router, } = ownProps;\n    const { filterType, query } = stateProps;\n    const chips = query.source_type ? [query.source_type] : [];\n    return {\n        chips,\n        categoryName: intl.formatMessage(messages.costModelsSourceType),\n        deleteChip: onDeleteChipGroup(router, Object.assign(Object.assign({}, initialCostModelsQuery), query), 'source_type'),\n        filterType,\n        intl,\n        query,\n        router,\n    };\n};\nconst SourceTypeFilterBase = ({ deleteChip, deleteChipGroup, filterType, intl, chips, categoryName, query, router, }) => {\n    const [isOpen, setIsOpen] = React.useState(false);\n    const id = 'source-type-filter';\n    const onFilter = (source) => router.navigate(stringifySearch(Object.assign(Object.assign(Object.assign({}, initialCostModelsQuery), query), { source_type: source })));\n    const children = filterType === 'sourceType' ? (React.createElement(Dropdown, { onSelect: onSelect(id, setIsOpen), isOpen: isOpen, toggle: React.createElement(DropdownToggle, { onToggle: (value) => {\n                setIsOpen(value);\n            }, id: id }, intl.formatMessage(messages.filterByPlaceholder, { value: 'source_type' })), dropdownItems: [\n            React.createElement(DropdownItem, { key: \"aws\", component: \"button\", onClick: () => onFilter('aws') }, intl.formatMessage(messages.aws)),\n            React.createElement(DropdownItem, { key: \"azure\", component: \"button\", onClick: () => onFilter('azure') }, intl.formatMessage(messages.azure)),\n            React.createElement(DropdownItem, { key: \"ocp\", component: \"button\", onClick: () => onFilter('ocp') }, intl.formatMessage(messages.openShift)),\n        ] })) : null;\n    return (React.createElement(ToolbarFilter, { deleteChip: deleteChip, deleteChipGroup: deleteChipGroup, chips: chips, categoryName: categoryName }, children));\n};\nconst SourceTypeFilterConnect = connect(sourceTypeFilterMapStateToProps, undefined, sourceTypeFilterMergeProps)(SourceTypeFilterBase);\nexport const SourceTypeFilter = injectIntl(withRouter(SourceTypeFilterConnect));\nconst toolbarMapStateToProps = (state) => {\n    const query = costModelsSelectors.query(state);\n    return { query };\n};\nconst toolbarMergeProps = (stateProps, _dispatchProps, ownProps) => {\n    const { children, router } = ownProps;\n    const { query } = stateProps;\n    return {\n        id: 'cost-models-toolbar',\n        clearAllFilters: () => router.navigate(stringifySearch(Object.assign(Object.assign(Object.assign({}, initialCostModelsQuery), query), { description: null, source_type: null, name: null }))),\n        children,\n    };\n};\nexport const ClearableToolbar = withRouter(connect(toolbarMapStateToProps, undefined, toolbarMergeProps)(Toolbar));\n","import { Pagination, PaginationVariant, Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { FilterIcon } from '@patternfly/react-icons/dist/esm/icons/filter-icon';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { withRouter } from 'utils/router';\nimport { initialCostModelsQuery, limitTransform, offsetTransform, stringifySearch } from './query';\nconst costModelsFilterSelectorMapStateToProps = (state) => {\n    return {\n        filterType: costModelsSelectors.currentFilterType(state),\n    };\n};\nconst costModelsFilterSelectorMapDispatchToProps = (dispatch) => {\n    return {\n        updateFilterType: (value) => {\n            dispatch(costModelsActions.updateFilterToolbar({\n                currentFilterType: value,\n            }));\n        },\n    };\n};\nconst costModelsFilterMergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { intl = defaultIntl } = ownProps; // Default required for testing\n    const { filterType } = stateProps;\n    return {\n        filterType,\n        intl,\n        updateFilterType: dispatchProps.updateFilterType,\n    };\n};\nconst CostModelsFilterSelectorBase = ({ filterType, intl, updateFilterType, }) => {\n    const [isOpen, setIsOpen] = React.useState(false);\n    const options = [\n        React.createElement(SelectOption, { key: \"name\", value: \"name\" }, intl.formatMessage(messages.names, { count: 1 })),\n        React.createElement(SelectOption, { key: \"description\", value: \"description\" }, intl.formatMessage(messages.description)),\n        React.createElement(SelectOption, { key: \"sourceType\", value: \"sourceType\" }, intl.formatMessage(messages.costModelsSourceType)),\n    ];\n    return (React.createElement(Select, { isOpen: isOpen, onSelect: (_event, value) => {\n            updateFilterType(value);\n            setIsOpen(false);\n        }, onToggle: setIsOpen, selections: filterType, toggleIcon: React.createElement(FilterIcon, null), variant: SelectVariant.single }, options));\n};\nconst CostModelsFilterSelectorConnect = connect(costModelsFilterSelectorMapStateToProps, costModelsFilterSelectorMapDispatchToProps, costModelsFilterMergeProps)(CostModelsFilterSelectorBase);\nexport const CostModelsFilterSelector = injectIntl(withRouter(CostModelsFilterSelectorConnect));\nconst topPaginationMapStateToProps = (state) => {\n    const { count, page, perPage } = costModelsSelectors.pagination(state);\n    const query = costModelsSelectors.query(state);\n    return { count, page, perPage, query };\n};\nconst topPaginationMergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { router } = ownProps;\n    const { count, page, perPage, query } = stateProps;\n    return {\n        isCompact: true,\n        itemCount: count,\n        page,\n        perPage,\n        variant: PaginationVariant.top,\n        onSetPage: (_evt, newPage, newPerPage) => {\n            router.navigate(stringifySearch(Object.assign(Object.assign(Object.assign({}, initialCostModelsQuery), query), { offset: offsetTransform(newPage, newPerPage) })));\n        },\n        onPerPageSelect: (_evt, newPerPage) => {\n            router.navigate(stringifySearch(Object.assign(Object.assign(Object.assign({}, initialCostModelsQuery), query), { limit: limitTransform(newPerPage), offset: 0 })));\n        },\n    };\n};\nexport const CostModelsTopPagination = withRouter(connect(topPaginationMapStateToProps, undefined, topPaginationMergeProps)(Pagination));\n","import { ToolbarContent, ToolbarGroup, ToolbarItem, ToolbarItemVariant, ToolbarToggleGroup, } from '@patternfly/react-core';\nimport { FilterIcon } from '@patternfly/react-icons/dist/esm/icons/filter-icon';\nimport React from 'react';\nimport { CreateCostModelButton } from './createCostModelButton';\nimport { ClearableToolbar, DescriptionFilter, NameFilter, SourceTypeFilter } from './utils/filters';\nimport { CostModelsFilterSelector, CostModelsTopPagination } from './utils/toolbar';\nconst CostModelsToolbar = () => {\n    return (React.createElement(ClearableToolbar, null,\n        React.createElement(ToolbarContent, null,\n            React.createElement(ToolbarToggleGroup, { breakpoint: \"xl\", toggleIcon: React.createElement(FilterIcon, null) },\n                React.createElement(ToolbarGroup, { variant: \"filter-group\" },\n                    React.createElement(ToolbarItem, null,\n                        React.createElement(CostModelsFilterSelector, null)),\n                    React.createElement(NameFilter, null),\n                    React.createElement(DescriptionFilter, null),\n                    React.createElement(SourceTypeFilter, null))),\n            React.createElement(ToolbarGroup, null,\n                React.createElement(CreateCostModelButton, null)),\n            React.createElement(ToolbarItem, { variant: ToolbarItemVariant.pagination },\n                React.createElement(CostModelsTopPagination, null)))));\n};\nexport default CostModelsToolbar;\n","import { PageSection } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport { parse, stringify } from 'qs';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { costModelsActions } from 'store/costModels';\nimport { metricsActions } from 'store/metrics';\nimport { rbacActions } from 'store/rbac';\nimport { withRouter } from 'utils/router';\nimport { CostModelsBottomPagination } from './bottomPagination';\nimport { styles } from './costModelsDetails.styles';\nimport { CreateCostModelWizard } from './createCostModelButton';\nimport DeleteDialog from './dialog';\nimport CostModelsTable from './table';\nimport CostModelsToolbar from './toolbar';\nclass CostModelsDetailsBase extends React.Component {\n    componentDidMount() {\n        const { getCostModelsData, getMetricsData, getRbacData, search } = this.props;\n        getCostModelsData(search);\n        getMetricsData();\n        getRbacData();\n    }\n    componentDidUpdate(prevProps) {\n        const { getCostModelsData, search } = this.props;\n        if (prevProps.search !== search) {\n            getCostModelsData(search);\n        }\n    }\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(PageSection, { isFilled: true },\n            React.createElement(\"div\", { style: styles.descContainer }, intl.formatMessage(messages.costModelsDesc, {\n                learnMore: (React.createElement(\"a\", { href: intl.formatMessage(messages.docsUsingCostModels), rel: \"noreferrer\", target: \"_blank\" }, intl.formatMessage(messages.learnMore))),\n            })),\n            React.createElement(CreateCostModelWizard, null),\n            React.createElement(DeleteDialog, null),\n            React.createElement(CostModelsToolbar, null),\n            React.createElement(CostModelsTable, null),\n            React.createElement(CostModelsBottomPagination, null)));\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getCostModelsData: (query) => costModelsActions.fetchCostModels(query)(dispatch),\n        getRbacData: () => rbacActions.fetchRbac()(dispatch),\n        getMetricsData: () => metricsActions.fetchMetrics()(dispatch),\n    };\n};\nconst mapStateToProps = (state, ownProps) => {\n    const query = parse(ownProps.router.location.search, { ignoreQueryPrefix: true });\n    const searchQuery = Object.assign(Object.assign({}, query), { tabKey: undefined });\n    return {\n        search: stringify(searchQuery, { encode: false, indices: false }),\n    };\n};\nconst CostModelsDetails = withRouter(injectIntl(connect(mapStateToProps, mapDispatchToProps)(CostModelsDetailsBase)));\nexport default CostModelsDetails;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const styles = {\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        paddingLeft: global_spacer_lg.var,\n        paddingRight: global_spacer_lg.var,\n        paddingTop: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    tabs: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        paddingTop: global_spacer_lg.var,\n    },\n};\n","import './settings.scss';\nimport { Tab, TabContent, Tabs, TabTitleText, Title, TitleSizes } from '@patternfly/react-core';\nimport { getQueryRoute, parseQuery } from 'api/queries/query';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Calculations } from 'routes/settings/calculations';\nimport { CostModelsDetails } from 'routes/settings/costModelsDetails';\nimport { createMapStateToProps } from 'store/common';\nimport { withRouter } from 'utils/router';\nimport { styles } from './settings.styles';\n// eslint-disable-next-line no-shadow\nvar SettingsTab;\n(function (SettingsTab) {\n    SettingsTab[\"costModels\"] = \"cost-models\";\n    SettingsTab[\"calculations\"] = \"calculations\";\n    SettingsTab[\"tags\"] = \"tags\";\n})(SettingsTab || (SettingsTab = {}));\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case SettingsTab.costModels:\n            return 'cost-models';\n        case SettingsTab.calculations:\n            return 'calculations';\n        case SettingsTab.tags:\n            return 'tags';\n    }\n};\nclass SettingsBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            activeTabKey: 0,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getAvailableTabs = () => {\n            const availableTabs = [\n                {\n                    contentRef: React.createRef(),\n                    tab: SettingsTab.costModels,\n                },\n                {\n                    contentRef: React.createRef(),\n                    tab: SettingsTab.calculations,\n                },\n                {\n                    contentRef: React.createRef(),\n                    tab: SettingsTab.tags,\n                },\n            ];\n            return availableTabs;\n        };\n        this.getRouteForQuery = (query) => {\n            const { router } = this.props;\n            return `${router.location.pathname}?${getQueryRoute(query)}`;\n        };\n        this.getTab = (tab, contentRef, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, tabContentId: `tab-${index}`, tabContentRef: contentRef, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) }));\n        };\n        this.getTabContent = (availableTabs) => {\n            return availableTabs.map((val, index) => {\n                return (React.createElement(TabContent, { eventKey: index, key: `${getIdKeyForTab(val.tab)}-tabContent`, id: `tab-${index}`, ref: val.contentRef }, this.getTabItem(val.tab, index)));\n            });\n        };\n        this.getTabItem = (tab, index) => {\n            const { activeTabKey } = this.state;\n            const emptyTab = React.createElement(React.Fragment, null); // Lazily load tabs\n            if (activeTabKey !== index) {\n                return emptyTab;\n            }\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === SettingsTab.costModels) {\n                return React.createElement(CostModelsDetails, null);\n            }\n            else if (currentTab === SettingsTab.calculations) {\n                return React.createElement(Calculations, null);\n            }\n            else if (currentTab === SettingsTab.tags) {\n                return null;\n            }\n            else {\n                return emptyTab;\n            }\n        };\n        this.getTabs = (availableTabs) => {\n            const { activeTabKey } = this.state;\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((val, index) => this.getTab(val.tab, val.contentRef, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { intl } = this.props;\n            if (tab === SettingsTab.costModels) {\n                return intl.formatMessage(messages.costModels);\n            }\n            else if (tab === SettingsTab.calculations) {\n                return intl.formatMessage(messages.currencyCalcuations);\n            }\n            else if (tab === SettingsTab.tags) {\n                return intl.formatMessage(messages.tagLabels);\n            }\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { query, router } = this.props;\n            const { activeTabKey } = this.state;\n            if (activeTabKey !== tabIndex) {\n                this.setState({\n                    activeTabKey: tabIndex,\n                }, () => {\n                    const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { tabKey: tabIndex });\n                    router.navigate(this.getRouteForQuery(newQuery), { replace: true });\n                });\n            }\n        };\n    }\n    componentDidMount() {\n        const { tabKey } = this.props;\n        this.setState({\n            activeTabKey: tabKey,\n        });\n    }\n    render() {\n        const { intl } = this.props;\n        const availableTabs = this.getAvailableTabs();\n        const title = intl.formatMessage(messages.settingsTitle);\n        return (React.createElement(\"div\", { className: \"tabsOverride\" },\n            React.createElement(\"header\", { style: styles.header },\n                React.createElement(\"div\", { style: styles.headerContent },\n                    React.createElement(Title, { headingLevel: \"h1\", size: TitleSizes['2xl'] }, title)),\n                React.createElement(\"div\", { style: styles.tabs }, this.getTabs(availableTabs))),\n            React.createElement(\"div\", null, this.getTabContent(availableTabs))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const tabKey = queryFromRoute.tabKey && !Number.isNaN(queryFromRoute.tabKey) ? Number(queryFromRoute.tabKey) : 0;\n    const query = Object.assign({}, queryFromRoute);\n    return {\n        query,\n        tabKey,\n    };\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst Settings = injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(SettingsBase)));\nexport default Settings;\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title, TitleSizes, } from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nclass NoDataStateBase extends React.Component {\n    render() {\n        const { intl, showReload = true } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: TitleSizes.lg }, intl.formatMessage(messages.noDataStateTitle)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(messages.noDataStateDesc)),\n            showReload && (React.createElement(Button, { variant: \"primary\", onClick: () => window.location.reload() }, intl.formatMessage(messages.noDataStateRefresh)))));\n    }\n}\nconst NoDataState = injectIntl(NoDataStateBase);\nexport { NoDataState };\n","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React from 'react';\nimport { NoDataState } from './noDataState';\nconst NoData = ({ showReload, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(NoDataState, { showReload: showReload }))));\n};\nexport default NoData;\n","import './costIcon.scss';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nconst icon = require('./Cost-icon.svg');\nconst CostIcon = ({ className, intl }) => {\n    return (React.createElement(\"img\", { className: `cost-icon ${className}`, src: icon, alt: intl.formatMessage(messages.costManagement), \"aria-hidden\": \"true\" }));\n};\nexport default injectIntl(CostIcon);\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    iconSpacer: {\n        marginLeft: global_spacer_xs.value,\n    },\n    viewSources: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title, TitleSizes, } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { ProviderType } from 'api/providers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { CostIcon } from 'routes/components/icons/costIcon';\nimport { getReleasePath } from 'utils/paths';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDocLink = (textKey, urlKey) => {\n            const { intl } = this.props;\n            return (React.createElement(\"a\", { href: intl.formatMessage(urlKey), rel: \"noreferrer\", target: \"_blank\" },\n                intl.formatMessage(textKey),\n                React.createElement(\"span\", { style: styles.iconSpacer },\n                    React.createElement(ExternalLinkAltIcon, null))));\n        };\n        this.getRouteToSources = () => {\n            const release = getReleasePath();\n            return `${release}/settings/sources`;\n        };\n    }\n    render() {\n        const { intl, providerType } = this.props;\n        let descKey = messages.noProvidersStateOverviewDesc;\n        let titleKey = messages.noProvidersStateOverviewTitle;\n        let docUrlKey;\n        let icon;\n        let textKey;\n        switch (providerType) {\n            case ProviderType.aws:\n                descKey = messages.noProvidersStateAwsDesc;\n                titleKey = messages.noProvidersStateAwsTitle;\n                break;\n            case ProviderType.azure:\n                descKey = messages.noProvidersStateAzureDesc;\n                titleKey = messages.noProvidersStateAzureTitle;\n                break;\n            case ProviderType.gcp:\n                descKey = messages.noProvidersStateGcpDesc;\n                titleKey = messages.noProvidersStateGcpTitle;\n                break;\n            case ProviderType.ibm:\n                descKey = messages.noProvidersStateIbmDesc;\n                titleKey = messages.noProvidersStateIbmTitle;\n                break;\n            case ProviderType.ocp:\n                descKey = messages.noProvidersStateOcpDesc;\n                docUrlKey = messages.docsAddOcpSources;\n                textKey = messages.noProvidersStateOcpAddSources;\n                titleKey = messages.noProvidersStateOcpTitle;\n                break;\n            default:\n                icon = CostIcon;\n        }\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: icon ? icon : PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h1\", size: TitleSizes.lg }, intl.formatMessage(titleKey)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(descKey)),\n            docUrlKey && textKey ? (React.createElement(\"div\", { style: styles.viewSources }, this.getDocLink(textKey, docUrlKey))) : (React.createElement(Button, { variant: \"primary\", component: \"a\", href: this.getRouteToSources() }, intl.formatMessage(messages.noProvidersStateGetStarted)))));\n    }\n}\nconst NoProvidersState = injectIntl(NoProvidersStateBase);\nexport { NoProvidersState };\n","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React from 'react';\nimport { NoProvidersState } from './noProvidersState';\nconst NoProviders = ({ providerType, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(NoProvidersState, { providerType: providerType }))));\n};\nexport default NoProviders;\n","import messages from 'locales/messages';\nimport React from 'react';\nimport { PerspectiveSelect } from 'routes/views/components/perspective/perspectiveSelect';\n// Infrastructure AWS options\nconst infrastructureAwsOptions = [{ label: messages.perspectiveValues, value: 'aws' }];\n// Infrastructure AWS filtered by OpenShift options\nconst infrastructureAwsOcpOptions = [{ label: messages.perspectiveValues, value: 'aws_ocp' }];\n// Infrastructure Azure options\nconst infrastructureAzureOptions = [{ label: messages.perspectiveValues, value: 'azure' }];\n// Infrastructure Oci options\nconst infrastructureOciOptions = [{ label: messages.perspectiveValues, value: 'oci' }];\n// Infrastructure Azure filtered by OpenShift options\nconst infrastructureAzureOcpOptions = [{ label: messages.perspectiveValues, value: 'azure_ocp' }];\n// Infrastructure GCP options\nconst infrastructureGcpOptions = [{ label: messages.perspectiveValues, value: 'gcp' }];\n// Infrastructure GCP filtered by OCP options\nconst infrastructureGcpOcpOptions = [{ label: messages.perspectiveValues, value: 'gcp_ocp' }];\n// Infrastructure IBM options\nconst infrastructureIbmOptions = [{ label: messages.perspectiveValues, value: 'ibm' }];\n// Infrastructure IBM filtered by OCP options\nconst infrastructureIbmOcpOptions = [{ label: messages.perspectiveValues, value: 'ibm_ocp' }];\n// Infrastructure Ocp cloud options\nconst infrastructureOcpCloudOptions = [{ label: messages.perspectiveValues, value: 'ocp_cloud' }];\n// Ocp options\nconst ocpOptions = [{ label: messages.perspectiveValues, value: 'ocp' }];\n// RHEL options\nconst rhelOptions = [{ label: messages.perspectiveValues, value: 'rhel' }];\nconst getInfrastructureOptions = ({ hasAws, hasAwsOcp, hasAzure, hasAzureOcp, hasGcp, hasGcpOcp, hasIbm, hasIbmOcp, hasOci, isIbmFeatureEnabled, }) => {\n    const options = [];\n    if (hasAws) {\n        options.push(...infrastructureAwsOptions);\n    }\n    if (hasAwsOcp) {\n        options.push(...infrastructureAwsOcpOptions);\n    }\n    if (hasGcp) {\n        options.push(...infrastructureGcpOptions);\n    }\n    if (hasGcpOcp) {\n        options.push(...infrastructureGcpOcpOptions);\n    }\n    if (hasIbm) {\n        options.push(...infrastructureIbmOptions);\n    }\n    if (hasIbmOcp && isIbmFeatureEnabled) {\n        options.push(...infrastructureIbmOcpOptions);\n    }\n    if (hasAzure) {\n        options.push(...infrastructureAzureOptions);\n    }\n    if (hasAzureOcp) {\n        options.push(...infrastructureAzureOcpOptions);\n    }\n    if (hasOci) {\n        options.push(...infrastructureOciOptions);\n    }\n    return options;\n};\nconst Perspective = ({ currentItem, hasAws, hasAwsOcp, hasAzure, hasAzureOcp, hasGcp, hasGcpOcp, hasIbm, hasIbmOcp, hasOci, hasOcp, hasOcpCloud, hasRhel, isDisabled, isIbmFeatureEnabled, isInfrastructureTab, isRhelTab, onSelected, }) => {\n    // Dynamically show options if providers are available\n    const options = [];\n    // Note isInfrastructureTab and isRhelTab will be undefined for cost explorer\n    if (isInfrastructureTab !== undefined || isRhelTab !== undefined) {\n        if (isInfrastructureTab) {\n            if (hasOcpCloud) {\n                options.push(...infrastructureOcpCloudOptions);\n            }\n            options.push(...getInfrastructureOptions({\n                hasAws,\n                hasAwsOcp,\n                hasAzure,\n                hasAzureOcp,\n                hasGcp,\n                hasGcpOcp,\n                hasIbm,\n                hasIbmOcp,\n                hasOci,\n                isIbmFeatureEnabled,\n            }));\n        }\n        else if (isRhelTab) {\n            if (hasRhel) {\n                options.push(...rhelOptions);\n            }\n        }\n        else if (hasOcp) {\n            options.push(...ocpOptions);\n        }\n    }\n    else {\n        if (hasOcp) {\n            options.push(...ocpOptions);\n        }\n        if (hasOcpCloud) {\n            options.push(...infrastructureOcpCloudOptions);\n        }\n        if (hasRhel) {\n            options.push(...rhelOptions);\n        }\n        options.push(...getInfrastructureOptions({\n            hasAws,\n            hasAwsOcp,\n            hasAzure,\n            hasAzureOcp,\n            hasGcp,\n            hasGcpOcp,\n            hasIbm,\n            hasIbmOcp,\n            hasOci,\n            isIbmFeatureEnabled,\n        }));\n    }\n    return (React.createElement(PerspectiveSelect, { currentItem: currentItem || options[0].value, isDisabled: isDisabled, onSelected: onSelected, options: options }));\n};\nexport default Perspective;\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nconst DashboardBase = ({ costType, currency, DashboardWidget, selectWidgets, widgets }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { hasGutter: true }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return widget.details && widget.details.showHorizontal ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(DashboardWidget, Object.assign({ widgetId: widgetId }, (costType && { costType }), (currency && { currency }))))) : (React.createElement(GridItem, { lg: 12, xl: 6, xl2: 4, key: widgetId },\n            React.createElement(DashboardWidget, Object.assign({ widgetId: widgetId }, (costType && { costType }), (currency && { currency })))));\n    }))));\nexport default DashboardBase;\n","import global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nexport const styles = {\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n};\n","import './optimizationsSummary.scss';\nimport { Button, ButtonVariant, Card, CardBody, CardTitle, Popover, Skeleton, Title, TitleSizes, } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { FetchStatus } from 'store/common';\nimport { formatPath } from 'utils/paths';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { styles } from './optimizations.styles';\nconst OptimizationsSummaryBase = ({ intl, report, status, title }) => {\n    const count = report && report.meta ? report.meta.count : 0;\n    const description = intl.formatMessage(messages.optimizationsDetails, { count });\n    return (React.createElement(Card, { className: \"summary\" },\n        React.createElement(CardTitle, null,\n            React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg },\n                intl.formatMessage(title),\n                React.createElement(\"span\", { style: styles.infoIcon },\n                    React.createElement(Popover, { \"aria-label\": intl.formatMessage(messages.optimizationsInfoArialLabel), enableFlip: true, bodyContent: React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.optimizationsInfo)) },\n                        React.createElement(Button, { \"aria-label\": intl.formatMessage(messages.optimizationsInfoButtonArialLabel), variant: ButtonVariant.plain },\n                            React.createElement(OutlinedQuestionCircleIcon, null)))))),\n        React.createElement(CardBody, null, status === FetchStatus.inProgress ? (React.createElement(React.Fragment, null,\n            React.createElement(Skeleton, { width: \"16%\" }),\n            React.createElement(Skeleton, { className: \"skeleton\", width: skeletonWidth.md }))) : count > 0 ? (React.createElement(Link, { to: formatPath(routes.optimizations.path) }, description)) : (description))));\n};\nconst OptimizationsSummary = injectIntl(OptimizationsSummaryBase);\nexport default OptimizationsSummary;\n","import { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport React from 'react';\nclass ChartComparisonBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            currentItem: this.props.options ? this.props.options.find(option => option.default).value : undefined,\n            isSelectOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getSelect = () => {\n            const { isDisabled } = this.props;\n            const { currentItem, isSelectOpen } = this.state;\n            const selectOptions = this.getSelectOptions();\n            const selection = selectOptions.find((option) => option.value === currentItem);\n            return (React.createElement(Select, { id: \"comparisonSelect\", isDisabled: isDisabled, isOpen: isSelectOpen, onSelect: this.handleSelect, onToggle: this.handleToggle, selections: selection, variant: SelectVariant.single }, selectOptions.map(option => (React.createElement(SelectOption, { key: option.value, value: option })))));\n        };\n        this.getSelectOptions = () => {\n            const { options } = this.props;\n            const selectOptions = [];\n            options.map(option => {\n                selectOptions.push({\n                    toString: () => option.label,\n                    value: option.value,\n                });\n            });\n            return selectOptions;\n        };\n        this.handleSelect = (event, selection) => {\n            const { onItemClicked } = this.props;\n            if (onItemClicked) {\n                onItemClicked(selection.value);\n            }\n            this.setState({\n                currentItem: selection.value,\n                isSelectOpen: false,\n            });\n        };\n        this.handleToggle = isSelectOpen => {\n            this.setState({ isSelectOpen });\n        };\n    }\n    render() {\n        return this.getSelect();\n    }\n}\nconst ChartComparison = ChartComparisonBase;\nexport { ChartComparison };\n","import global_spacer_2xl from '@patternfly/react-tokens/dist/js/global_spacer_2xl';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_xl from '@patternfly/react-tokens/dist/js/global_spacer_xl';\nexport const chartStyles = {\n    chartAltHeight: 250,\n    chartHeight: 180,\n    containerAltHeight: 250,\n    containerTrendHeight: 180,\n    containerUsageHeight: 180,\n};\nexport const styles = {\n    comparison: {\n        marginBottom: global_spacer_md.value,\n    },\n    comparisonContainer: {\n        display: 'flex',\n    },\n    tabs: {\n        marginTop: global_spacer_2xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n};\n","import { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { getQuery } from 'api/queries/query';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ComputedReportItemType, DatumType, transformReport } from 'routes/views/components/charts/common/chartDatum';\nimport { getComputedForecast, transformForecast, transformForecastCone, } from 'routes/views/components/charts/common/chartDatumForecast';\nimport { ReportSummary, ReportSummaryAlt, ReportSummaryCost, ReportSummaryDailyCost, ReportSummaryDailyTrend, ReportSummaryDetails, ReportSummaryItem, ReportSummaryItems, ReportSummaryTrend, ReportSummaryUsage, } from 'routes/views/components/reports/reportSummary';\nimport { OptimizationsSummary } from 'routes/views/overview/components/optimizationsSummary';\nimport { DashboardChartType } from 'store/dashboard/common/dashboardCommon';\nimport { formatCurrency, formatUnits, unitsLookupKey } from 'utils/format';\nimport { ChartComparison } from './chartComparison';\nimport { chartStyles, styles } from './dashboardWidget.styles';\n// eslint-disable-next-line no-shadow\nvar Comparison;\n(function (Comparison) {\n    Comparison[\"cumulative\"] = \"cumulative\";\n    Comparison[\"daily\"] = \"daily\";\n})(Comparison || (Comparison = {}));\nclass DashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            activeTabKey: 0,\n            currentComparison: Comparison.cumulative,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.buildDetailsLink = (tab) => {\n            const { details, getIdKeyForTab } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return `${details.viewAllPath}?${getQuery({\n                group_by: {\n                    [currentTab]: '*',\n                },\n            })}`;\n        };\n        this.getChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { chartType, trend } = this.props;\n            if (chartType === DashboardChartType.dailyTrend) {\n                return this.getDailyTrendChart(containerHeight, height, adjustContainerHeight, trend.showSupplementaryLabel);\n            }\n            else if (chartType === DashboardChartType.dailyCost) {\n                return this.getDailyCostChart(containerHeight, height, adjustContainerHeight);\n            }\n            else if (chartType === DashboardChartType.trend) {\n                return this.getTrendChart(containerHeight, height, adjustContainerHeight, trend.showSupplementaryLabel);\n            }\n            else if (chartType === DashboardChartType.usage) {\n                return this.getUsageChart(height, adjustContainerHeight);\n            }\n            else {\n                return null;\n            }\n        };\n        // This dropdown is for cumulative and daily cost\n        this.getChartComparison = () => {\n            const { intl, trend } = this.props;\n            const { currentComparison } = this.state;\n            const units = this.getFormattedUnits();\n            const cumulativeTitle = intl.formatMessage(trend.titleKey, { units });\n            const dailyTitle = intl.formatMessage(trend.dailyTitleKey, { units });\n            const options = [\n                { label: dailyTitle, value: Comparison.daily },\n                { label: cumulativeTitle, value: Comparison.cumulative, default: true },\n            ];\n            return (React.createElement(ChartComparison, { currentItem: currentComparison || options[0].value, onItemClicked: this.handleComparisonClick, options: options }));\n        };\n        // This chart displays cumulative and daily cost compared to infrastructure cost\n        this.getDailyCostChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { chartFormatter, currentReport, previousReport, trend } = this.props;\n            const { currentComparison } = this.state;\n            const computedReportItem = trend.computedReportItem; // cost, supplementary cost, etc.\n            const computedReportItemValue = trend.computedReportItemValue; // infrastructure usage cost\n            const daily = currentComparison === Comparison.daily;\n            const type = daily ? DatumType.rolling : trend.datumType;\n            // Cost data\n            const currentCostData = transformReport(currentReport, type, 'date', computedReportItem, computedReportItemValue);\n            const previousCostData = transformReport(previousReport, type, 'date', computedReportItem, computedReportItemValue);\n            // Forecast data\n            const forecastData = this.getForecastData(currentReport, trend.computedForecastItem);\n            const ReportSummaryComponent = daily ? ReportSummaryDailyCost : ReportSummaryCost;\n            return (React.createElement(React.Fragment, null,\n                React.createElement(\"div\", { style: styles.comparisonContainer },\n                    React.createElement(\"div\", { style: styles.comparison }, this.getChartComparison())),\n                React.createElement(ReportSummaryComponent, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentCostData: currentCostData, forecastConeData: forecastData.forecastConeData, forecastData: forecastData.forecastData, formatOptions: trend.formatOptions, formatter: chartFormatter || formatCurrency, height: height, previousCostData: previousCostData, showForecast: trend.computedForecastItem !== undefined })));\n        };\n        // This chart displays cumulative and daily cost\n        this.getDailyTrendChart = (containerHeight, height, adjustContainerHeight = false, showSupplementaryLabel = false) => {\n            const { chartFormatter, chartName, currentReport, details, previousReport, trend } = this.props;\n            const { currentComparison } = this.state;\n            const computedReportItem = trend.computedReportItem; // cost, supplementary cost, etc.\n            const computedReportItemValue = trend.computedReportItemValue; // infrastructure usage cost\n            const daily = currentComparison === Comparison.daily;\n            const type = daily ? DatumType.rolling : trend.datumType;\n            // Cost data\n            const currentData = transformReport(currentReport, type, 'date', computedReportItem, computedReportItemValue);\n            const previousData = transformReport(previousReport, type, 'date', computedReportItem, computedReportItemValue);\n            // Forecast data\n            const { forecastData, forecastConeData } = this.getForecastData(currentReport, trend.computedForecastItem);\n            const ReportSummaryComponent = daily ? ReportSummaryDailyTrend : ReportSummaryTrend;\n            return (React.createElement(React.Fragment, null,\n                React.createElement(\"div\", { style: styles.comparisonContainer },\n                    React.createElement(\"div\", { style: styles.comparison }, this.getChartComparison())),\n                React.createElement(ReportSummaryComponent, { adjustContainerHeight: adjustContainerHeight, chartName: chartName, containerHeight: containerHeight, currentData: currentData, forecastData: forecastData, forecastConeData: forecastConeData, formatOptions: trend.formatOptions, formatter: chartFormatter || formatUnits, height: height, previousData: previousData, showForecast: trend.computedForecastItem !== undefined, showSupplementaryLabel: showSupplementaryLabel, showUsageLegendLabel: details.showUsageLegendLabel, units: this.getUnits() })));\n        };\n        this.getForecastData = (report, computedForecastItem = 'cost') => {\n            const { forecast, trend } = this.props;\n            const { currentComparison } = this.state;\n            // Todo: Add cumulative / daily prop\n            const daily = currentComparison === Comparison.daily;\n            const datumType = daily ? DatumType.rolling : trend.datumType;\n            const computedForecast = getComputedForecast(forecast, report, computedForecastItem, datumType);\n            const forecastData = transformForecast(computedForecast, datumType, computedForecastItem);\n            const forecastConeData = transformForecastCone(computedForecast, datumType, computedForecastItem);\n            return { forecastData, forecastConeData };\n        };\n        // This chart displays cumulative cost only\n        this.getTrendChart = (containerHeight, height, adjustContainerHeight = false, showSupplementaryLabel = false) => {\n            const { chartFormatter, chartName, currentReport, details, intl, previousReport, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost'; // cost, supplementary cost, etc.\n            const computedReportItemValue = trend.computedReportItemValue; // infrastructure usage cost\n            const title = intl.formatMessage(trend.titleKey, { units: this.getFormattedUnits() });\n            // Cost data\n            const currentData = transformReport(currentReport, trend.datumType, 'date', computedReportItem, computedReportItemValue);\n            const previousData = transformReport(previousReport, trend.datumType, 'date', computedReportItem, computedReportItemValue);\n            // Forecast data\n            const { forecastData, forecastConeData } = this.getForecastData(currentReport, trend.computedForecastItem);\n            return (React.createElement(ReportSummaryTrend, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, chartName: chartName, currentData: currentData, forecastData: forecastData, forecastConeData: forecastConeData, formatOptions: trend.formatOptions, formatter: chartFormatter || formatUnits, height: height, previousData: previousData, showForecast: trend.computedForecastItem !== undefined, showSupplementaryLabel: showSupplementaryLabel, showUsageLegendLabel: details.showUsageLegendLabel, title: title, units: this.getUnits() }));\n        };\n        // This chart displays usage and requests\n        this.getUsageChart = (height, adjustContainerHeight = false) => {\n            const { chartFormatter, chartName, currentReport, intl, previousReport, trend } = this.props;\n            const title = intl.formatMessage(trend.titleKey, {\n                units: this.getFormattedUnits(),\n            });\n            // Request data\n            const currentRequestData = transformReport(currentReport, trend.datumType, 'date', 'request');\n            const previousRequestData = transformReport(previousReport, trend.datumType, 'date', 'request');\n            // Usage data\n            const currentUsageData = transformReport(currentReport, trend.datumType, 'date', 'usage');\n            const previousUsageData = transformReport(previousReport, trend.datumType, 'date', 'usage');\n            return (React.createElement(ReportSummaryUsage, { adjustContainerHeight: adjustContainerHeight, chartName: chartName, containerHeight: chartStyles.containerUsageHeight, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatOptions: trend.formatOptions, formatter: chartFormatter || formatUnits, height: height, previousRequestData: previousRequestData, previousUsageData: previousUsageData, title: title }));\n        };\n        this.getDetails = () => {\n            const { chartType, currentReport, details, reportType, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            return (React.createElement(ReportSummaryDetails, { chartType: chartType, computedReportItem: computedReportItem, computedReportItemValue: computedReportItemValue, costLabel: this.getDetailsLabel(details.costKey), formatOptions: details.formatOptions, report: currentReport, reportType: reportType, requestLabel: this.getDetailsLabel(details.requestKey), showTooltip: details.showTooltip, showUnits: details.showUnits, showUsageFirst: details.showUsageFirst, units: this.getUnits(), usageFormatOptions: details.usageFormatOptions, usageLabel: this.getDetailsLabel(details.usageKey) }));\n        };\n        this.getDetailsLabel = (key) => {\n            const { intl } = this.props;\n            return key ? intl.formatMessage(key) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, details } = this.props;\n            if (details.viewAllPath) {\n                return React.createElement(Link, { to: this.buildDetailsLink(currentTab) }, this.getDetailsLinkTitle(currentTab));\n            }\n            return null;\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { getIdKeyForTab, intl } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return intl.formatMessage(messages.groupByAll, { value: key, count: 2 });\n        };\n        this.getFormattedUnits = () => {\n            const { intl, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const units = this.getUnits();\n            if (computedReportItem === ComputedReportItemType.usage) {\n                return intl.formatMessage(messages.units, { units: unitsLookupKey(units) });\n            }\n            return intl.formatMessage(messages.currencyUnits, { units });\n        };\n        this.getHorizontalLayout = () => {\n            const { containerAltHeight = chartStyles.containerAltHeight, chartAltHeight = chartStyles.chartAltHeight, currentReportFetchStatus, details, } = this.props;\n            return (React.createElement(ReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(containerAltHeight, chartAltHeight, details.adjustContainerHeight)));\n        };\n        this.getOptimizationsSummary = () => {\n            const { rosReportFetchStatus, rosReport, titleKey } = this.props;\n            return React.createElement(OptimizationsSummary, { status: rosReportFetchStatus, report: rosReport, title: titleKey });\n        };\n        this.getTab = (tab, index) => {\n            const { getIdKeyForTab, tabsReport, tabsReportFetchStatus } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) },\n                React.createElement(\"div\", { style: styles.tabItems },\n                    React.createElement(ReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport, status: tabsReportFetchStatus }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, getIdKeyForTab, tabsReport, topItems, trend } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            let totalValue;\n            const hasTotal = tabsReport && tabsReport.meta && tabsReport.meta.total;\n            if (computedReportItem === ComputedReportItemType.usage) {\n                if (hasTotal && tabsReport.meta.total.usage) {\n                    totalValue = tabsReport.meta.total.usage.value;\n                }\n            }\n            else {\n                if (hasTotal &&\n                    tabsReport.meta.total[computedReportItem] &&\n                    tabsReport.meta.total[computedReportItem][computedReportItemValue]) {\n                    totalValue = tabsReport.meta.total[computedReportItem][computedReportItemValue].value;\n                }\n            }\n            if (activeTab === currentTab) {\n                return (React.createElement(ReportSummaryItem, { formatOptions: topItems ? topItems.formatOptions : undefined, key: `${reportItem.id}-item`, label: reportItem.label ? reportItem.label.toString() : '', totalValue: totalValue, units: this.getUnits(), value: reportItem[computedReportItem][computedReportItemValue].value }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { getIdKeyForTab, intl } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return intl.formatMessage(messages.groupByTop, { value: key, count: 2 });\n        };\n        this.getTitle = () => {\n            const { intl, titleKey } = this.props;\n            return intl.formatMessage(titleKey);\n        };\n        this.getUnits = () => {\n            const { currentReport, details, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            if (details.units) {\n                return details.units;\n            }\n            if (!currentReport) {\n                return '';\n            }\n            const hasTotal = currentReport && currentReport.meta && currentReport.meta.total;\n            if (computedReportItem === ComputedReportItemType.usage) {\n                const hasUsage = hasTotal && currentReport.meta.total.usage;\n                return hasUsage ? currentReport.meta.total.usage.units : undefined;\n            }\n            else {\n                const hasCost = hasTotal &&\n                    currentReport.meta.total[computedReportItem] &&\n                    currentReport.meta.total[computedReportItem][computedReportItemValue];\n                return hasCost ? currentReport.meta.total[computedReportItem][computedReportItemValue].units : 'USD';\n            }\n        };\n        this.getVerticalLayout = () => {\n            const { availableTabs, currentReportFetchStatus, details } = this.props;\n            return (React.createElement(ReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerTrendHeight, chartStyles.chartHeight, details.adjustContainerHeight),\n                availableTabs && React.createElement(\"div\", { style: styles.tabs }, this.getTabs())));\n        };\n        this.handleComparisonClick = (value) => {\n            this.setState({ currentComparison: value });\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({ activeTabKey: tabIndex });\n        };\n        this.updateForecasts = () => {\n            const { fetchForecasts, widgetId } = this.props;\n            if (fetchForecasts) {\n                fetchForecasts(widgetId);\n            }\n        };\n        this.updateReports = () => {\n            const { fetchReports, widgetId } = this.props;\n            if (fetchReports) {\n                fetchReports(widgetId);\n            }\n        };\n        this.updateRosReports = () => {\n            const { fetchRosReports, isRosFeatureEnabled, widgetId } = this.props;\n            if (fetchRosReports && isRosFeatureEnabled) {\n                fetchRosReports(widgetId);\n            }\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, details, id, trend, updateTab } = this.props;\n        if (availableTabs) {\n            updateTab(id, availableTabs[0]);\n        }\n        if (trend && trend.computedForecastItem !== undefined) {\n            this.updateForecasts();\n        }\n        if (!details.showOptimizations) {\n            this.updateReports();\n        }\n        if (details.showOptimizations) {\n            this.updateRosReports();\n        }\n    }\n    componentDidUpdate(prevProps) {\n        const { costType, currency, trend } = this.props;\n        if (prevProps.costType !== costType || prevProps.currency !== currency) {\n            this.updateReports();\n            if (trend && trend.computedForecastItem !== undefined) {\n                this.updateForecasts();\n            }\n        }\n    }\n    render() {\n        const { details, isRosFeatureEnabled } = this.props;\n        if (details.showOptimizations) {\n            return isRosFeatureEnabled ? this.getOptimizationsSummary() : null;\n        }\n        return details.showHorizontal ? this.getHorizontalLayout() : this.getVerticalLayout();\n    }\n}\nexport default DashboardWidgetBase;\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { awsDashboardActions, awsDashboardSelectors, AwsDashboardTab } from 'store/dashboard/awsDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCostType, getCurrency } from 'utils/localStorage';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case AwsDashboardTab.services:\n            return 'service';\n        case AwsDashboardTab.accounts:\n            return 'account';\n        case AwsDashboardTab.regions:\n            return 'region';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), costType: getCostType(), getIdKeyForTab }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: awsDashboardActions.fetchWidgetForecasts,\n    fetchReports: awsDashboardActions.fetchWidgetReports,\n    updateTab: awsDashboardActions.changeWidgetTab,\n};\nconst AwsDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AwsDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { awsDashboardSelectors } from 'store/dashboard/awsDashboard';\nimport { AwsDashboardWidget } from './awsDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: AwsDashboardWidget,\n        selectWidgets: awsDashboardSelectors.selectWidgets(state),\n        widgets: awsDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default AwsDashboard;\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { awsOcpDashboardActions, awsOcpDashboardSelectors, AwsOcpDashboardTab } from 'store/dashboard/awsOcpDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCostType, getCurrency } from 'utils/localStorage';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case AwsOcpDashboardTab.services:\n            return 'service';\n        case AwsOcpDashboardTab.accounts:\n            return 'account';\n        case AwsOcpDashboardTab.regions:\n            return 'region';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsOcpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsOcpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), costType: getCostType(), getIdKeyForTab }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: awsOcpDashboardActions.fetchWidgetForecasts,\n    fetchReports: awsOcpDashboardActions.fetchWidgetReports,\n    updateTab: awsOcpDashboardActions.changeWidgetTab,\n};\nconst AwsOcpDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AwsOcpDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { awsOcpDashboardSelectors } from 'store/dashboard/awsOcpDashboard';\nimport { AwsOcpDashboardWidget } from './awsOcpDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: AwsOcpDashboardWidget,\n        selectWidgets: awsOcpDashboardSelectors.selectWidgets(state),\n        widgets: awsOcpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsOcpDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default AwsOcpDashboard;\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { azureDashboardActions, azureDashboardSelectors, AzureDashboardTab } from 'store/dashboard/azureDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case AzureDashboardTab.service_names:\n            return 'service_name';\n        case AzureDashboardTab.subscription_guids:\n            return 'subscription_guid';\n        case AzureDashboardTab.resource_locations:\n            return 'resource_location';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = azureDashboardSelectors.selectWidget(state, widgetId);\n    const queries = azureDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), getIdKeyForTab }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: azureDashboardActions.fetchWidgetForecasts,\n    fetchReports: azureDashboardActions.fetchWidgetReports,\n    updateTab: azureDashboardActions.changeWidgetTab,\n};\nconst AzureDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AzureDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { azureDashboardSelectors } from 'store/dashboard/azureDashboard';\nimport { AzureDashboardWidget } from './azureDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: AzureDashboardWidget,\n        selectWidgets: azureDashboardSelectors.selectWidgets(state),\n        widgets: azureDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AzureDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default AzureDashboard;\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { azureOcpDashboardActions, azureOcpDashboardSelectors, AzureOcpDashboardTab, } from 'store/dashboard/azureOcpDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case AzureOcpDashboardTab.service_names:\n            return 'service_name';\n        case AzureOcpDashboardTab.subscription_guids:\n            return 'subscription_guid';\n        case AzureOcpDashboardTab.resource_locations:\n            return 'resource_location';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = azureOcpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = azureOcpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), getIdKeyForTab }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: azureOcpDashboardActions.fetchWidgetForecasts,\n    fetchReports: azureOcpDashboardActions.fetchWidgetReports,\n    updateTab: azureOcpDashboardActions.changeWidgetTab,\n};\nconst AzureOcpDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AzureOcpDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { azureOcpDashboardSelectors } from 'store/dashboard/azureOcpDashboard';\nimport { AzureOcpDashboardWidget } from './azureOcpDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: AzureOcpDashboardWidget,\n        selectWidgets: azureOcpDashboardSelectors.selectWidgets(state),\n        widgets: azureOcpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AzureOcpDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default AzureOcpDashboard;\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { gcpDashboardActions, gcpDashboardSelectors, GcpDashboardTab } from 'store/dashboard/gcpDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case GcpDashboardTab.gcpProjects:\n            return 'gcp_project';\n        case GcpDashboardTab.regions:\n            return 'region';\n        case GcpDashboardTab.services:\n            return 'service';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = gcpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = gcpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), getIdKeyForTab }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: gcpDashboardActions.fetchWidgetForecasts,\n    fetchReports: gcpDashboardActions.fetchWidgetReports,\n    updateTab: gcpDashboardActions.changeWidgetTab,\n};\nconst GcpDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { GcpDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { gcpDashboardSelectors } from 'store/dashboard/gcpDashboard';\nimport { GcpDashboardWidget } from './gcpDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: GcpDashboardWidget,\n        selectWidgets: gcpDashboardSelectors.selectWidgets(state),\n        widgets: gcpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst GcpDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default GcpDashboard;\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { gcpOcpDashboardActions, gcpOcpDashboardSelectors, GcpOcpDashboardTab } from 'store/dashboard/gcpOcpDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case GcpOcpDashboardTab.gcpProjects:\n            return 'gcp_project';\n        case GcpOcpDashboardTab.regions:\n            return 'region';\n        case GcpOcpDashboardTab.services:\n            return 'service';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = gcpOcpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = gcpOcpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), getIdKeyForTab }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: gcpOcpDashboardActions.fetchWidgetForecasts,\n    fetchReports: gcpOcpDashboardActions.fetchWidgetReports,\n    updateTab: gcpOcpDashboardActions.changeWidgetTab,\n};\nconst GcpOcpDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { GcpOcpDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { gcpOcpDashboardSelectors } from 'store/dashboard/gcpOcpDashboard';\nimport { GcpOcpDashboardWidget } from './gcpOcpDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: GcpOcpDashboardWidget,\n        selectWidgets: gcpOcpDashboardSelectors.selectWidgets(state),\n        widgets: gcpOcpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst GcpOcpDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default GcpOcpDashboard;\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { ibmDashboardActions, ibmDashboardSelectors, IbmDashboardTab } from 'store/dashboard/ibmDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case IbmDashboardTab.services:\n            return 'service';\n        case IbmDashboardTab.projects:\n            return 'project';\n        case IbmDashboardTab.regions:\n            return 'region';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ibmDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ibmDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), getIdKeyForTab }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: ibmDashboardActions.fetchWidgetForecasts,\n    fetchReports: ibmDashboardActions.fetchWidgetReports,\n    updateTab: ibmDashboardActions.changeWidgetTab,\n};\nconst IbmDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { IbmDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { ibmDashboardSelectors } from 'store/dashboard/ibmDashboard';\nimport { IbmDashboardWidget } from './ibmDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: IbmDashboardWidget,\n        selectWidgets: ibmDashboardSelectors.selectWidgets(state),\n        widgets: ibmDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst IbmDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default IbmDashboard;\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardActions, ocpCloudDashboardSelectors, OcpCloudDashboardTab, } from 'store/dashboard/ocpCloudDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case OcpCloudDashboardTab.accounts:\n            return 'account';\n        case OcpCloudDashboardTab.regions:\n            return 'region';\n        case OcpCloudDashboardTab.services:\n            return 'service';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), getIdKeyForTab }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: ocpCloudDashboardActions.fetchWidgetForecasts,\n    fetchReports: ocpCloudDashboardActions.fetchWidgetReports,\n    updateTab: ocpCloudDashboardActions.changeWidgetTab,\n};\nconst OcpCloudDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpCloudDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardSelectors } from 'store/dashboard/ocpCloudDashboard';\nimport { OcpCloudDashboardWidget } from './ocpCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: OcpCloudDashboardWidget,\n        selectWidgets: ocpCloudDashboardSelectors.selectWidgets(state),\n        widgets: ocpCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpCloudDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default OcpCloudDashboard;\n","export const chartStyles = {\n    chartAltHeight: 250,\n    containerAltHeight: 250,\n};\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardActions, ocpDashboardSelectors, OcpDashboardTab } from 'store/dashboard/ocpDashboard';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { rosSelectors } from 'store/ros';\nimport { getCurrency } from 'utils/localStorage';\nimport { chartStyles } from './ocpDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case OcpDashboardTab.clusters:\n            return 'cluster';\n        case OcpDashboardTab.nodes:\n            return 'node';\n        case OcpDashboardTab.projects:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), getIdKeyForTab, chartAltHeight: chartStyles.chartAltHeight, containerAltHeight: chartStyles.containerAltHeight }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    })), (widget.rosPathsType &&\n        widget.rosType && {\n        isRosFeatureEnabled: featureFlagsSelectors.selectIsRosFeatureEnabled(state),\n        rosReport: rosSelectors.selectRos(state, widget.rosPathsType, widget.rosType, queries.optimizations),\n        rosReportError: rosSelectors.selectRosError(state, widget.rosPathsType, widget.rosType, queries.optimizations),\n        rosReportFetchStatus: rosSelectors.selectRosFetchStatus(state, widget.rosPathsType, widget.rosType, queries.optimizations),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: ocpDashboardActions.fetchWidgetForecasts,\n    fetchReports: ocpDashboardActions.fetchWidgetReports,\n    fetchRosReports: ocpDashboardActions.fetchWidgetRosReports,\n    updateTab: ocpDashboardActions.changeWidgetTab,\n};\nconst OcpDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardSelectors } from 'store/dashboard/ocpDashboard';\nimport { OcpDashboardWidget } from './ocpDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: OcpDashboardWidget,\n        selectWidgets: ocpDashboardSelectors.selectWidgets(state),\n        widgets: ocpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default OcpDashboard;\n","export const chartStyles = {\n    chartAltHeight: 250,\n    containerAltHeight: 250,\n};\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { rhelDashboardActions, rhelDashboardSelectors, RhelDashboardTab } from 'store/dashboard/rhelDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nimport { chartStyles } from './rhelDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case RhelDashboardTab.clusters:\n            return 'cluster';\n        case RhelDashboardTab.nodes:\n            return 'node';\n        case RhelDashboardTab.projects:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = rhelDashboardSelectors.selectWidget(state, widgetId);\n    const queries = rhelDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), getIdKeyForTab, chartAltHeight: chartStyles.chartAltHeight, containerAltHeight: chartStyles.containerAltHeight }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: rhelDashboardActions.fetchWidgetForecasts,\n    fetchReports: rhelDashboardActions.fetchWidgetReports,\n    updateTab: rhelDashboardActions.changeWidgetTab,\n};\nconst RhelDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { RhelDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { rhelDashboardSelectors } from 'store/dashboard/rhelDashboard';\nimport { RhelDashboardWidget } from './rhelDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: RhelDashboardWidget,\n        selectWidgets: rhelDashboardSelectors.selectWidgets(state),\n        widgets: rhelDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst RhelDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default RhelDashboard;\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { ociDashboardActions, ociDashboardSelectors, OciDashboardTab } from 'store/dashboard/ociDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case OciDashboardTab.product_services:\n            return 'product_service';\n        case OciDashboardTab.payer_tenant_ids:\n            return 'payer_tenant_id';\n        case OciDashboardTab.regions:\n            return 'region';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ociDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ociDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), getIdKeyForTab }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: ociDashboardActions.fetchWidgetForecasts,\n    fetchReports: ociDashboardActions.fetchWidgetReports,\n    updateTab: ociDashboardActions.changeWidgetTab,\n};\nconst OciDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OciDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { ociDashboardSelectors } from 'store/dashboard/ociDashboard';\nimport { OciDashboardWidget } from './ociDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: OciDashboardWidget,\n        selectWidgets: ociDashboardSelectors.selectWidgets(state),\n        widgets: ociDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OciDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default OciDashboard;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    date: {\n        alignSelf: 'center',\n        flexGrow: 1,\n        textAlign: 'end',\n    },\n    costType: {\n        marginLeft: global_spacer_md.var,\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentLeft: {\n        display: 'flex',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    main: {\n        padding: global_spacer_lg.value,\n    },\n    tabs: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        paddingBottom: global_spacer_lg.var,\n        paddingTop: global_spacer_lg.var,\n    },\n};\n","import './overview.scss';\nimport { Button, ButtonVariant, Popover, Tab, TabContent, Tabs, TabTitleText, Title, TitleSizes, } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon';\nimport { ProviderType } from 'api/providers';\nimport { getQueryRoute, parseQuery } from 'api/queries/overviewQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { getUserAccessQuery } from 'api/queries/userAccessQuery';\nimport { UserAccessType } from 'api/userAccess';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { CostType } from 'routes/components/costType';\nimport { Currency } from 'routes/components/currency';\nimport { Loading } from 'routes/state/loading';\nimport NoData from 'routes/state/noData/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { Perspective } from 'routes/views/components/perspective';\nimport { AwsDashboard } from 'routes/views/overview/awsDashboard';\nimport { AwsOcpDashboard } from 'routes/views/overview/awsOcpDashboard';\nimport { AzureDashboard } from 'routes/views/overview/azureDashboard';\nimport { AzureOcpDashboard } from 'routes/views/overview/azureOcpDashboard';\nimport { GcpDashboard } from 'routes/views/overview/gcpDashboard';\nimport { GcpOcpDashboard } from 'routes/views/overview/gcpOcpDashboard';\nimport { IbmDashboard } from 'routes/views/overview/ibmDashboard';\nimport { OcpCloudDashboard } from 'routes/views/overview/ocpCloudDashboard';\nimport { OcpDashboard } from 'routes/views/overview/ocpDashboard';\nimport { RhelDashboard } from 'routes/views/overview/rhelDashboard';\nimport { filterProviders, hasCloudCurrentMonthData, hasCloudData, hasCloudPreviousMonthData, hasCloudProvider, hasCurrentMonthData, hasPreviousMonthData, } from 'routes/views/utils/providers';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { userAccessQuery, userAccessSelectors } from 'store/userAccess';\nimport { getSinceDateRangeString } from 'utils/dates';\nimport { getCostType, getCurrency } from 'utils/localStorage';\nimport { withRouter } from 'utils/router';\nimport { hasAwsAccess, hasAzureAccess, hasGcpAccess, hasIbmAccess, isAwsAvailable, isAzureAvailable, isGcpAvailable, isIbmAvailable, isOciAvailable, isOcpAvailable, isRhelAvailable, } from 'utils/userAccess';\nimport { OciDashboard } from './ociDashboard';\nimport { styles } from './overview.styles';\n// eslint-disable-next-line no-shadow\nvar InfrastructurePerspective;\n(function (InfrastructurePerspective) {\n    InfrastructurePerspective[\"aws\"] = \"aws\";\n    InfrastructurePerspective[\"awsOcp\"] = \"aws_ocp\";\n    InfrastructurePerspective[\"azure\"] = \"azure\";\n    InfrastructurePerspective[\"azureOcp\"] = \"azure_ocp\";\n    InfrastructurePerspective[\"gcp\"] = \"gcp\";\n    InfrastructurePerspective[\"gcpOcp\"] = \"gcp_ocp\";\n    InfrastructurePerspective[\"ibm\"] = \"ibm\";\n    InfrastructurePerspective[\"ibmOcp\"] = \"ibm_ocp\";\n    InfrastructurePerspective[\"oci\"] = \"oci\";\n    InfrastructurePerspective[\"ocpCloud\"] = \"ocp_cloud\";\n})(InfrastructurePerspective || (InfrastructurePerspective = {}));\n// eslint-disable-next-line no-shadow\nvar OcpPerspective;\n(function (OcpPerspective) {\n    OcpPerspective[\"ocp\"] = \"ocp\";\n})(OcpPerspective || (OcpPerspective = {}));\n// eslint-disable-next-line no-shadow\nvar OverviewTab;\n(function (OverviewTab) {\n    OverviewTab[\"infrastructure\"] = \"infrastructure\";\n    OverviewTab[\"ocp\"] = \"ocp\";\n    OverviewTab[\"rhel\"] = \"rhel\";\n})(OverviewTab || (OverviewTab = {}));\n// eslint-disable-next-line no-shadow\nvar RhelPerspective;\n(function (RhelPerspective) {\n    RhelPerspective[\"rhel\"] = \"rhel\";\n})(RhelPerspective || (RhelPerspective = {}));\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case OverviewTab.infrastructure:\n            return 'infrastructure';\n        case OverviewTab.ocp:\n            return 'ocp';\n        case OverviewTab.rhel:\n            return 'rhel';\n    }\n};\nclass OverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            activeTabKey: 0,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getAvailableTabs = () => {\n            const { isFinsightsFeatureEnabled } = this.props;\n            const availableTabs = [];\n            const infrastructureTabs = this.isAwsAvailable() ||\n                this.isAzureAvailable() ||\n                this.isGcpAvailable() ||\n                this.isIbmAvailable() ||\n                this.isOciAvailable() ||\n                this.isOcpCloudAvailable()\n                ? [\n                    {\n                        contentRef: React.createRef(),\n                        tab: OverviewTab.infrastructure,\n                    },\n                ]\n                : undefined;\n            const ocpTabs = this.isOcpAvailable()\n                ? [\n                    {\n                        contentRef: React.createRef(),\n                        tab: OverviewTab.ocp,\n                    },\n                ]\n                : undefined;\n            const rhelTabs = this.isRhelAvailable()\n                ? [\n                    {\n                        contentRef: React.createRef(),\n                        tab: OverviewTab.rhel,\n                    },\n                ]\n                : undefined;\n            if (isFinsightsFeatureEnabled) {\n                if (infrastructureTabs) {\n                    availableTabs.push(...infrastructureTabs);\n                }\n                if (rhelTabs) {\n                    availableTabs.push(...rhelTabs);\n                }\n                if (ocpTabs) {\n                    availableTabs.push(...ocpTabs);\n                }\n            }\n            else {\n                if (ocpTabs) {\n                    availableTabs.push(...ocpTabs);\n                }\n                if (infrastructureTabs) {\n                    availableTabs.push(...infrastructureTabs);\n                }\n            }\n            return availableTabs;\n        };\n        this.getCostType = () => {\n            const { costType } = this.props;\n            const { currentInfrastructurePerspective, currentOcpPerspective } = this.state;\n            const currentItem = this.getCurrentTab() === OverviewTab.infrastructure ? currentInfrastructurePerspective : currentOcpPerspective;\n            if (currentItem === InfrastructurePerspective.aws || currentItem === InfrastructurePerspective.awsOcp) {\n                return (React.createElement(\"div\", { style: styles.costType },\n                    React.createElement(CostType, { costType: costType, onSelect: this.handleOnCostTypeSelected })));\n            }\n            return null;\n        };\n        this.getCurrency = () => {\n            const { currency } = this.props;\n            return React.createElement(Currency, { onSelect: this.handleOnCurrencySelected, currency: currency });\n        };\n        this.getCurrentTab = () => {\n            const { isFinsightsFeatureEnabled } = this.props;\n            const { activeTabKey } = this.state;\n            const hasAws = this.isAwsAvailable();\n            const hasAzure = this.isAzureAvailable();\n            const hasOci = this.isOciAvailable();\n            const hasGcp = this.isGcpAvailable();\n            const hasIbm = this.isIbmAvailable();\n            const hasOcp = this.isOcpAvailable();\n            const hasOcpCloud = this.isOcpCloudAvailable();\n            const hasRhel = this.isRhelAvailable();\n            const hasInfrastructure = hasAws || hasAzure || hasOci || hasGcp || hasIbm || hasOcpCloud;\n            const showInfrastructureOnly = hasInfrastructure && !hasOcp && !hasRhel;\n            const showOcpOnly = hasOcp && !hasInfrastructure && !hasRhel;\n            const showRhelOnly = hasRhel && !hasInfrastructure && !hasOcp;\n            if (showOcpOnly) {\n                return OverviewTab.ocp;\n            }\n            else if (showInfrastructureOnly) {\n                return OverviewTab.infrastructure;\n            }\n            else if (showRhelOnly) {\n                return OverviewTab.rhel;\n            }\n            else {\n                if (isFinsightsFeatureEnabled) {\n                    switch (activeTabKey) {\n                        case 0:\n                            return OverviewTab.infrastructure;\n                        case 1:\n                            return OverviewTab.rhel;\n                        case 2:\n                            return OverviewTab.ocp;\n                    }\n                }\n                switch (activeTabKey) {\n                    case 0:\n                        return OverviewTab.ocp;\n                    case 1:\n                        return OverviewTab.infrastructure;\n                }\n            }\n        };\n        this.getDefaultInfrastructurePerspective = () => {\n            const { perspective } = this.props;\n            // Upon page refresh, perspective param takes precedence\n            switch (perspective) {\n                case InfrastructurePerspective.aws:\n                case InfrastructurePerspective.awsOcp:\n                case InfrastructurePerspective.azure:\n                case InfrastructurePerspective.oci:\n                case InfrastructurePerspective.azureOcp:\n                case InfrastructurePerspective.gcp:\n                case InfrastructurePerspective.gcpOcp:\n                case InfrastructurePerspective.ibm:\n                case InfrastructurePerspective.ibmOcp:\n                case InfrastructurePerspective.ocpCloud:\n                    return perspective;\n            }\n            if (this.isOcpCloudAvailable()) {\n                return InfrastructurePerspective.ocpCloud;\n            }\n            if (this.isAwsAvailable()) {\n                return InfrastructurePerspective.aws;\n            }\n            if (this.isAzureAvailable()) {\n                return InfrastructurePerspective.azure;\n            }\n            if (this.isOciAvailable()) {\n                return InfrastructurePerspective.oci;\n            }\n            if (this.isGcpAvailable()) {\n                return InfrastructurePerspective.gcp;\n            }\n            if (this.isIbmAvailable()) {\n                return InfrastructurePerspective.ibm;\n            }\n            return undefined;\n        };\n        this.getDefaultOcpPerspective = () => {\n            const { ocpProviders, perspective, userAccess } = this.props;\n            // Upon page refresh, perspective param takes precedence\n            switch (perspective) {\n                case OcpPerspective.ocp:\n                    return perspective;\n            }\n            if (isOcpAvailable(userAccess, ocpProviders)) {\n                return OcpPerspective.ocp;\n            }\n            return undefined;\n        };\n        this.getDefaultRhelPerspective = () => {\n            const { perspective, rhelProviders, userAccess } = this.props;\n            // Upon page refresh, perspective param takes precedence\n            switch (perspective) {\n                case RhelPerspective.rhel:\n                    return perspective;\n            }\n            if (isRhelAvailable(userAccess, rhelProviders)) {\n                return RhelPerspective.rhel;\n            }\n            return undefined;\n        };\n        this.getPerspective = () => {\n            const { isIbmFeatureEnabled } = this.props;\n            const { currentInfrastructurePerspective, currentOcpPerspective, currentRhelPerspective } = this.state;\n            const hasAws = this.isAwsAvailable();\n            const hasAzure = this.isAzureAvailable();\n            const hasGcp = this.isGcpAvailable();\n            const hasIbm = this.isIbmAvailable();\n            const hasOci = this.isOciAvailable();\n            const hasOcp = this.isOcpAvailable();\n            const hasRhel = this.isRhelAvailable();\n            // Note: No need to test \"OCP on cloud\" here, since that requires at least one of the providers below\n            if (!(hasAws || hasAzure || hasGcp || hasIbm || hasOci || hasOcp || hasRhel)) {\n                return null;\n            }\n            let currentItem;\n            const currentTab = this.getCurrentTab();\n            switch (currentTab) {\n                case OverviewTab.infrastructure:\n                    currentItem = currentInfrastructurePerspective;\n                    break;\n                case OverviewTab.ocp:\n                    currentItem = currentOcpPerspective;\n                    break;\n                case OverviewTab.rhel:\n                    currentItem = currentRhelPerspective;\n                    break;\n            }\n            return (React.createElement(Perspective, { currentItem: currentItem, hasAws: hasAws, hasAwsOcp: this.isAwsOcpAvailable(), hasAzure: hasAzure, hasAzureOcp: this.isAzureOcpAvailable(), hasGcp: hasGcp, hasGcpOcp: this.isGcpOcpAvailable(), hasIbm: hasIbm, hasIbmOcp: this.isIbmOcpAvailable(), hasOci: hasOci, hasOcp: hasOcp, hasOcpCloud: this.isOcpCloudAvailable(), hasRhel: hasRhel, isIbmFeatureEnabled: isIbmFeatureEnabled, isInfrastructureTab: OverviewTab.infrastructure === currentTab, isRhelTab: OverviewTab.rhel === currentTab, onSelected: this.handlePerspectiveSelected }));\n        };\n        this.getRouteForQuery = (query) => {\n            const { router } = this.props;\n            return `${router.location.pathname}?${getQueryRoute(query)}`;\n        };\n        this.getTab = (tab, contentRef, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, tabContentId: `tab-${index}`, tabContentRef: contentRef, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) }));\n        };\n        this.getTabContent = (availableTabs) => {\n            return availableTabs.map((val, index) => {\n                return (React.createElement(TabContent, { eventKey: index, key: `${getIdKeyForTab(val.tab)}-tabContent`, id: `tab-${index}`, ref: val.contentRef }, this.getTabItem(val.tab, index)));\n            });\n        };\n        this.getTabItem = (tab, index) => {\n            const { awsProviders, azureProviders, ociProviders, costType, currency, gcpProviders, ibmProviders, ocpProviders, rhelProviders, } = this.props;\n            const { activeTabKey, currentInfrastructurePerspective, currentOcpPerspective, currentRhelPerspective } = this.state;\n            const emptyTab = React.createElement(React.Fragment, null); // Lazily load tabs\n            const noData = React.createElement(NoData, { showReload: false });\n            if (activeTabKey !== index) {\n                return emptyTab;\n            }\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === OverviewTab.infrastructure) {\n                if (currentInfrastructurePerspective === InfrastructurePerspective.ocpCloud) {\n                    const hasData = hasCloudData(awsProviders, ocpProviders) ||\n                        hasCloudData(azureProviders, ocpProviders) ||\n                        hasCloudData(gcpProviders, ocpProviders) ||\n                        hasCloudData(ibmProviders, ocpProviders);\n                    return hasData ? React.createElement(OcpCloudDashboard, { currency: currency }) : noData;\n                }\n                else if (currentInfrastructurePerspective === InfrastructurePerspective.aws) {\n                    const hasData = hasCurrentMonthData(awsProviders) || hasPreviousMonthData(awsProviders);\n                    return hasData ? React.createElement(AwsDashboard, { costType: costType }) : noData;\n                }\n                else if (currentInfrastructurePerspective === InfrastructurePerspective.awsOcp) {\n                    const hasData = hasCloudCurrentMonthData(awsProviders, ocpProviders) || hasCloudPreviousMonthData(awsProviders, ocpProviders);\n                    return hasData ? React.createElement(AwsOcpDashboard, { currency: currency }) : noData;\n                }\n                else if (currentInfrastructurePerspective === InfrastructurePerspective.azure) {\n                    const hasData = hasCurrentMonthData(azureProviders) || hasPreviousMonthData(azureProviders);\n                    return hasData ? React.createElement(AzureDashboard, { currency: currency }) : noData;\n                }\n                else if (currentInfrastructurePerspective === InfrastructurePerspective.azureOcp) {\n                    const hasData = hasCloudCurrentMonthData(azureProviders, ocpProviders) ||\n                        hasCloudPreviousMonthData(azureProviders, ocpProviders);\n                    return hasData ? React.createElement(AzureOcpDashboard, { currency: currency }) : noData;\n                }\n                else if (currentInfrastructurePerspective === InfrastructurePerspective.gcp) {\n                    const hasData = hasCurrentMonthData(gcpProviders) || hasPreviousMonthData(gcpProviders);\n                    return hasData ? React.createElement(GcpDashboard, { currency: currency }) : noData;\n                }\n                else if (currentInfrastructurePerspective === InfrastructurePerspective.gcpOcp) {\n                    const hasData = hasCloudCurrentMonthData(gcpProviders, ocpProviders) || hasCloudPreviousMonthData(gcpProviders, ocpProviders);\n                    return hasData ? React.createElement(GcpOcpDashboard, { currency: currency }) : noData;\n                }\n                else if (currentInfrastructurePerspective === InfrastructurePerspective.ibm) {\n                    const hasData = hasCurrentMonthData(ibmProviders) || hasPreviousMonthData(ibmProviders);\n                    return hasData ? React.createElement(IbmDashboard, { currency: currency }) : noData;\n                }\n                else if (currentInfrastructurePerspective === InfrastructurePerspective.oci) {\n                    const hasData = hasCurrentMonthData(ociProviders) || hasPreviousMonthData(ociProviders);\n                    return hasData ? React.createElement(OciDashboard, { currency: currency }) : noData;\n                }\n                else {\n                    return noData;\n                }\n            }\n            else if (currentTab === OverviewTab.ocp) {\n                const hasData = hasCurrentMonthData(ocpProviders) || hasPreviousMonthData(ocpProviders);\n                if (currentOcpPerspective === OcpPerspective.ocp) {\n                    return hasData ? React.createElement(OcpDashboard, { currency: currency }) : noData;\n                }\n                else {\n                    return noData;\n                }\n            }\n            else if (currentTab === OverviewTab.rhel) {\n                const hasData = hasCurrentMonthData(rhelProviders) || hasPreviousMonthData(rhelProviders);\n                if (currentRhelPerspective === RhelPerspective.rhel) {\n                    return hasData ? React.createElement(RhelDashboard, { currency: currency }) : noData;\n                }\n                else {\n                    return noData;\n                }\n            }\n            else {\n                return emptyTab;\n            }\n        };\n        this.getTabs = (availableTabs) => {\n            const { activeTabKey } = this.state;\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((val, index) => this.getTab(val.tab, val.contentRef, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { intl, isFinsightsFeatureEnabled } = this.props;\n            if (tab === OverviewTab.infrastructure) {\n                if (isFinsightsFeatureEnabled) {\n                    return intl.formatMessage(messages.summary);\n                }\n                return intl.formatMessage(messages.infrastructure);\n            }\n            else if (tab === OverviewTab.ocp) {\n                return intl.formatMessage(messages.openShift);\n            }\n            else if (tab === OverviewTab.rhel) {\n                return intl.formatMessage(messages.rhel);\n            }\n        };\n        this.handleOnCostTypeSelected = () => {\n            const { query, router } = this.props;\n            const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n            router.navigate(this.getRouteForQuery(newQuery), { replace: true });\n        };\n        this.handleOnCurrencySelected = () => {\n            const { router, query } = this.props;\n            const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n            router.navigate(this.getRouteForQuery(newQuery), { replace: true });\n        };\n        this.handlePerspectiveSelected = (value) => {\n            const { query, router } = this.props;\n            const currentTab = this.getCurrentTab();\n            this.setState(Object.assign(Object.assign({}, (currentTab === OverviewTab.infrastructure && {\n                currentInfrastructurePerspective: value,\n            })), (currentTab === OverviewTab.ocp && { currentOcpPerspective: value })), () => {\n                const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { perspective: value });\n                router.navigate(this.getRouteForQuery(newQuery), { replace: true });\n            });\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { query, router } = this.props;\n            const { activeTabKey } = this.state;\n            if (activeTabKey !== tabIndex) {\n                this.setState({\n                    activeTabKey: tabIndex,\n                }, () => {\n                    const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { tabKey: tabIndex });\n                    router.navigate(this.getRouteForQuery(newQuery), { replace: true });\n                });\n            }\n        };\n        this.isAwsAvailable = () => {\n            const { awsProviders, userAccess } = this.props;\n            return isAwsAvailable(userAccess, awsProviders);\n        };\n        this.isAwsOcpAvailable = () => {\n            const { awsProviders, ocpProviders, userAccess } = this.props;\n            return hasAwsAccess(userAccess) && hasCloudProvider(awsProviders, ocpProviders);\n        };\n        this.isAzureAvailable = () => {\n            const { azureProviders, userAccess } = this.props;\n            return isAzureAvailable(userAccess, azureProviders);\n        };\n        this.isAzureOcpAvailable = () => {\n            const { azureProviders, ocpProviders, userAccess } = this.props;\n            return hasAzureAccess(userAccess) && hasCloudProvider(azureProviders, ocpProviders);\n        };\n        this.isGcpAvailable = () => {\n            const { gcpProviders, userAccess } = this.props;\n            return isGcpAvailable(userAccess, gcpProviders);\n        };\n        this.isGcpOcpAvailable = () => {\n            const { gcpProviders, ocpProviders, userAccess } = this.props;\n            return hasGcpAccess(userAccess) && hasCloudProvider(gcpProviders, ocpProviders);\n        };\n        this.isIbmAvailable = () => {\n            const { ibmProviders, userAccess } = this.props;\n            return isIbmAvailable(userAccess, ibmProviders);\n        };\n        this.isIbmOcpAvailable = () => {\n            const { ibmProviders, ocpProviders, userAccess } = this.props;\n            return hasIbmAccess(userAccess) && hasCloudProvider(ibmProviders, ocpProviders);\n        };\n        this.isOciAvailable = () => {\n            const { ociProviders, userAccess } = this.props;\n            return isOciAvailable(userAccess, ociProviders);\n        };\n        this.isOcpAvailable = () => {\n            const { ocpProviders, userAccess } = this.props;\n            return isOcpAvailable(userAccess, ocpProviders);\n        };\n        this.isOcpCloudAvailable = () => {\n            const hasAwsOcp = this.isAwsOcpAvailable();\n            const hasAzureOcp = this.isAzureOcpAvailable();\n            const hasGcpOcp = this.isGcpOcpAvailable();\n            const hasIbmOcp = this.isIbmOcpAvailable();\n            return hasAwsOcp || hasAzureOcp || hasGcpOcp || hasIbmOcp;\n        };\n        this.isRhelAvailable = () => {\n            const { isFinsightsFeatureEnabled, rhelProviders, userAccess } = this.props;\n            return isFinsightsFeatureEnabled && isRhelAvailable(userAccess, rhelProviders);\n        };\n    }\n    componentDidMount() {\n        const { tabKey } = this.props;\n        this.setState({\n            activeTabKey: tabKey,\n            currentInfrastructurePerspective: this.getDefaultInfrastructurePerspective(),\n            currentOcpPerspective: this.getDefaultOcpPerspective(),\n            currentRhelPerspective: this.getDefaultRhelPerspective(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { providers, tabKey, userAccess } = this.props;\n        // Note: User access and providers are fetched via the AccountSettings component used by all routes\n        if (prevProps.userAccess !== userAccess || prevProps.providers !== providers) {\n            this.setState({\n                activeTabKey: tabKey,\n                currentInfrastructurePerspective: this.getDefaultInfrastructurePerspective(),\n                currentOcpPerspective: this.getDefaultOcpPerspective(),\n                currentRhelPerspective: this.getDefaultRhelPerspective(),\n            });\n        }\n    }\n    render() {\n        const { providersFetchStatus, intl, isFinsightsFeatureEnabled, isIbmFeatureEnabled, userAccessFetchStatus } = this.props;\n        // Note: No need to test OCP on cloud here, since that requires at least one provider\n        const noProviders = providersFetchStatus === FetchStatus.complete &&\n            !this.isAwsAvailable() &&\n            !this.isAzureAvailable() &&\n            !this.isGcpAvailable() &&\n            !this.isIbmAvailable() &&\n            !this.isOciAvailable() &&\n            !this.isOcpAvailable() &&\n            !this.isRhelAvailable();\n        const isLoading = providersFetchStatus === FetchStatus.inProgress || userAccessFetchStatus === FetchStatus.inProgress;\n        const availableTabs = this.getAvailableTabs();\n        const title = intl.formatMessage(messages.overviewTitle);\n        if (isLoading) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (noProviders) {\n            return React.createElement(NoProviders, { title: title });\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"header\", { style: styles.header },\n                React.createElement(\"div\", { style: styles.headerContent },\n                    React.createElement(Title, { headingLevel: \"h1\", size: TitleSizes['2xl'] },\n                        title,\n                        React.createElement(\"span\", { style: styles.infoIcon },\n                            React.createElement(Popover, { \"aria-label\": intl.formatMessage(messages.overviewInfoArialLabel), enableFlip: true, bodyContent: React.createElement(React.Fragment, null,\n                                    React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.openShiftCloudInfrastructure)),\n                                    React.createElement(\"p\", null, intl.formatMessage(messages.openShiftCloudInfrastructureDesc)),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.openShift)),\n                                    React.createElement(\"p\", null, intl.formatMessage(messages.openShiftDesc)),\n                                    React.createElement(\"br\", null),\n                                    isFinsightsFeatureEnabled && (React.createElement(React.Fragment, null,\n                                        React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.rhel)),\n                                        React.createElement(\"p\", null, intl.formatMessage(messages.rhelDesc)),\n                                        React.createElement(\"br\", null))),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.aws)),\n                                    React.createElement(\"p\", null, intl.formatMessage(messages.awsDesc)),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.gcp)),\n                                    React.createElement(\"p\", null, intl.formatMessage(messages.gcpDesc)),\n                                    isIbmFeatureEnabled && (React.createElement(React.Fragment, null,\n                                        React.createElement(\"br\", null),\n                                        React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.ibm)),\n                                        React.createElement(\"p\", null, intl.formatMessage(messages.ibmDesc)))),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.azure)),\n                                    React.createElement(\"p\", null, intl.formatMessage(messages.azureDesc)),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.oci)),\n                                    React.createElement(\"p\", null, intl.formatMessage(messages.ociDesc))) },\n                                React.createElement(Button, { \"aria-label\": intl.formatMessage(messages.overviewInfoButtonArialLabel), variant: ButtonVariant.plain },\n                                    React.createElement(OutlinedQuestionCircleIcon, null))))),\n                    React.createElement(\"div\", { style: styles.headerContentRight }, this.getCurrency())),\n                React.createElement(\"div\", { style: styles.tabs }, this.getTabs(availableTabs)),\n                React.createElement(\"div\", { style: styles.headerContent },\n                    React.createElement(\"div\", { style: styles.headerContentLeft },\n                        this.getPerspective(),\n                        this.getCostType()),\n                    React.createElement(\"div\", { style: styles.date }, getSinceDateRangeString()))),\n            React.createElement(\"div\", { style: styles.main }, this.getTabContent(availableTabs))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const tabKey = queryFromRoute.tabKey && !Number.isNaN(queryFromRoute.tabKey) ? Number(queryFromRoute.tabKey) : 0;\n    const perspective = queryFromRoute.perspective;\n    const currency = getCurrency();\n    const costType = perspective === InfrastructurePerspective.aws || perspective === InfrastructurePerspective.awsOcp\n        ? getCostType()\n        : undefined;\n    const query = Object.assign({}, queryFromRoute);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    const userAccessQueryString = getUserAccessQuery(userAccessQuery);\n    const userAccess = userAccessSelectors.selectUserAccess(state, UserAccessType.all, userAccessQueryString);\n    const userAccessError = userAccessSelectors.selectUserAccessError(state, UserAccessType.all, userAccessQueryString);\n    const userAccessFetchStatus = userAccessSelectors.selectUserAccessFetchStatus(state, UserAccessType.all, userAccessQueryString);\n    return {\n        awsProviders: filterProviders(providers, ProviderType.aws),\n        azureProviders: filterProviders(providers, ProviderType.azure),\n        costType,\n        currency,\n        gcpProviders: filterProviders(providers, ProviderType.gcp),\n        ibmProviders: filterProviders(providers, ProviderType.ibm),\n        isFinsightsFeatureEnabled: featureFlagsSelectors.selectIsFinsightsFeatureEnabled(state),\n        isIbmFeatureEnabled: featureFlagsSelectors.selectIsIbmFeatureEnabled(state),\n        ociProviders: filterProviders(providers, ProviderType.oci),\n        ocpProviders: filterProviders(providers, ProviderType.ocp),\n        providers,\n        providersError,\n        providersFetchStatus,\n        perspective,\n        query,\n        rhelProviders: filterProviders(providers, ProviderType.rhel),\n        tabKey,\n        userAccess,\n        userAccessError,\n        userAccessFetchStatus,\n        userAccessQueryString,\n    };\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst Overview = injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(OverviewBase)));\nexport default Overview;\n","import * as utils from './query';\n// filter_by props are converted and returned with logical OR/AND prefix\nexport function getQuery(query) {\n    return utils.getQuery(query);\n}\n// filter_by props are not converted\nexport function getQueryRoute(query) {\n    return utils.getQueryRoute(query);\n}\nexport function parseQuery(query) {\n    return utils.parseQuery(query);\n}\n","// eslint-disable-next-line no-shadow\nvar DataType;\n(function (DataType) {\n    DataType[\"currentMonthData\"] = \"current_month_data\";\n    DataType[\"hasData\"] = \"has_data\";\n    DataType[\"previousMonthData\"] = \"previous_month_data\";\n})(DataType || (DataType = {}));\n// Returns the OCP provider matching the given infrastructure uuid\nconst _getOcpProvider = (ocpProviders, uuid) => {\n    let result;\n    if (ocpProviders && ocpProviders.data) {\n        for (const provider of ocpProviders.data) {\n            if (provider.infrastructure && provider.infrastructure.uuid === uuid) {\n                result = provider;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Returns new Provider matching the given provider type\n//\n// See https://issues.redhat.com/browse/COST-2202\nexport const filterProviders = (providers, sourceType) => {\n    if (!providers) {\n        return providers;\n    }\n    const data = providers.data.filter(provider => provider.source_type.toLowerCase() === sourceType);\n    const meta = Object.assign(Object.assign({}, providers.meta), { count: data.length });\n    return Object.assign(Object.assign({}, providers), { meta,\n        data });\n};\n// Ensure at least one source provider has data available\nconst _hasData = (providers, datumType) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            if (provider[datumType]) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one cloud source provider has data available\nconst _hasCloudData = (providers, ocpProviders, dataType) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            const ocpProvider = _getOcpProvider(ocpProviders, provider.uuid);\n            // Ensure AWS provider is filtered by OpenShift and has OCP data\n            if (ocpProvider && ocpProvider[dataType]) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one cloud source provider\nconst _hasCloudProvider = (providers, ocpProviders) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            const ocpProvider = _getOcpProvider(ocpProviders, provider.uuid);\n            // Ensure AWS provider is filtered by OpenShift\n            if (ocpProvider) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one cloud source provider has data available for the current month (e.g., \"AWS filtered by OpenShift\")\nexport const hasCloudCurrentMonthData = (providers, ocpProviders) => {\n    return _hasCloudData(providers, ocpProviders, DataType.currentMonthData);\n};\n// Ensure at least one cloud source provider has data available (e.g., \"AWS filtered by OpenShift\")\nexport const hasCloudData = (providers, ocpProviders) => {\n    return _hasCloudData(providers, ocpProviders, DataType.hasData);\n};\n// Ensure at least one cloud source provider has data available for the previous month (e.g., \"AWS filtered by OpenShift\")\nexport const hasCloudPreviousMonthData = (providers, ocpProviders) => {\n    return _hasCloudData(providers, ocpProviders, DataType.previousMonthData);\n};\n// Ensure at least one cloud source provider (e.g., \"AWS filtered by OpenShift\"), regardless if there is OCP data\nexport const hasCloudProvider = (providers, ocpProviders) => {\n    return _hasCloudProvider(providers, ocpProviders);\n};\n// Ensure at least one source provider has data available for the current month\nexport const hasCurrentMonthData = (providers) => {\n    return _hasData(providers, DataType.currentMonthData);\n};\n// Ensure at least one source provider has data available\nexport const hasData = (providers) => {\n    return _hasData(providers, DataType.hasData);\n};\n// Ensure at least one source provider has data available for the previous month\nexport const hasPreviousMonthData = (providers) => {\n    return _hasData(providers, DataType.previousMonthData);\n};\n","import { UserAccessType } from 'api/userAccess';\nconst hasAccess = (userAccess, userAccessType) => {\n    let result = false;\n    if (userAccess && Array.isArray(userAccess.data)) {\n        // Used with multiple types (e.g., type=)\n        const data = userAccess.data.find(d => d.type === userAccessType);\n        result = data && data.access;\n    }\n    else {\n        // Used with type=any, type=GCP, etc.\n        result = userAccess && userAccess.data === true;\n    }\n    return result;\n};\nconst hasProviders = (providers) => {\n    let result = false;\n    if (providers && providers.meta) {\n        // providers API returns empty data array for no sources\n        result = providers.meta.count > 0;\n    }\n    return result;\n};\n// Returns true if user has access to AWS\nexport const hasAwsAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.aws);\n};\n// Returns true if user has access to AWS and at least one source provider\nexport const isAwsAvailable = (userAccess, awsProviders) => {\n    return hasAwsAccess(userAccess) && hasProviders(awsProviders);\n};\n// Returns true if user has access to Azure\nexport const hasAzureAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.azure);\n};\n// Returns true if user has access to Azure and at least one source provider\nexport const isAzureAvailable = (userAccess, azureProviders) => {\n    return hasAzureAccess(userAccess) && hasProviders(azureProviders);\n};\n// Returns true if user has access to Oci\nexport const hasOciAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.oci);\n};\n// Returns true if user has access to Oci and at least one source provider\nexport const isOciAvailable = (userAccess, ociProviders) => {\n    return hasOciAccess(userAccess) && hasProviders(ociProviders);\n};\n// Returns true if user has access to cost models\nexport const hasCostModelAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.cost_model);\n};\n// Returns true if user has access to GCP\nexport const hasGcpAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.gcp);\n};\n// Returns true if user has access to GCP and at least one source provider\nexport const isGcpAvailable = (userAccess, gcpProviders) => {\n    return hasAccess(userAccess, UserAccessType.gcp) && hasProviders(gcpProviders);\n};\n// Returns true if user has access to IBM\nexport const hasIbmAccess = (userAccess) => {\n    return hasGcpAccess(userAccess);\n};\n// Returns true if user has access to IBM and at least one source provider\nexport const isIbmAvailable = (userAccess, ibmProviders) => {\n    return hasIbmAccess(userAccess) && hasProviders(ibmProviders);\n};\n// Returns true if user has access to OCP\nexport const hasOcpAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.ocp);\n};\n// Returns true if user has access to OCP and at least one source provider\nexport const isOcpAvailable = (userAccess, ocpProviders) => {\n    return hasOcpAccess(userAccess) && hasProviders(ocpProviders);\n};\n// Returns true if user has access to RHEL\nexport const hasRhelAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.rhel);\n};\n// Returns true if user has access to RHEL and at least one source provider\nexport const isRhelAvailable = (userAccess, rhelProviders) => {\n    return hasRhelAccess(userAccess) && hasProviders(rhelProviders);\n};\n// Returns true if user has access to ROS\nexport const hasRosAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.ros);\n};\n// Returns true if user has access to RHEL and at least one source provider\nexport const isRosAvailable = (userAccess, rosProviders) => {\n    return hasRosAccess(userAccess) && hasProviders(rosProviders);\n};\n"],"names":["OkIconConfig","name","height","width","svgPath","yOffset","xOffset","OkIcon","getProvidersQuery","query","stringify","encode","indices","getUserAccessQuery","styles","currencySelector","display","alignItems","currencyLabel","marginBottom","marginRight","whiteSpace","currencyOptions","label","messages","value","CurrencyBase","constructor","super","arguments","this","defaultState","isSelectOpen","state","Object","assign","getSelect","currency","isDisabled","showLabel","props","selectOptions","getSelectOptions","selection","find","option","Select","className","undefined","id","isOpen","onSelect","handleSelect","onToggle","handleToggle","selections","variant","SelectVariant","map","SelectOption","key","intl","options","push","toString","formatMessage","units","event","isLocalStorage","setState","render","style","Title","headingLevel","size","TitleSizes","mapStateToProps","CurrencyConnect","connect","injectIntl","actionsContainer","backgroundColor","global_BackgroundColor_light_100","paddingBottom","global_spacer_lg","paddingLeft","paddingRight","costType","marginTop","costTypeContainer","paddingTop","currencyContainer","resetContainer","global_spacer_md","title","global_spacer_sm","SettingsBase","currentCostType","currentCurrency","getCostType","handleOnCostTypeSelected","getCurrency","handleOnCurrencySelected","updateSettings","api","settings","cost_type","PageSection","isFilled","updateSettingsStatus","mapDispatchToProps","initialCostModelsQuery","limit","offset","ordering","source_type","description","stringifySearch","keys","reduce","acc","cur","offsetTransform","page","perPage","CostModelsBottomPagination","count","costModels","stateProps","dispatchProps","ownProps","router","itemCount","PaginationVariant","onSetPage","_evt","newPage","newPerPage","navigate","onPerPageSelect","Toolbar","ToolbarContent","ToolbarItem","ToolbarItemVariant","Pagination","titles","paginationTitle","placement","descContainer","padding","defaultCostModelContext","apiError","checked","clearQuery","createError","createProcess","createSuccess","currencyUnits","dataFetched","dirtyName","distribution","distributePlatformUnallocated","distributeWorkerUnallocated","error","fetchSources","type","filterName","goToAddPL","isDiscount","handleMarkupDiscountChange","args","handleDistributionChange","handleDistributePlatformUnallocatedChange","handleDistributeWorkerUnallocatedChange","handleSignChange","loading","markup","metricsHash","onClose","onCurrencyChange","onDescChange","onFilterChange","onPageChange","onPerPageChange","onTypeChange","onNameChange","onSourceSelect","priceListPagination","onPerPageSet","onPageSet","step","setSources","sources","submitTiers","tiers","total","CostModelContext","form","textArea","maxWidth","minWidth","minHeight","maxHeight","selector","titleWithLearnMore","DistributionBase","Consumer","Stack","hasGutter","StackItem","href","rel","target","TextContent","Text","FormGroup","isInline","fieldId","isRequired","Radio","isChecked","onChange","nameErrors","length","descriptionErrors","isMarkupValid","trim","validatorsHash","AWS","ctx","Azure","GCP","OCP","priceListCurrent","justSaved","GeneralInformation","getValueLabel","valStr","val","o","sourceTypeOptions","helperTextInvalid","validated","TextInput","TextArea","direction","SelectDirection","appendMenuTo","toggleAriaLabel","placeholderText","MarkupWithDistributionBase","handleOnKeyDown","keyCode","preventDefault","helpText","Flex","default","alignSelf","FlexItem","InputGroup","InputGroupText","onKeyDown","placeholder","component","TextVariants","List","ListItem","cancel","submitRate","rateFormData","canSubmit","errors","rateKind","Form","ActionGroup","Button","ButtonVariant","onClick","PaginationToolbarTemplate","PriceListTable","metrics","measurements","sortBy","index","SortByDirection","addRateAction","deleteRateAction","items","getMetricLabel","m","replace","toLowerCase","getMeasurementLabel","metricOpts","measurementOpts","curr","measurs","filter","i","includes","NoTiersEmptyState","Bullseye","EmptyState","EmptyStateIcon","icon","EmptyStateBody","initialFilters","primary","search","setSearch","onRemove","onClearAll","from","to","filtered","item","stateIndex","rate","metric","label_metric","label_measurement","sort","r1","r2","projection","r","getMetric","getMeasurement","measurement","label_measurement_unit","res","slice","setPrimary","selected","secondaries","setSelections","filters","button","onClear","pagination","isCompact","actions","_rowId","rowData","data","sortCallback","e","ReviewSuccess","color","EmptyStateSecondaryActions","ReviewDetails","selectedSources","meta","Alert","create","back","TextList","TextListVariants","TextListItem","TextListItemVariants","src","Boolean","costmodel","text","join","FilterInput","onSearch","onKeyPress","evt","borderLeft","AssignSourcesToolbar","filterInputProps","paginationProps","clearAllFilters","ToolbarToggleGroup","breakpoint","toggleIcon","ToolbarFilter","deleteChip","chips","categoryName","sourceType","category","chip","TableComposable","TableVariant","Thead","Tr","c","Th","Tbody","row","rowIndex","Td","Checkbox","uuid","costModel","Sources","fetchData","context","componentDidMount","renderContent","onRefresh","contextType","updateTiersCurrency","rates","cloneDeep","tiered_rates","unit","usage","tag_rates","tag_values","InternalWizard","isProcess","isSuccess","closeFnc","onMove","validators","steps","current","setError","setSuccess","updateCostModel","newSteps","ix","canJumpTo","enableNext","isAddingRate","nextButtonText","Wizard","startAtStep","onNext","onBack","onGoToStep","footer","onSave","distribution_info","distribution_type","platform_cost","worker_cost","source_uuids","then","catch","err","CostModelWizardBase","isDialogOpen","closeConfirmDialog","openWizard","CancelButton","OkButton","Provider","queryParam","payload","cost_models","cm","resp","_","currentTarget","closeWizard","rowId","isSelected","pageSelections","s","newState","Number","errorMessage","fetch","Modal","header","CreateCostModelButton","canWrite","rbac","dispatch","tooltip","children","CreateCostModelWizard","createWizard","CannotDeleteContent","head","body","source","DeleteDialog","deleteCostModel","isLoading","deleteError","dialogData","closeDialog","stateName","status","deleteText","deleteAction","cancelText","cancelAction","sourcesNo","DeleteDialogActions","cannotDeleteTitle","cannotDeleteBody","canDeleteBody","AlertVariant","DeleteDialogBody","ModalVariant","titleIconVariant","CostModelsTableBase","dialogSource","activeSortDirection","activeSortIndex","costData","openDeleteDialog","rows","Unavailable","heightAuto","cells","colSpan","dateTime","updated_timestamp","day","hour","hour12","minute","month","timeZone","timeZoneName","year","Link","routes","getRowsByStateName","orderName","transforms","sortable","action","pointerEvents","createActions","_rowIx","onSort","_event","createOnSort","getSortParams","columnIndex","defaultDirection","gridBreakPoint","TableGridBreakpoint","cellIndex","isActionCell","ActionsColumn","a","CostModelsTableConnect","setDialogActionCreator","inputer","currentValue","setValue","onDeleteChip","_filterName","chipName","split","qval","onDeleteChipGroup","DescriptionFilterConnect","filterType","deleteChipGroup","DescriptionFilter","NameFilterConnect","NameFilter","setToggle","element","document","getElementById","focus","SourceTypeFilterConnect","_dispatchProps","setIsOpen","onFilter","Dropdown","toggle","DropdownToggle","dropdownItems","DropdownItem","SourceTypeFilter","ClearableToolbar","CostModelsFilterSelectorConnect","updateFilterType","currentFilterType","CostModelsFilterSelector","CostModelsTopPagination","ToolbarGroup","CostModelsDetailsBase","getCostModelsData","getMetricsData","getRbacData","componentDidUpdate","prevProps","learnMore","parse","location","ignoreQueryPrefix","searchQuery","tabKey","headerContent","justifyContent","tabs","SettingsTab","getIdKeyForTab","tab","calculations","tags","activeTabKey","getAvailableTabs","contentRef","getRouteForQuery","pathname","getTab","Tab","eventKey","tabContentId","tabContentRef","TabTitleText","getTabTitle","getTabContent","availableTabs","TabContent","ref","getTabItem","emptyTab","currentTab","getTabs","Tabs","activeKey","handleTabClick","tabIndex","newQuery","JSON","queryFromRoute","isNaN","NoDataStateBase","showReload","EmptyStateVariant","window","reload","NoDataState","PageHeader","PageHeaderTitle","alt","iconSpacer","marginLeft","viewSources","NoProvidersStateBase","getDocLink","textKey","urlKey","getRouteToSources","providerType","docUrlKey","descKey","titleKey","NoProvidersState","infrastructureAwsOptions","infrastructureAwsOcpOptions","infrastructureAzureOptions","infrastructureOciOptions","infrastructureAzureOcpOptions","infrastructureGcpOptions","infrastructureGcpOcpOptions","infrastructureIbmOptions","infrastructureIbmOcpOptions","infrastructureOcpCloudOptions","ocpOptions","rhelOptions","getInfrastructureOptions","hasAws","hasAwsOcp","hasAzure","hasAzureOcp","hasGcp","hasGcpOcp","hasIbm","hasIbmOcp","hasOci","isIbmFeatureEnabled","currentItem","hasOcp","hasOcpCloud","hasRhel","isInfrastructureTab","isRhelTab","onSelected","DashboardWidget","selectWidgets","widgets","Grid","widgetId","widget","details","showHorizontal","GridItem","sm","lg","xl","xl2","infoIcon","fontSize","global_FontSize_md","report","Card","CardTitle","Popover","enableFlip","bodyContent","infoTitle","CardBody","Skeleton","skeleton","ChartComparisonBase","onItemClicked","ChartComparison","chartStyles","chartAltHeight","chartHeight","containerAltHeight","containerTrendHeight","containerUsageHeight","comparison","comparisonContainer","global_spacer_2xl","tabItems","global_spacer_xl","Comparison","DashboardWidgetBase","currentComparison","cumulative","buildDetailsLink","viewAllPath","group_by","getChart","containerHeight","adjustContainerHeight","chartType","trend","getDailyTrendChart","showSupplementaryLabel","getDailyCostChart","getTrendChart","getUsageChart","getChartComparison","getFormattedUnits","cumulativeTitle","dailyTitleKey","daily","handleComparisonClick","chartFormatter","currentReport","previousReport","computedReportItem","computedReportItemValue","datumType","currentCostData","previousCostData","forecastData","getForecastData","computedForecastItem","ReportSummaryComponent","forecastConeData","formatOptions","formatter","format","showForecast","chartName","currentData","previousData","showUsageLegendLabel","getUnits","forecast","computedForecast","currentRequestData","previousRequestData","currentUsageData","previousUsageData","getDetails","reportType","costLabel","getDetailsLabel","costKey","requestLabel","requestKey","showTooltip","showUnits","showUsageFirst","usageFormatOptions","usageLabel","usageKey","getDetailsLink","getDetailsLinkTitle","getHorizontalLayout","currentReportFetchStatus","detailsLink","getTitle","getOptimizationsSummary","rosReportFetchStatus","rosReport","tabsReport","tabsReportFetchStatus","idKey","reportItem","topItems","activeTab","totalValue","hasTotal","getVerticalLayout","updateTab","updateForecasts","fetchForecasts","updateReports","fetchReports","updateRosReports","fetchRosReports","isRosFeatureEnabled","showOptimizations","awsDashboard","queries","forecastPathsType","forecastType","forecastError","forecastFetchStatus","reportPathsType","currentReportError","previous","previousReportError","previousReportFetchStatus","tabsReportError","AwsDashboardWidget","awsOcpDashboard","AwsOcpDashboardWidget","azureDashboard","AzureDashboardWidget","azureOcpDashboard","AzureOcpDashboardWidget","gcpDashboard","GcpDashboardWidget","gcpOcpDashboard","GcpOcpDashboardWidget","ibmDashboard","IbmDashboardWidget","ocpCloudDashboard","OcpCloudDashboardWidget","ocpDashboard","rosPathsType","rosType","featureFlags","ros","optimizations","rosReportError","OcpDashboardWidget","rhelDashboard","RhelDashboardWidget","ociDashboard","OciDashboardWidget","date","flexGrow","textAlign","headerContentLeft","headerContentRight","fontWeight","main","InfrastructurePerspective","OcpPerspective","OverviewTab","RhelPerspective","infrastructure","ocp","rhel","OverviewBase","isFinsightsFeatureEnabled","infrastructureTabs","isAwsAvailable","isAzureAvailable","isGcpAvailable","isIbmAvailable","isOciAvailable","isOcpCloudAvailable","ocpTabs","isOcpAvailable","rhelTabs","isRhelAvailable","currentInfrastructurePerspective","currentOcpPerspective","getCurrentTab","aws","awsOcp","hasInfrastructure","showInfrastructureOnly","showRhelOnly","getDefaultInfrastructurePerspective","perspective","azure","oci","azureOcp","gcp","gcpOcp","ibm","ibmOcp","ocpCloud","getDefaultOcpPerspective","ocpProviders","userAccess","getDefaultRhelPerspective","rhelProviders","getPerspective","currentRhelPerspective","isAwsOcpAvailable","isAzureOcpAvailable","isGcpOcpAvailable","isIbmOcpAvailable","handlePerspectiveSelected","getQueryRoute","awsProviders","azureProviders","ociProviders","gcpProviders","ibmProviders","noData","hasData","providers","providersFetchStatus","userAccessFetchStatus","noProviders","parseQuery","providersQueryString","providersError","userAccessQueryString","userAccessError","DataType","_getOcpProvider","result","provider","filterProviders","_hasData","_hasCloudData","dataType","ocpProvider","hasCloudCurrentMonthData","currentMonthData","hasCloudData","hasCloudPreviousMonthData","previousMonthData","hasCloudProvider","_hasCloudProvider","hasCurrentMonthData","hasPreviousMonthData","hasAccess","userAccessType","Array","isArray","d","access","hasProviders","hasAwsAccess","hasAzureAccess","hasOciAccess","hasCostModelAccess","hasGcpAccess","hasIbmAccess","hasOcpAccess","hasRhelAccess","hasRosAccess"],"sourceRoot":""}