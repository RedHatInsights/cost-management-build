{"version":3,"file":"js/azureDetails.78753fba5c3952724de6.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/external-link-alt-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_xs.js","webpack:///./src/api/queries/providersQuery.ts","webpack:///./src/routes/components/currency/currency.styles.ts","webpack:///./src/routes/components/currency/currency.tsx","webpack:///./src/routes/state/noData/noDataState.tsx","webpack:///./src/routes/state/noData/noData.tsx","webpack:///./src/routes/components/icons/optimizationIcon/optimizationIcon.tsx","webpack:///./src/routes/state/noOptimizations/noOptimizationsState.tsx","webpack:///./src/routes/components/icons/costIcon/costIcon.tsx","webpack:///./src/routes/state/noProviders/noProvidersState.styles.ts","webpack:///./src/routes/state/noProviders/noProvidersState.tsx","webpack:///./src/routes/state/noProviders/noProviders.tsx","webpack:///./src/routes/state/notAvailable/notAvailable.tsx","webpack:///./src/utils/computedReport/getComputedAzureReportItems.ts","webpack:///./src/routes/views/details/azureDetails/azureDetails.styles.ts","webpack:///./src/routes/views/details/azureDetails/detailsHeader.styles.ts","webpack:///./src/routes/views/details/azureDetails/detailsHeader.tsx","webpack:///./src/routes/views/details/azureDetails/detailsTable.tsx","webpack:///./src/routes/views/details/azureDetails/detailsToolbar.tsx","webpack:///./src/routes/views/details/azureDetails/azureDetails.tsx","webpack:///./src/routes/views/details/components/actions/actions.tsx","webpack:///./src/routes/views/details/components/dataTable/dataTable.styles.ts","webpack:///./src/routes/views/details/components/dataTable/dataTable.tsx","webpack:///./src/routes/views/utils/handles.ts","webpack:///./src/routes/views/utils/providers.ts","webpack:///./src/routes/views/utils/query.ts"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExternalLinkAltIcon = createIcon(ExternalLinkAltIconConfig);\n\nexport default ExternalLinkAltIcon;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_xs = {\n  \"name\": \"--pf-global--spacer--xs\",\n  \"value\": \"0.25rem\",\n  \"var\": \"var(--pf-global--spacer--xs)\"\n};\nexports[\"default\"] = exports.global_spacer_xs;","import { parse, stringify } from 'qs';\nexport function getProvidersQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseProvidersQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    currencySelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    currencyLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n        whiteSpace: 'nowrap',\n    },\n};\n","import './currency.scss';\nimport { Select, SelectOption, SelectVariant, Title } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { invalidateSession, setCurrency } from 'utils/localStorage';\nimport { styles } from './currency.styles';\nexport const currencyOptions = [\n    { label: messages.currencyOptions, value: 'AUD' },\n    { label: messages.currencyOptions, value: 'CAD' },\n    { label: messages.currencyOptions, value: 'CHF' },\n    { label: messages.currencyOptions, value: 'CNY' },\n    { label: messages.currencyOptions, value: 'DKK' },\n    { label: messages.currencyOptions, value: 'EUR' },\n    { label: messages.currencyOptions, value: 'GBP' },\n    { label: messages.currencyOptions, value: 'HKD' },\n    { label: messages.currencyOptions, value: 'JPY' },\n    { label: messages.currencyOptions, value: 'NOK' },\n    { label: messages.currencyOptions, value: 'NZD' },\n    { label: messages.currencyOptions, value: 'SEK' },\n    { label: messages.currencyOptions, value: 'SGD' },\n    { label: messages.currencyOptions, value: 'USD' },\n    { label: messages.currencyOptions, value: 'ZAR' },\n];\nclass CurrencyBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isSelectOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getSelect = () => {\n            const { currency, isDisabled } = this.props;\n            const { isSelectOpen } = this.state;\n            const selectOptions = this.getSelectOptions();\n            const selection = selectOptions.find((option) => option.value === currency);\n            return (React.createElement(Select, { className: \"currencyOverride\", id: \"currencySelect\", isDisabled: isDisabled, isOpen: isSelectOpen, onSelect: this.handleSelect, onToggle: this.handleToggle, selections: selection, variant: SelectVariant.single }, selectOptions.map(option => (React.createElement(SelectOption, { key: option.value, value: option })))));\n        };\n        this.getSelectOptions = () => {\n            const { intl } = this.props;\n            const options = [];\n            currencyOptions.map(option => {\n                options.push({\n                    toString: () => intl.formatMessage(option.label, { units: option.value }),\n                    value: option.value,\n                });\n            });\n            return options;\n        };\n        this.handleSelect = (event, selection) => {\n            const { onSelect } = this.props;\n            setCurrency(selection.value); // Set currency units via local storage\n            this.setState({\n                isSelectOpen: false,\n            }, () => {\n                if (onSelect) {\n                    onSelect(selection.value);\n                }\n            });\n        };\n        this.handleToggle = isSelectOpen => {\n            this.setState({ isSelectOpen });\n        };\n    }\n    render() {\n        const { intl } = this.props;\n        // Clear local storage value if current session is not valid\n        invalidateSession();\n        return (React.createElement(\"div\", { style: styles.currencySelector },\n            React.createElement(Title, { headingLevel: \"h2\", size: \"md\", style: styles.currencyLabel }, intl.formatMessage(messages.currency)),\n            this.getSelect()));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst CurrencyConnect = connect(mapStateToProps, mapDispatchToProps)(CurrencyBase);\nconst Currency = injectIntl(CurrencyConnect);\nexport default Currency;\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nclass NoDataStateBase extends React.Component {\n    render() {\n        const { intl, showReload = true } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, intl.formatMessage(messages.noDataStateTitle)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(messages.noDataStateDesc)),\n            showReload && (React.createElement(Button, { variant: \"primary\", onClick: () => window.location.reload() }, intl.formatMessage(messages.noDataStateRefresh)))));\n    }\n}\nconst NoDataState = injectIntl(NoDataStateBase);\nexport { NoDataState };\n","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React from 'react';\nimport { NoDataState } from './noDataState';\nconst NoData = ({ showReload, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(NoDataState, { showReload: showReload }))));\n};\nexport default NoData;\n","import './optimizationIcon.scss';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nconst icon = require('./Red_Hat-IT_Optimization-Gray.svg');\nconst OptimizationIcon = ({ className, intl }) => {\n    return (React.createElement(\"img\", { className: `optimization-icon ${className}`, src: icon, alt: intl.formatMessage(messages.optimizations), \"aria-hidden\": \"true\" }));\n};\nexport default injectIntl(OptimizationIcon);\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { OptimizationIcon } from 'routes/components/icons/optimizationIcon';\nclass NoOptimizationsStateBase extends React.Component {\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: OptimizationIcon }),\n            React.createElement(Title, { headingLevel: \"h1\", size: \"lg\" }, intl.formatMessage(messages.noOptimizationsTitle)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(messages.noOptimizationsDesc))));\n    }\n}\nconst NoOptimizationsState = injectIntl(NoOptimizationsStateBase);\nexport { NoOptimizationsState };\n","import './costIcon.scss';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nconst icon = require('./Cost-icon.svg');\nconst CostIcon = ({ className, intl }) => {\n    return (React.createElement(\"img\", { className: `cost-icon ${className}`, src: icon, alt: intl.formatMessage(messages.costManagement), \"aria-hidden\": \"true\" }));\n};\nexport default injectIntl(CostIcon);\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    iconSpacer: {\n        marginLeft: global_spacer_xs.value,\n    },\n    viewSources: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { ProviderType } from 'api/providers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { CostIcon } from 'routes/components/icons/costIcon';\nimport { getReleasePath } from 'utils/paths';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDocLink = (textKey, urlKey) => {\n            const { intl } = this.props;\n            return (React.createElement(\"a\", { href: intl.formatMessage(urlKey), rel: \"noreferrer\", target: \"_blank\" },\n                intl.formatMessage(textKey),\n                React.createElement(\"span\", { style: styles.iconSpacer },\n                    React.createElement(ExternalLinkAltIcon, null))));\n        };\n        this.getRouteToSources = () => {\n            const release = getReleasePath();\n            return `${release}/settings/sources`;\n        };\n    }\n    render() {\n        const { intl, providerType } = this.props;\n        let descKey = messages.noProvidersStateOverviewDesc;\n        let titleKey = messages.noProvidersStateOverviewTitle;\n        let docUrlKey;\n        let icon;\n        let textKey;\n        switch (providerType) {\n            case ProviderType.aws:\n                descKey = messages.noProvidersStateAwsDesc;\n                titleKey = messages.noProvidersStateAwsTitle;\n                break;\n            case ProviderType.azure:\n                descKey = messages.noProvidersStateAzureDesc;\n                titleKey = messages.noProvidersStateAzureTitle;\n                break;\n            case ProviderType.gcp:\n                descKey = messages.noProvidersStateGcpDesc;\n                titleKey = messages.noProvidersStateGcpTitle;\n                break;\n            case ProviderType.ibm:\n                descKey = messages.noProvidersStateIbmDesc;\n                titleKey = messages.noProvidersStateIbmTitle;\n                break;\n            case ProviderType.ocp:\n                descKey = messages.noProvidersStateOcpDesc;\n                docUrlKey = messages.docsAddOcpSources;\n                textKey = messages.noProvidersStateOcpAddSources;\n                titleKey = messages.noProvidersStateOcpTitle;\n                break;\n            default:\n                icon = CostIcon;\n        }\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: icon ? icon : PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h1\", size: \"lg\" }, intl.formatMessage(titleKey)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(descKey)),\n            docUrlKey && textKey ? (React.createElement(\"div\", { style: styles.viewSources }, this.getDocLink(textKey, docUrlKey))) : (React.createElement(Button, { variant: \"primary\", component: \"a\", href: this.getRouteToSources() }, intl.formatMessage(messages.noProvidersStateGetStarted)))));\n    }\n}\nconst NoProvidersState = injectIntl(NoProvidersStateBase);\nexport { NoProvidersState };\n","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React from 'react';\nimport { NoProvidersState } from './noProvidersState';\nconst NoProviders = ({ providerType, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(NoProvidersState, { providerType: providerType }))));\n};\nexport default NoProviders;\n","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Unavailable } from '@redhat-cloud-services/frontend-components/Unavailable';\nimport React from 'react';\nconst NotAvailable = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(Unavailable, null))));\n};\nexport default NotAvailable;\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.subscription_guid) {\n        return 'subscription_guid';\n    }\n    if (groupBy.resource_location) {\n        return 'resource_location';\n    }\n    if (groupBy.service_name) {\n        return 'service_name';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    azureDetails: {\n        minHeight: '100%',\n    },\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    toolbarContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costValue: {\n        marginTop: global_spacer_lg.var,\n        marginBottom: 0,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    dateTitle: {\n        textAlign: 'end',\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentLeft: {\n        display: 'flex',\n        minHeight: '90px',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { TagPathsType } from 'api/tags/tag';\nimport { ExportsLink } from 'components/drawers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Currency } from 'routes/components/currency';\nimport { GroupBy } from 'routes/views/components/groupBy';\nimport { filterProviders } from 'routes/views/utils/providers';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedAzureReportItems';\nimport { getSinceDateRangeString } from 'utils/dates';\nimport { formatCurrency } from 'utils/format';\nimport { styles } from './detailsHeader.styles';\nconst groupByOptions = [\n    { label: 'subscription_guid', value: 'subscription_guid' },\n    { label: 'service_name', value: 'service_name' },\n    { label: 'resource_location', value: 'resource_location' },\n];\nconst tagPathsType = TagPathsType.azure;\nclass DetailsHeaderBase extends React.Component {\n    render() {\n        const { currency, groupBy, isExportsFeatureEnabled, onCurrencySelected, onGroupBySelected, providers, providersError, report, intl, } = this.props;\n        const showContent = report && !providersError && providers && providers.meta && providers.meta.count > 0;\n        const hasCost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.azureDetailsTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(\"div\", { style: styles.headerContentLeft },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: !showContent, onSelected: onGroupBySelected, options: groupByOptions, showTags: true, tagPathsType: tagPathsType })),\n                showContent && (React.createElement(\"div\", null,\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: TitleSizes['4xl'] }, formatCurrency(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD')),\n                    React.createElement(\"div\", { style: styles.dateTitle }, getSinceDateRangeString()))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        providers: filterProviders(providers, ProviderType.azure),\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n    };\n});\nconst DetailsHeader = injectIntl(connect(mapStateToProps, {})(DetailsHeaderBase));\nexport { DetailsHeader };\n","import 'routes/views/details/components/dataTable/dataTable.scss';\nimport { ReportPathsType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { Actions } from 'routes/views/details/components/actions';\nimport { DataTable } from 'routes/views/details/components/dataTable';\nimport { styles } from 'routes/views/details/components/dataTable/dataTable.styles';\nimport { getBreakdownPath } from 'routes/views/utils/paths';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getForDateRangeString, getNoDataForDateRangeString } from 'utils/dates';\nimport { formatCurrency, formatPercentage } from 'utils/format';\nimport { formatPath } from 'utils/paths';\nimport { noPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nconst reportPathsType = ReportPathsType.azure;\nclass DetailsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { groupBy, groupByTagKey, intl, isAllSelected, report, selectedItems, router } = this.props;\n            if (!report) {\n                return;\n            }\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: (groupByTagKey ? groupByTagKey : groupBy),\n            });\n            const columns = groupByTagKey\n                ? [\n                    {\n                        name: '',\n                    },\n                    {\n                        name: intl.formatMessage(messages.tagNames),\n                    },\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign({ orderBy: groupBy, name: intl.formatMessage(messages.detailsResourceNames, { value: groupBy }) }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ];\n            computedItems.map((item, index) => {\n                const cost = this.getTotalCost(item, index);\n                const label = item && item.label !== null ? item.label : '';\n                const monthOverMonth = this.getMonthOverMonthCost(item, index);\n                const isDisabled = label === `${noPrefix}${groupBy}` || label === `${noPrefix}${groupByTagKey}`;\n                const desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                const actions = this.getActions(item, isDisabled);\n                const name = isDisabled ? label : (React.createElement(Link, { to: getBreakdownPath({\n                        basePath: formatPath(routes.azureDetailsBreakdown.path),\n                        description: item.id,\n                        groupBy,\n                        id: item.id,\n                        router,\n                        title: label.toString(),\n                    }) }, label));\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: (React.createElement(\"div\", null,\n                                name,\n                                desc)),\n                        },\n                        { value: React.createElement(\"div\", null, monthOverMonth) },\n                        { value: React.createElement(\"div\", null, cost), style: styles.managedColumn },\n                        { value: React.createElement(\"div\", null, actions) },\n                    ],\n                    isOpen: false,\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                    selectionDisabled: isDisabled,\n                });\n            });\n            this.setState({\n                columns,\n                rows,\n            });\n        };\n        this.getActions = (item, isDisabled) => {\n            const { groupBy, reportQueryString } = this.props;\n            return (React.createElement(Actions, { groupBy: groupBy, isDisabled: isDisabled, item: item, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getMonthOverMonthCost = (item, index) => {\n            const { intl } = this.props;\n            const value = formatCurrency(Math.abs(item.cost.total.value - item.delta_value), item.cost.total.units);\n            const percentage = item.delta_percent !== null ? formatPercentage(Math.abs(item.delta_percent)) : 0;\n            const showPercentage = !(percentage === 0 || percentage === '0.00');\n            const showValue = item.delta_percent !== null; // Workaround for https://github.com/project-koku/koku/issues/1395\n            let iconOverride;\n            if (showPercentage) {\n                iconOverride = 'iconOverride';\n                if (item.delta_percent !== null && item.delta_value < 0) {\n                    iconOverride += ' decrease';\n                }\n                if (item.delta_percent !== null && item.delta_value > 0) {\n                    iconOverride += ' increase';\n                }\n            }\n            if (!showValue) {\n                return getNoDataForDateRangeString();\n            }\n            else {\n                return (React.createElement(\"div\", { className: \"monthOverMonthOverride\" },\n                    React.createElement(\"div\", { className: iconOverride, key: `month-over-month-cost-${index}` },\n                        showPercentage ? intl.formatMessage(messages.percent, { value: percentage }) : React.createElement(EmptyValueState, null),\n                        showPercentage && item.delta_percent !== null && item.delta_value > 0 && (React.createElement(\"span\", { className: \"fa fa-sort-up\", style: styles.infoArrow, key: `month-over-month-icon-${index}` })),\n                        showPercentage && item.delta_percent !== null && item.delta_value < 0 && (React.createElement(\"span\", { className: \"fa fa-sort-down\", style: Object.assign(Object.assign({}, styles.infoArrow), styles.infoArrowDesc), key: `month-over-month-icon-${index}` }))),\n                    React.createElement(\"div\", { style: styles.infoDescription, key: `month-over-month-info-${index}` }, getForDateRangeString(value))));\n            }\n        };\n        this.getTotalCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.cost.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.cost.total.value, item.cost.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport || prevProps.selectedItems !== selectedItems) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { isLoading, onSelected, onSort, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, isLoading: isLoading, onSelected: onSelected, onSort: onSort, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst DetailsTable = injectIntl(withRouter(DetailsTableBase));\nexport { DetailsTable };\n","import { getQuery } from 'api/queries/azureQuery';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType, TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { isEqual } from 'utils/equal';\nimport { tagKey } from 'utils/props';\nconst tagType = TagType.tag;\nconst tagPathsType = TagPathsType.azure;\nexport class DetailsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { intl, tagReport } = this.props;\n            const options = [\n                {\n                    name: intl.formatMessage(messages.filterByValues, { value: 'subscription_guid' }),\n                    key: 'subscription_guid',\n                },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'service_name' }), key: 'service_name' },\n                {\n                    name: intl.formatMessage(messages.filterByValues, { value: 'resource_location' }),\n                    key: 'resource_location',\n                },\n            ];\n            if (tagReport && tagReport.data && tagReport.data.length) {\n                options.push({ name: intl.formatMessage(messages.filterByValues, { value: tagKey }), key: tagKey });\n            }\n            return options;\n        };\n        this.updateReport = () => {\n            const { fetchTag, tagQueryString } = this.props;\n            fetchTag(tagPathsType, tagType, tagQueryString);\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        }, () => {\n            this.updateReport();\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { query, tagReport } = this.props;\n        if (!isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            }, () => {\n                this.updateReport();\n            });\n        }\n        else if (query && !isEqual(query, prevProps.query)) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { groupBy, isAllSelected, isDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onExportClicked, onFilterAdded, onFilterRemoved, pagination, query, selectedItems, tagReport, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, groupBy: groupBy, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onExportClicked: onExportClicked, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.azure, selectedItems: selectedItems, showBulkSelect: true, showExcludes: true, showExport: true, showFilter: true, tagReport: tagReport, tagPathsType: tagPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        key_only: true,\n        limit: 1000,\n    });\n    const tagReport = tagSelectors.selectTag(state, tagPathsType, tagType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagPathsType, tagType, tagQueryString);\n    return {\n        tagReportFetchStatus,\n        tagReport,\n        tagQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst DetailsToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsToolbarBase);\nconst DetailsToolbar = injectIntl(DetailsToolbarConnect);\nexport { DetailsToolbar };\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getQuery, parseQuery } from 'api/queries/azureQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoData } from 'routes/state/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { ExportModal } from 'routes/views/components/export';\nimport { getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { handleCurrencySelected, handleFilterAdded, handleFilterRemoved, handlePerPageSelect, handleSetPage, handleSort, } from 'routes/views/utils/handles';\nimport { filterProviders, hasCurrentMonthData } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedAzureReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getCurrency } from 'utils/localStorage';\nimport { noPrefix, tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { styles } from './azureDetails.styles';\nimport { DetailsHeader } from './detailsHeader';\nimport { DetailsTable } from './detailsTable';\nimport { DetailsToolbar } from './detailsToolbar';\nconst baseQuery = {\n    filter: {\n        limit: 10,\n        offset: 0,\n    },\n    exclude: {},\n    filter_by: {},\n    group_by: {\n        subscription_guid: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst reportType = ReportType.cost;\nconst reportPathsType = ReportPathsType.azure;\nclass AzureDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            isAllSelected: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey || groupById,\n            });\n        };\n        this.getExportModal = (computedItems) => {\n            const { query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `${noPrefix}${groupById}` || item.label === `${noPrefix}${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, router, report } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = Math.trunc(offset / limit + 1);\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handlePerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.azure),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { query, report, reportFetchStatus, reportQueryString, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return (React.createElement(DetailsTable, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, groupByTagKey: groupByTagKey, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending) => handleSort(query, router, sortType, isSortAscending), report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, router, report } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(DetailsToolbar, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isDisabled || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onExportClicked: this.handleExportModalOpen, onFilterAdded: filter => handleFilterAdded(query, router, filter), onFilterRemoved: filter => handleFilterRemoved(query, router, filter), pagination: this.getPagination(isDisabled), query: query, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            const groupByKey = groupBy;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: '*',\n                }, order_by: undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.updateReport = () => {\n            const { fetchReport, reportQueryString } = this.props;\n            fetchReport(reportPathsType, reportType, reportQueryString);\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { currency, intl, providers, providersFetchStatus, query, report, reportError, reportFetchStatus, router, } = this.props;\n        const computedItems = this.getComputedItems();\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const isDisabled = computedItems.length === 0;\n        const title = intl.formatMessage(messages.azureDetailsTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.inProgress) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.complete) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: ProviderType.azure, title: title });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.azureDetails },\n            React.createElement(DetailsHeader, { currency: currency, groupBy: groupById, onCurrencySelected: value => handleCurrencySelected(query, router, value), onGroupBySelected: this.handleGroupBySelected, report: report }),\n            React.createElement(\"div\", { style: styles.content },\n                React.createElement(\"div\", { style: styles.toolbarContainer }, this.getToolbar(computedItems)),\n                this.getExportModal(computedItems),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const currency = getCurrency();\n    const query = Object.assign(Object.assign({}, baseQuery), queryFromRoute);\n    const reportQuery = {\n        currency,\n        delta: 'cost',\n        exclude: query.exclude,\n        filter: Object.assign(Object.assign({}, query.filter), { resolution: 'monthly', time_scope_units: 'month', time_scope_value: -1 }),\n        filter_by: query.filter_by,\n        group_by: query.group_by,\n        order_by: query.order_by,\n    };\n    const reportQueryString = getQuery(reportQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        currency,\n        providers: filterProviders(providers, ProviderType.azure),\n        providersError,\n        providersFetchStatus,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(AzureDetails)));\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ExportModal } from 'routes/views/components/export';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nimport { tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, reportPathsType, reportQueryString } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { count: 1, groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, intl, item: { source_uuid }, redirectToCostModel, router, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, intl.formatMessage(messages.detailsActionsExport)),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], router) }, intl.formatMessage(messages.detailsActionsPriceList)));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = injectIntl(withRouter(DetailsActionsConnect));\nexport default Actions;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    costColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingRight: 0,\n    },\n    defaultLabel: {\n        minWidth: '63px',\n    },\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    lastReported: {\n        textAlign: 'right',\n        paddingRight: '40px',\n    },\n    lastReportedColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    managedColumn: {\n        textAlign: 'right',\n    },\n    nameColumn: {\n        width: '1%',\n    },\n};\n","import './dataTable.scss';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport { parseQuery } from 'api/queries/ocpQuery';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { NoOptimizationsState } from 'routes/state/noOptimizations/noOptimizationsState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass DataTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { intl, isOptimizations, router } = this.props;\n            const queryFromRoute = parseQuery(router.location.search);\n            if (queryFromRoute.filter_by) {\n                for (const val of Object.values(queryFromRoute.filter_by)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            if (isOptimizations) {\n                return React.createElement(NoOptimizationsState, null);\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, router } = this.props;\n            const orderBy = columns[index].orderBy;\n            const queryFromRoute = parseQuery(router.location.search);\n            const direction = queryFromRoute && queryFromRoute.order_by && queryFromRoute.order_by[orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected, rows } = this.props;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnRowClick = (event, rowIndex) => {\n            const { onRowClick, rows } = this.props;\n            rows.map(row => (row.selected = false));\n            rows[rowIndex].selected = true;\n            this.setState({ rows }, () => {\n                if (onRowClick) {\n                    onRowClick(event, rowIndex);\n                }\n            });\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isLoading, isOptimizations, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.dataTableAriaLabel), className: \"tableOverride\", gridBreakPoint: \"grid-2xl\", hasSelectableRowCaption: isOptimizations },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { isSelectable: isOptimizations, isHoverable: isOptimizations, isRowSelected: isOptimizations && row.selected, onRowClick: isOptimizations ? _event => this.handleOnRowClick(_event, rowIndex) : undefined, key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 && !isOptimizations ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${cellIndex}-${rowIndex}`, modifier: \"nowrap\", select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    }, style: item.style })) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", isActionCell: !isOptimizations && cellIndex === row.cells.length - 1, style: item.style }, item.value))))))))),\n            rows.length === 0 && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(DataTable));\n","import { addFilterToQuery, removeFilterFromQuery } from './filter';\nimport { getRouteForQuery } from './query';\nexport const handleSelected = (query, router, value, reset = false) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    router.navigate(getRouteForQuery(newQuery, router.location, reset), { replace: true }); // Don't reset pagination\n};\nexport const handleCurrencySelected = (query, router, value, reset = false) => {\n    handleSelected(query, router, value, reset);\n};\nexport const handleCostTypeSelected = (query, router, value, reset = false) => {\n    handleSelected(query, router, value, reset);\n};\nexport const handleCostDistributionSelected = (query, router, value, reset = false) => {\n    const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { order_by: undefined });\n    handleSelected(newQuery, router, value, reset);\n};\nexport const handleFilterAdded = (query, router, filter) => {\n    const filteredQuery = addFilterToQuery(query, filter);\n    router.navigate(getRouteForQuery(filteredQuery, router.location, true), { replace: true });\n};\nexport const handleFilterRemoved = (query, router, filter) => {\n    const filteredQuery = removeFilterFromQuery(query, filter);\n    router.navigate(getRouteForQuery(filteredQuery, router.location, true), { replace: true });\n};\nexport const handlePerPageSelect = (query, router, perPage) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    newQuery.filter = Object.assign(Object.assign({}, query.filter), { limit: perPage });\n    const filteredQuery = getRouteForQuery(newQuery, router.location, true);\n    router.navigate(filteredQuery, { replace: true });\n};\nexport const handleSetPage = (query, router, report, pageNumber) => {\n    const limit = report && report.meta && report.meta.filter && report.meta.filter.limit ? report.meta.filter.limit : 10;\n    const offset = pageNumber * limit - limit;\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    newQuery.filter = Object.assign(Object.assign({}, query.filter), { offset });\n    const filteredQuery = getRouteForQuery(newQuery, router.location);\n    router.navigate(filteredQuery, { replace: true });\n};\nexport const handleSort = (query, router, sortType, isSortAscending, date = undefined) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    newQuery.order_by = {};\n    newQuery.order_by[sortType] = isSortAscending ? 'asc' : 'desc';\n    if (date) {\n        newQuery.order_by.date = date;\n    }\n    const filteredQuery = getRouteForQuery(newQuery, router.location);\n    router.navigate(filteredQuery, { replace: true });\n};\n","// eslint-disable-next-line no-shadow\nvar DataType;\n(function (DataType) {\n    DataType[\"currentMonthData\"] = \"current_month_data\";\n    DataType[\"hasData\"] = \"has_data\";\n    DataType[\"previousMonthData\"] = \"previous_month_data\";\n})(DataType || (DataType = {}));\n// Returns the OCP provider matching the given infrastructure uuid\nconst _getOcpProvider = (ocpProviders, uuid) => {\n    let result;\n    if (ocpProviders && ocpProviders.data) {\n        for (const provider of ocpProviders.data) {\n            if (provider.infrastructure && provider.infrastructure.uuid === uuid) {\n                result = provider;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Returns new Provider matching the given provider type\n//\n// See https://issues.redhat.com/browse/COST-2202\nexport const filterProviders = (providers, sourceType) => {\n    if (!providers) {\n        return providers;\n    }\n    const data = providers.data.filter(provider => provider.source_type.toLowerCase() === sourceType);\n    const meta = Object.assign(Object.assign({}, providers.meta), { count: data.length });\n    return Object.assign(Object.assign({}, providers), { meta,\n        data });\n};\n// Ensure at least one source provider has data available\nconst _hasData = (providers, datumType) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            if (provider[datumType]) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one cloud source provider has data available\nconst _hasCloudData = (providers, ocpProviders, dataType) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            const ocpProvider = _getOcpProvider(ocpProviders, provider.uuid);\n            // Ensure AWS provider is filtered by OpenShift and has OCP data\n            if (ocpProvider && ocpProvider[dataType]) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one cloud source provider\nconst _hasCloudProvider = (providers, ocpProviders) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            const ocpProvider = _getOcpProvider(ocpProviders, provider.uuid);\n            // Ensure AWS provider is filtered by OpenShift\n            if (ocpProvider) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one cloud source provider has data available for the current month (e.g., \"AWS filtered by OpenShift\")\nexport const hasCloudCurrentMonthData = (providers, ocpProviders) => {\n    return _hasCloudData(providers, ocpProviders, DataType.currentMonthData);\n};\n// Ensure at least one cloud source provider has data available (e.g., \"AWS filtered by OpenShift\")\nexport const hasCloudData = (providers, ocpProviders) => {\n    return _hasCloudData(providers, ocpProviders, DataType.hasData);\n};\n// Ensure at least one cloud source provider has data available for the previous month (e.g., \"AWS filtered by OpenShift\")\nexport const hasCloudPreviousMonthData = (providers, ocpProviders) => {\n    return _hasCloudData(providers, ocpProviders, DataType.previousMonthData);\n};\n// Ensure at least one cloud source provider (e.g., \"AWS filtered by OpenShift\"), regardless if there is OCP data\nexport const hasCloudProvider = (providers, ocpProviders) => {\n    return _hasCloudProvider(providers, ocpProviders);\n};\n// Ensure at least one source provider has data available for the current month\nexport const hasCurrentMonthData = (providers) => {\n    return _hasData(providers, DataType.currentMonthData);\n};\n// Ensure at least one source provider has data available\nexport const hasData = (providers) => {\n    return _hasData(providers, DataType.hasData);\n};\n// Ensure at least one source provider has data available for the previous month\nexport const hasPreviousMonthData = (providers) => {\n    return _hasData(providers, DataType.previousMonthData);\n};\n","import { getQueryRoute } from 'api/queries/query';\nexport const getRouteForQuery = (query, location, reset = false) => {\n    // Reset pagination\n    if (reset) {\n        if (query.filter && query.filter.offset !== undefined) {\n            query.filter = Object.assign(Object.assign({}, query.filter), { offset: 0 });\n        }\n        if (query.offset !== undefined) {\n            query.offset = 0;\n        }\n    }\n    return `${location.pathname}?${getQueryRoute(query)}`;\n};\n"],"names":["ExternalLinkAltIconConfig","name","height","width","svgPath","yOffset","xOffset","ExternalLinkAltIcon","exports","getProvidersQuery","query","stringify","encode","indices","styles","currencySelector","display","alignItems","currencyLabel","marginBottom","marginRight","whiteSpace","currencyOptions","label","messages","value","CurrencyBase","constructor","super","arguments","this","defaultState","isSelectOpen","state","Object","assign","getSelect","currency","isDisabled","props","selectOptions","getSelectOptions","selection","find","option","Select","className","id","isOpen","onSelect","handleSelect","onToggle","handleToggle","selections","variant","SelectVariant","map","SelectOption","key","intl","options","push","toString","formatMessage","units","event","setState","render","style","Title","headingLevel","size","mapStateToProps","CurrencyConnect","connect","injectIntl","NoDataStateBase","showReload","EmptyState","EmptyStateVariant","EmptyStateIcon","icon","EmptyStateBody","Button","onClick","window","location","reload","NoDataState","title","PageHeader","PageHeaderTitle","PageSection","src","alt","NoOptimizationsStateBase","NoOptimizationsState","iconSpacer","marginLeft","viewSources","marginTop","global_spacer_lg","NoProvidersStateBase","getDocLink","textKey","urlKey","href","rel","target","getRouteToSources","providerType","docUrlKey","descKey","titleKey","component","NoProvidersState","Unavailable","getIdKeyForGroupBy","groupBy","subscription_guid","resource_location","service_name","azureDetails","minHeight","content","paddingBottom","paddingTop","paginationContainer","pagination","backgroundColor","global_BackgroundColor_light_100","global_spacer_md","tableContainer","toolbarContainer","costValue","costLabelUnit","fontSize","global_FontSize_sm","color","global_Color_100","dateTitle","textAlign","header","padding","headerContent","justifyContent","headerContentLeft","headerContentRight","global_spacer_sm","groupByOptions","tagPathsType","DetailsHeaderBase","isExportsFeatureEnabled","onCurrencySelected","onGroupBySelected","providers","providersError","report","showContent","meta","count","hasCost","total","cost","TitleSizes","onSelected","showTags","format","providersQueryString","providersFetchStatus","featureFlags","DetailsHeader","reportPathsType","DetailsTableBase","columns","rows","initDatum","groupByTagKey","isAllSelected","selectedItems","router","computedItems","idKey","orderBy","length","isSortable","item","index","getTotalCost","monthOverMonth","getMonthOverMonthCost","desc","actions","getActions","Link","to","basePath","routes","description","cells","selected","undefined","val","selectionDisabled","reportQueryString","Math","abs","delta_value","percentage","delta_percent","showPercentage","showValue","iconOverride","percentValue","toFixed","componentDidMount","componentDidUpdate","prevProps","currentReport","data","JSON","isLoading","onSort","DetailsTable","tagType","DetailsToolbarBase","getCategoryOptions","tagReport","updateReport","fetchTag","tagQueryString","categoryOptions","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onExportClicked","onFilterAdded","onFilterRemoved","resourcePathsType","showBulkSelect","showExcludes","showExport","showFilter","filter","resolution","time_scope_units","time_scope_value","key_only","limit","tagReportFetchStatus","mapDispatchToProps","DetailsToolbarConnect","DetailsToolbar","baseQuery","offset","exclude","filter_by","group_by","order_by","reportType","AzureDetails","stateProps","dispatchProps","isExportModalOpen","getComputedItems","groupById","getExportModal","items","isAllItems","onClose","handleExportModalClose","getPagination","isBottom","page","trunc","Pagination","isCompact","itemCount","onPerPageSelect","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","PaginationVariant","widgetId","getTable","reportFetchStatus","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","handleExportModalOpen","action","handleGroupBySelected","groupByKey","newQuery","parse","navigate","replace","isSelected","newItems","fetchReport","bind","prevState","reportError","noReport","noLocation","search","queryFromRoute","reportQuery","delta","DetailsActionsBase","isDropdownOpen","handleOnSelect","handleOnToggle","showPriceListOption","source_uuid","redirectToCostModel","DropdownItem","unshift","includes","Dropdown","toggle","KebabToggle","isPlain","position","dropdownItems","costModels","DetailsActionsConnect","costColumn","paddingRight","defaultLabel","minWidth","emptyState","infoArrow","infoArrowDesc","bottom","infoDescription","lastReported","lastReportedColumn","managedColumn","nameColumn","DataTable","getEmptyState","isOptimizations","values","showMargin","getSortBy","direction","getSortParams","sortBy","handleOnSort","columnIndex","rowId","newRows","row","SortByDirection","handleOnRowClick","rowIndex","onRowClick","TableComposable","gridBreakPoint","hasSelectableRowCaption","Thead","Tr","col","Th","modifier","sort","Tbody","Td","colSpan","Bullseye","Spinner","isSelectable","isHoverable","isRowSelected","_event","cellIndex","dataLabel","isActionCell","select","disable","reset","handleCurrencySelected","handleCostTypeSelected","handleCostDistributionSelected","handleFilterAdded","filteredQuery","handleFilterRemoved","handlePerPageSelect","handleSetPage","handleSort","date","DataType","_getOcpProvider","ocpProviders","uuid","result","provider","infrastructure","filterProviders","sourceType","source_type","toLowerCase","_hasData","datumType","_hasCloudData","dataType","ocpProvider","hasCloudCurrentMonthData","currentMonthData","hasCloudData","hasData","hasCloudPreviousMonthData","previousMonthData","hasCloudProvider","_hasCloudProvider","hasCurrentMonthData","hasPreviousMonthData","getRouteForQuery","pathname"],"sourceRoot":""}