{"version":3,"file":"js/ociDetails.49a0ce57d99d61825c8b.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/external-link-alt-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/minus-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_FontSize_xs.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_disabled_color_100.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_3xl.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_xs.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Unavailable/Unavailable.js","webpack:///./src/routes/components/dataTable/dataTable.styles.ts","webpack:///./src/routes/components/dataTable/dataTable.tsx","webpack:///./src/routes/components/dataTable/selectableTable.tsx","webpack:///./src/routes/components/state/emptyValueState/emptyValueState.tsx","webpack:///./src/routes/details/components/actions/actions.tsx","webpack:///./src/routes/utils/computedReport/getComputedOciReportItems.ts","webpack:///./src/routes/details/ociDetails/detailsHeader.styles.ts","webpack:///./src/routes/details/ociDetails/detailsHeader.tsx","webpack:///./src/routes/details/ociDetails/detailsTable.tsx","webpack:///./src/routes/details/ociDetails/detailsToolbar.tsx","webpack:///./src/routes/details/ociDetails/ociDetails.styles.ts","webpack:///./src/routes/details/ociDetails/ociDetails.tsx"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExternalLinkAltIcon = createIcon(ExternalLinkAltIconConfig);\n\nexport default ExternalLinkAltIcon;","import { createIcon } from '../createIcon';\n\nexport const MinusIconConfig = {\n  name: 'MinusIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const MinusIcon = createIcon(MinusIconConfig);\n\nexport default MinusIcon;","\"use strict\";\nexports.__esModule = true;\nexports.global_FontSize_xs = {\n  \"name\": \"--pf-global--FontSize--xs\",\n  \"value\": \"0.75rem\",\n  \"var\": \"var(--pf-global--FontSize--xs)\"\n};\nexports[\"default\"] = exports.global_FontSize_xs;","\"use strict\";\nexports.__esModule = true;\nexports.global_disabled_color_100 = {\n  \"name\": \"--pf-global--disabled-color--100\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--disabled-color--100)\"\n};\nexports[\"default\"] = exports.global_disabled_color_100;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_3xl = {\n  \"name\": \"--pf-global--spacer--3xl\",\n  \"value\": \"4rem\",\n  \"var\": \"var(--pf-global--spacer--3xl)\"\n};\nexports[\"default\"] = exports.global_spacer_3xl;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_xs = {\n  \"name\": \"--pf-global--spacer--xs\",\n  \"value\": \"0.25rem\",\n  \"var\": \"var(--pf-global--spacer--xs)\"\n};\nexports[\"default\"] = exports.global_spacer_xs;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport '../Unavailable/Unavailable.css';\nvar Unavailable = function () {\n    return (_jsxs(EmptyState, __assign({ variant: EmptyStateVariant.large, className: \"ins-c-empty-state__unavailable pf-m-redhat-font\" }, { children: [_jsx(EmptyStateIcon, { icon: ExclamationCircleIcon }), _jsx(Title, __assign({ headingLevel: \"h5\", size: \"lg\" }, { children: \"This page is temporarily unavailable\" })), _jsxs(EmptyStateBody, { children: [\"Try refreshing the page. If the problem persists, contact your organization administrator or visit our\", _jsxs(\"a\", __assign({ href: \"https://status.redhat.com/\", target: \"_blank\", rel: \"noopener noreferrer\" }, { children: [' ', \"status page\"] })), ' ', \"for known outages.\"] })] })));\n};\nexport default Unavailable;\n//# sourceMappingURL=Unavailable.js.map","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    costColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingRight: 0,\n    },\n    defaultLabel: {\n        minWidth: '50px',\n    },\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    lastItem: {\n        textAlign: 'right',\n        paddingRight: '3.8rem',\n    },\n    lastItemColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    managedColumn: {\n        textAlign: 'right',\n    },\n    nameColumn: {\n        width: '1%',\n    },\n    warningIcon: {\n        paddingLeft: global_spacer_sm.var,\n    },\n};\n","import './dataTable.scss';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, TableVariant, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass DataTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { filterBy, intl } = this.props;\n            if (filterBy) {\n                for (const val of Object.values(filterBy)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, orderBy } = this.props;\n            const direction = orderBy && orderBy[columns[index].orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected, rows } = this.props;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isActionsCell = false, isLoading, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.dataTableAriaLabel), className: \"tableOverride\", gridBreakPoint: \"grid-2xl\", variant: TableVariant.compact },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${cellIndex}-${rowIndex}`, modifier: \"nowrap\", select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    }, style: item.style })) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", isActionCell: isActionsCell && cellIndex === row.cells.length - 1, style: item.style }, item.value))))))))),\n            rows.length === 0 && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(DataTable));\n","import { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, TableVariant, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass SelectableTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { emptyState, filterBy, intl } = this.props;\n            if (filterBy) {\n                for (const val of Object.values(filterBy)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            // Return custom empty state\n            if (emptyState) {\n                return emptyState;\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, orderBy } = this.props;\n            const direction = orderBy && orderBy[columns[index].orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnRowClick = (event, rowIndex) => {\n            const { onRowClick, rows } = this.props;\n            rows.map(row => (row.selected = false));\n            rows[rowIndex].selected = true;\n            this.setState({ rows }, () => {\n                if (onRowClick) {\n                    onRowClick(event, rowIndex);\n                }\n            });\n        };\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isLoading, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.selectableTableAriaLabel), gridBreakPoint: \"grid-2xl\", hasSelectableRowCaption: true, variant: TableVariant.compact },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { \"aria-label\": intl.formatMessage(messages.selectableTableRowAriaLabel), isSelectable: true, isHoverable: true, isRowSelected: row.selected, onRowClick: _event => this.handleOnRowClick(_event, rowIndex), key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 ? (React.createElement(Th, { \"aria-label\": intl.formatMessage(messages.selectableTableHeaderAriaLabel), dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", style: item.style }, item.value)) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", style: item.style }, item.value))))))))),\n            rows.length === 0 && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(SelectableTable));\n","import './emptyValueState.scss';\nimport { MinusIcon } from '@patternfly/react-icons/dist/esm/icons/minus-icon';\nimport React from 'react';\nconst EmptyValueState = () => {\n    return (React.createElement(\"span\", { className: \"emptyValueContainer\" },\n        React.createElement(MinusIcon, null)));\n};\nexport default EmptyValueState;\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ExportModal } from 'routes/components/export';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nimport { tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, reportPathsType, reportQueryString } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { count: 1, groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, intl, item: { source_uuid }, redirectToCostModel, router, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, intl.formatMessage(messages.detailsActionsExport)),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], router) }, intl.formatMessage(messages.detailsActionsPriceList)));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = injectIntl(withRouter(DetailsActionsConnect));\nexport default Actions;\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.payer_tenant_id) {\n        return 'payer_tenant_id';\n    }\n    if (groupBy.region) {\n        return 'region';\n    }\n    if (groupBy.product_service) {\n        return 'product_service';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costValue: {\n        marginTop: global_spacer_lg.var,\n        marginBottom: 0,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    dateTitle: {\n        textAlign: 'end',\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentLeft: {\n        display: 'flex',\n        minHeight: '90px',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { TagPathsType } from 'api/tags/tag';\nimport { ExportsLink } from 'components/drawers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Currency } from 'routes/components/currency';\nimport { GroupBy } from 'routes/components/groupBy';\nimport { getIdKeyForGroupBy } from 'routes/utils/computedReport/getComputedOciReportItems';\nimport { filterProviders } from 'routes/utils/providers';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { getSinceDateRangeString } from 'utils/dates';\nimport { formatCurrency } from 'utils/format';\nimport { styles } from './detailsHeader.styles';\nconst groupByOptions = [\n    { label: 'payer_tenant_id', value: 'payer_tenant_id' },\n    { label: 'product_service', value: 'product_service' },\n    { label: 'region', value: 'region' },\n];\nconst tagPathsType = TagPathsType.oci;\nclass DetailsHeaderBase extends React.Component {\n    render() {\n        const { currency, groupBy, isExportsFeatureEnabled, onCurrencySelected, onGroupBySelected, providers, providersError, report, intl, } = this.props;\n        const showContent = report && !providersError && providers && providers.meta && providers.meta.count > 0;\n        const hasCost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.ociDetailsTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(\"div\", { style: styles.headerContentLeft },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: !showContent, onSelected: onGroupBySelected, options: groupByOptions, showTags: true, tagPathsType: tagPathsType })),\n                showContent && (React.createElement(\"div\", null,\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: TitleSizes['4xl'] }, formatCurrency(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD')),\n                    React.createElement(\"div\", { style: styles.dateTitle }, getSinceDateRangeString()))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        providers: filterProviders(providers, ProviderType.oci),\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n    };\n});\nconst DetailsHeader = injectIntl(connect(mapStateToProps, {})(DetailsHeaderBase));\nexport { DetailsHeader };\n","import 'routes/components/dataTable/dataTable.scss';\nimport { ReportPathsType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { DataTable } from 'routes/components/dataTable';\nimport { styles } from 'routes/components/dataTable/dataTable.styles';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { Actions } from 'routes/details/components/actions';\nimport { getUnsortedComputedReportItems } from 'routes/utils/computedReport/getComputedReportItems';\nimport { getBreakdownPath } from 'routes/utils/paths';\nimport { getForDateRangeString, getNoDataForDateRangeString } from 'utils/dates';\nimport { formatCurrency, formatPercentage } from 'utils/format';\nimport { formatPath } from 'utils/paths';\nimport { noPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nconst reportPathsType = ReportPathsType.oci;\nclass DetailsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { groupBy, groupByTagKey, intl, isAllSelected, report, router, selectedItems } = this.props;\n            if (!report) {\n                return;\n            }\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: (groupByTagKey ? groupByTagKey : groupBy),\n            });\n            const columns = groupByTagKey\n                ? [\n                    {\n                        name: '',\n                    },\n                    {\n                        name: intl.formatMessage(messages.tagNames),\n                    },\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign({ orderBy: groupBy, name: intl.formatMessage(messages.detailsResourceNames, { value: groupBy }) }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ];\n            computedItems.map((item, index) => {\n                const cost = this.getTotalCost(item, index);\n                const label = item && item.label !== null ? item.label : '';\n                const monthOverMonth = this.getMonthOverMonthCost(item, index);\n                const isDisabled = label === `${noPrefix}${groupBy}` || label === `${noPrefix}${groupByTagKey}`;\n                const desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                const actions = this.getActions(item, isDisabled);\n                const name = isDisabled ? label : (React.createElement(Link, { to: getBreakdownPath({\n                        basePath: formatPath(routes.ociDetailsBreakdown.path),\n                        description: item.id,\n                        groupBy,\n                        id: item.id,\n                        router,\n                        title: label.toString(),\n                    }) }, label));\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: (React.createElement(\"div\", null,\n                                name,\n                                desc)),\n                        },\n                        { value: monthOverMonth },\n                        { value: cost, style: styles.managedColumn },\n                        { value: actions },\n                    ],\n                    isOpen: false,\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                    selectionDisabled: isDisabled,\n                });\n            });\n            this.setState({\n                columns,\n                rows,\n            });\n        };\n        this.getActions = (item, isDisabled) => {\n            const { groupBy, reportQueryString } = this.props;\n            return (React.createElement(Actions, { groupBy: groupBy, isDisabled: isDisabled, item: item, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getMonthOverMonthCost = (item, index) => {\n            const { intl } = this.props;\n            const value = formatCurrency(Math.abs(item.cost.total.value - item.delta_value), item.cost.total.units);\n            const percentage = item.delta_percent !== null ? formatPercentage(Math.abs(item.delta_percent)) : 0;\n            const showPercentage = !(percentage === 0 || percentage === '0.00');\n            const showValue = item.delta_percent !== null; // Workaround for https://github.com/project-koku/koku/issues/1395\n            let iconOverride;\n            if (showPercentage) {\n                iconOverride = 'iconOverride';\n                if (item.delta_percent !== null && item.delta_value < 0) {\n                    iconOverride += ' decrease';\n                }\n                if (item.delta_percent !== null && item.delta_value > 0) {\n                    iconOverride += ' increase';\n                }\n            }\n            if (!showValue) {\n                return getNoDataForDateRangeString();\n            }\n            else {\n                return (React.createElement(\"div\", { className: \"monthOverMonthOverride\" },\n                    React.createElement(\"div\", { className: iconOverride, key: `month-over-month-cost-${index}` },\n                        showPercentage ? intl.formatMessage(messages.percent, { value: percentage }) : React.createElement(EmptyValueState, null),\n                        showPercentage && item.delta_percent !== null && item.delta_value > 0 && (React.createElement(\"span\", { className: \"fa fa-sort-up\", style: styles.infoArrow, key: `month-over-month-icon-${index}` })),\n                        showPercentage && item.delta_percent !== null && item.delta_value < 0 && (React.createElement(\"span\", { className: \"fa fa-sort-down\", style: Object.assign(Object.assign({}, styles.infoArrow), styles.infoArrowDesc), key: `month-over-month-icon-${index}` }))),\n                    React.createElement(\"div\", { style: styles.infoDescription, key: `month-over-month-info-${index}` }, getForDateRangeString(value))));\n            }\n        };\n        this.getTotalCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.cost.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.cost.total.value, item.cost.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport || prevProps.selectedItems !== selectedItems) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { filterBy, isLoading, onSelected, onSort, orderBy, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, filterBy: filterBy, isActionsCell: true, isLoading: isLoading, onSelected: onSelected, onSort: onSort, orderBy: orderBy, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst DetailsTable = injectIntl(withRouter(DetailsTableBase));\nexport { DetailsTable };\n","import { getQuery } from 'api/queries/ociQuery';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType, TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/components/dataToolbar';\nimport { isEqual } from 'routes/utils/equal';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { tagKey } from 'utils/props';\nconst tagType = TagType.tag;\nconst tagPathsType = TagPathsType.oci;\nexport class DetailsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { intl, tagReport } = this.props;\n            const options = [\n                {\n                    name: intl.formatMessage(messages.filterByValues, { value: 'payer_tenant_id' }),\n                    key: 'payer_tenant_id',\n                },\n                {\n                    name: intl.formatMessage(messages.filterByValues, { value: 'product_service' }),\n                    key: 'product_service',\n                },\n                {\n                    name: intl.formatMessage(messages.filterByValues, { value: 'region' }),\n                    key: 'region',\n                },\n            ];\n            if (tagReport && tagReport.data && tagReport.data.length) {\n                options.push({ name: intl.formatMessage(messages.filterByValues, { value: tagKey }), key: tagKey });\n            }\n            return options;\n        };\n        this.updateReport = () => {\n            const { fetchTag, tagQueryString } = this.props;\n            fetchTag(tagPathsType, tagType, tagQueryString);\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        }, () => {\n            this.updateReport();\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { query, tagReport } = this.props;\n        if (!isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            }, () => {\n                this.updateReport();\n            });\n        }\n        else if (query && !isEqual(query, prevProps.query)) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { groupBy, isAllSelected, isDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onExportClicked, onFilterAdded, onFilterRemoved, pagination, query, selectedItems, tagReport, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, groupBy: groupBy, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onExportClicked: onExportClicked, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.oci, selectedItems: selectedItems, showBulkSelect: true, showExcludes: true, showExport: true, showFilter: true, tagReport: tagReport, tagPathsType: tagPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        key_only: true,\n        limit: 1000,\n    });\n    const tagReport = tagSelectors.selectTag(state, tagPathsType, tagType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagPathsType, tagType, tagQueryString);\n    return {\n        tagReportFetchStatus,\n        tagReport,\n        tagQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst DetailsToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsToolbarBase);\nconst DetailsToolbar = injectIntl(DetailsToolbarConnect);\nexport { DetailsToolbar };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    ociDetails: {\n        minHeight: '100%',\n    },\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    toolbarContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getQuery, parseQuery } from 'api/queries/ociQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ExportModal } from 'routes/components/export';\nimport { Loading } from 'routes/components/page/loading';\nimport { NoData } from 'routes/components/page/noData';\nimport { NoProviders } from 'routes/components/page/noProviders';\nimport { NotAvailable } from 'routes/components/page/notAvailable';\nimport { getIdKeyForGroupBy } from 'routes/utils/computedReport/getComputedOciReportItems';\nimport { getUnsortedComputedReportItems } from 'routes/utils/computedReport/getComputedReportItems';\nimport { getGroupByTagKey } from 'routes/utils/groupBy';\nimport { filterProviders, hasCurrentMonthData } from 'routes/utils/providers';\nimport { getRouteForQuery } from 'routes/utils/query';\nimport { handleOnCurrencySelected, handleOnFilterAdded, handleOnFilterRemoved, handleOnPerPageSelect, handleOnSetPage, handleOnSort, } from 'routes/utils/queryNavigate';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nimport { noPrefix, tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { DetailsHeader } from './detailsHeader';\nimport { DetailsTable } from './detailsTable';\nimport { DetailsToolbar } from './detailsToolbar';\nimport { styles } from './ociDetails.styles';\nconst baseQuery = {\n    filter: {\n        limit: 10,\n        offset: 0,\n    },\n    exclude: {},\n    filter_by: {},\n    group_by: {\n        payer_tenant_id: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst reportType = ReportType.cost;\nconst reportPathsType = ReportPathsType.oci;\nclass OciDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            isAllSelected: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey || groupById,\n            });\n        };\n        this.getExportModal = (computedItems) => {\n            const { query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `${noPrefix}${groupById}` || item.label === `${noPrefix}${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, report, router } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = Math.trunc(offset / limit + 1);\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handleOnPerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleOnSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.oci),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { query, report, reportFetchStatus, reportQueryString, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return (React.createElement(DetailsTable, { filterBy: query.filter_by, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, groupByTagKey: groupByTagKey, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending) => handleOnSort(query, router, sortType, isSortAscending), orderBy: query.order_by, report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, router, report } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(DetailsToolbar, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: computedItems.length === 0 || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onExportClicked: this.handleExportModalOpen, onFilterAdded: filter => handleOnFilterAdded(query, router, filter), onFilterRemoved: filter => handleOnFilterRemoved(query, router, filter), pagination: this.getPagination(isDisabled), query: query, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            const groupByKey = groupBy;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: '*',\n                }, order_by: undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.updateReport = () => {\n            const { fetchReport, reportQueryString } = this.props;\n            fetchReport(reportPathsType, reportType, reportQueryString);\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { currency, intl, providers, providersFetchStatus, query, report, reportError, reportFetchStatus, router, } = this.props;\n        const computedItems = this.getComputedItems();\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const isDisabled = computedItems.length === 0;\n        const title = intl.formatMessage(messages.ociDetailsTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.inProgress) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.complete) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: ProviderType.oci, title: title });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.ociDetails },\n            React.createElement(DetailsHeader, { currency: currency, groupBy: groupById, onCurrencySelected: () => handleOnCurrencySelected(query, router), onGroupBySelected: this.handleGroupBySelected, report: report }),\n            React.createElement(\"div\", { style: styles.content },\n                React.createElement(\"div\", { style: styles.toolbarContainer }, this.getToolbar(computedItems)),\n                this.getExportModal(computedItems),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const currency = getCurrency();\n    const query = Object.assign(Object.assign({}, baseQuery), queryFromRoute);\n    const reportQuery = {\n        currency,\n        delta: 'cost',\n        exclude: query.exclude,\n        filter: Object.assign(Object.assign({}, query.filter), { resolution: 'monthly', time_scope_units: 'month', time_scope_value: -1 }),\n        filter_by: query.filter_by,\n        group_by: query.group_by,\n        order_by: query.order_by,\n    };\n    const reportQueryString = getQuery(reportQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        currency,\n        providers: filterProviders(providers, ProviderType.oci),\n        providersError,\n        providersFetchStatus,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(OciDetails)));\n"],"names":["ExternalLinkAltIconConfig","name","height","width","svgPath","yOffset","xOffset","ExternalLinkAltIcon","MinusIconConfig","MinusIcon","exports","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","EmptyState","variant","EmptyStateVariant","large","className","children","EmptyStateIcon","icon","ExclamationCircleIcon","Title","headingLevel","size","EmptyStateBody","href","target","rel","styles","costColumn","textAlign","display","justifyContent","paddingRight","defaultLabel","minWidth","emptyState","backgroundColor","value","paddingTop","infoArrow","position","infoArrowDesc","bottom","infoDescription","color","fontSize","lastItem","lastItemColumn","managedColumn","nameColumn","warningIcon","paddingLeft","var","DataTable","constructor","props","super","getEmptyState","filterBy","intl","val","values","filter","showMargin","formatMessage","messages","detailsEmptyState","getSortBy","index","columns","orderBy","direction","getSortParams","sortBy","onSort","handleOnSort","columnIndex","handleOnSelect","event","isSelected","rowId","onSelected","rows","newRows","items","map","row","selected","item","setState","SortByDirection","asc","bind","render","isActionsCell","isLoading","TableComposable","dataTableAriaLabel","gridBreakPoint","TableVariant","compact","Thead","Tr","col","Th","key","modifier","sort","isSortable","undefined","style","Tbody","Td","colSpan","Bullseye","Spinner","rowIndex","cells","cellIndex","dataLabel","select","disable","selectionDisabled","onSelect","_event","isActionCell","injectIntl","SelectableTable","handleOnRowClick","onRowClick","selectableTableAriaLabel","hasSelectableRowCaption","selectableTableRowAriaLabel","isSelectable","isHoverable","isRowSelected","selectableTableHeaderAriaLabel","DetailsActionsBase","stateProps","dispatchProps","defaultState","isDropdownOpen","isExportModalOpen","state","getExportModal","groupBy","reportPathsType","reportQueryString","count","isOpen","onClose","handleExportModalClose","handleExportModalOpen","handleOnToggle","isDisabled","showPriceListOption","source_uuid","redirectToCostModel","router","DropdownItem","component","onClick","detailsActionsExport","unshift","includes","detailsActionsPriceList","Dropdown","toggle","KebabToggle","onToggle","isPlain","dropdownItems","mapStateToProps","mapDispatchToProps","costModels","DetailsActionsConnect","connect","getIdKeyForGroupBy","payer_tenant_id","region","product_service","costValue","marginTop","global_spacer_lg","marginBottom","costLabelUnit","global_FontSize_sm","global_Color_100","dateTitle","header","global_BackgroundColor_light_100","padding","headerContent","headerContentLeft","minHeight","headerContentRight","title","paddingBottom","global_spacer_sm","groupByOptions","label","tagPathsType","oci","DetailsHeaderBase","currency","isExportsFeatureEnabled","onCurrencySelected","onGroupBySelected","providers","providersError","report","showContent","meta","hasCost","total","cost","TitleSizes","ociDetailsTitle","options","showTags","format","units","providersQueryString","all","providersFetchStatus","featureFlags","DetailsHeader","DetailsTableBase","initDatum","groupByTagKey","isAllSelected","selectedItems","computedItems","idKey","tagNames","monthOverMonthChange","detailsResourceNames","getTotalCost","monthOverMonth","getMonthOverMonthCost","desc","id","actions","getActions","Link","to","basePath","routes","ociDetailsBreakdown","path","description","toString","push","find","Math","abs","delta_value","percentage","delta_percent","showPercentage","showValue","iconOverride","percent","percentValue","toFixed","percentOfCost","componentDidMount","componentDidUpdate","prevProps","currentReport","data","JSON","stringify","DetailsTable","tagType","tag","DetailsToolbarBase","getCategoryOptions","tagReport","filterByValues","updateReport","fetchTag","tagQueryString","categoryOptions","query","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onExportClicked","onFilterAdded","onFilterRemoved","pagination","resourcePathsType","showBulkSelect","showExcludes","showExport","showFilter","resolution","time_scope_units","time_scope_value","key_only","limit","tagReportFetchStatus","DetailsToolbarConnect","DetailsToolbar","ociDetails","content","paginationContainer","marginLeft","marginRight","global_spacer_md","tableContainer","toolbarContainer","baseQuery","offset","exclude","filter_by","group_by","order_by","reportType","OciDetails","getComputedItems","groupById","isAllItems","getPagination","isBottom","page","trunc","Pagination","isCompact","itemCount","onPerPageSelect","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","PaginationVariant","top","widgetId","getTable","reportFetchStatus","inProgress","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","action","handleGroupBySelected","groupByKey","newQuery","parse","navigate","location","replace","newItems","fetchReport","prevState","reportError","noReport","noLocation","search","complete","providerType","queryFromRoute","reportQuery","delta"],"sourceRoot":""}