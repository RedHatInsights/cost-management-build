{"version":3,"file":"js/rhelDetails.1670519695992.c11cad43a72e4f6cd41c.js","mappings":"sJAEO,MAAMA,EAA4B,CACvCC,KAAM,sBACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,0VACTC,QAAS,EACTC,QAAS,GAGEC,GAAsB,QAAWP,GAE9C,G,qECXO,MAAMQ,EAAkB,CAC7BP,KAAM,YACNC,OAAQ,IACRC,MAAO,IACPC,QAAS,uHACTC,QAAS,EACTC,QAAS,GAGEG,GAAY,QAAWD,GAEpC,G,gBCXAE,EAAQ,GAAqB,CAC3B,KAAQ,4BACR,MAAS,OACT,IAAO,kCAETA,EAAA,GAAqBA,EAAQ,E,gBCL7BA,EAAQ,GAAmB,CACzB,KAAQ,0BACR,MAAS,UACT,IAAO,gCAETA,EAAA,GAAqBA,EAAQ,E,sECJ7B,MAIA,EAJwB,IACZ,kBAAoB,OAAQ,CAAEC,UAAW,uBAC7C,kBAAoB,KAAW,M,4JCKvC,MAAMC,UAA2B,cAC7BC,YAAYC,EAAYC,GACpBC,MAAMF,EAAYC,GAClBE,KAAKC,aAAe,CAChBC,gBAAgB,EAChBC,mBAAmB,GAEvBH,KAAKI,MAAQC,OAAOC,OAAO,CAAC,EAAGN,KAAKC,cACpCD,KAAKO,eAAiB,KAClB,MAAM,QAAEC,EAAO,KAAEC,EAAI,gBAAEC,EAAe,kBAAEC,GAAsBX,KAAKY,OAC7D,kBAAET,GAAsBH,KAAKI,MACnC,OAAQ,kBAAoB,IAAa,CAAES,MAAO,EAAGL,QAASA,EAASM,OAAQX,EAAmBY,MAAO,CAACN,GAAOO,QAAShB,KAAKiB,uBAAwBP,gBAAiBA,EAAiBC,kBAAmBA,GAAqB,EAErOX,KAAKiB,uBAA0BH,IAC3Bd,KAAKkB,SAAS,CAAEf,kBAAmBW,GAAS,EAEhDd,KAAKmB,sBAAwB,KACzBnB,KAAKkB,SAAS,CAAEf,mBAAmB,GAAO,EAE9CH,KAAKoB,eAAiB,KAClB,MAAM,eAAElB,GAAmBF,KAAKI,MAChCJ,KAAKkB,SAAS,CACVhB,gBAAiBA,GACnB,EAENF,KAAKqB,eAAkBnB,IACnBF,KAAKkB,SAAS,CAAEhB,kBAAiB,EAErCF,KAAKiB,uBAAyBjB,KAAKiB,uBAAuBK,KAAKtB,MAC/DA,KAAKmB,sBAAwBnB,KAAKmB,sBAAsBG,KAAKtB,MAC7DA,KAAKqB,eAAiBrB,KAAKqB,eAAeC,KAAKtB,MAC/CA,KAAKoB,eAAiBpB,KAAKoB,eAAeE,KAAKtB,KACnD,CACAuB,SACI,MAAM,QAAEf,EAAO,WAAEgB,EAAU,oBAAEC,EAAmB,KAAEC,EAAMjB,MAAM,YAAEkB,GAAa,oBAAEC,EAAmB,OAAEC,GAAY7B,KAAKY,MAE/GG,EAAQ,CACV,kBAAoB,EAAAe,aAAc,CAAEC,UAAW,SAAUP,WAAYA,EAAYQ,IAAK,gBAAiBC,QAASjC,KAAKmB,uBAAyBO,EAAKQ,cAAcC,EAAA,0BAKrK,OAHIV,GACAV,EAAMqB,QAAQ,kBAAoB,EAAAN,aAAc,CAAEC,UAAW,SAAUC,IAAK,oBAAqBR,WAAYA,GAAchB,EAAQ6B,SAAS,MAAqC,IAAvBV,EAAYW,OAAcL,QAAS,IAAML,EAAoBD,EAAY,GAAIE,IAAWH,EAAKQ,cAAcC,EAAA,6BAEjQ,kBAAoB,aAAgB,KACxC,kBAAoB,EAAAI,SAAU,CAAEC,SAAUxC,KAAKoB,eAAgBqB,OAAQ,kBAAoB,EAAAC,YAAa,CAAEC,SAAU3C,KAAKqB,iBAAmBP,OAAQd,KAAKI,MAAMF,eAAgB0C,SAAS,EAAMC,SAAU,QAASC,cAAe/B,IAChOf,KAAKO,iBACb,EAGJ,MAAMwC,GAAkB,SAAsB,CAAC3C,EAAOQ,KAC3C,CAAC,KAENoC,EAAqB,CACvBpB,oBAAqBqB,EAAA,sCAEnBC,GAAwB,IAAAC,SAAQJ,EAAiBC,EAAzB,CAA6CrD,GAE3E,GADgB,EAAAyD,EAAA,KAAW,OAAWF,G,yHC3D/B,MAAMG,EAAqBC,IAC9B,MAAMC,EAAgB,IAAIC,IAM1B,OALAF,EAAQG,KAAIC,IACJA,EAAOC,QACPJ,EAAcK,IAAIF,EAAOG,MAC7B,IAEGN,CAAa,EAEjB,MAAMO,UAAkC,cAC3ClE,YAAYC,EAAYC,GACpBC,MAAMF,EAAYC,GAClBE,KAAKC,aAAe,CAChBsD,cAAeF,EAAkBrD,KAAKY,MAAM0C,UAEhDtD,KAAKI,MAAQC,OAAOC,OAAO,CAAC,EAAGN,KAAKC,cACpCD,KAAK+D,UAAaF,IACd,MAAM,cAAEN,GAAkBvD,KAAKI,MACzB4D,EAAS,IAAIR,IAAID,GAIvB,OAHKS,EAAOC,OAAOJ,IACfG,EAAOJ,IAAIC,GAERG,CAAM,EAEjBhE,KAAKkE,SAAYL,IACb,MAAM,cAAEN,GAAkBvD,KAAKI,MAC/B,OAAOmD,EAAcY,IAAIN,EAAM,EAEnC7D,KAAKoE,aAAe,CAACC,EAASC,KAC1B,MAAMf,EAAgBvD,KAAK+D,UAAUO,EAAMC,OAAOC,IAClDxE,KAAKkB,SAAS,CAAEqC,iBAAgB,EAEpCvD,KAAKyE,YAAc,KAEfzE,KAAKkB,SAASb,OAAOC,OAAO,CAAC,EAAGN,KAAKC,eAAe,KAChDD,KAAKY,MAAMI,SAAQ,EAAM,GAC3B,EAENhB,KAAK0E,WAAa,KACd,MAAM,cAAEnB,GAAkBvD,KAAKI,MAC/BJ,KAAKY,MAAM+D,OAAOpB,GAClBvD,KAAKyE,aAAa,EAEtBzE,KAAK4E,UAAY,KACb5E,KAAKkB,SAAS,CAAEqC,cAAe,IAAIC,KAAQ,CAEnD,CACAqB,mBAAmBC,GACf,MAAM,QAAExB,GAAYtD,KAAKY,MACzB,GAAIkE,EAAUxB,UAAYA,EAAS,CAC/B,MAAMC,EAAgBF,EAAkBC,GACxCtD,KAAKkB,SAAS,CAAEqC,iBACpB,CACJ,CACAhC,SACI,MAAM,QAAE+B,EAAO,KAAE5B,GAAS1B,KAAKY,MAC/B,OAAQ,kBAAoB,EAAAmE,MAAO,CAAEC,YAAa,kBAAoB,EAAAC,YAAa,KAC3E,kBAAoB,EAAAC,KAAM,CAAEnD,UAAW,EAAAoD,aAAA,GAAkBzD,EAAKQ,cAAcC,EAAA,sBAC5E,kBAAoB,EAAAiD,OAAQ,CAAEC,UAAU,EAAMpD,QAASjC,KAAK4E,UAAWU,QAAS,QAAU5D,EAAKQ,cAAcC,EAAA,eAEjHrB,OAAQd,KAAKY,MAAME,OAAQE,QAAShB,KAAKyE,YAAac,MAAO7D,EAAKQ,cAAcC,EAAA,sBAA8BmD,QAAS,EAAAE,aAAA,OAAqBC,QAAS,CACjJ,kBAAoB,EAAAL,OAAQ,CAAEpD,IAAK,OAAQC,QAASjC,KAAK0E,WAAYY,QAAS,EAAAI,cAAA,MAAsBhE,EAAKQ,cAAcC,EAAA,SACvH,kBAAoB,EAAAiD,OAAQ,CAAEpD,IAAK,SAAUC,QAASjC,KAAKyE,YAAaa,QAAS,EAAAI,cAAA,MAAsBhE,EAAKQ,cAAcC,EAAA,aAE9H,kBAAoB,EAAAwD,SAAU,CAAE,aAAcjE,EAAKQ,cAAcC,EAAA,0BAAkCqC,GAAI,0BAA2BoB,WAAW,GAAQtC,EAAQG,KAAIC,GAAW,kBAAoB,EAAAmC,aAAc,CAAE,kBAAmBnC,EAAOG,MAAO7B,IAAK0B,EAAOG,OACzP,kBAAoB,EAAAiC,gBAAiB,KACjC,kBAAoB,EAAAC,cAAe,CAAE,kBAAmB,GAAGrC,EAAOG,aAAcmC,WAAYhG,KAAKkE,SAASR,EAAOG,OAAQ7E,KAAM0E,EAAOG,MAAOW,GAAId,EAAOG,MAAOoC,SAAUjG,KAAKoE,eAC9K,kBAAoB,EAAA8B,kBAAmB,CAAEC,cAAe,CAChD,kBAAoB,EAAAC,aAAc,CAAE5B,GAAI,GAAGd,EAAOG,aAAc7B,IAAK,iCACjE,kBAAoB,OAAQ,KAAMN,EAAKQ,cAAcwB,EAAO2C,SAChE,kBAAoB,EAAAD,aAAc,CAAEpE,IAAK,iCAAmC0B,EAAOsB,aAAe,kBAAoB,OAAQ,KAAMtD,EAAKQ,cAAcwB,EAAOsB,uBAEtL,EAEJ,MAAMjC,GAAkB,SAAsB,KACnC,CAAC,KAKNuD,GAA+B,IAAAnD,SAAQJ,EAHlB,CAE3B,EACqC,CAA6Ce,GAElF,GAD8B,EAAAV,EAAA,IAAWkD,E,8FClFlC,MAAMC,EAAS,CAClBC,WAAY,CACRC,UAAW,SAEfC,aAAc,CACVC,SAAU,QAEdC,WAAY,CACRC,gBAAiB,WACjBC,QAAS,OACTC,eAAgB,SAChBC,WAAY,WACZ/H,OAAQ,OACRC,MAAO,QAEX+H,UAAW,CACPpE,SAAU,YAEdqE,cAAe,CACXC,OAAQ,YAEZC,gBAAiB,CACbC,MAAO,WACPC,SAAU,YAEdC,WAAY,CACRrI,MAAO,M,6JCrBf,MAAMsI,UAAkB,cACpB5H,YAAYgB,GACRb,MAAMa,GACNZ,KAAKyH,cAAgB,KACjB,MAAM,KAAE/F,EAAI,OAAEG,GAAW7B,KAAKY,MACxB8G,GAAiB,QAAW7F,EAAO8F,SAASC,QAClD,GAAIF,EAAeG,UACf,IAAK,MAAMC,KAAOzH,OAAO0H,OAAOL,EAAeG,WAC3C,GAAY,MAARC,EACA,OAAO,kBAAoB,IAAkB,CAAEE,OAAQF,EAAKG,YAAY,IAIpF,OAAQ,kBAAoB,EAAAC,WAAY,KACpC,kBAAoB,EAAAC,eAAgB,CAAEC,KAAM,OAC5C,kBAAoB,EAAAC,eAAgB,KAAM3G,EAAKQ,cAAcC,EAAA,sBAA8B,EAEnGnC,KAAKsI,UAAYC,IACb,MAAM,QAAEC,EAAO,OAAE3G,GAAW7B,KAAKY,MAC3B6H,EAAUD,EAAQD,GAAOE,QACzBf,GAAiB,QAAW7F,EAAO8F,SAASC,QAC5Cc,EAAYhB,GAAkBA,EAAeiB,UAAYjB,EAAeiB,SAASF,GACvF,OAAOC,EACD,CACEH,QACAG,aAEF,CAAC,CAAC,EAEZ1I,KAAK4I,cAAiBL,IACX,CACHM,OAAQ7I,KAAKsI,UAAUC,GACvBO,OAAQ9I,KAAK+I,aACbC,YAAaT,IAGrBvI,KAAKoB,eAAiB,CAACkD,EAAO2E,EAAYC,KACtC,MAAM,WAAEC,EAAU,KAAEC,GAASpJ,KAAKY,MAClC,IAAIyI,EACAtI,EAAQ,IACG,IAAXmI,EACAG,EAAUD,EAAK3F,KAAI6F,IACfA,EAAIC,SAAWN,EACRK,MAIXD,EAAU,IAAID,GACdC,EAAQH,GAAOK,SAAWN,EAC1BlI,EAAQ,CAACsI,EAAQH,GAAOzI,OAE5BT,KAAKkB,SAAS,CAAEkI,SAAQ,KAChBD,GACAA,EAAWpI,EAAOkI,EACtB,GACF,EAENjJ,KAAK+I,aAAe,CAACzE,EAAOiE,EAAOG,KAC/B,MAAM,QAAEF,EAAO,OAAEM,GAAW9I,KAAKY,MAC7BkI,GAGAA,EAFgBN,EAAQD,GAAOE,QACPC,IAAc,EAAAc,gBAAA,IAE1C,EAEJxJ,KAAKoB,eAAiBpB,KAAKoB,eAAeE,KAAKtB,MAC/CA,KAAK+I,aAAe/I,KAAK+I,aAAazH,KAAKtB,KAC/C,CACAuB,SACI,MAAM,QAAEiH,EAAO,KAAE9G,EAAI,UAAE+H,EAAS,KAAEL,GAASpJ,KAAKY,MAChD,OAAQ,kBAAoB,aAAgB,KACxC,kBAAoB,EAAA8I,gBAAiB,CAAE,aAAchI,EAAKQ,cAAcC,EAAA,sBAA8BwH,eAAgB,YAClH,kBAAoB,EAAAC,MAAO,KACvB,kBAAoB,EAAAC,GAAI,KAAMrB,EAAQ/E,KAAI,CAACqG,EAAKvB,IAAW,kBAAoB,EAAAwB,GAAI,CAAE/H,IAAK,OAAOuG,KAASuB,EAAIjG,QAASmG,SAAU,SAAUC,KAAMH,EAAII,WAAalK,KAAK4I,cAAcL,QAAS4B,EAAWC,MAAON,EAAIM,OAASN,EAAI9K,UACrO,kBAAoB,EAAAqL,MAAO,KAAMZ,EAAa,kBAAoB,EAAAI,GAAI,KAClE,kBAAoB,EAAAS,GAAI,CAAEC,QAAS,KAC/B,kBAAoB,EAAAC,SAAU,KAC1B,kBAAoB,MAAO,CAAEJ,MAAO,CAAE3D,UAAW,WAC7C,kBAAoB,EAAAgE,QAAS,CAAEC,KAAM,WAAgBtB,EAAK3F,KAAI,CAAC6F,EAAKqB,IAAc,kBAAoB,EAAAd,GAAI,CAAE7H,IAAK,OAAO2I,KAAcrB,EAAIsB,MAAMnH,KAAI,CAAChD,EAAMoK,IAA4B,IAAdA,EAAmB,kBAAoB,EAAAP,GAAI,CAAEQ,UAAWtC,EAAQqC,GAAW7L,KAAMgD,IAAK,QAAQ6I,KAAaF,IAAYX,SAAU,SAAUe,OAAQ,CACpUC,QAAS1B,EAAI2B,kBACbhC,WAAYK,EAAIC,SAChB/G,SAAU,CAAC0I,EAAQjC,IAAejJ,KAAKoB,eAAe8J,EAAQjC,EAAY0B,GAC1EA,cACK,kBAAoB,EAAAL,GAAI,CAAEQ,UAAWtC,EAAQqC,GAAW7L,KAAMgD,IAAK,QAAQ2I,KAAYE,IAAab,SAAU,SAAUmB,aAAcN,IAAcvB,EAAIsB,MAAMtI,OAAS,GAAK7B,EAAKoD,cAClMuH,QAAwB,IAAhBhC,EAAK9G,SAAiB,kBAAoB,MAAO,CAAE8H,MAAO,gBAAqBpK,KAAKyH,iBACpG,EAEJ,SAAe,EAAArE,EAAA,KAAW,OAAWoE,G,6aCjG9B,SAAS6D,EAAmB7K,EAAU,CAAC,GAC1C,OAAIA,EAAQ8K,QACD,UAEP9K,EAAQ+K,QACD,UAEP/K,EAAQgL,KACD,OAEJ,MACX,C,4FCLO,MAAMjF,EAAS,CAClBkF,UAAW,CACPC,UAAWC,EAAA,OACXC,aAAc,GAElBC,cAAe,CACXvE,SAAUwE,EAAA,SACVzE,MAAO0E,EAAA,QAEXC,UAAW,CACPvF,UAAW,OAEfwF,OAAQ,CACJpF,gBAAiBqF,EAAA,OACjBC,QAASR,EAAA,QAEbS,cAAe,CACXtF,QAAS,OACTC,eAAgB,iBAEpBsF,kBAAmB,CACfvF,QAAS,OACTwF,UAAW,QAEfC,mBAAoB,CAChBzF,QAAS,QAEb0F,KAAM,CACFC,cAAe,UAEnBC,SAAU,CACNpF,SAAUqF,EAAA,UAEdC,UAAW,CACPC,WAAY,QAEhBtH,MAAO,CACHuH,cAAeC,EAAA,SCvBjBC,EAAiB,CACnB,CAAE3G,MAAO,UAAWxC,MAAO,WAC3B,CAAEwC,MAAO,OAAQxC,MAAO,QACxB,CAAEwC,MAAO,UAAWxC,MAAO,YAEzBoJ,EAAqB,SAC3B,MAAMC,UAA0B,cAC5BtN,cACIG,SAASoN,WACTnN,KAAKC,aAAe,CAAC,EACrBD,KAAKI,MAAQC,OAAOC,OAAO,CAAC,EAAGN,KAAKC,aACxC,CACAsB,SACI,MAAM,SAAE6L,EAAQ,QAAE5M,EAAO,yBAAE6M,EAAwB,wBAAEC,EAAuB,mBAAEC,EAAkB,kBAAEC,EAAiB,UAAEC,EAAS,eAAEC,EAAc,OAAEC,EAAM,KAAEjM,GAAU1B,KAAKY,MACjKgN,EAAcD,IAAWD,GAAkBD,GAAaA,EAAUI,MAAQJ,EAAUI,KAAKhN,MAAQ,EACvG,IAAIiN,EAAO,kBAAoB,IAAiB,MAC5CC,EAAoB,kBAAoB,IAAiB,MACzDC,EAAqB,kBAAoB,IAAiB,MAC9D,GAAIL,GAAUA,EAAOE,MAAQF,EAAOE,KAAKI,MAAO,CAC5C,MAAMC,EAAUP,EAAOE,KAAKI,MAAMH,MAAQH,EAAOE,KAAKI,MAAMH,KAAKG,MAC3DE,EAAuBR,EAAOE,KAAKI,MAAMG,eAAiBT,EAAOE,KAAKI,MAAMG,cAAcH,MAC1FI,EAAwBV,EAAOE,KAAKI,MAAMK,gBAAkBX,EAAOE,KAAKI,MAAMK,eAAeL,MACnGH,GAAO,EAAAS,EAAA,IAAeL,EAAUP,EAAOE,KAAKI,MAAMH,KAAKG,MAAMpK,MAAQ,EAAGqK,EAAUP,EAAOE,KAAKI,MAAMH,KAAKG,MAAMO,MAAQ,OACvHT,GAAoB,EAAAQ,EAAA,IAAeJ,EAAuBR,EAAOE,KAAKI,MAAMG,cAAcH,MAAMpK,MAAQ,EAAGsK,EAAuBR,EAAOE,KAAKI,MAAMG,cAAcH,MAAMO,MAAQ,OAChLR,GAAqB,EAAAO,EAAA,IAAeF,EAAwBV,EAAOE,KAAKI,MAAMK,eAAeL,MAAMpK,MAAQ,EAAGwK,EAAwBV,EAAOE,KAAKI,MAAMK,eAAeL,MAAMO,MAAQ,MACzL,CACA,OAAQ,kBAAoB,SAAU,CAAEpE,MAAO7D,EAAO0F,QAClD,kBAAoB,MAAO,CAAE7B,MAAO7D,EAAO6F,eACvC,kBAAoB,EAAAqC,MAAO,CAAEC,aAAc,KAAMtE,MAAO7D,EAAOhB,MAAOmF,KAAM,EAAAiE,WAAA,QAAqBjN,EAAKQ,cAAcC,EAAA,qBACpH,kBAAoB,MAAO,CAAEiI,MAAO7D,EAAOgG,oBACvCc,GAA4B,kBAAoB,IAAU,CAAED,SAAUA,EAAU5K,SAAU+K,IAC1FD,GAA2B,kBAAoB,IAAa,QACpE,kBAAoB,MAAO,CAAElD,MAAO7D,EAAO6F,eACvC,kBAAoB,MAAO,CAAEhC,MAAO7D,EAAO8F,mBACvC,kBAAoB,IAAS,CAAEhB,mBAAoBA,EAAoB7K,QAASA,EAASgB,YAAaoM,EAAazE,WAAYqE,EAAmBlK,QAAS0J,EAAgB4B,UAAU,EAAM3B,mBAAoBA,KACnN7B,QAAQwC,IAAiB,kBAAoB,MAAO,KAChD,kBAAoB,EAAAiB,QAAS,CAAEC,QAASpN,EAAKQ,cAAcC,EAAA,4BAAoC,CACvF6L,qBACAD,sBACAgB,YAAY,GAChB,kBAAoB,EAAAN,MAAO,CAAEC,aAAc,KAAMtE,MAAO7D,EAAOkF,UAAWf,KAAM,EAAAiE,WAAA,QAAqBb,IACzG,kBAAoB,MAAO,CAAE1D,MAAO7D,EAAOyF,YAAa,aACxE,EAGJ,MAAMjJ,GAAkB,SAAsB,CAAC3C,EAAOQ,KAClD,MAAMoO,GAAuB,OAAkB,MACzCvB,EAAY,qBAAmCrN,EAAO,QAAkB4O,GACxEtB,EAAiB,0BAAwCtN,EAAO,QAAkB4O,GAClFC,EAAuB,gCAA8C7O,EAAO,QAAkB4O,GACpG,MAAO,CACH3B,yBAA0B6B,EAAA,kCAAqD9O,GAC/EkN,wBAAyB4B,EAAA,iCAAoD9O,GAC7EqN,WAAW,QAAgBA,EAAW,UACtCC,iBACAuB,uBACAD,uBACH,IAECG,GAAgB,EAAA/L,EAAA,KAAW,IAAAD,SAAQJ,EAAiB,CAAC,EAA1B,CAA6BmK,I,2ECjDvD,MAAMkC,GACO,iBADPA,GAEO,iBAFPA,GAGM,gBAEb1O,GAAkB,SACxB,MAAM2O,WAAyB,cAC3BzP,cACIG,SAASoN,WACTnN,KAAKI,MAAQ,CACToI,QAAS,GACTY,KAAM,IAEVpJ,KAAKsP,UAAY,KACb,MAAM,QAAE9O,EAAO,cAAE+O,EAAa,cAAEhM,EAAa,KAAE7B,EAAI,cAAE8N,EAAa,OAAE7B,EAAM,OAAE9L,EAAM,cAAE4N,GAAkBzP,KAAKY,MAC3G,IAAK+M,EACD,OAEJ,MAAM+B,EAAiC,YAAZlP,EACrB4I,EAAO,GACPuG,GAAgB,OAA+B,CACjDhC,SACAiC,MAAOL,GAAgC/O,IAErCgI,EAAU+G,EACV,CAEE,CACIvQ,KAAM,IAEV,CACIA,KAAM0C,EAAKQ,cAAcC,EAAA,YACzBiI,MAAmB,YAAZ5J,EAAwB,qBAAoB2J,GAEvD,CACIxG,QAAS+L,EACT1Q,KAAM,IAEV,CACIA,KAAM0C,EAAKQ,cAAcC,EAAA,yBAE7B,CACIqC,GAAI4K,GACJpQ,KAAM0C,EAAKQ,cAAcC,EAAA,iCACzBiI,MAAO,iBAEX,CACI5F,GAAI4K,GACJpQ,KAAM0C,EAAKQ,cAAcC,EAAA,gCACzBiI,MAAO,iBAEX/J,OAAOC,OAAO,CAAEmI,QAAS,OAAQzJ,KAAM0C,EAAKQ,cAAcC,EAAA,QAAgBiI,MAAO,iBAAsBuF,EAAcrN,QAAU,CAAE4H,YAAY,IAC7I,CACIlL,KAAM,KAGZ,CACE,CACIA,KAAM,IAEVqB,OAAOC,OAAOD,OAAOC,OAAO,CAAEmI,QAASjI,EAASxB,KAAM0C,EAAKQ,cAAcC,EAAA,uBAA+B,CAAE0B,MAAOrD,KAAemP,EAAcrN,QAAU,CAAE4H,YAAY,IAAU,CAAEE,MAAmB,YAAZ5J,EAAwB,qBAAoB2J,IACrO,CACIxG,QAAS+L,EACT1Q,KAAM,IAEV,CACIwF,GAAI4K,GACJpQ,KAAM0C,EAAKQ,cAAcC,EAAA,yBAE7B,CACIqC,GAAI4K,GACJ3G,QAAS,sBACTzJ,KAAM0C,EAAKQ,cAAcC,EAAA,iCACzBiI,MAAO,iBAIX,CACI5F,GAAI4K,GACJ3G,QAAS,qBACTzJ,KAAM0C,EAAKQ,cAAcC,EAAA,gCACzBiI,MAAO,iBAIX/J,OAAOC,OAAO,CAAEmI,QAAS,OAAQzJ,KAAM0C,EAAKQ,cAAcC,EAAA,QAAgBiI,MAAO,iBAAsBuF,EAAcrN,QAAU,CAAE4H,YAAY,IAC7I,CACIlL,KAAM,KAGlB2Q,EAAclM,KAAI,CAAChD,EAAM8H,KACrB,MAAMuF,EAAO9N,KAAK6P,aAAapP,EAAM8H,GAC/BlC,EAAQ5F,GAAuB,OAAfA,EAAK4F,MAAiB5F,EAAK4F,MAAQ,GACnDyJ,EAAiB9P,KAAK+P,sBAAsBtP,EAAM8H,GAClDwF,EAAoB/N,KAAKgQ,qBAAqBvP,EAAM8H,GACpD0H,EAAqBjQ,KAAKkQ,sBAAsBzP,EAAM8H,GACtD4H,EAA0C,aAAxB1P,EAAK2P,gBAAiC3P,EAAK4F,QAAU,KACvEgK,EAAqB5P,EAAK4F,QAAU,MAA+B5F,EAAK4F,QAAU,KAClFiK,EAAO7P,EAAK+D,IAAM/D,EAAK+D,KAAO/D,EAAK4F,MAAQ,kBAAoB,MAAO,CAAE+D,MAAO,sBAA0B3J,EAAK+D,IAAM,KACpHhD,EAAa6E,IAAU,MAAM7F,KAAa6F,IAAU,MAAMkJ,KAAmBc,EAC7E5K,EAAUzF,KAAKuQ,WAAW9P,EAAMe,GAChCxC,EAAOwC,EAAa6E,EAAS,kBAAoB,KAAM,CAAEmK,IAAI,SAAiB,CAC5EC,SAAU,2BACVpK,MAAOA,EAAMqK,WACb1L,YAAavE,EAAK+D,GAClB2L,kBACA3P,UACAqB,YACEwE,GACV+C,EAAKuH,KAAK,CACN/F,MAAO,CACH,CAAC,EACD,CACI/G,MAAQ,kBAAoB,aAAgB,KACxC,kBAAoB,MAAO,KAAM7E,GACjC,kBAAoB,MAAO,CAAEoL,MAAO,sBAA0BkG,KAEtE,CACI3M,QAAS+L,EACT7L,MAAOpD,EAAKmQ,gBAAmB,kBAAoB,MAAO,KACtD,kBAAoB,EAAAC,MAAO,CAAEvL,QAAS,UAAW+B,MAAO,SAAW3F,EAAKQ,cAAcC,EAAA,aAAwB,kBAAoB,MAAO,CAAEiI,MAAO,qBAE1J,CAAEvG,MAAO,kBAAoB,MAAO,KAAMiM,GAAiBtL,GAAI4K,IAC/D,CAAEvL,MAAO,kBAAoB,MAAO,KAAMoM,GAAqBzL,GAAI4K,IACnE,CAAEvL,MAAO,kBAAoB,MAAO,KAAMkK,GAAoBvJ,GAAI4K,IAClE,CAAEvL,MAAO,kBAAoB,MAAO,KAAMiK,IAC1C,CAAEjK,MAAO,kBAAoB,MAAO,KAAM4B,KAE9ChF,OACA8I,SAAUiG,GAAkBC,QAAmEtF,IAAlDsF,EAAcqB,MAAKhJ,GAAOA,EAAItD,KAAO/D,EAAK+D,KACvFyG,kBAAmBzJ,GACrB,IAEN,MAAMuP,EAAkBvI,EAAQR,QAAOgJ,IAAWzN,EAAcY,IAAI6M,EAAOxM,MAAQwM,EAAOrN,SACpFsN,EAAe7H,EAAK3F,KAAKyN,IAC3B,IAAI5H,EArKkB,SAAU6H,EAAGC,GAC/C,IAAIC,EAAI,CAAC,EACT,IAAK,IAAIC,KAAKH,EAAO9Q,OAAOkR,UAAUC,eAAeC,KAAKN,EAAGG,IAAMF,EAAEM,QAAQJ,GAAK,IAC9ED,EAAEC,GAAKH,EAAEG,IACb,GAAS,MAALH,GAAqD,mBAAjC9Q,OAAOsR,sBACtB,KAAIC,EAAI,EAAb,IAAgBN,EAAIjR,OAAOsR,sBAAsBR,GAAIS,EAAIN,EAAEhP,OAAQsP,IAC3DR,EAAEM,QAAQJ,EAAEM,IAAM,GAAKvR,OAAOkR,UAAUM,qBAAqBJ,KAAKN,EAAGG,EAAEM,MACvEP,EAAEC,EAAEM,IAAMT,EAAEG,EAAEM,IAF4B,CAItD,OAAOP,CACX,CA2J0BS,CAAOZ,EAAI,IAErB,OADA5H,EAAIsB,MAAQtB,EAAIsB,MAAM5C,QAAO+J,IAASxO,EAAcY,IAAI4N,EAAKvN,MAAQuN,EAAKpO,SACnE2F,CAAG,IAEdtJ,KAAKkB,SAAS,CACVsH,QAASuI,EACT3H,KAAM6H,GACR,EAENjR,KAAKuQ,WAAa,CAAC9P,EAAMe,KACrB,MAAM,QAAEhB,EAAO,kBAAEG,GAAsBX,KAAKY,MAC5C,OAAQ,kBAAoB,KAAS,CAAEJ,QAASA,EAASgB,WAAYA,EAAYf,KAAMA,EAAMuR,aAAc,SAAmBtR,gBAAiBA,GAAiBC,kBAAmBA,EAAmBc,oBAAiC,YAAZjB,GAAyB,EAExPR,KAAKgQ,qBAAuB,CAACvP,EAAM8H,KAC/B,MAAM,OAAEoF,EAAM,KAAEjM,GAAS1B,KAAKY,MACxBkN,EAAOH,GAAUA,EAAOE,MAAQF,EAAOE,KAAKI,OAASN,EAAOE,KAAKI,MAAMH,MAAQH,EAAOE,KAAKI,MAAMH,KAAKG,MACtGN,EAAOE,KAAKI,MAAMH,KAAKG,MAAMpK,MAC7B,EACAoO,EAAwB,IAATnE,EAAaA,EAAKoE,QAAQ,IAAOzR,EAAK2N,cAAcH,MAAMpK,MAAQiK,EAAQ,KAAKoE,QAAQ,GAC5G,OAAQ,kBAAoB,aAAgB,MACxC,EAAA3D,EAAA,IAAe9N,EAAK2N,cAAcH,MAAMpK,MAAOpD,EAAK2N,cAAcH,MAAMO,OACxE,kBAAoB,MAAO,CAAEpE,MAAO,qBAAwBpI,IAAK,cAAcuG,KAAW7G,EAAKQ,cAAcC,EAAA,gBAAwB,CAAE0B,MAAOoO,KAAkB,EAExKjS,KAAKkQ,sBAAwB,CAACzP,EAAM8H,KAChC,MAAM,OAAEoF,EAAM,KAAEjM,GAAS1B,KAAKY,MACxBkN,EAAOH,GAAUA,EAAOE,MAAQF,EAAOE,KAAKI,OAASN,EAAOE,KAAKI,MAAMH,MAAQH,EAAOE,KAAKI,MAAMH,KAAKG,MACtGN,EAAOE,KAAKI,MAAMH,KAAKG,MAAMpK,MAC7B,EACAoO,EAAwB,IAATnE,EAAaA,EAAKoE,QAAQ,IAAOzR,EAAK6N,eAAeL,MAAMpK,MAAQiK,EAAQ,KAAKoE,QAAQ,GAC7G,OAAQ,kBAAoB,aAAgB,MACxC,EAAA3D,EAAA,IAAe9N,EAAK6N,eAAeL,MAAMpK,MAAOpD,EAAK6N,eAAeL,MAAMO,OAC1E,kBAAoB,MAAO,CAAEpE,MAAO,qBAAwBpI,IAAK,cAAcuG,KAAW7G,EAAKQ,cAAcC,EAAA,gBAAwB,CAAE0B,MAAOoO,KAAkB,EAExKjS,KAAK+P,sBAAwB,CAACtP,EAAM8H,KAChC,MAAM,KAAE7G,GAAS1B,KAAKY,MAChBiD,GAAQ,EAAA0K,EAAA,IAAe4D,KAAKC,IAAI3R,EAAKqN,KAAKG,MAAMpK,MAAQpD,EAAK4R,aAAc5R,EAAKqN,KAAKG,MAAMO,OAC3F8D,EAAoC,OAAvB7R,EAAK8R,eAAyB,EAAAhE,EAAA,IAAiB4D,KAAKC,IAAI3R,EAAK8R,gBAAkB,EAC5FC,IAAkC,IAAfF,GAAmC,SAAfA,GACvCG,EAAmC,OAAvBhS,EAAK8R,cACvB,IAAIG,EAUJ,OATIF,IACAE,EAAe,eACY,OAAvBjS,EAAK8R,eAA0B9R,EAAK4R,YAAc,IAClDK,GAAgB,aAEO,OAAvBjS,EAAK8R,eAA0B9R,EAAK4R,YAAc,IAClDK,GAAgB,cAGnBD,EAIO,kBAAoB,MAAO,CAAE/S,UAAW,0BAC5C,kBAAoB,MAAO,CAAEA,UAAWgT,EAAc1Q,IAAK,yBAAyBuG,KAChFiK,EAAiB9Q,EAAKQ,cAAcC,EAAA,UAAkB,CAAE0B,MAAOyO,IAAgB,kBAAoB,IAAiB,MACpHlH,QAAQoH,GAAyC,OAAvB/R,EAAK8R,eAA0B9R,EAAK4R,YAAc,IAAO,kBAAoB,OAAQ,CAAE3S,UAAW,gBAAiB0K,MAAO,eAAkBpI,IAAK,yBAAyBuG,MACpM6C,QAAQoH,GAAyC,OAAvB/R,EAAK8R,eAA0B9R,EAAK4R,YAAc,IAAO,kBAAoB,OAAQ,CAAE3S,UAAW,kBAAmB0K,MAAO/J,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAG,kBAAqB,oBAAuB0B,IAAK,yBAAyBuG,OACpQ,kBAAoB,MAAO,CAAE6B,MAAO,qBAAwBpI,IAAK,yBAAyBuG,MAAW,OAAsB1E,MARxH,SASX,EAEJ7D,KAAK6P,aAAe,CAACpP,EAAM8H,KACvB,MAAM,OAAEoF,EAAM,KAAEjM,GAAS1B,KAAKY,MACxBkN,EAAOH,GAAUA,EAAOE,MAAQF,EAAOE,KAAKI,OAASN,EAAOE,KAAKI,MAAMH,MAAQH,EAAOE,KAAKI,MAAMH,KAAKG,MACtGN,EAAOE,KAAKI,MAAMH,KAAKG,MAAMpK,MAC7B,EACAoO,EAAwB,IAATnE,EAAaA,EAAKoE,QAAQ,IAAOzR,EAAKqN,KAAKG,MAAMpK,MAAQiK,EAAQ,KAAKoE,QAAQ,GACnG,OAAQ,kBAAoB,aAAgB,MACxC,EAAA3D,EAAA,IAAe9N,EAAKqN,KAAKG,MAAMpK,MAAOpD,EAAKqN,KAAKG,MAAMO,OACtD,kBAAoB,MAAO,CAAEpE,MAAO,qBAAwBpI,IAAK,cAAcuG,KAAW7G,EAAKQ,cAAcC,EAAA,gBAAwB,CAAE0B,MAAOoO,KAAkB,CAE5K,CACAU,oBACI3S,KAAKsP,WACT,CACAzK,mBAAmBC,GACf,MAAM,cAAEvB,EAAa,OAAEoK,EAAM,cAAE8B,GAAkBzP,KAAKY,MAChDgS,EAAgBjF,GAAUA,EAAOkF,KAAOC,KAAKC,UAAUpF,EAAOkF,MAAQ,IACrD/N,EAAU6I,QAAU7I,EAAU6I,OAAOkF,KAAOC,KAAKC,UAAUjO,EAAU6I,OAAOkF,MAAQ,MACpFD,GACnB9N,EAAU2K,gBAAkBA,GAC5B3K,EAAUvB,gBAAkBA,GAC5BvD,KAAKsP,WAEb,CACA/N,SACI,MAAM,UAAEkI,EAAS,WAAEN,EAAU,OAAEL,EAAM,cAAE2G,GAAkBzP,KAAKY,OACxD,QAAE4H,EAAO,KAAEY,GAASpJ,KAAKI,MAC/B,OAAQ,kBAAoB,KAAW,CAAEoI,QAASA,EAASiB,UAAWA,EAAWN,WAAYA,EAAYL,OAAQA,EAAQM,KAAMA,EAAMqG,cAAeA,GACxJ,EAEJ,MAAMuD,IAAe,EAAA5P,EAAA,KAAW,OAAWiM,K,oDCpP3C,MAAM4D,GAAgB,QAChB,GAAqB,QACpB,MAAMC,WAA2B,cACpCtT,cACIG,SAASoN,WACTnN,KAAKC,aAAe,CAAC,EACrBD,KAAKI,MAAQC,OAAOC,OAAO,CAAC,EAAGN,KAAKC,cACpCD,KAAKmT,mBAAqB,KACtB,MAAM,KAAEzR,EAAI,UAAE0R,GAAcpT,KAAKY,MAC3B0C,EAAU,CACZ,CAAEtE,KAAM0C,EAAKQ,cAAcC,EAAA,iBAAyB,CAAE0B,MAAO,YAAc7B,IAAK,WAChF,CAAEhD,KAAM0C,EAAKQ,cAAcC,EAAA,iBAAyB,CAAE0B,MAAO,SAAW7B,IAAK,QAC7E,CAAEhD,KAAM0C,EAAKQ,cAAcC,EAAA,iBAAyB,CAAE0B,MAAO,YAAc7B,IAAK,YAQpF,OANIoR,GAAaA,EAAUP,MAAQO,EAAUP,KAAKvQ,QAC9CgB,EAAQqN,KAAK,CACT3R,KAAM0C,EAAKQ,cAAcC,EAAA,iBAAyB,CAAE0B,MAAO,OAC3D7B,IAAK,OAGNsB,CAAO,CAEtB,CACAqP,oBACI,MAAM,SAAEU,EAAQ,qBAAEC,EAAoB,eAAEC,GAAmBvT,KAAKY,MAChEZ,KAAKkB,SAAS,CACVsS,gBAAiBxT,KAAKmT,uBACvB,KACKG,IAAyB,iBACzBD,EAAS,GAAoBJ,GAAeM,EAChD,GAER,CACA1O,mBAAmBC,GACf,MAAM,SAAEuO,EAAQ,MAAEI,EAAK,UAAEL,EAAS,qBAAEE,EAAoB,eAAEC,GAAmBvT,KAAKY,OAC7E,QAAQwS,EAAWtO,EAAUsO,WASzBK,KAAU,QAAQA,EAAO3O,EAAU2O,QAAUH,IAAyB,iBAC3ED,EAAS,GAAoBJ,GAAeM,GAT5CvT,KAAKkB,SAAS,CACVsS,gBAAiBxT,KAAKmT,uBACvB,KACKG,IAAyB,iBACzBD,EAAS,GAAoBJ,GAAeM,EAChD,GAMZ,CACAhS,SACI,MAAM,QAAEf,EAAO,cAAEgP,EAAa,iBAAEkE,EAAgB,aAAEC,EAAY,WAAEC,EAAU,eAAEC,EAAc,0BAAEC,EAAyB,gBAAEC,EAAe,cAAEC,EAAa,gBAAEC,EAAe,uBAAEC,EAAsB,WAAEC,EAAU,MAAEV,EAAK,cAAEhE,EAAa,UAAE2D,GAAepT,KAAKY,OAChP,gBAAE4S,GAAoBxT,KAAKI,MACjC,OAAQ,kBAAoB,KAAa,CAAEoT,gBAAiBA,EAAiBhT,QAASA,EAASgP,cAAeA,EAAekE,iBAAkBA,EAAkBC,aAAcA,EAAcC,WAAYA,EAAYC,eAAgBA,EAAgBC,0BAA2BA,EAA2BC,gBAAiBA,EAAiBC,cAAeA,EAAeC,gBAAiBA,EAAiBC,uBAAwBA,EAAwBC,WAAYA,EAAYV,MAAOA,EAAOW,kBAAmB,SAAuB3E,cAAeA,EAAe4E,gBAAgB,EAAMC,sBAAsB,EAAMC,YAAY,EAAMC,YAAY,EAAMC,kBAA+B,YAAZjU,EAAuB4S,UAAWA,EAAWnG,mBAAoB,IACztB,EAGJ,MAAM,IAAkB,SAAsB,CAAC7M,EAAOQ,KAGlD,MAAM2S,GAAiB,QAAS,CAC5BvL,OAAQ,CACJ0M,WAAY,UACZC,iBAAkB,QAClBC,kBAAmB,GAEvBC,UAAU,EACVC,MAAO,MAIX,MAAO,CACH1B,UAHc,gBAAuBhT,EAAO,GAAoB6S,GAAeM,GAI/ED,qBAHyB,2BAAkClT,EAAO,GAAoB6S,GAAeM,GAIrGA,iBACH,IAECvQ,GAAqB,CACvBqQ,SAAU,UAER0B,IAAwB,IAAA5R,SAAQ,GAAiBH,GAAzB,CAA6CkQ,IACrE8B,IAAiB,EAAA5R,EAAA,IAAW2R,I,gBCxF3B,MAAM,GAAS,CAClBjG,QAAS,CACLhC,cAAenB,EAAA,SACf3E,WAAY2E,EAAA,UAEhBsJ,WAAY,CACR3I,UAAW,QAEf4I,oBAAqB,CACjBC,WAAYxJ,EAAA,SACZyJ,YAAazJ,EAAA,UAEjBwI,WAAY,CACRtN,gBAAiBqF,EAAA,SACjBY,cAAeuI,GAAA,SACfrO,WAAYqO,GAAA,UAEhBC,eAAgB,CACZH,WAAYxJ,EAAA,SACZyJ,YAAazJ,EAAA,WCWf4J,GAAY,CACdC,MAAO,OACPxN,OAAQ,CACJ8M,MAAO,GACPW,OAAQ,EACRf,WAAY,UACZC,iBAAkB,QAClBC,kBAAmB,GAEvBc,QAAS,CAAC,EACV7N,UAAW,CAAC,EACZ8N,SAAU,CACNrK,QAAS,KAEb3C,SAAU,CACNmF,KAAM,SAGR8H,GAAuB,CACzB,CAAEvP,MAAOlE,EAAA,uBAA+B0B,MAAOuL,IAC/C,CACIpK,YAAa7C,EAAA,mCACbkE,MAAOlE,EAAA,+BACP0B,MAAOuL,GACPzL,QAAQ,GAEZ,CACIqB,YAAa7C,EAAA,kCACbkE,MAAOlE,EAAA,8BACP0B,MAAOuL,GACPzL,QAAQ,IAGVkS,GAAa,SACb,GAAkB,QACxB,MAAMC,WAAoB,cACtBlW,YAAYC,EAAYC,GACpBC,MAAMF,EAAYC,GAClBE,KAAKC,aAAe,CAChBuI,QAAS,GACTjF,eAAe,OAAkBqS,IACjCpG,eAAe,EACfuG,6BAA6B,EAC7B5V,mBAAmB,EACnBiJ,KAAM,GACNqG,cAAe,IAEnBzP,KAAKI,MAAQC,OAAOC,OAAO,CAAC,EAAGN,KAAKC,cACpCD,KAAKgW,yBAA2B,KAC5B,MAAM,cAAEzS,EAAa,4BAAEwS,GAAgC/V,KAAKI,MACtDkD,GAAU,IAAA2S,WAAUL,IAI1B,OAHAtS,EAAQG,KAAIC,IACRA,EAAOC,OAASJ,EAAcY,IAAIT,EAAOG,MAAM,IAE3C,kBAAoB,IAAuB,CAAE/C,OAAQiV,EAA6BzS,QAASA,EAAStC,QAAShB,KAAKkW,iCAAkCvR,OAAQ3E,KAAKmW,iCAAmC,EAEhNnW,KAAKoW,iBAAmB,KACpB,MAAM,MAAE3C,EAAK,OAAE9F,GAAW3N,KAAKY,MACzByV,GAAY,OAAmB5C,EAAMkC,UACrCpG,GAAgB,QAAiBkE,GACvC,OAAO,OAA+B,CAClC9F,SACAiC,MAAOL,GAAiB8G,GAC1B,EAENrW,KAAKO,eAAkBoP,IACnB,MAAM,MAAE8D,EAAK,OAAE9F,EAAM,kBAAEhN,GAAsBX,KAAKY,OAC5C,cAAE4O,EAAa,kBAAErP,EAAiB,cAAEsP,GAAkBzP,KAAKI,MAC3DiW,GAAY,OAAmB5C,EAAMkC,UACrCpG,GAAgB,QAAiBkE,GACjCG,EAAajG,GAAUA,EAAOE,KAAOF,EAAOE,KAAKhN,MAAQ,EAEzDE,EAAQ,GAMd,OALA0O,EAAchM,KAAIhD,IACRA,EAAK4F,QAAU,MAAMgQ,KAAe5V,EAAK4F,QAAU,MAAMkJ,KAC3DxO,EAAM4P,KAAKlQ,EACf,IAEI,kBAAoB,IAAa,CAAEI,MAAO2O,EAAgBoE,EAAa7S,EAAMuB,OAAQgU,YAAa9G,GAAiBC,EAAcnN,SAAWsR,IAAejE,EAAcrN,OAAS,EAAG9B,QAAS+O,EAAgB,GAAG,MAAYA,IAAkB8G,EAAWvV,OAAQX,EAAmBY,MAAOA,EAAOC,QAAShB,KAAKiB,uBAAwBP,gBAAiB,GAAiBC,kBAAmBA,GAAqB,EAE/ZX,KAAKuW,cAAgB,CAACC,GAAW,KAC7B,MAAM,KAAE9U,EAAI,MAAE+R,EAAK,OAAE9F,EAAM,OAAE9L,GAAW7B,KAAKY,MACvCC,EAAQ8M,GAAUA,EAAOE,KAAOF,EAAOE,KAAKhN,MAAQ,EACpDiU,EAAQnH,GAAUA,EAAOE,MAAQF,EAAOE,KAAK7F,QAAU2F,EAAOE,KAAK7F,OAAO8M,MAC1EnH,EAAOE,KAAK7F,OAAO8M,MACnBS,GAAUvN,OAAO8M,MAIjB2B,GAHS9I,GAAUA,EAAOE,MAAQF,EAAOE,KAAK7F,QAAU2F,EAAOE,KAAK7F,OAAOyN,OAC3E9H,EAAOE,KAAK7F,OAAOyN,OACnBF,GAAUvN,OAAOyN,QACDX,EAAQ,EAC9B,OAAQ,kBAAoB,EAAA4B,WAAY,CAAE9Q,WAAY4Q,EAAUG,UAAW9V,EAAO+V,gBAAiB,CAACtS,EAAOuS,KAAY,QAAoBpD,EAAO5R,EAAQgV,GAAUC,UAAW,CAACxS,EAAOyS,KAAe,QAActD,EAAO5R,EAAQ8L,EAAQoJ,GAAaN,KAAMA,EAAMI,QAAS/B,EAAOkC,OAAQ,CACpRC,gBAAiBvV,EAAKQ,cAAcC,EAAA,kBAA0B,CAC1DoD,MAAO7D,EAAKQ,cAAcC,EAAA,aAC1B+U,UAAWV,EAAW,SAAW,SAEtClR,QAASkR,EAAW,EAAAW,kBAAA,OAA2B,EAAAA,kBAAA,IAAuBC,SAAU,sBAAqBZ,EAAW,UAAY,KAAQ,EAE/IxW,KAAKqX,SAAW,KACZ,MAAM,MAAE5D,EAAK,OAAE9F,EAAM,kBAAE2J,EAAiB,kBAAE3W,EAAiB,OAAEkB,GAAW7B,KAAKY,OACvE,cAAE2C,EAAa,cAAEiM,EAAa,cAAEC,GAAkBzP,KAAKI,MACvDiW,GAAY,OAAmB5C,EAAMkC,UACrCpG,GAAgB,QAAiBkE,GACvC,OAAQ,kBAAoBT,GAAc,CAAExS,QAAS+O,EAAgB,GAAG,MAAYA,IAAkB8G,EAAW9G,cAAeA,EAAehM,cAAeA,EAAeiM,cAAeA,EAAe/F,UAAW6N,IAAsB,gBAAwBnO,WAAYnJ,KAAKuX,eAAgBzO,OAAQ,CAAC0O,EAAUC,KAAoB,QAAWhE,EAAO5R,EAAQ2V,EAAUC,GAAkB9J,OAAQA,EAAQhN,kBAAmBA,EAAmB8O,cAAeA,GAAiB,EAE5dzP,KAAK0X,WAAc/H,IACf,MAAM,MAAE8D,EAAK,OAAE9F,EAAM,OAAE9L,GAAW7B,KAAKY,OACjC,cAAE4O,EAAa,cAAEC,GAAkBzP,KAAKI,MACxCiW,GAAY,OAAmB5C,EAAMkC,UACrCpG,GAAgB,QAAiBkE,GACjCG,EAAajG,GAAUA,EAAOE,KAAOF,EAAOE,KAAKhN,MAAQ,EAC/D,OAAQ,kBAAoBmU,GAAgB,CAAExU,QAAS+O,EAAgB,GAAG,MAAYA,IAAkB8G,EAAW7G,cAAeA,EAAekE,iBAA2C,IAAzB/D,EAAcrN,SAAkBkN,GAA0C,IAAzBC,EAAcnN,OAAeqR,aAAchE,EAAcrN,OAAQsR,WAAYA,EAAYC,eAAgB7T,KAAK2X,mBAAoB7D,0BAA2B9T,KAAK4X,gCAAiC7D,gBAAiB/T,KAAKmB,sBAAuB6S,cAAehM,IAAU,QAAkByL,EAAO5R,EAAQmG,GAASiM,gBAAiBjM,IAAU,QAAoByL,EAAO5R,EAAQmG,GAASkM,uBAAwBlU,KAAK6X,2BAA4B1D,WAAYnU,KAAKuW,gBAAiB9C,MAAOA,EAAOhE,cAAeA,GAAiB,EAE3tBzP,KAAK2X,mBAAsBG,IACvB,MAAM,cAAEtI,GAAkBxP,KAAKI,MAChB,SAAX0X,EACA9X,KAAKkB,SAAS,CAAEsO,eAAe,EAAOC,cAAe,KAErC,SAAXqI,EACL9X,KAAKkB,SAAS,CACVsO,eAAe,EACfC,cAAezP,KAAKoW,qBAGR,QAAX0B,GACL9X,KAAKkB,SAAS,CAAEsO,eAAgBA,EAAeC,cAAe,IAClE,EAEJzP,KAAKkW,iCAAoCpV,IACrCd,KAAKkB,SAAS,CAAE6U,4BAA6BjV,GAAS,EAE1Dd,KAAK4X,gCAAkC,KACnC5X,KAAKkB,SAAS,CAAE6U,6BAA6B,GAAO,EAExD/V,KAAKmW,gCAAmC5S,IACpCvD,KAAKkB,SAAS,CAAEqC,iBAAgB,EAEpCvD,KAAKiB,uBAA0BH,IAC3Bd,KAAKkB,SAAS,CAAEf,kBAAmBW,GAAS,EAEhDd,KAAKmB,sBAAwB,KACzBnB,KAAKkB,SAAS,CAAEf,mBAAmB,GAAO,EAE9CH,KAAK+X,sBAAwBvX,IACzB,MAAM,MAAEiT,EAAK,OAAE5R,GAAW7B,KAAKY,MACzBoX,EAAaxX,EACbyX,EAAW5X,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGwS,KAAKoF,MAAMpF,KAAKC,UAAUU,KAAU,CAEjFkC,SAAU,CACN,CAACqC,GAAa,KACfrP,SAAU,CAAEmF,KAAM,QAAUqK,cAAUhO,IAC7CnK,KAAKkB,SAAS,CAAEsO,eAAe,EAAOC,cAAe,KAAM,KACvD5N,EAAOuW,UAAS,OAAiBH,EAAUpW,EAAO8F,UAAU,GAAO,CAAE0Q,SAAS,GAAO,GACvF,EAENrY,KAAK6X,2BAA8BxT,IAC/B,MAAM,MAAEoP,EAAK,OAAE5R,GAAW7B,KAAKY,MACzBqX,EAAW5X,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGwS,KAAKoF,MAAMpF,KAAKC,UAAUU,KAAU,CAAE0E,SAAU9T,EAAU,gBAAa8F,IACxHnK,KAAKkB,SAAS,CAAEsO,eAAe,EAAOC,cAAe,KAAM,KACvD5N,EAAOuW,UAAS,OAAiBH,EAAUpW,EAAO8F,UAAU,GAAO,CAAE0Q,SAAS,GAAO,GACvF,EAENrY,KAAKuX,eAAiB,CAACxW,EAAOkI,GAAa,KACvC,MAAM,cAAEuG,EAAa,cAAEC,GAAkBzP,KAAKI,MAC9C,IAAIkY,EAAW,IAAK9I,EAAgBxP,KAAKoW,mBAAqB3G,GAC1D1O,GAASA,EAAMuB,OAAS,IACpB2G,EACAlI,EAAM0C,KAAIhD,GAAQ6X,EAAS3H,KAAKlQ,KAGhCM,EAAM0C,KAAIhD,IACN6X,EAAWA,EAAStQ,QAAOF,GAAOA,EAAItD,KAAO/D,EAAK+D,IAAG,KAIjExE,KAAKkB,SAAS,CAAEsO,eAAe,EAAOC,cAAe6I,GAAW,EAEpEtY,KAAKuY,aAAe,KAChB,MAAM,YAAEC,EAAW,MAAE/E,EAAK,kBAAE9S,EAAiB,OAAEkB,GAAW7B,KAAKY,MAC1DiB,EAAO8F,SAASC,OAWjB4Q,EAAY,GAAiB3C,GAAYlV,GAVzCkB,EAAOuW,UAAS,OAAiB,CAC7B1C,QAASjC,EAAQA,EAAMiC,aAAUvL,EACjCtC,UAAW4L,EAAQA,EAAM5L,eAAYsC,EACrCwL,SAAUlC,EAAQA,EAAMkC,cAAWxL,EACnCxB,SAAU,CAAEmF,KAAM,SACnBjM,EAAO8F,UAAW,CACjB0Q,SAAS,GAKjB,EAEJrY,KAAK2X,mBAAqB3X,KAAK2X,mBAAmBrW,KAAKtB,MACvDA,KAAKkW,iCAAmClW,KAAKkW,iCAAiC5U,KAAKtB,MACnFA,KAAK4X,gCAAkC5X,KAAK4X,gCAAgCtW,KAAKtB,MACjFA,KAAKmW,gCAAkCnW,KAAKmW,gCAAgC7U,KAAKtB,MACjFA,KAAKiB,uBAAyBjB,KAAKiB,uBAAuBK,KAAKtB,MAC/DA,KAAKmB,sBAAwBnB,KAAKmB,sBAAsBG,KAAKtB,MAC7DA,KAAK6X,2BAA6B7X,KAAK6X,2BAA2BvW,KAAKtB,MACvEA,KAAKuX,eAAiBvX,KAAKuX,eAAejW,KAAKtB,KACnD,CACA2S,oBACI3S,KAAKuY,cACT,CACA1T,mBAAmBC,EAAW2T,GAC1B,MAAM,OAAE9K,EAAM,YAAE+K,EAAW,kBAAE/X,EAAiB,OAAEkB,GAAW7B,KAAKY,OAC1D,cAAE6O,GAAkBzP,KAAKI,MACzB6X,EAAWnT,EAAUnE,oBAAsBA,EAC3CgY,GAAYhL,IAAW+K,EACvBE,GAAc/W,EAAO8F,SAASC,OAC9B0Q,EAAWG,EAAUhJ,gBAAkBA,GACzCwI,GAAYU,GAAYC,GAAcN,IACtCtY,KAAKuY,cAEb,CACAhX,SACI,MAAM,SAAE6L,EAAQ,KAAE1L,EAAI,UAAE+L,EAAS,qBAAEwB,EAAoB,MAAEwE,EAAK,OAAE9F,EAAM,YAAE+K,EAAW,kBAAEpB,EAAiB,OAAEzV,GAAW7B,KAAKY,MAClHyV,GAAY,OAAmB5C,EAAMkC,UACrChG,EAAgB3P,KAAKoW,mBACrB7Q,EAAQ7D,EAAKQ,cAAcC,EAAA,mBAEjC,GAAIuW,EACA,OAAO,kBAAoB,IAAc,CAAEnT,MAAOA,IAEjD,GAAI0J,IAAyB,gBAC9B,OAAO,kBAAoB,IAAS,CAAE1J,MAAOA,IAE5C,GAAI0J,IAAyB,cAAsB,CAGpD,GADoBxB,GAAaA,EAAUI,MAAiC,IAAzBJ,EAAUI,KAAKhN,MAE9D,OAAO,kBAAoB,IAAa,CAAEmR,aAAc,QAAkBzM,MAAOA,IAErF,KAAK,QAAoBkI,GACrB,OAAO,kBAAoB,IAAQ,CAAElI,MAAOA,GAEpD,CACA,OAAQ,kBAAoB,MAAO,CAAE6E,MAAO,eACxC,kBAAoB+E,EAAe,CAAE/B,SAAUA,EAAU5M,QAAS6V,EAAW9I,mBAAoB1J,IAAS,QAAuB4P,EAAO5R,EAAQgC,GAAQ2J,kBAAmBxN,KAAK+X,sBAAuBpK,OAAQA,IAC/M,kBAAoB,MAAO,CAAEvD,MAAO,YAChCpK,KAAK0X,WAAW/H,GAChB3P,KAAKO,eAAeoP,GACpB3P,KAAKgW,2BACLsB,IAAsB,gBAA0B,kBAAoB,IAAS,MAAU,kBAAoB,aAAgB,KACvH,kBAAoB,MAAO,CAAElN,MAAO,mBAAyBpK,KAAKqX,YAClE,kBAAoB,MAAO,CAAEjN,MAAO,wBAChC,kBAAoB,MAAO,CAAEA,MAAO,eAAqBpK,KAAKuW,eAAc,OAChG,EAGJ,MAAM,IAAkB,SAAsB,CAACnW,GAASyB,aACpD,MAAM6F,GAAiB,QAAW7F,EAAO8F,SAASC,QAC5CwF,EAAW8B,EAAA,kCAAqD9O,IAAS,eAAgB+J,EACzFsJ,EAAQ,CACV+B,MAAO,OACPxN,OAAQ3H,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGiV,GAAUvN,QAASN,EAAeM,QAC1EH,UAAWH,EAAeG,WAAa0N,GAAU1N,UACjD6N,QAAShO,EAAegO,SAAWH,GAAUG,QAC7CC,SAAUjO,EAAeiO,UAAYJ,GAAUI,SAC/ChN,SAAUjB,EAAeiB,UAAY4M,GAAU5M,SAC/CwP,SAAUzQ,EAAeyQ,UAEvBxX,GAAoB,QAASN,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGmT,GAAQ,CAAErG,cACvEO,EAAS,kBAA6BvN,EAAO,GAAiByV,GAAYlV,GAC1E+X,EAAc,uBAAkCtY,EAAO,GAAiByV,GAAYlV,GACpF2W,EAAoB,6BAAwClX,EAAO,GAAiByV,GAAYlV,GAChGqO,GAAuB,OAAkB,MACzCvB,EAAY,qBAAmCrN,EAAO,QAAkB4O,GACxEC,EAAuB,gCAA8C7O,EAAO,QAAkB4O,GACpG,MAAO,CACH5B,WACAK,WAAW,QAAgBA,EAAW,SACtCwB,uBACAwE,QACA9F,SACA+K,cACApB,oBACA3W,oBACH,IAEC,GAAqB,CACvB6X,YAAa,kBAEjB,IAAe,EAAApV,EAAA,KAAW,QAAW,IAAAD,SAAQ,GAAiB,GAAzB,CAA6C2S,K,qECzT3E,MAAM+C,EAAmB,EAAGpI,WAAUzL,cAAaxE,UAAS2P,kBAAiB9J,QAAOxE,aACvF,MAAM6F,GAAiB,QAAW7F,EAAO8F,SAASC,QAC5CqQ,EAAW5X,OAAOC,OAAOD,OAAOC,OAAOD,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGoH,GAAkB1C,GAAeA,IAAgBqB,GAAS,CAAE,CAAC,MAAmBrB,IAAkBmL,GAAmB,CAAE,CAAC,MAAoB9J,IAAW,CAAEsP,SAAU,CACxO,CAACnV,GAAU2P,EAAkB,IAAM9J,KAQ3C,OANI8J,IACK8H,EAASjQ,SACViQ,EAASjQ,OAAS,CAAC,GAEvBiQ,EAASjQ,OAAOmQ,SAAW,MAExB,GAAG1H,MAAY,QAAcwH,IAAW,EAEtCa,EAAsB,EAAGrI,WAAUzL,cAAaxE,UAASuY,aAAYvU,KAAI3C,SAAQ0D,QAAOyT,WACjG,MAAMtR,GAAiB,QAAW7F,EAAO8F,SAASC,QAC5CqQ,EAAW5X,OAAOC,OAAOD,OAAOC,OAAOD,OAAOC,OAAOD,OAAOC,OAAOD,OAAOC,OAAO,CAAC,EAAGoH,GAAkB1C,GAAeA,IAAgBO,GAAS,CAAE,CAAC,MAAmBP,IAAkBO,GAAS,CAAE,CAAC,MAAoBA,IAAYwT,GAAc,CAAE,CAAC,MAAeA,IAAgB,CAAEpD,SAAU,CAC7R,CAACnV,GAAUgE,KAgBnB,MAda,YAATwU,GACKf,EAASjQ,SACViQ,EAASjQ,OAAS,CAAC,GAEvBiQ,EAASjQ,OAAOiR,QAAUzU,EAC1ByT,EAAStC,SAAW,CAChB,CAAC,MAAeoD,IAGN,wBAATC,IACLf,EAAStC,SAAW,CAChB,CAAC,MAAenR,IAGjB,GAAGiM,MAAY,QAAcwH,IAAW,EAEtC9H,EAAmBzI,GACrBA,GAAkBA,EAAeM,QAAUN,EAAeM,OAAOmQ,WAAa,I,iBCtClF,SAAS9M,EAAmB7K,EAAU,CAAC,GAC1C,OAAIA,EAAQ8K,QACD,UAEP9K,EAAQ+K,QACD,UAEP/K,EAAQgL,KACD,OAEJ,MACX,C","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/external-link-alt-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/minus-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_FontSize_md.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_xs.js","webpack:///./src/routes/components/state/emptyValueState/emptyValueState.tsx","webpack:///./src/routes/views/details/components/actions/actions.tsx","webpack:///./src/routes/views/details/components/columnManagement/columnManagementModal.tsx","webpack:///./src/routes/views/details/components/dataTable/dataTable.styles.ts","webpack:///./src/routes/views/details/components/dataTable/dataTable.tsx","webpack:///./src/utils/computedReport/getComputedRhelReportItems.ts","webpack:///./src/routes/views/details/rhelDetails/detailsHeader.styles.ts","webpack:///./src/routes/views/details/rhelDetails/detailsHeader.tsx","webpack:///./src/routes/views/details/rhelDetails/detailsTable.tsx","webpack:///./src/routes/views/details/rhelDetails/detailsToolbar.tsx","webpack:///./src/routes/views/details/rhelDetails/rhelDetails.styles.ts","webpack:///./src/routes/views/details/rhelDetails/rhelDetails.tsx","webpack:///./src/routes/views/utils/paths.ts","webpack:///./src/utils/computedReport/getComputedOcpReportItems.ts"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExternalLinkAltIcon = createIcon(ExternalLinkAltIconConfig);\n\nexport default ExternalLinkAltIcon;","import { createIcon } from '../createIcon';\n\nexport const MinusIconConfig = {\n  name: 'MinusIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const MinusIcon = createIcon(MinusIconConfig);\n\nexport default MinusIcon;","\"use strict\";\nexports.__esModule = true;\nexports.global_FontSize_md = {\n  \"name\": \"--pf-global--FontSize--md\",\n  \"value\": \"1rem\",\n  \"var\": \"var(--pf-global--FontSize--md)\"\n};\nexports[\"default\"] = exports.global_FontSize_md;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_xs = {\n  \"name\": \"--pf-global--spacer--xs\",\n  \"value\": \"0.25rem\",\n  \"var\": \"var(--pf-global--spacer--xs)\"\n};\nexports[\"default\"] = exports.global_spacer_xs;","import './emptyValueState.scss';\nimport { MinusIcon } from '@patternfly/react-icons/dist/esm/icons/minus-icon';\nimport React from 'react';\nconst EmptyValueState = () => {\n    return (React.createElement(\"span\", { className: \"emptyValueContainer\" },\n        React.createElement(MinusIcon, null)));\n};\nexport default EmptyValueState;\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport { tagPrefix } from 'api/queries/query';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ExportModal } from 'routes/views/components/export';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nimport { withRouter } from 'utils/router';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, reportPathsType, reportQueryString } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { count: 1, groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, intl, item: { source_uuid }, redirectToCostModel, router, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, intl.formatMessage(messages.detailsActionsExport)),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], router) }, intl.formatMessage(messages.detailsActionsPriceList)));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = injectIntl(withRouter(DetailsActionsConnect));\nexport default Actions;\n","import { Button, ButtonVariant, DataList, DataListCell, DataListCheck, DataListItem, DataListItemCells, DataListItemRow, Modal, ModalVariant, Text, TextContent, TextVariants, } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nexport const initHiddenColumns = (options) => {\n    const hiddenColumns = new Set();\n    options.map(option => {\n        if (option.hidden) {\n            hiddenColumns.add(option.value);\n        }\n    });\n    return hiddenColumns;\n};\nexport class ColumnManagementModalBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            hiddenColumns: initHiddenColumns(this.props.options),\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getHidden = (value) => {\n            const { hiddenColumns } = this.state;\n            const result = new Set(hiddenColumns);\n            if (!result.delete(value)) {\n                result.add(value);\n            }\n            return result;\n        };\n        this.isHidden = (value) => {\n            const { hiddenColumns } = this.state;\n            return hiddenColumns.has(value);\n        };\n        this.handleChange = (checked, event) => {\n            const hiddenColumns = this.getHidden(event.target.id);\n            this.setState({ hiddenColumns });\n        };\n        this.handleClose = () => {\n            // Reset defult state upon close\n            this.setState(Object.assign({}, this.defaultState), () => {\n                this.props.onClose(false);\n            });\n        };\n        this.handleSave = () => {\n            const { hiddenColumns } = this.state;\n            this.props.onSave(hiddenColumns);\n            this.handleClose();\n        };\n        this.selectAll = () => {\n            this.setState({ hiddenColumns: new Set() });\n        };\n    }\n    componentDidUpdate(prevProps) {\n        const { options } = this.props;\n        if (prevProps.options !== options) {\n            const hiddenColumns = initHiddenColumns(options);\n            this.setState({ hiddenColumns });\n        }\n    }\n    render() {\n        const { options, intl } = this.props;\n        return (React.createElement(Modal, { description: React.createElement(TextContent, null,\n                React.createElement(Text, { component: TextVariants.p }, intl.formatMessage(messages.manageColumnsDesc)),\n                React.createElement(Button, { isInline: true, onClick: this.selectAll, variant: \"link\" }, intl.formatMessage(messages.selectAll))), \n            // style={styles.modal}\n            isOpen: this.props.isOpen, onClose: this.handleClose, title: intl.formatMessage(messages.manageColumnsTitle), variant: ModalVariant.medium, actions: [\n                React.createElement(Button, { key: \"save\", onClick: this.handleSave, variant: ButtonVariant.link }, intl.formatMessage(messages.save)),\n                React.createElement(Button, { key: \"cancel\", onClick: this.handleClose, variant: ButtonVariant.link }, intl.formatMessage(messages.cancel)),\n            ] },\n            React.createElement(DataList, { \"aria-label\": intl.formatMessage(messages.manageColumnsAriaLabel), id: \"table-column-management\", isCompact: true }, options.map(option => (React.createElement(DataListItem, { \"aria-labelledby\": option.value, key: option.value },\n                React.createElement(DataListItemRow, null,\n                    React.createElement(DataListCheck, { \"aria-labelledby\": `${option.value}Label`, isChecked: !this.isHidden(option.value), name: option.value, id: option.value, onChange: this.handleChange }),\n                    React.createElement(DataListItemCells, { dataListCells: [\n                            React.createElement(DataListCell, { id: `${option.value}Label`, key: \"table-column-management-item1\" },\n                                React.createElement(\"span\", null, intl.formatMessage(option.label))),\n                            React.createElement(DataListCell, { key: \"table-column-management-item2\" }, option.description && React.createElement(\"span\", null, intl.formatMessage(option.description))),\n                        ] }))))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {};\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst ColumnManagementModalConnect = connect(mapStateToProps, mapDispatchToProps)(ColumnManagementModalBase);\nconst ColumnManagementModal = injectIntl(ColumnManagementModalConnect);\nexport default ColumnManagementModal;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    costColumn: {\n        textAlign: 'right',\n    },\n    defaultLabel: {\n        minWidth: '63px',\n    },\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    nameColumn: {\n        width: '1%',\n    },\n};\n","import { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport { parseQuery } from 'api/queries/ocpQuery';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass DataTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { intl, router } = this.props;\n            const queryFromRoute = parseQuery(router.location.search);\n            if (queryFromRoute.filter_by) {\n                for (const val of Object.values(queryFromRoute.filter_by)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, router } = this.props;\n            const orderBy = columns[index].orderBy;\n            const queryFromRoute = parseQuery(router.location.search);\n            const direction = queryFromRoute && queryFromRoute.order_by && queryFromRoute.order_by[orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected, rows } = this.props;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isLoading, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.dataTableAriaLabel), gridBreakPoint: \"grid-2xl\" },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${cellIndex}-${rowIndex}`, modifier: \"nowrap\", select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    } })) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", isActionCell: cellIndex === row.cells.length - 1 }, item.value))))))))),\n            Boolean(rows.length === 0) && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(DataTable));\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costValue: {\n        marginTop: global_spacer_lg.var,\n        marginBottom: 0,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    dateTitle: {\n        textAlign: 'end',\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentLeft: {\n        display: 'flex',\n        minHeight: '90px',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    info: {\n        verticalAlign: 'middle',\n    },\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes, Tooltip } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { TagPathsType } from 'api/tags/tag';\nimport { ExportsLink } from 'components/exports';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Currency } from 'routes/components/currency';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { GroupBy } from 'routes/views/components/groupBy';\nimport { filterProviders } from 'routes/views/utils/providers';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedRhelReportItems';\nimport { getSinceDateRangeString } from 'utils/dates';\nimport { formatCurrency } from 'utils/format';\nimport { styles } from './detailsHeader.styles';\nconst groupByOptions = [\n    { label: 'cluster', value: 'cluster' },\n    { label: 'node', value: 'node' },\n    { label: 'project', value: 'project' },\n];\nconst tagReportPathsType = TagPathsType.rhel;\nclass DetailsHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { currency, groupBy, isCurrencyFeatureEnabled, isExportsFeatureEnabled, onCurrencySelected, onGroupBySelected, providers, providersError, report, intl, } = this.props;\n        const showContent = report && !providersError && providers && providers.meta && providers.meta.count > 0;\n        let cost = React.createElement(EmptyValueState, null);\n        let supplementaryCost = React.createElement(EmptyValueState, null);\n        let infrastructureCost = React.createElement(EmptyValueState, null);\n        if (report && report.meta && report.meta.total) {\n            const hasCost = report.meta.total.cost && report.meta.total.cost.total;\n            const hasSupplementaryCost = report.meta.total.supplementary && report.meta.total.supplementary.total;\n            const hasInfrastructureCost = report.meta.total.infrastructure && report.meta.total.infrastructure.total;\n            cost = formatCurrency(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD');\n            supplementaryCost = formatCurrency(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost ? report.meta.total.supplementary.total.units : 'USD');\n            infrastructureCost = formatCurrency(hasInfrastructureCost ? report.meta.total.infrastructure.total.value : 0, hasInfrastructureCost ? report.meta.total.infrastructure.total.units : 'USD');\n        }\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.rhelDetailsTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    isCurrencyFeatureEnabled && React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(\"div\", { style: styles.headerContentLeft },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: !showContent, onSelected: onGroupBySelected, options: groupByOptions, showTags: true, tagReportPathsType: tagReportPathsType })),\n                Boolean(showContent) && (React.createElement(\"div\", null,\n                    React.createElement(Tooltip, { content: intl.formatMessage(messages.dashboardTotalCostTooltip, {\n                            infrastructureCost,\n                            supplementaryCost,\n                        }), enableFlip: true },\n                        React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: TitleSizes['4xl'] }, cost)),\n                    React.createElement(\"div\", { style: styles.dateTitle }, getSinceDateRangeString()))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        isCurrencyFeatureEnabled: featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state),\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        providers: filterProviders(providers, ProviderType.rhel),\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n    };\n});\nconst DetailsHeader = injectIntl(connect(mapStateToProps, {})(DetailsHeaderBase));\nexport { DetailsHeader };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport 'routes/views/details/components/dataTable/dataTable.scss';\nimport { Label } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { platformCategory, unallocatedPlatformCapacity, unallocatedWorkersCapacity } from 'api/queries/query';\nimport { ReportPathsType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { paths } from 'routes';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { Actions } from 'routes/views/details/components/actions';\nimport { DataTable } from 'routes/views/details/components/dataTable';\nimport { styles } from 'routes/views/details/components/dataTable/dataTable.styles';\nimport { getBreakdownPath } from 'routes/views/utils/paths';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getForDateRangeString, getNoDataForDateRangeString } from 'utils/dates';\nimport { formatCurrency, formatPercentage } from 'utils/format';\nimport { withRouter } from 'utils/router';\nexport const DetailsTableColumnIds = {\n    infrastructure: 'infrastructure',\n    monthOverMonth: 'monthOverMonth',\n    supplementary: 'supplementary',\n};\nconst reportPathsType = ReportPathsType.rhel;\nclass DetailsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { groupBy, groupByTagKey, hiddenColumns, intl, isAllSelected, report, router, selectedItems } = this.props;\n            if (!report) {\n                return;\n            }\n            const showDefaultProject = groupBy === 'project';\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey ? groupByTagKey : groupBy,\n            });\n            const columns = groupByTagKey\n                ? [\n                    // Sorting with tag keys is not supported\n                    {\n                        name: '',\n                    },\n                    {\n                        name: intl.formatMessage(messages.tagNames),\n                        style: groupBy === 'project' ? styles.nameColumn : undefined,\n                    },\n                    {\n                        hidden: !showDefaultProject,\n                        name: '', // Default column\n                    },\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    {\n                        id: DetailsTableColumnIds.infrastructure,\n                        name: intl.formatMessage(messages.rhelDetailsInfrastructureCost),\n                        style: styles.costColumn,\n                    },\n                    {\n                        id: DetailsTableColumnIds.supplementary,\n                        name: intl.formatMessage(messages.rhelDetailsSupplementaryCost),\n                        style: styles.costColumn,\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign(Object.assign({ orderBy: groupBy, name: intl.formatMessage(messages.detailsResourceNames, { value: groupBy }) }, (computedItems.length && { isSortable: true })), { style: groupBy === 'project' ? styles.nameColumn : undefined }),\n                    {\n                        hidden: !showDefaultProject,\n                        name: '', // Default column\n                    },\n                    {\n                        id: DetailsTableColumnIds.monthOverMonth,\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    {\n                        id: DetailsTableColumnIds.infrastructure,\n                        orderBy: 'infrastructure_cost',\n                        name: intl.formatMessage(messages.rhelDetailsInfrastructureCost),\n                        style: styles.costColumn,\n                        // Sort by infrastructure_cost is not supported -- https://github.com/project-koku/koku/issues/796\n                        // ...(computedItems.length && { isSortable: true }),\n                    },\n                    {\n                        id: DetailsTableColumnIds.supplementary,\n                        orderBy: 'supplementary_cost',\n                        name: intl.formatMessage(messages.rhelDetailsSupplementaryCost),\n                        style: styles.costColumn,\n                        // Sort by supplementary_cost is not supported -- https://github.com/project-koku/koku/issues/796\n                        // ...(computedItems.length && { isSortable: true }),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ];\n            computedItems.map((item, index) => {\n                const cost = this.getTotalCost(item, index);\n                const label = item && item.label !== null ? item.label : '';\n                const monthOverMonth = this.getMonthOverMonthCost(item, index);\n                const supplementaryCost = this.getSupplementaryCost(item, index);\n                const InfrastructureCost = this.getInfrastructureCost(item, index);\n                const isPlatformCosts = item.classification === 'category' && item.label === platformCategory;\n                const isUnallocatedCosts = item.label === unallocatedPlatformCapacity || item.label === unallocatedWorkersCapacity;\n                const desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                const isDisabled = label === `no-${groupBy}` || label === `no-${groupByTagKey}` || isUnallocatedCosts;\n                const actions = this.getActions(item, isDisabled);\n                const name = isDisabled ? label : (React.createElement(Link, { to: getBreakdownPath({\n                        basePath: paths.rhelDetailsBreakdown,\n                        label: label.toString(),\n                        description: item.id,\n                        isPlatformCosts,\n                        groupBy,\n                        router,\n                    }) }, label));\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: (React.createElement(React.Fragment, null,\n                                React.createElement(\"div\", null, name),\n                                React.createElement(\"div\", { style: styles.infoDescription }, desc))),\n                        },\n                        {\n                            hidden: !showDefaultProject,\n                            value: item.default_project ? (React.createElement(\"div\", null,\n                                React.createElement(Label, { variant: \"outline\", color: \"green\" }, intl.formatMessage(messages.default)))) : (React.createElement(\"div\", { style: styles.defaultLabel })),\n                        },\n                        { value: React.createElement(\"div\", null, monthOverMonth), id: DetailsTableColumnIds.monthOverMonth },\n                        { value: React.createElement(\"div\", null, InfrastructureCost), id: DetailsTableColumnIds.infrastructure },\n                        { value: React.createElement(\"div\", null, supplementaryCost), id: DetailsTableColumnIds.supplementary },\n                        { value: React.createElement(\"div\", null, cost) },\n                        { value: React.createElement(\"div\", null, actions) },\n                    ],\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                    selectionDisabled: isDisabled,\n                });\n            });\n            const filteredColumns = columns.filter(column => !hiddenColumns.has(column.id) && !column.hidden);\n            const filteredRows = rows.map((_a) => {\n                var row = __rest(_a, []);\n                row.cells = row.cells.filter(cell => !hiddenColumns.has(cell.id) && !cell.hidden);\n                return row;\n            });\n            this.setState({\n                columns: filteredColumns,\n                rows: filteredRows,\n            });\n        };\n        this.getActions = (item, isDisabled) => {\n            const { groupBy, reportQueryString } = this.props;\n            return (React.createElement(Actions, { groupBy: groupBy, isDisabled: isDisabled, item: item, providerType: ProviderType.rhel, reportPathsType: reportPathsType, reportQueryString: reportQueryString, showPriceListOption: groupBy === 'cluster' }));\n        };\n        this.getSupplementaryCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.supplementary.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.supplementary.total.value, item.supplementary.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n        this.getInfrastructureCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.infrastructure.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.infrastructure.total.value, item.infrastructure.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n        this.getMonthOverMonthCost = (item, index) => {\n            const { intl } = this.props;\n            const value = formatCurrency(Math.abs(item.cost.total.value - item.delta_value), item.cost.total.units);\n            const percentage = item.delta_percent !== null ? formatPercentage(Math.abs(item.delta_percent)) : 0;\n            const showPercentage = !(percentage === 0 || percentage === '0.00');\n            const showValue = item.delta_percent !== null; // Workaround for https://github.com/project-koku/koku/issues/1395\n            let iconOverride;\n            if (showPercentage) {\n                iconOverride = 'iconOverride';\n                if (item.delta_percent !== null && item.delta_value < 0) {\n                    iconOverride += ' decrease';\n                }\n                if (item.delta_percent !== null && item.delta_value > 0) {\n                    iconOverride += ' increase';\n                }\n            }\n            if (!showValue) {\n                return getNoDataForDateRangeString();\n            }\n            else {\n                return (React.createElement(\"div\", { className: \"monthOverMonthOverride\" },\n                    React.createElement(\"div\", { className: iconOverride, key: `month-over-month-cost-${index}` },\n                        showPercentage ? intl.formatMessage(messages.percent, { value: percentage }) : React.createElement(EmptyValueState, null),\n                        Boolean(showPercentage && item.delta_percent !== null && item.delta_value > 0) && (React.createElement(\"span\", { className: \"fa fa-sort-up\", style: styles.infoArrow, key: `month-over-month-icon-${index}` })),\n                        Boolean(showPercentage && item.delta_percent !== null && item.delta_value < 0) && (React.createElement(\"span\", { className: \"fa fa-sort-down\", style: Object.assign(Object.assign({}, styles.ininfoArrow), styles.infoArrowDesc), key: `month-over-month-icon-${index}` }))),\n                    React.createElement(\"div\", { style: styles.infoDescription, key: `month-over-month-info-${index}` }, getForDateRangeString(value))));\n            }\n        };\n        this.getTotalCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.cost.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.cost.total.value, item.cost.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { hiddenColumns, report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport ||\n            prevProps.selectedItems !== selectedItems ||\n            prevProps.hiddenColumns !== hiddenColumns) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { isLoading, onSelected, onSort, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, isLoading: isLoading, onSelected: onSelected, onSort: onSort, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst DetailsTable = injectIntl(withRouter(DetailsTableBase));\nexport { DetailsTable };\n","import { getQuery } from 'api/queries/ocpQuery';\nimport { tagKey } from 'api/queries/query';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType, TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { isEqual } from 'utils/equal';\nconst tagReportType = TagType.tag;\nconst tagReportPathsType = TagPathsType.ocp;\nexport class DetailsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { intl, tagReport } = this.props;\n            const options = [\n                { name: intl.formatMessage(messages.filterByValues, { value: 'cluster' }), key: 'cluster' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'node' }), key: 'node' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'project' }), key: 'project' },\n            ];\n            if (tagReport && tagReport.data && tagReport.data.length) {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: tagKey }),\n                    key: tagKey,\n                });\n            }\n            return options;\n        };\n    }\n    componentDidMount() {\n        const { fetchTag, tagReportFetchStatus, tagQueryString } = this.props;\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        }, () => {\n            if (tagReportFetchStatus !== FetchStatus.inProgress) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchTag, query, tagReport, tagReportFetchStatus, tagQueryString } = this.props;\n        if (!isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            }, () => {\n                if (tagReportFetchStatus !== FetchStatus.inProgress) {\n                    fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n                }\n            });\n        }\n        else if (query && !isEqual(query, prevProps.query) && tagReportFetchStatus !== FetchStatus.inProgress) {\n            fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n        }\n    }\n    render() {\n        const { groupBy, isAllSelected, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onColumnManagementClicked, onExportClicked, onFilterAdded, onFilterRemoved, onPlatformCostsChanged, pagination, query, selectedItems, tagReport, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, groupBy: groupBy, isAllSelected: isAllSelected, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onColumnManagementClicked: onColumnManagementClicked, onExportClicked: onExportClicked, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, onPlatformCostsChanged: onPlatformCostsChanged, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.ocp, selectedItems: selectedItems, showBulkSelect: true, showColumnManagement: true, showExport: true, showFilter: true, showPlatformCosts: groupBy === 'project', tagReport: tagReport, tagReportPathsType: tagReportPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        key_only: true,\n        limit: 1000,\n    });\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, tagQueryString);\n    return {\n        tagReport,\n        tagReportFetchStatus,\n        tagQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst DetailsToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsToolbarBase);\nconst DetailsToolbar = injectIntl(DetailsToolbarConnect);\nexport { DetailsToolbar };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    ocpDetails: {\n        minHeight: '100%',\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getQuery, parseQuery } from 'api/queries/ocpQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { tagPrefix } from 'api/queries/query';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport { cloneDeep } from 'lodash';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoData } from 'routes/state/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { ExportModal } from 'routes/views/components/export';\nimport { ColumnManagementModal, initHiddenColumns } from 'routes/views/details/components/columnManagement';\nimport { getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { handleCurrencySelected, handleFilterAdded, handleFilterRemoved, handlePerPageSelect, handleSetPage, handleSort, } from 'routes/views/utils/handles';\nimport { filterProviders, hasCurrentMonthData } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedOcpReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getCurrency } from 'utils/localStorage';\nimport { withRouter } from 'utils/router';\nimport { DetailsHeader } from './detailsHeader';\nimport { DetailsTable, DetailsTableColumnIds } from './detailsTable';\nimport { DetailsToolbar } from './detailsToolbar';\nimport { styles } from './rhelDetails.styles';\nconst baseQuery = {\n    delta: 'cost',\n    filter: {\n        limit: 10,\n        offset: 0,\n        resolution: 'monthly',\n        time_scope_units: 'month',\n        time_scope_value: -1,\n    },\n    exclude: {},\n    filter_by: {},\n    group_by: {\n        project: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst defaultColumnOptions = [\n    { label: messages.monthOverMonthChange, value: DetailsTableColumnIds.monthOverMonth },\n    {\n        description: messages.ocpDetailsInfrastructureCostDesc,\n        label: messages.ocpDetailsInfrastructureCost,\n        value: DetailsTableColumnIds.infrastructure,\n        hidden: true,\n    },\n    {\n        description: messages.ocpDetailsSupplementaryCostDesc,\n        label: messages.ocpDetailsSupplementaryCost,\n        value: DetailsTableColumnIds.supplementary,\n        hidden: true,\n    },\n];\nconst reportType = ReportType.cost;\nconst reportPathsType = ReportPathsType.ocp;\nclass RhelDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            hiddenColumns: initHiddenColumns(defaultColumnOptions),\n            isAllSelected: false,\n            isColumnManagementModalOpen: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getColumnManagementModal = () => {\n            const { hiddenColumns, isColumnManagementModalOpen } = this.state;\n            const options = cloneDeep(defaultColumnOptions);\n            options.map(option => {\n                option.hidden = hiddenColumns.has(option.value);\n            });\n            return (React.createElement(ColumnManagementModal, { isOpen: isColumnManagementModalOpen, options: options, onClose: this.handleColumnManagementModalClose, onSave: this.handleColumnManagementModalSave }));\n        };\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey || groupById,\n            });\n        };\n        this.getExportModal = (computedItems) => {\n            const { query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `no-${groupById}` || item.label === `no-${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getPagination = (isBottom = false) => {\n            const { intl, query, report, router } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = offset / limit + 1;\n            return (React.createElement(Pagination, { isCompact: !isBottom, itemCount: count, onPerPageSelect: (event, perPage) => handlePerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.openShift),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { query, report, reportFetchStatus, reportQueryString, router } = this.props;\n            const { hiddenColumns, isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return (React.createElement(DetailsTable, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, groupByTagKey: groupByTagKey, hiddenColumns: hiddenColumns, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending) => handleSort(query, router, sortType, isSortAscending), report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, report, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(DetailsToolbar, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isAllSelected: isAllSelected, isExportDisabled: computedItems.length === 0 || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onColumnManagementClicked: this.handleColumnManagementModalOpen, onExportClicked: this.handleExportModalOpen, onFilterAdded: filter => handleFilterAdded(query, router, filter), onFilterRemoved: filter => handleFilterRemoved(query, router, filter), onPlatformCostsChanged: this.handlePlatformCostsChanged, pagination: this.getPagination(), query: query, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleColumnManagementModalClose = (isOpen) => {\n            this.setState({ isColumnManagementModalOpen: isOpen });\n        };\n        this.handleColumnManagementModalOpen = () => {\n            this.setState({ isColumnManagementModalOpen: true });\n        };\n        this.handleColumnManagementModalSave = (hiddenColumns) => {\n            this.setState({ hiddenColumns });\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            const groupByKey = groupBy;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: '*',\n                }, order_by: { cost: 'desc' }, category: undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handlePlatformCostsChanged = (checked) => {\n            const { query, router } = this.props;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { category: checked ? 'platform' : undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.updateReport = () => {\n            const { fetchReport, query, reportQueryString, router } = this.props;\n            if (!router.location.search) {\n                router.navigate(getRouteForQuery({\n                    exclude: query ? query.exclude : undefined,\n                    filter_by: query ? query.filter_by : undefined,\n                    group_by: query ? query.group_by : undefined,\n                    order_by: { cost: 'desc' },\n                }, router.location), {\n                    replace: true,\n                });\n            }\n            else {\n                fetchReport(reportPathsType, reportType, reportQueryString);\n            }\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleColumnManagementModalClose = this.handleColumnManagementModalClose.bind(this);\n        this.handleColumnManagementModalOpen = this.handleColumnManagementModalOpen.bind(this);\n        this.handleColumnManagementModalSave = this.handleColumnManagementModalSave.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handlePlatformCostsChanged = this.handlePlatformCostsChanged.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { currency, intl, providers, providersFetchStatus, query, report, reportError, reportFetchStatus, router } = this.props;\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const computedItems = this.getComputedItems();\n        const title = intl.formatMessage(messages.ocpDetailsTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.inProgress) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.complete) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: ProviderType.ocp, title: title });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.ocpDetails },\n            React.createElement(DetailsHeader, { currency: currency, groupBy: groupById, onCurrencySelected: value => handleCurrencySelected(query, router, value), onGroupBySelected: this.handleGroupBySelected, report: report }),\n            React.createElement(\"div\", { style: styles.content },\n                this.getToolbar(computedItems),\n                this.getExportModal(computedItems),\n                this.getColumnManagementModal(),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const currency = featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state) ? getCurrency() : undefined;\n    const query = {\n        delta: 'cost',\n        filter: Object.assign(Object.assign({}, baseQuery.filter), queryFromRoute.filter),\n        filter_by: queryFromRoute.filter_by || baseQuery.filter_by,\n        exclude: queryFromRoute.exclude || baseQuery.exclude,\n        group_by: queryFromRoute.group_by || baseQuery.group_by,\n        order_by: queryFromRoute.order_by || baseQuery.order_by,\n        category: queryFromRoute.category,\n    };\n    const reportQueryString = getQuery(Object.assign(Object.assign({}, query), { currency }));\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        currency,\n        providers: filterProviders(providers, ProviderType.ocp),\n        providersFetchStatus,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(RhelDetails)));\n","import { getQueryRoute, platformCategory } from 'api/queries/query';\nimport { breakdownDescKey, breakdownTitleKey, orgUnitIdKey } from 'api/queries/query';\nimport { parseQuery } from 'api/queries/query';\nexport const getBreakdownPath = ({ basePath, description, groupBy, isPlatformCosts, label, router, }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const newQuery = Object.assign(Object.assign(Object.assign(Object.assign({}, queryFromRoute), (description && description !== label && { [breakdownDescKey]: description })), (isPlatformCosts && { [breakdownTitleKey]: label })), { group_by: {\n            [groupBy]: isPlatformCosts ? '*' : label,\n        } });\n    if (isPlatformCosts) {\n        if (!newQuery.filter) {\n            newQuery.filter = {};\n        }\n        newQuery.filter.category = platformCategory;\n    }\n    return `${basePath}?${getQueryRoute(newQuery)}`;\n};\nexport const getOrgBreakdownPath = ({ basePath, description, groupBy, groupByOrg, id, router, title, type, }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const newQuery = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, queryFromRoute), (description && description !== title && { [breakdownDescKey]: description })), (title && { [breakdownTitleKey]: title })), (groupByOrg && { [orgUnitIdKey]: groupByOrg })), { group_by: {\n            [groupBy]: id, // This may be overridden below\n        } });\n    if (type === 'account') {\n        if (!newQuery.filter) {\n            newQuery.filter = {};\n        }\n        newQuery.filter.account = id;\n        newQuery.group_by = {\n            [orgUnitIdKey]: groupByOrg,\n        };\n    }\n    else if (type === 'organizational_unit') {\n        newQuery.group_by = {\n            [orgUnitIdKey]: id,\n        };\n    }\n    return `${basePath}?${getQueryRoute(newQuery)}`;\n};\nexport const isPlatformCosts = (queryFromRoute) => {\n    return queryFromRoute && queryFromRoute.filter && queryFromRoute.filter.category === platformCategory;\n};\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    return 'date';\n}\n"],"names":["ExternalLinkAltIconConfig","name","height","width","svgPath","yOffset","xOffset","ExternalLinkAltIcon","MinusIconConfig","MinusIcon","exports","className","DetailsActionsBase","constructor","stateProps","dispatchProps","super","this","defaultState","isDropdownOpen","isExportModalOpen","state","Object","assign","getExportModal","groupBy","item","reportPathsType","reportQueryString","props","count","isOpen","items","onClose","handleExportModalClose","setState","handleExportModalOpen","handleOnSelect","handleOnToggle","bind","render","isDisabled","showPriceListOption","intl","source_uuid","redirectToCostModel","router","DropdownItem","component","key","onClick","formatMessage","messages","unshift","includes","length","Dropdown","onSelect","toggle","KebabToggle","onToggle","isPlain","position","dropdownItems","mapStateToProps","mapDispatchToProps","costModels","DetailsActionsConnect","connect","injectIntl","initHiddenColumns","options","hiddenColumns","Set","map","option","hidden","add","value","ColumnManagementModalBase","getHidden","result","delete","isHidden","has","handleChange","checked","event","target","id","handleClose","handleSave","onSave","selectAll","componentDidUpdate","prevProps","Modal","description","TextContent","Text","TextVariants","Button","isInline","variant","title","ModalVariant","actions","ButtonVariant","DataList","isCompact","DataListItem","DataListItemRow","DataListCheck","isChecked","onChange","DataListItemCells","dataListCells","DataListCell","label","ColumnManagementModalConnect","styles","costColumn","textAlign","defaultLabel","minWidth","emptyState","backgroundColor","display","justifyContent","paddingTop","infoArrow","infoArrowDesc","bottom","infoDescription","color","fontSize","nameColumn","DataTable","getEmptyState","queryFromRoute","location","search","filter_by","val","values","filter","showMargin","EmptyState","EmptyStateIcon","icon","EmptyStateBody","getSortBy","index","columns","orderBy","direction","order_by","getSortParams","sortBy","onSort","handleOnSort","columnIndex","isSelected","rowId","onSelected","rows","newRows","row","selected","SortByDirection","isLoading","TableComposable","gridBreakPoint","Thead","Tr","col","Th","modifier","sort","isSortable","undefined","style","Tbody","Td","colSpan","Bullseye","Spinner","size","rowIndex","cells","cellIndex","dataLabel","select","disable","selectionDisabled","_event","isActionCell","Boolean","getIdKeyForGroupBy","project","cluster","node","costValue","marginTop","global_spacer_lg","marginBottom","costLabelUnit","global_FontSize_sm","global_Color_100","dateTitle","header","global_BackgroundColor_light_100","padding","headerContent","headerContentLeft","minHeight","headerContentRight","info","verticalAlign","infoIcon","global_FontSize_md","infoTitle","fontWeight","paddingBottom","global_spacer_sm","groupByOptions","tagReportPathsType","DetailsHeaderBase","arguments","currency","isCurrencyFeatureEnabled","isExportsFeatureEnabled","onCurrencySelected","onGroupBySelected","providers","providersError","report","showContent","meta","cost","supplementaryCost","infrastructureCost","total","hasCost","hasSupplementaryCost","supplementary","hasInfrastructureCost","infrastructure","format","units","Title","headingLevel","TitleSizes","showTags","Tooltip","content","enableFlip","providersQueryString","providersFetchStatus","featureFlags","DetailsHeader","DetailsTableColumnIds","DetailsTableBase","initDatum","groupByTagKey","isAllSelected","selectedItems","showDefaultProject","computedItems","idKey","getTotalCost","monthOverMonth","getMonthOverMonthCost","getSupplementaryCost","InfrastructureCost","getInfrastructureCost","isPlatformCosts","classification","isUnallocatedCosts","desc","getActions","to","basePath","toString","push","default_project","Label","find","filteredColumns","column","filteredRows","_a","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","__rest","cell","providerType","percentValue","toFixed","Math","abs","delta_value","percentage","delta_percent","showPercentage","showValue","iconOverride","componentDidMount","currentReport","data","JSON","stringify","DetailsTable","tagReportType","DetailsToolbarBase","getCategoryOptions","tagReport","fetchTag","tagReportFetchStatus","tagQueryString","categoryOptions","query","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onColumnManagementClicked","onExportClicked","onFilterAdded","onFilterRemoved","onPlatformCostsChanged","pagination","resourcePathsType","showBulkSelect","showColumnManagement","showExport","showFilter","showPlatformCosts","resolution","time_scope_units","time_scope_value","key_only","limit","DetailsToolbarConnect","DetailsToolbar","ocpDetails","paginationContainer","marginLeft","marginRight","global_spacer_md","tableContainer","baseQuery","delta","offset","exclude","group_by","defaultColumnOptions","reportType","RhelDetails","isColumnManagementModalOpen","getColumnManagementModal","cloneDeep","handleColumnManagementModalClose","handleColumnManagementModalSave","getComputedItems","groupById","isAllItems","getPagination","isBottom","page","Pagination","itemCount","onPerPageSelect","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","PaginationVariant","widgetId","getTable","reportFetchStatus","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","handleColumnManagementModalOpen","handlePlatformCostsChanged","action","handleGroupBySelected","groupByKey","newQuery","parse","category","navigate","replace","newItems","updateReport","fetchReport","prevState","reportError","noReport","noLocation","getBreakdownPath","getOrgBreakdownPath","groupByOrg","type","account"],"sourceRoot":""}