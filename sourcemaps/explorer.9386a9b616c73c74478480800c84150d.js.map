{"version":3,"file":"js/explorer.590d7191c62c04deb16d.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-tokens/dist/js/chart_color_cyan_300.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/chart_color_gold_300.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/chart_color_purple_300.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_Color_200.js","webpack:///./src/api/queries/userAccessQuery.ts","webpack:///./src/routes/views/components/charts/chartTheme/theme-koku.ts","webpack:///./src/routes/views/components/charts/chartTheme/index.ts","webpack:///./src/routes/views/components/charts/chartTheme/theme-utils.ts","webpack:///./src/routes/views/components/perspective/perspective.tsx","webpack:///./src/utils/computedReport/getComputedExplorerReportItems.ts","webpack:///./src/routes/views/explorer/explorer.styles.ts","webpack:///./node_modules/victory-stack/es/helper-methods.js","webpack:///./node_modules/victory-stack/es/victory-stack.js","webpack:///./node_modules/@patternfly/react-charts/dist/esm/components/ChartStack/ChartStack.js","webpack:///./src/routes/views/components/charts/costExplorerChart/costExplorerChart.styles.ts","webpack:///./src/routes/views/components/charts/costExplorerChart/costExplorerChart.tsx","webpack:///./src/routes/views/explorer/explorerChart.styles.ts","webpack:///./src/routes/views/explorer/explorerUtils.ts","webpack:///./src/routes/views/explorer/explorerChart.tsx","webpack:///./src/routes/views/explorer/explorerDatePicker.styles.ts","webpack:///./src/routes/views/explorer/explorerDatePicker.tsx","webpack:///./src/routes/views/explorer/explorerDateRange.tsx","webpack:///./src/routes/views/explorer/explorerFilter.styles.ts","webpack:///./src/routes/views/explorer/explorerFilter.tsx","webpack:///./src/routes/views/explorer/explorerHeader.styles.ts","webpack:///./src/routes/views/explorer/explorerHeader.tsx","webpack:///./src/routes/views/explorer/explorerTable.styles.ts","webpack:///./src/routes/views/explorer/explorerTable.tsx","webpack:///./src/routes/views/explorer/explorerToolbar.tsx","webpack:///./src/routes/views/explorer/explorer.tsx","webpack:///./src/utils/skeleton.ts","webpack:///./src/utils/userAccess.ts"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.chart_color_cyan_300 = {\n  \"name\": \"--pf-chart-color-cyan-300\",\n  \"value\": \"#009596\",\n  \"var\": \"var(--pf-chart-color-cyan-300, #009596)\"\n};\nexports[\"default\"] = exports.chart_color_cyan_300;","\"use strict\";\nexports.__esModule = true;\nexports.chart_color_gold_300 = {\n  \"name\": \"--pf-chart-color-gold-300\",\n  \"value\": \"#f4c145\",\n  \"var\": \"var(--pf-chart-color-gold-300, #f4c145)\"\n};\nexports[\"default\"] = exports.chart_color_gold_300;","\"use strict\";\nexports.__esModule = true;\nexports.chart_color_purple_300 = {\n  \"name\": \"--pf-chart-color-purple-300\",\n  \"value\": \"#5752d1\",\n  \"var\": \"var(--pf-chart-color-purple-300, #5752d1)\"\n};\nexports[\"default\"] = exports.chart_color_purple_300;","\"use strict\";\nexports.__esModule = true;\nexports.global_Color_200 = {\n  \"name\": \"--pf-global--Color--200\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--Color--200)\"\n};\nexports[\"default\"] = exports.global_Color_200;","import { parse, stringify } from 'qs';\nexport function getUserAccessQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseUserAccessQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","// Layout\nconst LAYOUT_PROPS = {\n    padding: 8,\n};\n// Victory theme properties only\nexport default {\n    area: Object.assign({}, LAYOUT_PROPS),\n    axis: Object.assign({}, LAYOUT_PROPS),\n    bar: Object.assign({}, LAYOUT_PROPS),\n    boxplot: Object.assign({}, LAYOUT_PROPS),\n    candlestick: Object.assign({}, LAYOUT_PROPS),\n    chart: Object.assign({}, LAYOUT_PROPS),\n    errorbar: Object.assign({}, LAYOUT_PROPS),\n    group: Object.assign({}, LAYOUT_PROPS),\n    legend: {},\n    line: Object.assign({}, LAYOUT_PROPS),\n    pie: Object.assign({}, LAYOUT_PROPS),\n    scatter: Object.assign({}, LAYOUT_PROPS),\n    stack: Object.assign({}, LAYOUT_PROPS),\n    tooltip: {},\n    voronoi: Object.assign({}, LAYOUT_PROPS),\n};\n","import getTheme from './theme-utils';\nconst ChartTheme = getTheme();\nexport default ChartTheme;\n","import { ChartThemeColor, getCustomTheme } from '@patternfly/react-charts';\nimport { default as ChartTheme } from './theme-koku';\n// Applies theme color and variant to base theme\nconst getTheme = () => getCustomTheme(ChartThemeColor.default, null, ChartTheme);\nexport default getTheme;\n","import messages from 'locales/messages';\nimport React from 'react';\nimport { PerspectiveSelect } from 'routes/views/components/perspective/perspectiveSelect';\n// Infrastructure AWS options\nconst infrastructureAwsOptions = [{ label: messages.perspectiveValues, value: 'aws' }];\n// Infrastructure AWS filtered by OpenShift options\nconst infrastructureAwsOcpOptions = [{ label: messages.perspectiveValues, value: 'aws_ocp' }];\n// Infrastructure Azure options\nconst infrastructureAzureOptions = [{ label: messages.perspectiveValues, value: 'azure' }];\n// Infrastructure Oci options\nconst infrastructureOciOptions = [{ label: messages.perspectiveValues, value: 'oci' }];\n// Infrastructure Azure filtered by OpenShift options\nconst infrastructureAzureOcpOptions = [{ label: messages.perspectiveValues, value: 'azure_ocp' }];\n// Infrastructure GCP options\nconst infrastructureGcpOptions = [{ label: messages.perspectiveValues, value: 'gcp' }];\n// Infrastructure GCP filtered by OCP options\nconst infrastructureGcpOcpOptions = [{ label: messages.perspectiveValues, value: 'gcp_ocp' }];\n// Infrastructure IBM options\nconst infrastructureIbmOptions = [{ label: messages.perspectiveValues, value: 'ibm' }];\n// Infrastructure IBM filtered by OCP options\nconst infrastructureIbmOcpOptions = [{ label: messages.perspectiveValues, value: 'ibm_ocp' }];\n// Infrastructure Ocp cloud options\nconst infrastructureOcpCloudOptions = [{ label: messages.perspectiveValues, value: 'ocp_cloud' }];\n// Ocp options\nconst ocpOptions = [{ label: messages.perspectiveValues, value: 'ocp' }];\n// RHEL options\nconst rhelOptions = [{ label: messages.perspectiveValues, value: 'rhel' }];\nconst getInfrastructureOptions = ({ hasAws, hasAwsOcp, hasAzure, hasAzureOcp, hasGcp, hasGcpOcp, hasIbm, hasIbmOcp, hasOci, isIbmFeatureEnabled, }) => {\n    const options = [];\n    if (hasAws) {\n        options.push(...infrastructureAwsOptions);\n    }\n    if (hasAwsOcp) {\n        options.push(...infrastructureAwsOcpOptions);\n    }\n    if (hasGcp) {\n        options.push(...infrastructureGcpOptions);\n    }\n    if (hasGcpOcp) {\n        options.push(...infrastructureGcpOcpOptions);\n    }\n    if (hasIbm) {\n        options.push(...infrastructureIbmOptions);\n    }\n    if (hasIbmOcp && isIbmFeatureEnabled) {\n        options.push(...infrastructureIbmOcpOptions);\n    }\n    if (hasAzure) {\n        options.push(...infrastructureAzureOptions);\n    }\n    if (hasAzureOcp) {\n        options.push(...infrastructureAzureOcpOptions);\n    }\n    if (hasOci) {\n        options.push(...infrastructureOciOptions);\n    }\n    return options;\n};\nconst Perspective = ({ currentItem, hasAws, hasAwsOcp, hasAzure, hasAzureOcp, hasGcp, hasGcpOcp, hasIbm, hasIbmOcp, hasOci, hasOcp, hasOcpCloud, hasRhel, isDisabled, isIbmFeatureEnabled, isInfrastructureTab, isRhelTab, onSelected, }) => {\n    // Dynamically show options if providers are available\n    const options = [];\n    // Note isInfrastructureTab and isRhelTab will be undefined for cost explorer\n    if (isInfrastructureTab !== undefined || isRhelTab !== undefined) {\n        if (isInfrastructureTab) {\n            if (hasOcpCloud) {\n                options.push(...infrastructureOcpCloudOptions);\n            }\n            options.push(...getInfrastructureOptions({\n                hasAws,\n                hasAwsOcp,\n                hasAzure,\n                hasAzureOcp,\n                hasGcp,\n                hasGcpOcp,\n                hasIbm,\n                hasIbmOcp,\n                hasOci,\n                isIbmFeatureEnabled,\n            }));\n        }\n        else if (isRhelTab) {\n            if (hasRhel) {\n                options.push(...rhelOptions);\n            }\n        }\n        else if (hasOcp) {\n            options.push(...ocpOptions);\n        }\n    }\n    else {\n        if (hasOcp) {\n            options.push(...ocpOptions);\n        }\n        if (hasOcpCloud) {\n            options.push(...infrastructureOcpCloudOptions);\n        }\n        if (hasRhel) {\n            options.push(...rhelOptions);\n        }\n        options.push(...getInfrastructureOptions({\n            hasAws,\n            hasAwsOcp,\n            hasAzure,\n            hasAzureOcp,\n            hasGcp,\n            hasGcpOcp,\n            hasIbm,\n            hasIbmOcp,\n            hasOci,\n            isIbmFeatureEnabled,\n        }));\n    }\n    return (React.createElement(PerspectiveSelect, { currentItem: currentItem || options[0].value, isDisabled: isDisabled, onSelected: onSelected, options: options }));\n};\nexport default Perspective;\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.account) {\n        return 'account';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.gcp_project) {\n        return 'gcp_project';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    if (groupBy.org_unit_id) {\n        return 'org_unit_id';\n    }\n    if (groupBy.payer_tenant_id) {\n        return 'payer_tenant_id';\n    }\n    if (groupBy.product_service) {\n        return 'product_service';\n    }\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.region) {\n        return 'region';\n    }\n    if (groupBy.resource_location) {\n        return 'resource_location';\n    }\n    if (groupBy.service) {\n        return 'service';\n    }\n    if (groupBy.service_name) {\n        return 'service_name';\n    }\n    if (groupBy.subscription_guid) {\n        return 'subscription_guid';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    chartContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n        paddingRight: global_spacer_lg.value,\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    chartContent: {\n        paddingTop: global_spacer_lg.value,\n    },\n    explorer: {\n        minHeight: '100%',\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    tableContent: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    toolbarContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import _orderBy from \"lodash/orderBy\";\nimport _keys from \"lodash/keys\";\nimport _assign from \"lodash/assign\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Helpers, Scale, Wrapper } from \"victory-core\";\nimport isEqual from \"react-fast-compare\";\nvar fallbackProps = {\n  width: 450,\n  height: 300,\n  padding: 50\n}; // Assumes data in `datasets` is sorted by `Data.getData`.\n\nfunction fillData(props, datasets) {\n  var fillInMissingData = props.fillInMissingData;\n  var xMap = datasets.reduce(function (prev, dataset) {\n    dataset.forEach(function (datum) {\n      prev[datum._x instanceof Date ? datum._x.getTime() : datum._x] = true;\n    });\n    return prev;\n  }, {});\n\n  var xKeys = _keys(xMap).map(function (k) {\n    return Number(k);\n  });\n\n  var xArr = _orderBy(xKeys);\n\n  return datasets.map(function (dataset) {\n    var indexOffset = 0;\n    var isDate = dataset[0] && dataset[0]._x instanceof Date;\n    var filledInData = xArr.map(function (x, index) {\n      x = Number(x);\n      var datum = dataset[index - indexOffset];\n\n      if (datum) {\n        var x1 = isDate ? datum._x.getTime() : datum._x;\n\n        if (x1 === x) {\n          return datum;\n        }\n\n        indexOffset++;\n\n        var _y = fillInMissingData ? 0 : null;\n\n        x = isDate ? new Date(x) : x;\n        return {\n          x: x,\n          y: _y,\n          _x: x,\n          _y: _y\n        };\n      }\n\n      var y = fillInMissingData ? 0 : null;\n      x = isDate ? new Date(x) : x;\n      return {\n        x: x,\n        y: y,\n        _x: x,\n        _y: y\n      };\n    });\n    return filledInData;\n  });\n}\n\nfunction getY0(datum, index, datasets) {\n  if (datum.y0) {\n    return datum.y0;\n  }\n\n  var y = datum._y;\n  var group = datum._group;\n  var firstDatasetBaseline = datasets[0].map(function (d) {\n    return d.y0;\n  });\n  var previousDatasets = datasets.slice(0, index);\n  var previousPoints = previousDatasets.reduce(function (prev, dataset) {\n    return prev.concat(dataset.filter(function (previousDatum) {\n      return datum._x instanceof Date ? previousDatum._x.getTime() === datum._x.getTime() : previousDatum._x === datum._x;\n    }).map(function (previousDatum) {\n      return previousDatum._y || 0;\n    }));\n  }, []);\n  var y0 = previousPoints.length && previousPoints.reduce(function (memo, value) {\n    var sameSign = y < 0 && value < 0 || y >= 0 && value >= 0;\n    return sameSign ? Number(value) + memo : memo;\n  }, firstDatasetBaseline[group] || 0);\n  return previousPoints.some(function (point) {\n    return point instanceof Date;\n  }) ? new Date(y0) : y0;\n}\n/* eslint-disable no-nested-ternary */\n\n\nfunction addLayoutData(props, datasets, index) {\n  var xOffset = props.xOffset || 0;\n  return datasets[index].map(function (datum) {\n    var yOffset = getY0(datum, index, datasets) || 0;\n    return _assign({}, datum, {\n      _y0: !(datum._y instanceof Date) ? yOffset : yOffset ? new Date(yOffset) : datum._y,\n      _y1: datum._y === null ? null : datum._y instanceof Date ? new Date(Number(datum._y) + Number(yOffset)) : datum._y + yOffset,\n      _x1: datum._x === null ? null : datum._x instanceof Date ? new Date(Number(datum._x) + Number(xOffset)) : datum._x + xOffset\n    });\n  });\n}\n/* eslint-enable no-nested-ternary */\n\n\nfunction stackData(props, childComponents) {\n  var dataFromChildren = Wrapper.getDataFromChildren(props, childComponents);\n  var filterNullChildData = dataFromChildren.map(function (dataset) {\n    return dataset.filter(function (datum) {\n      return datum._x !== null && datum._y !== null;\n    });\n  });\n  var datasets = fillData(props, filterNullChildData);\n  return datasets.map(function (d, i) {\n    return addLayoutData(props, datasets, i);\n  });\n}\n\nexport function getCalculatedProps(props, childComponents) {\n  childComponents = childComponents || React.Children.toArray(props.children);\n  var role = \"stack\";\n  props = Helpers.modifyProps(props, fallbackProps, role);\n  var style = Wrapper.getStyle(props.theme, props.style, role);\n  var categories = props.categories || Wrapper.getCategories(props, childComponents);\n  var datasets = props.datasets || stackData(props, childComponents);\n  var children = childComponents.map(function (c, i) {\n    return /*#__PURE__*/React.cloneElement(c, {\n      data: datasets[i]\n    });\n  });\n  var domain = {\n    x: Wrapper.getDomain(_assign({}, props, {\n      categories: categories\n    }), \"x\", children),\n    y: Wrapper.getDomain(_assign({}, props, {\n      categories: categories\n    }), \"y\", children)\n  };\n  var range = props.range || {\n    x: Helpers.getRange(props, \"x\"),\n    y: Helpers.getRange(props, \"y\")\n  };\n  var baseScale = {\n    x: Scale.getScaleFromProps(props, \"x\") || Wrapper.getScale(props, \"x\"),\n    y: Scale.getScaleFromProps(props, \"y\") || Wrapper.getScale(props, \"y\")\n  };\n  var scale = {\n    x: baseScale.x.domain(domain.x).range(props.horizontal ? range.y : range.x),\n    y: baseScale.y.domain(domain.y).range(props.horizontal ? range.x : range.y)\n  };\n  var _props = props,\n      colorScale = _props.colorScale,\n      horizontal = _props.horizontal;\n  return {\n    datasets: datasets,\n    categories: categories,\n    range: range,\n    domain: domain,\n    horizontal: horizontal,\n    scale: scale,\n    style: style,\n    colorScale: colorScale,\n    role: role\n  };\n} // We need to remove sharedEvents in order to memoize the calculated data\n// With shared events, the props change on every event, and every value is re-calculated\n\nvar withoutSharedEvents = function (props) {\n  var children = props.children;\n  var modifiedChildren = React.Children.toArray(children).map(function (_child) {\n    var child = _child;\n    return _objectSpread(_objectSpread({}, child), {}, {\n      props: Helpers.omit(child.props, [\"sharedEvents\"])\n    });\n  });\n  props.children = modifiedChildren;\n  return props;\n};\n\nexport function useMemoizedProps(initialProps) {\n  var modifiedProps = withoutSharedEvents(initialProps);\n\n  var _React$useState = React.useState(modifiedProps),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      props = _React$useState2[0],\n      setProps = _React$useState2[1]; // React.memo uses shallow equality to compare objects. This way props\n  // will only be re-calculated when they change.\n\n\n  React.useEffect(function () {\n    if (!isEqual(modifiedProps, props)) {\n      setProps(modifiedProps);\n    }\n  }, [props, setProps, modifiedProps]);\n  return React.useMemo(function () {\n    return getCalculatedProps(props, props.children);\n  }, [props]);\n}\n\nfunction getLabels(props, datasets, index) {\n  if (!props.labels) {\n    return undefined;\n  }\n\n  return datasets.length === index + 1 ? props.labels : undefined;\n}\n\nexport function getChildProps(props, calculatedProps) {\n  var categories = calculatedProps.categories,\n      domain = calculatedProps.domain,\n      range = calculatedProps.range,\n      scale = calculatedProps.scale,\n      horizontal = calculatedProps.horizontal;\n  return {\n    height: props.height,\n    width: props.width,\n    padding: Helpers.getPadding(props),\n    standalone: false,\n    theme: props.theme,\n    categories: categories,\n    domain: domain,\n    range: range,\n    scale: scale,\n    horizontal: horizontal\n  };\n}\n\nfunction getColorScale(props, child) {\n  var role = child.type && child.type.role;\n  var colorScaleOptions = child.props.colorScale || props.colorScale;\n\n  if (role !== \"group\" && role !== \"stack\") {\n    return undefined;\n  }\n\n  return props.theme ? colorScaleOptions || props.theme.props.colorScale : colorScaleOptions;\n}\n\nexport function getChildren(props, childComponents, calculatedProps) {\n  props = Helpers.modifyProps(props, fallbackProps, \"stack\");\n  childComponents = childComponents || React.Children.toArray(props.children);\n  calculatedProps = calculatedProps || getCalculatedProps(props, childComponents);\n  var _calculatedProps = calculatedProps,\n      datasets = _calculatedProps.datasets;\n  var childProps = getChildProps(props, calculatedProps);\n  var parentName = props.name || \"stack\";\n  return childComponents.map(function (child, index) {\n    var role = child.type && child.type.role;\n    var data = datasets[index];\n    var style = Wrapper.getChildStyle(child, index, calculatedProps);\n    var labels = props.labels ? getLabels(props, datasets, index) : child.props.labels;\n    var name = child.props.name || \"\".concat(parentName, \"-\").concat(role, \"-\").concat(index);\n    return /*#__PURE__*/React.cloneElement(child, _assign({\n      key: \"\".concat(name, \"-key-\").concat(index),\n      labels: labels,\n      name: name,\n      domainPadding: child.props.domainPadding || props.domainPadding,\n      theme: props.theme,\n      labelComponent: props.labelComponent || child.props.labelComponent,\n      style: style,\n      colorScale: getColorScale(props, child),\n      data: data,\n      polar: props.polar\n    }, childProps));\n  });\n}","import _isEmpty from \"lodash/isEmpty\";\nimport _defaults from \"lodash/defaults\";\nimport _assign from \"lodash/assign\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { CommonProps, Helpers, Hooks, PropTypes as CustomPropTypes, UserProps, VictoryContainer, VictoryTheme, Wrapper } from \"victory-core\";\nimport { VictorySharedEvents } from \"victory-shared-events\";\nimport { getChildren, useMemoizedProps } from \"./helper-methods\";\nimport isEqual from \"react-fast-compare\";\nvar fallbackProps = {\n  width: 450,\n  height: 300,\n  padding: 50\n};\n\nvar VictoryStackBase = function (initialProps) {\n  // eslint-disable-next-line no-use-before-define\n  var role = VictoryStack.role;\n\n  var _Hooks$useAnimationSt = Hooks.useAnimationState(),\n      setAnimationState = _Hooks$useAnimationSt.setAnimationState,\n      getAnimationProps = _Hooks$useAnimationSt.getAnimationProps,\n      getProps = _Hooks$useAnimationSt.getProps;\n\n  var props = getProps(initialProps);\n  var modifiedProps = Helpers.modifyProps(props, fallbackProps, role);\n  var eventKey = modifiedProps.eventKey,\n      containerComponent = modifiedProps.containerComponent,\n      standalone = modifiedProps.standalone,\n      groupComponent = modifiedProps.groupComponent,\n      externalEventMutations = modifiedProps.externalEventMutations,\n      width = modifiedProps.width,\n      height = modifiedProps.height,\n      theme = modifiedProps.theme,\n      polar = modifiedProps.polar,\n      horizontal = modifiedProps.horizontal,\n      name = modifiedProps.name;\n  var childComponents = React.Children.toArray(modifiedProps.children);\n  var calculatedProps = useMemoizedProps(modifiedProps);\n  var domain = calculatedProps.domain,\n      scale = calculatedProps.scale,\n      style = calculatedProps.style;\n  var newChildren = React.useMemo(function () {\n    var children = getChildren(props, childComponents, calculatedProps);\n    var orderedChildren = children.map(function (child, index) {\n      var childProps = _assign({\n        animate: getAnimationProps(props, child, index)\n      }, child.props);\n\n      return /*#__PURE__*/React.cloneElement(child, childProps);\n    });\n    /*\n      reverse render order for children of `VictoryStack` so that higher children in the stack\n      are rendered behind lower children. This looks nicer for stacked bars with cornerRadius, and\n      areas with strokes\n    */\n\n    return orderedChildren.reverse();\n  }, [props, childComponents, calculatedProps, getAnimationProps]);\n  var containerProps = React.useMemo(function () {\n    if (standalone) {\n      return {\n        domain: domain,\n        scale: scale,\n        width: width,\n        height: height,\n        standalone: standalone,\n        theme: theme,\n        style: style.parent,\n        horizontal: horizontal,\n        polar: polar,\n        name: name\n      };\n    }\n\n    return {};\n  }, [standalone, domain, scale, width, height, theme, style, horizontal, polar, name]);\n  var userProps = React.useMemo(function () {\n    return UserProps.getSafeUserProps(initialProps);\n  }, [initialProps]);\n  var container = React.useMemo(function () {\n    if (standalone) {\n      var defaultContainerProps = _defaults({}, containerComponent.props, containerProps, userProps);\n\n      return /*#__PURE__*/React.cloneElement(containerComponent, defaultContainerProps);\n    }\n\n    return /*#__PURE__*/React.cloneElement(groupComponent, userProps);\n  }, [groupComponent, standalone, containerComponent, containerProps, userProps]);\n  var events = React.useMemo(function () {\n    return Wrapper.getAllEvents(props);\n  }, [props]);\n  var previousProps = Hooks.usePreviousProps(initialProps);\n  React.useEffect(function () {\n    // This is called before dismount to keep state in sync\n    return function () {\n      if (initialProps.animate) {\n        setAnimationState(previousProps, initialProps);\n      }\n    };\n  }, [setAnimationState, previousProps, initialProps]);\n\n  if (!_isEmpty(events)) {\n    return /*#__PURE__*/React.createElement(VictorySharedEvents, {\n      container: container,\n      eventKey: eventKey,\n      events: events,\n      externalEventMutations: externalEventMutations\n    }, newChildren);\n  }\n\n  return /*#__PURE__*/React.cloneElement(container, container.props, newChildren);\n};\n\nVictoryStackBase.propTypes = _objectSpread(_objectSpread({}, CommonProps.baseProps), {}, {\n  bins: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([CustomPropTypes.nonNegative, PropTypes.instanceOf(Date)])), CustomPropTypes.nonNegative]),\n  categories: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.shape({\n    x: PropTypes.arrayOf(PropTypes.string),\n    y: PropTypes.arrayOf(PropTypes.string)\n  })]),\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  colorScale: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.oneOf([\"grayscale\", \"qualitative\", \"heatmap\", \"warm\", \"cool\", \"red\", \"green\", \"blue\"])]),\n  fillInMissingData: PropTypes.bool,\n  horizontal: PropTypes.bool,\n  labelComponent: PropTypes.element,\n  labels: PropTypes.oneOfType([PropTypes.func, PropTypes.array]),\n  style: PropTypes.shape({\n    parent: PropTypes.object,\n    data: PropTypes.object,\n    labels: PropTypes.object\n  }),\n  xOffset: PropTypes.number\n});\nVictoryStackBase.defaultProps = {\n  containerComponent: /*#__PURE__*/React.createElement(VictoryContainer, null),\n  groupComponent: /*#__PURE__*/React.createElement(\"g\", null),\n  standalone: true,\n  theme: VictoryTheme.grayscale,\n  fillInMissingData: true\n};\nvar componentConfig = {\n  role: \"stack\",\n  expectedComponents: [\"groupComponent\", \"containerComponent\", \"labelComponent\"],\n  getChildren: getChildren\n};\nexport var VictoryStack = Object.assign( /*#__PURE__*/React.memo(VictoryStackBase, isEqual), componentConfig);\nVictoryStack.displayName = \"VictoryStack\";","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryStack } from 'victory-stack';\nimport { ChartContainer } from '../ChartContainer';\nimport { getClassName, useDefaultPatternProps, getTheme, renderChildrenWithPatterns } from '../ChartUtils';\nexport const ChartStack = (_a) => {\n    var { ariaDesc, ariaTitle, children, colorScale, containerComponent = React.createElement(ChartContainer, null), hasPatterns, patternScale, themeColor, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    themeVariant, \n    // destructure last\n    theme = getTheme(themeColor) } = _a, rest = __rest(_a, [\"ariaDesc\", \"ariaTitle\", \"children\", \"colorScale\", \"containerComponent\", \"hasPatterns\", \"patternScale\", \"themeColor\", \"themeVariant\", \"theme\"]);\n    // Clone so users can override container props\n    const container = React.cloneElement(containerComponent, Object.assign(Object.assign({ desc: ariaDesc, title: ariaTitle, theme }, containerComponent.props), { className: getClassName({ className: containerComponent.props.className }) // Override VictoryContainer class name\n     }));\n    const { defaultPatternScale } = useDefaultPatternProps({\n        colorScale,\n        hasPatterns,\n        patternScale,\n        themeColorScale: theme.stack.colorScale\n    });\n    // Note: containerComponent is required for theme\n    return (React.createElement(VictoryStack, Object.assign({ colorScale: colorScale, containerComponent: container, theme: theme }, rest), renderChildrenWithPatterns({\n        children,\n        patternScale: defaultPatternScale\n    })));\n};\nChartStack.displayName = 'ChartStack';\n// Note: VictoryStack.getChildren & VictoryStack.role must be hoisted\nhoistNonReactStatics(ChartStack, VictoryStack);\n//# sourceMappingURL=ChartStack.js.map","import { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_cyan_300 } from '@patternfly/react-tokens/dist/js/chart_color_cyan_300';\nimport { chart_color_gold_300 } from '@patternfly/react-tokens/dist/js/chart_color_gold_300';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_orange_300 } from '@patternfly/react-tokens/dist/js/chart_color_orange_300';\nimport { chart_color_purple_300 } from '@patternfly/react-tokens/dist/js/chart_color_purple_300';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    colorScale: [\n        chart_color_blue_300.value,\n        chart_color_gold_300.value,\n        chart_color_green_300.value,\n        chart_color_purple_300.value,\n        chart_color_orange_300.value,\n        chart_color_cyan_300.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n    yAxisAlt: {\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'routes/views/components/charts/common/chart.scss';\nimport { Chart, ChartAxis, ChartBar, ChartLegend, ChartLegendTooltip, ChartStack, ChartThemeColor, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { default as ChartTheme } from 'routes/views/components/charts/chartTheme';\nimport { getMaxValue } from 'routes/views/components/charts/common/chartDatum';\nimport { getChartNames, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isDataHidden, isSeriesHidden, } from 'routes/views/components/charts/common/chartUtils';\nimport { formatCurrencyAbbreviation } from 'utils/format';\nimport { noop } from 'utils/noop';\nimport { chartStyles } from './costExplorerChart.styles';\nclass CostExplorerChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            tickValues: [],\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { top1stData, top2ndData, top3rdData, top4thData, top5thData, top6thData } = this.props;\n            const series = [];\n            if (top1stData && top1stData.length) {\n                const name = this.getTruncatedString(top1stData[0].name);\n                series.push({\n                    childName: 'top1stData',\n                    data: this.initDatumChildName(top1stData, 'top1stData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[0],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[0],\n                        },\n                    },\n                });\n            }\n            if (top2ndData && top2ndData.length) {\n                const name = this.getTruncatedString(top2ndData[0].name);\n                series.push({\n                    childName: 'top2ndData',\n                    data: this.initDatumChildName(top2ndData, 'top2ndData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[1],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[1],\n                        },\n                    },\n                });\n            }\n            if (top3rdData && top3rdData.length) {\n                const name = this.getTruncatedString(top3rdData[0].name);\n                series.push({\n                    childName: 'top3rdData',\n                    data: this.initDatumChildName(top3rdData, 'top3rdData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[2],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[2],\n                        },\n                    },\n                });\n            }\n            if (top4thData && top4thData.length) {\n                const name = this.getTruncatedString(top4thData[0].name);\n                series.push({\n                    childName: 'top4thData',\n                    data: this.initDatumChildName(top4thData, 'top4thData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[3],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[3],\n                        },\n                    },\n                });\n            }\n            if (top5thData && top5thData.length) {\n                const name = this.getTruncatedString(top5thData[0].name);\n                series.push({\n                    childName: 'top5thData',\n                    data: this.initDatumChildName(top5thData, 'top5thData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[4],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[4],\n                        },\n                    },\n                });\n            }\n            if (top6thData && top6thData.length) {\n                const name = this.getTruncatedString(top6thData[0].name);\n                series.push({\n                    childName: 'top6thData',\n                    data: this.initDatumChildName(top6thData, 'top6thData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[5],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[5],\n                        },\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            const units = this.getUnits(series);\n            this.setState({ cursorVoronoiContainer, series, tickValues: this.getTickValues(), units });\n        };\n        // Adds a child name to help identify hidden data series\n        this.initDatumChildName = (data, childName) => {\n            data.map(datum => (datum.childName = childName));\n            return data;\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (width > 675 && width < 1250) {\n                    adjustedContainerHeight += 25;\n                }\n                else if (width > 400 && width < 650) {\n                    adjustedContainerHeight += 50;\n                }\n                else if (width <= 400) {\n                    adjustedContainerHeight += 150;\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        // If bar width exceeds max and domainPadding is true, extra width is returned to help center bars horizontally\n        this.getBarWidth = (domainPadding = false) => {\n            const { hiddenSeries, series, width } = this.state;\n            const maxWidth = 20;\n            let maxValue = -1;\n            if (series) {\n                series.forEach((s, index) => {\n                    if (!isSeriesHidden(hiddenSeries, index) && s.data && s.data.length !== 0) {\n                        if (s.data.length > maxValue) {\n                            maxValue = s.data.length;\n                        }\n                    }\n                });\n            }\n            // Divide available width into equal sections\n            const sections = maxValue * 2 + 1;\n            const sectionWidth = maxValue > 0 ? width / sections : 0;\n            if (domainPadding) {\n                // Add any extra bar width for domain padding\n                const extraWidth = sectionWidth > maxWidth ? (sectionWidth - maxWidth) * maxValue : 0;\n                return (sectionWidth + extraWidth / 2) * 2;\n            }\n            return sectionWidth > maxWidth ? maxWidth : sectionWidth;\n        };\n        this.getChart = (series, index, barWidth) => {\n            const { hiddenSeries } = this.state;\n            const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n            return (React.createElement(ChartBar, { barWidth: barWidth, data: data, key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatter, formatOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatter, formatOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        // Returns domain only if max y values are zero\n        this.getDomain = (series, hiddenSeries) => {\n            let maxValue = -1;\n            let domain;\n            if (series) {\n                series.forEach((s, index) => {\n                    if (!isSeriesHidden(hiddenSeries, index) && s.data && s.data.length !== 0) {\n                        const max = getMaxValue(s.data);\n                        maxValue = Math.max(maxValue, max);\n                    }\n                });\n            }\n            if (maxValue <= 0) {\n                domain = { y: [0, 100] };\n            }\n            return domain;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const { name = '' } = this.props;\n            const { hiddenSeries, series } = this.state;\n            const result = getInteractiveLegendEvents({\n                chartNames: getChartNames(series),\n                isDataHidden: data => isDataHidden(series, hiddenSeries, data),\n                isHidden: index => isSeriesHidden(hiddenSeries, index),\n                legendName: `${name}-legend`,\n                onLegendClick: props => this.handleLegendClick(props.index),\n            });\n            return result;\n        };\n        this.getLegend = () => {\n            const { name = '' } = this.props;\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, name: `${name}-legend`, responsive: false }));\n        };\n        // This ensures we show every 3rd tick value, including the first and last value\n        //\n        // Note: We're not using Victory's tickCount because it won't always include the last tick value.\n        this.getTickValues = () => {\n            const { top1stData, top2ndData, top3rdData, top4thData, top5thData, top6thData } = this.props;\n            // Find the datum with the greatest number of values\n            const allDatums = [top1stData, top2ndData, top3rdData, top4thData, top5thData, top6thData];\n            let datum;\n            allDatums.map(val => {\n                if (!datum || datum.length < val.length) {\n                    datum = val;\n                }\n            });\n            const values = [];\n            datum.map(val => {\n                values.push(val.x);\n            });\n            // Prune tick values\n            const tickValues = [];\n            const modVal = values.length < 6 ? 2 : 3;\n            for (let i = 0; i < values.length; i++) {\n                if (i % modVal === 0 && i + 2 < values.length) {\n                    tickValues.push(values[i]);\n                }\n                else if (values.length < 3 && i + 1 < values.length) {\n                    tickValues.push(values[i]);\n                }\n            }\n            tickValues.push(values[values.length - 1]);\n            return tickValues;\n        };\n        this.getTruncatedString = (str) => {\n            const maxChars = 20;\n            return str.length > maxChars ? str.substring(0, maxChars - 1) + '...' : str;\n        };\n        this.getTickValue = (t) => {\n            const { units } = this.state;\n            return formatCurrencyAbbreviation(t, units);\n        };\n        this.getUnits = (series) => {\n            if (series) {\n                for (const s of series) {\n                    for (const datum of s.data) {\n                        if (datum.units) {\n                            return datum.units;\n                        }\n                    }\n                }\n            }\n            return 'USD';\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.top1stData !== this.props.top1stData ||\n            prevProps.top2ndData !== this.props.top2ndData ||\n            prevProps.top3rdData !== this.props.top3rdData ||\n            prevProps.top4thData !== this.props.top4thData ||\n            prevProps.top5thData !== this.props.top5thData ||\n            prevProps.top6thData !== this.props.top6thData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    render() {\n        const { height, intl, name, padding = {\n            bottom: 50,\n            left: 40,\n            right: 8,\n            top: 8,\n        }, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, tickValues, width } = this.state;\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => intl.formatMessage(messages.chartDayOfTheMonth, { day: datum.x }) })),\n            })\n            : undefined;\n        const barWidth = this.getBarWidth();\n        // Note: For tooltip values to match properly, chart groups must be rendered in the order given as legend data\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n            React.createElement(\"div\", { style: { height, width } },\n                React.createElement(Chart, { ariaTitle: intl.formatMessage(messages.explorerChartAriaTitle), containerComponent: container, domain: this.getDomain(series, hiddenSeries), domainPadding: { x: this.getBarWidth(true) }, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", name: name, padding: padding, theme: ChartTheme, themeColor: ChartThemeColor.multiOrdered, width: width },\n                    series && series.length > 0 && (React.createElement(ChartStack, null, series.map((s, index) => this.getChart(s, index, barWidth)))),\n                    React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: tickValues, fixLabelOverlap: true }),\n                    React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis, tickFormat: this.getTickValue })))));\n    }\n}\nconst CostExplorerChart = injectIntl(CostExplorerChartBase);\nexport default CostExplorerChart;\n","import global_spacer_2xl from '@patternfly/react-tokens/dist/js/global_spacer_2xl';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    chartHeight: 300,\n    chartContainerHeight: 300,\n};\nexport const styles = {\n    chartContainer: {\n        marginLeft: global_spacer_2xl.value,\n    },\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n    costChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    titleContainer: {\n        marginLeft: global_spacer_lg.value,\n    },\n    trendChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    usageChart: {\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import { OrgPathsType } from 'api/orgs/org';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport { hasCloudProvider } from 'routes/views/utils/providers';\nimport { hasAwsAccess, hasAzureAccess, hasGcpAccess, hasIbmAccess, isAwsAvailable, isAzureAvailable, isGcpAvailable, isIbmAvailable, isOciAvailable, isOcpAvailable, isRhelAvailable, } from 'utils/userAccess';\n// eslint-disable-next-line no-shadow\nexport var PerspectiveType;\n(function (PerspectiveType) {\n    PerspectiveType[\"aws\"] = \"aws\";\n    PerspectiveType[\"awsOcp\"] = \"aws_ocp\";\n    PerspectiveType[\"azure\"] = \"azure\";\n    PerspectiveType[\"azureOcp\"] = \"azure_ocp\";\n    PerspectiveType[\"gcp\"] = \"gcp\";\n    PerspectiveType[\"gcpOcp\"] = \"gcp_ocp\";\n    PerspectiveType[\"ibm\"] = \"ibm\";\n    PerspectiveType[\"ibmOcp\"] = \"ibm_ocp\";\n    PerspectiveType[\"oci\"] = \"oci\";\n    PerspectiveType[\"ocp\"] = \"ocp\";\n    PerspectiveType[\"ocpCloud\"] = \"ocp_cloud\";\n    PerspectiveType[\"rhel\"] = \"rhel\";\n})(PerspectiveType || (PerspectiveType = {}));\nexport const baseQuery = {\n    filter: {\n        limit: 10,\n        offset: 0,\n    },\n    exclude: {},\n    filter_by: {},\n    order_by: {\n        cost: 'desc',\n    },\n};\nexport const dateRangeOptions = [\n    { label: messages.explorerDateRange, value: 'current_month_to_date' },\n    { label: messages.explorerDateRange, value: 'previous_month' },\n    { label: messages.explorerDateRange, value: 'previous_month_to_date' },\n    { label: messages.explorerDateRange, value: 'last_thirty_days' },\n    { label: messages.explorerDateRange, value: 'last_sixty_days' },\n    { label: messages.explorerDateRange, value: 'last_ninety_days' },\n    { label: messages.explorerDateRange, value: 'custom' },\n];\nexport const groupByAwsOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByAzureOptions = [\n    { label: 'subscription_guid', value: 'subscription_guid' },\n    { label: 'service_name', value: 'service_name' },\n    { label: 'resource_location', value: 'resource_location' },\n];\nexport const groupByGcpOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'gcp_project', value: 'gcp_project' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByGcpOcpOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'gcp_project', value: 'gcp_project' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByIbmOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'project', value: 'project' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByOciOptions = [\n    { label: 'payer_tenant_id', value: 'payer_tenant_id' },\n    { label: 'product_service', value: 'product_service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByOcpOptions = [\n    { label: 'cluster', value: 'cluster' },\n    { label: 'node', value: 'node' },\n    { label: 'project', value: 'project' },\n];\nexport const groupByRhelOptions = [\n    { label: 'cluster', value: 'cluster' },\n    { label: 'node', value: 'node' },\n    { label: 'project', value: 'project' },\n];\nexport const getPerspectiveDefault = ({ awsProviders, azureProviders, ociProviders, gcpProviders, ibmProviders, ocpProviders, queryFromRoute, rhelProviders, userAccess, }) => {\n    const perspective = queryFromRoute.perspective;\n    // Upon page refresh, perspective param takes precedence\n    switch (perspective) {\n        case PerspectiveType.aws:\n        case PerspectiveType.awsOcp:\n        case PerspectiveType.azure:\n        case PerspectiveType.azureOcp:\n        case PerspectiveType.gcp:\n        case PerspectiveType.gcpOcp:\n        case PerspectiveType.ibm:\n        case PerspectiveType.ibmOcp:\n        case PerspectiveType.oci:\n        case PerspectiveType.ocpCloud:\n        case PerspectiveType.rhel:\n            return perspective;\n    }\n    if (isOcpAvailable(userAccess, ocpProviders)) {\n        return PerspectiveType.ocp;\n    }\n    if (isRhelAvailable(userAccess, rhelProviders)) {\n        return PerspectiveType.rhel;\n    }\n    const hasAwsCloud = hasAwsAccess(userAccess) && hasCloudProvider(awsProviders, ocpProviders);\n    const hasAzureCloud = hasAzureAccess(userAccess) && hasCloudProvider(azureProviders, ocpProviders);\n    const hasGcpCloud = hasGcpAccess(userAccess) && hasCloudProvider(gcpProviders, ocpProviders);\n    const hasIbmCloud = hasIbmAccess(userAccess) && hasCloudProvider(ibmProviders, ocpProviders);\n    if (hasAwsCloud || hasAzureCloud || hasGcpCloud || hasIbmCloud) {\n        return PerspectiveType.ocpCloud;\n    }\n    if (isAwsAvailable(userAccess, awsProviders)) {\n        return PerspectiveType.aws;\n    }\n    if (isAzureAvailable(userAccess, azureProviders)) {\n        return PerspectiveType.azure;\n    }\n    if (isGcpAvailable(userAccess, gcpProviders)) {\n        return PerspectiveType.gcp;\n    }\n    if (isIbmAvailable(userAccess, ibmProviders)) {\n        return PerspectiveType.ibm;\n    }\n    if (isOciAvailable(userAccess, ociProviders)) {\n        return PerspectiveType.oci;\n    }\n    return undefined;\n};\nexport const getGroupByDefault = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n        case PerspectiveType.awsOcp:\n        case PerspectiveType.gcp:\n        case PerspectiveType.gcpOcp:\n        case PerspectiveType.ibm:\n            result = 'account';\n            break;\n        case PerspectiveType.azure:\n        case PerspectiveType.azureOcp:\n            result = 'subscription_guid';\n            break;\n        case PerspectiveType.oci:\n            result = 'payer_tenant_id';\n            break;\n        case PerspectiveType.ocp:\n        case PerspectiveType.ocpCloud:\n        case PerspectiveType.rhel:\n            result = 'project';\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getGroupByOptions = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n        case PerspectiveType.awsOcp:\n            result = groupByAwsOptions;\n            break;\n        case PerspectiveType.azure:\n        case PerspectiveType.azureOcp:\n            result = groupByAzureOptions;\n            break;\n        case PerspectiveType.gcp:\n            result = groupByGcpOptions;\n            break;\n        case PerspectiveType.gcpOcp:\n            result = groupByGcpOcpOptions;\n            break;\n        case PerspectiveType.ibm:\n            result = groupByIbmOptions;\n            break;\n        case PerspectiveType.oci:\n            result = groupByOciOptions;\n            break;\n        case PerspectiveType.ocp:\n        case PerspectiveType.ocpCloud:\n            result = groupByOcpOptions;\n            break;\n        case PerspectiveType.rhel:\n            result = groupByRhelOptions;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getOrgReportPathsType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n            result = OrgPathsType.aws;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getReportType = (perspective) => {\n    let result;\n    switch (perspective) {\n        default:\n            result = ReportType.cost;\n            break;\n    }\n    return result;\n};\nexport const getReportPathsType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n            result = ReportPathsType.aws;\n            break;\n        case PerspectiveType.awsOcp:\n            result = ReportPathsType.awsOcp;\n            break;\n        case PerspectiveType.azure:\n            result = ReportPathsType.azure;\n            break;\n        case PerspectiveType.azureOcp:\n            result = ReportPathsType.azureOcp;\n            break;\n        case PerspectiveType.gcp:\n            result = ReportPathsType.gcp;\n            break;\n        case PerspectiveType.gcpOcp:\n            result = ReportPathsType.gcpOcp;\n            break;\n        case PerspectiveType.ibm:\n            result = ReportPathsType.ibm;\n            break;\n        case PerspectiveType.oci:\n            result = ReportPathsType.oci;\n            break;\n        case PerspectiveType.ocp:\n            result = ReportPathsType.ocp;\n            break;\n        case PerspectiveType.ocpCloud:\n            result = ReportPathsType.ocpCloud;\n            break;\n        case PerspectiveType.rhel:\n            result = ReportPathsType.rhel;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getResourcePathsType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n            return ResourcePathsType.aws;\n            break;\n        case PerspectiveType.awsOcp:\n            return ResourcePathsType.awsOcp;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getTagReportPathsType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n            return TagPathsType.aws;\n            break;\n        case PerspectiveType.awsOcp:\n            return TagPathsType.awsOcp;\n            break;\n        case PerspectiveType.azure:\n            return TagPathsType.azure;\n            break;\n        case PerspectiveType.azureOcp:\n            return TagPathsType.azureOcp;\n            break;\n        case PerspectiveType.gcp:\n            return TagPathsType.gcp;\n            break;\n        case PerspectiveType.gcpOcp:\n            return TagPathsType.gcpOcp;\n            break;\n        case PerspectiveType.ibm:\n            return TagPathsType.ibm;\n            break;\n        case PerspectiveType.oci:\n            return TagPathsType.oci;\n            break;\n        case PerspectiveType.ocp:\n            return TagPathsType.ocp;\n            break;\n        case PerspectiveType.ocpCloud:\n            return TagPathsType.ocpCloud;\n            break;\n        case PerspectiveType.rhel:\n            return TagPathsType.rhel;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\n","import { Skeleton, Title } from '@patternfly/react-core';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { format } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ComputedReportItemType, ComputedReportItemValueType, isFloat, isInt, } from 'routes/views/components/charts/common/chartDatum';\nimport { CostExplorerChart } from 'routes/views/components/charts/costExplorerChart';\nimport { getDateRangeFromQuery } from 'routes/views/utils/dateRange';\nimport { getGroupByCostCategory, getGroupById, getGroupByOrgValue, getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedExplorerReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { formatUnits } from 'utils/format';\nimport { getCostDistribution } from 'utils/localStorage';\nimport { withRouter } from 'utils/router';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { chartStyles, styles } from './explorerChart.styles';\nimport { PerspectiveType } from './explorerUtils';\nimport { getGroupByDefault, getReportPathsType, getReportType } from './explorerUtils';\nclass ExplorerChartBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.createReportDatum = (value, computedItem, reportItem = 'cost', reportItemValue = 'total') => {\n            const { intl } = this.props;\n            const computedItemDate = new Date(computedItem.date + 'T00:00:00');\n            const xVal = intl.formatDate(computedItemDate, {\n                day: 'numeric',\n                month: 'short',\n            });\n            const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n            return Object.assign(Object.assign({ x: xVal, y: value === null ? null : yVal }, (value === null && { _y: 0 })), { date: computedItem.date, key: computedItem.id, name: computedItem.label ? computedItem.label : computedItem.id, units: computedItem[reportItem]\n                    ? computedItem[reportItem][reportItemValue]\n                        ? computedItem[reportItem][reportItemValue].units // cost, infrastructure, supplementary\n                        : computedItem[reportItem].units // capacity, limit, request, usage\n                    : undefined });\n        };\n        this.updateReport = () => {\n            const { fetchReport, perspective, reportQueryString } = this.props;\n            if (perspective) {\n                const reportPathsType = getReportPathsType(perspective);\n                const reportType = getReportType(perspective);\n                fetchReport(reportPathsType, reportType, reportQueryString);\n            }\n        };\n        this.getChartDatums = (computedItems) => {\n            const { costDistribution } = this.props;\n            const reportItem = ComputedReportItemType.cost;\n            const reportItemValue = costDistribution ? costDistribution : ComputedReportItemValueType.total;\n            const chartDatums = [];\n            computedItems.map(computedItem => {\n                const datums = [];\n                if (computedItem instanceof Map) {\n                    const items = Array.from(computedItem.values());\n                    items.map((i) => {\n                        const val = i[reportItem][reportItemValue] ? i[reportItem][reportItemValue].value : i[reportItem].value;\n                        datums.push(this.createReportDatum(val, i, reportItem, reportItemValue));\n                    });\n                }\n                chartDatums.push(datums);\n            });\n            return this.padChartDatums(chartDatums);\n        };\n        this.getComputedItems = () => {\n            const { report } = this.props;\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: this.getGroupBy(),\n                isDateMap: true,\n            });\n        };\n        this.getGroupBy = () => {\n            const { query } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByCostCategory = getGroupByCostCategory(query);\n            const groupByOrg = getGroupByOrgValue(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            return groupByCostCategory\n                ? groupByCostCategory\n                : groupByTagKey\n                    ? groupByTagKey\n                    : groupByOrg\n                        ? 'org_entities'\n                        : groupById;\n        };\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, width: skeletonWidth.xs })));\n        };\n        // This pads chart datums with null datum objects, representing missing data at the beginning and end of the\n        // data series. The remaining data is left as is to allow for extrapolation. This allows us to display a \"no data\"\n        // message in the tooltip, which helps distinguish between zero values and when there is no data available.\n        this.padChartDatums = (items) => {\n            const { end_date, start_date } = this.props;\n            const result = [];\n            items.map(datums => {\n                const key = datums[0].key;\n                const label = datums[0].name;\n                const newItems = [];\n                for (let padDate = new Date(start_date + 'T00:00:00'); padDate <= new Date(end_date + 'T00:00:00'); padDate.setDate(padDate.getDate() + 1)) {\n                    const id = format(padDate, 'yyyy-MM-dd');\n                    const chartDatum = datums.find(val => val.date === id);\n                    if (chartDatum) {\n                        newItems.push(chartDatum);\n                    }\n                    else {\n                        const date = format(padDate, 'yyyy-MM-dd');\n                        newItems.push(this.createReportDatum(null, { date, id: key, label }, 'cost', null));\n                    }\n                }\n                result.push(newItems);\n            });\n            return result;\n        };\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, reportError, reportQueryString } = this.props;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        if (newQuery || noReport) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { perspective, reportFetchStatus, intl } = this.props;\n        const datums = this.getChartDatums(this.getComputedItems());\n        // Todo: get title from perspective menu\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { style: styles.titleContainer },\n                React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, intl.formatMessage(messages.explorerChartTitle, { value: perspective }))),\n            React.createElement(\"div\", { style: styles.chartContainer },\n                React.createElement(\"div\", { style: styles.costChart }, reportFetchStatus === FetchStatus.inProgress ? (this.getSkeleton()) : (React.createElement(CostExplorerChart, { adjustContainerHeight: true, containerHeight: chartStyles.chartContainerHeight, formatOptions: {}, formatter: formatUnits, height: chartStyles.chartHeight, top1stData: datums.length > 0 ? datums[0] : [], top2ndData: datums.length > 1 ? datums[1] : [], top3rdData: datums.length > 2 ? datums[2] : [], top4thData: datums.length > 3 ? datums[3] : [], top5thData: datums.length > 4 ? datums[4] : [], top6thData: datums.length > 5 ? datums[5] : [] }))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { costType, currency, perspective, router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const { end_date, start_date } = getDateRangeFromQuery(queryFromRoute);\n    const groupBy = queryFromRoute.group_by ? getGroupById(queryFromRoute) : getGroupByDefault(perspective);\n    const group_by = queryFromRoute.group_by ? queryFromRoute.group_by : { [groupBy]: '*' }; // Ensure group_by key is not undefined\n    const isCostDistributionFeatureEnabled = featureFlagsSelectors.selectIsCostDistributionFeatureEnabled(state);\n    const costDistribution = perspective === PerspectiveType.ocp && groupBy === 'project' && isCostDistributionFeatureEnabled\n        ? getCostDistribution()\n        : undefined;\n    const query = Object.assign(Object.assign({}, queryFromRoute), { group_by });\n    const reportQuery = Object.assign({ cost_type: costType, currency,\n        end_date, exclude: query.exclude, filter: { limit: 5 }, filter_by: query.filter_by, group_by,\n        start_date }, (costDistribution === ComputedReportItemValueType.distributed && {\n        order_by: { distributed_cost: 'asc' },\n    }));\n    const reportPathsType = getReportPathsType(perspective);\n    const reportType = getReportType(perspective);\n    const reportQueryString = getQuery(reportQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    return {\n        end_date,\n        perspective,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n        start_date,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst ExplorerChartConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerChartBase);\nconst ExplorerChart = injectIntl(withRouter(ExplorerChartConnect));\nexport { ExplorerChart };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    toContainer: {\n        marginLeft: global_spacer_md.var,\n        marginRight: global_spacer_md.var,\n    },\n};\n","import { DatePicker } from '@patternfly/react-core';\nimport { parseQuery } from 'api/queries/query';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { DateRangeType, getDateRangeFromQuery, getDateRangeTypeDefault } from 'routes/views/utils/dateRange';\nimport { formatDate, getLast90DaysDate, getToday } from 'utils/dates';\nimport { withRouter } from 'utils/router';\nimport { styles } from './explorerDatePicker.styles';\nconst MAX_DAYS = 65; // Max date range allowed for cost API\nclass ExplorerDatePickerBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n        // TBD\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.startDateRef = React.createRef();\n        this.endDateRef = React.createRef();\n        this.getStartDatePicker = () => {\n            const { intl } = this.props;\n            const { startDate } = this.state;\n            const { start_date, end_date } = getLast90DaysDate(false);\n            const rangeValidator = (date) => {\n                if (date < start_date) {\n                    return intl.formatMessage(messages.datePickerBeforeError);\n                }\n                else if (date > end_date) {\n                    return intl.formatMessage(messages.datePickerAfterError);\n                }\n                return '';\n            };\n            return (React.createElement(DatePicker, { \"aria-label\": intl.formatMessage(messages.datePickerStartDateAriaLabel), onChange: this.handleStartDateOnChange, placeholder: intl.formatMessage(messages.start), ref: this.startDateRef, validators: [rangeValidator], value: formatDate(startDate) }));\n        };\n        this.getEndDatePicker = () => {\n            const { intl } = this.props;\n            const { endDate, startDate } = this.state;\n            const end_date = this.getMaxEndDate();\n            const rangeValidator = (date) => {\n                if (date < startDate) {\n                    return intl.formatMessage(messages.datePickerBeforeError);\n                }\n                else if (date > end_date) {\n                    return intl.formatMessage(messages.datePickerAfterError);\n                }\n                return '';\n            };\n            return (React.createElement(DatePicker, { \"aria-label\": intl.formatMessage(messages.datePickerEndDateAriaLabel), isDisabled: !startDate, onChange: this.handleEndDateOnChange, placeholder: intl.formatMessage(messages.end), rangeStart: startDate, ref: this.endDateRef, validators: [rangeValidator], value: formatDate(endDate) }));\n        };\n        this.getMaxEndDate = () => {\n            const { startDate } = this.state;\n            const today = getToday();\n            const end_date = startDate ? new Date(startDate.getTime()) : today;\n            end_date.setDate(end_date.getDate() + MAX_DAYS - 1); // 65 days including start date\n            if (end_date > today) {\n                end_date.setTime(today.getTime());\n            }\n            return end_date;\n        };\n        this.isEndDateValid = (startDate, endDate) => {\n            const minDate = startDate;\n            const maxDate = startDate ? new Date(startDate.getTime()) : undefined;\n            if (maxDate) {\n                maxDate.setDate(maxDate.getDate() + MAX_DAYS - 1); // 65 days including start date\n            }\n            return endDate >= minDate && endDate <= maxDate;\n        };\n        this.isStartDateValid = startDate => {\n            const maxDate = getToday();\n            const { start_date: minDate } = getLast90DaysDate(false);\n            return startDate >= minDate && startDate <= maxDate;\n        };\n        this.handleEndDateOnChange = (evt, value, date) => {\n            const { onSelected } = this.props;\n            const { startDate } = this.state;\n            if (date && this.isEndDateValid(startDate, date)) {\n                this.setState({ endDate: date }, () => {\n                    if (onSelected) {\n                        onSelected(startDate, date);\n                    }\n                });\n            }\n        };\n        this.handleStartDateOnChange = (evt, value, date) => {\n            if (date && this.isStartDateValid(date)) {\n                this.setState({ startDate: date }, () => {\n                    if (this.endDateRef && this.endDateRef.current) {\n                        this.endDateRef.current.setCalendarOpen(true);\n                    }\n                });\n            }\n        };\n    }\n    componentDidMount() {\n        const { router } = this.props;\n        const queryFromRoute = parseQuery(router.location.search);\n        const dateRangeType = getDateRangeTypeDefault(queryFromRoute);\n        const { end_date, start_date } = getDateRangeFromQuery(queryFromRoute);\n        if (this.startDateRef && this.startDateRef.current) {\n            this.startDateRef.current.setCalendarOpen(dateRangeType !== DateRangeType.custom);\n        }\n        if (dateRangeType === DateRangeType.custom) {\n            this.setState({\n                startDate: new Date(start_date + 'T00:00:00'),\n                endDate: new Date(end_date + 'T00:00:00'),\n            });\n        }\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { endDate, startDate } = this.state;\n        if (prevState.startDate !== startDate) {\n            // Don't adjust unless an end date has already been selected\n            if (endDate && !this.isEndDateValid(startDate, endDate)) {\n                this.setState({ endDate: undefined });\n            }\n        }\n    }\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(React.Fragment, null,\n            this.getStartDatePicker(),\n            React.createElement(\"span\", { style: styles.toContainer }, intl.formatMessage(messages.to)),\n            this.getEndDatePicker()));\n    }\n}\nconst ExplorerDatePicker = injectIntl(withRouter(ExplorerDatePickerBase));\nexport { ExplorerDatePicker };\n","import { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nclass ExplorerDateRangeBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isSelectOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getSelect = () => {\n            const { dateRangeType, isDisabled } = this.props;\n            const { isSelectOpen } = this.state;\n            const selectOptions = this.getSelectOptions();\n            const selection = selectOptions.find((option) => option.value === dateRangeType);\n            return (React.createElement(Select, { id: \"dateRangeSelect\", isDisabled: isDisabled, isOpen: isSelectOpen, onSelect: this.handleSelect, onToggle: this.handleToggle, selections: selection, variant: SelectVariant.single }, selectOptions.map(option => (React.createElement(SelectOption, { key: option.value, value: option })))));\n        };\n        this.getSelectOptions = () => {\n            const { intl, options } = this.props;\n            const selectOptions = [];\n            options.map(option => {\n                selectOptions.push({\n                    toString: () => intl.formatMessage(option.label, { value: option.value }),\n                    value: option.value,\n                });\n            });\n            return selectOptions;\n        };\n        this.handleSelect = (event, selection) => {\n            const { onSelected } = this.props;\n            if (onSelected) {\n                onSelected(selection.value);\n            }\n            this.setState({\n                isSelectOpen: false,\n            });\n        };\n        this.handleToggle = isSelectOpen => {\n            this.setState({ isSelectOpen });\n        };\n    }\n    render() {\n        return this.getSelect();\n    }\n}\nconst ExplorerDateRange = injectIntl(ExplorerDateRangeBase);\nexport { ExplorerDateRange };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    toolbarContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        marginLeft: global_spacer_md.var,\n        paddingTop: global_spacer_sm.var,\n    },\n};\n","import { OrgType } from 'api/orgs/org';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { ResourceType } from 'api/resources/resource';\nimport { TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { DateRangeType, getDateRangeFromQuery, getDateRangeTypeDefault } from 'routes/views/utils/dateRange';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps } from 'store/common';\nimport { orgActions, orgSelectors } from 'store/orgs';\nimport { resourceActions, resourceSelectors } from 'store/resources';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { formatStartEndDate } from 'utils/dates';\nimport { isEqual } from 'utils/equal';\nimport { awsCategoryKey, orgUnitIdKey, tagKey } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { ExplorerDatePicker } from './explorerDatePicker';\nimport { ExplorerDateRange } from './explorerDateRange';\nimport { styles } from './explorerFilter.styles';\nimport { dateRangeOptions, getGroupByOptions, getOrgReportPathsType, getResourcePathsType, getTagReportPathsType, PerspectiveType, } from './explorerUtils';\nconst orgType = OrgType.org;\nconst resourceType = ResourceType.aws_category;\nconst tagType = TagType.tag;\nexport class ExplorerFilterBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            showDatePicker: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { orgReport, perspective, intl, resourceReport, tagReport } = this.props;\n            const options = [];\n            const groupByOptions = getGroupByOptions(perspective);\n            groupByOptions.map(option => {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: option.label }),\n                    key: option.value,\n                });\n            });\n            if (orgReport && orgReport.data && orgReport.data.length > 0) {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: 'org_unit_id' }),\n                    key: orgUnitIdKey,\n                });\n            }\n            if (resourceReport && resourceReport.data && resourceReport.data.length > 0) {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: awsCategoryKey }),\n                    key: awsCategoryKey,\n                });\n            }\n            if (tagReport && tagReport.data && tagReport.data.length > 0) {\n                options.push({ name: intl.formatMessage(messages.filterByValues, { value: tagKey }), key: tagKey });\n            }\n            return options.sort((a, b) => {\n                if (a.name < b.name) {\n                    return -1;\n                }\n                if (a.name > b.name) {\n                    return 1;\n                }\n                return 0;\n            });\n        };\n        this.getDateRangeComponent = () => {\n            const { isDisabled } = this.props;\n            const { currentDateRangeType } = this.state;\n            return (React.createElement(ExplorerDateRange, { dateRangeType: currentDateRangeType, isDisabled: isDisabled, onSelected: this.handleDateRangeSelected, options: dateRangeOptions }));\n        };\n        this.getDatePickerComponent = () => {\n            const { showDatePicker } = this.state;\n            return showDatePicker ? React.createElement(ExplorerDatePicker, { onSelected: this.handleDatePickerSelected }) : undefined;\n        };\n        this.handleDatePickerSelected = (startDate, endDate) => {\n            const { query, router } = this.props;\n            const { start_date, end_date } = formatStartEndDate(startDate, endDate);\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { dateRangeType: DateRangeType.custom, start_date,\n                end_date });\n            router.navigate(getRouteForQuery(newQuery, router.location), { replace: true });\n        };\n        this.handleDateRangeSelected = (value) => {\n            const { query, router } = this.props;\n            const showDatePicker = value === DateRangeType.custom;\n            this.setState({ currentDateRangeType: value, showDatePicker }, () => {\n                if (!showDatePicker) {\n                    const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { dateRangeType: value, start_date: undefined, end_date: undefined });\n                    router.navigate(getRouteForQuery(newQuery, router.location), { replace: true });\n                }\n            });\n        };\n        this.updateReport = () => {\n            const { fetchOrg, fetchResource, fetchTag, orgQueryString, orgPathsType, perspective, resourcePathsType, resourceQueryString, tagQueryString, tagPathsType, } = this.props;\n            if (orgPathsType) {\n                fetchOrg(orgPathsType, orgType, orgQueryString);\n            }\n            if (resourcePathsType && (perspective === PerspectiveType.aws || perspective === PerspectiveType.awsOcp)) {\n                fetchResource(resourcePathsType, resourceType, resourceQueryString);\n            }\n            if (tagPathsType) {\n                fetchTag(tagPathsType, tagType, tagQueryString);\n            }\n        };\n    }\n    componentDidMount() {\n        const { dateRangeType } = this.props;\n        this.updateReport();\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n            currentDateRangeType: dateRangeType,\n            showDatePicker: dateRangeType === DateRangeType.custom,\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { orgReport, perspective, query, tagReport } = this.props;\n        if (query && !isEqual(query, prevProps.query)) {\n            this.updateReport();\n        }\n        if (!isEqual(orgReport, prevProps.orgReport) || !isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            });\n        }\n        // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n        if (prevProps.perspective !== perspective) {\n            this.handleDateRangeSelected(dateRangeOptions[0].value);\n        }\n    }\n    render() {\n        const { groupBy, isDisabled, onFilterAdded, onFilterRemoved, orgReport, query, resourcePathsType, resourceReport, tagPathsType, tagReport, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, dateRange: this.getDateRangeComponent(), datePicker: this.getDatePickerComponent(), groupBy: groupBy, isDisabled: isDisabled, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, orgReport: orgReport, query: query, resourceReport: resourceReport, resourcePathsType: resourcePathsType, style: styles.toolbarContainer, showFilter: true, tagReport: tagReport, tagPathsType: tagPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { perspective, router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const dateRangeType = getDateRangeTypeDefault(queryFromRoute);\n    const { end_date, start_date } = getDateRangeFromQuery(queryFromRoute);\n    // Omitting key_only to share a single request -- the toolbar needs key values\n    const orgQueryString = getQuery({\n        end_date,\n        start_date,\n        limit: 1000,\n    });\n    let orgReport;\n    let orgReportFetchStatus;\n    const orgPathsType = getOrgReportPathsType(perspective);\n    if (orgPathsType) {\n        orgReport = orgSelectors.selectOrg(state, orgPathsType, orgType, orgQueryString);\n        orgReportFetchStatus = orgSelectors.selectOrgFetchStatus(state, orgPathsType, orgType, orgQueryString);\n    }\n    const resourceQueryString = getQuery({\n        key_only: true,\n    });\n    let resourceReport;\n    let resourceReportFetchStatus;\n    const resourcePathsType = getResourcePathsType(perspective);\n    if (resourcePathsType) {\n        resourceReport = resourceSelectors.selectResource(state, resourcePathsType, resourceType, resourceQueryString);\n        resourceReportFetchStatus = resourceSelectors.selectResourceFetchStatus(state, resourcePathsType, resourceType, resourceQueryString);\n    }\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        end_date,\n        start_date,\n        key_only: true,\n        limit: 1000,\n    });\n    let tagReport;\n    let tagReportFetchStatus;\n    const tagPathsType = getTagReportPathsType(perspective);\n    if (tagPathsType) {\n        tagReport = tagSelectors.selectTag(state, tagPathsType, tagType, tagQueryString);\n        tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagPathsType, tagType, tagQueryString);\n    }\n    return {\n        dateRangeType,\n        orgPathsType,\n        orgQueryString,\n        orgReport,\n        orgReportFetchStatus,\n        resourcePathsType,\n        resourceQueryString,\n        resourceReport,\n        resourceReportFetchStatus,\n        tagPathsType,\n        tagQueryString,\n        tagReport,\n        tagReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchOrg: orgActions.fetchOrg,\n    fetchResource: resourceActions.fetchResource,\n    fetchTag: tagActions.fetchTag,\n};\nconst ExplorerFilterConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerFilterBase);\nconst ExplorerFilter = injectIntl(withRouter(ExplorerFilterConnect));\nexport { ExplorerFilter };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_Color_200 from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    cost: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    costDistribution: {\n        display: 'flex',\n        marginLeft: global_spacer_lg.var,\n    },\n    costLabel: {},\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    costLabelDate: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_200.var,\n    },\n    costType: {\n        display: 'flex',\n        marginLeft: global_spacer_md.var,\n    },\n    groupBy: {\n        paddingLeft: global_spacer_lg.var,\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        paddingBottom: global_spacer_sm.var,\n        paddingLeft: global_spacer_lg.var,\n        paddingRight: global_spacer_lg.var,\n        paddingTop: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    perspectiveContainer: {\n        display: 'flex',\n        marginTop: global_spacer_md.var,\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { parseQuery } from 'api/queries/query';\nimport { getUserAccessQuery } from 'api/queries/userAccessQuery';\nimport { UserAccessType } from 'api/userAccess';\nimport { ExportsLink } from 'components/drawers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Currency } from 'routes/components/currency';\nimport { CostDistribution } from 'routes/views/components/costDistribution';\nimport { CostType } from 'routes/views/components/costType';\nimport { GroupBy } from 'routes/views/components/groupBy';\nimport { Perspective } from 'routes/views/components/perspective';\nimport { filterProviders, hasCloudProvider } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { userAccessQuery, userAccessSelectors } from 'store/userAccess';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedExplorerReportItems';\nimport { withRouter } from 'utils/router';\nimport { hasAwsAccess, hasAzureAccess, hasGcpAccess, hasIbmAccess, isAwsAvailable, isAzureAvailable, isGcpAvailable, isIbmAvailable, isOciAvailable, isOcpAvailable, isRhelAvailable, } from 'utils/userAccess';\nimport { ExplorerFilter } from './explorerFilter';\nimport { styles } from './explorerHeader.styles';\nimport { baseQuery, getGroupByDefault, getGroupByOptions, getOrgReportPathsType, getResourcePathsType, getTagReportPathsType, PerspectiveType, } from './explorerUtils';\nclass ExplorerHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n        // TBD...\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getPerspective = (isDisabled) => {\n            const { isIbmFeatureEnabled } = this.props;\n            const { currentPerspective } = this.state;\n            const hasAws = this.isAwsAvailable();\n            const hasAzure = this.isAzureAvailable();\n            const hasOci = this.isOciAvailable();\n            const hasGcp = this.isGcpAvailable();\n            const hasIbm = this.isIbmAvailable();\n            const hasOcp = this.isOcpAvailable();\n            const hasRhel = this.isRhelAvailable();\n            // Note: No need to test \"OCP on cloud\" here, since that requires at least one of the providers below\n            if (!(hasAws || hasAzure || hasOci || hasGcp || hasIbm || hasOcp || hasRhel)) {\n                return null;\n            }\n            return (React.createElement(Perspective, { currentItem: currentPerspective, hasAws: hasAws, hasAwsOcp: this.isAwsOcpAvailable(), hasAzure: hasAzure, hasAzureOcp: this.isAzureOcpAvailable(), hasGcp: hasGcp, hasGcpOcp: this.isGcpOcpAvailable(), hasIbm: hasIbm, hasIbmOcp: this.isIbmOcpAvailable(), hasOci: hasOci, hasOcp: hasOcp, hasOcpCloud: this.isOcpCloudAvailable(), hasRhel: hasRhel, isDisabled: isDisabled, isIbmFeatureEnabled: isIbmFeatureEnabled, onSelected: this.handlePerspectiveSelected }));\n        };\n        this.handlePerspectiveSelected = (value) => {\n            const { onPerspectiveClicked, query, router } = this.props;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { exclude: undefined, filter_by: undefined, group_by: { [getGroupByDefault(value)]: '*' }, order_by: undefined, perspective: value });\n            this.setState({ currentPerspective: value }, () => {\n                if (onPerspectiveClicked) {\n                    onPerspectiveClicked(value);\n                }\n                router.navigate(getRouteForQuery(newQuery, router.location), { replace: true });\n            });\n        };\n        this.isAwsAvailable = () => {\n            const { awsProviders, userAccess } = this.props;\n            return isAwsAvailable(userAccess, awsProviders);\n        };\n        this.isAwsOcpAvailable = () => {\n            const { awsProviders, ocpProviders, userAccess } = this.props;\n            return hasAwsAccess(userAccess) && hasCloudProvider(awsProviders, ocpProviders);\n        };\n        this.isAzureAvailable = () => {\n            const { azureProviders, userAccess } = this.props;\n            return isAzureAvailable(userAccess, azureProviders);\n        };\n        this.isAzureOcpAvailable = () => {\n            const { azureProviders, ocpProviders, userAccess } = this.props;\n            return hasAzureAccess(userAccess) && hasCloudProvider(azureProviders, ocpProviders);\n        };\n        this.isGcpAvailable = () => {\n            const { gcpProviders, userAccess } = this.props;\n            return isGcpAvailable(userAccess, gcpProviders);\n        };\n        this.isGcpOcpAvailable = () => {\n            const { gcpProviders, ocpProviders, userAccess } = this.props;\n            return hasGcpAccess(userAccess) && hasCloudProvider(gcpProviders, ocpProviders);\n        };\n        this.isIbmAvailable = () => {\n            const { ibmProviders, userAccess } = this.props;\n            return isIbmAvailable(userAccess, ibmProviders);\n        };\n        this.isIbmOcpAvailable = () => {\n            const { ibmProviders, ocpProviders, userAccess } = this.props;\n            return hasIbmAccess(userAccess) && hasCloudProvider(ibmProviders, ocpProviders);\n        };\n        this.isOciAvailable = () => {\n            const { ociProviders, userAccess } = this.props;\n            return isOciAvailable(userAccess, ociProviders);\n        };\n        this.isOcpAvailable = () => {\n            const { ocpProviders, userAccess } = this.props;\n            return isOcpAvailable(userAccess, ocpProviders);\n        };\n        this.isOcpCloudAvailable = () => {\n            const hasAwsOcp = this.isAwsOcpAvailable();\n            const hasAzureOcp = this.isAzureOcpAvailable();\n            const hasGcpOcp = this.isGcpOcpAvailable();\n            const hasIbmOcp = this.isIbmOcpAvailable();\n            return hasAwsOcp || hasAzureOcp || hasGcpOcp || hasIbmOcp;\n        };\n        this.isRhelAvailable = () => {\n            const { isFinsightsFeatureEnabled, rhelProviders, userAccess } = this.props;\n            return isFinsightsFeatureEnabled && isRhelAvailable(userAccess, rhelProviders);\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            currentPerspective: this.props.perspective,\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { perspective } = this.props;\n        if (prevProps.perspective !== perspective) {\n            this.setState({\n                currentPerspective: this.props.perspective,\n            });\n        }\n    }\n    render() {\n        const { costDistribution, costType, currency, groupBy, intl, isCostDistributionFeatureEnabled, isExportsFeatureEnabled, onCostDistributionSelected, onCostTypeSelected, onCurrencySelected, onFilterAdded, onFilterRemoved, onGroupBySelected, perspective, providersFetchStatus, query, report, } = this.props;\n        // Note: No need to test OCP on cloud here, since that requires at least one provider\n        const noAwsProviders = !this.isAwsAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noAzureProviders = !this.isAzureAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noGcpProviders = !this.isGcpAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noIbmProviders = !this.isIbmAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noOcpProviders = !this.isOcpAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noRhelProviders = !this.isRhelAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noProviders = noAwsProviders && noAzureProviders && noGcpProviders && noIbmProviders && noOcpProviders && noRhelProviders;\n        const groupByOptions = getGroupByOptions(perspective);\n        const orgPathsType = getOrgReportPathsType(perspective);\n        const resourcePathsType = getResourcePathsType(perspective);\n        const tagPathsType = getTagReportPathsType(perspective);\n        const showCostDistribution = isCostDistributionFeatureEnabled &&\n            costDistribution &&\n            report &&\n            report.meta &&\n            report.meta.distributed_overhead === true;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.explorerTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.perspectiveContainer },\n                this.getPerspective(noProviders),\n                React.createElement(\"div\", { style: styles.groupBy },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: noProviders, onSelected: onGroupBySelected, options: groupByOptions, orgPathsType: orgPathsType, perspective: perspective, resourcePathsType: resourcePathsType, showCostCategories: resourcePathsType, showOrgs: orgPathsType, showTags: tagPathsType, tagPathsType: tagPathsType })),\n                showCostDistribution && (React.createElement(\"div\", { style: styles.costDistribution },\n                    React.createElement(CostDistribution, { costDistribution: costDistribution, onSelect: onCostDistributionSelected }))),\n                (perspective === PerspectiveType.aws || perspective === PerspectiveType.awsOcp) && (React.createElement(\"div\", { style: styles.costType },\n                    React.createElement(CostType, { costType: costType, onSelect: onCostTypeSelected })))),\n            React.createElement(ExplorerFilter, { groupBy: groupBy, isDisabled: noProviders, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, perspective: perspective, query: query })));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { perspective, router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    const userAccessQueryString = getUserAccessQuery(userAccessQuery);\n    const userAccess = userAccessSelectors.selectUserAccess(state, UserAccessType.all, userAccessQueryString);\n    const userAccessError = userAccessSelectors.selectUserAccessError(state, UserAccessType.all, userAccessQueryString);\n    const userAccessFetchStatus = userAccessSelectors.selectUserAccessFetchStatus(state, UserAccessType.all, userAccessQueryString);\n    // Ensure group_by key is not undefined\n    let group_by = queryFromRoute.group_by;\n    if (!group_by && perspective) {\n        group_by = { [getGroupByDefault(perspective)]: '*' };\n    }\n    const query = Object.assign(Object.assign(Object.assign({}, baseQuery), queryFromRoute), { group_by });\n    return {\n        awsProviders: filterProviders(providers, ProviderType.aws),\n        azureProviders: filterProviders(providers, ProviderType.azure),\n        gcpProviders: filterProviders(providers, ProviderType.gcp),\n        ibmProviders: filterProviders(providers, ProviderType.ibm),\n        isCostDistributionFeatureEnabled: featureFlagsSelectors.selectIsCostDistributionFeatureEnabled(state),\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        isFinsightsFeatureEnabled: featureFlagsSelectors.selectIsFinsightsFeatureEnabled(state),\n        isIbmFeatureEnabled: featureFlagsSelectors.selectIsIbmFeatureEnabled(state),\n        ociProviders: filterProviders(providers, ProviderType.oci),\n        ocpProviders: filterProviders(providers, ProviderType.ocp),\n        providers,\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n        query,\n        rhelProviders: filterProviders(providers, ProviderType.rhel),\n        userAccess,\n        userAccessError,\n        userAccessFetchStatus,\n        userAccessQueryString,\n    };\n});\nconst ExplorerHeader = injectIntl(withRouter(connect(mapStateToProps, {})(ExplorerHeaderBase)));\nexport { ExplorerHeader };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    defaultLabel: {\n        minWidth: '63px',\n    },\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport './explorerTable.scss';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Label, Spinner, Tooltip } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { InnerScrollContainer, SortByDirection, TableComposable, Tbody, Td, Th, Thead, Tr, } from '@patternfly/react-table';\nimport { parseQuery } from 'api/queries/query';\nimport { format } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { ComputedReportItemType, ComputedReportItemValueType } from 'routes/views/components/charts/common/chartDatum';\nimport { getDateRangeFromQuery } from 'routes/views/utils/dateRange';\nimport { createMapStateToProps } from 'store/common';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { formatCurrency } from 'utils/format';\nimport { classificationDefault, noPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { styles } from './explorerTable.styles';\nimport { PerspectiveType } from './explorerUtils';\nclass ExplorerTableBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.selectColRef = React.createRef();\n        this.nameColRef = React.createRef();\n        this.state = {\n            columns: [],\n            rows: [],\n            showLabels: false,\n        };\n        this.initDatum = () => {\n            const { costDistribution, end_date, groupBy, groupByCostCategory, groupByOrg, groupByTagKey, isAllSelected, perspective, report, selectedItems, start_date, intl, } = this.props;\n            if (!report) {\n                return;\n            }\n            const isGroupByProject = groupBy === 'project';\n            const showPlatformCosts = perspective === PerspectiveType.ocp && isGroupByProject;\n            const showCostDistribution = costDistribution && report && report.meta && report.meta.distributed_overhead === true;\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                isDateMap: true,\n                idKey: groupByCostCategory\n                    ? groupByCostCategory\n                    : groupByTagKey\n                        ? groupByTagKey\n                        : groupByOrg\n                            ? 'org_entities'\n                            : groupBy,\n            });\n            // Add first two column headings (i.e., select and name)\n            const columns = groupByCostCategory || groupByTagKey || groupByOrg\n                ? [\n                    {\n                        name: '',\n                    },\n                    {\n                        name: groupByCostCategory\n                            ? intl.formatMessage(messages.costCategoryNames)\n                            : groupByOrg\n                                ? intl.formatMessage(messages.names, { count: 2 })\n                                : intl.formatMessage(messages.tagNames),\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign({ date: undefined, name: intl.formatMessage(messages.groupByValueNames, { groupBy }), orderBy: groupBy === 'account' && perspective === PerspectiveType.aws ? 'account_alias' : groupBy }, (computedItems.length && { isSortable: true })),\n                    {\n                        hidden: !isGroupByProject,\n                        isLabelColumn: true,\n                        name: '',\n                    },\n                ];\n            // Fill in missing columns\n            for (let currentDate = new Date(start_date + 'T00:00:00'); currentDate <= new Date(end_date + 'T00:00:00'); currentDate.setDate(currentDate.getDate() + 1)) {\n                const mapId = format(currentDate, 'yyyy-MM-dd');\n                let isSortable = false;\n                computedItems.map(rowItem => {\n                    const item = rowItem.get(mapId);\n                    if (!item) {\n                        rowItem.set(mapId, {\n                            date: mapId,\n                        });\n                    }\n                    else {\n                        isSortable = true; // At least one row must be available\n                    }\n                });\n                // Add column headings\n                const mapIdDate = new Date(mapId + 'T00:00:00');\n                columns.push({\n                    name: intl.formatDate(mapIdDate, {\n                        day: 'numeric',\n                        month: 'short',\n                    }),\n                    date: mapId,\n                    isSortable,\n                    orderBy: costDistribution === ComputedReportItemValueType.distributed ? 'distributed_cost' : 'cost',\n                });\n            }\n            let showLabels = false;\n            const reportItem = ComputedReportItemType.cost;\n            const reportItemValue = costDistribution ? costDistribution : ComputedReportItemValueType.total;\n            const rows = [];\n            // Sort by date and fill in missing cells\n            computedItems.map(rowItem => {\n                const cells = [];\n                let desc; // First column description (i.e., show ID if different than label)\n                let name; // For first column resource name\n                let selectItem; // Save for row selection\n                let isOverheadCosts = false; // True if item has overhead costs\n                let isPlatformCosts = false; // True if item is of default classification\n                const items = Array.from(rowItem.values()).sort((a, b) => {\n                    if (new Date(a.date) > new Date(b.date)) {\n                        return 1;\n                    }\n                    else if (new Date(a.date) < new Date(b.date)) {\n                        return -1;\n                    }\n                    else {\n                        return 0;\n                    }\n                });\n                items.map(item => {\n                    if (!name) {\n                        name = item && item.label && item.label !== null ? item.label : null;\n                    }\n                    if (!desc) {\n                        desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                    }\n                    if (item.id && !selectItem) {\n                        selectItem = item;\n                    }\n                    if (showCostDistribution &&\n                        item.cost &&\n                        ((item.cost.platformDistributed && item.cost.platformDistributed.value > 0) ||\n                            (item.cost.workerUnallocatedDistributed && item.cost.workerUnallocatedDistributed.value > 0))) {\n                        isOverheadCosts = true;\n                        showLabels = true;\n                    }\n                    if (showPlatformCosts && item.classification === classificationDefault) {\n                        isPlatformCosts = true;\n                        showLabels = true;\n                    }\n                    // Add row cells\n                    cells.push({\n                        value: item[reportItem] && item[reportItem][reportItemValue]\n                            ? formatCurrency(item[reportItem][reportItemValue].value, item[reportItem][reportItemValue].units)\n                            : intl.formatMessage(messages.chartNoData),\n                    });\n                });\n                // Add first row cells\n                cells.unshift({}, // Empty cell for row selection\n                {\n                    value: (React.createElement(\"div\", null,\n                        name,\n                        desc)),\n                }, {\n                    hidden: !isGroupByProject,\n                    isLabelColumn: true,\n                    value: isPlatformCosts ? (React.createElement(\"div\", null,\n                        React.createElement(Label, { variant: \"outline\", color: \"green\" }, intl.formatMessage(messages.default)))) : isOverheadCosts ? (React.createElement(Tooltip, { content: intl.formatMessage(messages.overheadDesc), enableFlip: true },\n                        React.createElement(Label, { variant: \"outline\", color: \"orange\" }, intl.formatMessage(messages.overhead)))) : (React.createElement(\"div\", { style: styles.defaultLabel })),\n                });\n                rows.push({\n                    cells,\n                    selectionDisabled: selectItem.label === `${noPrefix}${groupBy}` ||\n                        selectItem.label === `${noPrefix}${groupByCostCategory}` ||\n                        selectItem.label === `${noPrefix}${groupByTagKey}`,\n                    item: selectItem,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === selectItem.id) !== undefined),\n                });\n            });\n            // Hide column if there are no labels to show\n            if (isGroupByProject && !showLabels) {\n                columns.map(column => {\n                    if (column.isLabelColumn) {\n                        column.hidden = true;\n                    }\n                });\n                rows.map(row => {\n                    row.cells.map(cell => {\n                        if (cell.isLabelColumn) {\n                            cell.hidden = true;\n                        }\n                    });\n                });\n            }\n            const filteredColumns = columns.filter(column => !column.hidden);\n            const filteredRows = rows.map((_a) => {\n                var row = __rest(_a, []);\n                row.cells = row.cells.filter(cell => !cell.hidden);\n                return row;\n            });\n            this.setState({\n                columns: filteredColumns,\n                rows: filteredRows,\n                showLabels,\n            });\n        };\n        this.getEmptyState = () => {\n            const { query, intl } = this.props;\n            for (const val of Object.values(query.filter_by)) {\n                if (val !== '*') {\n                    return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                }\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { query } = this.props;\n            const { columns } = this.state;\n            let direction;\n            const column = columns[index];\n            const hasOrderBy = query && query.order_by && query.order_by;\n            if (column.orderBy && !column.date) {\n                direction = hasOrderBy && query.order_by[column.orderBy];\n            }\n            else if (hasOrderBy && query.order_by.date === column.date) {\n                direction = hasOrderBy && query.order_by[column.orderBy];\n            }\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected } = this.props;\n            const { rows } = this.state;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { onSort } = this.props;\n            const { columns } = this.state;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending, columns[index].date);\n            }\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { costDistribution, report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport ||\n            prevProps.selectedItems !== selectedItems ||\n            prevProps.costDistribution !== costDistribution) {\n            this.initDatum();\n        }\n    }\n    render() {\n        var _a, _b, _c, _d;\n        const { intl, isLoading } = this.props;\n        const { columns, rows, showLabels } = this.state;\n        const selectColOffset = ((_b = (_a = this.selectColRef) === null || _a === void 0 ? void 0 : _a.current) === null || _b === void 0 ? void 0 : _b.clientWidth) ? this.selectColRef.current.clientWidth : 53;\n        const nameColOffset = ((_d = (_c = this.nameColRef) === null || _c === void 0 ? void 0 : _c.current) === null || _d === void 0 ? void 0 : _d.clientWidth) ? this.nameColRef.current.clientWidth : 215;\n        return (React.createElement(InnerScrollContainer, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.explorerTableAriaLabel), className: \"explorerTableOverride\", gridBreakPoint: \"\" },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => index === 0 ? (React.createElement(Th, { isStickyColumn: true, key: `col-${index}-${col.value}`, stickyMinWidth: \"53px\" })) : index === 1 ? (React.createElement(Th, { hasRightBorder: !showLabels, isStickyColumn: true, key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, stickyMinWidth: showLabels ? '215px' : '100px', stickyLeftOffset: \"53px\" }, col.name)) : index === 2 && showLabels ? (React.createElement(Th, { hasRightBorder: true, isStickyColumn: true, key: `col-${index}-${col.value}`, modifier: \"nowrap\", stickyMinWidth: \"110px\", stickyLeftOffset: `${selectColOffset + nameColOffset}px` }, col.name)) : (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, isStickyColumn: true, key: `cell-${cellIndex}-${rowIndex}`, ref: this.selectColRef, select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    }, stickyMinWidth: \"53px\" })) : cellIndex === 1 ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, hasRightBorder: !showLabels, isStickyColumn: true, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", ref: this.nameColRef, stickyMinWidth: showLabels ? '215px' : '100px', stickyLeftOffset: \"53px\" }, item.value)) : cellIndex === 2 && showLabels ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, hasRightBorder: true, isStickyColumn: true, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", stickyMinWidth: \"110px\", stickyLeftOffset: `${selectColOffset + nameColOffset}px` }, item.value)) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\" }, item.value))))))))),\n            rows.length === 0 && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const { end_date, start_date } = getDateRangeFromQuery(queryFromRoute);\n    return {\n        end_date,\n        start_date,\n    };\n});\nconst mapDispatchToProps = {};\nconst ExplorerTableConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerTableBase);\nconst ExplorerTable = injectIntl(withRouter(ExplorerTableConnect));\nexport { ExplorerTable };\n","import React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { createMapStateToProps } from 'store/common';\nimport { getTagReportPathsType } from './explorerUtils';\nexport class ExplorerToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { isAllSelected, isBulkSelectDisabled, isDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onExportClicked, pagination, perspective, selectedItems, } = this.props;\n        const tagPathsType = getTagReportPathsType(perspective);\n        // Note: This is the table toolbar used for bulk select and pagination, not the filter toolbar in the page header\n        return (React.createElement(DataToolbar, { isAllSelected: isAllSelected, isBulkSelectDisabled: isBulkSelectDisabled, isDisabled: isDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onExportClicked: onExportClicked, pagination: pagination, selectedItems: selectedItems, showBulkSelect: true, showExcludes: true, showExport: true, tagPathsType: tagPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst ExplorerToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerToolbarBase);\nconst ExplorerToolbar = injectIntl(ExplorerToolbarConnect);\nexport { ExplorerToolbar };\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { getUserAccessQuery } from 'api/queries/userAccessQuery';\nimport { UserAccessType } from 'api/userAccess';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoData } from 'routes/state/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { ComputedReportItemValueType } from 'routes/views/components/charts/common';\nimport { ExportModal } from 'routes/views/components/export';\nimport { getDateRangeFromQuery, getDateRangeTypeDefault } from 'routes/views/utils/dateRange';\nimport { getGroupByCostCategory, getGroupById, getGroupByOrgValue, getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { handleCostDistributionSelected, handleCostTypeSelected, handleCurrencySelected, handleFilterAdded, handleFilterRemoved, handlePerPageSelect, handleSetPage, handleSort, } from 'routes/views/utils/handles';\nimport { filterProviders, hasData } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { userAccessQuery, userAccessSelectors } from 'store/userAccess';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedExplorerReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getCostDistribution, getCostType, getCurrency } from 'utils/localStorage';\nimport { awsCategoryPrefix, noPrefix, orgUnitIdKey, tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { isAwsAvailable, isAzureAvailable, isGcpAvailable, isIbmAvailable, isOciAvailable, isOcpAvailable, isRhelAvailable, } from 'utils/userAccess';\nimport { styles } from './explorer.styles';\nimport { ExplorerChart } from './explorerChart';\nimport { ExplorerHeader } from './explorerHeader';\nimport { ExplorerTable } from './explorerTable';\nimport { ExplorerToolbar } from './explorerToolbar';\nimport { baseQuery, getGroupByDefault, getPerspectiveDefault, getReportPathsType, getReportType, PerspectiveType, } from './explorerUtils';\nclass Explorer extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            isAllSelected: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByCostCategory = getGroupByCostCategory(query);\n            const groupByOrg = getGroupByOrgValue(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: groupByCostCategory\n                    ? groupByCostCategory\n                    : groupByTagKey\n                        ? groupByTagKey\n                        : groupByOrg\n                            ? 'org_entities'\n                            : groupById,\n                isDateMap: false, // Don't use isDateMap here, so we can use a flattened data structure with row selection\n            });\n            return computedItems;\n        };\n        this.getExportModal = (computedItems) => {\n            const { perspective, query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByCostCategory = getGroupByCostCategory(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `${noPrefix}${groupById}` || item.label === `${noPrefix}${groupByCostCategory}`) ||\n                    item.label === `${noPrefix}${groupByTagKey}`) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByCostCategory\n                    ? `${awsCategoryPrefix}${groupByCostCategory}`\n                    : groupByTagKey\n                        ? `${tagPrefix}${groupByTagKey}`\n                        : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: getReportPathsType(perspective), reportQueryString: reportQueryString, resolution: \"daily\", showTimeScope: false }));\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, report, router } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = Math.trunc(offset / limit + 1);\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handlePerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.explorerTitle),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { costDistribution, perspective, query, report, reportFetchStatus, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByCostCategory = getGroupByCostCategory(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            const groupByOrg = getGroupByOrgValue(query);\n            return (React.createElement(ExplorerTable, { costDistribution: costDistribution, groupBy: groupByCostCategory\n                    ? `${awsCategoryPrefix}${groupByCostCategory}`\n                    : groupByTagKey\n                        ? `${tagPrefix}${groupByTagKey}`\n                        : groupById, groupByCostCategory: groupByCostCategory, groupByTagKey: groupByTagKey, groupByOrg: groupByOrg, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending, date) => handleSort(query, router, sortType, isSortAscending, date), perspective: perspective, query: query, report: report, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { perspective, report } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(ExplorerToolbar, { isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isDisabled || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onExportClicked: this.handleExportModalOpen, pagination: this.getPagination(isDisabled), perspective: perspective, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleDatePickerSelected = (startDate, endDate) => {\n            this.setState({ startDate, endDate });\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            let groupByKey = groupBy;\n            let value = '*';\n            // Check for org units\n            const index = groupBy && groupBy.indexOf(orgUnitIdKey);\n            if (index !== -1) {\n                groupByKey = orgUnitIdKey.substring(0, orgUnitIdKey.length);\n                value = groupBy.slice(orgUnitIdKey.length);\n            }\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: value,\n                }, order_by: undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handlePerspectiveClick = () => {\n            this.setState({ isAllSelected: false, selectedItems: [] });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.isAwsAvailable = () => {\n            const { awsProviders, userAccess } = this.props;\n            return isAwsAvailable(userAccess, awsProviders);\n        };\n        this.isAzureAvailable = () => {\n            const { azureProviders, userAccess } = this.props;\n            return isAzureAvailable(userAccess, azureProviders);\n        };\n        this.isOciAvailable = () => {\n            const { ociProviders, userAccess } = this.props;\n            return isOciAvailable(userAccess, ociProviders);\n        };\n        this.isGcpAvailable = () => {\n            const { gcpProviders, userAccess } = this.props;\n            return isGcpAvailable(userAccess, gcpProviders);\n        };\n        this.isIbmAvailable = () => {\n            const { ibmProviders, userAccess } = this.props;\n            return isIbmAvailable(userAccess, ibmProviders);\n        };\n        this.isOcpAvailable = () => {\n            const { ocpProviders, userAccess } = this.props;\n            return isOcpAvailable(userAccess, ocpProviders);\n        };\n        this.isRhelAvailable = () => {\n            const { isFinsightsFeatureEnabled, rhelProviders, userAccess } = this.props;\n            return isFinsightsFeatureEnabled && isRhelAvailable(userAccess, rhelProviders);\n        };\n        this.updateReport = () => {\n            const { fetchReport, perspective, reportQueryString } = this.props;\n            fetchReport(getReportPathsType(perspective), getReportType(perspective), reportQueryString);\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handlePerspectiveClick = this.handlePerspectiveClick.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { perspective, report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newPerspective = prevProps.perspective !== perspective;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newPerspective || newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { awsProviders, azureProviders, ociProviders, costDistribution, costType, currency, gcpProviders, ibmProviders, intl, ocpProviders, providersFetchStatus, perspective, userAccessFetchStatus, query, report, reportError, reportFetchStatus, router, } = this.props;\n        // Note: No need to test OCP on cloud here, since that requires at least one provider\n        const noAwsProviders = !this.isAwsAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noAzureProviders = !this.isAzureAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noGcpProviders = !this.isGcpAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noIbmProviders = !this.isIbmAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noOcpProviders = !this.isOcpAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noOciProviders = !this.isOciAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noRhelProviders = !this.isRhelAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noProviders = noAwsProviders &&\n            noAzureProviders &&\n            noGcpProviders &&\n            noIbmProviders &&\n            noOciProviders &&\n            noOcpProviders &&\n            noRhelProviders;\n        const isLoading = providersFetchStatus === FetchStatus.inProgress || userAccessFetchStatus === FetchStatus.inProgress;\n        const computedItems = this.getComputedItems();\n        const isDisabled = computedItems.length === 0;\n        const itemsTotal = report && report.meta ? report.meta.count : 0;\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const groupByCostCategory = getGroupByCostCategory(query);\n        const groupByTagKey = getGroupByTagKey(query);\n        const title = intl.formatMessage(messages.explorerTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (isLoading) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (noProviders) {\n            return React.createElement(NoProviders, { title: title });\n        }\n        else if (!(hasData(awsProviders) ||\n            hasData(azureProviders) ||\n            hasData(ociProviders) ||\n            hasData(gcpProviders) ||\n            hasData(ibmProviders) ||\n            hasData(ocpProviders))) {\n            return React.createElement(NoData, { title: title });\n        }\n        return (React.createElement(\"div\", { style: styles.explorer },\n            React.createElement(ExplorerHeader, { costDistribution: costDistribution, costType: costType, currency: currency, groupBy: groupByCostCategory\n                    ? `${awsCategoryPrefix}${groupByCostCategory}`\n                    : groupByTagKey\n                        ? `${tagPrefix}${groupByTagKey}`\n                        : groupById, onCostDistributionSelected: value => handleCostDistributionSelected(query, router, value), onCostTypeSelected: value => handleCostTypeSelected(query, router, value), onCurrencySelected: value => handleCurrencySelected(query, router, value), onDatePickerSelected: this.handleDatePickerSelected, onFilterAdded: filter => handleFilterAdded(query, router, filter), onFilterRemoved: filter => handleFilterRemoved(query, router, filter), onGroupBySelected: this.handleGroupBySelected, onPerspectiveClicked: this.handlePerspectiveClick, perspective: perspective, report: report }),\n            itemsTotal > 0 && (React.createElement(\"div\", { style: styles.chartContent },\n                React.createElement(\"div\", { style: styles.chartContainer },\n                    React.createElement(ExplorerChart, { costDistribution: costDistribution, costType: costType, currency: currency, groupBy: groupByCostCategory\n                            ? `${awsCategoryPrefix}${groupByCostCategory}`\n                            : groupByTagKey\n                                ? `${tagPrefix}${groupByTagKey}`\n                                : groupById, perspective: perspective })))),\n            React.createElement(\"div\", { style: styles.tableContent },\n                React.createElement(\"div\", { style: styles.toolbarContainer }, this.getToolbar(computedItems)),\n                this.getExportModal(computedItems),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    // Get roviders first\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    const awsProviders = filterProviders(providers, ProviderType.aws);\n    const azureProviders = filterProviders(providers, ProviderType.azure);\n    const ociProviders = filterProviders(providers, ProviderType.oci);\n    const gcpProviders = filterProviders(providers, ProviderType.gcp);\n    const ibmProviders = filterProviders(providers, ProviderType.ibm);\n    const ocpProviders = filterProviders(providers, ProviderType.ocp);\n    const rhelProviders = filterProviders(providers, ProviderType.rhel);\n    const userAccessQueryString = getUserAccessQuery(userAccessQuery);\n    const userAccess = userAccessSelectors.selectUserAccess(state, UserAccessType.all, userAccessQueryString);\n    const userAccessError = userAccessSelectors.selectUserAccessError(state, UserAccessType.all, userAccessQueryString);\n    const userAccessFetchStatus = userAccessSelectors.selectUserAccessFetchStatus(state, UserAccessType.all, userAccessQueryString);\n    // Cost Report\n    const dateRangeType = getDateRangeTypeDefault(queryFromRoute);\n    const { end_date, start_date } = getDateRangeFromQuery(queryFromRoute);\n    const perspective = getPerspectiveDefault({\n        awsProviders,\n        azureProviders,\n        ociProviders,\n        gcpProviders,\n        ibmProviders,\n        ocpProviders,\n        queryFromRoute,\n        rhelProviders,\n        userAccess,\n    });\n    const groupBy = queryFromRoute.group_by ? getGroupById(queryFromRoute) : getGroupByDefault(perspective);\n    const group_by = queryFromRoute.group_by ? queryFromRoute.group_by : { [groupBy]: '*' }; // Ensure group_by key is not undefined\n    const isCostDistributionFeatureEnabled = featureFlagsSelectors.selectIsCostDistributionFeatureEnabled(state);\n    const costDistribution = perspective === PerspectiveType.ocp && groupBy === 'project' && isCostDistributionFeatureEnabled\n        ? getCostDistribution()\n        : undefined;\n    const costType = perspective === PerspectiveType.aws || perspective === PerspectiveType.awsOcp ? getCostType() : undefined;\n    const currency = getCurrency();\n    const query = Object.assign(Object.assign(Object.assign(Object.assign({}, baseQuery), (costDistribution === ComputedReportItemValueType.distributed && {\n        order_by: {\n            distributed_cost: 'desc',\n        },\n    })), queryFromRoute), { group_by });\n    const reportQuery = {\n        cost_type: costType,\n        currency,\n        end_date,\n        exclude: query.exclude,\n        filter: query.filter,\n        filter_by: query.filter_by,\n        group_by,\n        order_by: query.order_by,\n        start_date,\n    };\n    const reportPathsType = getReportPathsType(perspective);\n    const reportType = getReportType(perspective);\n    const reportQueryString = getQuery(reportQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    return {\n        awsProviders,\n        azureProviders,\n        costDistribution,\n        costType,\n        currency,\n        dateRangeType,\n        gcpProviders,\n        ibmProviders,\n        isFinsightsFeatureEnabled: featureFlagsSelectors.selectIsFinsightsFeatureEnabled(state),\n        ociProviders,\n        ocpProviders,\n        perspective,\n        providers,\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n        rhelProviders,\n        userAccess,\n        userAccessError,\n        userAccessFetchStatus,\n        userAccessQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(Explorer)));\n","export const skeletonWidth = {\n    xs: '16%',\n    sm: '33%',\n    md: '66%',\n    lg: '100%',\n};\n","import { UserAccessType } from 'api/userAccess';\nconst hasAccess = (userAccess, userAccessType) => {\n    let result = false;\n    if (userAccess && Array.isArray(userAccess.data)) {\n        // Used with multiple types (e.g., type=)\n        const data = userAccess.data.find(d => d.type === userAccessType);\n        result = data && data.access;\n    }\n    else {\n        // Used with type=any, type=GCP, etc.\n        result = userAccess && userAccess.data === true;\n    }\n    return result;\n};\nconst hasProviders = (providers) => {\n    let result = false;\n    if (providers && providers.meta) {\n        // providers API returns empty data array for no sources\n        result = providers.meta.count > 0;\n    }\n    return result;\n};\n// Returns true if user has access to AWS\nexport const hasAwsAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.aws);\n};\n// Returns true if user has access to AWS and at least one source provider\nexport const isAwsAvailable = (userAccess, awsProviders) => {\n    return hasAwsAccess(userAccess) && hasProviders(awsProviders);\n};\n// Returns true if user has access to Azure\nexport const hasAzureAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.azure);\n};\n// Returns true if user has access to Azure and at least one source provider\nexport const isAzureAvailable = (userAccess, azureProviders) => {\n    return hasAzureAccess(userAccess) && hasProviders(azureProviders);\n};\n// Returns true if user has access to Oci\nexport const hasOciAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.oci);\n};\n// Returns true if user has access to Oci and at least one source provider\nexport const isOciAvailable = (userAccess, ociProviders) => {\n    return hasOciAccess(userAccess) && hasProviders(ociProviders);\n};\n// Returns true if user has access to cost models\nexport const hasCostModelAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.cost_model);\n};\n// Returns true if user has access to GCP\nexport const hasGcpAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.gcp);\n};\n// Returns true if user has access to GCP and at least one source provider\nexport const isGcpAvailable = (userAccess, gcpProviders) => {\n    return hasAccess(userAccess, UserAccessType.gcp) && hasProviders(gcpProviders);\n};\n// Returns true if user has access to IBM\nexport const hasIbmAccess = (userAccess) => {\n    return hasGcpAccess(userAccess);\n};\n// Returns true if user has access to IBM and at least one source provider\nexport const isIbmAvailable = (userAccess, ibmProviders) => {\n    return hasIbmAccess(userAccess) && hasProviders(ibmProviders);\n};\n// Returns true if user has access to OCP\nexport const hasOcpAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.ocp);\n};\n// Returns true if user has access to OCP and at least one source provider\nexport const isOcpAvailable = (userAccess, ocpProviders) => {\n    return hasOcpAccess(userAccess) && hasProviders(ocpProviders);\n};\n// Returns true if user has access to RHEL\nexport const hasRhelAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.rhel);\n};\n// Returns true if user has access to RHEL and at least one source provider\nexport const isRhelAvailable = (userAccess, rhelProviders) => {\n    return hasRhelAccess(userAccess) && hasProviders(rhelProviders);\n};\n// Returns true if user has access to ROS\nexport const hasRosAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.ros);\n};\n// Returns true if user has access to RHEL and at least one source provider\nexport const isRosAvailable = (userAccess, rosProviders) => {\n    return hasRosAccess(userAccess) && hasProviders(rosProviders);\n};\n"],"names":["exports","getUserAccessQuery","query","stringify","encode","indices","LAYOUT_PROPS","padding","area","Object","assign","axis","bar","boxplot","candlestick","chart","errorbar","group","legend","line","pie","scatter","stack","tooltip","voronoi","ChartTheme","infrastructureAwsOptions","label","messages","value","infrastructureAwsOcpOptions","infrastructureAzureOptions","infrastructureOciOptions","infrastructureAzureOcpOptions","infrastructureGcpOptions","infrastructureGcpOcpOptions","infrastructureIbmOptions","infrastructureIbmOcpOptions","infrastructureOcpCloudOptions","ocpOptions","rhelOptions","getInfrastructureOptions","hasAws","hasAwsOcp","hasAzure","hasAzureOcp","hasGcp","hasGcpOcp","hasIbm","hasIbmOcp","hasOci","isIbmFeatureEnabled","options","push","currentItem","hasOcp","hasOcpCloud","hasRhel","isDisabled","isInfrastructureTab","isRhelTab","onSelected","undefined","getIdKeyForGroupBy","groupBy","account","cluster","gcp_project","node","org_unit_id","payer_tenant_id","product_service","project","region","resource_location","service","service_name","subscription_guid","styles","chartContainer","backgroundColor","global_BackgroundColor_light_100","marginLeft","global_spacer_lg","marginRight","paddingRight","paddingBottom","paddingTop","chartContent","explorer","minHeight","paginationContainer","pagination","global_spacer_md","tableContainer","tableContent","toolbarContainer","_arrayLikeToArray","arr","len","length","i","arr2","Array","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","configurable","writable","fallbackProps","width","height","stackData","props","childComponents","filterNullChildData","map","dataset","datum","_x","_y","datasets","fillInMissingData","xMap","reduce","prev","Date","getTime","xKeys","k","Number","xArr","indexOffset","isDate","x","index","y","fillData","d","xOffset","yOffset","y0","_group","firstDatasetBaseline","previousPoints","slice","concat","previousDatum","memo","some","point","getY0","_y0","_y1","_x1","addLayoutData","getCalculatedProps","children","role","style","theme","categories","c","data","domain","range","baseScale","scale","horizontal","_props","colorScale","getColorScale","child","type","colorScaleOptions","getChildren","calculatedProps","childProps","standalone","getChildProps","parentName","name","labels","getLabels","domainPadding","labelComponent","polar","VictoryStackBase","initialProps","VictoryStack","_Hooks$useAnimationSt","setAnimationState","getAnimationProps","getProps","modifiedProps","eventKey","containerComponent","groupComponent","externalEventMutations","modifiedChildren","_child","withoutSharedEvents","_React$useState2","isArray","_arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","err","_iterableToArrayLimit","o","minLen","n","prototype","toString","constructor","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","setProps","useMemoizedProps","newChildren","animate","reverse","containerProps","parent","userProps","container","defaultContainerProps","events","previousProps","propTypes","bins","defaultProps","componentConfig","expectedComponents","displayName","ChartStack","_a","ariaDesc","ariaTitle","ChartContainer","hasPatterns","patternScale","themeColor","themeVariant","rest","desc","title","className","g","defaultPatternScale","themeColorScale","chartStyles","chart_color_blue_300","chart_color_gold_300","chart_color_green_300","chart_color_purple_300","chart_color_orange_300","chart_color_cyan_300","yAxis","axisLabel","grid","stroke","ticks","yAxisAlt","tickLabels","fontSize","xAxis","CostExplorerChartBase","super","this","containerRef","observer","noop","state","hiddenSeries","Set","tickValues","initDatum","top1stData","top2ndData","top3rdData","top4thData","top5thData","top6thData","series","getTruncatedString","childName","initDatumChildName","legendItem","symbol","fill","cursorVoronoiContainer","getCursorVoronoiContainer","units","getUnits","setState","getTickValues","getAdjustedContainerHeight","adjustContainerHeight","containerHeight","adjustedContainerHeight","getBarWidth","maxValue","s","sectionWidth","getChart","barWidth","has","ChartBar","formatter","formatOptions","CursorVoronoiContainer","cursorDimension","mouseFollowTooltips","voronoiDimension","voronoiPadding","bottom","left","right","top","getDomain","max","Math","getEvents","chartNames","isDataHidden","isHidden","legendName","onLegendClick","handleLegendClick","getLegend","ChartLegend","gutter","responsive","val","values","modVal","str","substring","maxChars","getTickValue","t","handleResize","clientWidth","current","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","render","intl","disable","ChartLegendTooltip","legendData","formatMessage","day","ref","Chart","legendAllowWrap","legendComponent","legendPosition","ChartAxis","C","fixLabelOverlap","dependentAxis","tickFormat","injectIntl","global_spacer_2xl","chartSkeleton","marginBottom","marginTop","global_spacer_3xl","costChart","global_spacer_sm","legendSkeleton","titleContainer","trendChart","usageChart","PerspectiveType","baseQuery","limit","offset","exclude","filter_by","order_by","cost","dateRangeOptions","groupByAwsOptions","groupByAzureOptions","groupByGcpOptions","groupByGcpOcpOptions","groupByIbmOptions","groupByOciOptions","groupByOcpOptions","groupByRhelOptions","getGroupByDefault","perspective","result","aws","awsOcp","gcp","gcpOcp","ibm","azure","azureOcp","oci","ocp","ocpCloud","rhel","getGroupByOptions","getOrgReportPathsType","getReportType","getReportPathsType","getResourcePathsType","getTagReportPathsType","ExplorerChartBase","stateProps","dispatchProps","defaultState","createReportDatum","computedItem","reportItem","reportItemValue","computedItemDate","date","xVal","formatDate","month","yVal","parseFloat","toFixed","id","updateReport","fetchReport","reportQueryString","getChartDatums","computedItems","costDistribution","chartDatums","datums","Map","padChartDatums","getComputedItems","report","idKey","getGroupBy","isDateMap","groupById","group_by","groupByCostCategory","groupByOrg","groupByTagKey","getSkeleton","Skeleton","skeleton","items","end_date","start_date","newItems","padDate","setDate","getDate","format","chartDatum","find","reportError","reportFetchStatus","Title","headingLevel","size","mapStateToProps","costType","currency","router","queryFromRoute","location","search","isCostDistributionFeatureEnabled","featureFlags","reportQuery","cost_type","distributed_cost","reportPathsType","reportType","mapDispatchToProps","ExplorerChartConnect","connect","ExplorerChart","toContainer","ExplorerDatePickerBase","startDateRef","endDateRef","getStartDatePicker","startDate","DatePicker","onChange","handleStartDateOnChange","placeholder","validators","getEndDatePicker","endDate","getMaxEndDate","handleEndDateOnChange","rangeStart","today","setTime","isEndDateValid","minDate","maxDate","isStartDateValid","evt","setCalendarOpen","dateRangeType","prevState","ExplorerDatePicker","ExplorerDateRangeBase","isSelectOpen","getSelect","selectOptions","getSelectOptions","selection","option","Select","isOpen","onSelect","handleSelect","onToggle","handleToggle","selections","variant","SelectVariant","SelectOption","event","ExplorerDateRange","orgType","resourceType","tagType","ExplorerFilterBase","showDatePicker","getCategoryOptions","orgReport","resourceReport","tagReport","sort","a","b","getDateRangeComponent","currentDateRangeType","handleDateRangeSelected","getDatePickerComponent","handleDatePickerSelected","newQuery","JSON","parse","navigate","replace","fetchOrg","fetchResource","fetchTag","orgQueryString","orgPathsType","resourcePathsType","resourceQueryString","tagQueryString","tagPathsType","categoryOptions","onFilterAdded","onFilterRemoved","dateRange","datePicker","showFilter","orgReportFetchStatus","key_only","resourceReportFetchStatus","tagReportFetchStatus","ExplorerFilterConnect","ExplorerFilter","display","alignItems","costLabel","costValue","costLabelUnit","global_FontSize_sm","color","global_Color_100","costLabelDate","global_Color_200","paddingLeft","header","headerContent","justifyContent","headerContentRight","perspectiveContainer","ExplorerHeaderBase","getPerspective","currentPerspective","isAwsAvailable","isAzureAvailable","isOciAvailable","isGcpAvailable","isIbmAvailable","isOcpAvailable","isRhelAvailable","isAwsOcpAvailable","isAzureOcpAvailable","isGcpOcpAvailable","isIbmOcpAvailable","isOcpCloudAvailable","handlePerspectiveSelected","onPerspectiveClicked","awsProviders","userAccess","ocpProviders","azureProviders","gcpProviders","ibmProviders","ociProviders","isFinsightsFeatureEnabled","rhelProviders","isExportsFeatureEnabled","onCostDistributionSelected","onCostTypeSelected","onCurrencySelected","onGroupBySelected","providersFetchStatus","noAwsProviders","noAzureProviders","noGcpProviders","noIbmProviders","noOcpProviders","noRhelProviders","noProviders","groupByOptions","showCostDistribution","meta","distributed_overhead","TitleSizes","showCostCategories","showOrgs","showTags","providersQueryString","providers","providersError","userAccessQueryString","userAccessError","userAccessFetchStatus","ExplorerHeader","defaultLabel","minWidth","emptyState","infoArrow","position","infoArrowDesc","global_spacer_xs","infoDescription","global_disabled_color_100","global_FontSize_xs","ExplorerTableBase","selectColRef","nameColRef","columns","rows","showLabels","isAllSelected","selectedItems","isGroupByProject","showPlatformCosts","count","orderBy","isSortable","hidden","isLabelColumn","currentDate","mapId","rowItem","get","set","mapIdDate","cells","selectItem","isOverheadCosts","isPlatformCosts","item","platformDistributed","workerUnallocatedDistributed","classification","unshift","Label","Tooltip","content","enableFlip","selectionDisabled","selected","column","row","cell","filteredColumns","filteredRows","e","p","hasOwnProperty","indexOf","propertyIsEnumerable","__rest","getEmptyState","showMargin","EmptyState","EmptyStateIcon","icon","EmptyStateBody","getSortBy","direction","hasOrderBy","getSortParams","sortBy","onSort","handleOnSort","columnIndex","handleOnSelect","isSelected","rowId","newRows","SortByDirection","bind","currentReport","_b","_c","isLoading","selectColOffset","nameColOffset","InnerScrollContainer","TableComposable","gridBreakPoint","Thead","Tr","col","Th","isStickyColumn","stickyMinWidth","hasRightBorder","modifier","stickyLeftOffset","Tbody","Td","colSpan","Bullseye","textAlign","Spinner","rowIndex","cellIndex","dataLabel","select","_event","ExplorerTableConnect","ExplorerTable","ExplorerToolbarBase","isBulkSelectDisabled","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onExportClicked","showBulkSelect","showExcludes","showExport","ExplorerToolbarConnect","ExplorerToolbar","Explorer","isExportModalOpen","getExportModal","isAllItems","onClose","handleExportModalClose","resolution","showTimeScope","getPagination","isBottom","page","trunc","Pagination","isCompact","itemCount","onPerPageSelect","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","PaginationVariant","widgetId","getTable","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","handleExportModalOpen","action","handleGroupBySelected","groupByKey","handlePerspectiveClick","newPerspective","noReport","noLocation","noOciProviders","onDatePickerSelected","ibmOcp","hasAwsCloud","hasAzureCloud","hasGcpCloud","hasIbmCloud","getPerspectiveDefault","skeletonWidth","xs","sm","md","lg","hasAccess","userAccessType","access","hasProviders","hasAwsAccess","hasAzureAccess","hasOciAccess","hasCostModelAccess","hasGcpAccess","hasIbmAccess","hasOcpAccess","hasRhelAccess","hasRosAccess"],"sourceRoot":""}