{"version":3,"file":"js/4836.485dc5fb288f3b112802.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/external-link-alt-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_FontSize_md.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_FontSize_xs.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_disabled_color_100.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_3xl.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_xs.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Unavailable/Unavailable.js","webpack:///./src/routes/components/dataTable/dataTable.styles.ts","webpack:///./src/routes/components/dataTable/dataTable.tsx","webpack:///./src/routes/components/icons/optimizationIcon/optimizationIcon.tsx","webpack:///./src/routes/components/page/noOptimizations/noOptimizationsState.tsx","webpack:///./src/routes/details/components/actions/actions.tsx","webpack:///./src/routes/details/components/columnManagement/columnManagementModal.tsx"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExternalLinkAltIcon = createIcon(ExternalLinkAltIconConfig);\n\nexport default ExternalLinkAltIcon;","\"use strict\";\nexports.__esModule = true;\nexports.global_FontSize_md = {\n  \"name\": \"--pf-global--FontSize--md\",\n  \"value\": \"1rem\",\n  \"var\": \"var(--pf-global--FontSize--md)\"\n};\nexports[\"default\"] = exports.global_FontSize_md;","\"use strict\";\nexports.__esModule = true;\nexports.global_FontSize_xs = {\n  \"name\": \"--pf-global--FontSize--xs\",\n  \"value\": \"0.75rem\",\n  \"var\": \"var(--pf-global--FontSize--xs)\"\n};\nexports[\"default\"] = exports.global_FontSize_xs;","\"use strict\";\nexports.__esModule = true;\nexports.global_disabled_color_100 = {\n  \"name\": \"--pf-global--disabled-color--100\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--disabled-color--100)\"\n};\nexports[\"default\"] = exports.global_disabled_color_100;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_3xl = {\n  \"name\": \"--pf-global--spacer--3xl\",\n  \"value\": \"4rem\",\n  \"var\": \"var(--pf-global--spacer--3xl)\"\n};\nexports[\"default\"] = exports.global_spacer_3xl;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_xs = {\n  \"name\": \"--pf-global--spacer--xs\",\n  \"value\": \"0.25rem\",\n  \"var\": \"var(--pf-global--spacer--xs)\"\n};\nexports[\"default\"] = exports.global_spacer_xs;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport '../Unavailable/Unavailable.css';\nvar Unavailable = function () {\n    return (_jsxs(EmptyState, __assign({ variant: EmptyStateVariant.large, className: \"ins-c-empty-state__unavailable pf-m-redhat-font\" }, { children: [_jsx(EmptyStateIcon, { icon: ExclamationCircleIcon }), _jsx(Title, __assign({ headingLevel: \"h5\", size: \"lg\" }, { children: \"This page is temporarily unavailable\" })), _jsxs(EmptyStateBody, { children: [\"Try refreshing the page. If the problem persists, contact your organization administrator or visit our\", _jsxs(\"a\", __assign({ href: \"https://status.redhat.com/\", target: \"_blank\", rel: \"noopener noreferrer\" }, { children: [' ', \"status page\"] })), ' ', \"for known outages.\"] })] })));\n};\nexport default Unavailable;\n//# sourceMappingURL=Unavailable.js.map","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    costColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingRight: 0,\n    },\n    defaultLabel: {\n        minWidth: '50px',\n    },\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    lastItem: {\n        textAlign: 'right',\n        paddingRight: '3.8rem',\n    },\n    lastItemColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    managedColumn: {\n        textAlign: 'right',\n    },\n    nameColumn: {\n        width: '1%',\n    },\n};\n","import './dataTable.scss';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, TableVariant, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { NoOptimizationsState } from 'routes/components/page/noOptimizations/noOptimizationsState';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass DataTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { filterBy, intl, isOptimizations } = this.props;\n            if (filterBy) {\n                for (const val of Object.values(filterBy)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            if (isOptimizations) {\n                return React.createElement(NoOptimizationsState, null);\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, orderBy } = this.props;\n            const direction = orderBy && orderBy[columns[index].orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected, rows } = this.props;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnRowClick = (event, rowIndex) => {\n            const { onRowClick, rows } = this.props;\n            rows.map(row => (row.selected = false));\n            rows[rowIndex].selected = true;\n            this.setState({ rows }, () => {\n                if (onRowClick) {\n                    onRowClick(event, rowIndex);\n                }\n            });\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isActionsCell = false, isLoading, isOptimizations, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.dataTableAriaLabel), className: \"tableOverride\", gridBreakPoint: \"grid-2xl\", hasSelectableRowCaption: isOptimizations, variant: TableVariant.compact },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { isSelectable: isOptimizations, isHoverable: isOptimizations, isRowSelected: isOptimizations && row.selected, onRowClick: isOptimizations ? _event => this.handleOnRowClick(_event, rowIndex) : undefined, key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 && !isOptimizations ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${cellIndex}-${rowIndex}`, modifier: \"nowrap\", select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    }, style: item.style })) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", isActionCell: isActionsCell && cellIndex === row.cells.length - 1, style: item.style }, item.value))))))))),\n            rows.length === 0 && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(DataTable));\n","import './optimizationIcon.scss';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nconst icon = require('./Red_Hat-IT_Optimization-Gray.svg');\nconst OptimizationIcon = ({ className, intl }) => {\n    return (React.createElement(\"img\", { className: `optimization-icon ${className}`, src: icon, alt: intl.formatMessage(messages.optimizations), \"aria-hidden\": \"true\" }));\n};\nexport default injectIntl(OptimizationIcon);\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title, TitleSizes, } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { OptimizationIcon } from 'routes/components/icons/optimizationIcon';\nclass NoOptimizationsStateBase extends React.Component {\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: OptimizationIcon }),\n            React.createElement(Title, { headingLevel: \"h1\", size: TitleSizes.lg }, intl.formatMessage(messages.noOptimizationsTitle)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(messages.noOptimizationsDesc))));\n    }\n}\nconst NoOptimizationsState = injectIntl(NoOptimizationsStateBase);\nexport { NoOptimizationsState };\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ExportModal } from 'routes/components/export';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nimport { tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, reportPathsType, reportQueryString } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { count: 1, groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, intl, item: { source_uuid }, redirectToCostModel, router, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, intl.formatMessage(messages.detailsActionsExport)),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], router) }, intl.formatMessage(messages.detailsActionsPriceList)));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = injectIntl(withRouter(DetailsActionsConnect));\nexport default Actions;\n","import { Button, ButtonVariant, DataList, DataListCell, DataListCheck, DataListItem, DataListItemCells, DataListItemRow, Modal, ModalVariant, Text, TextContent, TextVariants, } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nexport const initHiddenColumns = (options) => {\n    const hiddenColumns = new Set();\n    options.map(option => {\n        if (option.hidden) {\n            hiddenColumns.add(option.value);\n        }\n    });\n    return hiddenColumns;\n};\nexport class ColumnManagementModalBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            hiddenColumns: initHiddenColumns(this.props.options),\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getHidden = (value) => {\n            const { hiddenColumns } = this.state;\n            const result = new Set(hiddenColumns);\n            if (!result.delete(value)) {\n                result.add(value);\n            }\n            return result;\n        };\n        this.isHidden = (value) => {\n            const { hiddenColumns } = this.state;\n            return hiddenColumns.has(value);\n        };\n        this.handleChange = (checked, event) => {\n            const hiddenColumns = this.getHidden(event.target.id);\n            this.setState({ hiddenColumns });\n        };\n        this.handleClose = () => {\n            // Reset defult state upon close\n            this.setState(Object.assign({}, this.defaultState), () => {\n                this.props.onClose(false);\n            });\n        };\n        this.handleSave = () => {\n            const { hiddenColumns } = this.state;\n            this.props.onSave(hiddenColumns);\n            this.handleClose();\n        };\n        this.selectAll = () => {\n            this.setState({ hiddenColumns: new Set() });\n        };\n    }\n    componentDidUpdate(prevProps) {\n        const { options } = this.props;\n        if (prevProps.options !== options) {\n            const hiddenColumns = initHiddenColumns(options);\n            this.setState({ hiddenColumns });\n        }\n    }\n    render() {\n        const { options, intl } = this.props;\n        return (React.createElement(Modal, { description: React.createElement(TextContent, null,\n                React.createElement(Text, { component: TextVariants.p }, intl.formatMessage(messages.manageColumnsDesc)),\n                React.createElement(Button, { isInline: true, onClick: this.selectAll, variant: \"link\" }, intl.formatMessage(messages.selectAll))), \n            // style={styles.modal}\n            isOpen: this.props.isOpen, onClose: this.handleClose, title: intl.formatMessage(messages.manageColumnsTitle), variant: ModalVariant.medium, actions: [\n                React.createElement(Button, { key: \"save\", onClick: this.handleSave, variant: ButtonVariant.link }, intl.formatMessage(messages.save)),\n                React.createElement(Button, { key: \"cancel\", onClick: this.handleClose, variant: ButtonVariant.link }, intl.formatMessage(messages.cancel)),\n            ] },\n            React.createElement(DataList, { \"aria-label\": intl.formatMessage(messages.manageColumnsAriaLabel), id: \"table-column-management\", isCompact: true }, options.map(option => (React.createElement(DataListItem, { \"aria-labelledby\": option.value, key: option.value },\n                React.createElement(DataListItemRow, null,\n                    React.createElement(DataListCheck, { \"aria-labelledby\": `${option.value}Label`, isChecked: !this.isHidden(option.value), name: option.value, id: option.value, onChange: this.handleChange }),\n                    React.createElement(DataListItemCells, { dataListCells: [\n                            React.createElement(DataListCell, { id: `${option.value}Label`, key: \"table-column-management-item1\" },\n                                React.createElement(\"span\", null, intl.formatMessage(option.label))),\n                            React.createElement(DataListCell, { key: \"table-column-management-item2\" }, option.description && React.createElement(\"span\", null, intl.formatMessage(option.description))),\n                        ] }))))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {};\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst ColumnManagementModalConnect = connect(mapStateToProps, mapDispatchToProps)(ColumnManagementModalBase);\nconst ColumnManagementModal = injectIntl(ColumnManagementModalConnect);\nexport default ColumnManagementModal;\n"],"names":["ExternalLinkAltIconConfig","name","height","width","svgPath","yOffset","xOffset","ExternalLinkAltIcon","exports","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","EmptyState","variant","EmptyStateVariant","className","children","EmptyStateIcon","icon","ExclamationCircleIcon","Title","headingLevel","size","EmptyStateBody","href","target","rel","styles","costColumn","textAlign","display","justifyContent","paddingRight","defaultLabel","minWidth","emptyState","backgroundColor","paddingTop","infoArrow","position","infoArrowDesc","bottom","infoDescription","color","fontSize","lastItem","lastItemColumn","managedColumn","nameColumn","DataTable","constructor","props","super","getEmptyState","filterBy","intl","isOptimizations","val","values","filter","showMargin","formatMessage","messages","getSortBy","index","columns","orderBy","direction","getSortParams","sortBy","onSort","handleOnSort","columnIndex","handleOnSelect","event","isSelected","rowId","onSelected","rows","newRows","items","map","row","selected","item","setState","SortByDirection","handleOnRowClick","rowIndex","onRowClick","bind","render","isActionsCell","isLoading","TableComposable","gridBreakPoint","hasSelectableRowCaption","TableVariant","Thead","Tr","col","Th","key","value","modifier","sort","isSortable","undefined","style","Tbody","Td","colSpan","Bullseye","Spinner","isSelectable","isHoverable","isRowSelected","_event","cells","cellIndex","dataLabel","isActionCell","select","disable","selectionDisabled","onSelect","injectIntl","src","alt","NoOptimizationsStateBase","TitleSizes","NoOptimizationsState","DetailsActionsBase","stateProps","dispatchProps","defaultState","isDropdownOpen","isExportModalOpen","state","getExportModal","groupBy","reportPathsType","reportQueryString","count","isOpen","onClose","handleExportModalClose","handleExportModalOpen","handleOnToggle","isDisabled","showPriceListOption","source_uuid","redirectToCostModel","router","DropdownItem","component","onClick","unshift","includes","Dropdown","toggle","KebabToggle","onToggle","isPlain","dropdownItems","mapStateToProps","mapDispatchToProps","costModels","DetailsActionsConnect","connect","initHiddenColumns","options","hiddenColumns","Set","option","hidden","add","ColumnManagementModalBase","getHidden","result","delete","isHidden","has","handleChange","checked","id","handleClose","handleSave","onSave","selectAll","componentDidUpdate","prevProps","Modal","description","TextContent","Text","TextVariants","Button","isInline","title","ModalVariant","actions","ButtonVariant","DataList","isCompact","DataListItem","DataListItemRow","DataListCheck","isChecked","onChange","DataListItemCells","dataListCells","DataListCell","label","ColumnManagementModalConnect"],"sourceRoot":""}