{"version":3,"file":"js/recommendations.b135152f41eab3349052.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/external-link-alt-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_FontSize_xs.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_disabled_color_100.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_3xl.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Unavailable/Unavailable.js","webpack:///./src/api/queries/providersQuery.ts","webpack:///./src/routes/state/noData/noDataState.tsx","webpack:///./src/routes/state/noData/noData.tsx","webpack:///./src/routes/components/icons/costIcon/costIcon.tsx","webpack:///./src/routes/state/noProviders/noProvidersState.styles.ts","webpack:///./src/routes/state/noProviders/noProvidersState.tsx","webpack:///./src/routes/state/noProviders/noProviders.tsx","webpack:///./src/routes/state/notAvailable/notAvailable.tsx","webpack:///./src/routes/views/utils/handles.ts","webpack:///./src/routes/views/utils/providers.ts","webpack:///./src/routes/views/utils/query.ts"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExternalLinkAltIcon = createIcon(ExternalLinkAltIconConfig);\n\nexport default ExternalLinkAltIcon;","\"use strict\";\nexports.__esModule = true;\nexports.global_FontSize_xs = {\n  \"name\": \"--pf-global--FontSize--xs\",\n  \"value\": \"0.75rem\",\n  \"var\": \"var(--pf-global--FontSize--xs)\"\n};\nexports[\"default\"] = exports.global_FontSize_xs;","\"use strict\";\nexports.__esModule = true;\nexports.global_disabled_color_100 = {\n  \"name\": \"--pf-global--disabled-color--100\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--disabled-color--100)\"\n};\nexports[\"default\"] = exports.global_disabled_color_100;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_3xl = {\n  \"name\": \"--pf-global--spacer--3xl\",\n  \"value\": \"4rem\",\n  \"var\": \"var(--pf-global--spacer--3xl)\"\n};\nexports[\"default\"] = exports.global_spacer_3xl;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport '../Unavailable/Unavailable.css';\nvar Unavailable = function () {\n    return (_jsxs(EmptyState, __assign({ variant: EmptyStateVariant.large, className: \"ins-c-empty-state__unavailable pf-m-redhat-font\" }, { children: [_jsx(EmptyStateIcon, { icon: ExclamationCircleIcon }), _jsx(Title, __assign({ headingLevel: \"h5\", size: \"lg\" }, { children: \"This page is temporarily unavailable\" })), _jsxs(EmptyStateBody, { children: [\"Try refreshing the page. If the problem persists, contact your organization administrator or visit our\", _jsxs(\"a\", __assign({ href: \"https://status.redhat.com/\", target: \"_blank\", rel: \"noopener noreferrer\" }, { children: [' ', \"status page\"] })), ' ', \"for known outages.\"] })] })));\n};\nexport default Unavailable;\n//# sourceMappingURL=Unavailable.js.map","import { parse, stringify } from 'qs';\nexport function getProvidersQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseProvidersQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nclass NoDataStateBase extends React.Component {\n    render() {\n        const { intl, showReload = true } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, intl.formatMessage(messages.noDataStateTitle)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(messages.noDataStateDesc)),\n            showReload && (React.createElement(Button, { variant: \"primary\", onClick: () => window.location.reload() }, intl.formatMessage(messages.noDataStateRefresh)))));\n    }\n}\nconst NoDataState = injectIntl(NoDataStateBase);\nexport { NoDataState };\n","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React from 'react';\nimport { NoDataState } from './noDataState';\nconst NoData = ({ showReload, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(NoDataState, { showReload: showReload }))));\n};\nexport default NoData;\n","import './costIcon.scss';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nconst icon = require('./Cost-icon.svg');\nconst CostIcon = ({ className, intl }) => {\n    return (React.createElement(\"img\", { className: `cost-icon ${className}`, src: icon, alt: intl.formatMessage(messages.costManagement), \"aria-hidden\": \"true\" }));\n};\nexport default injectIntl(CostIcon);\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    iconSpacer: {\n        marginLeft: global_spacer_xs.value,\n    },\n    viewSources: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { ProviderType } from 'api/providers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { CostIcon } from 'routes/components/icons/costIcon';\nimport { getReleasePath } from 'utils/paths';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDocLink = (textKey, urlKey) => {\n            const { intl } = this.props;\n            return (React.createElement(\"a\", { href: intl.formatMessage(urlKey), rel: \"noreferrer\", target: \"_blank\" },\n                intl.formatMessage(textKey),\n                React.createElement(\"span\", { style: styles.iconSpacer },\n                    React.createElement(ExternalLinkAltIcon, null))));\n        };\n        this.getRouteToSources = () => {\n            const release = getReleasePath();\n            return `${release}/settings/sources`;\n        };\n    }\n    render() {\n        const { intl, providerType } = this.props;\n        let descKey = messages.noProvidersStateOverviewDesc;\n        let titleKey = messages.noProvidersStateOverviewTitle;\n        let docUrlKey;\n        let icon;\n        let textKey;\n        switch (providerType) {\n            case ProviderType.aws:\n                descKey = messages.noProvidersStateAwsDesc;\n                titleKey = messages.noProvidersStateAwsTitle;\n                break;\n            case ProviderType.azure:\n                descKey = messages.noProvidersStateAzureDesc;\n                titleKey = messages.noProvidersStateAzureTitle;\n                break;\n            case ProviderType.gcp:\n                descKey = messages.noProvidersStateGcpDesc;\n                titleKey = messages.noProvidersStateGcpTitle;\n                break;\n            case ProviderType.ibm:\n                descKey = messages.noProvidersStateIbmDesc;\n                titleKey = messages.noProvidersStateIbmTitle;\n                break;\n            case ProviderType.ocp:\n                descKey = messages.noProvidersStateOcpDesc;\n                docUrlKey = messages.docsAddOcpSources;\n                textKey = messages.noProvidersStateOcpAddSources;\n                titleKey = messages.noProvidersStateOcpTitle;\n                break;\n            default:\n                icon = CostIcon;\n        }\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: icon ? icon : PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h1\", size: \"lg\" }, intl.formatMessage(titleKey)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(descKey)),\n            docUrlKey && textKey ? (React.createElement(\"div\", { style: styles.viewSources }, this.getDocLink(textKey, docUrlKey))) : (React.createElement(Button, { variant: \"primary\", component: \"a\", href: this.getRouteToSources() }, intl.formatMessage(messages.noProvidersStateGetStarted)))));\n    }\n}\nconst NoProvidersState = injectIntl(NoProvidersStateBase);\nexport { NoProvidersState };\n","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React from 'react';\nimport { NoProvidersState } from './noProvidersState';\nconst NoProviders = ({ providerType, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(NoProvidersState, { providerType: providerType }))));\n};\nexport default NoProviders;\n","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Unavailable } from '@redhat-cloud-services/frontend-components/Unavailable';\nimport React from 'react';\nconst NotAvailable = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(Unavailable, null))));\n};\nexport default NotAvailable;\n","import { addFilterToQuery, removeFilterFromQuery } from './filter';\nimport { getRouteForQuery } from './query';\nexport const handleCurrencySelected = (query, router, value, reset = false) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    router.navigate(getRouteForQuery(newQuery, router.location, reset), { replace: true });\n};\nexport const handleCostTypeSelected = (query, router, value, reset = false) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    router.navigate(getRouteForQuery(newQuery, router.location, reset), { replace: true }); // Don't reset pagination\n};\nexport const handleFilterAdded = (query, router, filter) => {\n    const filteredQuery = addFilterToQuery(query, filter);\n    router.navigate(getRouteForQuery(filteredQuery, router.location, true), { replace: true });\n};\nexport const handleFilterRemoved = (query, router, filter) => {\n    const filteredQuery = removeFilterFromQuery(query, filter);\n    router.navigate(getRouteForQuery(filteredQuery, router.location, true), { replace: true });\n};\nexport const handlePerPageSelect = (query, router, perPage) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    newQuery.filter = Object.assign(Object.assign({}, query.filter), { limit: perPage });\n    const filteredQuery = getRouteForQuery(newQuery, router.location, true);\n    router.navigate(filteredQuery, { replace: true });\n};\nexport const handleSetPage = (query, router, report, pageNumber) => {\n    const limit = report && report.meta && report.meta.filter && report.meta.filter.limit ? report.meta.filter.limit : 10;\n    const offset = pageNumber * limit - limit;\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    newQuery.filter = Object.assign(Object.assign({}, query.filter), { offset });\n    const filteredQuery = getRouteForQuery(newQuery, router.location);\n    router.navigate(filteredQuery, { replace: true });\n};\nexport const handleSort = (query, router, sortType, isSortAscending, date = undefined) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    newQuery.order_by = {};\n    newQuery.order_by[sortType] = isSortAscending ? 'asc' : 'desc';\n    if (date) {\n        newQuery.order_by.date = date;\n    }\n    const filteredQuery = getRouteForQuery(newQuery, router.location);\n    router.navigate(filteredQuery, { replace: true });\n};\n","// eslint-disable-next-line no-shadow\nvar DataType;\n(function (DataType) {\n    DataType[\"currentMonthData\"] = \"current_month_data\";\n    DataType[\"hasData\"] = \"has_data\";\n    DataType[\"previousMonthData\"] = \"previous_month_data\";\n})(DataType || (DataType = {}));\n// Returns the OCP provider matching the given infrastructure uuid\nconst _getOcpProvider = (ocpProviders, uuid) => {\n    let result;\n    if (ocpProviders && ocpProviders.data) {\n        for (const provider of ocpProviders.data) {\n            if (provider.infrastructure && provider.infrastructure.uuid === uuid) {\n                result = provider;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Returns new Provider matching the given provider type\n//\n// See https://issues.redhat.com/browse/COST-2202\nexport const filterProviders = (providers, sourceType) => {\n    if (!providers) {\n        return providers;\n    }\n    const data = providers.data.filter(provider => provider.source_type.toLowerCase() === sourceType);\n    const meta = Object.assign(Object.assign({}, providers.meta), { count: data.length });\n    return Object.assign(Object.assign({}, providers), { meta,\n        data });\n};\n// Ensure at least one source provider has data available\nconst _hasData = (providers, datumType) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            if (provider[datumType]) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one cloud source provider has data available\nconst _hasCloudData = (providers, ocpProviders, dataType) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            const ocpProvider = _getOcpProvider(ocpProviders, provider.uuid);\n            // Ensure AWS provider is filtered by OpenShift and has OCP data\n            if (ocpProvider && ocpProvider[dataType]) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one cloud source provider\nconst _hasCloudProvider = (providers, ocpProviders) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            const ocpProvider = _getOcpProvider(ocpProviders, provider.uuid);\n            // Ensure AWS provider is filtered by OpenShift\n            if (ocpProvider) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one cloud source provider has data available for the current month (e.g., \"AWS filtered by OpenShift\")\nexport const hasCloudCurrentMonthData = (providers, ocpProviders) => {\n    return _hasCloudData(providers, ocpProviders, DataType.currentMonthData);\n};\n// Ensure at least one cloud source provider has data available (e.g., \"AWS filtered by OpenShift\")\nexport const hasCloudData = (providers, ocpProviders) => {\n    return _hasCloudData(providers, ocpProviders, DataType.hasData);\n};\n// Ensure at least one cloud source provider has data available for the previous month (e.g., \"AWS filtered by OpenShift\")\nexport const hasCloudPreviousMonthData = (providers, ocpProviders) => {\n    return _hasCloudData(providers, ocpProviders, DataType.previousMonthData);\n};\n// Ensure at least one cloud source provider (e.g., \"AWS filtered by OpenShift\"), regardless if there is OCP data\nexport const hasCloudProvider = (providers, ocpProviders) => {\n    return _hasCloudProvider(providers, ocpProviders);\n};\n// Ensure at least one source provider has data available for the current month\nexport const hasCurrentMonthData = (providers) => {\n    return _hasData(providers, DataType.currentMonthData);\n};\n// Ensure at least one source provider has data available\nexport const hasData = (providers) => {\n    return _hasData(providers, DataType.hasData);\n};\n// Ensure at least one source provider has data available for the previous month\nexport const hasPreviousMonthData = (providers) => {\n    return _hasData(providers, DataType.previousMonthData);\n};\n","import { getQueryRoute } from 'api/queries/query';\nexport const getRouteForQuery = (query, location, reset = false) => {\n    // Reset pagination\n    if (reset) {\n        query.filter = Object.assign(Object.assign({}, query.filter), { offset: 0 });\n    }\n    return `${location.pathname}?${getQueryRoute(query)}`;\n};\n"],"names":["ExternalLinkAltIconConfig","name","height","width","svgPath","yOffset","xOffset","ExternalLinkAltIcon","exports","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","EmptyState","variant","EmptyStateVariant","className","children","EmptyStateIcon","icon","ExclamationCircleIcon","Title","headingLevel","size","EmptyStateBody","href","target","rel","getProvidersQuery","query","stringify","encode","indices","NoDataStateBase","render","intl","showReload","props","formatMessage","messages","Button","onClick","window","location","reload","NoDataState","injectIntl","title","PageHeader","PageHeaderTitle","PageSection","src","alt","styles","iconSpacer","marginLeft","viewSources","marginTop","global_spacer_lg","NoProvidersStateBase","constructor","super","getDocLink","textKey","urlKey","style","getRouteToSources","providerType","docUrlKey","descKey","titleKey","component","NoProvidersState","Unavailable","handleCurrencySelected","router","value","reset","newQuery","JSON","parse","navigate","replace","handleCostTypeSelected","handleFilterAdded","filter","filteredQuery","handleFilterRemoved","handlePerPageSelect","perPage","limit","handleSetPage","report","pageNumber","meta","offset","handleSort","sortType","isSortAscending","date","order_by","DataType","_getOcpProvider","ocpProviders","uuid","result","data","provider","infrastructure","filterProviders","providers","sourceType","source_type","toLowerCase","count","_hasData","datumType","_hasCloudData","dataType","ocpProvider","hasCloudCurrentMonthData","currentMonthData","hasCloudData","hasData","hasCloudPreviousMonthData","previousMonthData","hasCloudProvider","_hasCloudProvider","hasCurrentMonthData","hasPreviousMonthData","getRouteForQuery","pathname"],"sourceRoot":""}