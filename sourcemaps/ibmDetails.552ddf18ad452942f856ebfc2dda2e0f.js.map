{"version":3,"file":"js/ibmDetails.283cbe47822d89054e58.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/external-link-alt-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/minus-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_Color_100.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_FontSize_xs.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_disabled_color_100.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_3xl.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_xs.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Unavailable/Unavailable.js","webpack:///./src/routes/components/state/emptyValueState/emptyValueState.tsx","webpack:///./src/routes/views/details/components/actions/actions.tsx","webpack:///./src/routes/views/details/components/dataTable/dataTable.styles.ts","webpack:///./src/routes/views/details/components/dataTable/dataTable.tsx","webpack:///./src/utils/computedReport/getComputedIbmReportItems.ts","webpack:///./src/routes/views/details/ibmDetails/detailsHeader.styles.ts","webpack:///./src/routes/views/details/ibmDetails/detailsHeader.tsx","webpack:///./src/routes/views/details/ibmDetails/detailsTable.tsx","webpack:///./src/routes/views/details/ibmDetails/detailsToolbar.tsx","webpack:///./src/routes/views/details/ibmDetails/ibmDetails.styles.ts","webpack:///./src/routes/views/details/ibmDetails/ibmDetails.tsx","webpack:///./src/routes/views/utils/paths.ts"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExternalLinkAltIcon = createIcon(ExternalLinkAltIconConfig);\n\nexport default ExternalLinkAltIcon;","import { createIcon } from '../createIcon';\n\nexport const MinusIconConfig = {\n  name: 'MinusIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const MinusIcon = createIcon(MinusIconConfig);\n\nexport default MinusIcon;","\"use strict\";\nexports.__esModule = true;\nexports.global_Color_100 = {\n  \"name\": \"--pf-global--Color--100\",\n  \"value\": \"#151515\",\n  \"var\": \"var(--pf-global--Color--100)\"\n};\nexports[\"default\"] = exports.global_Color_100;","\"use strict\";\nexports.__esModule = true;\nexports.global_FontSize_xs = {\n  \"name\": \"--pf-global--FontSize--xs\",\n  \"value\": \"0.75rem\",\n  \"var\": \"var(--pf-global--FontSize--xs)\"\n};\nexports[\"default\"] = exports.global_FontSize_xs;","\"use strict\";\nexports.__esModule = true;\nexports.global_disabled_color_100 = {\n  \"name\": \"--pf-global--disabled-color--100\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--disabled-color--100)\"\n};\nexports[\"default\"] = exports.global_disabled_color_100;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_3xl = {\n  \"name\": \"--pf-global--spacer--3xl\",\n  \"value\": \"4rem\",\n  \"var\": \"var(--pf-global--spacer--3xl)\"\n};\nexports[\"default\"] = exports.global_spacer_3xl;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_xs = {\n  \"name\": \"--pf-global--spacer--xs\",\n  \"value\": \"0.25rem\",\n  \"var\": \"var(--pf-global--spacer--xs)\"\n};\nexports[\"default\"] = exports.global_spacer_xs;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport '../Unavailable/Unavailable.css';\nvar Unavailable = function () {\n    return (_jsxs(EmptyState, __assign({ variant: EmptyStateVariant.large, className: \"ins-c-empty-state__unavailable pf-m-redhat-font\" }, { children: [_jsx(EmptyStateIcon, { icon: ExclamationCircleIcon }), _jsx(Title, __assign({ headingLevel: \"h5\", size: \"lg\" }, { children: \"This page is temporarily unavailable\" })), _jsxs(EmptyStateBody, { children: [\"Try refreshing the page. If the problem persists, contact your organization administrator or visit our\", _jsxs(\"a\", __assign({ href: \"https://status.redhat.com/\", target: \"_blank\", rel: \"noopener noreferrer\" }, { children: [' ', \"status page\"] })), ' ', \"for known outages.\"] })] })));\n};\nexport default Unavailable;\n//# sourceMappingURL=Unavailable.js.map","import './emptyValueState.scss';\nimport { MinusIcon } from '@patternfly/react-icons/dist/esm/icons/minus-icon';\nimport React from 'react';\nconst EmptyValueState = () => {\n    return (React.createElement(\"span\", { className: \"emptyValueContainer\" },\n        React.createElement(MinusIcon, null)));\n};\nexport default EmptyValueState;\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ExportModal } from 'routes/views/components/export';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nimport { tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, reportPathsType, reportQueryString } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { count: 1, groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, intl, item: { source_uuid }, redirectToCostModel, router, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, intl.formatMessage(messages.detailsActionsExport)),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], router) }, intl.formatMessage(messages.detailsActionsPriceList)));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = injectIntl(withRouter(DetailsActionsConnect));\nexport default Actions;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    costColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingRight: 0,\n    },\n    defaultLabel: {\n        minWidth: '63px',\n    },\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    managedColumn: {\n        textAlign: 'right',\n    },\n    nameColumn: {\n        width: '1%',\n    },\n};\n","import { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport { parseQuery } from 'api/queries/ocpQuery';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass DataTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { intl, router } = this.props;\n            const queryFromRoute = parseQuery(router.location.search);\n            if (queryFromRoute.filter_by) {\n                for (const val of Object.values(queryFromRoute.filter_by)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, router } = this.props;\n            const orderBy = columns[index].orderBy;\n            const queryFromRoute = parseQuery(router.location.search);\n            const direction = queryFromRoute && queryFromRoute.order_by && queryFromRoute.order_by[orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected, rows } = this.props;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isLoading, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.dataTableAriaLabel), gridBreakPoint: \"grid-2xl\" },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${cellIndex}-${rowIndex}`, modifier: \"nowrap\", select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    }, style: item.style })) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", isActionCell: cellIndex === row.cells.length - 1, style: item.style }, item.value))))))))),\n            Boolean(rows.length === 0) && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(DataTable));\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.account) {\n        return 'account';\n    }\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.region) {\n        return 'region';\n    }\n    if (groupBy.service) {\n        return 'service';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costValue: {\n        marginTop: global_spacer_lg.var,\n        marginBottom: 0,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    dateTitle: {\n        textAlign: 'end',\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentLeft: {\n        display: 'flex',\n        minHeight: '90px',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { TagPathsType } from 'api/tags/tag';\nimport { ExportsLink } from 'components/exports';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Currency } from 'routes/components/currency';\nimport { GroupBy } from 'routes/views/components/groupBy';\nimport { filterProviders } from 'routes/views/utils/providers';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedIbmReportItems';\nimport { getSinceDateRangeString } from 'utils/dates';\nimport { formatCurrency } from 'utils/format';\nimport { styles } from './detailsHeader.styles';\nconst groupByOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'project', value: 'project' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nconst tagReportPathsType = TagPathsType.ibm;\nclass DetailsHeaderBase extends React.Component {\n    render() {\n        const { currency, groupBy, isCurrencyFeatureEnabled, isExportsFeatureEnabled, onCurrencySelected, onGroupBySelected, providers, providersError, report, intl, } = this.props;\n        const showContent = report && !providersError && providers && providers.meta && providers.meta.count > 0;\n        const hasCost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.ibmDetailsTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    isCurrencyFeatureEnabled && React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(\"div\", { style: styles.headerContentLeft },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: !showContent, onSelected: onGroupBySelected, options: groupByOptions, showTags: true, tagReportPathsType: tagReportPathsType })),\n                Boolean(showContent) && (React.createElement(\"div\", null,\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: TitleSizes['4xl'] }, formatCurrency(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD')),\n                    React.createElement(\"div\", { style: styles.dateTitle }, getSinceDateRangeString()))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        isCurrencyFeatureEnabled: featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state),\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        providers: filterProviders(providers, ProviderType.ibm),\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n    };\n});\nconst DetailsHeader = injectIntl(connect(mapStateToProps, {})(DetailsHeaderBase));\nexport { DetailsHeader };\n","import 'routes/views/details/components/dataTable/dataTable.scss';\nimport { ReportPathsType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { Actions } from 'routes/views/details/components/actions';\nimport { DataTable } from 'routes/views/details/components/dataTable';\nimport { styles } from 'routes/views/details/components/dataTable/dataTable.styles';\nimport { getBreakdownPath } from 'routes/views/utils/paths';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getForDateRangeString, getNoDataForDateRangeString } from 'utils/dates';\nimport { formatCurrency, formatPercentage } from 'utils/format';\nimport { formatPath } from 'utils/paths';\nimport { noPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nconst reportPathsType = ReportPathsType.ibm;\nclass DetailsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { groupBy, groupByTagKey, intl, isAllSelected, report, selectedItems, router } = this.props;\n            if (!report) {\n                return;\n            }\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey ? groupByTagKey : groupBy,\n            });\n            const columns = groupByTagKey\n                ? [\n                    {\n                        name: '',\n                    },\n                    {\n                        name: intl.formatMessage(messages.tagNames),\n                    },\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign({ orderBy: groupBy, name: intl.formatMessage(messages.detailsResourceNames, { value: groupBy }) }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ];\n            computedItems.map((item, index) => {\n                const cost = this.getTotalCost(item, index);\n                const label = item && item.label !== null ? item.label : '';\n                const monthOverMonth = this.getMonthOverMonthCost(item, index);\n                const isDisabled = label === `${noPrefix}${groupBy}` || label === `${noPrefix}${groupByTagKey}`;\n                const desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                const actions = this.getActions(item, isDisabled);\n                const name = isDisabled ? label : (React.createElement(Link, { to: getBreakdownPath({\n                        basePath: formatPath(routes.ibmDetailsBreakdown.path),\n                        description: item.id,\n                        groupBy,\n                        id: item.id,\n                        router,\n                        title: label.toString(),\n                    }) }, label));\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: (React.createElement(\"div\", null,\n                                name,\n                                desc)),\n                        },\n                        { value: React.createElement(\"div\", null, monthOverMonth) },\n                        { value: React.createElement(\"div\", null, cost), style: styles.managedColumn },\n                        { value: React.createElement(\"div\", null, actions) },\n                    ],\n                    isOpen: false,\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                    selectionDisabled: isDisabled,\n                });\n            });\n            this.setState({\n                columns,\n                rows,\n            });\n        };\n        this.getActions = (item, isDisabled) => {\n            const { groupBy, reportQueryString } = this.props;\n            return (React.createElement(Actions, { groupBy: groupBy, isDisabled: isDisabled, item: item, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getMonthOverMonthCost = (item, index) => {\n            const { intl } = this.props;\n            const value = formatCurrency(Math.abs(item.cost.total.value - item.delta_value), item.cost.total.units);\n            const percentage = item.delta_percent !== null ? formatPercentage(Math.abs(item.delta_percent)) : 0;\n            const showPercentage = !(percentage === 0 || percentage === '0.00');\n            const showValue = item.delta_percent !== null; // Workaround for https://github.com/project-koku/koku/issues/1395\n            let iconOverride;\n            if (showPercentage) {\n                iconOverride = 'iconOverride';\n                if (item.delta_percent !== null && item.delta_value < 0) {\n                    iconOverride += ' decrease';\n                }\n                if (item.delta_percent !== null && item.delta_value > 0) {\n                    iconOverride += ' increase';\n                }\n            }\n            if (!showValue) {\n                return getNoDataForDateRangeString();\n            }\n            else {\n                return (React.createElement(\"div\", { className: \"monthOverMonthOverride\" },\n                    React.createElement(\"div\", { className: iconOverride, key: `month-over-month-cost-${index}` },\n                        showPercentage ? intl.formatMessage(messages.percent, { value: percentage }) : React.createElement(EmptyValueState, null),\n                        Boolean(showPercentage && item.delta_percent !== null && item.delta_value > 0) && (React.createElement(\"span\", { className: \"fa fa-sort-up\", style: styles.infoArrow, key: `month-over-month-icon-${index}` })),\n                        Boolean(showPercentage && item.delta_percent !== null && item.delta_value < 0) && (React.createElement(\"span\", { className: \"fa fa-sort-down\", style: Object.assign(Object.assign({}, styles.infoArrow), styles.infoArrowDesc), key: `month-over-month-icon-${index}` }))),\n                    React.createElement(\"div\", { style: styles.infoDescription, key: `month-over-month-info-${index}` }, getForDateRangeString(value))));\n            }\n        };\n        this.getTotalCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.cost.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.cost.total.value, item.cost.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport || prevProps.selectedItems !== selectedItems) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { isLoading, onSelected, onSort, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, isLoading: isLoading, onSelected: onSelected, onSort: onSort, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst DetailsTable = injectIntl(withRouter(DetailsTableBase));\nexport { DetailsTable };\n","import { getQuery } from 'api/queries/ibmQuery';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType, TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { isEqual } from 'utils/equal';\nimport { tagKey } from 'utils/props';\nconst tagReportType = TagType.tag;\nconst tagReportPathsType = TagPathsType.ibm;\nexport class DetailsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { intl, tagReport } = this.props;\n            const options = [\n                { name: intl.formatMessage(messages.filterByValues, { value: 'account' }), key: 'account' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'project' }), key: 'project' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'service' }), key: 'service' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'region' }), key: 'region' },\n            ];\n            if (tagReport && tagReport.data && tagReport.data.length) {\n                options.push({ name: intl.formatMessage(messages.filterByValues, { value: tagKey }), key: tagKey });\n            }\n            return options;\n        };\n    }\n    componentDidMount() {\n        const { fetchTag, tagReportFetchStatus, tagQueryString } = this.props;\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        }, () => {\n            if (tagReportFetchStatus !== FetchStatus.inProgress) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchTag, query, tagReport, tagReportFetchStatus, tagQueryString } = this.props;\n        if (!isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            }, () => {\n                if (tagReportFetchStatus !== FetchStatus.inProgress) {\n                    fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n                }\n            });\n        }\n        else if (query && !isEqual(query, prevProps.query) && tagReportFetchStatus !== FetchStatus.inProgress) {\n            fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n        }\n    }\n    render() {\n        const { groupBy, isAllSelected, isBulkSelectDisabled, isDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onExportClicked, onFilterAdded, onFilterRemoved, pagination, query, selectedItems, tagReport, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, groupBy: groupBy, isAllSelected: isAllSelected, isBulkSelectDisabled: isBulkSelectDisabled, isDisabled: isDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onExportClicked: onExportClicked, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.ibm, selectedItems: selectedItems, showBulkSelect: true, showExport: true, showFilter: true, tagReport: tagReport, tagReportPathsType: tagReportPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        key_only: true,\n        limit: 1000,\n    });\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, tagQueryString);\n    return {\n        tagReport,\n        tagReportFetchStatus,\n        tagQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst DetailsToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsToolbarBase);\nconst DetailsToolbar = injectIntl(DetailsToolbarConnect);\nexport { DetailsToolbar };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    gcpDetails: {\n        minHeight: '100%',\n    },\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getQuery, parseQuery } from 'api/queries/ibmQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoData } from 'routes/state/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { ExportModal } from 'routes/views/components/export';\nimport { getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { handleCurrencySelected, handleFilterAdded, handleFilterRemoved, handlePerPageSelect, handleSetPage, handleSort, } from 'routes/views/utils/handles';\nimport { hasCurrentMonthData } from 'routes/views/utils/providers';\nimport { filterProviders } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedIbmReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getCurrency } from 'utils/localStorage';\nimport { noPrefix, tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { DetailsHeader } from './detailsHeader';\nimport { DetailsTable } from './detailsTable';\nimport { DetailsToolbar } from './detailsToolbar';\nimport { styles } from './ibmDetails.styles';\nconst baseQuery = {\n    delta: 'cost',\n    filter: {\n        limit: 10,\n        offset: 0,\n        resolution: 'monthly',\n        time_scope_units: 'month',\n        time_scope_value: -1,\n    },\n    exclude: {},\n    filter_by: {},\n    group_by: {\n        account: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst reportType = ReportType.cost;\nconst reportPathsType = ReportPathsType.ibm;\nclass IbmDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            isAllSelected: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey || groupById,\n            });\n        };\n        this.getExportModal = (computedItems) => {\n            const { query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `${noPrefix}${groupById}` || item.label === `${noPrefix}${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, router, report } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = offset / limit + 1;\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handlePerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.ibm),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { query, report, reportFetchStatus, reportQueryString, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return (React.createElement(DetailsTable, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, groupByTagKey: groupByTagKey, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending) => handleSort(query, router, sortType, isSortAscending), report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, router, report } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(DetailsToolbar, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isDisabled || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onExportClicked: this.handleExportModalOpen, onFilterAdded: filter => handleFilterAdded(query, router, filter), onFilterRemoved: filter => handleFilterRemoved(query, router, filter), pagination: this.getPagination(isDisabled), query: query, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            const groupByKey = groupBy;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: '*',\n                }, order_by: { cost: 'desc' } });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.updateReport = () => {\n            const { fetchReport, reportQueryString } = this.props;\n            fetchReport(reportPathsType, reportType, reportQueryString);\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { currency, intl, providers, providersFetchStatus, query, report, reportError, reportFetchStatus, router } = this.props;\n        const computedItems = this.getComputedItems();\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const isDisabled = computedItems.length === 0;\n        const title = intl.formatMessage(messages.ibmDetailsTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.inProgress) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.complete) {\n            // API returns empty data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: ProviderType.ibm, title: title });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.ibmDetails },\n            React.createElement(DetailsHeader, { currency: currency, groupBy: groupById, onCurrencySelected: value => handleCurrencySelected(query, router, value), onGroupBySelected: this.handleGroupBySelected, report: report }),\n            React.createElement(\"div\", { style: styles.content },\n                this.getToolbar(computedItems),\n                this.getExportModal(computedItems),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const currency = featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state) ? getCurrency() : undefined;\n    const query = {\n        delta: 'cost',\n        filter: Object.assign(Object.assign({}, baseQuery.filter), queryFromRoute.filter),\n        filter_by: queryFromRoute.filter_by || baseQuery.filter_by,\n        exclude: queryFromRoute.exclude || baseQuery.exclude,\n        group_by: queryFromRoute.group_by || baseQuery.group_by,\n        order_by: queryFromRoute.order_by || baseQuery.order_by,\n    };\n    const reportQueryString = getQuery(Object.assign(Object.assign({}, query), { currency }));\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        currency,\n        providers: filterProviders(providers, ProviderType.ibm),\n        providersError,\n        providersFetchStatus,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n        // Testing...\n        //\n        // providers: {\n        //   meta: {\n        //     count: 0,\n        //   },\n        // } as any,\n        // providersError: {\n        //   response: {\n        //     // status: 401\n        //     status: 500\n        //   }\n        // } as any,\n        // providersFetchStatus: FetchStatus.inProgress,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(IbmDetails)));\n","import { getQueryRoute } from 'api/queries/query';\nimport { parseQuery } from 'api/queries/query';\nimport { breakdownDescKey, breakdownTitleKey, orgUnitIdKey, platformCategoryKey } from 'utils/props';\nexport const getBreakdownPath = ({ basePath, description, groupBy, id, isPlatformCosts, router, title, }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const newQuery = Object.assign(Object.assign(Object.assign(Object.assign({}, queryFromRoute), (description && description !== title && { [breakdownDescKey]: description })), (title && { [breakdownTitleKey]: title })), { group_by: {\n            [groupBy]: isPlatformCosts ? '*' : id, // Use ID here -- see https://github.com/project-koku/koku-ui/pull/2821\n        } });\n    if (isPlatformCosts) {\n        if (!newQuery.filter) {\n            newQuery.filter = {};\n        }\n        newQuery.filter.category = platformCategoryKey;\n    }\n    return `${basePath}?${getQueryRoute(newQuery)}`;\n};\nexport const getOrgBreakdownPath = ({ basePath, description, groupBy, groupByOrg, id, router, title, type, }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const newQuery = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, queryFromRoute), (description && description !== title && { [breakdownDescKey]: description })), (title && { [breakdownTitleKey]: title })), (groupByOrg && { [orgUnitIdKey]: groupByOrg })), { group_by: {\n            [groupBy]: id, // This may be overridden below\n        } });\n    if (type === 'account') {\n        if (!newQuery.filter) {\n            newQuery.filter = {};\n        }\n        newQuery.filter.account = id;\n        newQuery.group_by = {\n            [orgUnitIdKey]: groupByOrg,\n        };\n    }\n    else if (type === 'organizational_unit') {\n        newQuery.group_by = {\n            [orgUnitIdKey]: id,\n        };\n    }\n    return `${basePath}?${getQueryRoute(newQuery)}`;\n};\nexport const isPlatformCosts = (queryFromRoute) => {\n    return queryFromRoute && queryFromRoute.filter && queryFromRoute.filter.category === platformCategoryKey;\n};\n"],"names":["ExternalLinkAltIconConfig","name","height","width","svgPath","yOffset","xOffset","ExternalLinkAltIcon","MinusIconConfig","MinusIcon","exports","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","EmptyState","variant","EmptyStateVariant","className","children","EmptyStateIcon","icon","ExclamationCircleIcon","Title","headingLevel","size","EmptyStateBody","href","target","rel","DetailsActionsBase","constructor","stateProps","dispatchProps","super","defaultState","isDropdownOpen","isExportModalOpen","state","getExportModal","groupBy","item","reportPathsType","reportQueryString","props","count","isOpen","items","onClose","handleExportModalClose","setState","handleExportModalOpen","handleOnSelect","handleOnToggle","bind","render","isDisabled","showPriceListOption","intl","source_uuid","redirectToCostModel","router","DropdownItem","component","key","onClick","formatMessage","messages","unshift","includes","Dropdown","onSelect","toggle","KebabToggle","onToggle","isPlain","position","dropdownItems","mapStateToProps","mapDispatchToProps","costModels","DetailsActionsConnect","connect","injectIntl","styles","costColumn","textAlign","display","justifyContent","paddingRight","defaultLabel","minWidth","emptyState","backgroundColor","paddingTop","infoArrow","infoArrowDesc","bottom","infoDescription","color","fontSize","managedColumn","nameColumn","DataTable","getEmptyState","queryFromRoute","location","search","filter_by","val","values","filter","showMargin","getSortBy","index","columns","orderBy","direction","order_by","getSortParams","sortBy","onSort","handleOnSort","columnIndex","event","isSelected","rowId","onSelected","rows","newRows","map","row","selected","SortByDirection","isLoading","TableComposable","gridBreakPoint","Thead","Tr","col","Th","value","modifier","sort","isSortable","undefined","style","Tbody","Td","colSpan","Bullseye","Spinner","rowIndex","cells","cellIndex","dataLabel","select","disable","selectionDisabled","_event","isActionCell","Boolean","getIdKeyForGroupBy","account","project","region","service","costValue","marginTop","global_spacer_lg","marginBottom","costLabelUnit","global_FontSize_sm","global_Color_100","dateTitle","header","global_BackgroundColor_light_100","padding","headerContent","headerContentLeft","minHeight","headerContentRight","title","paddingBottom","global_spacer_sm","groupByOptions","label","tagReportPathsType","DetailsHeaderBase","currency","isCurrencyFeatureEnabled","isExportsFeatureEnabled","onCurrencySelected","onGroupBySelected","providers","providersError","report","showContent","meta","hasCost","total","cost","TitleSizes","options","showTags","format","units","providersQueryString","providersFetchStatus","featureFlags","DetailsHeader","DetailsTableBase","initDatum","groupByTagKey","isAllSelected","selectedItems","computedItems","idKey","getTotalCost","monthOverMonth","getMonthOverMonthCost","desc","id","actions","getActions","Link","to","basePath","routes","description","toString","push","find","Math","abs","delta_value","percentage","delta_percent","showPercentage","showValue","iconOverride","percentValue","toFixed","componentDidMount","componentDidUpdate","prevProps","currentReport","data","JSON","stringify","DetailsTable","tagReportType","DetailsToolbarBase","getCategoryOptions","tagReport","fetchTag","tagReportFetchStatus","tagQueryString","categoryOptions","query","isBulkSelectDisabled","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onExportClicked","onFilterAdded","onFilterRemoved","pagination","resourcePathsType","showBulkSelect","showExport","showFilter","resolution","time_scope_units","time_scope_value","key_only","limit","DetailsToolbarConnect","DetailsToolbar","gcpDetails","content","paginationContainer","marginLeft","marginRight","global_spacer_md","tableContainer","baseQuery","delta","offset","exclude","group_by","reportType","IbmDetails","getComputedItems","groupById","isAllItems","getPagination","isBottom","page","Pagination","isCompact","itemCount","onPerPageSelect","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","PaginationVariant","widgetId","getTable","reportFetchStatus","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","action","handleGroupBySelected","groupByKey","newQuery","parse","navigate","replace","newItems","updateReport","fetchReport","prevState","reportError","noReport","noLocation","providerType","getBreakdownPath","isPlatformCosts","category","getOrgBreakdownPath","groupByOrg","type"],"sourceRoot":""}