{"version":3,"file":"js/ociDetails.e3ee30f9a65495f88c5e.js","mappings":"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","sources":["webpack:///./src/utils/computedReport/getComputedOciReportItems.ts","webpack:///./src/routes/views/details/ociDetails/detailsHeader.styles.ts","webpack:///./src/routes/views/details/ociDetails/detailsHeader.tsx","webpack:///./src/routes/views/details/ociDetails/detailsTable.tsx","webpack:///./src/routes/views/details/ociDetails/detailsToolbar.tsx","webpack:///./src/routes/views/details/ociDetails/ociDetails.styles.ts","webpack:///./src/routes/views/details/ociDetails/ociDetails.tsx"],"sourcesContent":["export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.payer_tenant_id) {\n        return 'payer_tenant_id';\n    }\n    if (groupBy.region) {\n        return 'region';\n    }\n    if (groupBy.product_service) {\n        return 'product_service';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costValue: {\n        marginTop: global_spacer_lg.var,\n        marginBottom: 0,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    dateTitle: {\n        textAlign: 'end',\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentLeft: {\n        display: 'flex',\n        minHeight: '90px',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { TagPathsType } from 'api/tags/tag';\nimport { ExportsLink } from 'components/drawers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Currency } from 'routes/components/currency';\nimport { GroupBy } from 'routes/views/components/groupBy';\nimport { filterProviders } from 'routes/views/utils/providers';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedOciReportItems';\nimport { getSinceDateRangeString } from 'utils/dates';\nimport { formatCurrency } from 'utils/format';\nimport { styles } from './detailsHeader.styles';\nconst groupByOptions = [\n    { label: 'payer_tenant_id', value: 'payer_tenant_id' },\n    { label: 'product_service', value: 'product_service' },\n    { label: 'region', value: 'region' },\n];\nconst tagReportPathsType = TagPathsType.oci;\nclass DetailsHeaderBase extends React.Component {\n    render() {\n        const { currency, groupBy, isCurrencyFeatureEnabled, isExportsFeatureEnabled, onCurrencySelected, onGroupBySelected, providers, providersError, report, intl, } = this.props;\n        const showContent = report && !providersError && providers && providers.meta && providers.meta.count > 0;\n        const hasCost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.ociDetailsTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    isCurrencyFeatureEnabled && React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(\"div\", { style: styles.headerContentLeft },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: !showContent, onSelected: onGroupBySelected, options: groupByOptions, showTags: true, tagReportPathsType: tagReportPathsType })),\n                Boolean(showContent) && (React.createElement(\"div\", null,\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: TitleSizes['4xl'] }, formatCurrency(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD')),\n                    React.createElement(\"div\", { style: styles.dateTitle }, getSinceDateRangeString()))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        isCurrencyFeatureEnabled: featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state),\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        providers: filterProviders(providers, ProviderType.oci),\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n    };\n});\nconst DetailsHeader = injectIntl(connect(mapStateToProps, {})(DetailsHeaderBase));\nexport { DetailsHeader };\n","import 'routes/views/details/components/dataTable/dataTable.scss';\nimport { ReportPathsType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { Actions } from 'routes/views/details/components/actions';\nimport { DataTable } from 'routes/views/details/components/dataTable';\nimport { styles } from 'routes/views/details/components/dataTable/dataTable.styles';\nimport { getBreakdownPath } from 'routes/views/utils/paths';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getForDateRangeString, getNoDataForDateRangeString } from 'utils/dates';\nimport { formatCurrency, formatPercentage } from 'utils/format';\nimport { formatPath } from 'utils/paths';\nimport { noPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nconst reportPathsType = ReportPathsType.oci;\nclass DetailsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { groupBy, groupByTagKey, intl, isAllSelected, report, router, selectedItems } = this.props;\n            if (!report) {\n                return;\n            }\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: (groupByTagKey ? groupByTagKey : groupBy),\n            });\n            const columns = groupByTagKey\n                ? [\n                    {\n                        name: '',\n                    },\n                    {\n                        name: intl.formatMessage(messages.tagNames),\n                    },\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign({ orderBy: groupBy, name: intl.formatMessage(messages.detailsResourceNames, { value: groupBy }) }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ];\n            computedItems.map((item, index) => {\n                const cost = this.getTotalCost(item, index);\n                const label = item && item.label !== null ? item.label : '';\n                const monthOverMonth = this.getMonthOverMonthCost(item, index);\n                const isDisabled = label === `${noPrefix}${groupBy}` || label === `${noPrefix}${groupByTagKey}`;\n                const desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                const actions = this.getActions(item, isDisabled);\n                const name = isDisabled ? label : (React.createElement(Link, { to: getBreakdownPath({\n                        basePath: formatPath(routes.ociDetailsBreakdown.path),\n                        description: item.id,\n                        groupBy,\n                        id: item.id,\n                        router,\n                        title: label.toString(),\n                    }) }, label));\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: (React.createElement(\"div\", null,\n                                name,\n                                desc)),\n                        },\n                        { value: React.createElement(\"div\", null, monthOverMonth) },\n                        { value: React.createElement(\"div\", null, cost), style: styles.managedColumn },\n                        { value: React.createElement(\"div\", null, actions) },\n                    ],\n                    isOpen: false,\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                    selectionDisabled: isDisabled,\n                });\n            });\n            this.setState({\n                columns,\n                rows,\n            });\n        };\n        this.getActions = (item, isDisabled) => {\n            const { groupBy, reportQueryString } = this.props;\n            return (React.createElement(Actions, { groupBy: groupBy, isDisabled: isDisabled, item: item, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getMonthOverMonthCost = (item, index) => {\n            const { intl } = this.props;\n            const value = formatCurrency(Math.abs(item.cost.total.value - item.delta_value), item.cost.total.units);\n            const percentage = item.delta_percent !== null ? formatPercentage(Math.abs(item.delta_percent)) : 0;\n            const showPercentage = !(percentage === 0 || percentage === '0.00');\n            const showValue = item.delta_percent !== null; // Workaround for https://github.com/project-koku/koku/issues/1395\n            let iconOverride;\n            if (showPercentage) {\n                iconOverride = 'iconOverride';\n                if (item.delta_percent !== null && item.delta_value < 0) {\n                    iconOverride += ' decrease';\n                }\n                if (item.delta_percent !== null && item.delta_value > 0) {\n                    iconOverride += ' increase';\n                }\n            }\n            if (!showValue) {\n                return getNoDataForDateRangeString();\n            }\n            else {\n                return (React.createElement(\"div\", { className: \"monthOverMonthOverride\" },\n                    React.createElement(\"div\", { className: iconOverride, key: `month-over-month-cost-${index}` },\n                        showPercentage ? intl.formatMessage(messages.percent, { value: percentage }) : React.createElement(EmptyValueState, null),\n                        Boolean(showPercentage && item.delta_percent !== null && item.delta_value > 0) && (React.createElement(\"span\", { className: \"fa fa-sort-up\", style: styles.infoArrow, key: `month-over-month-icon-${index}` })),\n                        Boolean(showPercentage && item.delta_percent !== null && item.delta_value < 0) && (React.createElement(\"span\", { className: \"fa fa-sort-down\", style: Object.assign(Object.assign({}, styles.infoArrow), styles.infoArrowDesc), key: `month-over-month-icon-${index}` }))),\n                    React.createElement(\"div\", { style: styles.infoDescription, key: `month-over-month-info-${index}` }, getForDateRangeString(value))));\n            }\n        };\n        this.getTotalCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.cost.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.cost.total.value, item.cost.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport || prevProps.selectedItems !== selectedItems) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { isLoading, onSelected, onSort, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, isLoading: isLoading, onSelected: onSelected, onSort: onSort, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst DetailsTable = injectIntl(withRouter(DetailsTableBase));\nexport { DetailsTable };\n","import { getQuery } from 'api/queries/ociQuery';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType, TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { isEqual } from 'utils/equal';\nimport { tagKey } from 'utils/props';\nconst tagReportType = TagType.tag;\nconst tagReportPathsType = TagPathsType.oci;\nexport class DetailsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { intl, tagReport } = this.props;\n            const options = [\n                {\n                    name: intl.formatMessage(messages.filterByValues, { value: 'payer_tenant_id' }),\n                    key: 'payer_tenant_id',\n                },\n                {\n                    name: intl.formatMessage(messages.filterByValues, { value: 'product_service' }),\n                    key: 'product_service',\n                },\n                {\n                    name: intl.formatMessage(messages.filterByValues, { value: 'region' }),\n                    key: 'region',\n                },\n            ];\n            if (tagReport && tagReport.data && tagReport.data.length) {\n                options.push({ name: intl.formatMessage(messages.filterByValues, { value: tagKey }), key: tagKey });\n            }\n            return options;\n        };\n    }\n    componentDidMount() {\n        const { fetchTag, tagReportFetchStatus, tagQueryString } = this.props;\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        }, () => {\n            if (tagReportFetchStatus !== FetchStatus.inProgress) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchTag, query, tagReport, tagReportFetchStatus, tagQueryString } = this.props;\n        if (!isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            }, () => {\n                if (tagReportFetchStatus !== FetchStatus.inProgress) {\n                    fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n                }\n            });\n        }\n        else if (query && !isEqual(query, prevProps.query)) {\n            if (tagReportFetchStatus !== FetchStatus.inProgress) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n        }\n    }\n    render() {\n        const { groupBy, isAllSelected, isDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onExportClicked, onFilterAdded, onFilterRemoved, pagination, query, selectedItems, tagReport, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, groupBy: groupBy, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onExportClicked: onExportClicked, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.oci, selectedItems: selectedItems, showBulkSelect: true, showExport: true, showFilter: true, tagReport: tagReport, tagReportPathsType: tagReportPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        key_only: true,\n        limit: 1000,\n    });\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, tagQueryString);\n    return {\n        tagReportFetchStatus,\n        tagReport,\n        tagQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst DetailsToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsToolbarBase);\nconst DetailsToolbar = injectIntl(DetailsToolbarConnect);\nexport { DetailsToolbar };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    ociDetails: {\n        minHeight: '100%',\n    },\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    toolbarContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getQuery, parseQuery } from 'api/queries/ociQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoData } from 'routes/state/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { ExportModal } from 'routes/views/components/export';\nimport { getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { handleCurrencySelected, handleFilterAdded, handleFilterRemoved, handlePerPageSelect, handleSetPage, handleSort, } from 'routes/views/utils/handles';\nimport { filterProviders, hasCurrentMonthData } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedOciReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getCurrency } from 'utils/localStorage';\nimport { noPrefix, tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { DetailsHeader } from './detailsHeader';\nimport { DetailsTable } from './detailsTable';\nimport { DetailsToolbar } from './detailsToolbar';\nimport { styles } from './ociDetails.styles';\nconst baseQuery = {\n    delta: 'cost',\n    filter: {\n        limit: 10,\n        offset: 0,\n        resolution: 'monthly',\n        time_scope_units: 'month',\n        time_scope_value: -1,\n    },\n    exclude: {},\n    filter_by: {},\n    group_by: {\n        payer_tenant_id: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst reportType = ReportType.cost;\nconst reportPathsType = ReportPathsType.oci;\nclass OciDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            isAllSelected: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey || groupById,\n            });\n        };\n        this.getExportModal = (computedItems) => {\n            const { query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `${noPrefix}${groupById}` || item.label === `${noPrefix}${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, report, router } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = offset / limit + 1;\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handlePerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.oci),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { query, report, reportFetchStatus, reportQueryString, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return (React.createElement(DetailsTable, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, groupByTagKey: groupByTagKey, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending) => handleSort(query, router, sortType, isSortAscending), report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, router, report } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(DetailsToolbar, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: computedItems.length === 0 || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onExportClicked: this.handleExportModalOpen, onFilterAdded: filter => handleFilterAdded(query, router, filter), onFilterRemoved: filter => handleFilterRemoved(query, router, filter), pagination: this.getPagination(isDisabled), query: query, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            const groupByKey = groupBy;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: '*',\n                }, order_by: { cost: 'desc' } });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.updateReport = () => {\n            const { fetchReport, reportQueryString } = this.props;\n            fetchReport(reportPathsType, reportType, reportQueryString);\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { currency, intl, providers, providersFetchStatus, query, report, reportError, reportFetchStatus, router, } = this.props;\n        const computedItems = this.getComputedItems();\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const isDisabled = computedItems.length === 0;\n        const title = intl.formatMessage(messages.ociDetailsTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.inProgress) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.complete) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: ProviderType.oci, title: title });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.ociDetails },\n            React.createElement(DetailsHeader, { currency: currency, groupBy: groupById, onCurrencySelected: value => handleCurrencySelected(query, router, value), onGroupBySelected: this.handleGroupBySelected, report: report }),\n            React.createElement(\"div\", { style: styles.content },\n                React.createElement(\"div\", { style: styles.toolbarContainer }, this.getToolbar(computedItems)),\n                this.getExportModal(computedItems),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const currency = featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state) ? getCurrency() : undefined;\n    const query = {\n        delta: 'cost',\n        filter: Object.assign(Object.assign({}, baseQuery.filter), queryFromRoute.filter),\n        filter_by: queryFromRoute.filter_by || baseQuery.filter_by,\n        exclude: queryFromRoute.exclude || baseQuery.exclude,\n        group_by: queryFromRoute.group_by || baseQuery.group_by,\n        order_by: queryFromRoute.order_by || baseQuery.order_by,\n    };\n    const reportQueryString = getQuery(Object.assign(Object.assign({}, query), { currency }));\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        currency,\n        providers: filterProviders(providers, ProviderType.oci),\n        providersError,\n        providersFetchStatus,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n        // Testing...\n        //\n        // providers: {\n        //   meta: {\n        //     count: 0,\n        //   },\n        // } as any,\n        // providersError: {\n        //   response: {\n        //     // status: 401\n        //     status: 500\n        //   }\n        // } as any,\n        // providersFetchStatus: FetchStatus.inProgress,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(OciDetails)));\n"],"names":["getIdKeyForGroupBy","groupBy","payer_tenant_id","region","product_service","styles","costValue","marginTop","global_spacer_lg","marginBottom","costLabelUnit","fontSize","global_FontSize_sm","color","global_Color_100","dateTitle","textAlign","header","backgroundColor","global_BackgroundColor_light_100","padding","headerContent","display","justifyContent","headerContentLeft","minHeight","headerContentRight","title","paddingBottom","global_spacer_sm","groupByOptions","label","value","tagReportPathsType","DetailsHeaderBase","render","currency","isCurrencyFeatureEnabled","isExportsFeatureEnabled","onCurrencySelected","onGroupBySelected","providers","providersError","report","intl","this","props","showContent","meta","count","hasCost","total","cost","style","Title","headingLevel","size","TitleSizes","formatMessage","messages","onSelect","isDisabled","onSelected","options","showTags","Boolean","format","units","mapStateToProps","state","providersQueryString","providersFetchStatus","featureFlags","DetailsHeader","injectIntl","connect","reportPathsType","DetailsTableBase","constructor","super","arguments","columns","rows","initDatum","groupByTagKey","isAllSelected","router","selectedItems","computedItems","idKey","name","Object","assign","orderBy","length","isSortable","map","item","index","getTotalCost","monthOverMonth","getMonthOverMonthCost","desc","id","actions","getActions","Link","to","basePath","routes","description","toString","push","cells","isOpen","selected","undefined","find","val","selectionDisabled","setState","reportQueryString","Math","abs","delta_value","percentage","delta_percent","showPercentage","showValue","iconOverride","className","key","percentValue","toFixed","componentDidMount","componentDidUpdate","prevProps","currentReport","data","JSON","stringify","isLoading","onSort","DetailsTable","tagReportType","DetailsToolbarBase","defaultState","getCategoryOptions","tagReport","fetchTag","tagReportFetchStatus","tagQueryString","categoryOptions","query","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onExportClicked","onFilterAdded","onFilterRemoved","pagination","resourcePathsType","showBulkSelect","showExport","showFilter","filter","resolution","time_scope_units","time_scope_value","key_only","limit","mapDispatchToProps","DetailsToolbarConnect","DetailsToolbar","ociDetails","content","paddingTop","paginationContainer","marginLeft","marginRight","global_spacer_md","tableContainer","toolbarContainer","baseQuery","delta","offset","exclude","filter_by","group_by","order_by","reportType","OciDetails","stateProps","dispatchProps","isExportModalOpen","getComputedItems","groupById","getExportModal","items","isAllItems","onClose","handleExportModalClose","getPagination","isBottom","page","Pagination","isCompact","itemCount","onPerPageSelect","event","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","variant","PaginationVariant","widgetId","getTable","reportFetchStatus","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","handleExportModalOpen","action","handleGroupBySelected","groupByKey","newQuery","parse","navigate","location","replace","isSelected","newItems","updateReport","fetchReport","bind","prevState","reportError","noReport","noLocation","search","providerType","queryFromRoute"],"sourceRoot":""}