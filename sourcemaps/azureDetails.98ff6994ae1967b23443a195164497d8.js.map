{"version":3,"file":"js/azureDetails.f4d86e43bc3ac52f909d.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/external-link-alt-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_xs.js","webpack:///./src/routes/components/icons/optimizationIcon/optimizationIcon.tsx","webpack:///./src/routes/state/noOptimizations/noOptimizationsState.tsx","webpack:///./src/utils/computedReport/getComputedAzureReportItems.ts","webpack:///./src/routes/views/details/azureDetails/azureDetails.styles.ts","webpack:///./src/routes/views/details/azureDetails/detailsHeader.styles.ts","webpack:///./src/routes/views/details/azureDetails/detailsHeader.tsx","webpack:///./src/routes/views/details/azureDetails/detailsTable.tsx","webpack:///./src/routes/views/details/azureDetails/detailsToolbar.tsx","webpack:///./src/routes/views/details/azureDetails/azureDetails.tsx","webpack:///./src/routes/views/details/components/actions/actions.tsx","webpack:///./src/routes/views/details/components/dataTable/dataTable.styles.ts","webpack:///./src/routes/views/details/components/dataTable/dataTable.tsx"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExternalLinkAltIcon = createIcon(ExternalLinkAltIconConfig);\n\nexport default ExternalLinkAltIcon;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_xs = {\n  \"name\": \"--pf-global--spacer--xs\",\n  \"value\": \"0.25rem\",\n  \"var\": \"var(--pf-global--spacer--xs)\"\n};\nexports[\"default\"] = exports.global_spacer_xs;","import './optimizationIcon.scss';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nconst icon = require('./Red_Hat-IT_Optimization-Gray.svg');\nconst OptimizationIcon = ({ className, intl }) => {\n    return (React.createElement(\"img\", { className: `optimization-icon ${className}`, src: icon, alt: intl.formatMessage(messages.optimizations), \"aria-hidden\": \"true\" }));\n};\nexport default injectIntl(OptimizationIcon);\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { OptimizationIcon } from 'routes/components/icons/optimizationIcon';\nclass NoOptimizationsStateBase extends React.Component {\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: OptimizationIcon }),\n            React.createElement(Title, { headingLevel: \"h1\", size: \"lg\" }, intl.formatMessage(messages.noOptimizationsTitle)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(messages.noOptimizationsDesc))));\n    }\n}\nconst NoOptimizationsState = injectIntl(NoOptimizationsStateBase);\nexport { NoOptimizationsState };\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.subscription_guid) {\n        return 'subscription_guid';\n    }\n    if (groupBy.resource_location) {\n        return 'resource_location';\n    }\n    if (groupBy.service_name) {\n        return 'service_name';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    azureDetails: {\n        minHeight: '100%',\n    },\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    toolbarContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costValue: {\n        marginTop: global_spacer_lg.var,\n        marginBottom: 0,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    dateTitle: {\n        textAlign: 'end',\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentLeft: {\n        display: 'flex',\n        minHeight: '90px',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { TagPathsType } from 'api/tags/tag';\nimport { ExportsLink } from 'components/drawers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Currency } from 'routes/components/currency';\nimport { GroupBy } from 'routes/views/components/groupBy';\nimport { filterProviders } from 'routes/views/utils/providers';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedAzureReportItems';\nimport { getSinceDateRangeString } from 'utils/dates';\nimport { formatCurrency } from 'utils/format';\nimport { styles } from './detailsHeader.styles';\nconst groupByOptions = [\n    { label: 'subscription_guid', value: 'subscription_guid' },\n    { label: 'service_name', value: 'service_name' },\n    { label: 'resource_location', value: 'resource_location' },\n];\nconst tagPathsType = TagPathsType.azure;\nclass DetailsHeaderBase extends React.Component {\n    render() {\n        const { currency, groupBy, isExportsFeatureEnabled, onCurrencySelected, onGroupBySelected, providers, providersError, report, intl, } = this.props;\n        const showContent = report && !providersError && providers && providers.meta && providers.meta.count > 0;\n        const hasCost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.azureDetailsTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(\"div\", { style: styles.headerContentLeft },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: !showContent, onSelected: onGroupBySelected, options: groupByOptions, showTags: true, tagPathsType: tagPathsType })),\n                showContent && (React.createElement(\"div\", null,\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: TitleSizes['4xl'] }, formatCurrency(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD')),\n                    React.createElement(\"div\", { style: styles.dateTitle }, getSinceDateRangeString()))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        providers: filterProviders(providers, ProviderType.azure),\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n    };\n});\nconst DetailsHeader = injectIntl(connect(mapStateToProps, {})(DetailsHeaderBase));\nexport { DetailsHeader };\n","import 'routes/views/details/components/dataTable/dataTable.scss';\nimport { ReportPathsType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { Actions } from 'routes/views/details/components/actions';\nimport { DataTable } from 'routes/views/details/components/dataTable';\nimport { styles } from 'routes/views/details/components/dataTable/dataTable.styles';\nimport { getBreakdownPath } from 'routes/views/utils/paths';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getForDateRangeString, getNoDataForDateRangeString } from 'utils/dates';\nimport { formatCurrency, formatPercentage } from 'utils/format';\nimport { formatPath } from 'utils/paths';\nimport { noPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nconst reportPathsType = ReportPathsType.azure;\nclass DetailsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { groupBy, groupByTagKey, intl, isAllSelected, report, selectedItems, router } = this.props;\n            if (!report) {\n                return;\n            }\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: (groupByTagKey ? groupByTagKey : groupBy),\n            });\n            const columns = groupByTagKey\n                ? [\n                    {\n                        name: '',\n                    },\n                    {\n                        name: intl.formatMessage(messages.tagNames),\n                    },\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign({ orderBy: groupBy, name: intl.formatMessage(messages.detailsResourceNames, { value: groupBy }) }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ];\n            computedItems.map((item, index) => {\n                const cost = this.getTotalCost(item, index);\n                const label = item && item.label !== null ? item.label : '';\n                const monthOverMonth = this.getMonthOverMonthCost(item, index);\n                const isDisabled = label === `${noPrefix}${groupBy}` || label === `${noPrefix}${groupByTagKey}`;\n                const desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                const actions = this.getActions(item, isDisabled);\n                const name = isDisabled ? label : (React.createElement(Link, { to: getBreakdownPath({\n                        basePath: formatPath(routes.azureDetailsBreakdown.path),\n                        description: item.id,\n                        groupBy,\n                        id: item.id,\n                        router,\n                        title: label.toString(),\n                    }) }, label));\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: (React.createElement(\"div\", null,\n                                name,\n                                desc)),\n                        },\n                        { value: React.createElement(\"div\", null, monthOverMonth) },\n                        { value: React.createElement(\"div\", null, cost), style: styles.managedColumn },\n                        { value: React.createElement(\"div\", null, actions) },\n                    ],\n                    isOpen: false,\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                    selectionDisabled: isDisabled,\n                });\n            });\n            this.setState({\n                columns,\n                rows,\n            });\n        };\n        this.getActions = (item, isDisabled) => {\n            const { groupBy, reportQueryString } = this.props;\n            return (React.createElement(Actions, { groupBy: groupBy, isDisabled: isDisabled, item: item, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getMonthOverMonthCost = (item, index) => {\n            const { intl } = this.props;\n            const value = formatCurrency(Math.abs(item.cost.total.value - item.delta_value), item.cost.total.units);\n            const percentage = item.delta_percent !== null ? formatPercentage(Math.abs(item.delta_percent)) : 0;\n            const showPercentage = !(percentage === 0 || percentage === '0.00');\n            const showValue = item.delta_percent !== null; // Workaround for https://github.com/project-koku/koku/issues/1395\n            let iconOverride;\n            if (showPercentage) {\n                iconOverride = 'iconOverride';\n                if (item.delta_percent !== null && item.delta_value < 0) {\n                    iconOverride += ' decrease';\n                }\n                if (item.delta_percent !== null && item.delta_value > 0) {\n                    iconOverride += ' increase';\n                }\n            }\n            if (!showValue) {\n                return getNoDataForDateRangeString();\n            }\n            else {\n                return (React.createElement(\"div\", { className: \"monthOverMonthOverride\" },\n                    React.createElement(\"div\", { className: iconOverride, key: `month-over-month-cost-${index}` },\n                        showPercentage ? intl.formatMessage(messages.percent, { value: percentage }) : React.createElement(EmptyValueState, null),\n                        showPercentage && item.delta_percent !== null && item.delta_value > 0 && (React.createElement(\"span\", { className: \"fa fa-sort-up\", style: styles.infoArrow, key: `month-over-month-icon-${index}` })),\n                        showPercentage && item.delta_percent !== null && item.delta_value < 0 && (React.createElement(\"span\", { className: \"fa fa-sort-down\", style: Object.assign(Object.assign({}, styles.infoArrow), styles.infoArrowDesc), key: `month-over-month-icon-${index}` }))),\n                    React.createElement(\"div\", { style: styles.infoDescription, key: `month-over-month-info-${index}` }, getForDateRangeString(value))));\n            }\n        };\n        this.getTotalCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.cost.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.cost.total.value, item.cost.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport || prevProps.selectedItems !== selectedItems) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { isLoading, onSelected, onSort, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, isLoading: isLoading, onSelected: onSelected, onSort: onSort, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst DetailsTable = injectIntl(withRouter(DetailsTableBase));\nexport { DetailsTable };\n","import { getQuery } from 'api/queries/azureQuery';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType, TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { isEqual } from 'utils/equal';\nimport { tagKey } from 'utils/props';\nconst tagType = TagType.tag;\nconst tagPathsType = TagPathsType.azure;\nexport class DetailsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { intl, tagReport } = this.props;\n            const options = [\n                {\n                    name: intl.formatMessage(messages.filterByValues, { value: 'subscription_guid' }),\n                    key: 'subscription_guid',\n                },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'service_name' }), key: 'service_name' },\n                {\n                    name: intl.formatMessage(messages.filterByValues, { value: 'resource_location' }),\n                    key: 'resource_location',\n                },\n            ];\n            if (tagReport && tagReport.data && tagReport.data.length) {\n                options.push({ name: intl.formatMessage(messages.filterByValues, { value: tagKey }), key: tagKey });\n            }\n            return options;\n        };\n        this.updateReport = () => {\n            const { fetchTag, tagQueryString } = this.props;\n            fetchTag(tagPathsType, tagType, tagQueryString);\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        }, () => {\n            this.updateReport();\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { query, tagReport } = this.props;\n        if (!isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            }, () => {\n                this.updateReport();\n            });\n        }\n        else if (query && !isEqual(query, prevProps.query)) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { groupBy, isAllSelected, isDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onExportClicked, onFilterAdded, onFilterRemoved, pagination, query, selectedItems, tagReport, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, groupBy: groupBy, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onExportClicked: onExportClicked, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.azure, selectedItems: selectedItems, showBulkSelect: true, showExcludes: true, showExport: true, showFilter: true, tagReport: tagReport, tagPathsType: tagPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        key_only: true,\n        limit: 1000,\n    });\n    const tagReport = tagSelectors.selectTag(state, tagPathsType, tagType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagPathsType, tagType, tagQueryString);\n    return {\n        tagReportFetchStatus,\n        tagReport,\n        tagQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst DetailsToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsToolbarBase);\nconst DetailsToolbar = injectIntl(DetailsToolbarConnect);\nexport { DetailsToolbar };\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getQuery, parseQuery } from 'api/queries/azureQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoData } from 'routes/state/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { ExportModal } from 'routes/views/components/export';\nimport { getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { handleCurrencySelected, handleFilterAdded, handleFilterRemoved, handlePerPageSelect, handleSetPage, handleSort, } from 'routes/views/utils/handles';\nimport { filterProviders, hasCurrentMonthData } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedAzureReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getCurrency } from 'utils/localStorage';\nimport { noPrefix, tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { styles } from './azureDetails.styles';\nimport { DetailsHeader } from './detailsHeader';\nimport { DetailsTable } from './detailsTable';\nimport { DetailsToolbar } from './detailsToolbar';\nconst baseQuery = {\n    filter: {\n        limit: 10,\n        offset: 0,\n    },\n    exclude: {},\n    filter_by: {},\n    group_by: {\n        subscription_guid: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst reportType = ReportType.cost;\nconst reportPathsType = ReportPathsType.azure;\nclass AzureDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            isAllSelected: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey || groupById,\n            });\n        };\n        this.getExportModal = (computedItems) => {\n            const { query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `${noPrefix}${groupById}` || item.label === `${noPrefix}${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, router, report } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = Math.trunc(offset / limit + 1);\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handlePerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.azure),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { query, report, reportFetchStatus, reportQueryString, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return (React.createElement(DetailsTable, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, groupByTagKey: groupByTagKey, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending) => handleSort(query, router, sortType, isSortAscending), report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, router, report } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(DetailsToolbar, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isDisabled || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onExportClicked: this.handleExportModalOpen, onFilterAdded: filter => handleFilterAdded(query, router, filter), onFilterRemoved: filter => handleFilterRemoved(query, router, filter), pagination: this.getPagination(isDisabled), query: query, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            const groupByKey = groupBy;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: '*',\n                }, order_by: { cost: 'desc' } });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.updateReport = () => {\n            const { fetchReport, reportQueryString } = this.props;\n            fetchReport(reportPathsType, reportType, reportQueryString);\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { currency, intl, providers, providersFetchStatus, query, report, reportError, reportFetchStatus, router, } = this.props;\n        const computedItems = this.getComputedItems();\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const isDisabled = computedItems.length === 0;\n        const title = intl.formatMessage(messages.azureDetailsTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.inProgress) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.complete) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: ProviderType.azure, title: title });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.azureDetails },\n            React.createElement(DetailsHeader, { currency: currency, groupBy: groupById, onCurrencySelected: value => handleCurrencySelected(query, router, value), onGroupBySelected: this.handleGroupBySelected, report: report }),\n            React.createElement(\"div\", { style: styles.content },\n                React.createElement(\"div\", { style: styles.toolbarContainer }, this.getToolbar(computedItems)),\n                this.getExportModal(computedItems),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const currency = getCurrency();\n    const query = Object.assign(Object.assign({}, baseQuery), queryFromRoute);\n    const reportQuery = {\n        currency,\n        delta: 'cost',\n        exclude: query.exclude,\n        filter: Object.assign(Object.assign({}, query.filter), { resolution: 'monthly', time_scope_units: 'month', time_scope_value: -1 }),\n        filter_by: query.filter_by,\n        group_by: query.group_by,\n        order_by: query.order_by,\n    };\n    const reportQueryString = getQuery(reportQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        currency,\n        providers: filterProviders(providers, ProviderType.azure),\n        providersError,\n        providersFetchStatus,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(AzureDetails)));\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ExportModal } from 'routes/views/components/export';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nimport { tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, reportPathsType, reportQueryString } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { count: 1, groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, intl, item: { source_uuid }, redirectToCostModel, router, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, intl.formatMessage(messages.detailsActionsExport)),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], router) }, intl.formatMessage(messages.detailsActionsPriceList)));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = injectIntl(withRouter(DetailsActionsConnect));\nexport default Actions;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    costColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingRight: 0,\n    },\n    defaultLabel: {\n        minWidth: '63px',\n    },\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    lastReported: {\n        textAlign: 'right',\n        paddingRight: '40px',\n    },\n    lastReportedColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    managedColumn: {\n        textAlign: 'right',\n    },\n    nameColumn: {\n        width: '1%',\n    },\n};\n","import './dataTable.scss';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport { parseQuery } from 'api/queries/ocpQuery';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { NoOptimizationsState } from 'routes/state/noOptimizations/noOptimizationsState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass DataTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { intl, isOptimizations, router } = this.props;\n            const queryFromRoute = parseQuery(router.location.search);\n            if (queryFromRoute.filter_by) {\n                for (const val of Object.values(queryFromRoute.filter_by)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            if (isOptimizations) {\n                return React.createElement(NoOptimizationsState, null);\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, router } = this.props;\n            const orderBy = columns[index].orderBy;\n            const queryFromRoute = parseQuery(router.location.search);\n            const direction = queryFromRoute && queryFromRoute.order_by && queryFromRoute.order_by[orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected, rows } = this.props;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnRowClick = (event, rowIndex) => {\n            const { onRowClick, rows } = this.props;\n            rows.map(row => (row.selected = false));\n            rows[rowIndex].selected = true;\n            this.setState({ rows }, () => {\n                if (onRowClick) {\n                    onRowClick(event, rowIndex);\n                }\n            });\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isLoading, isOptimizations, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.dataTableAriaLabel), className: \"tableOverride\", gridBreakPoint: \"grid-2xl\", hasSelectableRowCaption: isOptimizations },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { isSelectable: isOptimizations, isHoverable: isOptimizations, isRowSelected: isOptimizations && row.selected, onRowClick: isOptimizations ? _event => this.handleOnRowClick(_event, rowIndex) : undefined, key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 && !isOptimizations ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${cellIndex}-${rowIndex}`, modifier: \"nowrap\", select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    }, style: item.style })) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", isActionCell: !isOptimizations && cellIndex === row.cells.length - 1, style: item.style }, item.value))))))))),\n            rows.length === 0 && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(DataTable));\n"],"names":["ExternalLinkAltIconConfig","name","height","width","svgPath","yOffset","xOffset","ExternalLinkAltIcon","exports","icon","injectIntl","className","intl","src","alt","formatMessage","messages","NoOptimizationsStateBase","render","this","props","EmptyState","variant","EmptyStateVariant","EmptyStateIcon","Title","headingLevel","size","EmptyStateBody","NoOptimizationsState","getIdKeyForGroupBy","groupBy","subscription_guid","resource_location","service_name","styles","azureDetails","minHeight","content","paddingBottom","global_spacer_lg","paddingTop","paginationContainer","marginLeft","marginRight","pagination","backgroundColor","global_BackgroundColor_light_100","global_spacer_md","tableContainer","toolbarContainer","costValue","marginTop","marginBottom","costLabelUnit","fontSize","global_FontSize_sm","color","global_Color_100","dateTitle","textAlign","header","padding","headerContent","display","justifyContent","headerContentLeft","headerContentRight","title","global_spacer_sm","groupByOptions","label","value","tagPathsType","DetailsHeaderBase","currency","isExportsFeatureEnabled","onCurrencySelected","onGroupBySelected","providers","providersError","report","showContent","meta","count","hasCost","total","cost","style","TitleSizes","onSelect","isDisabled","onSelected","options","showTags","format","units","mapStateToProps","state","providersQueryString","providersFetchStatus","featureFlags","DetailsHeader","connect","reportPathsType","DetailsTableBase","constructor","super","arguments","columns","rows","initDatum","groupByTagKey","isAllSelected","selectedItems","router","computedItems","idKey","Object","assign","orderBy","length","isSortable","map","item","index","getTotalCost","monthOverMonth","getMonthOverMonthCost","desc","id","actions","getActions","Link","to","basePath","routes","description","toString","push","cells","isOpen","selected","undefined","find","val","selectionDisabled","setState","reportQueryString","Math","abs","delta_value","percentage","delta_percent","showPercentage","showValue","iconOverride","key","percentValue","toFixed","componentDidMount","componentDidUpdate","prevProps","currentReport","data","JSON","stringify","isLoading","onSort","DetailsTable","tagType","DetailsToolbarBase","defaultState","getCategoryOptions","tagReport","updateReport","fetchTag","tagQueryString","categoryOptions","query","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onExportClicked","onFilterAdded","onFilterRemoved","resourcePathsType","showBulkSelect","showExcludes","showExport","showFilter","filter","resolution","time_scope_units","time_scope_value","key_only","limit","tagReportFetchStatus","mapDispatchToProps","DetailsToolbarConnect","DetailsToolbar","baseQuery","offset","exclude","filter_by","group_by","order_by","reportType","AzureDetails","stateProps","dispatchProps","isExportModalOpen","getComputedItems","groupById","getExportModal","items","isAllItems","onClose","handleExportModalClose","getPagination","isBottom","page","trunc","Pagination","isCompact","itemCount","onPerPageSelect","event","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","PaginationVariant","widgetId","getTable","reportFetchStatus","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","handleExportModalOpen","action","handleGroupBySelected","groupByKey","newQuery","parse","navigate","location","replace","isSelected","newItems","fetchReport","bind","prevState","reportError","noReport","noLocation","search","providerType","queryFromRoute","reportQuery","delta","DetailsActionsBase","isDropdownOpen","handleOnSelect","handleOnToggle","showPriceListOption","source_uuid","redirectToCostModel","DropdownItem","component","onClick","unshift","includes","Dropdown","toggle","KebabToggle","onToggle","isPlain","position","dropdownItems","costModels","DetailsActionsConnect","costColumn","paddingRight","defaultLabel","minWidth","emptyState","infoArrow","infoArrowDesc","bottom","infoDescription","lastReported","lastReportedColumn","managedColumn","nameColumn","DataTable","getEmptyState","isOptimizations","values","showMargin","getSortBy","direction","getSortParams","sortBy","handleOnSort","columnIndex","rowId","newRows","row","SortByDirection","handleOnRowClick","rowIndex","onRowClick","TableComposable","gridBreakPoint","hasSelectableRowCaption","Thead","Tr","col","Th","modifier","sort","Tbody","Td","colSpan","Bullseye","Spinner","isSelectable","isHoverable","isRowSelected","_event","cellIndex","dataLabel","isActionCell","select","disable"],"sourceRoot":""}