{"version":3,"file":"js/azureDetails.1670943521552.8b7a58c3de5871dd279f.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/external-link-alt-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/minus-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_Color_100.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_FontSize_xs.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_disabled_color_100.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_3xl.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_xs.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Unavailable/Unavailable.js","webpack:///./src/routes/components/state/emptyValueState/emptyValueState.tsx","webpack:///./src/utils/computedReport/getComputedAzureReportItems.ts","webpack:///./src/routes/views/details/azureDetails/azureDetails.styles.ts","webpack:///./src/routes/views/details/azureDetails/detailsHeader.styles.ts","webpack:///./src/routes/views/details/azureDetails/detailsHeader.tsx","webpack:///./src/routes/views/details/azureDetails/detailsTable.tsx","webpack:///./src/routes/views/details/azureDetails/detailsToolbar.tsx","webpack:///./src/routes/views/details/azureDetails/azureDetails.tsx","webpack:///./src/routes/views/details/components/actions/actions.tsx","webpack:///./src/routes/views/details/components/dataTable/dataTable.styles.ts","webpack:///./src/routes/views/details/components/dataTable/dataTable.tsx","webpack:///./src/routes/views/utils/paths.ts"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExternalLinkAltIcon = createIcon(ExternalLinkAltIconConfig);\n\nexport default ExternalLinkAltIcon;","import { createIcon } from '../createIcon';\n\nexport const MinusIconConfig = {\n  name: 'MinusIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M416 208H32c-17.67 0-32 14.33-32 32v32c0 17.67 14.33 32 32 32h384c17.67 0 32-14.33 32-32v-32c0-17.67-14.33-32-32-32z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const MinusIcon = createIcon(MinusIconConfig);\n\nexport default MinusIcon;","\"use strict\";\nexports.__esModule = true;\nexports.global_Color_100 = {\n  \"name\": \"--pf-global--Color--100\",\n  \"value\": \"#151515\",\n  \"var\": \"var(--pf-global--Color--100)\"\n};\nexports[\"default\"] = exports.global_Color_100;","\"use strict\";\nexports.__esModule = true;\nexports.global_FontSize_xs = {\n  \"name\": \"--pf-global--FontSize--xs\",\n  \"value\": \"0.75rem\",\n  \"var\": \"var(--pf-global--FontSize--xs)\"\n};\nexports[\"default\"] = exports.global_FontSize_xs;","\"use strict\";\nexports.__esModule = true;\nexports.global_disabled_color_100 = {\n  \"name\": \"--pf-global--disabled-color--100\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--disabled-color--100)\"\n};\nexports[\"default\"] = exports.global_disabled_color_100;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_3xl = {\n  \"name\": \"--pf-global--spacer--3xl\",\n  \"value\": \"4rem\",\n  \"var\": \"var(--pf-global--spacer--3xl)\"\n};\nexports[\"default\"] = exports.global_spacer_3xl;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_xs = {\n  \"name\": \"--pf-global--spacer--xs\",\n  \"value\": \"0.25rem\",\n  \"var\": \"var(--pf-global--spacer--xs)\"\n};\nexports[\"default\"] = exports.global_spacer_xs;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport '../Unavailable/Unavailable.css';\nvar Unavailable = function () {\n    return (_jsxs(EmptyState, __assign({ variant: EmptyStateVariant.large, className: \"ins-c-empty-state__unavailable pf-m-redhat-font\" }, { children: [_jsx(EmptyStateIcon, { icon: ExclamationCircleIcon }), _jsx(Title, __assign({ headingLevel: \"h5\", size: \"lg\" }, { children: \"This page is temporarily unavailable\" })), _jsxs(EmptyStateBody, { children: [\"Try refreshing the page. If the problem persists, contact your organization administrator or visit our\", _jsxs(\"a\", __assign({ href: \"https://status.redhat.com/\", target: \"_blank\", rel: \"noopener noreferrer\" }, { children: [' ', \"status page\"] })), ' ', \"for known outages.\"] })] })));\n};\nexport default Unavailable;\n//# sourceMappingURL=Unavailable.js.map","import './emptyValueState.scss';\nimport { MinusIcon } from '@patternfly/react-icons/dist/esm/icons/minus-icon';\nimport React from 'react';\nconst EmptyValueState = () => {\n    return (React.createElement(\"span\", { className: \"emptyValueContainer\" },\n        React.createElement(MinusIcon, null)));\n};\nexport default EmptyValueState;\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.subscription_guid) {\n        return 'subscription_guid';\n    }\n    if (groupBy.resource_location) {\n        return 'resource_location';\n    }\n    if (groupBy.service_name) {\n        return 'service_name';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    azureDetails: {\n        minHeight: '100%',\n    },\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costValue: {\n        marginTop: global_spacer_lg.var,\n        marginBottom: 0,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    dateTitle: {\n        textAlign: 'end',\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentLeft: {\n        display: 'flex',\n        minHeight: '90px',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { TagPathsType } from 'api/tags/tag';\nimport { ExportsLink } from 'components/exports';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Currency } from 'routes/components/currency';\nimport { GroupBy } from 'routes/views/components/groupBy';\nimport { filterProviders } from 'routes/views/utils/providers';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedAzureReportItems';\nimport { getSinceDateRangeString } from 'utils/dates';\nimport { formatCurrency } from 'utils/format';\nimport { styles } from './detailsHeader.styles';\nconst groupByOptions = [\n    { label: 'subscription_guid', value: 'subscription_guid' },\n    { label: 'service_name', value: 'service_name' },\n    { label: 'resource_location', value: 'resource_location' },\n];\nconst tagReportPathsType = TagPathsType.azure;\nclass DetailsHeaderBase extends React.Component {\n    render() {\n        const { currency, groupBy, isCurrencyFeatureEnabled, isExportsFeatureEnabled, onCurrencySelected, onGroupBySelected, providers, providersError, report, intl, } = this.props;\n        const showContent = report && !providersError && providers && providers.meta && providers.meta.count > 0;\n        const hasCost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.azureDetailsTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    isCurrencyFeatureEnabled && React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(\"div\", { style: styles.headerContentLeft },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: !showContent, onSelected: onGroupBySelected, options: groupByOptions, showTags: true, tagReportPathsType: tagReportPathsType })),\n                Boolean(showContent) && (React.createElement(\"div\", null,\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: TitleSizes['4xl'] }, formatCurrency(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD')),\n                    React.createElement(\"div\", { style: styles.dateTitle }, getSinceDateRangeString()))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        isCurrencyFeatureEnabled: featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state),\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        providers: filterProviders(providers, ProviderType.azure),\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n    };\n});\nconst DetailsHeader = injectIntl(connect(mapStateToProps, {})(DetailsHeaderBase));\nexport { DetailsHeader };\n","import 'routes/views/details/components/dataTable/dataTable.scss';\nimport { noPrefix } from 'api/queries/query';\nimport { ReportPathsType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { paths } from 'routes';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { Actions } from 'routes/views/details/components/actions';\nimport { DataTable } from 'routes/views/details/components/dataTable';\nimport { styles } from 'routes/views/details/components/dataTable/dataTable.styles';\nimport { getBreakdownPath } from 'routes/views/utils/paths';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getForDateRangeString, getNoDataForDateRangeString } from 'utils/dates';\nimport { formatCurrency, formatPercentage } from 'utils/format';\nimport { withRouter } from 'utils/router';\nconst reportPathsType = ReportPathsType.azure;\nclass DetailsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { groupBy, groupByTagKey, intl, isAllSelected, report, selectedItems, router } = this.props;\n            if (!report) {\n                return;\n            }\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey ? groupByTagKey : groupBy,\n            });\n            const columns = groupByTagKey\n                ? [\n                    {\n                        name: '',\n                    },\n                    {\n                        name: intl.formatMessage(messages.tagNames),\n                    },\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign({ orderBy: groupBy, name: intl.formatMessage(messages.detailsResourceNames, { value: groupBy }) }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ];\n            computedItems.map((item, index) => {\n                const cost = this.getTotalCost(item, index);\n                const label = item && item.label !== null ? item.label : '';\n                const monthOverMonth = this.getMonthOverMonthCost(item, index);\n                const isDisabled = (label === null || label === void 0 ? void 0 : label.toLowerCase()) === `${noPrefix}${groupBy}` || (label === null || label === void 0 ? void 0 : label.toLowerCase()) === `${noPrefix}${groupByTagKey}`;\n                const desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                const actions = this.getActions(item, isDisabled);\n                const name = isDisabled ? label : (React.createElement(Link, { to: getBreakdownPath({\n                        basePath: paths.azureDetailsBreakdown,\n                        label: label.toString(),\n                        description: item.id,\n                        groupBy,\n                        router,\n                    }) }, label));\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: (React.createElement(\"div\", null,\n                                name,\n                                desc)),\n                        },\n                        { value: React.createElement(\"div\", null, monthOverMonth) },\n                        { value: React.createElement(\"div\", null, cost) },\n                        { value: React.createElement(\"div\", null, actions) },\n                    ],\n                    isOpen: false,\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                    selectionDisabled: isDisabled,\n                });\n            });\n            this.setState({\n                columns,\n                rows,\n            });\n        };\n        this.getActions = (item, isDisabled) => {\n            const { groupBy, reportQueryString } = this.props;\n            return (React.createElement(Actions, { groupBy: groupBy, isDisabled: isDisabled, item: item, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getMonthOverMonthCost = (item, index) => {\n            const { intl } = this.props;\n            const value = formatCurrency(Math.abs(item.cost.total.value - item.delta_value), item.cost.total.units);\n            const percentage = item.delta_percent !== null ? formatPercentage(Math.abs(item.delta_percent)) : 0;\n            const showPercentage = !(percentage === 0 || percentage === '0.00');\n            const showValue = item.delta_percent !== null; // Workaround for https://github.com/project-koku/koku/issues/1395\n            let iconOverride;\n            if (showPercentage) {\n                iconOverride = 'iconOverride';\n                if (item.delta_percent !== null && item.delta_value < 0) {\n                    iconOverride += ' decrease';\n                }\n                if (item.delta_percent !== null && item.delta_value > 0) {\n                    iconOverride += ' increase';\n                }\n            }\n            if (!showValue) {\n                return getNoDataForDateRangeString();\n            }\n            else {\n                return (React.createElement(\"div\", { className: \"monthOverMonthOverride\" },\n                    React.createElement(\"div\", { className: iconOverride, key: `month-over-month-cost-${index}` },\n                        showPercentage ? intl.formatMessage(messages.percent, { value: percentage }) : React.createElement(EmptyValueState, null),\n                        Boolean(showPercentage && item.delta_percent !== null && item.delta_value > 0) && (React.createElement(\"span\", { className: \"fa fa-sort-up\", style: styles.infoArrow, key: `month-over-month-icon-${index}` })),\n                        Boolean(showPercentage && item.delta_percent !== null && item.delta_value < 0) && (React.createElement(\"span\", { className: \"fa fa-sort-down\", style: Object.assign(Object.assign({}, styles.infoArrow), styles.infoArrowDesc), key: `month-over-month-icon-${index}` }))),\n                    React.createElement(\"div\", { style: styles.infoDescription, key: `month-over-month-info-${index}` }, getForDateRangeString(value))));\n            }\n        };\n        this.getTotalCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.cost.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.cost.total.value, item.cost.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport || prevProps.selectedItems !== selectedItems) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { isLoading, onSelected, onSort, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, isLoading: isLoading, onSelected: onSelected, onSort: onSort, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst DetailsTable = injectIntl(withRouter(DetailsTableBase));\nexport { DetailsTable };\n","import { getQuery } from 'api/queries/azureQuery';\nimport { tagKey } from 'api/queries/query';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType, TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { isEqual } from 'utils/equal';\nconst tagReportType = TagType.tag;\nconst tagReportPathsType = TagPathsType.azure;\nexport class DetailsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { intl, tagReport } = this.props;\n            const options = [\n                {\n                    name: intl.formatMessage(messages.filterByValues, { value: 'subscription_guid' }),\n                    key: 'subscription_guid',\n                },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'service_name' }), key: 'service_name' },\n                {\n                    name: intl.formatMessage(messages.filterByValues, { value: 'resource_location' }),\n                    key: 'resource_location',\n                },\n            ];\n            if (tagReport && tagReport.data && tagReport.data.length) {\n                options.push({ name: intl.formatMessage(messages.filterByValues, { value: tagKey }), key: tagKey });\n            }\n            return options;\n        };\n    }\n    componentDidMount() {\n        const { fetchTag, tagReportFetchStatus, tagQueryString } = this.props;\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        }, () => {\n            if (tagReportFetchStatus !== FetchStatus.inProgress) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchTag, query, tagReport, tagReportFetchStatus, tagQueryString } = this.props;\n        if (!isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            }, () => {\n                if (tagReportFetchStatus !== FetchStatus.inProgress) {\n                    fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n                }\n            });\n        }\n        else if (query && !isEqual(query, prevProps.query)) {\n            if (tagReportFetchStatus !== FetchStatus.inProgress) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n        }\n    }\n    render() {\n        const { groupBy, isAllSelected, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onExportClicked, onFilterAdded, onFilterRemoved, pagination, query, selectedItems, tagReport, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, groupBy: groupBy, isAllSelected: isAllSelected, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onExportClicked: onExportClicked, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.azure, selectedItems: selectedItems, showBulkSelect: true, showExport: true, showFilter: true, tagReport: tagReport, tagReportPathsType: tagReportPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        key_only: true,\n        limit: 1000,\n    });\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, tagQueryString);\n    return {\n        tagReportFetchStatus,\n        tagReport,\n        tagQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst DetailsToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsToolbarBase);\nconst DetailsToolbar = injectIntl(DetailsToolbarConnect);\nexport { DetailsToolbar };\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getQuery, parseQuery } from 'api/queries/azureQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { noPrefix, tagPrefix } from 'api/queries/query';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoData } from 'routes/state/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { ExportModal } from 'routes/views/components/export';\nimport { getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { handleCurrencySelected, handleFilterAdded, handleFilterRemoved, handlePerPageSelect, handleSetPage, handleSort, } from 'routes/views/utils/handles';\nimport { filterProviders, hasCurrentMonthData } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedAzureReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getCurrency } from 'utils/localStorage';\nimport { withRouter } from 'utils/router';\nimport { styles } from './azureDetails.styles';\nimport { DetailsHeader } from './detailsHeader';\nimport { DetailsTable } from './detailsTable';\nimport { DetailsToolbar } from './detailsToolbar';\nconst baseQuery = {\n    delta: 'cost',\n    filter: {\n        limit: 10,\n        offset: 0,\n        resolution: 'monthly',\n        time_scope_units: 'month',\n        time_scope_value: -1,\n    },\n    exclude: {},\n    filter_by: {},\n    group_by: {\n        subscription_guid: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst reportType = ReportType.cost;\nconst reportPathsType = ReportPathsType.azure;\nclass AzureDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            isAllSelected: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey || groupById,\n            });\n        };\n        this.getExportModal = (computedItems) => {\n            const { query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                var _a, _b;\n                if (!(((_a = item.label) === null || _a === void 0 ? void 0 : _a.toLowerCase()) === `${noPrefix}${groupById}` ||\n                    ((_b = item.label) === null || _b === void 0 ? void 0 : _b.toLowerCase()) === `${noPrefix}${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getPagination = (isBottom = false) => {\n            const { intl, query, router, report } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = offset / limit + 1;\n            return (React.createElement(Pagination, { isCompact: !isBottom, itemCount: count, onPerPageSelect: (event, perPage) => handlePerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.azure),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { query, report, reportFetchStatus, reportQueryString, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return (React.createElement(DetailsTable, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, groupByTagKey: groupByTagKey, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending) => handleSort(query, router, sortType, isSortAscending), report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, router, report } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(DetailsToolbar, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isAllSelected: isAllSelected, isExportDisabled: computedItems.length === 0 || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onExportClicked: this.handleExportModalOpen, onFilterAdded: filter => handleFilterAdded(query, router, filter), onFilterRemoved: filter => handleFilterRemoved(query, router, filter), pagination: this.getPagination(), query: query, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            const groupByKey = groupBy;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: '*',\n                }, order_by: { cost: 'desc' } });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.updateReport = () => {\n            const { fetchReport, query, reportQueryString, router } = this.props;\n            if (!router.location.search) {\n                router.navigate(getRouteForQuery({\n                    exclude: query ? query.exclude : undefined,\n                    filter_by: query ? query.filter_by : undefined,\n                    group_by: query ? query.group_by : undefined,\n                    order_by: { cost: 'desc' },\n                }, router.location), {\n                    replace: true,\n                });\n            }\n            else {\n                fetchReport(reportPathsType, reportType, reportQueryString);\n            }\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { currency, intl, providers, providersFetchStatus, query, report, reportError, reportFetchStatus, router, } = this.props;\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const computedItems = this.getComputedItems();\n        const title = intl.formatMessage(messages.azureDetailsTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.inProgress) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.complete) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: ProviderType.azure, title: title });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.azureDetails },\n            React.createElement(DetailsHeader, { currency: currency, groupBy: groupById, onCurrencySelected: value => handleCurrencySelected(query, router, value), onGroupBySelected: this.handleGroupBySelected, report: report }),\n            React.createElement(\"div\", { style: styles.content },\n                this.getToolbar(computedItems),\n                this.getExportModal(computedItems),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const currency = featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state) ? getCurrency() : undefined;\n    const query = {\n        delta: 'cost',\n        filter: Object.assign(Object.assign({}, baseQuery.filter), queryFromRoute.filter),\n        filter_by: queryFromRoute.filter_by || baseQuery.filter_by,\n        exclude: queryFromRoute.exclude || baseQuery.exclude,\n        group_by: queryFromRoute.group_by || baseQuery.group_by,\n        order_by: queryFromRoute.order_by || baseQuery.order_by,\n    };\n    const reportQueryString = getQuery(Object.assign(Object.assign({}, query), { currency }));\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        currency,\n        providers: filterProviders(providers, ProviderType.azure),\n        providersError,\n        providersFetchStatus,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n        // Testing...\n        //\n        // providers: {\n        //   meta: {\n        //     count: 0,\n        //   },\n        // } as any,\n        // providersError: {\n        //   response: {\n        //     // status: 401\n        //     status: 500\n        //   }\n        // } as any,\n        // providersFetchStatus: FetchStatus.inProgress,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(AzureDetails)));\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport { tagPrefix } from 'api/queries/query';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ExportModal } from 'routes/views/components/export';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nimport { withRouter } from 'utils/router';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, reportPathsType, reportQueryString } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { count: 1, groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, intl, item: { source_uuid }, redirectToCostModel, router, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, intl.formatMessage(messages.detailsActionsExport)),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], router) }, intl.formatMessage(messages.detailsActionsPriceList)));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = injectIntl(withRouter(DetailsActionsConnect));\nexport default Actions;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    costColumn: {\n        textAlign: 'right',\n    },\n    defaultLabel: {\n        minWidth: '63px',\n    },\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    nameColumn: {\n        width: '1%',\n    },\n};\n","import { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport { parseQuery } from 'api/queries/ocpQuery';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass DataTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { intl, router } = this.props;\n            const queryFromRoute = parseQuery(router.location.search);\n            if (queryFromRoute.filter_by) {\n                for (const val of Object.values(queryFromRoute.filter_by)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, router } = this.props;\n            const orderBy = columns[index].orderBy;\n            const queryFromRoute = parseQuery(router.location.search);\n            const direction = queryFromRoute && queryFromRoute.order_by && queryFromRoute.order_by[orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected, rows } = this.props;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isLoading, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.dataTableAriaLabel), gridBreakPoint: \"grid-2xl\" },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${cellIndex}-${rowIndex}`, modifier: \"nowrap\", select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    } })) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", isActionCell: cellIndex === row.cells.length - 1 }, item.value))))))))),\n            Boolean(rows.length === 0) && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(DataTable));\n","import { getQueryRoute, platformCategoryKey } from 'api/queries/query';\nimport { breakdownDescKey, breakdownTitleKey, orgUnitIdKey } from 'api/queries/query';\nimport { parseQuery } from 'api/queries/query';\nexport const getBreakdownPath = ({ basePath, description, groupBy, isPlatformCosts, label, router, }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const newQuery = Object.assign(Object.assign(Object.assign(Object.assign({}, queryFromRoute), (description && description !== label && { [breakdownDescKey]: description })), (isPlatformCosts && { [breakdownTitleKey]: label })), { group_by: {\n            [groupBy]: isPlatformCosts ? '*' : label,\n        } });\n    if (isPlatformCosts) {\n        if (!newQuery.filter) {\n            newQuery.filter = {};\n        }\n        newQuery.filter.category = platformCategoryKey;\n    }\n    return `${basePath}?${getQueryRoute(newQuery)}`;\n};\nexport const getOrgBreakdownPath = ({ basePath, description, groupBy, groupByOrg, id, router, title, type, }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const newQuery = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, queryFromRoute), (description && description !== title && { [breakdownDescKey]: description })), (title && { [breakdownTitleKey]: title })), (groupByOrg && { [orgUnitIdKey]: groupByOrg })), { group_by: {\n            [groupBy]: id, // This may be overridden below\n        } });\n    if (type === 'account') {\n        if (!newQuery.filter) {\n            newQuery.filter = {};\n        }\n        newQuery.filter.account = id;\n        newQuery.group_by = {\n            [orgUnitIdKey]: groupByOrg,\n        };\n    }\n    else if (type === 'organizational_unit') {\n        newQuery.group_by = {\n            [orgUnitIdKey]: id,\n        };\n    }\n    return `${basePath}?${getQueryRoute(newQuery)}`;\n};\nexport const isPlatformCosts = (queryFromRoute) => {\n    return queryFromRoute && queryFromRoute.filter && queryFromRoute.filter.category === platformCategoryKey;\n};\n"],"names":["ExternalLinkAltIconConfig","name","height","width","svgPath","yOffset","xOffset","ExternalLinkAltIcon","MinusIconConfig","MinusIcon","exports","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","EmptyState","variant","EmptyStateVariant","className","children","EmptyStateIcon","icon","ExclamationCircleIcon","Title","headingLevel","size","EmptyStateBody","href","target","rel","getIdKeyForGroupBy","groupBy","subscription_guid","resource_location","service_name","styles","azureDetails","minHeight","content","paddingBottom","global_spacer_lg","paddingTop","paginationContainer","marginLeft","marginRight","pagination","backgroundColor","global_BackgroundColor_light_100","global_spacer_md","tableContainer","costValue","marginTop","marginBottom","costLabelUnit","fontSize","global_FontSize_sm","color","global_Color_100","dateTitle","textAlign","header","padding","headerContent","display","justifyContent","headerContentLeft","headerContentRight","title","global_spacer_sm","groupByOptions","label","value","tagReportPathsType","DetailsHeaderBase","render","currency","isCurrencyFeatureEnabled","isExportsFeatureEnabled","onCurrencySelected","onGroupBySelected","providers","providersError","report","intl","props","showContent","meta","count","hasCost","total","cost","style","TitleSizes","formatMessage","messages","onSelect","isDisabled","onSelected","options","showTags","Boolean","format","units","mapStateToProps","state","providersQueryString","providersFetchStatus","featureFlags","DetailsHeader","injectIntl","connect","reportPathsType","DetailsTableBase","constructor","super","columns","rows","initDatum","groupByTagKey","isAllSelected","selectedItems","router","computedItems","idKey","orderBy","isSortable","map","item","index","getTotalCost","monthOverMonth","getMonthOverMonthCost","toLowerCase","desc","id","actions","getActions","to","basePath","toString","description","push","cells","isOpen","selected","undefined","find","val","selectionDisabled","setState","reportQueryString","Math","abs","delta_value","percentage","delta_percent","showPercentage","showValue","iconOverride","key","percentValue","toFixed","componentDidMount","componentDidUpdate","prevProps","currentReport","data","JSON","stringify","isLoading","onSort","DetailsTable","tagReportType","DetailsToolbarBase","defaultState","getCategoryOptions","tagReport","fetchTag","tagReportFetchStatus","tagQueryString","categoryOptions","query","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onExportClicked","onFilterAdded","onFilterRemoved","resourcePathsType","showBulkSelect","showExport","showFilter","filter","resolution","time_scope_units","time_scope_value","key_only","limit","mapDispatchToProps","DetailsToolbarConnect","DetailsToolbar","baseQuery","delta","offset","exclude","filter_by","group_by","order_by","reportType","AzureDetails","stateProps","dispatchProps","isExportModalOpen","getComputedItems","groupById","getExportModal","items","_a","_b","isAllItems","onClose","handleExportModalClose","getPagination","isBottom","page","Pagination","isCompact","itemCount","onPerPageSelect","event","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","PaginationVariant","widgetId","getTable","reportFetchStatus","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","handleExportModalOpen","action","handleGroupBySelected","groupByKey","newQuery","parse","navigate","location","replace","isSelected","newItems","updateReport","fetchReport","search","bind","prevState","reportError","noReport","noLocation","providerType","queryFromRoute","DetailsActionsBase","isDropdownOpen","handleOnSelect","handleOnToggle","showPriceListOption","source_uuid","redirectToCostModel","DropdownItem","component","onClick","unshift","includes","Dropdown","toggle","KebabToggle","onToggle","isPlain","position","dropdownItems","costModels","DetailsActionsConnect","costColumn","defaultLabel","minWidth","emptyState","infoArrow","infoArrowDesc","bottom","infoDescription","nameColumn","DataTable","getEmptyState","values","showMargin","getSortBy","direction","getSortParams","sortBy","handleOnSort","columnIndex","rowId","newRows","row","SortByDirection","TableComposable","gridBreakPoint","Thead","Tr","col","Th","modifier","sort","Tbody","Td","colSpan","Bullseye","Spinner","rowIndex","cellIndex","dataLabel","select","disable","_event","isActionCell","getBreakdownPath","isPlatformCosts","category","getOrgBreakdownPath","groupByOrg","type","account"],"sourceRoot":""}