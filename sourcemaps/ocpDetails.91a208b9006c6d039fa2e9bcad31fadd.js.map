{"version":3,"file":"js/ocpDetails.f4d86e43bc3ac52f909d.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/external-link-alt-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_FontSize_md.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_xs.js","webpack:///./src/routes/components/icons/optimizationIcon/optimizationIcon.tsx","webpack:///./src/routes/state/noOptimizations/noOptimizationsState.tsx","webpack:///./src/routes/views/components/costDistribution/costDistribution.styles.ts","webpack:///./src/routes/views/components/costDistribution/costDistribution.tsx","webpack:///./src/routes/views/details/components/actions/actions.tsx","webpack:///./src/routes/views/details/components/columnManagement/columnManagementModal.tsx","webpack:///./src/routes/views/details/components/dataTable/dataTable.styles.ts","webpack:///./src/routes/views/details/components/dataTable/dataTable.tsx","webpack:///./src/routes/views/details/ocpDetails/detailsHeader.styles.ts","webpack:///./src/utils/computedReport/getComputedOcpReportItems.ts","webpack:///./src/routes/views/details/ocpDetails/detailsHeader.tsx","webpack:///./src/routes/views/details/ocpDetails/detailsOptimization.tsx","webpack:///./src/routes/views/details/ocpDetails/detailsTable.tsx","webpack:///./src/routes/views/details/ocpDetails/detailsToolbar.tsx","webpack:///./src/routes/views/details/ocpDetails/ocpDetails.styles.ts","webpack:///./src/routes/views/details/ocpDetails/ocpDetails.tsx"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExternalLinkAltIcon = createIcon(ExternalLinkAltIconConfig);\n\nexport default ExternalLinkAltIcon;","\"use strict\";\nexports.__esModule = true;\nexports.global_FontSize_md = {\n  \"name\": \"--pf-global--FontSize--md\",\n  \"value\": \"1rem\",\n  \"var\": \"var(--pf-global--FontSize--md)\"\n};\nexports[\"default\"] = exports.global_FontSize_md;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_xs = {\n  \"name\": \"--pf-global--spacer--xs\",\n  \"value\": \"0.25rem\",\n  \"var\": \"var(--pf-global--spacer--xs)\"\n};\nexports[\"default\"] = exports.global_spacer_xs;","import './optimizationIcon.scss';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nconst icon = require('./Red_Hat-IT_Optimization-Gray.svg');\nconst OptimizationIcon = ({ className, intl }) => {\n    return (React.createElement(\"img\", { className: `optimization-icon ${className}`, src: icon, alt: intl.formatMessage(messages.optimizations), \"aria-hidden\": \"true\" }));\n};\nexport default injectIntl(OptimizationIcon);\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { OptimizationIcon } from 'routes/components/icons/optimizationIcon';\nclass NoOptimizationsStateBase extends React.Component {\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: OptimizationIcon }),\n            React.createElement(Title, { headingLevel: \"h1\", size: \"lg\" }, intl.formatMessage(messages.noOptimizationsTitle)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(messages.noOptimizationsDesc))));\n    }\n}\nconst NoOptimizationsState = injectIntl(NoOptimizationsStateBase);\nexport { NoOptimizationsState };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    selector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    label: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n        whiteSpace: 'nowrap',\n    },\n};\n","import './costDistribution.scss';\nimport { Select, SelectOption, SelectVariant, Title } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ComputedReportItemValueType } from 'routes/views/components/charts/common';\nimport { createMapStateToProps } from 'store/common';\nimport { invalidateSession, setCostDistribution } from 'utils/localStorage';\nimport { styles } from './costDistribution.styles';\nconst costDistributionOptions = [\n    { label: messages.costDistributionType, value: ComputedReportItemValueType.distributed },\n    { label: messages.costDistributionType, value: ComputedReportItemValueType.total },\n];\nclass CostDistributionBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isSelectOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getSelect = () => {\n            const { costDistribution, isDisabled } = this.props;\n            const { isSelectOpen } = this.state;\n            const selectOptions = this.getSelectOptions();\n            const selection = selectOptions.find((option) => option.value === costDistribution);\n            return (React.createElement(Select, { className: \"selectOverride\", id: \"costDistributionSelect\", isDisabled: isDisabled, isOpen: isSelectOpen, onSelect: this.handleSelect, onToggle: this.handleToggle, selections: selection, variant: SelectVariant.single }, selectOptions.map(option => (React.createElement(SelectOption, { description: option.desc, key: option.value, value: option })))));\n        };\n        this.getSelectOptions = () => {\n            const { intl } = this.props;\n            const options = [];\n            costDistributionOptions.map(option => {\n                options.push({\n                    toString: () => intl.formatMessage(option.label, { value: option.value }),\n                    value: option.value,\n                });\n            });\n            return options;\n        };\n        this.handleSelect = (event, selection) => {\n            const { onSelect } = this.props;\n            setCostDistribution(selection.value); // Set cost distribution in local storage\n            this.setState({\n                isSelectOpen: false,\n            }, () => {\n                if (onSelect) {\n                    onSelect(selection.value);\n                }\n            });\n        };\n        this.handleToggle = isSelectOpen => {\n            this.setState({ isSelectOpen });\n        };\n    }\n    render() {\n        const { intl } = this.props;\n        // Clear local storage value if current session is not valid\n        invalidateSession();\n        return (React.createElement(\"div\", { style: styles.selector },\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\", style: styles.label }, intl.formatMessage(messages.costDistributionLabel)),\n            this.getSelect()));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst CostDistributionConnect = connect(mapStateToProps, mapDispatchToProps)(CostDistributionBase);\nconst CostDistribution = injectIntl(CostDistributionConnect);\nexport default CostDistribution;\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ExportModal } from 'routes/views/components/export';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nimport { tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, reportPathsType, reportQueryString } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { count: 1, groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, intl, item: { source_uuid }, redirectToCostModel, router, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, intl.formatMessage(messages.detailsActionsExport)),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], router) }, intl.formatMessage(messages.detailsActionsPriceList)));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = injectIntl(withRouter(DetailsActionsConnect));\nexport default Actions;\n","import { Button, ButtonVariant, DataList, DataListCell, DataListCheck, DataListItem, DataListItemCells, DataListItemRow, Modal, ModalVariant, Text, TextContent, TextVariants, } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nexport const initHiddenColumns = (options) => {\n    const hiddenColumns = new Set();\n    options.map(option => {\n        if (option.hidden) {\n            hiddenColumns.add(option.value);\n        }\n    });\n    return hiddenColumns;\n};\nexport class ColumnManagementModalBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            hiddenColumns: initHiddenColumns(this.props.options),\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getHidden = (value) => {\n            const { hiddenColumns } = this.state;\n            const result = new Set(hiddenColumns);\n            if (!result.delete(value)) {\n                result.add(value);\n            }\n            return result;\n        };\n        this.isHidden = (value) => {\n            const { hiddenColumns } = this.state;\n            return hiddenColumns.has(value);\n        };\n        this.handleChange = (checked, event) => {\n            const hiddenColumns = this.getHidden(event.target.id);\n            this.setState({ hiddenColumns });\n        };\n        this.handleClose = () => {\n            // Reset defult state upon close\n            this.setState(Object.assign({}, this.defaultState), () => {\n                this.props.onClose(false);\n            });\n        };\n        this.handleSave = () => {\n            const { hiddenColumns } = this.state;\n            this.props.onSave(hiddenColumns);\n            this.handleClose();\n        };\n        this.selectAll = () => {\n            this.setState({ hiddenColumns: new Set() });\n        };\n    }\n    componentDidUpdate(prevProps) {\n        const { options } = this.props;\n        if (prevProps.options !== options) {\n            const hiddenColumns = initHiddenColumns(options);\n            this.setState({ hiddenColumns });\n        }\n    }\n    render() {\n        const { options, intl } = this.props;\n        return (React.createElement(Modal, { description: React.createElement(TextContent, null,\n                React.createElement(Text, { component: TextVariants.p }, intl.formatMessage(messages.manageColumnsDesc)),\n                React.createElement(Button, { isInline: true, onClick: this.selectAll, variant: \"link\" }, intl.formatMessage(messages.selectAll))), \n            // style={styles.modal}\n            isOpen: this.props.isOpen, onClose: this.handleClose, title: intl.formatMessage(messages.manageColumnsTitle), variant: ModalVariant.medium, actions: [\n                React.createElement(Button, { key: \"save\", onClick: this.handleSave, variant: ButtonVariant.link }, intl.formatMessage(messages.save)),\n                React.createElement(Button, { key: \"cancel\", onClick: this.handleClose, variant: ButtonVariant.link }, intl.formatMessage(messages.cancel)),\n            ] },\n            React.createElement(DataList, { \"aria-label\": intl.formatMessage(messages.manageColumnsAriaLabel), id: \"table-column-management\", isCompact: true }, options.map(option => (React.createElement(DataListItem, { \"aria-labelledby\": option.value, key: option.value },\n                React.createElement(DataListItemRow, null,\n                    React.createElement(DataListCheck, { \"aria-labelledby\": `${option.value}Label`, isChecked: !this.isHidden(option.value), name: option.value, id: option.value, onChange: this.handleChange }),\n                    React.createElement(DataListItemCells, { dataListCells: [\n                            React.createElement(DataListCell, { id: `${option.value}Label`, key: \"table-column-management-item1\" },\n                                React.createElement(\"span\", null, intl.formatMessage(option.label))),\n                            React.createElement(DataListCell, { key: \"table-column-management-item2\" }, option.description && React.createElement(\"span\", null, intl.formatMessage(option.description))),\n                        ] }))))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {};\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst ColumnManagementModalConnect = connect(mapStateToProps, mapDispatchToProps)(ColumnManagementModalBase);\nconst ColumnManagementModal = injectIntl(ColumnManagementModalConnect);\nexport default ColumnManagementModal;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    costColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingRight: 0,\n    },\n    defaultLabel: {\n        minWidth: '63px',\n    },\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    lastReported: {\n        textAlign: 'right',\n        paddingRight: '40px',\n    },\n    lastReportedColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    managedColumn: {\n        textAlign: 'right',\n    },\n    nameColumn: {\n        width: '1%',\n    },\n};\n","import './dataTable.scss';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport { parseQuery } from 'api/queries/ocpQuery';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { NoOptimizationsState } from 'routes/state/noOptimizations/noOptimizationsState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass DataTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { intl, isOptimizations, router } = this.props;\n            const queryFromRoute = parseQuery(router.location.search);\n            if (queryFromRoute.filter_by) {\n                for (const val of Object.values(queryFromRoute.filter_by)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            if (isOptimizations) {\n                return React.createElement(NoOptimizationsState, null);\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, router } = this.props;\n            const orderBy = columns[index].orderBy;\n            const queryFromRoute = parseQuery(router.location.search);\n            const direction = queryFromRoute && queryFromRoute.order_by && queryFromRoute.order_by[orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected, rows } = this.props;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnRowClick = (event, rowIndex) => {\n            const { onRowClick, rows } = this.props;\n            rows.map(row => (row.selected = false));\n            rows[rowIndex].selected = true;\n            this.setState({ rows }, () => {\n                if (onRowClick) {\n                    onRowClick(event, rowIndex);\n                }\n            });\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isLoading, isOptimizations, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.dataTableAriaLabel), className: \"tableOverride\", gridBreakPoint: \"grid-2xl\", hasSelectableRowCaption: isOptimizations },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { isSelectable: isOptimizations, isHoverable: isOptimizations, isRowSelected: isOptimizations && row.selected, onRowClick: isOptimizations ? _event => this.handleOnRowClick(_event, rowIndex) : undefined, key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 && !isOptimizations ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${cellIndex}-${rowIndex}`, modifier: \"nowrap\", select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    }, style: item.style })) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", isActionCell: !isOptimizations && cellIndex === row.cells.length - 1, style: item.style }, item.value))))))))),\n            rows.length === 0 && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(DataTable));\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costDistribution: {\n        display: 'flex',\n        marginLeft: global_spacer_lg.var,\n    },\n    costValue: {\n        marginTop: global_spacer_lg.var,\n        marginBottom: 0,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    dateTitle: {\n        textAlign: 'end',\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentLeft: {\n        display: 'flex',\n        minHeight: '90px',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    info: {\n        verticalAlign: 'middle',\n    },\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    return 'date';\n}\n","import { Title, TitleSizes, Tooltip } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { TagPathsType } from 'api/tags/tag';\nimport { ExportsLink } from 'components/drawers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Currency } from 'routes/components/currency';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { ComputedReportItemValueType } from 'routes/views/components/charts/common';\nimport { CostDistribution } from 'routes/views/components/costDistribution';\nimport { GroupBy } from 'routes/views/components/groupBy';\nimport { filterProviders } from 'routes/views/utils/providers';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedOcpReportItems';\nimport { getSinceDateRangeString } from 'utils/dates';\nimport { formatCurrency } from 'utils/format';\nimport { styles } from './detailsHeader.styles';\nconst groupByOptions = [\n    { label: 'cluster', value: 'cluster' },\n    { label: 'node', value: 'node' },\n    { label: 'project', value: 'project' },\n];\nconst tagPathsType = TagPathsType.ocp;\nclass DetailsHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { costDistribution, currency, groupBy, isCostDistributionFeatureEnabled, isExportsFeatureEnabled, onCostDistributionSelected, onCurrencySelected, onGroupBySelected, providers, providersError, report, intl, } = this.props;\n        const showContent = report && !providersError && providers && providers.meta && providers.meta.count > 0;\n        const showCostDistribution = groupBy === 'project' && report && report.meta && report.meta.distributed_overhead === true;\n        let cost = React.createElement(EmptyValueState, null);\n        let supplementaryCost = React.createElement(EmptyValueState, null);\n        let infrastructureCost = React.createElement(EmptyValueState, null);\n        const reportItemValue = costDistribution ? costDistribution : ComputedReportItemValueType.total;\n        if (report && report.meta && report.meta.total) {\n            const hasCost = report.meta.total.cost && report.meta.total.cost[reportItemValue];\n            const hasSupplementaryCost = report.meta.total.supplementary && report.meta.total.supplementary.total;\n            const hasInfrastructureCost = report.meta.total.infrastructure && report.meta.total.infrastructure.total;\n            cost = formatCurrency(hasCost ? report.meta.total.cost[reportItemValue].value : 0, hasCost ? report.meta.total.cost[reportItemValue].units : 'USD');\n            supplementaryCost = formatCurrency(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost ? report.meta.total.supplementary.total.units : 'USD');\n            infrastructureCost = formatCurrency(hasInfrastructureCost ? report.meta.total.infrastructure.total.value : 0, hasInfrastructureCost ? report.meta.total.infrastructure.total.units : 'USD');\n        }\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.ocpDetailsTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(\"div\", { style: styles.headerContentLeft },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: !showContent, onSelected: onGroupBySelected, options: groupByOptions, showTags: true, tagPathsType: tagPathsType }),\n                    showCostDistribution && isCostDistributionFeatureEnabled && (React.createElement(\"div\", { style: styles.costDistribution },\n                        React.createElement(CostDistribution, { costDistribution: costDistribution, onSelect: onCostDistributionSelected })))),\n                showContent && (React.createElement(\"div\", null,\n                    React.createElement(Tooltip, { content: intl.formatMessage(messages.dashboardTotalCostTooltip, {\n                            infrastructureCost,\n                            supplementaryCost,\n                        }), enableFlip: true },\n                        React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: TitleSizes['4xl'] }, cost)),\n                    React.createElement(\"div\", { style: styles.dateTitle }, getSinceDateRangeString()))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        isCostDistributionFeatureEnabled: featureFlagsSelectors.selectIsCostDistributionFeatureEnabled(state),\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        providers: filterProviders(providers, ProviderType.ocp),\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n    };\n});\nconst DetailsHeader = injectIntl(connect(mapStateToProps, {})(DetailsHeaderBase));\nexport { DetailsHeader };\n","import { getQuery } from 'api/queries/query';\nimport { RosPathsType, RosType } from 'api/ros/ros';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { getBreakdownPath } from 'routes/views/utils/paths';\nimport { createMapStateToProps } from 'store/common';\nimport { rosActions, rosSelectors } from 'store/ros';\nimport { formatPath } from 'utils/paths';\nimport { withRouter } from 'utils/router';\nconst reportPathsType = RosPathsType.recommendations;\nconst reportType = RosType.ros;\nclass DetailsOptimization extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n        // TBD...\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.updateReport = () => {\n            const { fetchReport, reportQueryString } = this.props;\n            fetchReport(reportPathsType, reportType, reportQueryString);\n        };\n        this.getBreakdownLink = count => {\n            const { project, router } = this.props;\n            if (count === 0 || project === undefined) {\n                return count;\n            }\n            return (React.createElement(Link, { to: getBreakdownPath({\n                    basePath: formatPath(routes.ocpDetailsBreakdown.path),\n                    groupBy: 'project',\n                    id: project,\n                    isOptimizationsTab: true,\n                    router,\n                    title: project,\n                }) }, count));\n        };\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    render() {\n        const { report } = this.props;\n        const count = report && report.meta ? report.meta.count : 0;\n        // Todo: Add link to breakdown page\n        return React.createElement(\"span\", null, this.getBreakdownLink(count));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { project }) => {\n    const reportQuery = {\n        project, // project filter\n    };\n    const reportQueryString = getQuery(reportQuery);\n    const report = rosSelectors.selectRos(state, reportPathsType, reportType, reportQueryString);\n    const reportError = rosSelectors.selectRosError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = rosSelectors.selectRosFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    return {\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: rosActions.fetchRosReport,\n};\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(DetailsOptimization));\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport 'routes/views/details/components/dataTable/dataTable.scss';\nimport { Label, Tooltip } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { ReportPathsType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { ComputedReportItemValueType } from 'routes/views/components/charts/common';\nimport { Actions } from 'routes/views/details/components/actions';\nimport { DataTable } from 'routes/views/details/components/dataTable';\nimport { styles } from 'routes/views/details/components/dataTable/dataTable.styles';\nimport { getBreakdownPath } from 'routes/views/utils/paths';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getForDateRangeString, getNoDataForDateRangeString } from 'utils/dates';\nimport { formatCurrency, formatPercentage } from 'utils/format';\nimport { formatPath } from 'utils/paths';\nimport { classificationDefault, classificationPlatform, classificationUnallocated, noPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport DetailsOptimization from './detailsOptimization';\nexport const DetailsTableColumnIds = {\n    infrastructure: 'infrastructure',\n    monthOverMonth: 'monthOverMonth',\n    supplementary: 'supplementary',\n};\nconst reportPathsType = ReportPathsType.ocp;\nclass DetailsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { costDistribution, groupBy, groupByTagKey, hiddenColumns, intl, isAllSelected, isRosFeatureEnabled, report, router, selectedItems, } = this.props;\n            if (!report) {\n                return;\n            }\n            const isGroupByProject = groupBy === 'project';\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: (groupByTagKey ? groupByTagKey : groupBy),\n            });\n            const columns = groupByTagKey\n                ? [\n                    // Sorting with tag keys is not supported\n                    {\n                        name: '',\n                    },\n                    {\n                        name: intl.formatMessage(messages.tagNames),\n                        style: groupBy === 'project' ? styles.nameColumn : undefined,\n                    },\n                    {\n                        hidden: !isGroupByProject,\n                        name: '', // Default & Overhead column\n                    },\n                    {\n                        hidden: !(isGroupByProject && isRosFeatureEnabled),\n                        name: intl.formatMessage(messages.optimizations),\n                    },\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    {\n                        id: DetailsTableColumnIds.infrastructure,\n                        name: intl.formatMessage(messages.ocpDetailsInfrastructureCost),\n                        style: styles.managedColumn,\n                    },\n                    {\n                        id: DetailsTableColumnIds.supplementary,\n                        name: intl.formatMessage(messages.ocpDetailsSupplementaryCost),\n                        style: styles.managedColumn,\n                    },\n                    Object.assign({ orderBy: costDistribution === ComputedReportItemValueType.distributed ? 'distributed_cost' : 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: false })),\n                    {\n                        name: '',\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign(Object.assign({ orderBy: groupBy, name: intl.formatMessage(messages.detailsResourceNames, { value: groupBy }) }, (computedItems.length && { isSortable: true })), { style: groupBy === 'project' ? styles.nameColumn : undefined }),\n                    {\n                        hidden: !isGroupByProject,\n                        name: '', // Default & Overhead column\n                    },\n                    {\n                        hidden: !(isGroupByProject && isRosFeatureEnabled),\n                        name: intl.formatMessage(messages.optimizations),\n                    },\n                    {\n                        id: DetailsTableColumnIds.monthOverMonth,\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    {\n                        id: DetailsTableColumnIds.infrastructure,\n                        orderBy: 'infrastructure_cost',\n                        name: intl.formatMessage(messages.ocpDetailsInfrastructureCost),\n                        style: styles.managedColumn,\n                        // Sort by infrastructure_cost is not supported -- https://github.com/project-koku/koku/issues/796\n                        // ...(computedItems.length && { isSortable: true }),\n                    },\n                    {\n                        id: DetailsTableColumnIds.supplementary,\n                        orderBy: 'supplementary_cost',\n                        name: intl.formatMessage(messages.ocpDetailsSupplementaryCost),\n                        style: styles.managedColumn,\n                        // Sort by supplementary_cost is not supported -- https://github.com/project-koku/koku/issues/796\n                        // ...(computedItems.length && { isSortable: true }),\n                    },\n                    Object.assign({ orderBy: costDistribution === ComputedReportItemValueType.distributed ? 'distributed_cost' : 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ];\n            computedItems.map((item, index) => {\n                const cost = this.getTotalCost(item, index);\n                const label = item && item.label !== null ? item.label : '';\n                const monthOverMonth = this.getMonthOverMonthCost(item, index);\n                const supplementaryCost = this.getSupplementaryCost(item, index);\n                const InfrastructureCost = this.getInfrastructureCost(item, index);\n                const isOverheadCosts = costDistribution === ComputedReportItemValueType.distributed &&\n                    ((item.cost.platformDistributed && item.cost.platformDistributed.value > 0) ||\n                        (item.cost.workerUnallocatedDistributed && item.cost.workerUnallocatedDistributed.value > 0));\n                const isPlatformCosts = item.classification === classificationPlatform;\n                const isUnallocatedCosts = item.classification === classificationUnallocated;\n                const desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                const isDisabled = label === `${noPrefix}${groupBy}` || label === `${noPrefix}${groupByTagKey}` || isUnallocatedCosts;\n                const actions = this.getActions(item, isDisabled);\n                const name = isDisabled ? label : (React.createElement(Link, { to: getBreakdownPath({\n                        basePath: formatPath(routes.ocpDetailsBreakdown.path),\n                        description: item.id,\n                        id: item.id,\n                        isPlatformCosts,\n                        groupBy,\n                        router,\n                        title: label.toString(),\n                    }) }, label));\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: (React.createElement(React.Fragment, null,\n                                React.createElement(\"div\", null, name),\n                                React.createElement(\"div\", { style: styles.infoDescription }, desc))),\n                        },\n                        {\n                            hidden: !isGroupByProject,\n                            value: item.classification === classificationDefault ? (React.createElement(\"div\", null,\n                                React.createElement(Label, { variant: \"outline\", color: \"green\" }, intl.formatMessage(messages.default)))) : isOverheadCosts ? (React.createElement(Tooltip, { content: intl.formatMessage(messages.overheadDesc), enableFlip: true },\n                                React.createElement(Label, { variant: \"outline\", color: \"orange\" }, intl.formatMessage(messages.overhead)))) : (React.createElement(\"div\", { style: styles.defaultLabel })),\n                        },\n                        {\n                            hidden: !(isGroupByProject && isRosFeatureEnabled),\n                            value: !isPlatformCosts && !isDisabled && (React.createElement(\"div\", null,\n                                React.createElement(DetailsOptimization, { project: label }))),\n                        },\n                        { value: React.createElement(\"div\", null, monthOverMonth), id: DetailsTableColumnIds.monthOverMonth },\n                        {\n                            value: React.createElement(\"div\", null, InfrastructureCost),\n                            id: DetailsTableColumnIds.infrastructure,\n                            style: styles.managedColumn,\n                        },\n                        {\n                            value: React.createElement(\"div\", null, supplementaryCost),\n                            id: DetailsTableColumnIds.supplementary,\n                            style: styles.managedColumn,\n                        },\n                        { value: React.createElement(\"div\", null, cost), style: styles.managedColumn },\n                        { value: React.createElement(\"div\", null, actions) },\n                    ],\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                    selectionDisabled: isDisabled,\n                });\n            });\n            const filteredColumns = columns.filter(column => !hiddenColumns.has(column.id) && !column.hidden);\n            const filteredRows = rows.map((_a) => {\n                var row = __rest(_a, []);\n                row.cells = row.cells.filter(cell => !hiddenColumns.has(cell.id) && !cell.hidden);\n                return row;\n            });\n            this.setState({\n                columns: filteredColumns,\n                rows: filteredRows,\n            });\n        };\n        this.getActions = (item, isDisabled) => {\n            const { groupBy, reportQueryString } = this.props;\n            return (React.createElement(Actions, { groupBy: groupBy, isDisabled: isDisabled, item: item, providerType: ProviderType.ocp, reportPathsType: reportPathsType, reportQueryString: reportQueryString, showPriceListOption: groupBy === 'cluster' }));\n        };\n        this.getSupplementaryCost = (item, index) => {\n            const { costDistribution, report, intl } = this.props;\n            const reportItemValue = costDistribution ? costDistribution : ComputedReportItemValueType.total;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost[reportItemValue]\n                ? report.meta.total.cost[reportItemValue].value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.supplementary.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.supplementary.total.value, item.supplementary.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n        this.getInfrastructureCost = (item, index) => {\n            const { costDistribution, report, intl } = this.props;\n            const reportItemValue = costDistribution ? costDistribution : ComputedReportItemValueType.total;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost[reportItemValue]\n                ? report.meta.total.cost[reportItemValue].value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.infrastructure.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.infrastructure.total.value, item.infrastructure.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n        this.getMonthOverMonthCost = (item, index) => {\n            const { costDistribution, intl } = this.props;\n            const reportItemValue = costDistribution ? costDistribution : ComputedReportItemValueType.total;\n            const value = formatCurrency(Math.abs(item.cost[reportItemValue].value - item.delta_value), item.cost[reportItemValue].units);\n            const percentage = item.delta_percent !== null ? formatPercentage(Math.abs(item.delta_percent)) : 0;\n            const showPercentage = !(percentage === 0 || percentage === '0.00');\n            const showValue = item.delta_percent !== null; // Workaround for https://github.com/project-koku/koku/issues/1395\n            let iconOverride;\n            if (showPercentage) {\n                iconOverride = 'iconOverride';\n                if (item.delta_percent !== null && item.delta_value < 0) {\n                    iconOverride += ' decrease';\n                }\n                if (item.delta_percent !== null && item.delta_value > 0) {\n                    iconOverride += ' increase';\n                }\n            }\n            if (!showValue) {\n                return getNoDataForDateRangeString();\n            }\n            else {\n                return (React.createElement(\"div\", { className: \"monthOverMonthOverride\" },\n                    React.createElement(\"div\", { className: iconOverride, key: `month-over-month-cost-${index}` },\n                        showPercentage ? intl.formatMessage(messages.percent, { value: percentage }) : React.createElement(EmptyValueState, null),\n                        showPercentage && item.delta_percent !== null && item.delta_value > 0 && (React.createElement(\"span\", { className: \"fa fa-sort-up\", style: styles.infoArrow, key: `month-over-month-icon-${index}` })),\n                        showPercentage && item.delta_percent !== null && item.delta_value < 0 && (React.createElement(\"span\", { className: \"fa fa-sort-down\", style: Object.assign(Object.assign({}, styles.ininfoArrow), styles.infoArrowDesc), key: `month-over-month-icon-${index}` }))),\n                    React.createElement(\"div\", { style: styles.infoDescription, key: `month-over-month-info-${index}` }, getForDateRangeString(value))));\n            }\n        };\n        this.getTotalCost = (item, index) => {\n            const { costDistribution, report, intl } = this.props;\n            const reportItemValue = costDistribution ? costDistribution : ComputedReportItemValueType.total;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost[reportItemValue]\n                ? report.meta.total.cost[reportItemValue].value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.cost[reportItemValue].value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.cost[reportItemValue].value, item.cost[reportItemValue].units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { costDistribution, hiddenColumns, report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport ||\n            prevProps.costDistribution !== costDistribution ||\n            prevProps.selectedItems !== selectedItems ||\n            prevProps.hiddenColumns !== hiddenColumns) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { isLoading, onSelected, onSort, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, isLoading: isLoading, onSelected: onSelected, onSort: onSort, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst DetailsTable = injectIntl(withRouter(DetailsTableBase));\nexport { DetailsTable };\n","import { getQuery } from 'api/queries/ocpQuery';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType, TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { isEqual } from 'utils/equal';\nimport { tagKey } from 'utils/props';\nconst tagType = TagType.tag;\nconst tagPathsType = TagPathsType.ocp;\nexport class DetailsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { intl, tagReport } = this.props;\n            const options = [\n                { name: intl.formatMessage(messages.filterByValues, { value: 'cluster' }), key: 'cluster' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'node' }), key: 'node' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'project' }), key: 'project' },\n            ];\n            if (tagReport && tagReport.data && tagReport.data.length) {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: tagKey }),\n                    key: tagKey,\n                });\n            }\n            return options;\n        };\n        this.updateReport = () => {\n            const { fetchTag, tagQueryString } = this.props;\n            fetchTag(tagPathsType, tagType, tagQueryString);\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        }, () => {\n            this.updateReport();\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { query, tagReport } = this.props;\n        if (!isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            }, () => {\n                this.updateReport();\n            });\n        }\n        else if (query && !isEqual(query, prevProps.query)) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { groupBy, isAllSelected, isDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onColumnManagementClicked, onExportClicked, onFilterAdded, onFilterRemoved, onPlatformCostsChanged, pagination, query, selectedItems, tagReport, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, groupBy: groupBy, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onColumnManagementClicked: onColumnManagementClicked, onExportClicked: onExportClicked, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, onPlatformCostsChanged: onPlatformCostsChanged, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.ocp, selectedItems: selectedItems, showBulkSelect: true, showColumnManagement: true, showExcludes: true, showExport: true, showFilter: true, showPlatformCosts: groupBy === 'project', tagReport: tagReport, tagPathsType: tagPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        key_only: true,\n        limit: 1000,\n    });\n    const tagReport = tagSelectors.selectTag(state, tagPathsType, tagType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagPathsType, tagType, tagQueryString);\n    return {\n        tagReport,\n        tagReportFetchStatus,\n        tagQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst DetailsToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsToolbarBase);\nconst DetailsToolbar = injectIntl(DetailsToolbarConnect);\nexport { DetailsToolbar };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    ocpDetails: {\n        minHeight: '100vh',\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    toolbarContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getQuery, parseQuery } from 'api/queries/ocpQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport { cloneDeep } from 'lodash';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoData } from 'routes/state/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { ComputedReportItemValueType } from 'routes/views/components/charts/common';\nimport { ExportModal } from 'routes/views/components/export';\nimport { ColumnManagementModal, initHiddenColumns } from 'routes/views/details/components/columnManagement';\nimport { getGroupById, getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { handleCostDistributionSelected, handleCurrencySelected, handleFilterAdded, handleFilterRemoved, handlePerPageSelect, handleSetPage, handleSort, } from 'routes/views/utils/handles';\nimport { filterProviders, hasCurrentMonthData } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedOcpReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getCostDistribution, getCurrency } from 'utils/localStorage';\nimport { noPrefix, platformCategoryKey, tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { DetailsHeader } from './detailsHeader';\nimport { DetailsTable, DetailsTableColumnIds } from './detailsTable';\nimport { DetailsToolbar } from './detailsToolbar';\nimport { styles } from './ocpDetails.styles';\nconst baseQuery = {\n    filter: {\n        limit: 10,\n        offset: 0,\n    },\n    filter_by: {},\n    exclude: {},\n    group_by: {\n        project: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst defaultColumnOptions = [\n    { label: messages.monthOverMonthChange, value: DetailsTableColumnIds.monthOverMonth },\n    {\n        description: messages.ocpDetailsInfrastructureCostDesc,\n        label: messages.ocpDetailsInfrastructureCost,\n        value: DetailsTableColumnIds.infrastructure,\n        hidden: true,\n    },\n    {\n        description: messages.ocpDetailsSupplementaryCostDesc,\n        label: messages.ocpDetailsSupplementaryCost,\n        value: DetailsTableColumnIds.supplementary,\n        hidden: true,\n    },\n];\nconst reportType = ReportType.cost;\nconst reportPathsType = ReportPathsType.ocp;\nclass OcpDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            hiddenColumns: initHiddenColumns(defaultColumnOptions),\n            isAllSelected: false,\n            isColumnManagementModalOpen: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getColumnManagementModal = () => {\n            const { hiddenColumns, isColumnManagementModalOpen } = this.state;\n            const options = cloneDeep(defaultColumnOptions);\n            options.map(option => {\n                option.hidden = hiddenColumns.has(option.value);\n            });\n            return (React.createElement(ColumnManagementModal, { isOpen: isColumnManagementModalOpen, options: options, onClose: this.handleColumnManagementModalClose, onSave: this.handleColumnManagementModalSave }));\n        };\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey || groupById,\n            });\n        };\n        this.getExportModal = (computedItems) => {\n            const { query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `${noPrefix}${groupById}` || item.label === `${noPrefix}${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, report, router } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = Math.trunc(offset / limit + 1);\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handlePerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.openShift),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { costDistribution, isRosFeatureEnabled, query, report, reportFetchStatus, reportQueryString, router } = this.props;\n            const { hiddenColumns, isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return (React.createElement(DetailsTable, { costDistribution: costDistribution, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, groupByTagKey: groupByTagKey, hiddenColumns: hiddenColumns, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, isRosFeatureEnabled: isRosFeatureEnabled, onSelected: this.handleSelected, onSort: (sortType, isSortAscending) => handleSort(query, router, sortType, isSortAscending), report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, report, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(DetailsToolbar, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isDisabled || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onColumnManagementClicked: this.handleColumnManagementModalOpen, onExportClicked: this.handleExportModalOpen, onFilterAdded: filter => handleFilterAdded(query, router, filter), onFilterRemoved: filter => handleFilterRemoved(query, router, filter), onPlatformCostsChanged: this.handlePlatformCostsChanged, pagination: this.getPagination(isDisabled), query: query, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleColumnManagementModalClose = (isOpen) => {\n            this.setState({ isColumnManagementModalOpen: isOpen });\n        };\n        this.handleColumnManagementModalOpen = () => {\n            this.setState({ isColumnManagementModalOpen: true });\n        };\n        this.handleColumnManagementModalSave = (hiddenColumns) => {\n            this.setState({ hiddenColumns });\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            const groupByKey = groupBy;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: '*',\n                }, order_by: { cost: 'desc' }, category: undefined, delta: undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handlePlatformCostsChanged = (checked) => {\n            const { query, router } = this.props;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { category: checked ? platformCategoryKey : undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.updateReport = () => {\n            const { fetchReport, reportQueryString } = this.props;\n            fetchReport(reportPathsType, reportType, reportQueryString);\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleColumnManagementModalClose = this.handleColumnManagementModalClose.bind(this);\n        this.handleColumnManagementModalOpen = this.handleColumnManagementModalOpen.bind(this);\n        this.handleColumnManagementModalSave = this.handleColumnManagementModalSave.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handlePlatformCostsChanged = this.handlePlatformCostsChanged.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { costDistribution, currency, intl, providers, providersFetchStatus, query, report, reportError, reportFetchStatus, router, } = this.props;\n        const computedItems = this.getComputedItems();\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const isDisabled = computedItems.length === 0;\n        const title = intl.formatMessage(messages.ocpDetailsTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.inProgress) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.complete) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: ProviderType.ocp, title: title });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.ocpDetails },\n            React.createElement(DetailsHeader, { costDistribution: costDistribution, currency: currency, groupBy: groupById, onCostDistributionSelected: value => handleCostDistributionSelected(query, router, value), onCurrencySelected: value => handleCurrencySelected(query, router, value), onGroupBySelected: this.handleGroupBySelected, report: report }),\n            React.createElement(\"div\", { style: styles.content },\n                React.createElement(\"div\", { style: styles.toolbarContainer }, this.getToolbar(computedItems)),\n                this.getExportModal(computedItems),\n                this.getColumnManagementModal(),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const groupBy = queryFromRoute.group_by ? getGroupById(queryFromRoute) : getGroupById(baseQuery);\n    const isCostDistributionFeatureEnabled = featureFlagsSelectors.selectIsCostDistributionFeatureEnabled(state);\n    const costDistribution = groupBy === 'project' && isCostDistributionFeatureEnabled ? getCostDistribution() : undefined;\n    const currency = getCurrency();\n    const query = Object.assign(Object.assign(Object.assign({}, baseQuery), (costDistribution === ComputedReportItemValueType.distributed && {\n        order_by: {\n            distributed_cost: 'desc',\n        },\n    })), queryFromRoute);\n    const reportQuery = {\n        category: query.category,\n        currency,\n        delta: costDistribution === ComputedReportItemValueType.distributed ? 'distributed_cost' : 'cost',\n        exclude: query.exclude,\n        filter: Object.assign(Object.assign({}, query.filter), { resolution: 'monthly', time_scope_units: 'month', time_scope_value: -1 }),\n        filter_by: query.filter_by,\n        group_by: query.group_by,\n        order_by: query.order_by,\n    };\n    const reportQueryString = getQuery(reportQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        costDistribution,\n        currency,\n        isRosFeatureEnabled: featureFlagsSelectors.selectIsRosFeatureEnabled(state),\n        providers: filterProviders(providers, ProviderType.ocp),\n        providersFetchStatus,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(OcpDetails)));\n"],"names":["ExternalLinkAltIconConfig","name","height","width","svgPath","yOffset","xOffset","ExternalLinkAltIcon","exports","icon","injectIntl","className","intl","src","alt","formatMessage","messages","NoOptimizationsStateBase","render","this","props","EmptyState","variant","EmptyStateVariant","EmptyStateIcon","Title","headingLevel","size","EmptyStateBody","NoOptimizationsState","styles","selector","display","alignItems","label","marginBottom","marginRight","whiteSpace","costDistributionOptions","value","CostDistributionBase","constructor","super","arguments","defaultState","isSelectOpen","state","Object","assign","getSelect","costDistribution","isDisabled","selectOptions","getSelectOptions","selection","find","option","Select","id","isOpen","onSelect","handleSelect","onToggle","handleToggle","selections","SelectVariant","map","SelectOption","description","desc","key","options","push","toString","event","setState","style","mapStateToProps","CostDistributionConnect","connect","DetailsActionsBase","stateProps","dispatchProps","isDropdownOpen","isExportModalOpen","getExportModal","groupBy","item","reportPathsType","reportQueryString","count","items","onClose","handleExportModalClose","handleExportModalOpen","handleOnSelect","handleOnToggle","bind","showPriceListOption","source_uuid","redirectToCostModel","router","DropdownItem","component","onClick","unshift","includes","length","Dropdown","toggle","KebabToggle","isPlain","position","dropdownItems","mapDispatchToProps","costModels","DetailsActionsConnect","initHiddenColumns","hiddenColumns","Set","hidden","add","ColumnManagementModalBase","getHidden","result","delete","isHidden","has","handleChange","checked","target","handleClose","handleSave","onSave","selectAll","componentDidUpdate","prevProps","Modal","TextContent","Text","TextVariants","Button","isInline","title","ModalVariant","actions","ButtonVariant","DataList","isCompact","DataListItem","DataListItemRow","DataListCheck","isChecked","onChange","DataListItemCells","dataListCells","DataListCell","ColumnManagementModalConnect","costColumn","textAlign","justifyContent","paddingRight","defaultLabel","minWidth","emptyState","backgroundColor","paddingTop","infoArrow","infoArrowDesc","bottom","infoDescription","color","fontSize","lastReported","lastReportedColumn","managedColumn","nameColumn","DataTable","getEmptyState","isOptimizations","queryFromRoute","location","search","filter_by","val","values","filter","showMargin","getSortBy","index","columns","orderBy","direction","order_by","getSortParams","sortBy","onSort","handleOnSort","columnIndex","isSelected","rowId","onSelected","rows","newRows","row","selected","SortByDirection","handleOnRowClick","rowIndex","onRowClick","isLoading","TableComposable","gridBreakPoint","hasSelectableRowCaption","Thead","Tr","col","Th","modifier","sort","isSortable","undefined","Tbody","Td","colSpan","Bullseye","Spinner","isSelectable","isHoverable","isRowSelected","_event","cells","cellIndex","dataLabel","isActionCell","select","disable","selectionDisabled","marginLeft","costValue","marginTop","costLabelUnit","dateTitle","header","padding","headerContent","headerContentLeft","minHeight","headerContentRight","info","verticalAlign","infoIcon","infoTitle","fontWeight","paddingBottom","getIdKeyForGroupBy","project","cluster","node","groupByOptions","tagPathsType","DetailsHeaderBase","currency","isCostDistributionFeatureEnabled","isExportsFeatureEnabled","onCostDistributionSelected","onCurrencySelected","onGroupBySelected","providers","providersError","report","showContent","meta","showCostDistribution","distributed_overhead","cost","supplementaryCost","infrastructureCost","reportItemValue","total","hasCost","hasSupplementaryCost","supplementary","hasInfrastructureCost","infrastructure","format","units","TitleSizes","showTags","Tooltip","content","enableFlip","providersQueryString","providersFetchStatus","featureFlags","DetailsHeader","reportType","DetailsOptimization","updateReport","fetchReport","getBreakdownLink","Link","to","basePath","routes","isOptimizationsTab","componentDidMount","reportQuery","reportError","reportFetchStatus","DetailsTableColumnIds","DetailsTableBase","initDatum","groupByTagKey","isAllSelected","isRosFeatureEnabled","selectedItems","isGroupByProject","computedItems","idKey","getTotalCost","monthOverMonth","getMonthOverMonthCost","getSupplementaryCost","InfrastructureCost","getInfrastructureCost","isOverheadCosts","platformDistributed","workerUnallocatedDistributed","isPlatformCosts","classification","isUnallocatedCosts","getActions","Label","filteredColumns","column","filteredRows","_a","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","__rest","cell","providerType","percentValue","toFixed","Math","abs","delta_value","percentage","delta_percent","showPercentage","showValue","iconOverride","currentReport","data","JSON","stringify","DetailsTable","tagType","DetailsToolbarBase","getCategoryOptions","tagReport","fetchTag","tagQueryString","categoryOptions","query","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onColumnManagementClicked","onExportClicked","onFilterAdded","onFilterRemoved","onPlatformCostsChanged","pagination","resourcePathsType","showBulkSelect","showColumnManagement","showExcludes","showExport","showFilter","showPlatformCosts","resolution","time_scope_units","time_scope_value","key_only","limit","tagReportFetchStatus","DetailsToolbarConnect","DetailsToolbar","global_spacer_lg","ocpDetails","paginationContainer","global_BackgroundColor_light_100","global_spacer_md","tableContainer","toolbarContainer","baseQuery","offset","exclude","group_by","defaultColumnOptions","OcpDetails","isColumnManagementModalOpen","getColumnManagementModal","cloneDeep","handleColumnManagementModalClose","handleColumnManagementModalSave","getComputedItems","groupById","isAllItems","getPagination","isBottom","page","trunc","Pagination","itemCount","onPerPageSelect","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","PaginationVariant","widgetId","getTable","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","handleColumnManagementModalOpen","handlePlatformCostsChanged","action","handleGroupBySelected","groupByKey","newQuery","parse","category","delta","navigate","replace","newItems","prevState","noReport","noLocation","distributed_cost"],"sourceRoot":""}