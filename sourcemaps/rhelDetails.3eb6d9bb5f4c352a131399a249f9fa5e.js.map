{"version":3,"file":"js/rhelDetails.b9d1631e5b1d96f4249c.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/external-link-alt-icon.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_FontSize_md.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_FontSize_xs.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_disabled_color_100.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_3xl.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_spacer_xs.js","webpack:///./node_modules/@redhat-cloud-services/frontend-components/esm/Unavailable/Unavailable.js","webpack:///./src/api/queries/providersQuery.ts","webpack:///./src/routes/components/currency/currency.styles.ts","webpack:///./src/routes/components/currency/currency.tsx","webpack:///./src/routes/state/noData/noDataState.tsx","webpack:///./src/routes/state/noData/noData.tsx","webpack:///./src/routes/components/icons/optimizationIcon/optimizationIcon.tsx","webpack:///./src/routes/state/noOptimizations/noOptimizationsState.tsx","webpack:///./src/routes/components/icons/costIcon/costIcon.tsx","webpack:///./src/routes/state/noProviders/noProvidersState.styles.ts","webpack:///./src/routes/state/noProviders/noProvidersState.tsx","webpack:///./src/routes/state/noProviders/noProviders.tsx","webpack:///./src/routes/state/notAvailable/notAvailable.tsx","webpack:///./src/routes/views/details/components/actions/actions.tsx","webpack:///./src/routes/views/details/components/columnManagement/columnManagementModal.tsx","webpack:///./src/routes/views/details/components/dataTable/dataTable.styles.ts","webpack:///./src/routes/views/details/components/dataTable/dataTable.tsx","webpack:///./src/utils/computedReport/getComputedRhelReportItems.ts","webpack:///./src/routes/views/details/rhelDetails/detailsHeader.styles.ts","webpack:///./src/routes/views/details/rhelDetails/detailsHeader.tsx","webpack:///./src/routes/views/details/rhelDetails/detailsTable.tsx","webpack:///./src/routes/views/details/rhelDetails/detailsToolbar.tsx","webpack:///./src/routes/views/details/rhelDetails/rhelDetails.styles.ts","webpack:///./src/routes/views/details/rhelDetails/rhelDetails.tsx","webpack:///./src/routes/views/utils/handles.ts","webpack:///./src/routes/views/utils/providers.ts","webpack:///./src/routes/views/utils/query.ts"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const ExternalLinkAltIconConfig = {\n  name: 'ExternalLinkAltIcon',\n  height: 512,\n  width: 512,\n  svgPath: 'M432,320H400a16,16,0,0,0-16,16V448H64V128H208a16,16,0,0,0,16-16V80a16,16,0,0,0-16-16H48A48,48,0,0,0,0,112V464a48,48,0,0,0,48,48H400a48,48,0,0,0,48-48V336A16,16,0,0,0,432,320ZM488,0h-128c-21.37,0-32.05,25.91-17,41l35.73,35.73L135,320.37a24,24,0,0,0,0,34L157.67,377a24,24,0,0,0,34,0L435.28,133.32,471,169c15,15,41,4.5,41-17V24A24,24,0,0,0,488,0Z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const ExternalLinkAltIcon = createIcon(ExternalLinkAltIconConfig);\n\nexport default ExternalLinkAltIcon;","\"use strict\";\nexports.__esModule = true;\nexports.global_FontSize_md = {\n  \"name\": \"--pf-global--FontSize--md\",\n  \"value\": \"1rem\",\n  \"var\": \"var(--pf-global--FontSize--md)\"\n};\nexports[\"default\"] = exports.global_FontSize_md;","\"use strict\";\nexports.__esModule = true;\nexports.global_FontSize_xs = {\n  \"name\": \"--pf-global--FontSize--xs\",\n  \"value\": \"0.75rem\",\n  \"var\": \"var(--pf-global--FontSize--xs)\"\n};\nexports[\"default\"] = exports.global_FontSize_xs;","\"use strict\";\nexports.__esModule = true;\nexports.global_disabled_color_100 = {\n  \"name\": \"--pf-global--disabled-color--100\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--disabled-color--100)\"\n};\nexports[\"default\"] = exports.global_disabled_color_100;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_3xl = {\n  \"name\": \"--pf-global--spacer--3xl\",\n  \"value\": \"4rem\",\n  \"var\": \"var(--pf-global--spacer--3xl)\"\n};\nexports[\"default\"] = exports.global_spacer_3xl;","\"use strict\";\nexports.__esModule = true;\nexports.global_spacer_xs = {\n  \"name\": \"--pf-global--spacer--xs\",\n  \"value\": \"0.25rem\",\n  \"var\": \"var(--pf-global--spacer--xs)\"\n};\nexports[\"default\"] = exports.global_spacer_xs;","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExclamationCircleIcon } from '@patternfly/react-icons';\nimport '../Unavailable/Unavailable.css';\nvar Unavailable = function () {\n    return (_jsxs(EmptyState, __assign({ variant: EmptyStateVariant.large, className: \"ins-c-empty-state__unavailable pf-m-redhat-font\" }, { children: [_jsx(EmptyStateIcon, { icon: ExclamationCircleIcon }), _jsx(Title, __assign({ headingLevel: \"h5\", size: \"lg\" }, { children: \"This page is temporarily unavailable\" })), _jsxs(EmptyStateBody, { children: [\"Try refreshing the page. If the problem persists, contact your organization administrator or visit our\", _jsxs(\"a\", __assign({ href: \"https://status.redhat.com/\", target: \"_blank\", rel: \"noopener noreferrer\" }, { children: [' ', \"status page\"] })), ' ', \"for known outages.\"] })] })));\n};\nexport default Unavailable;\n//# sourceMappingURL=Unavailable.js.map","import { parse, stringify } from 'qs';\nexport function getProvidersQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseProvidersQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    currencySelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    currencyLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n        whiteSpace: 'nowrap',\n    },\n};\n","import './currency.scss';\nimport { Select, SelectOption, SelectVariant, Title, TitleSizes } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { setCurrency } from 'utils/localStorage';\nimport { styles } from './currency.styles';\nexport const currencyOptions = [\n    { label: messages.currencyOptions, value: 'AUD' },\n    { label: messages.currencyOptions, value: 'CAD' },\n    { label: messages.currencyOptions, value: 'CHF' },\n    { label: messages.currencyOptions, value: 'CNY' },\n    { label: messages.currencyOptions, value: 'DKK' },\n    { label: messages.currencyOptions, value: 'EUR' },\n    { label: messages.currencyOptions, value: 'GBP' },\n    { label: messages.currencyOptions, value: 'HKD' },\n    { label: messages.currencyOptions, value: 'JPY' },\n    { label: messages.currencyOptions, value: 'NOK' },\n    { label: messages.currencyOptions, value: 'NZD' },\n    { label: messages.currencyOptions, value: 'SEK' },\n    { label: messages.currencyOptions, value: 'SGD' },\n    { label: messages.currencyOptions, value: 'USD' },\n    { label: messages.currencyOptions, value: 'ZAR' },\n];\nclass CurrencyBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isSelectOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getSelect = () => {\n            const { currency, isDisabled, showLabel = true } = this.props;\n            const { isSelectOpen } = this.state;\n            const selectOptions = this.getSelectOptions();\n            const selection = selectOptions.find((option) => option.value === currency);\n            return (React.createElement(Select, { className: showLabel ? 'currencyOverride' : undefined, id: \"currencySelect\", isDisabled: isDisabled, isOpen: isSelectOpen, onSelect: this.handleSelect, onToggle: this.handleToggle, selections: selection, variant: SelectVariant.single }, selectOptions.map(option => (React.createElement(SelectOption, { key: option.value, value: option })))));\n        };\n        this.getSelectOptions = () => {\n            const { intl } = this.props;\n            const options = [];\n            currencyOptions.map(option => {\n                options.push({\n                    toString: () => intl.formatMessage(option.label, { units: option.value }),\n                    value: option.value,\n                });\n            });\n            return options;\n        };\n        this.handleSelect = (event, selection) => {\n            const { isLocalStorage = true, onSelect } = this.props;\n            // Set currency units via local storage\n            if (isLocalStorage) {\n                setCurrency(selection.value);\n            }\n            this.setState({\n                isSelectOpen: false,\n            }, () => {\n                if (onSelect) {\n                    onSelect(selection.value);\n                }\n            });\n        };\n        this.handleToggle = isSelectOpen => {\n            this.setState({ isSelectOpen });\n        };\n    }\n    render() {\n        const { intl, showLabel = true } = this.props;\n        return (React.createElement(\"div\", { style: styles.currencySelector },\n            showLabel && (React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.md, style: styles.currencyLabel }, intl.formatMessage(messages.currency))),\n            this.getSelect()));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst CurrencyConnect = connect(mapStateToProps, mapDispatchToProps)(CurrencyBase);\nconst Currency = injectIntl(CurrencyConnect);\nexport default Currency;\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title, TitleSizes, } from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nclass NoDataStateBase extends React.Component {\n    render() {\n        const { intl, showReload = true } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: TitleSizes.lg }, intl.formatMessage(messages.noDataStateTitle)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(messages.noDataStateDesc)),\n            showReload && (React.createElement(Button, { variant: \"primary\", onClick: () => window.location.reload() }, intl.formatMessage(messages.noDataStateRefresh)))));\n    }\n}\nconst NoDataState = injectIntl(NoDataStateBase);\nexport { NoDataState };\n","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React from 'react';\nimport { NoDataState } from './noDataState';\nconst NoData = ({ showReload, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(NoDataState, { showReload: showReload }))));\n};\nexport default NoData;\n","import './optimizationIcon.scss';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nconst icon = require('./Red_Hat-IT_Optimization-Gray.svg');\nconst OptimizationIcon = ({ className, intl }) => {\n    return (React.createElement(\"img\", { className: `optimization-icon ${className}`, src: icon, alt: intl.formatMessage(messages.optimizations), \"aria-hidden\": \"true\" }));\n};\nexport default injectIntl(OptimizationIcon);\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title, TitleSizes, } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { OptimizationIcon } from 'routes/components/icons/optimizationIcon';\nclass NoOptimizationsStateBase extends React.Component {\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: OptimizationIcon }),\n            React.createElement(Title, { headingLevel: \"h1\", size: TitleSizes.lg }, intl.formatMessage(messages.noOptimizationsTitle)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(messages.noOptimizationsDesc))));\n    }\n}\nconst NoOptimizationsState = injectIntl(NoOptimizationsStateBase);\nexport { NoOptimizationsState };\n","import './costIcon.scss';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nconst icon = require('./Cost-icon.svg');\nconst CostIcon = ({ className, intl }) => {\n    return (React.createElement(\"img\", { className: `cost-icon ${className}`, src: icon, alt: intl.formatMessage(messages.costManagement), \"aria-hidden\": \"true\" }));\n};\nexport default injectIntl(CostIcon);\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    iconSpacer: {\n        marginLeft: global_spacer_xs.value,\n    },\n    viewSources: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title, TitleSizes, } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons/dist/esm/icons/external-link-alt-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { ProviderType } from 'api/providers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { CostIcon } from 'routes/components/icons/costIcon';\nimport { getReleasePath } from 'utils/paths';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDocLink = (textKey, urlKey) => {\n            const { intl } = this.props;\n            return (React.createElement(\"a\", { href: intl.formatMessage(urlKey), rel: \"noreferrer\", target: \"_blank\" },\n                intl.formatMessage(textKey),\n                React.createElement(\"span\", { style: styles.iconSpacer },\n                    React.createElement(ExternalLinkAltIcon, null))));\n        };\n        this.getRouteToSources = () => {\n            const release = getReleasePath();\n            return `${release}/settings/sources`;\n        };\n    }\n    render() {\n        const { intl, providerType } = this.props;\n        let descKey = messages.noProvidersStateOverviewDesc;\n        let titleKey = messages.noProvidersStateOverviewTitle;\n        let docUrlKey;\n        let icon;\n        let textKey;\n        switch (providerType) {\n            case ProviderType.aws:\n                descKey = messages.noProvidersStateAwsDesc;\n                titleKey = messages.noProvidersStateAwsTitle;\n                break;\n            case ProviderType.azure:\n                descKey = messages.noProvidersStateAzureDesc;\n                titleKey = messages.noProvidersStateAzureTitle;\n                break;\n            case ProviderType.gcp:\n                descKey = messages.noProvidersStateGcpDesc;\n                titleKey = messages.noProvidersStateGcpTitle;\n                break;\n            case ProviderType.ibm:\n                descKey = messages.noProvidersStateIbmDesc;\n                titleKey = messages.noProvidersStateIbmTitle;\n                break;\n            case ProviderType.ocp:\n                descKey = messages.noProvidersStateOcpDesc;\n                docUrlKey = messages.docsAddOcpSources;\n                textKey = messages.noProvidersStateOcpAddSources;\n                titleKey = messages.noProvidersStateOcpTitle;\n                break;\n            default:\n                icon = CostIcon;\n        }\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: icon ? icon : PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h1\", size: TitleSizes.lg }, intl.formatMessage(titleKey)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(descKey)),\n            docUrlKey && textKey ? (React.createElement(\"div\", { style: styles.viewSources }, this.getDocLink(textKey, docUrlKey))) : (React.createElement(Button, { variant: \"primary\", component: \"a\", href: this.getRouteToSources() }, intl.formatMessage(messages.noProvidersStateGetStarted)))));\n    }\n}\nconst NoProvidersState = injectIntl(NoProvidersStateBase);\nexport { NoProvidersState };\n","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React from 'react';\nimport { NoProvidersState } from './noProvidersState';\nconst NoProviders = ({ providerType, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(NoProvidersState, { providerType: providerType }))));\n};\nexport default NoProviders;\n","import { PageSection } from '@patternfly/react-core';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { Unavailable } from '@redhat-cloud-services/frontend-components/Unavailable';\nimport React from 'react';\nconst NotAvailable = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(PageSection, null,\n            React.createElement(Unavailable, null))));\n};\nexport default NotAvailable;\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ExportModal } from 'routes/views/components/export';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nimport { tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, reportPathsType, reportQueryString } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { count: 1, groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, intl, item: { source_uuid }, redirectToCostModel, router, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, intl.formatMessage(messages.detailsActionsExport)),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], router) }, intl.formatMessage(messages.detailsActionsPriceList)));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = injectIntl(withRouter(DetailsActionsConnect));\nexport default Actions;\n","import { Button, ButtonVariant, DataList, DataListCell, DataListCheck, DataListItem, DataListItemCells, DataListItemRow, Modal, ModalVariant, Text, TextContent, TextVariants, } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nexport const initHiddenColumns = (options) => {\n    const hiddenColumns = new Set();\n    options.map(option => {\n        if (option.hidden) {\n            hiddenColumns.add(option.value);\n        }\n    });\n    return hiddenColumns;\n};\nexport class ColumnManagementModalBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            hiddenColumns: initHiddenColumns(this.props.options),\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getHidden = (value) => {\n            const { hiddenColumns } = this.state;\n            const result = new Set(hiddenColumns);\n            if (!result.delete(value)) {\n                result.add(value);\n            }\n            return result;\n        };\n        this.isHidden = (value) => {\n            const { hiddenColumns } = this.state;\n            return hiddenColumns.has(value);\n        };\n        this.handleChange = (checked, event) => {\n            const hiddenColumns = this.getHidden(event.target.id);\n            this.setState({ hiddenColumns });\n        };\n        this.handleClose = () => {\n            // Reset defult state upon close\n            this.setState(Object.assign({}, this.defaultState), () => {\n                this.props.onClose(false);\n            });\n        };\n        this.handleSave = () => {\n            const { hiddenColumns } = this.state;\n            this.props.onSave(hiddenColumns);\n            this.handleClose();\n        };\n        this.selectAll = () => {\n            this.setState({ hiddenColumns: new Set() });\n        };\n    }\n    componentDidUpdate(prevProps) {\n        const { options } = this.props;\n        if (prevProps.options !== options) {\n            const hiddenColumns = initHiddenColumns(options);\n            this.setState({ hiddenColumns });\n        }\n    }\n    render() {\n        const { options, intl } = this.props;\n        return (React.createElement(Modal, { description: React.createElement(TextContent, null,\n                React.createElement(Text, { component: TextVariants.p }, intl.formatMessage(messages.manageColumnsDesc)),\n                React.createElement(Button, { isInline: true, onClick: this.selectAll, variant: \"link\" }, intl.formatMessage(messages.selectAll))), \n            // style={styles.modal}\n            isOpen: this.props.isOpen, onClose: this.handleClose, title: intl.formatMessage(messages.manageColumnsTitle), variant: ModalVariant.medium, actions: [\n                React.createElement(Button, { key: \"save\", onClick: this.handleSave, variant: ButtonVariant.link }, intl.formatMessage(messages.save)),\n                React.createElement(Button, { key: \"cancel\", onClick: this.handleClose, variant: ButtonVariant.link }, intl.formatMessage(messages.cancel)),\n            ] },\n            React.createElement(DataList, { \"aria-label\": intl.formatMessage(messages.manageColumnsAriaLabel), id: \"table-column-management\", isCompact: true }, options.map(option => (React.createElement(DataListItem, { \"aria-labelledby\": option.value, key: option.value },\n                React.createElement(DataListItemRow, null,\n                    React.createElement(DataListCheck, { \"aria-labelledby\": `${option.value}Label`, isChecked: !this.isHidden(option.value), name: option.value, id: option.value, onChange: this.handleChange }),\n                    React.createElement(DataListItemCells, { dataListCells: [\n                            React.createElement(DataListCell, { id: `${option.value}Label`, key: \"table-column-management-item1\" },\n                                React.createElement(\"span\", null, intl.formatMessage(option.label))),\n                            React.createElement(DataListCell, { key: \"table-column-management-item2\" }, option.description && React.createElement(\"span\", null, intl.formatMessage(option.description))),\n                        ] }))))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {};\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst ColumnManagementModalConnect = connect(mapStateToProps, mapDispatchToProps)(ColumnManagementModalBase);\nconst ColumnManagementModal = injectIntl(ColumnManagementModalConnect);\nexport default ColumnManagementModal;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    costColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingRight: 0,\n    },\n    defaultLabel: {\n        minWidth: '50px',\n    },\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    lastReported: {\n        textAlign: 'right',\n        paddingRight: '40px',\n    },\n    lastReportedColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    managedColumn: {\n        textAlign: 'right',\n    },\n    nameColumn: {\n        width: '1%',\n    },\n};\n","import './dataTable.scss';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, TableVariant, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport { parseQuery } from 'api/queries/ocpQuery';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { NoOptimizationsState } from 'routes/state/noOptimizations/noOptimizationsState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass DataTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { intl, isOptimizations, router } = this.props;\n            const queryFromRoute = parseQuery(router.location.search);\n            if (queryFromRoute.filter_by) {\n                for (const val of Object.values(queryFromRoute.filter_by)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            if (isOptimizations) {\n                return React.createElement(NoOptimizationsState, null);\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, router } = this.props;\n            const orderBy = columns[index].orderBy;\n            const queryFromRoute = parseQuery(router.location.search);\n            const direction = queryFromRoute && queryFromRoute.order_by && queryFromRoute.order_by[orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected, rows } = this.props;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnRowClick = (event, rowIndex) => {\n            const { onRowClick, rows } = this.props;\n            rows.map(row => (row.selected = false));\n            rows[rowIndex].selected = true;\n            this.setState({ rows }, () => {\n                if (onRowClick) {\n                    onRowClick(event, rowIndex);\n                }\n            });\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isLoading, isOptimizations, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.dataTableAriaLabel), className: \"tableOverride\", gridBreakPoint: \"grid-2xl\", hasSelectableRowCaption: isOptimizations, variant: TableVariant.compact },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { isSelectable: isOptimizations, isHoverable: isOptimizations, isRowSelected: isOptimizations && row.selected, onRowClick: isOptimizations ? _event => this.handleOnRowClick(_event, rowIndex) : undefined, key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 && !isOptimizations ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${cellIndex}-${rowIndex}`, modifier: \"nowrap\", select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    }, style: item.style })) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", isActionCell: !isOptimizations && cellIndex === row.cells.length - 1, style: item.style }, item.value))))))))),\n            rows.length === 0 && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(DataTable));\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costValue: {\n        marginTop: global_spacer_lg.var,\n        marginBottom: 0,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    dateTitle: {\n        textAlign: 'end',\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentLeft: {\n        display: 'flex',\n        minHeight: '90px',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    info: {\n        verticalAlign: 'middle',\n    },\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes, Tooltip } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { TagPathsType } from 'api/tags/tag';\nimport { ExportsLink } from 'components/drawers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Currency } from 'routes/components/currency';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { GroupBy } from 'routes/views/components/groupBy';\nimport { filterProviders } from 'routes/views/utils/providers';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedRhelReportItems';\nimport { getSinceDateRangeString } from 'utils/dates';\nimport { formatCurrency } from 'utils/format';\nimport { styles } from './detailsHeader.styles';\nconst groupByOptions = [\n    { label: 'cluster', value: 'cluster' },\n    { label: 'node', value: 'node' },\n    { label: 'project', value: 'project' },\n];\nconst tagPathsType = TagPathsType.rhel;\nclass DetailsHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { currency, groupBy, isExportsFeatureEnabled, onCurrencySelected, onGroupBySelected, providers, providersError, report, intl, } = this.props;\n        const showContent = report && !providersError && providers && providers.meta && providers.meta.count > 0;\n        let cost = React.createElement(EmptyValueState, null);\n        let supplementaryCost = React.createElement(EmptyValueState, null);\n        let infrastructureCost = React.createElement(EmptyValueState, null);\n        if (report && report.meta && report.meta.total) {\n            const hasCost = report.meta.total.cost && report.meta.total.cost.total;\n            const hasSupplementaryCost = report.meta.total.supplementary && report.meta.total.supplementary.total;\n            const hasInfrastructureCost = report.meta.total.infrastructure && report.meta.total.infrastructure.total;\n            cost = formatCurrency(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD');\n            supplementaryCost = formatCurrency(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost ? report.meta.total.supplementary.total.units : 'USD');\n            infrastructureCost = formatCurrency(hasInfrastructureCost ? report.meta.total.infrastructure.total.value : 0, hasInfrastructureCost ? report.meta.total.infrastructure.total.units : 'USD');\n        }\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.rhelDetailsTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(\"div\", { style: styles.headerContentLeft },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: !showContent, onSelected: onGroupBySelected, options: groupByOptions, showTags: true, tagPathsType: tagPathsType })),\n                showContent && (React.createElement(\"div\", null,\n                    React.createElement(Tooltip, { content: intl.formatMessage(messages.dashboardTotalCostTooltip, {\n                            infrastructureCost,\n                            supplementaryCost,\n                        }), enableFlip: true },\n                        React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: TitleSizes['4xl'] }, cost)),\n                    React.createElement(\"div\", { style: styles.dateTitle }, getSinceDateRangeString()))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        providers: filterProviders(providers, ProviderType.rhel),\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n    };\n});\nconst DetailsHeader = injectIntl(connect(mapStateToProps, {})(DetailsHeaderBase));\nexport { DetailsHeader };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport 'routes/views/details/components/dataTable/dataTable.scss';\nimport { Label } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { ReportPathsType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { Actions } from 'routes/views/details/components/actions';\nimport { DataTable } from 'routes/views/details/components/dataTable';\nimport { styles } from 'routes/views/details/components/dataTable/dataTable.styles';\nimport { getBreakdownPath } from 'routes/views/utils/paths';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getForDateRangeString, getNoDataForDateRangeString } from 'utils/dates';\nimport { formatCurrency, formatPercentage } from 'utils/format';\nimport { formatPath } from 'utils/paths';\nimport { noPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nexport const DetailsTableColumnIds = {\n    infrastructure: 'infrastructure',\n    monthOverMonth: 'monthOverMonth',\n    supplementary: 'supplementary',\n};\nconst reportPathsType = ReportPathsType.rhel;\nclass DetailsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { groupBy, groupByTagKey, hiddenColumns, intl, isAllSelected, report, router, selectedItems } = this.props;\n            if (!report) {\n                return;\n            }\n            const showDefaultProject = groupBy === 'project';\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: (groupByTagKey ? groupByTagKey : groupBy),\n            });\n            const columns = groupByTagKey\n                ? [\n                    // Sorting with tag keys is not supported\n                    {\n                        name: '',\n                    },\n                    {\n                        name: intl.formatMessage(messages.tagNames),\n                        style: groupBy === 'project' ? styles.nameColumn : undefined,\n                    },\n                    {\n                        hidden: !showDefaultProject,\n                        name: '', // Default column\n                    },\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    {\n                        id: DetailsTableColumnIds.infrastructure,\n                        name: intl.formatMessage(messages.rhelDetailsInfrastructureCost),\n                        style: styles.managedColumn,\n                    },\n                    {\n                        id: DetailsTableColumnIds.supplementary,\n                        name: intl.formatMessage(messages.rhelDetailsSupplementaryCost),\n                        style: styles.managedColumn,\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign(Object.assign({ orderBy: groupBy, name: intl.formatMessage(messages.detailsResourceNames, { value: groupBy }) }, (computedItems.length && { isSortable: true })), { style: groupBy === 'project' ? styles.nameColumn : undefined }),\n                    {\n                        hidden: !showDefaultProject,\n                        name: '', // Default column\n                    },\n                    {\n                        id: DetailsTableColumnIds.monthOverMonth,\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    {\n                        id: DetailsTableColumnIds.infrastructure,\n                        orderBy: 'infrastructure_cost',\n                        name: intl.formatMessage(messages.rhelDetailsInfrastructureCost),\n                        style: styles.managedColumn,\n                        // Sort by infrastructure_cost is not supported -- https://github.com/project-koku/koku/issues/796\n                        // ...(computedItems.length && { isSortable: true }),\n                    },\n                    {\n                        id: DetailsTableColumnIds.supplementary,\n                        orderBy: 'supplementary_cost',\n                        name: intl.formatMessage(messages.rhelDetailsSupplementaryCost),\n                        style: styles.managedColumn,\n                        // Sort by supplementary_cost is not supported -- https://github.com/project-koku/koku/issues/796\n                        // ...(computedItems.length && { isSortable: true }),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ];\n            computedItems.map((item, index) => {\n                const cost = this.getTotalCost(item, index);\n                const label = item && item.label !== null ? item.label : '';\n                const monthOverMonth = this.getMonthOverMonthCost(item, index);\n                const supplementaryCost = this.getSupplementaryCost(item, index);\n                const InfrastructureCost = this.getInfrastructureCost(item, index);\n                const desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                const isDisabled = label === `${noPrefix}${groupBy}` || label === `${noPrefix}${groupByTagKey}`;\n                const actions = this.getActions(item, isDisabled);\n                const name = isDisabled ? label : (React.createElement(Link, { to: getBreakdownPath({\n                        basePath: formatPath(routes.rhelDetailsBreakdown.path),\n                        description: item.id,\n                        groupBy,\n                        id: item.id,\n                        router,\n                        title: label.toString(),\n                    }) }, label));\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: (React.createElement(React.Fragment, null,\n                                React.createElement(\"div\", null, name),\n                                React.createElement(\"div\", { style: styles.infoDescription }, desc))),\n                        },\n                        {\n                            hidden: !showDefaultProject,\n                            value: item.default_project ? (React.createElement(\"div\", null,\n                                React.createElement(Label, { variant: \"outline\", color: \"green\" }, intl.formatMessage(messages.default)))) : (React.createElement(\"div\", { style: styles.defaultLabel })),\n                        },\n                        { value: React.createElement(\"div\", null, monthOverMonth), id: DetailsTableColumnIds.monthOverMonth },\n                        {\n                            value: React.createElement(\"div\", null, InfrastructureCost),\n                            id: DetailsTableColumnIds.infrastructure,\n                            style: styles.managedColumn,\n                        },\n                        {\n                            value: React.createElement(\"div\", null, supplementaryCost),\n                            id: DetailsTableColumnIds.supplementary,\n                            style: styles.managedColumn,\n                        },\n                        { value: React.createElement(\"div\", null, cost), style: styles.managedColumn },\n                        { value: React.createElement(\"div\", null, actions) },\n                    ],\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                    selectionDisabled: isDisabled,\n                });\n            });\n            const filteredColumns = columns.filter(column => !hiddenColumns.has(column.id) && !column.hidden);\n            const filteredRows = rows.map((_a) => {\n                var row = __rest(_a, []);\n                row.cells = row.cells.filter(cell => !hiddenColumns.has(cell.id) && !cell.hidden);\n                return row;\n            });\n            this.setState({\n                columns: filteredColumns,\n                rows: filteredRows,\n            });\n        };\n        this.getActions = (item, isDisabled) => {\n            const { groupBy, reportQueryString } = this.props;\n            return (React.createElement(Actions, { groupBy: groupBy, isDisabled: isDisabled, item: item, providerType: ProviderType.rhel, reportPathsType: reportPathsType, reportQueryString: reportQueryString, showPriceListOption: groupBy === 'cluster' }));\n        };\n        this.getSupplementaryCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.supplementary.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.supplementary.total.value, item.supplementary.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n        this.getInfrastructureCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.infrastructure.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.infrastructure.total.value, item.infrastructure.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n        this.getMonthOverMonthCost = (item, index) => {\n            const { intl } = this.props;\n            const value = formatCurrency(Math.abs(item.cost.total.value - item.delta_value), item.cost.total.units);\n            const percentage = item.delta_percent !== null ? formatPercentage(Math.abs(item.delta_percent)) : 0;\n            const showPercentage = !(percentage === 0 || percentage === '0.00');\n            const showValue = item.delta_percent !== null; // Workaround for https://github.com/project-koku/koku/issues/1395\n            let iconOverride;\n            if (showPercentage) {\n                iconOverride = 'iconOverride';\n                if (item.delta_percent !== null && item.delta_value < 0) {\n                    iconOverride += ' decrease';\n                }\n                if (item.delta_percent !== null && item.delta_value > 0) {\n                    iconOverride += ' increase';\n                }\n            }\n            if (!showValue) {\n                return getNoDataForDateRangeString();\n            }\n            else {\n                return (React.createElement(\"div\", { className: \"monthOverMonthOverride\" },\n                    React.createElement(\"div\", { className: iconOverride, key: `month-over-month-cost-${index}` },\n                        showPercentage ? intl.formatMessage(messages.percent, { value: percentage }) : React.createElement(EmptyValueState, null),\n                        showPercentage && item.delta_percent !== null && item.delta_value > 0 && (React.createElement(\"span\", { className: \"fa fa-sort-up\", style: styles.infoArrow, key: `month-over-month-icon-${index}` })),\n                        showPercentage && item.delta_percent !== null && item.delta_value < 0 && (React.createElement(\"span\", { className: \"fa fa-sort-down\", style: Object.assign(Object.assign({}, styles.ininfoArrow), styles.infoArrowDesc), key: `month-over-month-icon-${index}` }))),\n                    React.createElement(\"div\", { style: styles.infoDescription, key: `month-over-month-info-${index}` }, getForDateRangeString(value))));\n            }\n        };\n        this.getTotalCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.cost.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.cost.total.value, item.cost.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { hiddenColumns, report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport ||\n            prevProps.selectedItems !== selectedItems ||\n            prevProps.hiddenColumns !== hiddenColumns) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { isLoading, onSelected, onSort, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, isLoading: isLoading, onSelected: onSelected, onSort: onSort, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst DetailsTable = injectIntl(withRouter(DetailsTableBase));\nexport { DetailsTable };\n","import { getQuery } from 'api/queries/ocpQuery';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType, TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { isEqual } from 'utils/equal';\nimport { tagKey } from 'utils/props';\nconst tagType = TagType.tag;\nconst tagPathsType = TagPathsType.ocp;\nexport class DetailsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { intl, tagReport } = this.props;\n            const options = [\n                { name: intl.formatMessage(messages.filterByValues, { value: 'cluster' }), key: 'cluster' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'node' }), key: 'node' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'project' }), key: 'project' },\n            ];\n            if (tagReport && tagReport.data && tagReport.data.length) {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: tagKey }),\n                    key: tagKey,\n                });\n            }\n            return options;\n        };\n        this.updateReport = () => {\n            const { fetchTag, tagQueryString } = this.props;\n            fetchTag(tagPathsType, tagType, tagQueryString);\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        }, () => {\n            this.updateReport();\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { query, tagReport } = this.props;\n        if (!isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            }, () => {\n                this.updateReport();\n            });\n        }\n        else if (query && !isEqual(query, prevProps.query)) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { groupBy, isAllSelected, isDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onColumnManagementClicked, onExportClicked, onFilterAdded, onFilterRemoved, pagination, query, selectedItems, tagReport, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, groupBy: groupBy, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onColumnManagementClicked: onColumnManagementClicked, onExportClicked: onExportClicked, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.ocp, selectedItems: selectedItems, showBulkSelect: true, showColumnManagement: true, showExcludes: true, showExport: true, showFilter: true, tagReport: tagReport, tagPathsType: tagPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        key_only: true,\n        limit: 1000,\n    });\n    const tagReport = tagSelectors.selectTag(state, tagPathsType, tagType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagPathsType, tagType, tagQueryString);\n    return {\n        tagReport,\n        tagReportFetchStatus,\n        tagQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst DetailsToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsToolbarBase);\nconst DetailsToolbar = injectIntl(DetailsToolbarConnect);\nexport { DetailsToolbar };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    ocpDetails: {\n        minHeight: '100%',\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    toolbarContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { getQuery, parseQuery } from 'api/queries/rhelQuery';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport { cloneDeep } from 'lodash';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoData } from 'routes/state/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { ExportModal } from 'routes/views/components/export';\nimport { ColumnManagementModal, initHiddenColumns } from 'routes/views/details/components/columnManagement';\nimport { getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { handleOnCurrencySelected, handleOnFilterAdded, handleOnFilterRemoved, handleOnPerPageSelect, handleOnSetPage, handleOnSort, } from 'routes/views/utils/handles';\nimport { filterProviders, hasCurrentMonthData } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedRhelReportItems';\nimport { getCurrency } from 'utils/localStorage';\nimport { noPrefix, tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { DetailsHeader } from './detailsHeader';\nimport { DetailsTable, DetailsTableColumnIds } from './detailsTable';\nimport { DetailsToolbar } from './detailsToolbar';\nimport { styles } from './rhelDetails.styles';\nconst baseQuery = {\n    filter: {\n        limit: 10,\n        offset: 0,\n    },\n    exclude: {},\n    filter_by: {},\n    group_by: {\n        project: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst defaultColumnOptions = [\n    { label: messages.monthOverMonthChange, value: DetailsTableColumnIds.monthOverMonth },\n    {\n        description: messages.ocpDetailsInfrastructureCostDesc,\n        label: messages.ocpDetailsInfrastructureCost,\n        value: DetailsTableColumnIds.infrastructure,\n        hidden: true,\n    },\n    {\n        description: messages.ocpDetailsSupplementaryCostDesc,\n        label: messages.ocpDetailsSupplementaryCost,\n        value: DetailsTableColumnIds.supplementary,\n        hidden: true,\n    },\n];\nconst reportType = ReportType.cost;\nconst reportPathsType = ReportPathsType.ocp;\nclass RhelDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            hiddenColumns: initHiddenColumns(defaultColumnOptions),\n            isAllSelected: false,\n            isColumnManagementModalOpen: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getColumnManagementModal = () => {\n            const { hiddenColumns, isColumnManagementModalOpen } = this.state;\n            const options = cloneDeep(defaultColumnOptions);\n            options.map(option => {\n                option.hidden = hiddenColumns.has(option.value);\n            });\n            return (React.createElement(ColumnManagementModal, { isOpen: isColumnManagementModalOpen, options: options, onClose: this.handleColumnManagementModalClose, onSave: this.handleColumnManagementModalSave }));\n        };\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey || groupById,\n            });\n        };\n        this.getExportModal = (computedItems) => {\n            const { query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `${noPrefix}${groupById}` || item.label === `${noPrefix}${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, report, router } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = Math.trunc(offset / limit + 1);\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handleOnPerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleOnSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.openShift),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { query, report, reportFetchStatus, reportQueryString, router } = this.props;\n            const { hiddenColumns, isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return (React.createElement(DetailsTable, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, groupByTagKey: groupByTagKey, hiddenColumns: hiddenColumns, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending) => handleOnSort(query, router, sortType, isSortAscending), report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, report, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(DetailsToolbar, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isDisabled || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onColumnManagementClicked: this.handleColumnManagementModalOpen, onExportClicked: this.handleExportModalOpen, onFilterAdded: filter => handleOnFilterAdded(query, router, filter), onFilterRemoved: filter => handleOnFilterRemoved(query, router, filter), pagination: this.getPagination(), query: query, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleColumnManagementModalClose = (isOpen) => {\n            this.setState({ isColumnManagementModalOpen: isOpen });\n        };\n        this.handleColumnManagementModalOpen = () => {\n            this.setState({ isColumnManagementModalOpen: true });\n        };\n        this.handleColumnManagementModalSave = (hiddenColumns) => {\n            this.setState({ hiddenColumns });\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            const groupByKey = groupBy;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: '*',\n                }, order_by: undefined, category: undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.updateReport = () => {\n            const { fetchReport, reportQueryString } = this.props;\n            fetchReport(reportPathsType, reportType, reportQueryString);\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleColumnManagementModalClose = this.handleColumnManagementModalClose.bind(this);\n        this.handleColumnManagementModalOpen = this.handleColumnManagementModalOpen.bind(this);\n        this.handleColumnManagementModalSave = this.handleColumnManagementModalSave.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { currency, intl, providers, providersFetchStatus, query, report, reportError, reportFetchStatus, router } = this.props;\n        const computedItems = this.getComputedItems();\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const isDisabled = computedItems.length === 0;\n        const title = intl.formatMessage(messages.ocpDetailsTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.inProgress) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.complete) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: ProviderType.ocp, title: title });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.ocpDetails },\n            React.createElement(DetailsHeader, { currency: currency, groupBy: groupById, onCurrencySelected: value => handleOnCurrencySelected(query, router, value), onGroupBySelected: this.handleGroupBySelected, report: report }),\n            React.createElement(\"div\", { style: styles.content },\n                React.createElement(\"div\", { style: styles.toolbarContainer }, this.getToolbar(computedItems)),\n                this.getExportModal(computedItems),\n                this.getColumnManagementModal(),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const currency = getCurrency();\n    const query = Object.assign(Object.assign({}, baseQuery), queryFromRoute);\n    const reportQuery = {\n        currency,\n        delta: 'cost',\n        exclude: query.exclude,\n        filter: Object.assign(Object.assign({}, query.filter), { resolution: 'monthly', time_scope_units: 'month', time_scope_value: -1 }),\n        filter_by: query.filter_by,\n        group_by: query.group_by,\n        order_by: query.order_by,\n    };\n    const reportQueryString = getQuery(reportQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        currency,\n        providers: filterProviders(providers, ProviderType.ocp),\n        providersFetchStatus,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(RhelDetails)));\n","import { addFilterToQuery, removeFilterFromQuery } from './filter';\nimport { getRouteForQuery } from './query';\nexport const handleSelected = (query, router, value, reset = false) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    router.navigate(getRouteForQuery(newQuery, router.location, reset), { replace: true }); // Don't reset pagination\n};\nexport const handleOnCurrencySelected = (query, router, value, reset = false) => {\n    handleSelected(query, router, value, reset);\n};\nexport const handleOnCostTypeSelected = (query, router, value, reset = false) => {\n    handleSelected(query, router, value, reset);\n};\nexport const handleOnCostDistributionSelected = (query, router, value, reset = false) => {\n    const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { order_by: undefined });\n    handleSelected(newQuery, router, value, reset);\n};\nexport const handleOnFilterAdded = (query, router, filter) => {\n    const filteredQuery = addFilterToQuery(query, filter);\n    router.navigate(getRouteForQuery(filteredQuery, router.location, true), { replace: true });\n};\nexport const handleOnFilterRemoved = (query, router, filter) => {\n    const filteredQuery = removeFilterFromQuery(query, filter);\n    router.navigate(getRouteForQuery(filteredQuery, router.location, true), { replace: true });\n};\nexport const handleOnPerPageSelect = (query, router, perPage) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    newQuery.filter = Object.assign(Object.assign({}, query.filter), { limit: perPage });\n    const filteredQuery = getRouteForQuery(newQuery, router.location, true);\n    router.navigate(filteredQuery, { replace: true });\n};\nexport const handleOnSetPage = (query, router, report, pageNumber) => {\n    const limit = report && report.meta && report.meta.filter && report.meta.filter.limit ? report.meta.filter.limit : 10;\n    const offset = pageNumber * limit - limit;\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    newQuery.filter = Object.assign(Object.assign({}, query.filter), { offset });\n    const filteredQuery = getRouteForQuery(newQuery, router.location);\n    router.navigate(filteredQuery, { replace: true });\n};\nexport const handleOnSort = (query, router, sortType, isSortAscending, date = undefined) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    newQuery.order_by = {};\n    newQuery.order_by[sortType] = isSortAscending ? 'asc' : 'desc';\n    if (date) {\n        newQuery.order_by.date = date;\n    }\n    const filteredQuery = getRouteForQuery(newQuery, router.location);\n    router.navigate(filteredQuery, { replace: true });\n};\n","// eslint-disable-next-line no-shadow\nvar DataType;\n(function (DataType) {\n    DataType[\"currentMonthData\"] = \"current_month_data\";\n    DataType[\"hasData\"] = \"has_data\";\n    DataType[\"previousMonthData\"] = \"previous_month_data\";\n})(DataType || (DataType = {}));\n// Returns the OCP provider matching the given infrastructure uuid\nconst _getOcpProvider = (ocpProviders, uuid) => {\n    let result;\n    if (ocpProviders && ocpProviders.data) {\n        for (const provider of ocpProviders.data) {\n            if (provider.infrastructure && provider.infrastructure.uuid === uuid) {\n                result = provider;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Returns new Provider matching the given provider type\n//\n// See https://issues.redhat.com/browse/COST-2202\nexport const filterProviders = (providers, sourceType) => {\n    if (!providers) {\n        return providers;\n    }\n    const data = providers.data.filter(provider => provider.source_type.toLowerCase() === sourceType);\n    const meta = Object.assign(Object.assign({}, providers.meta), { count: data.length });\n    return Object.assign(Object.assign({}, providers), { meta,\n        data });\n};\n// Ensure at least one source provider has data available\nconst _hasData = (providers, datumType) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            if (provider[datumType]) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one cloud source provider has data available\nconst _hasCloudData = (providers, ocpProviders, dataType) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            const ocpProvider = _getOcpProvider(ocpProviders, provider.uuid);\n            // Ensure AWS provider is filtered by OpenShift and has OCP data\n            if (ocpProvider && ocpProvider[dataType]) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one cloud source provider\nconst _hasCloudProvider = (providers, ocpProviders) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            const ocpProvider = _getOcpProvider(ocpProviders, provider.uuid);\n            // Ensure AWS provider is filtered by OpenShift\n            if (ocpProvider) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one cloud source provider has data available for the current month (e.g., \"AWS filtered by OpenShift\")\nexport const hasCloudCurrentMonthData = (providers, ocpProviders) => {\n    return _hasCloudData(providers, ocpProviders, DataType.currentMonthData);\n};\n// Ensure at least one cloud source provider has data available (e.g., \"AWS filtered by OpenShift\")\nexport const hasCloudData = (providers, ocpProviders) => {\n    return _hasCloudData(providers, ocpProviders, DataType.hasData);\n};\n// Ensure at least one cloud source provider has data available for the previous month (e.g., \"AWS filtered by OpenShift\")\nexport const hasCloudPreviousMonthData = (providers, ocpProviders) => {\n    return _hasCloudData(providers, ocpProviders, DataType.previousMonthData);\n};\n// Ensure at least one cloud source provider (e.g., \"AWS filtered by OpenShift\"), regardless if there is OCP data\nexport const hasCloudProvider = (providers, ocpProviders) => {\n    return _hasCloudProvider(providers, ocpProviders);\n};\n// Ensure at least one source provider has data available for the current month\nexport const hasCurrentMonthData = (providers) => {\n    return _hasData(providers, DataType.currentMonthData);\n};\n// Ensure at least one source provider has data available\nexport const hasData = (providers) => {\n    return _hasData(providers, DataType.hasData);\n};\n// Ensure at least one source provider has data available for the previous month\nexport const hasPreviousMonthData = (providers) => {\n    return _hasData(providers, DataType.previousMonthData);\n};\n","import { getQueryRoute } from 'api/queries/query';\nexport const getRouteForQuery = (query, location, reset = false) => {\n    // Reset pagination\n    if (reset) {\n        if (query.filter && query.filter.offset !== undefined) {\n            query.filter = Object.assign(Object.assign({}, query.filter), { offset: 0 });\n        }\n        if (query.offset !== undefined) {\n            query.offset = 0;\n        }\n    }\n    return `${location.pathname}?${getQueryRoute(query)}`;\n};\n"],"names":["ExternalLinkAltIconConfig","name","height","width","svgPath","yOffset","xOffset","ExternalLinkAltIcon","exports","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","EmptyState","variant","EmptyStateVariant","className","children","EmptyStateIcon","icon","ExclamationCircleIcon","Title","headingLevel","size","EmptyStateBody","href","target","rel","getProvidersQuery","query","stringify","encode","indices","styles","currencySelector","display","alignItems","currencyLabel","marginBottom","marginRight","whiteSpace","currencyOptions","label","messages","value","CurrencyBase","constructor","super","defaultState","isSelectOpen","state","getSelect","currency","isDisabled","showLabel","props","selectOptions","getSelectOptions","selection","find","option","Select","undefined","id","isOpen","onSelect","handleSelect","onToggle","handleToggle","selections","SelectVariant","map","SelectOption","key","intl","options","push","toString","formatMessage","units","event","isLocalStorage","setState","render","style","TitleSizes","mapStateToProps","CurrencyConnect","connect","injectIntl","NoDataStateBase","showReload","Button","onClick","window","location","reload","NoDataState","title","PageHeader","PageHeaderTitle","PageSection","src","alt","NoOptimizationsStateBase","NoOptimizationsState","iconSpacer","marginLeft","viewSources","marginTop","global_spacer_lg","NoProvidersStateBase","getDocLink","textKey","urlKey","getRouteToSources","providerType","docUrlKey","descKey","titleKey","component","NoProvidersState","Unavailable","DetailsActionsBase","stateProps","dispatchProps","isDropdownOpen","isExportModalOpen","getExportModal","groupBy","item","reportPathsType","reportQueryString","count","items","onClose","handleExportModalClose","handleExportModalOpen","handleOnSelect","handleOnToggle","bind","showPriceListOption","source_uuid","redirectToCostModel","router","DropdownItem","unshift","includes","Dropdown","toggle","KebabToggle","isPlain","position","dropdownItems","mapDispatchToProps","costModels","DetailsActionsConnect","initHiddenColumns","hiddenColumns","Set","hidden","add","ColumnManagementModalBase","getHidden","result","delete","isHidden","has","handleChange","checked","handleClose","handleSave","onSave","selectAll","componentDidUpdate","prevProps","Modal","description","TextContent","Text","TextVariants","isInline","ModalVariant","actions","ButtonVariant","DataList","isCompact","DataListItem","DataListItemRow","DataListCheck","isChecked","onChange","DataListItemCells","dataListCells","DataListCell","ColumnManagementModalConnect","costColumn","textAlign","justifyContent","paddingRight","defaultLabel","minWidth","emptyState","backgroundColor","paddingTop","infoArrow","infoArrowDesc","bottom","infoDescription","color","fontSize","lastReported","lastReportedColumn","managedColumn","nameColumn","DataTable","getEmptyState","isOptimizations","queryFromRoute","search","filter_by","val","values","filter","showMargin","getSortBy","index","columns","orderBy","direction","order_by","getSortParams","sortBy","onSort","handleOnSort","columnIndex","isSelected","rowId","onSelected","rows","newRows","row","selected","SortByDirection","handleOnRowClick","rowIndex","onRowClick","isLoading","TableComposable","gridBreakPoint","hasSelectableRowCaption","TableVariant","Thead","Tr","col","Th","modifier","sort","isSortable","Tbody","Td","colSpan","Bullseye","Spinner","isSelectable","isHoverable","isRowSelected","_event","cells","cellIndex","dataLabel","isActionCell","select","disable","selectionDisabled","getIdKeyForGroupBy","project","cluster","node","costValue","costLabelUnit","global_FontSize_sm","global_Color_100","dateTitle","header","global_BackgroundColor_light_100","padding","headerContent","headerContentLeft","minHeight","headerContentRight","info","verticalAlign","infoIcon","global_FontSize_md","infoTitle","fontWeight","paddingBottom","global_spacer_sm","groupByOptions","tagPathsType","DetailsHeaderBase","isExportsFeatureEnabled","onCurrencySelected","onGroupBySelected","providers","providersError","report","showContent","meta","cost","supplementaryCost","infrastructureCost","total","hasCost","hasSupplementaryCost","supplementary","hasInfrastructureCost","infrastructure","format","showTags","Tooltip","content","enableFlip","providersQueryString","providersFetchStatus","featureFlags","DetailsHeader","DetailsTableColumnIds","DetailsTableBase","initDatum","groupByTagKey","isAllSelected","selectedItems","showDefaultProject","computedItems","idKey","getTotalCost","monthOverMonth","getMonthOverMonthCost","getSupplementaryCost","InfrastructureCost","getInfrastructureCost","desc","getActions","Link","to","basePath","routes","default_project","Label","filteredColumns","column","filteredRows","_a","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","cell","percentValue","toFixed","Math","abs","delta_value","percentage","delta_percent","showPercentage","showValue","iconOverride","componentDidMount","currentReport","data","JSON","DetailsTable","tagType","DetailsToolbarBase","getCategoryOptions","tagReport","updateReport","fetchTag","tagQueryString","categoryOptions","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onColumnManagementClicked","onExportClicked","onFilterAdded","onFilterRemoved","pagination","resourcePathsType","showBulkSelect","showColumnManagement","showExcludes","showExport","showFilter","resolution","time_scope_units","time_scope_value","key_only","limit","tagReportFetchStatus","DetailsToolbarConnect","DetailsToolbar","ocpDetails","paginationContainer","global_spacer_md","tableContainer","toolbarContainer","baseQuery","offset","exclude","group_by","defaultColumnOptions","reportType","RhelDetails","isColumnManagementModalOpen","getColumnManagementModal","cloneDeep","handleColumnManagementModalClose","handleColumnManagementModalSave","getComputedItems","groupById","isAllItems","getPagination","isBottom","page","trunc","Pagination","itemCount","onPerPageSelect","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","PaginationVariant","widgetId","getTable","reportFetchStatus","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","handleColumnManagementModalOpen","action","handleGroupBySelected","groupByKey","newQuery","parse","category","navigate","replace","newItems","fetchReport","prevState","reportError","noReport","noLocation","reportQuery","delta","reset","handleOnCurrencySelected","handleOnCostTypeSelected","handleOnCostDistributionSelected","handleOnFilterAdded","filteredQuery","handleOnFilterRemoved","handleOnPerPageSelect","handleOnSetPage","date","DataType","_getOcpProvider","ocpProviders","uuid","provider","filterProviders","sourceType","source_type","toLowerCase","_hasData","datumType","_hasCloudData","dataType","ocpProvider","hasCloudCurrentMonthData","currentMonthData","hasCloudData","hasData","hasCloudPreviousMonthData","previousMonthData","hasCloudProvider","_hasCloudProvider","hasCurrentMonthData","hasPreviousMonthData","getRouteForQuery","pathname"],"sourceRoot":""}