{"version":3,"file":"js/explorer.b644aed249d7da81932e.js","mappings":"iGAEAA,EAAQ,GAAuB,CAC7B,KAAQ,4BACR,MAAS,UACT,IAAO,2CAEYA,EAAQ,E,gBCL7BA,EAAQ,GAAuB,CAC7B,KAAQ,4BACR,MAAS,UACT,IAAO,2CAEYA,EAAQ,E,gBCL7BA,EAAQ,GAAyB,CAC/B,KAAQ,8BACR,MAAS,UACT,IAAO,6CAEYA,EAAQ,E,gBCL7BA,EAAQ,GAAmB,CACzB,KAAQ,0BACR,MAAS,UACT,IAAO,gCAETA,EAAA,GAAqBA,EAAQ,E,kDCNtB,SAASC,EAAmBC,GAC/B,OAAO,IAAAC,WAAUD,EAAO,CAAEE,QAAQ,EAAOC,SAAS,GACtD,C,iFCCA,MAAMC,EAA2B,CAAC,CAAEC,MAAOC,EAAA,oBAA4BC,MAAO,QAExEC,EAA8B,CAAC,CAAEH,MAAOC,EAAA,oBAA4BC,MAAO,YAE3EE,EAA6B,CAAC,CAAEJ,MAAOC,EAAA,oBAA4BC,MAAO,UAE1EG,EAA2B,CAAC,CAAEL,MAAOC,EAAA,oBAA4BC,MAAO,QAExEI,EAAgC,CAAC,CAAEN,MAAOC,EAAA,oBAA4BC,MAAO,cAE7EK,EAA2B,CAAC,CAAEP,MAAOC,EAAA,oBAA4BC,MAAO,QAExEM,EAA8B,CAAC,CAAER,MAAOC,EAAA,oBAA4BC,MAAO,YAE3EO,EAA2B,CAAC,CAAET,MAAOC,EAAA,oBAA4BC,MAAO,QAExEQ,EAA8B,CAAC,CAAEV,MAAOC,EAAA,oBAA4BC,MAAO,YAE3ES,EAAgC,CAAC,CAAEX,MAAOC,EAAA,oBAA4BC,MAAO,cAE7EU,EAAa,CAAC,CAAEZ,MAAOC,EAAA,oBAA4BC,MAAO,QAE1DW,EAAc,CAAC,CAAEb,MAAOC,EAAA,oBAA4BC,MAAO,SAC3DY,EAA2B,EAAGC,SAAQC,YAAWC,WAAUC,cAAaC,SAAQC,YAAWC,SAAQC,YAAWC,SAAQC,0BACxH,MAAMC,EAAU,GA4BhB,OA3BIV,GACAU,EAAQC,QAAQ3B,GAEhBiB,GACAS,EAAQC,QAAQvB,GAEhBgB,GACAM,EAAQC,QAAQnB,GAEhBa,GACAK,EAAQC,QAAQlB,GAEhBa,GACAI,EAAQC,QAAQjB,GAEhBa,GAAaE,GACbC,EAAQC,QAAQhB,GAEhBO,GACAQ,EAAQC,QAAQtB,GAEhBc,GACAO,EAAQC,QAAQpB,GAEhBiB,GACAE,EAAQC,QAAQrB,GAEboB,CAAO,EA0DlB,EAxDoB,EAAGE,cAAaZ,SAAQC,YAAWC,WAAUC,cAAaC,SAAQC,YAAWC,SAAQC,YAAWC,SAAQK,SAAQC,cAAaC,UAASC,aAAYP,sBAAqBQ,sBAAqBC,YAAWC,iBAEvN,MAAMT,EAAU,GAoDhB,YAlD4BU,IAAxBH,QAAmDG,IAAdF,EACjCD,GACIH,GACAJ,EAAQC,QAAQf,GAEpBc,EAAQC,QAAQZ,EAAyB,CACrCC,SACAC,YACAC,WACAC,cACAC,SACAC,YACAC,SACAC,YACAC,SACAC,0BAGCS,EACDH,GACAL,EAAQC,QAAQb,GAGfe,GACLH,EAAQC,QAAQd,IAIhBgB,GACAH,EAAQC,QAAQd,GAEhBiB,GACAJ,EAAQC,QAAQf,GAEhBmB,GACAL,EAAQC,QAAQb,GAEpBY,EAAQC,QAAQZ,EAAyB,CACrCC,SACAC,YACAC,WACAC,cACAC,SACAC,YACAC,SACAC,YACAC,SACAC,0BAGA,kBAAoB,IAAmB,CAAEG,YAAaA,GAAeF,EAAQ,GAAGvB,MAAO6B,WAAYA,EAAYG,WAAYA,EAAYT,QAASA,GAAW,C,8UChHhK,SAASW,EAAmBC,EAAU,CAAC,GAC1C,OAAIA,EAAQC,QACD,UAEPD,EAAQE,QACD,UAEPF,EAAQG,YACD,cAEPH,EAAQI,KACD,OAEPJ,EAAQK,YACD,cAEPL,EAAQM,gBACD,kBAEPN,EAAQO,gBACD,kBAEPP,EAAQQ,QACD,UAEPR,EAAQS,OACD,SAEPT,EAAQU,kBACD,oBAEPV,EAAQW,QACD,UAEPX,EAAQY,aACD,eAEPZ,EAAQa,kBACD,oBAEJ,MACX,C,sGCtCO,MAAMC,EAAS,CAClBC,eAAgB,CACZC,gBAAiBC,EAAA,SACjBC,WAAYC,EAAA,SACZC,YAAaD,EAAA,SACbE,aAAcF,EAAA,SACdG,cAAeH,EAAA,SACfI,WAAYJ,EAAA,UAEhBK,aAAc,CACVD,WAAYJ,EAAA,UAEhBM,SAAU,CACNC,UAAW,QAEfC,oBAAqB,CACjBT,WAAYC,EAAA,SACZC,YAAaD,EAAA,UAEjBS,WAAY,CACRZ,gBAAiBC,EAAA,SACjBK,cAAeO,EAAA,SACfN,WAAYM,EAAA,UAEhBC,eAAgB,CACZZ,WAAYC,EAAA,SACZC,YAAaD,EAAA,UAEjBY,aAAc,CACVT,cAAeH,EAAA,SACfI,WAAYJ,EAAA,UAEhBa,iBAAkB,CACdd,WAAYC,EAAA,SACZC,YAAaD,EAAA,W,kaC3BrB,SAASc,GAAkBC,EAAKC,IAAkB,MAAPA,GAAeA,EAAMD,EAAIE,UAAQD,EAAMD,EAAIE,QAAQ,IAAK,IAAIC,EAAI,EAAGC,EAAO,IAAIC,MAAMJ,GAAME,EAAIF,EAAKE,IAAOC,EAAKD,GAAKH,EAAIG,GAAM,OAAOC,CAAM,CAMtL,SAASE,GAAQC,EAAQC,GAAkB,IAAIC,EAAOC,OAAOD,KAAKF,GAAS,GAAIG,OAAOC,sBAAuB,CAAE,IAAIC,EAAUF,OAAOC,sBAAsBJ,GAASC,IAAmBI,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAOJ,OAAOK,yBAAyBR,EAAQO,GAAKE,UAAY,KAAKP,EAAKtD,KAAK8D,MAAMR,EAAMG,EAAU,CAAE,OAAOH,CAAM,CAEpV,SAASS,GAAcC,GAAU,IAAK,IAAIhB,EAAI,EAAGA,EAAIiB,UAAUlB,OAAQC,IAAK,CAAE,IAAIkB,EAAS,MAAQD,UAAUjB,GAAKiB,UAAUjB,GAAK,CAAC,EAAGA,EAAI,EAAIG,GAAQI,OAAOW,IAAS,GAAIC,SAAQ,SAAUC,GAAOC,GAAgBL,EAAQI,EAAKF,EAAOE,GAAO,IAAKb,OAAOe,0BAA4Bf,OAAOgB,iBAAiBP,EAAQT,OAAOe,0BAA0BJ,IAAWf,GAAQI,OAAOW,IAASC,SAAQ,SAAUC,GAAOb,OAAOiB,eAAeR,EAAQI,EAAKb,OAAOK,yBAAyBM,EAAQE,GAAO,GAAI,CAAE,OAAOJ,CAAQ,CAEzf,SAASK,GAAgBI,EAAKL,EAAK5F,GAAiK,OAApJ4F,KAAOK,EAAOlB,OAAOiB,eAAeC,EAAKL,EAAK,CAAE5F,MAAOA,EAAOqF,YAAY,EAAMa,cAAc,EAAMC,UAAU,IAAkBF,EAAIL,GAAO5F,EAAgBiG,CAAK,CAKhN,IAAIG,GAAgB,CAClBC,MAAO,IACPC,OAAQ,IACRC,QAAS,IAqGX,SAASC,GAAUC,EAAOC,GACxB,IACIC,EADmB,MAA4BF,EAAOC,GACfE,KAAI,SAAUC,GACvD,OAAOA,EAAQ3B,QAAO,SAAU4B,GAC9B,OAAoB,OAAbA,EAAMC,IAA4B,OAAbD,EAAME,EACpC,GACF,IACIC,EAzGN,SAAkBR,EAAOQ,GACvB,IAAIC,EAAoBT,EAAMS,kBAC1BC,EAAOF,EAASG,QAAO,SAAUC,EAAMR,GAIzC,OAHAA,EAAQlB,SAAQ,SAAUmB,GACxBO,EAAKP,EAAMC,cAAcO,KAAOR,EAAMC,GAAGQ,UAAYT,EAAMC,KAAM,CACnE,IACOM,CACT,GAAG,CAAC,GAEAG,EAAQ,KAAML,GAAMP,KAAI,SAAUa,GACpC,OAAOC,OAAOD,EAChB,IAEIE,EAAO,KAASH,GAEpB,OAAOP,EAASL,KAAI,SAAUC,GAC5B,IAAIe,EAAc,EACdC,EAAShB,EAAQ,IAAMA,EAAQ,GAAGE,cAAcO,KAkCpD,OAjCmBK,EAAKf,KAAI,SAAUkB,EAAGC,GACvCD,EAAIJ,OAAOI,GACX,IAAIhB,EAAQD,EAAQkB,EAAQH,GAE5B,GAAId,EAAO,CAGT,IAFSe,EAASf,EAAMC,GAAGQ,UAAYT,EAAMC,MAElCe,EACT,OAAOhB,EAGTc,IAEA,IAAIZ,EAAKE,EAAoB,EAAI,KAGjC,MAAO,CACLY,EAFFA,EAAID,EAAS,IAAIP,KAAKQ,GAAKA,EAGzBE,EAAGhB,EACHD,GAAIe,EACJd,GAAIA,EAER,CAEA,IAAIgB,EAAId,EAAoB,EAAI,KAEhC,MAAO,CACLY,EAFFA,EAAID,EAAS,IAAIP,KAAKQ,GAAKA,EAGzBE,EAAGA,EACHjB,GAAIe,EACJd,GAAIgB,EAER,GAEF,GACF,CAoDiBC,CAASxB,EAAOE,GAC/B,OAAOM,EAASL,KAAI,SAAUsB,EAAG1D,GAC/B,OAvBJ,SAAuBiC,EAAOQ,EAAUc,GACtC,IAAII,EAAU1B,EAAM0B,SAAW,EAC/B,OAAOlB,EAASc,GAAOnB,KAAI,SAAUE,GACnC,IAAIsB,EAhCR,SAAetB,EAAOiB,EAAOd,GAC3B,GAAIH,EAAMuB,GACR,OAAOvB,EAAMuB,GAGf,IAAIL,EAAIlB,EAAME,GACVsB,EAAQxB,EAAMyB,OACdC,EAAuBvB,EAAS,GAAGL,KAAI,SAAUsB,GACnD,OAAOA,EAAEG,EACX,IAEII,EADmBxB,EAASyB,MAAM,EAAGX,GACHX,QAAO,SAAUC,EAAMR,GAC3D,OAAOQ,EAAKsB,OAAO9B,EAAQ3B,QAAO,SAAU0D,GAC1C,OAAO9B,EAAMC,cAAcO,KAAOsB,EAAc7B,GAAGQ,YAAcT,EAAMC,GAAGQ,UAAYqB,EAAc7B,KAAOD,EAAMC,EACnH,IAAGH,KAAI,SAAUgC,GACf,OAAOA,EAAc5B,IAAM,CAC7B,IACF,GAAG,IACCqB,EAAKI,EAAelE,QAAUkE,EAAerB,QAAO,SAAUyB,EAAM7I,GAEtE,OADegI,EAAI,GAAKhI,EAAQ,GAAKgI,GAAK,GAAKhI,GAAS,EACtC0H,OAAO1H,GAAS6I,EAAOA,CAC3C,GAAGL,EAAqBF,IAAU,GAClC,OAAOG,EAAeK,MAAK,SAAUC,GACnC,OAAOA,aAAiBzB,IAC1B,IAAK,IAAIA,KAAKe,GAAMA,CACtB,CAOkBW,CAAMlC,EAAOiB,EAAOd,IAAa,EAC/C,OAAO,KAAQ,CAAC,EAAGH,EAAO,CACxBmC,IAAOnC,EAAME,cAAcM,KAAkBc,EAAU,IAAId,KAAKc,GAAWtB,EAAME,GAA9CoB,EACnCc,IAAkB,OAAbpC,EAAME,GAAc,KAAOF,EAAME,cAAcM,KAAO,IAAIA,KAAKI,OAAOZ,EAAME,IAAMU,OAAOU,IAAYtB,EAAME,GAAKoB,EACrHe,IAAkB,OAAbrC,EAAMC,GAAc,KAAOD,EAAMC,cAAcO,KAAO,IAAIA,KAAKI,OAAOZ,EAAMC,IAAMW,OAAOS,IAAYrB,EAAMC,GAAKoB,GAEzH,GACF,CAaWiB,CAAc3C,EAAOQ,EAAUzC,EACxC,GACF,CAEO,SAAS6E,GAAmB5C,EAAOC,GACxCA,EAAkBA,GAAmB,qBAAuBD,EAAM6C,UAClE,IAAIC,EAAO,QACX9C,EAAQ,MAAoBA,EAAOL,GAAemD,GAClD,IAAIC,EAAQ,MAAiB/C,EAAMgD,MAAOhD,EAAM+C,MAAOD,GACnDG,EAAajD,EAAMiD,YAAc,MAAsBjD,EAAOC,GAC9DO,EAAWR,EAAMQ,UAAYT,GAAUC,EAAOC,GAC9C4C,EAAW5C,EAAgBE,KAAI,SAAU+C,EAAGnF,GAC9C,OAAoB,iBAAmBmF,EAAG,CACxCC,KAAM3C,EAASzC,IAEnB,IACIqF,EAAS,CACX/B,EAAG,MAAkB,KAAQ,CAAC,EAAGrB,EAAO,CACtCiD,WAAYA,IACV,IAAKJ,GACTtB,EAAG,MAAkB,KAAQ,CAAC,EAAGvB,EAAO,CACtCiD,WAAYA,IACV,IAAKJ,IAEPQ,EAAQrD,EAAMqD,OAAS,CACzBhC,EAAG,MAAiBrB,EAAO,KAC3BuB,EAAG,MAAiBvB,EAAO,MAEzBsD,EAAY,CACdjC,EAAG,MAAwBrB,EAAO,MAAQ,MAAiBA,EAAO,KAClEuB,EAAG,MAAwBvB,EAAO,MAAQ,MAAiBA,EAAO,MAEhEuD,EAAQ,CACVlC,EAAGiC,EAAUjC,EAAE+B,OAAOA,EAAO/B,GAAGgC,MAAMrD,EAAMwD,WAAaH,EAAM9B,EAAI8B,EAAMhC,GACzEE,EAAG+B,EAAU/B,EAAE6B,OAAOA,EAAO7B,GAAG8B,MAAMrD,EAAMwD,WAAaH,EAAMhC,EAAIgC,EAAM9B,IAEvEkC,EAASzD,EACT0D,EAAaD,EAAOC,WACpBF,EAAaC,EAAOD,WACxB,MAAO,CACLhD,SAAUA,EACVyC,WAAYA,EACZI,MAAOA,EACPD,OAAQA,EACRI,WAAYA,EACZD,MAAOA,EACPR,MAAOA,EACPW,WAAYA,EACZZ,KAAMA,EAEV,CA+DA,SAASa,GAAc3D,EAAO4D,GAC5B,IAAId,EAAOc,EAAMC,MAAQD,EAAMC,KAAKf,KAChCgB,EAAoBF,EAAM5D,MAAM0D,YAAc1D,EAAM0D,WAExD,GAAa,UAATZ,GAA6B,UAATA,EAIxB,OAAO9C,EAAMgD,MAAQc,GAAqB9D,EAAMgD,MAAMhD,MAAM0D,WAAaI,CAC3E,CAEO,SAASC,GAAY/D,EAAOC,EAAiB+D,GAClDhE,EAAQ,MAAoBA,EAAOL,GAAe,SAClDM,EAAkBA,GAAmB,qBAAuBD,EAAM6C,UAElE,IACIrC,GAFJwD,EAAkBA,GAAmBpB,GAAmB5C,EAAOC,IAE/BO,SAC5ByD,EArCC,SAAuBjE,EAAOgE,GACnC,IAAIf,EAAae,EAAgBf,WAC7BG,EAASY,EAAgBZ,OACzBC,EAAQW,EAAgBX,MACxBE,EAAQS,EAAgBT,MACxBC,EAAaQ,EAAgBR,WACjC,MAAO,CACL3D,OAAQG,EAAMH,OACdD,MAAOI,EAAMJ,MACbE,QAAS,MAAmBE,GAC5BkE,YAAY,EACZlB,MAAOhD,EAAMgD,MACbC,WAAYA,EACZG,OAAQA,EACRC,MAAOA,EACPE,MAAOA,EACPC,WAAYA,EAEhB,CAmBmBW,CAAcnE,EAAOgE,GAClCI,EAAapE,EAAMqE,MAAQ,QAC/B,OAAOpE,EAAgBE,KAAI,SAAUyD,EAAOtC,GAC1C,IAAIwB,EAAOc,EAAMC,MAAQD,EAAMC,KAAKf,KAChCK,EAAO3C,EAASc,GAChByB,EAAQ,MAAsBa,EAAOtC,EAAO0C,GAC5CM,EAAStE,EAAMsE,OAnDvB,SAAmBtE,EAAOQ,EAAUc,GAClC,GAAKtB,EAAMsE,OAIX,OAAO9D,EAAS1C,SAAWwD,EAAQ,EAAItB,EAAMsE,YAAS9I,CACxD,CA6CgC+I,CAAUvE,EAAOQ,EAAUc,GAASsC,EAAM5D,MAAMsE,OACxED,EAAOT,EAAM5D,MAAMqE,MAAQ,GAAGnC,OAAOkC,EAAY,KAAKlC,OAAOY,EAAM,KAAKZ,OAAOZ,GACnF,OAAoB,iBAAmBsC,EAAO,KAAQ,CACpDzE,IAAK,GAAG+C,OAAOmC,EAAM,SAASnC,OAAOZ,GACrCgD,OAAQA,EACRD,KAAMA,EACNG,cAAeZ,EAAM5D,MAAMwE,eAAiBxE,EAAMwE,cAClDxB,MAAOhD,EAAMgD,MACbyB,eAAgBzE,EAAMyE,gBAAkBb,EAAM5D,MAAMyE,eACpD1B,MAAOA,EACPW,WAAYC,GAAc3D,EAAO4D,GACjCT,KAAMA,EACNuB,MAAO1E,EAAM0E,OACZT,GACL,GACF,CC7RA,SAAS,GAAQ9F,EAAQC,GAAkB,IAAIC,EAAOC,OAAOD,KAAKF,GAAS,GAAIG,OAAOC,sBAAuB,CAAE,IAAIC,EAAUF,OAAOC,sBAAsBJ,GAASC,IAAmBI,EAAUA,EAAQC,QAAO,SAAUC,GAAO,OAAOJ,OAAOK,yBAAyBR,EAAQO,GAAKE,UAAY,KAAKP,EAAKtD,KAAK8D,MAAMR,EAAMG,EAAU,CAAE,OAAOH,CAAM,CAEpV,SAAS,GAAcU,GAAU,IAAK,IAAIhB,EAAI,EAAGA,EAAIiB,UAAUlB,OAAQC,IAAK,CAAE,IAAIkB,EAAS,MAAQD,UAAUjB,GAAKiB,UAAUjB,GAAK,CAAC,EAAGA,EAAI,EAAI,GAAQO,OAAOW,IAAS,GAAIC,SAAQ,SAAUC,GAAO,GAAgBJ,EAAQI,EAAKF,EAAOE,GAAO,IAAKb,OAAOe,0BAA4Bf,OAAOgB,iBAAiBP,EAAQT,OAAOe,0BAA0BJ,IAAW,GAAQX,OAAOW,IAASC,SAAQ,SAAUC,GAAOb,OAAOiB,eAAeR,EAAQI,EAAKb,OAAOK,yBAAyBM,EAAQE,GAAO,GAAI,CAAE,OAAOJ,CAAQ,CAEzf,SAAS,GAAgBS,EAAKL,EAAK5F,GAAiK,OAApJ4F,KAAOK,EAAOlB,OAAOiB,eAAeC,EAAKL,EAAK,CAAE5F,MAAOA,EAAOqF,YAAY,EAAMa,cAAc,EAAMC,UAAU,IAAkBF,EAAIL,GAAO5F,EAAgBiG,CAAK,CAQhN,IAAI,GAAgB,CAClBI,MAAO,IACPC,OAAQ,IACRC,QAAS,IAGP6E,GAAmB,SAAUC,GAE/B,IAAI9B,EAAO+B,GAAa/B,KAEpBgC,EAAwB,OACxBC,EAAoBD,EAAsBC,kBAC1CC,EAAoBF,EAAsBE,kBAG1ChF,GAAQiF,EAFGH,EAAsBG,UAEhBL,GACjBM,EAAgB,MAAoBlF,EAAO,GAAe8C,GAC1DqC,EAAWD,EAAcC,SACzBC,EAAqBF,EAAcE,mBACnClB,EAAagB,EAAchB,WAC3BmB,EAAiBH,EAAcG,eAC/BC,EAAyBJ,EAAcI,uBACvC1F,EAAQsF,EAActF,MACtBC,EAASqF,EAAcrF,OACvBmD,EAAQkC,EAAclC,MACtB0B,EAAQQ,EAAcR,MACtBlB,EAAa0B,EAAc1B,WAC3Ba,EAAOa,EAAcb,KACrBpE,EAAkB,qBAAuBiF,EAAcrC,UACvDmB,ED8JC,SAA0BY,GAC/B,IAxMsBhH,EAAKG,EAwMvBmH,EAboB,SAAUlF,GAClC,IAAI6C,EAAW7C,EAAM6C,SACjB0C,EAAmB,qBAAuB1C,GAAU1C,KAAI,SAAUqF,GACpE,IAAI5B,EAAQ4B,EACZ,OAAO1G,GAAcA,GAAc,CAAC,EAAG8E,GAAQ,CAAC,EAAG,CACjD5D,MAAO,MAAa4D,EAAM5D,MAAO,CAAC,kBAEtC,IAEA,OADAA,EAAM6C,SAAW0C,EACVvF,CACT,CAGsByF,CAAoBb,GAGpCc,GA3MkB9H,EA0MA,aAAesH,GA1MVnH,EA2M4B,EAjMzD,SAAyBH,GAAO,GAAIK,MAAM0H,QAAQ/H,GAAM,OAAOA,CAAK,CAV3BgI,CAAgBhI,IAQzD,SAA+BA,EAAKG,GAAK,IAAI8H,EAAY,MAAPjI,EAAc,KAAyB,oBAAXkI,QAA0BlI,EAAIkI,OAAOC,WAAanI,EAAI,cAAe,GAAU,MAANiI,EAAJ,CAAwB,IAAkDG,EAAIC,EAAlDC,EAAO,GAAQC,GAAK,EAAUC,GAAK,EAAmB,IAAM,IAAKP,EAAKA,EAAGQ,KAAKzI,KAAQuI,GAAMH,EAAKH,EAAGS,QAAQC,QAAoBL,EAAKnL,KAAKiL,EAAGzM,QAAYwE,GAAKmI,EAAKpI,SAAWC,GAA3DoI,GAAK,GAAkE,CAAE,MAAOK,GAAOJ,GAAK,EAAMH,EAAKO,CAAK,CAAE,QAAU,IAAWL,GAAsB,MAAhBN,EAAW,QAAWA,EAAW,QAAK,CAAE,QAAU,GAAIO,EAAI,MAAMH,CAAI,CAAE,CAAE,OAAOC,CAAjV,CAAuV,CAR/bO,CAAsB7I,EAAKG,IAI5F,SAAqC2I,EAAGC,GAAU,GAAKD,EAAL,CAAgB,GAAiB,iBAANA,EAAgB,OAAO/I,GAAkB+I,EAAGC,GAAS,IAAIC,EAAItI,OAAOuI,UAAUC,SAAST,KAAKK,GAAGzE,MAAM,GAAI,GAAiE,MAAnD,WAAN2E,GAAkBF,EAAEK,cAAaH,EAAIF,EAAEK,YAAY1C,MAAgB,QAANuC,GAAqB,QAANA,EAAoB3I,MAAM+I,KAAKN,GAAc,cAANE,GAAqB,2CAA2CK,KAAKL,GAAWjJ,GAAkB+I,EAAGC,QAAzG,CAA7O,CAA+V,CAJ7TO,CAA4BtJ,EAAKG,IAEnI,WAA8B,MAAM,IAAIoJ,UAAU,4IAA8I,CAFvDC,IA4MnIpH,EAAQ0F,EAAiB,GACzB2B,EAAW3B,EAAiB,GAShC,OALA,eAAgB,WACT,KAAQR,EAAelF,IAC1BqH,EAASnC,EAEb,GAAG,CAAClF,EAAOqH,EAAUnC,IACd,aAAc,WACnB,OAAOtC,GAAmB5C,EAAOA,EAAM6C,SACzC,GAAG,CAAC7C,GACN,CChLwBsH,CAAiBpC,GACnC9B,EAASY,EAAgBZ,OACzBG,EAAQS,EAAgBT,MACxBR,EAAQiB,EAAgBjB,MACxBwE,EAAc,aAAc,WAe9B,OAdexD,GAAY/D,EAAOC,EAAiB+D,GACpB7D,KAAI,SAAUyD,EAAOtC,GAClD,IAAI2C,EAAa,KAAQ,CACvBuD,QAASxC,EAAkBhF,EAAO4D,EAAOtC,IACxCsC,EAAM5D,OAET,OAAoB,iBAAmB4D,EAAOK,EAChD,IAOuBwD,SACzB,GAAG,CAACzH,EAAOC,EAAiB+D,EAAiBgB,IACzC0C,EAAiB,aAAc,WACjC,OAAIxD,EACK,CACLd,OAAQA,EACRG,MAAOA,EACP3D,MAAOA,EACPC,OAAQA,EACRqE,WAAYA,EACZlB,MAAOA,EACPD,MAAOA,EAAM4E,OACbnE,WAAYA,EACZkB,MAAOA,EACPL,KAAMA,GAIH,CAAC,CACV,GAAG,CAACH,EAAYd,EAAQG,EAAO3D,EAAOC,EAAQmD,EAAOD,EAAOS,EAAYkB,EAAOL,IAC3EuD,EAAY,aAAc,WAC5B,OAAO,KAA2BhD,EACpC,GAAG,CAACA,IACAiD,EAAY,aAAc,WAC5B,GAAI3D,EAAY,CACd,IAAI4D,EAAwB,KAAU,CAAC,EAAG1C,EAAmBpF,MAAO0H,EAAgBE,GAEpF,OAAoB,iBAAmBxC,EAAoB0C,EAC7D,CAEA,OAAoB,iBAAmBzC,EAAgBuC,EACzD,GAAG,CAACvC,EAAgBnB,EAAYkB,EAAoBsC,EAAgBE,IAChEG,EAAS,aAAc,WACzB,OAAO,MAAqB/H,EAC9B,GAAG,CAACA,IACAgI,EAAgB,KAAuBpD,GAU3C,OATA,eAAgB,WAEd,OAAO,WACDA,EAAa4C,SACfzC,EAAkBiD,EAAepD,EAErC,CACF,GAAG,CAACG,EAAmBiD,EAAepD,IAEjC,IAASmD,GASM,iBAAmBF,EAAWA,EAAU7H,MAAOuH,GAR7C,kBAAoB,KAAqB,CAC3DM,UAAWA,EACX1C,SAAUA,EACV4C,OAAQA,EACRzC,uBAAwBA,GACvBiC,EAIP,EAEA5C,GAAiBsD,UAAY,GAAc,GAAc,CAAC,EAAG,gBAAwB,CAAC,EAAG,CACvFC,KAAM,eAAoB,CAAC,aAAkB,eAAoB,CAAC,MAA6B,gBAAqBrH,SAAU,QAC9HoC,WAAY,eAAoB,CAAC,aAAkB,aAAmB,WAAgB,CACpF5B,EAAG,aAAkB,aACrBE,EAAG,aAAkB,iBAEvBsB,SAAU,eAAoB,CAAC,aAAkB,WAAiB,YAClEa,WAAY,eAAoB,CAAC,aAAkB,aAAmB,WAAgB,CAAC,YAAa,cAAe,UAAW,OAAQ,OAAQ,MAAO,QAAS,WAC9JjD,kBAAmB,UACnB+C,WAAY,UACZiB,eAAgB,aAChBH,OAAQ,eAAoB,CAAC,UAAgB,aAC7CvB,MAAO,WAAgB,CACrB4E,OAAQ,YACRxE,KAAM,YACNmB,OAAQ,cAEV5C,QAAS,cAEXiD,GAAiBwD,aAAe,CAC9B/C,mBAAiC,kBAAoB,KAAkB,MACvEC,eAA6B,kBAAoB,IAAK,MACtDnB,YAAY,EACZlB,MAAO,eACPvC,mBAAmB,GAErB,IAAI2H,GAAkB,CACpBtF,KAAM,QACNuF,mBAAoB,CAAC,iBAAkB,qBAAsB,kBAC7DtE,YAAaA,IAEJc,GAAevG,OAAOgK,OAAqB,SAAW3D,GAAkB,MAAUyD,IAC7FvD,GAAa0D,YAAc,e,oDCnJpB,MAAMC,GAAcC,IACvB,IAAI,SAAEC,EAAQ,UAAEC,EAAS,SAAE9F,EAAQ,WAAEa,EAAU,mBAAE0B,EAAqB,gBAAoBwD,GAAA,EAAgB,MAAK,YAAEC,EAAW,aAAEC,EAAY,WAAEC,EAAU,aAEtJC,EAAY,MAEZhG,GAAQ,SAAS+F,IAAgBN,EAAIQ,GAAO,QAAOR,EAAI,CAAC,WAAY,YAAa,WAAY,aAAc,qBAAsB,cAAe,eAAgB,aAAc,eAAgB,UAE9L,MAAMZ,EAAY,eAAmBzC,EAAoB9G,OAAOgK,OAAOhK,OAAOgK,OAAO,CAAEY,KAAMR,EAAUS,MAAOR,EAAW3F,SAASoC,EAAmBpF,OAAQ,CAAEoJ,WAAW,KAAAC,GAAa,CAAED,UAAWhE,EAAmBpF,MAAMoJ,gBAEvN,oBAAEE,IAAwB,SAAuB,CACnD5F,aACAmF,cACAC,eACAS,gBAAiBvG,EAAMwG,MAAM9F,aAGjC,OAAQ,gBAAoBmB,GAAcvG,OAAOgK,OAAO,CAAE5E,WAAYA,EAAY0B,mBAAoByC,EAAW7E,MAAOA,GAASiG,IAAO,SAA2B,CAC/JpG,WACAiG,aAAcQ,IACd,EAERd,GAAWD,YAAc,aAEzB,IAAqBC,GAAY3D,I,uICvB1B,MAAM4E,GAAc,CAEvB/F,WAAY,CACRgG,GAAA,SACAC,GAAA,SACAC,GAAA,SACAC,GAAA,SACAC,GAAA,SACAC,GAAA,UAEJC,MAAO,CACHC,UAAW,CACPnK,QAAS,IAEboK,KAAM,CACFC,OAAQ,QAEZC,MAAO,CACHD,OAAQ,SAGhBE,SAAU,CACNC,WAAY,CACRC,SAAU,IAGlBC,MAAO,CACHP,UAAW,CACPnK,QAAS,IAEboK,KAAM,CACFC,OAAQ,QAEZC,MAAO,CACHD,OAAQ,UC7BpB,MAAMM,WAA8B,cAChC1D,cACI2D,SAAS1L,WACT2L,KAAKC,aAAe,gBACpBD,KAAKE,SAAWC,GAAA,EAChBH,KAAKI,MAAQ,CACTC,aAAc,IAAIC,IAClBC,WAAY,GACZtL,MAAO,GAEX+K,KAAKQ,UAAY,KACb,MAAM,WAAEC,EAAU,WAAEC,EAAU,WAAEC,EAAU,WAAEC,EAAU,WAAEC,EAAU,WAAEC,GAAed,KAAK3K,MAClF0L,EAAS,GACf,GAAIN,GAAcA,EAAWtN,OAAQ,CACjC,MAAMuG,EAAOsG,KAAKgB,mBAAmBP,EAAW,GAAG/G,MACnDqH,EAAO3Q,KAAK,CACR6Q,UAAW,aACXzI,KAAMwH,KAAKkB,mBAAmBT,EAAY,cAC1CU,WAAY,CACRzH,OACA0H,OAAQ,CACJC,KAAMvC,GAAY/F,WAAW,IAEjCuI,QAAS5H,GAEbtB,MAAO,CACHI,KAAM,CACF6I,KAAMvC,GAAY/F,WAAW,MAI7C,CACA,GAAI2H,GAAcA,EAAWvN,OAAQ,CACjC,MAAMuG,EAAOsG,KAAKgB,mBAAmBN,EAAW,GAAGhH,MACnDqH,EAAO3Q,KAAK,CACR6Q,UAAW,aACXzI,KAAMwH,KAAKkB,mBAAmBR,EAAY,cAC1CS,WAAY,CACRzH,OACA0H,OAAQ,CACJC,KAAMvC,GAAY/F,WAAW,IAEjCuI,QAAS5H,GAEbtB,MAAO,CACHI,KAAM,CACF6I,KAAMvC,GAAY/F,WAAW,MAI7C,CACA,GAAI4H,GAAcA,EAAWxN,OAAQ,CACjC,MAAMuG,EAAOsG,KAAKgB,mBAAmBL,EAAW,GAAGjH,MACnDqH,EAAO3Q,KAAK,CACR6Q,UAAW,aACXzI,KAAMwH,KAAKkB,mBAAmBP,EAAY,cAC1CQ,WAAY,CACRzH,OACA0H,OAAQ,CACJC,KAAMvC,GAAY/F,WAAW,IAEjCuI,QAAS5H,GAEbtB,MAAO,CACHI,KAAM,CACF6I,KAAMvC,GAAY/F,WAAW,MAI7C,CACA,GAAI6H,GAAcA,EAAWzN,OAAQ,CACjC,MAAMuG,EAAOsG,KAAKgB,mBAAmBJ,EAAW,GAAGlH,MACnDqH,EAAO3Q,KAAK,CACR6Q,UAAW,aACXzI,KAAMwH,KAAKkB,mBAAmBN,EAAY,cAC1CO,WAAY,CACRzH,OACA0H,OAAQ,CACJC,KAAMvC,GAAY/F,WAAW,IAEjCuI,QAAS5H,GAEbtB,MAAO,CACHI,KAAM,CACF6I,KAAMvC,GAAY/F,WAAW,MAI7C,CACA,GAAI8H,GAAcA,EAAW1N,OAAQ,CACjC,MAAMuG,EAAOsG,KAAKgB,mBAAmBH,EAAW,GAAGnH,MACnDqH,EAAO3Q,KAAK,CACR6Q,UAAW,aACXzI,KAAMwH,KAAKkB,mBAAmBL,EAAY,cAC1CM,WAAY,CACRzH,OACA0H,OAAQ,CACJC,KAAMvC,GAAY/F,WAAW,IAEjCuI,QAAS5H,GAEbtB,MAAO,CACHI,KAAM,CACF6I,KAAMvC,GAAY/F,WAAW,MAI7C,CACA,GAAI+H,GAAcA,EAAW3N,OAAQ,CACjC,MAAMuG,EAAOsG,KAAKgB,mBAAmBF,EAAW,GAAGpH,MACnDqH,EAAO3Q,KAAK,CACR6Q,UAAW,aACXzI,KAAMwH,KAAKkB,mBAAmBJ,EAAY,cAC1CK,WAAY,CACRzH,OACA0H,OAAQ,CACJC,KAAMvC,GAAY/F,WAAW,IAEjCuI,QAAS5H,GAEbtB,MAAO,CACHI,KAAM,CACF6I,KAAMvC,GAAY/F,WAAW,MAI7C,CACA,MAAMwI,EAAyBvB,KAAKwB,4BAC9BC,EAAQzB,KAAK0B,SAASX,GAC5Bf,KAAK2B,SAAS,CAAEJ,yBAAwBR,SAAQR,WAAYP,KAAK4B,gBAAiBH,SAAQ,EAG9FzB,KAAKkB,mBAAqB,CAAC1I,EAAMyI,KAC7BzI,EAAKhD,KAAIE,GAAUA,EAAMuL,UAAYA,IAC9BzI,GAEXwH,KAAK6B,2BAA6B,KAC9B,MAAM,sBAAEC,EAAqB,OAAE5M,EAAM,gBAAE6M,EAAkB7M,GAAW8K,KAAK3K,OACnE,MAAEJ,GAAU+K,KAAKI,MACvB,IAAI4B,EAA0BD,EAY9B,OAXID,IACI7M,EAAQ,KAAOA,EAAQ,KACvB+M,GAA2B,GAEtB/M,EAAQ,KAAOA,EAAQ,IAC5B+M,GAA2B,GAEtB/M,GAAS,MACd+M,GAA2B,MAG5BA,CAAuB,EAGlChC,KAAKiC,YAAc,CAACpI,GAAgB,KAChC,MAAM,aAAEwG,EAAY,OAAEU,EAAM,MAAE9L,GAAU+K,KAAKI,MAE7C,IAAI8B,GAAY,EACZnB,GACAA,EAAOxM,SAAQ,CAAC4N,EAAGxL,OACV,SAAe0J,EAAc1J,IAAUwL,EAAE3J,MAA0B,IAAlB2J,EAAE3J,KAAKrF,QACrDgP,EAAE3J,KAAKrF,OAAS+O,IAChBA,EAAWC,EAAE3J,KAAKrF,OAE1B,IAIR,MACMiP,EAAeF,EAAW,EAAIjN,GADR,EAAXiN,EAAe,GACuB,EACvD,OAAIrI,EAGyC,GAAjCuI,GADWA,EAhBN,IAgBiCA,EAhBjC,IAgB4DF,EAAW,GAChD,GAEjCE,EAnBU,MAmB2BA,CAAY,EAE5DpC,KAAKqC,SAAW,CAACtB,EAAQpK,EAAO2L,KAC5B,MAAM,aAAEjC,GAAiBL,KAAKI,MACxB5H,EAAQ6H,EAAakC,IAAI5L,GAAuB,CAAC,CAAEC,EAAG,OAApBmK,EAAOvI,KAC/C,OAAQ,kBAAoBgK,EAAA,EAAU,CAAEF,SAAUA,EAAU9J,KAAMA,EAAMhE,IAAKuM,EAAOE,UAAWvH,KAAMqH,EAAOE,UAAW7I,MAAO2I,EAAO3I,OAAS,EAGlJ4H,KAAKwB,0BAA4B,KAC7B,MAAM,UAAEiB,EAAS,cAAEC,GAAkB1C,KAAK3K,MAEpCsN,GAAyB,OAAgB,UAAW,UAC1D,OAAQ,kBAAoBA,EAAwB,CAAEC,gBAAiB,IAAKjJ,OAAQ,EAAGjE,YAAY,SAAgBA,EAAO+M,EAAWC,GAAgBG,qBAAqB,EAAMC,iBAAkB,IAAKC,eAAgB,CAC/MC,OAAQ,GACRC,KAAM,EACNC,MAAO,EACPC,IAAK,IACJ,EAGbnD,KAAKoD,UAAY,CAACrC,EAAQV,KACtB,IACI5H,EADAyJ,GAAY,EAahB,OAXInB,GACAA,EAAOxM,SAAQ,CAAC4N,EAAGxL,KACf,KAAK,SAAe0J,EAAc1J,IAAUwL,EAAE3J,MAA0B,IAAlB2J,EAAE3J,KAAKrF,OAAc,CACvE,MAAMkQ,GAAM,QAAYlB,EAAE3J,MAC1B0J,EAAWoB,KAAKD,IAAInB,EAAUmB,EAClC,KAGJnB,GAAY,IACZzJ,EAAS,CAAE7B,EAAG,CAAC,EAAG,OAEf6B,CAAM,EAGjBuH,KAAKuD,UAAY,KACb,MAAM,KAAE7J,EAAO,IAAOsG,KAAK3K,OACrB,aAAEgL,EAAY,OAAEU,GAAWf,KAAKI,MAQtC,OAPe,OAA2B,CACtCoD,YAAY,SAAczC,GAC1B0C,aAAcjL,IAAQ,SAAauI,EAAQV,EAAc7H,GACzDkL,SAAU/M,IAAS,SAAe0J,EAAc1J,GAChDgN,WAAY,GAAGjK,WACfkK,cAAevO,GAAS2K,KAAK6D,kBAAkBxO,EAAMsB,QAE5C,EAEjBqJ,KAAK8D,UAAY,KACb,MAAM,KAAEpK,EAAO,IAAOsG,KAAK3K,OACrB,aAAEgL,EAAY,OAAEU,GAAWf,KAAKI,MACtC,OAAQ,kBAAoB2D,EAAA,GAAa,CAAEvL,MAAM,SAAcuI,EAAQV,GAAenL,OAAQ,GAAI8O,OAAQ,GAAItK,KAAM,GAAGA,WAAeuK,YAAY,GAAS,EAK/JjE,KAAK4B,cAAgB,KACjB,MAAM,WAAEnB,EAAU,WAAEC,EAAU,WAAEC,EAAU,WAAEC,EAAU,WAAEC,EAAU,WAAEC,GAAed,KAAK3K,MAGxF,IAAIK,EADc,CAAC+K,EAAYC,EAAYC,EAAYC,EAAYC,EAAYC,GAErEtL,KAAI0O,MACLxO,GAASA,EAAMvC,OAAS+Q,EAAI/Q,UAC7BuC,EAAQwO,EACZ,IAEJ,MAAMC,EAAS,GACfzO,EAAMF,KAAI0O,IACNC,EAAO/T,KAAK8T,EAAIxN,EAAE,IAGtB,MAAM6J,EAAa,GACb6D,EAASD,EAAOhR,OAAS,EAAI,EAAI,EACvC,IAAK,IAAIC,EAAI,EAAGA,EAAI+Q,EAAOhR,OAAQC,KAC3BA,EAAIgR,GAAW,GAAKhR,EAAI,EAAI+Q,EAAOhR,QAG9BgR,EAAOhR,OAAS,GAAKC,EAAI,EAAI+Q,EAAOhR,SAFzCoN,EAAWnQ,KAAK+T,EAAO/Q,IAO/B,OADAmN,EAAWnQ,KAAK+T,EAAOA,EAAOhR,OAAS,IAChCoN,CAAU,EAErBP,KAAKgB,mBAAsBqD,GAEhBA,EAAIlR,OADM,GACckR,EAAIC,UAAU,EAAGC,IAAgB,MAAQF,EAE5ErE,KAAKwE,aAAgBC,IACjB,MAAM,MAAEhD,GAAUzB,KAAKI,MACvB,OAAO,SAA2BqE,EAAGhD,EAAM,EAE/CzB,KAAK0B,SAAYX,IACb,GAAIA,EACA,IAAK,MAAMoB,KAAKpB,EACZ,IAAK,MAAMrL,KAASyM,EAAE3J,KAClB,GAAI9C,EAAM+L,MACN,OAAO/L,EAAM+L,MAK7B,MAAO,KAAK,EAGhBzB,KAAK6D,kBAAqBlN,IACtB,MAAM0J,GAAe,SAAiBL,KAAKI,MAAMW,OAAQf,KAAKI,MAAMC,aAAc1J,GAClFqJ,KAAK2B,SAAS,CAAEtB,gBAAe,EAEnCL,KAAK0E,aAAe,KAChB,MAAM,MAAEzP,GAAU+K,KAAKI,OACjB,YAAEuE,EAAc,GAAM3E,KAAKC,aAAa2E,SAAW,CAAC,EACtDD,IAAgB1P,GAChB+K,KAAK2B,SAAS,CAAE1M,MAAO0P,GAC3B,CAER,CACAE,oBACI7E,KAAKQ,YACLR,KAAKE,UAAW,SAAkBF,KAAKC,aAAa2E,QAAS5E,KAAK0E,aACtE,CACAI,mBAAmBC,GACXA,EAAUtE,aAAeT,KAAK3K,MAAMoL,YACpCsE,EAAUrE,aAAeV,KAAK3K,MAAMqL,YACpCqE,EAAUpE,aAAeX,KAAK3K,MAAMsL,YACpCoE,EAAUnE,aAAeZ,KAAK3K,MAAMuL,YACpCmE,EAAUlE,aAAeb,KAAK3K,MAAMwL,YACpCkE,EAAUjE,aAAed,KAAK3K,MAAMyL,YACpCd,KAAKQ,WAEb,CACAwE,uBACQhF,KAAKE,UACLF,KAAKE,UAEb,CACA+E,SACI,MAAM,OAAE/P,EAAM,KAAEgQ,EAAI,KAAExL,EAAI,QAAEvE,EAAU,CAClC6N,OAAQ,GACRC,KAAM,GACNC,MAAO,EACPC,IAAK,IACFnD,KAAK3K,OACN,uBAAEkM,EAAsB,aAAElB,EAAY,OAAEU,EAAM,WAAER,EAAU,MAAEtL,GAAU+K,KAAKI,MAE3ElD,EAAYqE,EACZ,iBAAmBA,EAAwB,CACzC4D,UAAU,SAAgBpE,EAAQV,GAClCvG,eAAiB,kBAAoBsL,EAAA,EAAoB,CAAEC,YAAY,SAActE,EAAQV,GAAc,GAAO7B,MAAO9I,GAASwP,EAAKI,cAAc3W,EAAA,qBAA6B,CAAE4W,IAAK7P,EAAMgB,aAEjM7F,EACAyR,EAAWtC,KAAKiC,cAEtB,OAAQ,kBAAoB,MAAO,CAAExD,UAAW,gBAAiB+G,IAAKxF,KAAKC,aAAc7H,MAAO,CAAElD,OAAQ8K,KAAK6B,+BAC3G,kBAAoB,MAAO,CAAEzJ,MAAO,CAAElD,SAAQD,UAC1C,kBAAoBwQ,EAAA,EAAO,CAAEzH,UAAWkH,EAAKI,cAAc3W,EAAA,0BAAkC8L,mBAAoByC,EAAWzE,OAAQuH,KAAKoD,UAAUrC,EAAQV,GAAexG,cAAe,CAAEnD,EAAGsJ,KAAKiC,aAAY,IAAS7E,OAAQ4C,KAAKuD,YAAarO,OAAQA,EAAQwQ,iBAAiB,EAAMC,gBAAiB3F,KAAK8D,YAAauB,YAAY,SAActE,EAAQV,GAAeuF,eAAgB,cAAelM,KAAMA,EAAMvE,QAASA,EAASkD,MAAO,KAAY+F,WAAYyH,EAAA,gBAA8B5Q,MAAOA,GAC1e8L,GAAUA,EAAO5N,OAAS,GAAM,kBAAoB0K,GAAY,KAAMkD,EAAOvL,KAAI,CAAC2M,EAAGxL,IAAUqJ,KAAKqC,SAASF,EAAGxL,EAAO2L,MACvH,kBAAoBwD,GAAAC,EAAW,CAAE3N,MAAO0G,GAAYe,MAAOU,WAAYA,EAAYyF,iBAAiB,IACpG,kBAAoBF,GAAAC,EAAW,CAAEE,eAAe,EAAM7N,MAAO0G,GAAYO,MAAO6G,WAAYlG,KAAKwE,iBACjH,EAEJ,MACA,IAD0B,EAAA2B,EAAA,IAAWrG,I,oDCvV9B,MAIM,GAAS,CAClBhO,eAAgB,CACZG,WAAYmU,GAAA,UAEhBC,cAAe,CACXnR,OAAQ,QACRoR,aAAc1T,EAAA,SACd2T,UAAWC,GAAA,UAEfC,UAAW,CACPH,aAAcI,GAAA,SACdH,UAAWG,GAAA,UAEfC,eAAgB,CACZJ,UAAW3T,EAAA,UAEfgU,eAAgB,CACZ3U,WAAYC,EAAA,UAEhB2U,WAAY,CACRP,aAAcI,GAAA,SACdH,UAAWG,GAAA,UAEfI,WAAY,CACRP,UAAWG,GAAA,W,ICxBRK,G,gDACX,SAAWA,GACPA,EAAqB,IAAI,MACzBA,EAAwB,OAAI,UAC5BA,EAAuB,MAAI,QAC3BA,EAA0B,SAAI,YAC9BA,EAAqB,IAAI,MACzBA,EAAwB,OAAI,UAC5BA,EAAqB,IAAI,MACzBA,EAAwB,OAAI,UAC5BA,EAAqB,IAAI,MACzBA,EAAqB,IAAI,MACzBA,EAA0B,SAAI,YAC9BA,EAAsB,KAAI,MAC7B,CAbD,CAaGA,KAAoBA,GAAkB,CAAC,IACnC,MAAMC,GAAY,CACrBlT,OAAQ,CACJmT,MAAO,GACPC,OAAQ,GAEZC,QAAS,CAAC,EACVC,UAAW,CAAC,EACZC,SAAU,CACNC,KAAM,SAGDC,GAAmB,CAC5B,CAAE7Y,MAAOC,EAAA,oBAA4BC,MAAO,yBAC5C,CAAEF,MAAOC,EAAA,oBAA4BC,MAAO,kBAC5C,CAAEF,MAAOC,EAAA,oBAA4BC,MAAO,0BAC5C,CAAEF,MAAOC,EAAA,oBAA4BC,MAAO,oBAC5C,CAAEF,MAAOC,EAAA,oBAA4BC,MAAO,mBAC5C,CAAEF,MAAOC,EAAA,oBAA4BC,MAAO,oBAC5C,CAAEF,MAAOC,EAAA,oBAA4BC,MAAO,WAEnC4Y,GAAoB,CAC7B,CAAE9Y,MAAO,UAAWE,MAAO,WAC3B,CAAEF,MAAO,UAAWE,MAAO,WAC3B,CAAEF,MAAO,SAAUE,MAAO,WAEjB6Y,GAAsB,CAC/B,CAAE/Y,MAAO,oBAAqBE,MAAO,qBACrC,CAAEF,MAAO,eAAgBE,MAAO,gBAChC,CAAEF,MAAO,oBAAqBE,MAAO,sBAE5B8Y,GAAoB,CAC7B,CAAEhZ,MAAO,UAAWE,MAAO,WAC3B,CAAEF,MAAO,cAAeE,MAAO,eAC/B,CAAEF,MAAO,UAAWE,MAAO,WAC3B,CAAEF,MAAO,SAAUE,MAAO,WAEjB+Y,GAAuB,CAChC,CAAEjZ,MAAO,UAAWE,MAAO,WAC3B,CAAEF,MAAO,cAAeE,MAAO,eAC/B,CAAEF,MAAO,UAAWE,MAAO,WAC3B,CAAEF,MAAO,SAAUE,MAAO,WAEjBgZ,GAAoB,CAC7B,CAAElZ,MAAO,UAAWE,MAAO,WAC3B,CAAEF,MAAO,UAAWE,MAAO,WAC3B,CAAEF,MAAO,UAAWE,MAAO,WAC3B,CAAEF,MAAO,SAAUE,MAAO,WAEjBiZ,GAAoB,CAC7B,CAAEnZ,MAAO,kBAAmBE,MAAO,mBACnC,CAAEF,MAAO,kBAAmBE,MAAO,mBACnC,CAAEF,MAAO,SAAUE,MAAO,WAEjBkZ,GAAoB,CAC7B,CAAEpZ,MAAO,UAAWE,MAAO,WAC3B,CAAEF,MAAO,OAAQE,MAAO,QACxB,CAAEF,MAAO,UAAWE,MAAO,YAElBmZ,GAAqB,CAC9B,CAAErZ,MAAO,UAAWE,MAAO,WAC3B,CAAEF,MAAO,OAAQE,MAAO,QACxB,CAAEF,MAAO,UAAWE,MAAO,YAElBoZ,GAA6BC,IACtC,IAAIC,EAOJ,OAHQA,EAAS,UAGVA,CAAM,EAEJC,GAAkCF,IAC3C,IAAIC,EAOJ,OAHQA,EAAS,WAGVA,CAAM,EAiDJE,GAAqBH,IAC9B,IAAIC,EACJ,OAAQD,GACJ,KAAKlB,GAAgBsB,IACrB,KAAKtB,GAAgBuB,OACrB,KAAKvB,GAAgBwB,IACrB,KAAKxB,GAAgByB,OACrB,KAAKzB,GAAgB0B,IACjBP,EAAS,UACT,MACJ,KAAKnB,GAAgB2B,MACrB,KAAK3B,GAAgB4B,SACjBT,EAAS,oBACT,MACJ,KAAKnB,GAAgB6B,IACjBV,EAAS,kBACT,MACJ,KAAKnB,GAAgB8B,IACrB,KAAK9B,GAAgB+B,SACrB,KAAK/B,GAAgBgC,KACjBb,EAAS,UACT,MACJ,QACIA,OAASrX,EAGjB,OAAOqX,CAAM,EAEJc,GAAqBf,IAC9B,IAAIC,EACJ,OAAQD,GACJ,KAAKlB,GAAgBsB,IACrB,KAAKtB,GAAgBuB,OACjBJ,EAASV,GACT,MACJ,KAAKT,GAAgB2B,MACrB,KAAK3B,GAAgB4B,SACjBT,EAAST,GACT,MACJ,KAAKV,GAAgBwB,IACjBL,EAASR,GACT,MACJ,KAAKX,GAAgByB,OACjBN,EAASP,GACT,MACJ,KAAKZ,GAAgB0B,IACjBP,EAASN,GACT,MACJ,KAAKb,GAAgB6B,IACjBV,EAASL,GACT,MACJ,KAAKd,GAAgB8B,IACrB,KAAK9B,GAAgB+B,SACjBZ,EAASJ,GACT,MACJ,KAAKf,GAAgBgC,KACjBb,EAASH,GACT,MACJ,QACIG,OAASrX,EAGjB,OAAOqX,CAAM,EAEJe,GAAyBhB,IAClC,IAAIC,EASJ,OANQA,EAFAD,IACClB,GAAgBsB,IACR,cAGAxX,EAGVqX,CAAM,EAEJgB,GAAiBjB,IAC1B,IAAIC,EAMJ,OAHQA,EAAS,UAGVA,CAAM,EAEJiB,GAAsBlB,IAC/B,IAAIC,EACJ,OAAQD,GACJ,KAAKlB,GAAgBsB,IACjBH,EAAS,SACT,MACJ,KAAKnB,GAAgBuB,OACjBJ,EAAS,YACT,MACJ,KAAKnB,GAAgB2B,MACjBR,EAAS,WACT,MACJ,KAAKnB,GAAgB4B,SACjBT,EAAS,cACT,MACJ,KAAKnB,GAAgBwB,IACjBL,EAAS,SACT,MACJ,KAAKnB,GAAgByB,OACjBN,EAAS,YACT,MACJ,KAAKnB,GAAgB0B,IACjBP,EAAS,SACT,MACJ,KAAKnB,GAAgB6B,IACjBV,EAAS,SACT,MACJ,KAAKnB,GAAgB8B,IACjBX,EAAS,SACT,MACJ,KAAKnB,GAAgB+B,SACjBZ,EAAS,cACT,MACJ,KAAKnB,GAAgBgC,KACjBb,EAAS,UACT,MACJ,QACIA,OAASrX,EAGjB,OAAOqX,CAAM,EA0CJkB,GAAyBnB,IAClC,IAAIC,EACJ,OAAQD,GACJ,KAAKlB,GAAgBsB,IACjB,OAAO,SAEX,KAAKtB,GAAgBuB,OACjB,OAAO,YAEX,KAAKvB,GAAgB2B,MACjB,OAAO,WAEX,KAAK3B,GAAgB4B,SACjB,OAAO,cAEX,KAAK5B,GAAgBwB,IACjB,OAAO,SAEX,KAAKxB,GAAgByB,OACjB,OAAO,YAEX,KAAKzB,GAAgB0B,IACjB,OAAO,SAEX,KAAK1B,GAAgB6B,IACjB,OAAO,SAEX,KAAK7B,GAAgB8B,IACjB,OAAO,SAEX,KAAK9B,GAAgB+B,SACjB,OAAO,cAEX,KAAK/B,GAAgBgC,KACjB,OAAO,UAEX,QACIb,OAASrX,EAGjB,OAAOqX,CAAM,ECrVjB,MAAMmB,WAA0B,cAC5BjN,YAAYkN,EAAYC,GACpBxJ,MAAMuJ,EAAYC,GAClBvJ,KAAKwJ,aAAe,CAAC,EACrBxJ,KAAKI,MAAQzM,OAAOgK,OAAO,CAAC,EAAGqC,KAAKwJ,cACpCxJ,KAAKyJ,kBAAoB,CAAC7a,EAAO8a,EAAcC,EAAa,OAAQC,EAAkB,WAClF,MAAM,KAAE1E,GAASlF,KAAK3K,MAChBwU,EAAmB,IAAI3T,KAAKwT,EAAaI,KAAO,aAChDC,EAAO7E,EAAK8E,WAAWH,EAAkB,CAC3CtE,IAAK,UACL0E,MAAO,UAELC,GAAO,QAAQtb,GAASub,WAAWvb,EAAMwb,QAAQ,KAAM,QAAMxb,GAASA,EAAQ,EACpF,OAAO+E,OAAOgK,OAAOhK,OAAOgK,OAAO,CAAEjH,EAAGqT,EAAMnT,EAAa,OAAVhI,EAAiB,KAAOsb,GAAmB,OAAVtb,GAAkB,CAAEgH,GAAI,IAAO,CAAEkU,KAAMJ,EAAaI,KAAMtV,IAAKkV,EAAaW,GAAI3Q,KAAMgQ,EAAahb,MAAQgb,EAAahb,MAAQgb,EAAaW,GAAI5I,MAAOiI,EAAaC,GAC7OD,EAAaC,GAAYC,GACrBF,EAAaC,GAAYC,GAAiBnI,MAC1CiI,EAAaC,GAAYlI,WAC7B5Q,GAAY,EAE1BmP,KAAKsK,YAAc,KACf,MAAM,YAAEA,EAAW,YAAErC,EAAW,kBAAEsC,GAAsBvK,KAAK3K,MACzD4S,GAGAqC,EAFwBnB,GAAmBlB,GACxBiB,KACsBqB,EAC7C,EAEJvK,KAAKwK,eAAkBC,IACnB,MAAM,uBAAEC,EAAyB,UAA2B,4BAAEC,EAA8B,YAAuC3K,KAAK3K,MAClIsU,EAAae,EACbd,EAAkBe,EAClBC,EAAc,GAYpB,OAXAH,EAAcjV,KAAIkU,IACd,MAAMmB,EAAS,GACXnB,aAAwBoB,KACVxX,MAAM+I,KAAKqN,EAAavF,UAChC3O,KAAKpC,IACP,MAAM8Q,EAAM9Q,EAAEuW,GAAYC,GAAmBxW,EAAEuW,GAAYC,GAAiBhb,MAAQwE,EAAEuW,GAAY/a,MAClGic,EAAOza,KAAK4P,KAAKyJ,kBAAkBvF,EAAK9Q,EAAGuW,EAAYC,GAAiB,IAGhFgB,EAAYxa,KAAKya,EAAO,IAErB7K,KAAK+K,eAAeH,EAAY,EAE3C5K,KAAKgL,iBAAmB,KACpB,MAAM,OAAEC,GAAWjL,KAAK3K,MACxB,OAAO,OAA+B,CAClC4V,SACAC,MAAOlL,KAAKmL,aACZC,WAAW,GACb,EAENpL,KAAKmL,WAAa,KACd,MAAM,MAAE9c,GAAU2R,KAAK3K,MACjBgW,EAAYva,EAAmBzC,EAAMid,UACrCC,GAAa,QAAmBld,GAEtC,OADsB,QAAiBA,KACAkd,EAAa,eAAiBF,EAAS,EAElFrL,KAAKwL,YAAc,IACP,kBAAoB,aAAgB,KACxC,kBAAoB,EAAAC,SAAU,CAAErT,MAAO,iBAAsBnD,MAAOyW,GAAA,OACpE,kBAAoB,EAAAD,SAAU,CAAErT,MAAO,kBAAuBnD,MAAOyW,GAAA,QAK7E1L,KAAK+K,eAAkBY,IACnB,MAAM,SAAEC,EAAQ,WAAEC,GAAe7L,KAAK3K,MAChC6S,EAAS,GAkBf,OAjBAyD,EAAMnW,KAAIqV,IACN,MAAMrW,EAAMqW,EAAO,GAAGrW,IAChB9F,EAAQmc,EAAO,GAAGnR,KAClBoS,EAAW,GACjB,IAAK,IAAIC,EAAU,IAAI7V,KAAK2V,EAAa,aAAcE,GAAW,IAAI7V,KAAK0V,EAAW,aAAcG,EAAQC,QAAQD,EAAQE,UAAY,GAAI,CACxI,MAAM5B,GAAK,EAAA6B,EAAA,GAAOH,EAAS,cACrBI,EAAatB,EAAOuB,MAAKlI,GAAOA,EAAI4F,OAASO,IACnD,GAAI8B,EACAL,EAAS1b,KAAK+b,OAEb,CACD,MAAMrC,GAAO,EAAAoC,EAAA,GAAOH,EAAS,cAC7BD,EAAS1b,KAAK4P,KAAKyJ,kBAAkB,KAAM,CAAEK,OAAMO,GAAI7V,EAAK9F,SAAS,OAAQ,MACjF,CACJ,CACAwZ,EAAO9X,KAAK0b,EAAS,IAElB5D,CAAM,CAErB,CACArD,oBACI7E,KAAKsK,aACT,CACAxF,mBAAmBC,GACf,MAAM,OAAEkG,EAAM,YAAEoB,EAAW,kBAAE9B,GAAsBvK,KAAK3K,OACvC0P,EAAUwF,oBAAsBA,IAC/BU,IAAWoB,IAEzBrM,KAAKsK,aAEb,CACArF,SACI,MAAM,YAAEgD,EAAW,kBAAEqE,EAAiB,KAAEpH,GAASlF,KAAK3K,MAChDwV,EAAS7K,KAAKwK,eAAexK,KAAKgL,oBAExC,OAAQ,kBAAoB,aAAgB,KACxC,kBAAoB,MAAO,CAAE5S,MAAO,mBAChC,kBAAoB,EAAAmU,MAAO,CAAEC,aAAc,KAAMC,KAAM,MAAQvH,EAAKI,cAAc3W,EAAA,qBAA6B,CAAEC,MAAOqZ,MAC5H,kBAAoB,MAAO,CAAE7P,MAAO,mBAChC,kBAAoB,MAAO,CAAEA,MAAO,cAAoBkU,IAAsB,gBAA0BtM,KAAKwL,cAAkB,kBAAoB,GAAmB,CAAE1J,uBAAuB,EAAMC,gBF3H3L,IE2H8OW,cAAe,CAAC,EAAGD,UAAW,MAAavN,OF5HlS,IE4HmUuL,WAAYoK,EAAO1X,OAAS,EAAI0X,EAAO,GAAK,GAAInK,WAAYmK,EAAO1X,OAAS,EAAI0X,EAAO,GAAK,GAAIlK,WAAYkK,EAAO1X,OAAS,EAAI0X,EAAO,GAAK,GAAIjK,WAAYiK,EAAO1X,OAAS,EAAI0X,EAAO,GAAK,GAAIhK,WAAYgK,EAAO1X,OAAS,EAAI0X,EAAO,GAAK,GAAI/J,WAAY+J,EAAO1X,OAAS,EAAI0X,EAAO,GAAK,OAC5mB,EAGJ,MAAM6B,IAAkB,SAAsB,CAACtM,GAASuM,WAAUC,WAAU3E,cAAa4E,aACrF,MAAMC,GAAiB,QAAWD,EAAOE,SAASC,SAC5C,SAAEpB,EAAQ,WAAEC,IAAe,QAAsBiB,GAEvD,IAAIxB,EAAWwB,EAAexB,UACzBA,GAAYrD,IACbqD,EAAW,CAAE,CAAClD,GAAkBH,IAAe,MAEnD,MAAM5Z,EAAQsF,OAAOgK,OAAOhK,OAAOgK,OAAO,CAAC,EAAGmP,GAAiB,CAAExB,aAC3D2B,EAAc,CAChBC,UAAWP,EACXC,WACAhB,WACAzE,QAAS9Y,EAAM8Y,QACfrT,OAAQ,CAAEmT,MAAO,GACjBG,UAAW/Y,EAAM+Y,UACjBkE,WACAO,cAEEsB,EAAkBhE,GAAmBlB,GACrCmF,EAAalE,KACbqB,GAAoB,QAAS0C,GAInC,MAAO,CACHrB,WACA3D,cACA5Z,QACA4c,OAPW,kBAA6B7K,EAAO+M,EAAiBC,EAAY7C,GAQ5E8B,YAPgB,uBAAkCjM,EAAO+M,EAAiBC,EAAY7C,GAQtF+B,kBAPsB,6BAAwClM,EAAO+M,EAAiBC,EAAY7C,GAQlGA,oBACAsB,aACH,IAECwB,GAAqB,CACvB/C,YAAa,kBAEXgD,IAAuB,IAAAC,SAAQb,GAAiBW,GAAzB,CAA6ChE,IACpEmE,IAAgB,EAAArH,EAAA,KAAW,OAAWmH,K,2HC7KrC,MAAM,GAAS,CAClBG,YAAa,CACTxb,WAAYW,EAAA,OACZT,YAAaS,EAAA,SCMrB,MAAM8a,WAA+B,cACjCtR,cACI2D,SAAS1L,WACT2L,KAAKwJ,aAAe,CAEpB,EACAxJ,KAAKI,MAAQzM,OAAOgK,OAAO,CAAC,EAAGqC,KAAKwJ,cACpCxJ,KAAK2N,aAAe,gBACpB3N,KAAK4N,WAAa,gBAClB5N,KAAK6N,mBAAqB,KACtB,MAAM,KAAE3I,GAASlF,KAAK3K,OAChB,UAAEyY,GAAc9N,KAAKI,OACrB,WAAEyL,EAAU,SAAED,IAAa,UAAkB,GAUnD,OAAQ,kBAAoB,EAAAmC,WAAY,CAAE,aAAc7I,EAAKI,cAAc3W,EAAA,gCAAwCqf,SAAUhO,KAAKiO,wBAAyBC,YAAahJ,EAAKI,cAAc3W,EAAA,SAAiB6W,IAAKxF,KAAK2N,aAAcQ,WAAY,CATxNrE,GAChBA,EAAO+B,EACA3G,EAAKI,cAAc3W,EAAA,yBAErBmb,EAAO8B,EACL1G,EAAKI,cAAc3W,EAAA,wBAEvB,IAEuPC,OAAO,SAAWkf,IAAc,EAEtS9N,KAAKoO,iBAAmB,KACpB,MAAM,KAAElJ,GAASlF,KAAK3K,OAChB,QAAEgZ,EAAO,UAAEP,GAAc9N,KAAKI,MAC9BwL,EAAW5L,KAAKsO,gBAUtB,OAAQ,kBAAoB,EAAAP,WAAY,CAAE,aAAc7I,EAAKI,cAAc3W,EAAA,8BAAsC8B,YAAaqd,EAAWE,SAAUhO,KAAKuO,sBAAuBL,YAAahJ,EAAKI,cAAc3W,EAAA,OAAe6f,WAAYV,EAAWtI,IAAKxF,KAAK4N,WAAYO,WAAY,CAT/PrE,GAChBA,EAAOgE,EACA5I,EAAKI,cAAc3W,EAAA,yBAErBmb,EAAO8B,EACL1G,EAAKI,cAAc3W,EAAA,wBAEvB,IAE8RC,OAAO,SAAWyf,IAAY,EAE3UrO,KAAKsO,cAAgB,KACjB,MAAM,UAAER,GAAc9N,KAAKI,MACrBqO,GAAQ,WACR7C,EAAWkC,EAAY,IAAI5X,KAAK4X,EAAU3X,WAAasY,EAK7D,OAJA7C,EAASI,QAAQJ,EAASK,UA5CrB,GA4C4C,GAC7CL,EAAW6C,GACX7C,EAAS8C,QAAQD,EAAMtY,WAEpByV,CAAQ,EAEnB5L,KAAK2O,eAAiB,CAACb,EAAWO,KAC9B,MAAMO,EAAUd,EACVe,EAAUf,EAAY,IAAI5X,KAAK4X,EAAU3X,gBAAatF,EAI5D,OAHIge,GACAA,EAAQ7C,QAAQ6C,EAAQ5C,UAtDvB,GAsD8C,GAE5CoC,GAAWO,GAAWP,GAAWQ,CAAO,EAEnD7O,KAAK8O,iBAAmBhB,IACpB,MAAMe,GAAU,YACRhD,WAAY+C,IAAY,UAAkB,GAClD,OAAOd,GAAac,GAAWd,GAAae,CAAO,EAEvD7O,KAAKuO,sBAAwB,CAACQ,EAAKngB,EAAOkb,KACtC,MAAM,WAAElZ,GAAeoP,KAAK3K,OACtB,UAAEyY,GAAc9N,KAAKI,MACvB0J,GAAQ9J,KAAK2O,eAAeb,EAAWhE,IACvC9J,KAAK2B,SAAS,CAAE0M,QAASvE,IAAQ,KACzBlZ,GACAA,EAAWkd,EAAWhE,EAC1B,GAER,EAEJ9J,KAAKiO,wBAA0B,CAACc,EAAKngB,EAAOkb,KACpCA,GAAQ9J,KAAK8O,iBAAiBhF,IAC9B9J,KAAK2B,SAAS,CAAEmM,UAAWhE,IAAQ,KAC3B9J,KAAK4N,YAAc5N,KAAK4N,WAAWhJ,SACnC5E,KAAK4N,WAAWhJ,QAAQoK,iBAAgB,EAC5C,GAER,CAER,CACAnK,oBACI,MAAM,OAAEgI,GAAW7M,KAAK3K,MAClByX,GAAiB,QAAWD,EAAOE,SAASC,QAC5CiC,GAAgB,QAAwBnC,IACxC,SAAElB,EAAQ,WAAEC,IAAe,QAAsBiB,GACnD9M,KAAK2N,cAAgB3N,KAAK2N,aAAa/I,SACvC5E,KAAK2N,aAAa/I,QAAQoK,gBAAgBC,IAAkB,aAE5DA,IAAkB,aAClBjP,KAAK2B,SAAS,CACVmM,UAAW,IAAI5X,KAAK2V,EAAa,aACjCwC,QAAS,IAAInY,KAAK0V,EAAW,cAGzC,CACA9G,mBAAmBC,EAAWmK,GAC1B,MAAM,QAAEb,EAAO,UAAEP,GAAc9N,KAAKI,MAChC8O,EAAUpB,YAAcA,GAEpBO,IAAYrO,KAAK2O,eAAeb,EAAWO,IAC3CrO,KAAK2B,SAAS,CAAE0M,aAASxd,GAGrC,CACAoU,SACI,MAAM,KAAEC,GAASlF,KAAK3K,MACtB,OAAQ,kBAAoB,aAAgB,KACxC2K,KAAK6N,qBACL,kBAAoB,OAAQ,CAAEzV,MAAO,gBAAsB8M,EAAKI,cAAc3W,EAAA,OAC9EqR,KAAKoO,mBACb,EAEJ,MAAMe,IAAqB,EAAAhJ,EAAA,KAAW,OAAWuH,KC1HjD,MAAM0B,WAA8B,cAChChT,cACI2D,SAAS1L,WACT2L,KAAKwJ,aAAe,CAChB6F,cAAc,GAElBrP,KAAKI,MAAQzM,OAAOgK,OAAO,CAAC,EAAGqC,KAAKwJ,cACpCxJ,KAAKsP,UAAY,KACb,MAAM,cAAEL,EAAa,WAAExe,GAAeuP,KAAK3K,OACrC,aAAEga,GAAiBrP,KAAKI,MACxBmP,EAAgBvP,KAAKwP,mBACrBC,EAAYF,EAAcnD,MAAMsD,GAAWA,EAAO9gB,QAAUqgB,IAClE,OAAQ,kBAAoB,EAAAU,OAAQ,CAAEtF,GAAI,kBAAmB5Z,WAAYA,EAAYmf,OAAQP,EAAcQ,SAAU7P,KAAK8P,aAAcC,SAAU/P,KAAKgQ,aAAcC,WAAYR,EAAWS,QAAS,EAAAC,cAAA,QAAwBZ,EAAc/Z,KAAIka,GAAW,kBAAoB,EAAAU,aAAc,CAAE5b,IAAKkb,EAAO9gB,MAAOA,MAAO8gB,MAAa,EAEzU1P,KAAKwP,iBAAmB,KACpB,MAAM,KAAEtK,EAAI,QAAE/U,GAAY6P,KAAK3K,MACzBka,EAAgB,GAOtB,OANApf,EAAQqF,KAAIka,IACRH,EAAcnf,KAAK,CACf+L,SAAU,IAAM+I,EAAKI,cAAcoK,EAAOhhB,MAAO,CAAEE,MAAO8gB,EAAO9gB,QACjEA,MAAO8gB,EAAO9gB,OAChB,IAEC2gB,CAAa,EAExBvP,KAAK8P,aAAe,CAACO,EAAOZ,KACxB,MAAM,WAAE7e,GAAeoP,KAAK3K,MACxBzE,GACAA,EAAW6e,EAAU7gB,OAEzBoR,KAAK2B,SAAS,CACV0N,cAAc,GAChB,EAENrP,KAAKgQ,aAAeX,IAChBrP,KAAK2B,SAAS,CAAE0N,gBAAe,CAEvC,CACApK,SACI,OAAOjF,KAAKsP,WAChB,EAEJ,MAAMgB,IAAoB,EAAAnK,EAAA,IAAWiJ,IC1CxB,GAAS,CAClBrc,iBAAkB,CACdhB,gBAAiBC,EAAA,SACjBC,WAAYW,EAAA,OACZN,WAAYoU,GAAA,SCcd6J,GAAgB,SAChBC,GAAgB,SACf,MAAMC,WAA2B,cACpCrU,cACI2D,SAAS1L,WACT2L,KAAKwJ,aAAe,CAChBkH,gBAAgB,GAEpB1Q,KAAKI,MAAQzM,OAAOgK,OAAO,CAAC,EAAGqC,KAAKwJ,cACpCxJ,KAAK2Q,mBAAqB,KACtB,MAAM,UAAEC,EAAS,YAAE3I,EAAW,KAAE/C,EAAI,UAAE2L,GAAc7Q,KAAK3K,MACnDlF,EAAU,GAiBhB,OAhBuB6Y,GAAkBf,GAC1BzS,KAAIka,IACfvf,EAAQC,KAAK,CACTsJ,KAAMwL,EAAKI,cAAc3W,EAAA,iBAAyB,CAAEC,MAAO8gB,EAAOhhB,QAClE8F,IAAKkb,EAAO9gB,OACd,IAEFgiB,GAAaA,EAAUpY,MAAQoY,EAAUpY,KAAKrF,OAAS,GACvDhD,EAAQC,KAAK,CACTsJ,KAAMwL,EAAKI,cAAc3W,EAAA,iBAAyB,CAAEC,MAAO,gBAC3D4F,IAAK,OAGTqc,GAAaA,EAAUrY,MAAQqY,EAAUrY,KAAKrF,OAAS,GACvDhD,EAAQC,KAAK,CAAEsJ,KAAMwL,EAAKI,cAAc3W,EAAA,iBAAyB,CAAEC,MAAO,QAAU4F,IAAK,OAEtFrE,CAAO,EAElB6P,KAAK8Q,sBAAwB,KACzB,MAAM,WAAErgB,GAAeuP,KAAK3K,OACtB,qBAAE0b,GAAyB/Q,KAAKI,MACtC,OAAQ,kBAAoBkQ,GAAmB,CAAErB,cAAe8B,EAAsBtgB,WAAYA,EAAYG,WAAYoP,KAAKgR,wBAAyB7gB,QAASoX,IAAoB,EAEzLvH,KAAKiR,uBAAyB,KAC1B,MAAM,eAAEP,GAAmB1Q,KAAKI,MAChC,OAAOsQ,EAAiB,kBAAoBvB,GAAoB,CAAEve,WAAYoP,KAAKkR,gCAA8BrgB,CAAS,EAE9HmP,KAAKkR,yBAA2B,CAACpD,EAAWO,KACxC,MAAM,MAAEhgB,EAAK,OAAEwe,GAAW7M,KAAK3K,OACzB,WAAEwW,EAAU,SAAED,IAAa,SAAmBkC,EAAWO,GACzD8C,EAAWxd,OAAOgK,OAAOhK,OAAOgK,OAAO,CAAC,EAAGyT,KAAKC,MAAMD,KAAK9iB,UAAUD,KAAU,CAAE4gB,cAAe,YAAsBpD,aACxHD,aACJiB,EAAOyE,UAAS,OAAiBH,EAAUtE,EAAOE,UAAW,CAAEwE,SAAS,GAAO,EAEnFvR,KAAKgR,wBAA2BpiB,IAC5B,MAAM,MAAEP,EAAK,OAAEwe,GAAW7M,KAAK3K,MACzBqb,EAAiB9hB,IAAU,YACjCoR,KAAK2B,SAAS,CAAEoP,qBAAsBniB,EAAO8hB,mBAAkB,KAC3D,IAAKA,EAAgB,CACjB,MAAMS,EAAWxd,OAAOgK,OAAOhK,OAAOgK,OAAO,CAAC,EAAGyT,KAAKC,MAAMD,KAAK9iB,UAAUD,KAAU,CAAE4gB,cAAergB,EAAOid,gBAAYhb,EAAW+a,cAAU/a,IAC9Igc,EAAOyE,UAAS,OAAiBH,EAAUtE,EAAOE,UAAW,CAAEwE,SAAS,GAC5E,IACF,CAEV,CACA1M,oBACI,MAAM,cAAEoK,EAAa,SAAEuC,EAAQ,SAAEC,EAAQ,eAAEC,EAAc,mBAAEC,EAAkB,eAAEC,EAAc,mBAAEC,GAAwB7R,KAAK3K,MACxHsc,GACAH,EAASG,EAAoBpB,GAAemB,GAE5CG,GACAJ,EAASI,EAAoBrB,GAAeoB,GAEhD5R,KAAK2B,SAAS,CACVmQ,gBAAiB9R,KAAK2Q,qBACtBI,qBAAsB9B,EACtByB,eAAgBzB,IAAkB,aAE1C,CACAnK,mBAAmBC,GACf,MAAM,SAAEyM,EAAQ,SAAEC,EAAQ,eAAEC,EAAc,UAAEd,EAAS,mBAAEe,EAAkB,YAAE1J,EAAW,MAAE5Z,EAAK,eAAEujB,EAAc,UAAEf,EAAS,mBAAEgB,GAAwB7R,KAAK3K,MACnJhH,KAAU,QAAQA,EAAO0W,EAAU1W,SAC/BsjB,GACAH,EAASG,EAAoBpB,GAAemB,GAE5CG,GACAJ,EAASI,EAAoBrB,GAAeoB,KAG/C,QAAQhB,EAAW7L,EAAU6L,aAAe,QAAQC,EAAW9L,EAAU8L,YAC1E7Q,KAAK2B,SAAS,CACVmQ,gBAAiB9R,KAAK2Q,uBAI1B5L,EAAUkD,cAAgBA,GAC1BjI,KAAKgR,wBAAwBzJ,GAAiB,GAAG3Y,MAEzD,CACAqW,SACI,MAAM,QAAElU,EAAO,WAAEN,EAAU,cAAEshB,EAAa,gBAAEC,EAAe,UAAEpB,EAAS,MAAEviB,EAAK,kBAAE4jB,EAAiB,UAAEpB,EAAS,mBAAEgB,GAAwB7R,KAAK3K,OACpI,gBAAEyc,GAAoB9R,KAAKI,MACjC,OAAQ,kBAAoB,KAAa,CAAE0R,gBAAiBA,EAAiBI,UAAWlS,KAAK8Q,wBAAyBqB,WAAYnS,KAAKiR,yBAA0BlgB,QAASA,EAASN,WAAYA,EAAYshB,cAAeA,EAAeC,gBAAiBA,EAAiBpB,UAAWA,EAAWviB,MAAOA,EAAO4jB,kBAAmBA,EAAmB7Z,MAAO,oBAAyBga,YAAY,EAAMvB,UAAWA,EAAWgB,mBAAoBA,GACrb,EAGJ,MAAM,IAAkB,SAAsB,CAACzR,GAAS6H,cAAa4E,aACjE,MAAMC,GAAiB,QAAWD,EAAOE,SAASC,QAC5CiC,GAAgB,QAAwBnC,IACxC,SAAElB,EAAQ,WAAEC,IAAe,QAAsBiB,GAEjD4E,GAAiB,QAAS,CAC5B9F,WACAC,aACA5E,MAAO,MAEX,IAAI2J,EACAyB,EACJ,MAAMV,EAAqB1I,GAAsBhB,GAC7C0J,IACAf,EAAY,gBAAuBxQ,EAAOuR,EAAoBpB,GAAemB,GAC7EW,EAAuB,2BAAkCjS,EAAOuR,EAAoBpB,GAAemB,IAIvG,MAAME,GAAiB,QAAS,CAC5BhG,WACAC,aACAyG,UAAU,EACVrL,MAAO,MAEX,IAAI4J,EACA0B,EACJ,MAAMV,EAAqBzI,GAAsBnB,GAKjD,OAJI4J,IACAhB,EAAY,gBAAuBzQ,EAAOyR,EAAoBrB,GAAeoB,GAC7EW,EAAuB,2BAAkCnS,EAAOyR,EAAoBrB,GAAeoB,IAEhG,CACH3C,gBACAyC,iBACAd,YACAyB,uBACAV,qBACAC,iBACAf,YACA0B,uBACAV,qBACH,IAEC,GAAqB,CACvBL,SAAU,SACVC,SAAU,UAERe,IAAwB,IAAAjF,SAAQ,GAAiB,GAAzB,CAA6CkD,IACrEgC,IAAiB,EAAAtM,EAAA,KAAW,OAAWqM,K,wCCjKtC,MAAM,GAAS,CAClBlL,KAAM,CACFoL,QAAS,OACTC,WAAY,UAEhBC,UAAW,CAAC,EACZC,UAAW,CACPtM,UAAW,EACXD,aAAc,EACdnU,YAAaS,EAAA,QAEjBkgB,cAAe,CACXlT,SAAUmT,GAAA,SACVC,MAAOC,GAAA,QAEXC,cAAe,CACXtT,SAAUmT,GAAA,SACVC,MAAOG,GAAA,QAEXxG,SAAU,CACN+F,QAAS,OACTzgB,WAAYW,EAAA,QAEhB7B,QAAS,CACLqiB,YAAalhB,EAAA,QAEjBmhB,OAAQ,CACJthB,gBAAiBC,EAAA,OACjBK,cAAeqU,GAAA,OACf0M,YAAalhB,EAAA,OACbE,aAAcF,EAAA,OACdI,WAAYJ,EAAA,QAEhBohB,cAAe,CACXZ,QAAS,OACTa,eAAgB,iBAEpBC,mBAAoB,CAChBd,QAAS,QAEbe,qBAAsB,CAClBf,QAAS,OACTnM,UAAW3T,EAAA,QAEf4L,MAAO,CACHnM,cAAeqU,GAAA,SCzBvB,MAAMgN,WAA2B,cAC7BtX,cACI2D,SAAS1L,WACT2L,KAAKwJ,aAAe,CAEpB,EACAxJ,KAAKI,MAAQzM,OAAOgK,OAAO,CAAC,EAAGqC,KAAKwJ,cACpCxJ,KAAK2T,eAAkBljB,IACnB,MAAM,oBAAEP,GAAwB8P,KAAK3K,OAC/B,mBAAEue,GAAuB5T,KAAKI,MAC9B3Q,EAASuQ,KAAK6T,iBACdlkB,EAAWqQ,KAAK8T,mBAChB7jB,EAAS+P,KAAK+T,iBACdlkB,EAASmQ,KAAKgU,iBACdjkB,EAASiQ,KAAKiU,iBACd3jB,EAAS0P,KAAKkU,iBACd1jB,EAAUwP,KAAKmU,kBAErB,OAAM1kB,GAAUE,GAAYM,GAAUJ,GAAUE,GAAUO,GAAUE,EAG5D,kBAAoB,KAAa,CAAEH,YAAaujB,EAAoBnkB,OAAQA,EAAQC,UAAWsQ,KAAKoU,oBAAqBzkB,SAAUA,EAAUC,YAAaoQ,KAAKqU,sBAAuBxkB,OAAQA,EAAQC,UAAWkQ,KAAKsU,oBAAqBvkB,OAAQA,EAAQC,UAAWgQ,KAAKuU,oBAAqBtkB,OAAQA,EAAQK,OAAQA,EAAQC,YAAayP,KAAKwU,sBAAuBhkB,QAASA,EAASC,WAAYA,EAAYP,oBAAqBA,EAAqBU,WAAYoP,KAAKyU,4BAF3c,IAEwe,EAEvfzU,KAAKyU,0BAA6B7lB,IAC9B,MAAM,qBAAE8lB,EAAoB,MAAErmB,EAAK,OAAEwe,GAAW7M,KAAK3K,MAC/C8b,EAAWxd,OAAOgK,OAAOhK,OAAOgK,OAAO,CAAC,EAAGyT,KAAKC,MAAMD,KAAK9iB,UAAUD,KAAU,CAAE8Y,aAAStW,EAAWuW,eAAWvW,EAAWya,SAAU,CAAE,CAAClD,GAAkBxZ,IAAS,KAAOyY,cAAUxW,EAAWoX,YAAarZ,IAClNoR,KAAK2B,SAAS,CAAEiS,mBAAoBhlB,IAAS,KACrC8lB,GACAA,EAAqB9lB,GAEzBie,EAAOyE,UAAS,OAAiBH,EAAUtE,EAAOE,UAAW,CAAEwE,SAAS,GAAO,GACjF,EAENvR,KAAK6T,eAAiB,KAClB,MAAM,aAAEc,EAAY,WAAEC,GAAe5U,KAAK3K,MAC1C,OAAO,QAAeuf,EAAYD,EAAa,EAEnD3U,KAAKoU,kBAAoB,KACrB,MAAM,aAAEO,EAAY,aAAEE,EAAY,WAAED,GAAe5U,KAAK3K,MACxD,OAAO,QAAauf,KAAe,QAAiBD,EAAcE,EAAa,EAEnF7U,KAAK8T,iBAAmB,KACpB,MAAM,eAAEgB,EAAc,WAAEF,GAAe5U,KAAK3K,MAC5C,OAAO,QAAiBuf,EAAYE,EAAe,EAEvD9U,KAAKqU,oBAAsB,KACvB,MAAM,eAAES,EAAc,aAAED,EAAY,WAAED,GAAe5U,KAAK3K,MAC1D,OAAO,QAAeuf,KAAe,QAAiBE,EAAgBD,EAAa,EAEvF7U,KAAKgU,eAAiB,KAClB,MAAM,aAAEe,EAAY,WAAEH,GAAe5U,KAAK3K,MAC1C,OAAO,QAAeuf,EAAYG,EAAa,EAEnD/U,KAAKsU,kBAAoB,KACrB,MAAM,aAAES,EAAY,aAAEF,EAAY,WAAED,GAAe5U,KAAK3K,MACxD,OAAO,QAAauf,KAAe,QAAiBG,EAAcF,EAAa,EAEnF7U,KAAKiU,eAAiB,KAClB,MAAM,aAAEe,EAAY,WAAEJ,GAAe5U,KAAK3K,MAC1C,OAAO,QAAeuf,EAAYI,EAAa,EAEnDhV,KAAKuU,kBAAoB,KACrB,MAAM,aAAES,EAAY,aAAEH,EAAY,WAAED,GAAe5U,KAAK3K,MACxD,OAAO,QAAauf,KAAe,QAAiBI,EAAcH,EAAa,EAEnF7U,KAAK+T,eAAiB,KAClB,MAAM,aAAEkB,EAAY,WAAEL,GAAe5U,KAAK3K,MAC1C,OAAO,QAAeuf,EAAYK,EAAa,EAEnDjV,KAAKkU,eAAiB,KAClB,MAAM,aAAEW,EAAY,WAAED,GAAe5U,KAAK3K,MAC1C,OAAO,QAAeuf,EAAYC,EAAa,EAEnD7U,KAAKwU,oBAAsB,KACvB,MAAM9kB,EAAYsQ,KAAKoU,oBACjBxkB,EAAcoQ,KAAKqU,sBACnBvkB,EAAYkQ,KAAKsU,oBACjBtkB,EAAYgQ,KAAKuU,oBACvB,OAAO7kB,GAAaE,GAAeE,GAAaE,CAAS,EAE7DgQ,KAAKmU,gBAAkB,KACnB,MAAM,0BAAEe,EAAyB,cAAEC,EAAa,WAAEP,GAAe5U,KAAK3K,MACtE,OAAO6f,IAA6B,QAAgBN,EAAYO,EAAc,CAEtF,CACAtQ,oBACI7E,KAAK2B,SAAS,CACViS,mBAAoB5T,KAAK3K,MAAM4S,aAEvC,CACAnD,mBAAmBC,GACf,MAAM,YAAEkD,GAAgBjI,KAAK3K,MACzB0P,EAAUkD,cAAgBA,GAC1BjI,KAAK2B,SAAS,CACViS,mBAAoB5T,KAAK3K,MAAM4S,aAG3C,CACAhD,SACI,MAAM,SAAE0H,EAAQ,SAAEC,EAAQ,QAAE7b,EAAO,KAAEmU,EAAI,wBAAEkQ,EAAuB,mBAAEC,EAAkB,mBAAEC,EAAkB,cAAEvD,EAAa,gBAAEC,EAAe,kBAAEuD,EAAiB,YAAEtN,EAAW,qBAAEuN,EAAoB,MAAEnnB,GAAW2R,KAAK3K,MAE5MogB,GAAkBzV,KAAK6T,kBAAoB2B,IAAyB,cACpEE,GAAoB1V,KAAK8T,oBAAsB0B,IAAyB,cACxEG,GAAkB3V,KAAKgU,kBAAoBwB,IAAyB,cACpEI,GAAkB5V,KAAKiU,kBAAoBuB,IAAyB,cACpEK,GAAkB7V,KAAKkU,kBAAoBsB,IAAyB,cACpEM,GAAmB9V,KAAKmU,mBAAqBqB,IAAyB,cACtEO,EAAcN,GAAkBC,GAAoBC,GAAkBC,GAAkBC,GAAkBC,EAC1GE,EAAiBhN,GAAkBf,GACnC0J,EAAqB1I,GAAsBhB,GAC3CgK,ERgJsB,CAAChK,IACjC,IAAIC,EACJ,OAAQD,GACJ,KAAKlB,GAAgBsB,IACjB,OAAO,SAEX,KAAKtB,GAAgBuB,OACjB,OAAO,YAEX,KAAKvB,GAAgB2B,MACjB,OAAO,WAEX,KAAK3B,GAAgB4B,SACjB,OAAO,cAEX,KAAK5B,GAAgBwB,IACjB,OAAO,SACX,KAAKxB,GAAgByB,OACjB,OAAO,YACX,KAAKzB,GAAgB0B,IACjB,OAAO,SAEX,KAAK1B,GAAgB6B,IACjB,OAAO,SAEX,KAAK7B,GAAgB8B,IACjB,OAAO,SAEX,KAAK9B,GAAgB+B,SACjB,OAAO,cAEX,KAAK/B,GAAgBgC,KACjB,OAAO,UAEX,QACIb,OAASrX,EAGjB,OAAOqX,CAAM,EQtLiB+N,CAAqBhO,GACzC4J,EAAqBzI,GAAsBnB,GACjD,OAAQ,kBAAoB,SAAU,CAAE7P,MAAO,WAC3C,kBAAoB,MAAO,CAAEA,MAAO,kBAChC,kBAAoB,EAAAmU,MAAO,CAAEC,aAAc,KAAMpU,MAAO,SAAcqU,KAAM,EAAAyJ,WAAA,QAAqBhR,EAAKI,cAAc3W,EAAA,kBACpH,kBAAoB,MAAO,CAAEyJ,MAAO,uBAChC,kBAAoB,KAAU,CAAEwU,SAAUA,EAAUiD,SAAUyF,IAC9DF,GAA2B,kBAAoB,MAAa,QACpE,kBAAoB,MAAO,CAAEhd,MAAO,yBAChC4H,KAAK2T,eAAeoC,GACpB,kBAAoB,MAAO,CAAE3d,MAAO,YAChC,kBAAoB,KAAS,CAAEtH,mBAAoBA,EAAoBC,QAASA,EAASN,WAAYslB,EAAanlB,WAAY2kB,EAAmBplB,QAAS6lB,EAAgBrE,mBAAoBA,EAAoB1J,YAAaA,EAAakO,SAAUxE,EAAoByE,SAAUvE,EAAoBA,mBAAoBA,MAC/T5J,IAAgBlB,GAAgBsB,KAAOJ,IAAgBlB,GAAgBuB,SAAY,kBAAoB,MAAO,CAAElQ,MAAO,aACpH,kBAAoB,KAAU,CAAEuU,SAAUA,EAAUkD,SAAUwF,MACtE,kBAAoB5C,GAAgB,CAAE1hB,QAASA,EAASN,WAAYslB,EAAahE,cAAeA,EAAeC,gBAAiBA,EAAiB/J,YAAaA,EAAa5Z,MAAOA,EAAO4jB,kBAAmBA,IACpN,EAGJ,MAAM,IAAkB,SAAsB,CAAC7R,GAAS6H,cAAa4E,aACjE,MAAMC,GAAiB,QAAWD,EAAOE,SAASC,QAC5CqJ,GAAuB,OAAkB,MACzCC,EAAY,qBAAmClW,EAAO,QAAkBiW,GACxEE,EAAiB,0BAAwCnW,EAAO,QAAkBiW,GAClFb,EAAuB,gCAA8CpV,EAAO,QAAkBiW,GAC9FG,GAAwB,OAAmB,MAC3C5B,EAAa,sBAAqCxU,EAAO,QAAoBoW,GAC7EC,EAAkB,2BAA0CrW,EAAO,QAAoBoW,GACvFE,EAAwB,iCAAgDtW,EAAO,QAAoBoW,GAEzG,IAAIlL,EAAWwB,EAAexB,UACzBA,GAAYrD,IACbqD,EAAW,CAAE,CAAClD,GAAkBH,IAAe,MAEnD,MAAM5Z,EAAQsF,OAAOgK,OAAOhK,OAAOgK,OAAOhK,OAAOgK,OAAO,CAAC,EAAGqJ,IAAY8F,GAAiB,CAAExB,aAC3F,MAAO,CACHqJ,cAAc,QAAgB2B,EAAW,SACzCxB,gBAAgB,QAAgBwB,EAAW,WAC3CvB,cAAc,QAAgBuB,EAAW,SACzCtB,cAAc,QAAgBsB,EAAW,SACzClB,wBAAyBuB,EAAA,iCAAoDvW,GAC7E8U,0BAA2ByB,EAAA,mCAAsDvW,GACjFlQ,oBAAqBymB,EAAA,6BAAgDvW,GACrE6U,cAAc,QAAgBqB,EAAW,SACzCzB,cAAc,QAAgByB,EAAW,SACzCA,YACAC,iBACAf,uBACAa,uBACAhoB,QACA8mB,eAAe,QAAgBmB,EAAW,UAC1C1B,aACA6B,kBACAC,wBACAF,wBACH,IAECI,IAAiB,EAAAzQ,EAAA,KAAW,QAAW,IAAAoH,SAAQ,GAAiB,CAAC,EAA1B,CAA6BmG,M,4EC5LnE,MAAM,GAAS,CAClBmD,WAAY,CACR9kB,gBAAiBC,EAAA,SACjB0gB,QAAS,OACTa,eAAgB,SAChBjhB,WAAYkU,GAAA,SACZtR,OAAQ,OACRD,MAAO,QAEX6hB,UAAW,CACPC,SAAU,YAEdC,cAAe,CACXhU,OAAQiU,GAAA,UAEZC,gBAAiB,CACblE,MAAOmE,GAAA,SACPvX,SAAUwX,GAAA,WCFlB,MAAMC,WAA0B,cAC5Bjb,YAAY/G,GACR0K,MAAM1K,GACN2K,KAAKI,MAAQ,CACTkX,QAAS,GACTC,KAAM,IAEVvX,KAAKQ,UAAY,KACb,MAAM,uBAAEkK,EAAyB,UAA2B,4BAAEC,EAA8B,WAAiC,SAAEiB,EAAQ,QAAE7a,EAAO,WAAEwa,EAAU,cAAEiM,EAAa,cAAEC,EAAa,YAAExP,EAAW,OAAEgD,EAAM,cAAEyM,EAAa,WAAE7L,EAAU,KAAE3G,GAAUlF,KAAK3K,MAC3P,IAAK4V,EACD,OAEJ,MAAMsM,EAAO,GACP9M,GAAgB,OAA+B,CACjDQ,SACAG,WAAW,EACXF,MAAOsM,IAAgCjM,EAAa,eAAiBxa,KAGnEumB,EAAUE,GAAiBjM,EAC3B,CACE,CACI7R,KAAM,IAEV,CACIA,KAAM6R,EACArG,EAAKI,cAAc3W,EAAA,QAAgB,CAAEgpB,MAAO,IAC5CzS,EAAKI,cAAc3W,EAAA,cAG/B,CACE,CACI+K,KAAM,IAEV/F,OAAOgK,OAAO,CAAEmM,UAAMjZ,EAAW6I,KAAMwL,EAAKI,cAAc3W,EAAA,oBAA4B,CAAEoC,YAAY6mB,QAAqB,YAAZ7mB,GAAyBkX,IAAgBlB,GAAgBsB,IAAM,gBAAkBtX,GAAY0Z,EAActX,QAAU,CAAE0kB,YAAY,KAGxP,IAAK,IAAIC,EAAc,IAAI5hB,KAAK2V,EAAa,aAAciM,GAAe,IAAI5hB,KAAK0V,EAAW,aAAckM,EAAY9L,QAAQ8L,EAAY7L,UAAY,GAAI,CACxJ,MAAM8L,GAAQ,EAAA7L,EAAA,GAAO4L,EAAa,cAClC,IAAID,GAAa,EACjBpN,EAAcjV,KAAIwiB,IACDA,EAAQC,IAAIF,GAOrBF,GAAa,EALbG,EAAQE,IAAIH,EAAO,CACfjO,KAAMiO,GAKd,IAGJ,MAAMI,EAAY,IAAIjiB,KAAK6hB,EAAQ,aACnCT,EAAQlnB,KAAK,CACTsJ,KAAMwL,EAAK8E,WAAWmO,EAAW,CAC7B5S,IAAK,UACL0E,MAAO,UAEXH,KAAMiO,EACNF,aACAD,QAAS,QAEjB,CACA,MAAMjO,EAAae,EACbd,EAAkBe,EAExBF,EAAcjV,KAAIwiB,IACd,MAAMI,EAAQ,GACd,IAAI7Z,EACA7E,EACA2e,EACU/kB,MAAM+I,KAAK2b,EAAQ7T,UAAUmU,MAAK,CAACC,EAAGC,IAC5C,IAAItiB,KAAKqiB,EAAEzO,MAAQ,IAAI5T,KAAKsiB,EAAE1O,MACvB,EAEF,IAAI5T,KAAKqiB,EAAEzO,MAAQ,IAAI5T,KAAKsiB,EAAE1O,OAC3B,EAGD,IAGTtU,KAAIijB,IACD/e,IACDA,EAAO+e,GAAQA,EAAK/pB,OAAwB,OAAf+pB,EAAK/pB,MAAiB+pB,EAAK/pB,MAAQ,MAE/D6P,IACDA,EAAOka,EAAKpO,IAAMoO,EAAKpO,KAAOoO,EAAK/pB,MAAQ,kBAAoB,MAAO,CAAE0J,MAAO,oBAA0BqgB,EAAKpO,IAAM,MAEpHoO,EAAKpO,KAAOgO,IACZA,EAAaI,GAGjBL,EAAMhoB,KAAK,CACPxB,MAAO6pB,EAAK9O,IAAe8O,EAAK9O,GAAYC,IACtC,SAAe6O,EAAK9O,GAAYC,GAAiBhb,MAAO6pB,EAAK9O,GAAYC,GAAiBnI,OAC1FyD,EAAKI,cAAc3W,EAAA,gBAC3B,IAGNypB,EAAMM,QAAQ,CAAC,EACf,CACI9pB,MAAQ,kBAAoB,MAAO,KAC/B8K,EACA6E,KAERgZ,EAAKnnB,KAAK,CACNgoB,QACAO,kBAAmBN,EAAW3pB,QAAU,GAAG,OAAWqC,KAAasnB,EAAW3pB,QAAU,GAAG,OAAW8oB,IACtGiB,KAAMJ,EACNO,SAAUnB,GAAkBC,QAAyE7mB,IAAxD6mB,EAActL,MAAKlI,GAAOA,EAAImG,KAAOgO,EAAWhO,MAC/F,IAENrK,KAAK2B,SAAS,CACV2V,UACAC,QACF,EAENvX,KAAK6Y,cAAgB,KACjB,MAAM,MAAExqB,EAAK,KAAE6W,GAASlF,KAAK3K,MAC7B,IAAK,MAAM6O,KAAOvQ,OAAOwQ,OAAO9V,EAAM+Y,WAClC,GAAY,MAARlD,EACA,OAAO,kBAAoB,KAAkB,CAAEpQ,OAAQoQ,EAAK4U,YAAY,IAGhF,OAAQ,kBAAoB,EAAAC,WAAY,KACpC,kBAAoB,EAAAC,eAAgB,CAAEC,KAAM,QAC5C,kBAAoB,EAAAC,eAAgB,KAAMhU,EAAKI,cAAc3W,EAAA,sBAA8B,EAEnGqR,KAAKmZ,UAAYxiB,IACb,MAAM,MAAEtI,GAAU2R,KAAK3K,OACjB,QAAEiiB,GAAYtX,KAAKI,MACzB,IAAIgZ,EACJ,MAAMC,EAAS/B,EAAQ3gB,GACjB2iB,EAAajrB,GAASA,EAAMgZ,UAAYhZ,EAAMgZ,SAOpD,OANIgS,EAAOzB,UAAYyB,EAAOvP,MAGrBwP,GAAcjrB,EAAMgZ,SAASyC,OAASuP,EAAOvP,QAFlDsP,EAAYE,GAAcjrB,EAAMgZ,SAASgS,EAAOzB,UAK7CwB,EACD,CACEziB,QACAyiB,aAEF,CAAC,CAAC,EAEZpZ,KAAKuZ,cAAiB5iB,IACX,CACH6iB,OAAQxZ,KAAKmZ,UAAUxiB,GACvB8iB,OAAQzZ,KAAK0Z,aACbC,YAAahjB,IAGrBqJ,KAAK4Z,eAAiB,CAACvJ,EAAOwJ,EAAYC,KACtC,MAAM,WAAElpB,GAAeoP,KAAK3K,OACtB,KAAEkiB,GAASvX,KAAKI,MACtB,IAAI2Z,EACApO,EAAQ,IACG,IAAXmO,EACAC,EAAUxC,EAAK/hB,KAAIwkB,IACfA,EAAIpB,SAAWiB,EACRG,MAIXD,EAAU,IAAIxC,GACdwC,EAAQD,GAAOlB,SAAWiB,EAC1BlO,EAAQ,CAACoO,EAAQD,GAAOrB,OAE5BzY,KAAK2B,SAAS,CAAE4V,SAAQ,KAChB3mB,GACAA,EAAW+a,EAAOkO,EACtB,GACF,EAEN7Z,KAAK0Z,aAAe,CAACrJ,EAAO1Z,EAAOyiB,KAC/B,MAAM,OAAEK,GAAWzZ,KAAK3K,OAClB,QAAEiiB,GAAYtX,KAAKI,MACrBqZ,GAGAA,EAFgBnC,EAAQ3gB,GAAOihB,QACPwB,IAAc,GAAAa,gBAAA,IACL3C,EAAQ3gB,GAAOmT,KACpD,EAEJ9J,KAAK4Z,eAAiB5Z,KAAK4Z,eAAeM,KAAKla,MAC/CA,KAAK0Z,aAAe1Z,KAAK0Z,aAAaQ,KAAKla,KAC/C,CACA6E,oBACI7E,KAAKQ,WACT,CACAsE,mBAAmBC,GACf,MAAM,OAAEkG,EAAM,cAAEyM,GAAkB1X,KAAK3K,MACjC8kB,EAAgBlP,GAAUA,EAAOzS,KAAO4Y,KAAK9iB,UAAU2c,EAAOzS,MAAQ,IACrDuM,EAAUkG,QAAUlG,EAAUkG,OAAOzS,KAAO4Y,KAAK9iB,UAAUyW,EAAUkG,OAAOzS,MAAQ,MACpF2hB,GAAiBpV,EAAU2S,gBAAkBA,GAChE1X,KAAKQ,WAEb,CACAyE,SACI,MAAM,KAAEC,EAAI,UAAEkV,GAAcpa,KAAK3K,OAC3B,QAAEiiB,EAAO,KAAEC,GAASvX,KAAKI,MAC/B,OAAQ,kBAAoB,GAAAia,qBAAsB,KAC9C,kBAAoB,GAAAC,gBAAiB,CAAE,aAAcpV,EAAKI,cAAc3W,EAAA,0BAAkC8P,UAAW,wBAAyB8b,eAAgB,IAC1J,kBAAoB,GAAAC,MAAO,KACvB,kBAAoB,GAAAC,GAAI,KAAMnD,EAAQ9hB,KAAI,CAACklB,EAAK/jB,IAAoB,IAAVA,EAAe,kBAAoB,GAAAgkB,GAAI,CAAEC,gBAAgB,EAAMpmB,IAAK,OAAOmC,KAAS+jB,EAAI9rB,QAASisB,eAAgB,SAAuB,IAAVlkB,EAAe,kBAAoB,GAAAgkB,GAAI,CAAEG,gBAAgB,EAAMF,gBAAgB,EAAMpmB,IAAK,OAAOmC,KAAS+jB,EAAI9rB,QAASmsB,SAAU,SAAUzC,KAAMoC,EAAI7C,WAAa7X,KAAKuZ,cAAc5iB,QAAS9F,EAAWgqB,eAAgB,QAASG,iBAAkB,QAAUN,EAAIhhB,MAAU,kBAAoB,GAAAihB,GAAI,CAAEnmB,IAAK,OAAOmC,KAAS+jB,EAAI9rB,QAASmsB,SAAU,SAAUzC,KAAMoC,EAAI7C,WAAa7X,KAAKuZ,cAAc5iB,QAAS9F,GAAa6pB,EAAIhhB,UAC5lB,kBAAoB,GAAAuhB,MAAO,KAAMb,EAAa,kBAAoB,GAAAK,GAAI,KAClE,kBAAoB,GAAAS,GAAI,CAAEC,QAAS,KAC/B,kBAAoB,EAAAC,SAAU,KAC1B,kBAAoB,MAAO,CAAEhjB,MAAO,CAAEijB,UAAW,WAC7C,kBAAoB,EAAAC,QAAS,CAAE7O,KAAM,WAAgB8K,EAAK/hB,KAAI,CAACwkB,EAAKuB,IAAc,kBAAoB,GAAAd,GAAI,CAAEjmB,IAAK,OAAO+mB,KAAcvB,EAAI5B,MAAM5iB,KAAI,CAACijB,EAAM+C,IAA4B,IAAdA,EAAmB,kBAAoB,GAAAN,GAAI,CAAEO,UAAWnE,EAAQkE,GAAW9hB,KAAMkhB,gBAAgB,EAAMpmB,IAAK,QAAQgnB,KAAaD,IAAYG,OAAQ,CACtUvW,QAAS6U,EAAIrB,kBACbkB,WAAYG,EAAIpB,SAChB/I,SAAU,CAAC8L,EAAQ9B,IAAe7Z,KAAK4Z,eAAe+B,EAAQ9B,EAAY0B,GAC1EA,YACDV,eAAgB,SAA2B,IAAdW,EAAmB,kBAAoB,GAAAN,GAAI,CAAEO,UAAWnE,EAAQkE,GAAW9hB,KAAMohB,gBAAgB,EAAMF,gBAAgB,EAAMpmB,IAAK,QAAQ+mB,KAAYC,IAAaT,SAAU,SAAUF,eAAgB,QAASG,iBAAkB,QAAUvC,EAAK7pB,OAAW,kBAAoB,GAAAssB,GAAI,CAAEO,UAAWnE,EAAQkE,GAAW9hB,KAAMlF,IAAK,QAAQ+mB,KAAYC,IAAaT,SAAU,UAAYtC,EAAK7pB,cACnagtB,QAAwB,IAAhBrE,EAAKpkB,SAAiB,kBAAoB,MAAO,CAAEiF,MAAO,eAAqB4H,KAAK6Y,iBACpG,EAGJ,MAAM,IAAkB,SAAsB,CAACzY,GAASyM,aACpD,MAAMC,GAAiB,QAAWD,EAAOE,SAASC,SAC5C,SAAEpB,EAAQ,WAAEC,IAAe,QAAsBiB,GACvD,MAAO,CACHlB,WACAC,aACH,IAGCgQ,IAAuB,IAAAtO,SAAQ,GADV,CAAC,EACC,CAA6C8J,IACpEyE,IAAgB,EAAA3V,EAAA,KAAW,OAAW0V,KCrPrC,MAAME,WAA4B,cACrC3f,cACI2D,SAAS1L,WACT2L,KAAKwJ,aAAe,CAAC,EACrBxJ,KAAKI,MAAQzM,OAAOgK,OAAO,CAAC,EAAGqC,KAAKwJ,aACxC,CACAvE,SACI,MAAM,cAAEwS,EAAa,qBAAEuE,EAAoB,WAAEvrB,EAAU,iBAAEwrB,EAAgB,aAAEC,EAAY,WAAEC,EAAU,eAAEC,EAAc,gBAAEC,EAAe,WAAE1pB,EAAU,YAAEsV,EAAW,cAAEyP,GAAmB1X,KAAK3K,MACjLwc,EAAqBzI,GAAsBnB,GACjD,OAAQ,kBAAoB,KAAa,CAAEwP,cAAeA,EAAeuE,qBAAsBA,EAAsBvrB,WAAYA,EAAYwrB,iBAAkBA,EAAkBC,aAAcA,EAAcC,WAAYA,EAAYC,eAAgBA,EAAgBC,gBAAiBA,EAAiB1pB,WAAYA,EAAY+kB,cAAeA,EAAe4E,gBAAgB,EAAMC,cAAc,EAAMC,YAAY,EAAM3K,mBAAoBA,GACjb,EAGJ,MAAM,IAAkB,SAAsB,CAACzR,EAAO/K,KAC3C,CAAC,KAKNonB,IAAyB,IAAAlP,SAAQ,GAHZ,CAE3B,EAC+B,CAA6CwO,IACtEW,IAAkB,EAAAvW,EAAA,IAAWsW,ICYnC,MAAME,WAAiB,cACnBvgB,YAAYkN,EAAYC,GACpBxJ,MAAMuJ,EAAYC,GAClBvJ,KAAKwJ,aAAe,CAChB8N,QAAS,GACTG,eAAe,EACfmF,mBAAmB,EACnBrF,KAAM,GACNG,cAAe,IAEnB1X,KAAKI,MAAQzM,OAAOgK,OAAO,CAAC,EAAGqC,KAAKwJ,cACpCxJ,KAAKgL,iBAAmB,KACpB,MAAM,MAAE3c,EAAK,OAAE4c,GAAWjL,KAAK3K,MACzBgW,EAAYva,EAAmBzC,EAAMid,UACrCC,GAAa,QAAmBld,GAChCmpB,GAAgB,QAAiBnpB,GAMvC,OALsB,OAA+B,CACjD4c,SACAC,MAAOsM,IAAgCjM,EAAa,eAAiBF,GACrED,WAAW,GAEK,EAExBpL,KAAK6c,eAAkBpS,IACnB,MAAM,YAAExC,EAAW,MAAE5Z,EAAK,OAAE4c,EAAM,kBAAEV,GAAsBvK,KAAK3K,OACzD,cAAEoiB,EAAa,kBAAEmF,EAAiB,cAAElF,GAAkB1X,KAAKI,MAC3DiL,EAAYva,EAAmBzC,EAAMid,UACrCkM,GAAgB,QAAiBnpB,GACjC8tB,EAAalR,GAAUA,EAAO6R,KAAO7R,EAAO6R,KAAKnF,MAAQ,EAEzDhM,EAAQ,GAMd,OALA+L,EAAcliB,KAAIijB,IACRA,EAAK/pB,QAAU,GAAG,OAAW2c,KAAeoN,EAAK/pB,QAAU,GAAG,OAAW8oB,KAC3E7L,EAAMvb,KAAKqoB,EACf,IAEI,kBAAoB,IAAa,CAAEd,MAAOF,EAAgB0E,EAAaxQ,EAAMxY,OAAQ4pB,YAAatF,GAAiBC,EAAcvkB,SAAWgpB,IAAe1R,EAActX,OAAS,EAAGpC,QAASymB,EAAgB,GAAG,MAAYA,IAAkBnM,EAAWuE,OAAQgN,EAAmBjR,MAAOA,EAAOqR,QAAShd,KAAKid,uBAAwB9P,gBAAiBhE,GAAmBlB,GAAcsC,kBAAmBA,EAAmB2S,WAAY,QAASC,eAAe,GAAS,EAE1dnd,KAAKod,cAAgB,CAAC3sB,GAAa,EAAO4sB,GAAW,KACjD,MAAM,KAAEnY,EAAI,MAAE7W,EAAK,OAAE4c,EAAM,OAAE4B,GAAW7M,KAAK3K,MACvCsiB,EAAQ1M,GAAUA,EAAO6R,KAAO7R,EAAO6R,KAAKnF,MAAQ,EACpD1Q,EAAQgE,GAAUA,EAAO6R,MAAQ7R,EAAO6R,KAAKhpB,QAAUmX,EAAO6R,KAAKhpB,OAAOmT,MAC1EgE,EAAO6R,KAAKhpB,OAAOmT,MACnBD,GAAUlT,OAAOmT,MACjBC,EAAS+D,GAAUA,EAAO6R,MAAQ7R,EAAO6R,KAAKhpB,QAAUmX,EAAO6R,KAAKhpB,OAAOoT,OAC3E+D,EAAO6R,KAAKhpB,OAAOoT,OACnBF,GAAUlT,OAAOoT,OACjBoW,EAAOha,KAAKia,MAAMrW,EAASD,EAAQ,GACzC,OAAQ,kBAAoB,EAAAuW,WAAY,CAAEC,WAAYJ,EAAU5sB,WAAYA,EAAYitB,UAAW/F,EAAOgG,gBAAiB,CAACtN,EAAOuN,KAAY,QAAoBvvB,EAAOwe,EAAQ+Q,GAAUC,UAAW,CAACxN,EAAOyN,KAAe,QAAczvB,EAAOwe,EAAQ5B,EAAQ6S,GAAaR,KAAMA,EAAMM,QAAS3W,EAAO8W,OAAQ,CAC5SC,gBAAiB9Y,EAAKI,cAAc3W,EAAA,kBAA0B,CAC1D6P,MAAO0G,EAAKI,cAAc3W,EAAA,iBAC1BsvB,UAAWZ,EAAW,SAAW,SAEtCnN,QAASmN,EAAW,EAAAa,kBAAA,OAA2B,EAAAA,kBAAA,IAAuBC,SAAU,sBAAqBd,EAAW,UAAY,KAAQ,EAE/Ird,KAAKoe,SAAW,KACZ,MAAM,YAAEnW,EAAW,MAAE5Z,EAAK,OAAE4c,EAAM,kBAAEqB,EAAiB,OAAEO,GAAW7M,KAAK3K,OACjE,cAAEoiB,EAAa,cAAEC,GAAkB1X,KAAKI,MACxCiL,EAAYva,EAAmBzC,EAAMid,UACrCkM,GAAgB,QAAiBnpB,GACjCkd,GAAa,QAAmBld,GACtC,OAAQ,kBAAoBytB,GAAe,CAAEpR,uBAAwB1C,KAAwC2C,4BAA6BxC,KAA6CpX,QAASymB,EAAgB,GAAG,MAAYA,IAAkBnM,EAAWmM,cAAeA,EAAejM,WAAYA,EAAYkM,cAAeA,EAAe2C,UAAW9N,IAAsB,gBAAwB1b,WAAYoP,KAAKqe,eAAgB5E,OAAQ,CAAC6E,EAAUC,EAAiBzU,KAAS,QAAWzb,EAAOwe,EAAQyR,EAAUC,EAAiBzU,GAAO7B,YAAaA,EAAa5Z,MAAOA,EAAO4c,OAAQA,EAAQyM,cAAeA,GAAiB,EAE/mB1X,KAAKwe,WAAc/T,IACf,MAAM,YAAExC,EAAW,OAAEgD,GAAWjL,KAAK3K,OAC/B,cAAEoiB,EAAa,cAAEC,GAAkB1X,KAAKI,MACxC3P,EAAsC,IAAzBga,EAActX,OAC3BgpB,EAAalR,GAAUA,EAAO6R,KAAO7R,EAAO6R,KAAKnF,MAAQ,EAC/D,OAAQ,kBAAoB+E,GAAiB,CAAEjF,cAAeA,EAAehnB,WAAYA,EAAYwrB,iBAAkBxrB,IAAgBgnB,GAA0C,IAAzBC,EAAcvkB,OAAe+oB,aAAczR,EAActX,OAAQgpB,WAAYA,EAAYC,eAAgBpc,KAAKye,mBAAoBpC,gBAAiBrc,KAAK0e,sBAAuB/rB,WAAYqN,KAAKod,cAAc3sB,GAAawX,YAAaA,EAAayP,cAAeA,GAAiB,EAEjb1X,KAAKye,mBAAsBE,IACvB,MAAM,cAAElH,GAAkBzX,KAAKI,MAChB,SAAXue,EACA3e,KAAK2B,SAAS,CAAE8V,eAAe,EAAOC,cAAe,KAErC,SAAXiH,EACL3e,KAAK2B,SAAS,CACV8V,eAAe,EACfC,cAAe1X,KAAKgL,qBAGR,QAAX2T,GACL3e,KAAK2B,SAAS,CAAE8V,eAAgBA,EAAeC,cAAe,IAClE,EAEJ1X,KAAKkR,yBAA2B,CAACpD,EAAWO,KACxCrO,KAAK2B,SAAS,CAAEmM,YAAWO,WAAU,EAEzCrO,KAAKid,uBAA0BrN,IAC3B5P,KAAK2B,SAAS,CAAEib,kBAAmBhN,GAAS,EAEhD5P,KAAK0e,sBAAwB,KACzB1e,KAAK2B,SAAS,CAAEib,mBAAmB,GAAO,EAE9C5c,KAAK4e,sBAAwB7tB,IACzB,MAAM,MAAE1C,EAAK,OAAEwe,GAAW7M,KAAK3K,MAC/B,IAAIwpB,EAAa9tB,EACbnC,EAAQ,KAGG,KADDmC,GAAWA,EAAQ+tB,QAAQ,SAErCD,EAAa,eAAuB,EAAG,aACvCjwB,EAAQmC,EAAQuG,MAAM,cAE1B,MAAM6Z,EAAWxd,OAAOgK,OAAOhK,OAAOgK,OAAO,CAAC,EAAGyT,KAAKC,MAAMD,KAAK9iB,UAAUD,KAAU,CAEjFid,SAAU,CACN,CAACuT,GAAajwB,GACfyY,cAAUxW,IACjBmP,KAAK2B,SAAS,CAAE8V,eAAe,EAAOC,cAAe,KAAM,KACvD7K,EAAOyE,UAAS,OAAiBH,EAAUtE,EAAOE,UAAU,GAAO,CAAEwE,SAAS,GAAO,GACvF,EAENvR,KAAK+e,uBAAyB,KAC1B/e,KAAK2B,SAAS,CAAE8V,eAAe,EAAOC,cAAe,IAAK,EAE9D1X,KAAKqe,eAAiB,CAAC1S,EAAOkO,GAAa,KACvC,MAAM,cAAEpC,EAAa,cAAEC,GAAkB1X,KAAKI,MAC9C,IAAI0L,EAAW,IAAK2L,EAAgBzX,KAAKgL,mBAAqB0M,GAC1D/L,GAASA,EAAMxY,OAAS,IACpB0mB,EACAlO,EAAMnW,KAAIijB,GAAQ3M,EAAS1b,KAAKqoB,KAGhC9M,EAAMnW,KAAIijB,IACN3M,EAAWA,EAAShY,QAAOoQ,GAAOA,EAAImG,KAAOoO,EAAKpO,IAAG,KAIjErK,KAAK2B,SAAS,CAAE8V,eAAe,EAAOC,cAAe5L,GAAW,EAEpE9L,KAAK6T,eAAiB,KAClB,MAAM,aAAEc,EAAY,WAAEC,GAAe5U,KAAK3K,MAC1C,OAAO,QAAeuf,EAAYD,EAAa,EAEnD3U,KAAK8T,iBAAmB,KACpB,MAAM,eAAEgB,EAAc,WAAEF,GAAe5U,KAAK3K,MAC5C,OAAO,QAAiBuf,EAAYE,EAAe,EAEvD9U,KAAK+T,eAAiB,KAClB,MAAM,aAAEkB,EAAY,WAAEL,GAAe5U,KAAK3K,MAC1C,OAAO,QAAeuf,EAAYK,EAAa,EAEnDjV,KAAKgU,eAAiB,KAClB,MAAM,aAAEe,EAAY,WAAEH,GAAe5U,KAAK3K,MAC1C,OAAO,QAAeuf,EAAYG,EAAa,EAEnD/U,KAAKiU,eAAiB,KAClB,MAAM,aAAEe,EAAY,WAAEJ,GAAe5U,KAAK3K,MAC1C,OAAO,QAAeuf,EAAYI,EAAa,EAEnDhV,KAAKkU,eAAiB,KAClB,MAAM,aAAEW,EAAY,WAAED,GAAe5U,KAAK3K,MAC1C,OAAO,QAAeuf,EAAYC,EAAa,EAEnD7U,KAAKmU,gBAAkB,KACnB,MAAM,0BAAEe,EAAyB,cAAEC,EAAa,WAAEP,GAAe5U,KAAK3K,MACtE,OAAO6f,IAA6B,QAAgBN,EAAYO,EAAc,EAElFnV,KAAKgf,aAAe,KAChB,MAAM,YAAE1U,EAAW,YAAErC,EAAW,kBAAEsC,GAAsBvK,KAAK3K,MAC7DiV,EAAYnB,GAAmBlB,GAAciB,KAA4BqB,EAAkB,EAE/FvK,KAAKye,mBAAqBze,KAAKye,mBAAmBvE,KAAKla,MACvDA,KAAKid,uBAAyBjd,KAAKid,uBAAuB/C,KAAKla,MAC/DA,KAAK0e,sBAAwB1e,KAAK0e,sBAAsBxE,KAAKla,MAC7DA,KAAK+e,uBAAyB/e,KAAK+e,uBAAuB7E,KAAKla,MAC/DA,KAAKqe,eAAiBre,KAAKqe,eAAenE,KAAKla,KACnD,CACA6E,oBACI7E,KAAKgf,cACT,CACAla,mBAAmBC,EAAWmK,GAC1B,MAAM,YAAEjH,EAAW,OAAEgD,EAAM,YAAEoB,EAAW,kBAAE9B,EAAiB,OAAEsC,GAAW7M,KAAK3K,OACvE,cAAEqiB,GAAkB1X,KAAKI,MACzB6e,EAAiBla,EAAUkD,cAAgBA,EAC3CkJ,EAAWpM,EAAUwF,oBAAsBA,EAC3C2U,GAAYjU,IAAWoB,EACvB8S,GAActS,EAAOE,SAASC,OAC9BlB,EAAWoD,EAAUwI,gBAAkBA,GACzCuH,GAAkB9N,GAAY+N,GAAYC,GAAcrT,IACxD9L,KAAKgf,cAEb,CACA/Z,SACI,MAAM,aAAE0P,EAAY,eAAEG,EAAc,aAAEG,EAAY,SAAEtI,EAAQ,SAAEC,EAAQ,aAAEmI,EAAY,aAAEC,EAAY,KAAE9P,EAAI,aAAE2P,EAAY,qBAAEW,EAAoB,YAAEvN,EAAW,sBAAEyO,EAAqB,MAAEroB,EAAK,OAAE4c,EAAM,YAAEoB,EAAW,kBAAEC,EAAiB,OAAEO,GAAY7M,KAAK3K,MAE5OogB,GAAkBzV,KAAK6T,kBAAoB2B,IAAyB,cACpEE,GAAoB1V,KAAK8T,oBAAsB0B,IAAyB,cACxEG,GAAkB3V,KAAKgU,kBAAoBwB,IAAyB,cACpEI,GAAkB5V,KAAKiU,kBAAoBuB,IAAyB,cACpEK,GAAkB7V,KAAKkU,kBAAoBsB,IAAyB,cACpE4J,GAAkBpf,KAAK+T,kBAAoByB,IAAyB,cACpEM,GAAmB9V,KAAKmU,mBAAqBqB,IAAyB,cACtEO,EAAcN,GAChBC,GACAC,GACAC,GACAwJ,GACAvJ,GACAC,EACEsE,EAAY5E,IAAyB,iBAA0BkB,IAA0B,gBACzFjM,EAAgBzK,KAAKgL,mBACrBva,EAAsC,IAAzBga,EAActX,OAC3BgpB,EAAalR,GAAUA,EAAO6R,KAAO7R,EAAO6R,KAAKnF,MAAQ,EACzDtM,EAAYva,EAAmBzC,EAAMid,UACrCkM,GAAgB,QAAiBnpB,GACjCmQ,EAAQ0G,EAAKI,cAAc3W,EAAA,iBAEjC,OAAI0d,EACO,kBAAoB,IAAc,CAAE7N,MAAOA,IAE7C4b,EACE,kBAAoB,IAAS,CAAE5b,MAAOA,IAExCuX,EACE,kBAAoB,IAAa,CAAEvX,MAAOA,KAE1C,QAAQmW,KACf,QAAQG,KACR,QAAQG,KACR,QAAQF,KACR,QAAQC,KACR,QAAQH,GAGJ,kBAAoB,MAAO,CAAEzc,MAAOvG,EAAOW,UAC/C,kBAAoBokB,GAAgB,CAAEjK,SAAUA,EAAUC,SAAUA,EAAU7b,QAASymB,EAAgB,GAAG,MAAYA,IAAkBnM,EAAWgK,mBAAoBzmB,IAAS,QAAuBP,EAAOwe,EAAQje,GAAQ0mB,mBAAoB1mB,IAAS,QAAuBP,EAAOwe,EAAQje,GAAQywB,qBAAsBrf,KAAKkR,yBAA0Ba,cAAeje,IAAU,QAAkBzF,EAAOwe,EAAQ/Y,GAASke,gBAAiBle,IAAU,QAAoBzF,EAAOwe,EAAQ/Y,GAASyhB,kBAAmBvV,KAAK4e,sBAAuBlK,qBAAsB1U,KAAK+e,uBAAwB9W,YAAaA,IACvlBkU,EAAa,GAAM,kBAAoB,MAAO,CAAE/jB,MAAOvG,EAAOU,cAC1D,kBAAoB,MAAO,CAAE6F,MAAOvG,EAAOC,gBACvC,kBAAoB0b,GAAe,CAAEb,SAAUA,EAAUC,SAAUA,EAAUlC,uBAAwB1C,KAAwC2C,4BAA6BxC,KAA6CF,YAAaA,MAC5O,kBAAoB,MAAO,CAAE7P,MAAOvG,EAAOiB,cACvC,kBAAoB,MAAO,CAAEsF,MAAOvG,EAAOkB,kBAAoBiN,KAAKwe,WAAW/T,IAC/EzK,KAAK6c,eAAepS,GACpB6B,IAAsB,gBAA0B,kBAAoB,IAAS,MAAU,kBAAoB,aAAgB,KACvH,kBAAoB,MAAO,CAAElU,MAAOvG,EAAOgB,gBAAkBmN,KAAKoe,YAClE,kBAAoB,MAAO,CAAEhmB,MAAOvG,EAAOa,qBACvC,kBAAoB,MAAO,CAAE0F,MAAOvG,EAAOc,YAAcqN,KAAKod,cAAc3sB,GAAY,QAb7F,kBAAoB,IAAQ,CAAE+N,MAAOA,GAcpD,EAGJ,MAAM,IAAkB,SAAsB,CAAC4B,GAASyM,aACpD,MAAMC,GAAiB,QAAWD,EAAOE,SAASC,QAE5CqJ,GAAuB,OAAkB,MACzCC,EAAY,qBAAmClW,EAAO,QAAkBiW,GACxEE,EAAiB,0BAAwCnW,EAAO,QAAkBiW,GAClFb,EAAuB,gCAA8CpV,EAAO,QAAkBiW,GAC9F1B,GAAe,QAAgB2B,EAAW,SAC1CxB,GAAiB,QAAgBwB,EAAW,WAC5CrB,GAAe,QAAgBqB,EAAW,SAC1CvB,GAAe,QAAgBuB,EAAW,SAC1CtB,GAAe,QAAgBsB,EAAW,SAC1CzB,GAAe,QAAgByB,EAAW,SAC1CnB,GAAgB,QAAgBmB,EAAW,UAC3CE,GAAwB,OAAmB,MAC3C5B,EAAa,sBAAqCxU,EAAO,QAAoBoW,GAC7EC,EAAkB,2BAA0CrW,EAAO,QAAoBoW,GACvFE,EAAwB,iCAAgDtW,EAAO,QAAoBoW,GAEnGvH,GAAgB,QAAwBnC,IACxC,SAAElB,EAAQ,WAAEC,IAAe,QAAsBiB,GACjD7E,EZjM2B,GAAG0M,eAAcG,iBAAgBG,eAAcF,eAAcC,eAAcH,eAAc/H,iBAAgBqI,gBAAeP,iBACzJ,MAAM3M,EAAc6E,EAAe7E,YAEnC,OAAQA,GACJ,KAAKlB,GAAgBsB,IACrB,KAAKtB,GAAgBuB,OACrB,KAAKvB,GAAgB2B,MACrB,KAAK3B,GAAgB4B,SACrB,KAAK5B,GAAgBwB,IACrB,KAAKxB,GAAgByB,OACrB,KAAKzB,GAAgB0B,IACrB,KAAK1B,GAAgBuY,OACrB,KAAKvY,GAAgB6B,IACrB,KAAK7B,GAAgB+B,SACrB,KAAK/B,GAAgBgC,KACjB,OAAOd,EAEf,IAAI,QAAe2M,EAAYC,GAC3B,OAAO9N,GAAgB8B,IAE3B,IAAI,QAAgB+L,EAAYO,GAC5B,OAAOpO,GAAgBgC,KAE3B,MAAMwW,GAAc,QAAa3K,KAAe,QAAiBD,EAAcE,GACzE2K,GAAgB,QAAe5K,KAAe,QAAiBE,EAAgBD,GAC/E4K,GAAc,QAAa7K,KAAe,QAAiBG,EAAcF,GACzE6K,GAAc,QAAa9K,KAAe,QAAiBI,EAAcH,GAC/E,OAAI0K,GAAeC,GAAiBC,GAAeC,EACxC3Y,GAAgB+B,UAEvB,QAAe8L,EAAYD,GACpB5N,GAAgBsB,KAEvB,QAAiBuM,EAAYE,GACtB/N,GAAgB2B,OAEvB,QAAekM,EAAYG,GACpBhO,GAAgBwB,KAEvB,QAAeqM,EAAYI,GACpBjO,GAAgB0B,KAEvB,QAAemM,EAAYK,GACpBlO,GAAgB6B,SAD3B,CAGgB,EYoJI+W,CAAsB,CACtChL,eACAG,iBACAG,eACAF,eACAC,eACAH,eACA/H,iBACAqI,gBACAP,eAGJ,IAAItJ,EAAWwB,EAAexB,UACzBA,GAAYrD,IACbqD,EAAW,CAAE,CAAClD,GAAkBH,IAAe,MAEnD,MAAM0E,EAAW1E,IAAgBlB,GAAgBsB,KAAOJ,IAAgBlB,GAAgBuB,QAAS,cAAgBzX,EAC3G+b,GAAW,UACXve,EAAQsF,OAAOgK,OAAOhK,OAAOgK,OAAOhK,OAAOgK,OAAO,CAAC,EAAGqJ,IAAY8F,GAAiB,CAAExB,aACrF2B,EAAc,CAChBC,UAAWP,EACXC,WACAhB,WACAzE,QAAS9Y,EAAM8Y,QACfrT,OAAQzF,EAAMyF,OACdsT,UAAW/Y,EAAM+Y,UACjBkE,WACAjE,SAAUhZ,EAAMgZ,SAChBwE,cAEEsB,EAAkBhE,GAAmBlB,GACrCmF,EAAalE,KACbqB,GAAoB,QAAS0C,GAC7BhC,EAAS,kBAA6B7K,EAAO+M,EAAiBC,EAAY7C,GAC1E8B,EAAc,uBAAkCjM,EAAO+M,EAAiBC,EAAY7C,GACpF+B,EAAoB,6BAAwClM,EAAO+M,EAAiBC,EAAY7C,GACtG,MAAO,CACHoK,eACAG,iBACAnI,WACAC,WACAqC,gBACA8F,eACAC,eACAE,0BAA2ByB,EAAA,mCAAsDvW,GACjF6U,eACAJ,eACA5M,cACAqO,YACAC,iBACAf,uBACAa,uBACAhoB,QACA4c,SACAoB,cACAC,oBACA/B,oBACA4K,gBACAP,aACA6B,kBACAC,wBACAF,wBACH,IAEC,GAAqB,CACvBlM,YAAa,kBAEjB,IAAe,EAAAnE,EAAA,KAAW,QAAW,IAAAoH,SAAQ,GAAiB,GAAzB,CAA6CoP,K,0LC9WlF,MAAMiD,EAAY,CAAChL,EAAYiL,KAC3B,IAAI3X,GAAS,EACb,GAAI0M,GAActhB,MAAM0H,QAAQ4Z,EAAWpc,MAAO,CAE9C,MAAMA,EAAOoc,EAAWpc,KAAK4T,MAAKtV,GAAKA,EAAEoC,OAAS2mB,IAClD3X,EAAS1P,GAAQA,EAAKsnB,MAC1B,MAGI5X,EAAS0M,IAAkC,IAApBA,EAAWpc,KAEtC,OAAO0P,CAAM,EAEX6X,EAAgBzJ,IAClB,IAAIpO,GAAS,EAKb,OAJIoO,GAAaA,EAAUwG,OAEvB5U,EAASoO,EAAUwG,KAAKnF,MAAQ,GAE7BzP,CAAM,EAGJ8X,EAAgBpL,GAClBgL,EAAUhL,EAAY,SAGpBf,EAAiB,CAACe,EAAYD,IAChCqL,EAAapL,IAAemL,EAAapL,GAGvCsL,EAAkBrL,GACpBgL,EAAUhL,EAAY,WAGpBd,EAAmB,CAACc,EAAYE,IAClCmL,EAAerL,IAAemL,EAAajL,GAGzCoL,EAAgBtL,GAClBgL,EAAUhL,EAAY,SAGpBb,EAAiB,CAACa,EAAYK,IAChCiL,EAAatL,IAAemL,EAAa9K,GAGvCkL,EAAsBvL,GACxBgL,EAAUhL,EAAY,gBAGpBwL,EAAgBxL,GAClBgL,EAAUhL,EAAY,SAGpBZ,EAAiB,CAACY,EAAYG,IAChC6K,EAAUhL,EAAY,UAAuBmL,EAAahL,GAGxDsL,EAAgBzL,GAClBwL,EAAaxL,GAGXX,EAAiB,CAACW,EAAYI,IAChCqL,EAAazL,IAAemL,EAAa/K,GAGvCsL,EAAgB1L,GAClBgL,EAAUhL,EAAY,SAGpBV,EAAiB,CAACU,EAAYC,IAChCyL,EAAa1L,IAAemL,EAAalL,GAGvC0L,EAAiB3L,GACnBgL,EAAUhL,EAAY,UAGpBT,EAAkB,CAACS,EAAYO,IACjCoL,EAAc3L,IAAemL,EAAa5K,GAGxCqL,EAAgB5L,GAClBgL,EAAUhL,EAAY,Q","sources":["webpack:///./node_modules/@patternfly/react-tokens/dist/js/chart_color_cyan_300.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/chart_color_gold_300.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/chart_color_purple_300.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_Color_200.js","webpack:///./src/api/queries/userAccessQuery.ts","webpack:///./src/routes/views/components/perspective/perspective.tsx","webpack:///./src/utils/computedReport/getComputedExplorerReportItems.ts","webpack:///./src/routes/views/explorer/explorer.styles.ts","webpack:///./node_modules/victory-stack/es/helper-methods.js","webpack:///./node_modules/victory-stack/es/victory-stack.js","webpack:///./node_modules/@patternfly/react-charts/dist/esm/components/ChartStack/ChartStack.js","webpack:///./src/routes/views/components/charts/costExplorerChart/costExplorerChart.styles.ts","webpack:///./src/routes/views/components/charts/costExplorerChart/costExplorerChart.tsx","webpack:///./src/routes/views/explorer/explorerChart.styles.ts","webpack:///./src/routes/views/explorer/explorerUtils.ts","webpack:///./src/routes/views/explorer/explorerChart.tsx","webpack:///./src/routes/views/explorer/explorerDatePicker.styles.ts","webpack:///./src/routes/views/explorer/explorerDatePicker.tsx","webpack:///./src/routes/views/explorer/explorerDateRange.tsx","webpack:///./src/routes/views/explorer/explorerFilter.styles.ts","webpack:///./src/routes/views/explorer/explorerFilter.tsx","webpack:///./src/routes/views/explorer/explorerHeader.styles.ts","webpack:///./src/routes/views/explorer/explorerHeader.tsx","webpack:///./src/routes/views/explorer/explorerTable.styles.ts","webpack:///./src/routes/views/explorer/explorerTable.tsx","webpack:///./src/routes/views/explorer/explorerToolbar.tsx","webpack:///./src/routes/views/explorer/explorer.tsx","webpack:///./src/utils/userAccess.ts"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.chart_color_cyan_300 = {\n  \"name\": \"--pf-chart-color-cyan-300\",\n  \"value\": \"#009596\",\n  \"var\": \"var(--pf-chart-color-cyan-300, #009596)\"\n};\nexports[\"default\"] = exports.chart_color_cyan_300;","\"use strict\";\nexports.__esModule = true;\nexports.chart_color_gold_300 = {\n  \"name\": \"--pf-chart-color-gold-300\",\n  \"value\": \"#f4c145\",\n  \"var\": \"var(--pf-chart-color-gold-300, #f4c145)\"\n};\nexports[\"default\"] = exports.chart_color_gold_300;","\"use strict\";\nexports.__esModule = true;\nexports.chart_color_purple_300 = {\n  \"name\": \"--pf-chart-color-purple-300\",\n  \"value\": \"#5752d1\",\n  \"var\": \"var(--pf-chart-color-purple-300, #5752d1)\"\n};\nexports[\"default\"] = exports.chart_color_purple_300;","\"use strict\";\nexports.__esModule = true;\nexports.global_Color_200 = {\n  \"name\": \"--pf-global--Color--200\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--Color--200)\"\n};\nexports[\"default\"] = exports.global_Color_200;","import { parse, stringify } from 'qs';\nexport function getUserAccessQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseUserAccessQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","import messages from 'locales/messages';\nimport React from 'react';\nimport { PerspectiveSelect } from 'routes/views/components/perspective/perspectiveSelect';\n// Infrastructure AWS options\nconst infrastructureAwsOptions = [{ label: messages.perspectiveValues, value: 'aws' }];\n// Infrastructure AWS filtered by OpenShift options\nconst infrastructureAwsOcpOptions = [{ label: messages.perspectiveValues, value: 'aws_ocp' }];\n// Infrastructure Azure options\nconst infrastructureAzureOptions = [{ label: messages.perspectiveValues, value: 'azure' }];\n// Infrastructure Oci options\nconst infrastructureOciOptions = [{ label: messages.perspectiveValues, value: 'oci' }];\n// Infrastructure Azure filtered by OpenShift options\nconst infrastructureAzureOcpOptions = [{ label: messages.perspectiveValues, value: 'azure_ocp' }];\n// Infrastructure GCP options\nconst infrastructureGcpOptions = [{ label: messages.perspectiveValues, value: 'gcp' }];\n// Infrastructure GCP filtered by OCP options\nconst infrastructureGcpOcpOptions = [{ label: messages.perspectiveValues, value: 'gcp_ocp' }];\n// Infrastructure IBM options\nconst infrastructureIbmOptions = [{ label: messages.perspectiveValues, value: 'ibm' }];\n// Infrastructure IBM filtered by OCP options\nconst infrastructureIbmOcpOptions = [{ label: messages.perspectiveValues, value: 'ibm_ocp' }];\n// Infrastructure Ocp cloud options\nconst infrastructureOcpCloudOptions = [{ label: messages.perspectiveValues, value: 'ocp_cloud' }];\n// Ocp options\nconst ocpOptions = [{ label: messages.perspectiveValues, value: 'ocp' }];\n// RHEL options\nconst rhelOptions = [{ label: messages.perspectiveValues, value: 'rhel' }];\nconst getInfrastructureOptions = ({ hasAws, hasAwsOcp, hasAzure, hasAzureOcp, hasGcp, hasGcpOcp, hasIbm, hasIbmOcp, hasOci, isIbmFeatureEnabled, }) => {\n    const options = [];\n    if (hasAws) {\n        options.push(...infrastructureAwsOptions);\n    }\n    if (hasAwsOcp) {\n        options.push(...infrastructureAwsOcpOptions);\n    }\n    if (hasGcp) {\n        options.push(...infrastructureGcpOptions);\n    }\n    if (hasGcpOcp) {\n        options.push(...infrastructureGcpOcpOptions);\n    }\n    if (hasIbm) {\n        options.push(...infrastructureIbmOptions);\n    }\n    if (hasIbmOcp && isIbmFeatureEnabled) {\n        options.push(...infrastructureIbmOcpOptions);\n    }\n    if (hasAzure) {\n        options.push(...infrastructureAzureOptions);\n    }\n    if (hasAzureOcp) {\n        options.push(...infrastructureAzureOcpOptions);\n    }\n    if (hasOci) {\n        options.push(...infrastructureOciOptions);\n    }\n    return options;\n};\nconst Perspective = ({ currentItem, hasAws, hasAwsOcp, hasAzure, hasAzureOcp, hasGcp, hasGcpOcp, hasIbm, hasIbmOcp, hasOci, hasOcp, hasOcpCloud, hasRhel, isDisabled, isIbmFeatureEnabled, isInfrastructureTab, isRhelTab, onSelected, }) => {\n    // Dynamically show options if providers are available\n    const options = [];\n    // Note isInfrastructureTab and isRhelTab will be undefined for cost explorer\n    if (isInfrastructureTab !== undefined || isRhelTab !== undefined) {\n        if (isInfrastructureTab) {\n            if (hasOcpCloud) {\n                options.push(...infrastructureOcpCloudOptions);\n            }\n            options.push(...getInfrastructureOptions({\n                hasAws,\n                hasAwsOcp,\n                hasAzure,\n                hasAzureOcp,\n                hasGcp,\n                hasGcpOcp,\n                hasIbm,\n                hasIbmOcp,\n                hasOci,\n                isIbmFeatureEnabled,\n            }));\n        }\n        else if (isRhelTab) {\n            if (hasRhel) {\n                options.push(...rhelOptions);\n            }\n        }\n        else if (hasOcp) {\n            options.push(...ocpOptions);\n        }\n    }\n    else {\n        if (hasOcp) {\n            options.push(...ocpOptions);\n        }\n        if (hasOcpCloud) {\n            options.push(...infrastructureOcpCloudOptions);\n        }\n        if (hasRhel) {\n            options.push(...rhelOptions);\n        }\n        options.push(...getInfrastructureOptions({\n            hasAws,\n            hasAwsOcp,\n            hasAzure,\n            hasAzureOcp,\n            hasGcp,\n            hasGcpOcp,\n            hasIbm,\n            hasIbmOcp,\n            hasOci,\n            isIbmFeatureEnabled,\n        }));\n    }\n    return (React.createElement(PerspectiveSelect, { currentItem: currentItem || options[0].value, isDisabled: isDisabled, onSelected: onSelected, options: options }));\n};\nexport default Perspective;\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.account) {\n        return 'account';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.gcp_project) {\n        return 'gcp_project';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    if (groupBy.org_unit_id) {\n        return 'org_unit_id';\n    }\n    if (groupBy.payer_tenant_id) {\n        return 'payer_tenant_id';\n    }\n    if (groupBy.product_service) {\n        return 'product_service';\n    }\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.region) {\n        return 'region';\n    }\n    if (groupBy.resource_location) {\n        return 'resource_location';\n    }\n    if (groupBy.service) {\n        return 'service';\n    }\n    if (groupBy.service_name) {\n        return 'service_name';\n    }\n    if (groupBy.subscription_guid) {\n        return 'subscription_guid';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    chartContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n        paddingRight: global_spacer_lg.value,\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    chartContent: {\n        paddingTop: global_spacer_lg.value,\n    },\n    explorer: {\n        minHeight: '100%',\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    tableContent: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    toolbarContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import _orderBy from \"lodash/orderBy\";\nimport _keys from \"lodash/keys\";\nimport _assign from \"lodash/assign\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Helpers, Scale, Wrapper } from \"victory-core\";\nimport isEqual from \"react-fast-compare\";\nvar fallbackProps = {\n  width: 450,\n  height: 300,\n  padding: 50\n}; // Assumes data in `datasets` is sorted by `Data.getData`.\n\nfunction fillData(props, datasets) {\n  var fillInMissingData = props.fillInMissingData;\n  var xMap = datasets.reduce(function (prev, dataset) {\n    dataset.forEach(function (datum) {\n      prev[datum._x instanceof Date ? datum._x.getTime() : datum._x] = true;\n    });\n    return prev;\n  }, {});\n\n  var xKeys = _keys(xMap).map(function (k) {\n    return Number(k);\n  });\n\n  var xArr = _orderBy(xKeys);\n\n  return datasets.map(function (dataset) {\n    var indexOffset = 0;\n    var isDate = dataset[0] && dataset[0]._x instanceof Date;\n    var filledInData = xArr.map(function (x, index) {\n      x = Number(x);\n      var datum = dataset[index - indexOffset];\n\n      if (datum) {\n        var x1 = isDate ? datum._x.getTime() : datum._x;\n\n        if (x1 === x) {\n          return datum;\n        }\n\n        indexOffset++;\n\n        var _y = fillInMissingData ? 0 : null;\n\n        x = isDate ? new Date(x) : x;\n        return {\n          x: x,\n          y: _y,\n          _x: x,\n          _y: _y\n        };\n      }\n\n      var y = fillInMissingData ? 0 : null;\n      x = isDate ? new Date(x) : x;\n      return {\n        x: x,\n        y: y,\n        _x: x,\n        _y: y\n      };\n    });\n    return filledInData;\n  });\n}\n\nfunction getY0(datum, index, datasets) {\n  if (datum.y0) {\n    return datum.y0;\n  }\n\n  var y = datum._y;\n  var group = datum._group;\n  var firstDatasetBaseline = datasets[0].map(function (d) {\n    return d.y0;\n  });\n  var previousDatasets = datasets.slice(0, index);\n  var previousPoints = previousDatasets.reduce(function (prev, dataset) {\n    return prev.concat(dataset.filter(function (previousDatum) {\n      return datum._x instanceof Date ? previousDatum._x.getTime() === datum._x.getTime() : previousDatum._x === datum._x;\n    }).map(function (previousDatum) {\n      return previousDatum._y || 0;\n    }));\n  }, []);\n  var y0 = previousPoints.length && previousPoints.reduce(function (memo, value) {\n    var sameSign = y < 0 && value < 0 || y >= 0 && value >= 0;\n    return sameSign ? Number(value) + memo : memo;\n  }, firstDatasetBaseline[group] || 0);\n  return previousPoints.some(function (point) {\n    return point instanceof Date;\n  }) ? new Date(y0) : y0;\n}\n/* eslint-disable no-nested-ternary */\n\n\nfunction addLayoutData(props, datasets, index) {\n  var xOffset = props.xOffset || 0;\n  return datasets[index].map(function (datum) {\n    var yOffset = getY0(datum, index, datasets) || 0;\n    return _assign({}, datum, {\n      _y0: !(datum._y instanceof Date) ? yOffset : yOffset ? new Date(yOffset) : datum._y,\n      _y1: datum._y === null ? null : datum._y instanceof Date ? new Date(Number(datum._y) + Number(yOffset)) : datum._y + yOffset,\n      _x1: datum._x === null ? null : datum._x instanceof Date ? new Date(Number(datum._x) + Number(xOffset)) : datum._x + xOffset\n    });\n  });\n}\n/* eslint-enable no-nested-ternary */\n\n\nfunction stackData(props, childComponents) {\n  var dataFromChildren = Wrapper.getDataFromChildren(props, childComponents);\n  var filterNullChildData = dataFromChildren.map(function (dataset) {\n    return dataset.filter(function (datum) {\n      return datum._x !== null && datum._y !== null;\n    });\n  });\n  var datasets = fillData(props, filterNullChildData);\n  return datasets.map(function (d, i) {\n    return addLayoutData(props, datasets, i);\n  });\n}\n\nexport function getCalculatedProps(props, childComponents) {\n  childComponents = childComponents || React.Children.toArray(props.children);\n  var role = \"stack\";\n  props = Helpers.modifyProps(props, fallbackProps, role);\n  var style = Wrapper.getStyle(props.theme, props.style, role);\n  var categories = props.categories || Wrapper.getCategories(props, childComponents);\n  var datasets = props.datasets || stackData(props, childComponents);\n  var children = childComponents.map(function (c, i) {\n    return /*#__PURE__*/React.cloneElement(c, {\n      data: datasets[i]\n    });\n  });\n  var domain = {\n    x: Wrapper.getDomain(_assign({}, props, {\n      categories: categories\n    }), \"x\", children),\n    y: Wrapper.getDomain(_assign({}, props, {\n      categories: categories\n    }), \"y\", children)\n  };\n  var range = props.range || {\n    x: Helpers.getRange(props, \"x\"),\n    y: Helpers.getRange(props, \"y\")\n  };\n  var baseScale = {\n    x: Scale.getScaleFromProps(props, \"x\") || Wrapper.getScale(props, \"x\"),\n    y: Scale.getScaleFromProps(props, \"y\") || Wrapper.getScale(props, \"y\")\n  };\n  var scale = {\n    x: baseScale.x.domain(domain.x).range(props.horizontal ? range.y : range.x),\n    y: baseScale.y.domain(domain.y).range(props.horizontal ? range.x : range.y)\n  };\n  var _props = props,\n      colorScale = _props.colorScale,\n      horizontal = _props.horizontal;\n  return {\n    datasets: datasets,\n    categories: categories,\n    range: range,\n    domain: domain,\n    horizontal: horizontal,\n    scale: scale,\n    style: style,\n    colorScale: colorScale,\n    role: role\n  };\n} // We need to remove sharedEvents in order to memoize the calculated data\n// With shared events, the props change on every event, and every value is re-calculated\n\nvar withoutSharedEvents = function (props) {\n  var children = props.children;\n  var modifiedChildren = React.Children.toArray(children).map(function (_child) {\n    var child = _child;\n    return _objectSpread(_objectSpread({}, child), {}, {\n      props: Helpers.omit(child.props, [\"sharedEvents\"])\n    });\n  });\n  props.children = modifiedChildren;\n  return props;\n};\n\nexport function useMemoizedProps(initialProps) {\n  var modifiedProps = withoutSharedEvents(initialProps);\n\n  var _React$useState = React.useState(modifiedProps),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      props = _React$useState2[0],\n      setProps = _React$useState2[1]; // React.memo uses shallow equality to compare objects. This way props\n  // will only be re-calculated when they change.\n\n\n  React.useEffect(function () {\n    if (!isEqual(modifiedProps, props)) {\n      setProps(modifiedProps);\n    }\n  }, [props, setProps, modifiedProps]);\n  return React.useMemo(function () {\n    return getCalculatedProps(props, props.children);\n  }, [props]);\n}\n\nfunction getLabels(props, datasets, index) {\n  if (!props.labels) {\n    return undefined;\n  }\n\n  return datasets.length === index + 1 ? props.labels : undefined;\n}\n\nexport function getChildProps(props, calculatedProps) {\n  var categories = calculatedProps.categories,\n      domain = calculatedProps.domain,\n      range = calculatedProps.range,\n      scale = calculatedProps.scale,\n      horizontal = calculatedProps.horizontal;\n  return {\n    height: props.height,\n    width: props.width,\n    padding: Helpers.getPadding(props),\n    standalone: false,\n    theme: props.theme,\n    categories: categories,\n    domain: domain,\n    range: range,\n    scale: scale,\n    horizontal: horizontal\n  };\n}\n\nfunction getColorScale(props, child) {\n  var role = child.type && child.type.role;\n  var colorScaleOptions = child.props.colorScale || props.colorScale;\n\n  if (role !== \"group\" && role !== \"stack\") {\n    return undefined;\n  }\n\n  return props.theme ? colorScaleOptions || props.theme.props.colorScale : colorScaleOptions;\n}\n\nexport function getChildren(props, childComponents, calculatedProps) {\n  props = Helpers.modifyProps(props, fallbackProps, \"stack\");\n  childComponents = childComponents || React.Children.toArray(props.children);\n  calculatedProps = calculatedProps || getCalculatedProps(props, childComponents);\n  var _calculatedProps = calculatedProps,\n      datasets = _calculatedProps.datasets;\n  var childProps = getChildProps(props, calculatedProps);\n  var parentName = props.name || \"stack\";\n  return childComponents.map(function (child, index) {\n    var role = child.type && child.type.role;\n    var data = datasets[index];\n    var style = Wrapper.getChildStyle(child, index, calculatedProps);\n    var labels = props.labels ? getLabels(props, datasets, index) : child.props.labels;\n    var name = child.props.name || \"\".concat(parentName, \"-\").concat(role, \"-\").concat(index);\n    return /*#__PURE__*/React.cloneElement(child, _assign({\n      key: \"\".concat(name, \"-key-\").concat(index),\n      labels: labels,\n      name: name,\n      domainPadding: child.props.domainPadding || props.domainPadding,\n      theme: props.theme,\n      labelComponent: props.labelComponent || child.props.labelComponent,\n      style: style,\n      colorScale: getColorScale(props, child),\n      data: data,\n      polar: props.polar\n    }, childProps));\n  });\n}","import _isEmpty from \"lodash/isEmpty\";\nimport _defaults from \"lodash/defaults\";\nimport _assign from \"lodash/assign\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { CommonProps, Helpers, Hooks, PropTypes as CustomPropTypes, UserProps, VictoryContainer, VictoryTheme, Wrapper } from \"victory-core\";\nimport { VictorySharedEvents } from \"victory-shared-events\";\nimport { getChildren, useMemoizedProps } from \"./helper-methods\";\nimport isEqual from \"react-fast-compare\";\nvar fallbackProps = {\n  width: 450,\n  height: 300,\n  padding: 50\n};\n\nvar VictoryStackBase = function (initialProps) {\n  // eslint-disable-next-line no-use-before-define\n  var role = VictoryStack.role;\n\n  var _Hooks$useAnimationSt = Hooks.useAnimationState(),\n      setAnimationState = _Hooks$useAnimationSt.setAnimationState,\n      getAnimationProps = _Hooks$useAnimationSt.getAnimationProps,\n      getProps = _Hooks$useAnimationSt.getProps;\n\n  var props = getProps(initialProps);\n  var modifiedProps = Helpers.modifyProps(props, fallbackProps, role);\n  var eventKey = modifiedProps.eventKey,\n      containerComponent = modifiedProps.containerComponent,\n      standalone = modifiedProps.standalone,\n      groupComponent = modifiedProps.groupComponent,\n      externalEventMutations = modifiedProps.externalEventMutations,\n      width = modifiedProps.width,\n      height = modifiedProps.height,\n      theme = modifiedProps.theme,\n      polar = modifiedProps.polar,\n      horizontal = modifiedProps.horizontal,\n      name = modifiedProps.name;\n  var childComponents = React.Children.toArray(modifiedProps.children);\n  var calculatedProps = useMemoizedProps(modifiedProps);\n  var domain = calculatedProps.domain,\n      scale = calculatedProps.scale,\n      style = calculatedProps.style;\n  var newChildren = React.useMemo(function () {\n    var children = getChildren(props, childComponents, calculatedProps);\n    var orderedChildren = children.map(function (child, index) {\n      var childProps = _assign({\n        animate: getAnimationProps(props, child, index)\n      }, child.props);\n\n      return /*#__PURE__*/React.cloneElement(child, childProps);\n    });\n    /*\n      reverse render order for children of `VictoryStack` so that higher children in the stack\n      are rendered behind lower children. This looks nicer for stacked bars with cornerRadius, and\n      areas with strokes\n    */\n\n    return orderedChildren.reverse();\n  }, [props, childComponents, calculatedProps, getAnimationProps]);\n  var containerProps = React.useMemo(function () {\n    if (standalone) {\n      return {\n        domain: domain,\n        scale: scale,\n        width: width,\n        height: height,\n        standalone: standalone,\n        theme: theme,\n        style: style.parent,\n        horizontal: horizontal,\n        polar: polar,\n        name: name\n      };\n    }\n\n    return {};\n  }, [standalone, domain, scale, width, height, theme, style, horizontal, polar, name]);\n  var userProps = React.useMemo(function () {\n    return UserProps.getSafeUserProps(initialProps);\n  }, [initialProps]);\n  var container = React.useMemo(function () {\n    if (standalone) {\n      var defaultContainerProps = _defaults({}, containerComponent.props, containerProps, userProps);\n\n      return /*#__PURE__*/React.cloneElement(containerComponent, defaultContainerProps);\n    }\n\n    return /*#__PURE__*/React.cloneElement(groupComponent, userProps);\n  }, [groupComponent, standalone, containerComponent, containerProps, userProps]);\n  var events = React.useMemo(function () {\n    return Wrapper.getAllEvents(props);\n  }, [props]);\n  var previousProps = Hooks.usePreviousProps(initialProps);\n  React.useEffect(function () {\n    // This is called before dismount to keep state in sync\n    return function () {\n      if (initialProps.animate) {\n        setAnimationState(previousProps, initialProps);\n      }\n    };\n  }, [setAnimationState, previousProps, initialProps]);\n\n  if (!_isEmpty(events)) {\n    return /*#__PURE__*/React.createElement(VictorySharedEvents, {\n      container: container,\n      eventKey: eventKey,\n      events: events,\n      externalEventMutations: externalEventMutations\n    }, newChildren);\n  }\n\n  return /*#__PURE__*/React.cloneElement(container, container.props, newChildren);\n};\n\nVictoryStackBase.propTypes = _objectSpread(_objectSpread({}, CommonProps.baseProps), {}, {\n  bins: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([CustomPropTypes.nonNegative, PropTypes.instanceOf(Date)])), CustomPropTypes.nonNegative]),\n  categories: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.shape({\n    x: PropTypes.arrayOf(PropTypes.string),\n    y: PropTypes.arrayOf(PropTypes.string)\n  })]),\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  colorScale: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.oneOf([\"grayscale\", \"qualitative\", \"heatmap\", \"warm\", \"cool\", \"red\", \"green\", \"blue\"])]),\n  fillInMissingData: PropTypes.bool,\n  horizontal: PropTypes.bool,\n  labelComponent: PropTypes.element,\n  labels: PropTypes.oneOfType([PropTypes.func, PropTypes.array]),\n  style: PropTypes.shape({\n    parent: PropTypes.object,\n    data: PropTypes.object,\n    labels: PropTypes.object\n  }),\n  xOffset: PropTypes.number\n});\nVictoryStackBase.defaultProps = {\n  containerComponent: /*#__PURE__*/React.createElement(VictoryContainer, null),\n  groupComponent: /*#__PURE__*/React.createElement(\"g\", null),\n  standalone: true,\n  theme: VictoryTheme.grayscale,\n  fillInMissingData: true\n};\nvar componentConfig = {\n  role: \"stack\",\n  expectedComponents: [\"groupComponent\", \"containerComponent\", \"labelComponent\"],\n  getChildren: getChildren\n};\nexport var VictoryStack = Object.assign( /*#__PURE__*/React.memo(VictoryStackBase, isEqual), componentConfig);\nVictoryStack.displayName = \"VictoryStack\";","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryStack } from 'victory-stack';\nimport { ChartContainer } from '../ChartContainer';\nimport { getClassName, useDefaultPatternProps, getTheme, renderChildrenWithPatterns } from '../ChartUtils';\nexport const ChartStack = (_a) => {\n    var { ariaDesc, ariaTitle, children, colorScale, containerComponent = React.createElement(ChartContainer, null), hasPatterns, patternScale, themeColor, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    themeVariant, \n    // destructure last\n    theme = getTheme(themeColor) } = _a, rest = __rest(_a, [\"ariaDesc\", \"ariaTitle\", \"children\", \"colorScale\", \"containerComponent\", \"hasPatterns\", \"patternScale\", \"themeColor\", \"themeVariant\", \"theme\"]);\n    // Clone so users can override container props\n    const container = React.cloneElement(containerComponent, Object.assign(Object.assign({ desc: ariaDesc, title: ariaTitle, theme }, containerComponent.props), { className: getClassName({ className: containerComponent.props.className }) // Override VictoryContainer class name\n     }));\n    const { defaultPatternScale } = useDefaultPatternProps({\n        colorScale,\n        hasPatterns,\n        patternScale,\n        themeColorScale: theme.stack.colorScale\n    });\n    // Note: containerComponent is required for theme\n    return (React.createElement(VictoryStack, Object.assign({ colorScale: colorScale, containerComponent: container, theme: theme }, rest), renderChildrenWithPatterns({\n        children,\n        patternScale: defaultPatternScale\n    })));\n};\nChartStack.displayName = 'ChartStack';\n// Note: VictoryStack.getChildren & VictoryStack.role must be hoisted\nhoistNonReactStatics(ChartStack, VictoryStack);\n//# sourceMappingURL=ChartStack.js.map","import { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_cyan_300 } from '@patternfly/react-tokens/dist/js/chart_color_cyan_300';\nimport { chart_color_gold_300 } from '@patternfly/react-tokens/dist/js/chart_color_gold_300';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_orange_300 } from '@patternfly/react-tokens/dist/js/chart_color_orange_300';\nimport { chart_color_purple_300 } from '@patternfly/react-tokens/dist/js/chart_color_purple_300';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    colorScale: [\n        chart_color_blue_300.value,\n        chart_color_gold_300.value,\n        chart_color_green_300.value,\n        chart_color_purple_300.value,\n        chart_color_orange_300.value,\n        chart_color_cyan_300.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n    yAxisAlt: {\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'routes/views/components/charts/common/chart.scss';\nimport { Chart, ChartAxis, ChartBar, ChartLegend, ChartLegendTooltip, ChartStack, ChartThemeColor, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { default as ChartTheme } from 'routes/views/components/charts/chartTheme';\nimport { getMaxValue } from 'routes/views/components/charts/common/chartDatum';\nimport { getChartNames, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isDataHidden, isSeriesHidden, } from 'routes/views/components/charts/common/chartUtils';\nimport { formatCurrencyAbbreviation } from 'utils/format';\nimport { noop } from 'utils/noop';\nimport { chartStyles } from './costExplorerChart.styles';\nclass CostExplorerChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            tickValues: [],\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { top1stData, top2ndData, top3rdData, top4thData, top5thData, top6thData } = this.props;\n            const series = [];\n            if (top1stData && top1stData.length) {\n                const name = this.getTruncatedString(top1stData[0].name);\n                series.push({\n                    childName: 'top1stData',\n                    data: this.initDatumChildName(top1stData, 'top1stData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[0],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[0],\n                        },\n                    },\n                });\n            }\n            if (top2ndData && top2ndData.length) {\n                const name = this.getTruncatedString(top2ndData[0].name);\n                series.push({\n                    childName: 'top2ndData',\n                    data: this.initDatumChildName(top2ndData, 'top2ndData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[1],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[1],\n                        },\n                    },\n                });\n            }\n            if (top3rdData && top3rdData.length) {\n                const name = this.getTruncatedString(top3rdData[0].name);\n                series.push({\n                    childName: 'top3rdData',\n                    data: this.initDatumChildName(top3rdData, 'top3rdData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[2],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[2],\n                        },\n                    },\n                });\n            }\n            if (top4thData && top4thData.length) {\n                const name = this.getTruncatedString(top4thData[0].name);\n                series.push({\n                    childName: 'top4thData',\n                    data: this.initDatumChildName(top4thData, 'top4thData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[3],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[3],\n                        },\n                    },\n                });\n            }\n            if (top5thData && top5thData.length) {\n                const name = this.getTruncatedString(top5thData[0].name);\n                series.push({\n                    childName: 'top5thData',\n                    data: this.initDatumChildName(top5thData, 'top5thData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[4],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[4],\n                        },\n                    },\n                });\n            }\n            if (top6thData && top6thData.length) {\n                const name = this.getTruncatedString(top6thData[0].name);\n                series.push({\n                    childName: 'top6thData',\n                    data: this.initDatumChildName(top6thData, 'top6thData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[5],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[5],\n                        },\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            const units = this.getUnits(series);\n            this.setState({ cursorVoronoiContainer, series, tickValues: this.getTickValues(), units });\n        };\n        // Adds a child name to help identify hidden data series\n        this.initDatumChildName = (data, childName) => {\n            data.map(datum => (datum.childName = childName));\n            return data;\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (width > 675 && width < 1250) {\n                    adjustedContainerHeight += 25;\n                }\n                else if (width > 400 && width < 650) {\n                    adjustedContainerHeight += 50;\n                }\n                else if (width <= 400) {\n                    adjustedContainerHeight += 150;\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        // If bar width exceeds max and domainPadding is true, extra width is returned to help center bars horizontally\n        this.getBarWidth = (domainPadding = false) => {\n            const { hiddenSeries, series, width } = this.state;\n            const maxWidth = 20;\n            let maxValue = -1;\n            if (series) {\n                series.forEach((s, index) => {\n                    if (!isSeriesHidden(hiddenSeries, index) && s.data && s.data.length !== 0) {\n                        if (s.data.length > maxValue) {\n                            maxValue = s.data.length;\n                        }\n                    }\n                });\n            }\n            // Divide available width into equal sections\n            const sections = maxValue * 2 + 1;\n            const sectionWidth = maxValue > 0 ? width / sections : 0;\n            if (domainPadding) {\n                // Add any extra bar width for domain padding\n                const extraWidth = sectionWidth > maxWidth ? (sectionWidth - maxWidth) * maxValue : 0;\n                return (sectionWidth + extraWidth / 2) * 2;\n            }\n            return sectionWidth > maxWidth ? maxWidth : sectionWidth;\n        };\n        this.getChart = (series, index, barWidth) => {\n            const { hiddenSeries } = this.state;\n            const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n            return (React.createElement(ChartBar, { barWidth: barWidth, data: data, key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatter, formatOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatter, formatOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        // Returns domain only if max y values are zero\n        this.getDomain = (series, hiddenSeries) => {\n            let maxValue = -1;\n            let domain;\n            if (series) {\n                series.forEach((s, index) => {\n                    if (!isSeriesHidden(hiddenSeries, index) && s.data && s.data.length !== 0) {\n                        const max = getMaxValue(s.data);\n                        maxValue = Math.max(maxValue, max);\n                    }\n                });\n            }\n            if (maxValue <= 0) {\n                domain = { y: [0, 100] };\n            }\n            return domain;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const { name = '' } = this.props;\n            const { hiddenSeries, series } = this.state;\n            const result = getInteractiveLegendEvents({\n                chartNames: getChartNames(series),\n                isDataHidden: data => isDataHidden(series, hiddenSeries, data),\n                isHidden: index => isSeriesHidden(hiddenSeries, index),\n                legendName: `${name}-legend`,\n                onLegendClick: props => this.handleLegendClick(props.index),\n            });\n            return result;\n        };\n        this.getLegend = () => {\n            const { name = '' } = this.props;\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, name: `${name}-legend`, responsive: false }));\n        };\n        // This ensures we show every 3rd tick value, including the first and last value\n        //\n        // Note: We're not using Victory's tickCount because it won't always include the last tick value.\n        this.getTickValues = () => {\n            const { top1stData, top2ndData, top3rdData, top4thData, top5thData, top6thData } = this.props;\n            // Find the datum with the greatest number of values\n            const allDatums = [top1stData, top2ndData, top3rdData, top4thData, top5thData, top6thData];\n            let datum;\n            allDatums.map(val => {\n                if (!datum || datum.length < val.length) {\n                    datum = val;\n                }\n            });\n            const values = [];\n            datum.map(val => {\n                values.push(val.x);\n            });\n            // Prune tick values\n            const tickValues = [];\n            const modVal = values.length < 6 ? 2 : 3;\n            for (let i = 0; i < values.length; i++) {\n                if (i % modVal === 0 && i + 2 < values.length) {\n                    tickValues.push(values[i]);\n                }\n                else if (values.length < 3 && i + 1 < values.length) {\n                    tickValues.push(values[i]);\n                }\n            }\n            tickValues.push(values[values.length - 1]);\n            return tickValues;\n        };\n        this.getTruncatedString = (str) => {\n            const maxChars = 20;\n            return str.length > maxChars ? str.substring(0, maxChars - 1) + '...' : str;\n        };\n        this.getTickValue = (t) => {\n            const { units } = this.state;\n            return formatCurrencyAbbreviation(t, units);\n        };\n        this.getUnits = (series) => {\n            if (series) {\n                for (const s of series) {\n                    for (const datum of s.data) {\n                        if (datum.units) {\n                            return datum.units;\n                        }\n                    }\n                }\n            }\n            return 'USD';\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.top1stData !== this.props.top1stData ||\n            prevProps.top2ndData !== this.props.top2ndData ||\n            prevProps.top3rdData !== this.props.top3rdData ||\n            prevProps.top4thData !== this.props.top4thData ||\n            prevProps.top5thData !== this.props.top5thData ||\n            prevProps.top6thData !== this.props.top6thData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    render() {\n        const { height, intl, name, padding = {\n            bottom: 50,\n            left: 40,\n            right: 8,\n            top: 8,\n        }, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, tickValues, width } = this.state;\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => intl.formatMessage(messages.chartDayOfTheMonth, { day: datum.x }) })),\n            })\n            : undefined;\n        const barWidth = this.getBarWidth();\n        // Note: For tooltip values to match properly, chart groups must be rendered in the order given as legend data\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n            React.createElement(\"div\", { style: { height, width } },\n                React.createElement(Chart, { ariaTitle: intl.formatMessage(messages.explorerChartAriaTitle), containerComponent: container, domain: this.getDomain(series, hiddenSeries), domainPadding: { x: this.getBarWidth(true) }, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", name: name, padding: padding, theme: ChartTheme, themeColor: ChartThemeColor.multiOrdered, width: width },\n                    series && series.length > 0 && (React.createElement(ChartStack, null, series.map((s, index) => this.getChart(s, index, barWidth)))),\n                    React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: tickValues, fixLabelOverlap: true }),\n                    React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis, tickFormat: this.getTickValue })))));\n    }\n}\nconst CostExplorerChart = injectIntl(CostExplorerChartBase);\nexport default CostExplorerChart;\n","import global_spacer_2xl from '@patternfly/react-tokens/dist/js/global_spacer_2xl';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    chartHeight: 300,\n    chartContainerHeight: 300,\n};\nexport const styles = {\n    chartContainer: {\n        marginLeft: global_spacer_2xl.value,\n    },\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n    costChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    titleContainer: {\n        marginLeft: global_spacer_lg.value,\n    },\n    trendChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    usageChart: {\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import { OrgPathsType } from 'api/orgs/org';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport { ComputedReportItemType, ComputedReportItemValueType } from 'routes/views/components/charts/common/chartDatum';\nimport { hasCloudProvider } from 'routes/views/utils/providers';\nimport { hasAwsAccess, hasAzureAccess, hasGcpAccess, hasIbmAccess, isAwsAvailable, isAzureAvailable, isGcpAvailable, isIbmAvailable, isOciAvailable, isOcpAvailable, isRhelAvailable, } from 'utils/userAccess';\n// eslint-disable-next-line no-shadow\nexport var PerspectiveType;\n(function (PerspectiveType) {\n    PerspectiveType[\"aws\"] = \"aws\";\n    PerspectiveType[\"awsOcp\"] = \"aws_ocp\";\n    PerspectiveType[\"azure\"] = \"azure\";\n    PerspectiveType[\"azureOcp\"] = \"azure_ocp\";\n    PerspectiveType[\"gcp\"] = \"gcp\";\n    PerspectiveType[\"gcpOcp\"] = \"gcp_ocp\";\n    PerspectiveType[\"ibm\"] = \"ibm\";\n    PerspectiveType[\"ibmOcp\"] = \"ibm_ocp\";\n    PerspectiveType[\"oci\"] = \"oci\";\n    PerspectiveType[\"ocp\"] = \"ocp\";\n    PerspectiveType[\"ocpCloud\"] = \"ocp_cloud\";\n    PerspectiveType[\"rhel\"] = \"rhel\";\n})(PerspectiveType || (PerspectiveType = {}));\nexport const baseQuery = {\n    filter: {\n        limit: 10,\n        offset: 0,\n    },\n    exclude: {},\n    filter_by: {},\n    order_by: {\n        cost: 'desc',\n    },\n};\nexport const dateRangeOptions = [\n    { label: messages.explorerDateRange, value: 'current_month_to_date' },\n    { label: messages.explorerDateRange, value: 'previous_month' },\n    { label: messages.explorerDateRange, value: 'previous_month_to_date' },\n    { label: messages.explorerDateRange, value: 'last_thirty_days' },\n    { label: messages.explorerDateRange, value: 'last_sixty_days' },\n    { label: messages.explorerDateRange, value: 'last_ninety_days' },\n    { label: messages.explorerDateRange, value: 'custom' },\n];\nexport const groupByAwsOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByAzureOptions = [\n    { label: 'subscription_guid', value: 'subscription_guid' },\n    { label: 'service_name', value: 'service_name' },\n    { label: 'resource_location', value: 'resource_location' },\n];\nexport const groupByGcpOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'gcp_project', value: 'gcp_project' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByGcpOcpOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'gcp_project', value: 'gcp_project' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByIbmOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'project', value: 'project' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByOciOptions = [\n    { label: 'payer_tenant_id', value: 'payer_tenant_id' },\n    { label: 'product_service', value: 'product_service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByOcpOptions = [\n    { label: 'cluster', value: 'cluster' },\n    { label: 'node', value: 'node' },\n    { label: 'project', value: 'project' },\n];\nexport const groupByRhelOptions = [\n    { label: 'cluster', value: 'cluster' },\n    { label: 'node', value: 'node' },\n    { label: 'project', value: 'project' },\n];\nexport const getComputedReportItemType = (perspective) => {\n    let result;\n    switch (perspective) {\n        // Removed \"OpenShift supplementary & usage\" perspectives -- see https://issues.redhat.com/browse/COST-1722\n        default:\n            result = ComputedReportItemType.cost;\n            break;\n    }\n    return result;\n};\nexport const getComputedReportItemValueType = (perspective) => {\n    let result;\n    switch (perspective) {\n        // Removed \"OpenShift usage\" perspective -- see https://issues.redhat.com/browse/COST-1722\n        default:\n            result = ComputedReportItemValueType.total;\n            break;\n    }\n    return result;\n};\nexport const getPerspectiveDefault = ({ awsProviders, azureProviders, ociProviders, gcpProviders, ibmProviders, ocpProviders, queryFromRoute, rhelProviders, userAccess, }) => {\n    const perspective = queryFromRoute.perspective;\n    // Upon page refresh, perspective param takes precedence\n    switch (perspective) {\n        case PerspectiveType.aws:\n        case PerspectiveType.awsOcp:\n        case PerspectiveType.azure:\n        case PerspectiveType.azureOcp:\n        case PerspectiveType.gcp:\n        case PerspectiveType.gcpOcp:\n        case PerspectiveType.ibm:\n        case PerspectiveType.ibmOcp:\n        case PerspectiveType.oci:\n        case PerspectiveType.ocpCloud:\n        case PerspectiveType.rhel:\n            return perspective;\n    }\n    if (isOcpAvailable(userAccess, ocpProviders)) {\n        return PerspectiveType.ocp;\n    }\n    if (isRhelAvailable(userAccess, rhelProviders)) {\n        return PerspectiveType.rhel;\n    }\n    const hasAwsCloud = hasAwsAccess(userAccess) && hasCloudProvider(awsProviders, ocpProviders);\n    const hasAzureCloud = hasAzureAccess(userAccess) && hasCloudProvider(azureProviders, ocpProviders);\n    const hasGcpCloud = hasGcpAccess(userAccess) && hasCloudProvider(gcpProviders, ocpProviders);\n    const hasIbmCloud = hasIbmAccess(userAccess) && hasCloudProvider(ibmProviders, ocpProviders);\n    if (hasAwsCloud || hasAzureCloud || hasGcpCloud || hasIbmCloud) {\n        return PerspectiveType.ocpCloud;\n    }\n    if (isAwsAvailable(userAccess, awsProviders)) {\n        return PerspectiveType.aws;\n    }\n    if (isAzureAvailable(userAccess, azureProviders)) {\n        return PerspectiveType.azure;\n    }\n    if (isGcpAvailable(userAccess, gcpProviders)) {\n        return PerspectiveType.gcp;\n    }\n    if (isIbmAvailable(userAccess, ibmProviders)) {\n        return PerspectiveType.ibm;\n    }\n    if (isOciAvailable(userAccess, ociProviders)) {\n        return PerspectiveType.oci;\n    }\n    return undefined;\n};\nexport const getGroupByDefault = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n        case PerspectiveType.awsOcp:\n        case PerspectiveType.gcp:\n        case PerspectiveType.gcpOcp:\n        case PerspectiveType.ibm:\n            result = 'account';\n            break;\n        case PerspectiveType.azure:\n        case PerspectiveType.azureOcp:\n            result = 'subscription_guid';\n            break;\n        case PerspectiveType.oci:\n            result = 'payer_tenant_id';\n            break;\n        case PerspectiveType.ocp:\n        case PerspectiveType.ocpCloud:\n        case PerspectiveType.rhel:\n            result = 'project';\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getGroupByOptions = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n        case PerspectiveType.awsOcp:\n            result = groupByAwsOptions;\n            break;\n        case PerspectiveType.azure:\n        case PerspectiveType.azureOcp:\n            result = groupByAzureOptions;\n            break;\n        case PerspectiveType.gcp:\n            result = groupByGcpOptions;\n            break;\n        case PerspectiveType.gcpOcp:\n            result = groupByGcpOcpOptions;\n            break;\n        case PerspectiveType.ibm:\n            result = groupByIbmOptions;\n            break;\n        case PerspectiveType.oci:\n            result = groupByOciOptions;\n            break;\n        case PerspectiveType.ocp:\n        case PerspectiveType.ocpCloud:\n            result = groupByOcpOptions;\n            break;\n        case PerspectiveType.rhel:\n            result = groupByRhelOptions;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getOrgReportPathsType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n            result = OrgPathsType.aws;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getReportType = (perspective) => {\n    let result;\n    switch (perspective) {\n        default:\n            result = ReportType.cost;\n            break;\n    }\n    return result;\n};\nexport const getReportPathsType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n            result = ReportPathsType.aws;\n            break;\n        case PerspectiveType.awsOcp:\n            result = ReportPathsType.awsOcp;\n            break;\n        case PerspectiveType.azure:\n            result = ReportPathsType.azure;\n            break;\n        case PerspectiveType.azureOcp:\n            result = ReportPathsType.azureOcp;\n            break;\n        case PerspectiveType.gcp:\n            result = ReportPathsType.gcp;\n            break;\n        case PerspectiveType.gcpOcp:\n            result = ReportPathsType.gcpOcp;\n            break;\n        case PerspectiveType.ibm:\n            result = ReportPathsType.ibm;\n            break;\n        case PerspectiveType.oci:\n            result = ReportPathsType.oci;\n            break;\n        case PerspectiveType.ocp:\n            result = ReportPathsType.ocp;\n            break;\n        case PerspectiveType.ocpCloud:\n            result = ReportPathsType.ocpCloud;\n            break;\n        case PerspectiveType.rhel:\n            result = ReportPathsType.rhel;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getResourcePathsType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n            return ResourcePathsType.aws;\n            break;\n        case PerspectiveType.awsOcp:\n            return ResourcePathsType.awsOcp;\n            break;\n        case PerspectiveType.azure:\n            return ResourcePathsType.azure;\n            break;\n        case PerspectiveType.azureOcp:\n            return ResourcePathsType.azureOcp;\n            break;\n        case PerspectiveType.gcp:\n            return ResourcePathsType.gcp;\n        case PerspectiveType.gcpOcp:\n            return ResourcePathsType.gcpOcp;\n        case PerspectiveType.ibm:\n            return ResourcePathsType.ibm;\n            break;\n        case PerspectiveType.oci:\n            return ResourcePathsType.oci;\n            break;\n        case PerspectiveType.ocp:\n            return ResourcePathsType.ocp;\n            break;\n        case PerspectiveType.ocpCloud:\n            return ResourcePathsType.ocpCloud;\n            break;\n        case PerspectiveType.rhel:\n            return ResourcePathsType.rhel;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getTagReportPathsType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n            return TagPathsType.aws;\n            break;\n        case PerspectiveType.awsOcp:\n            return TagPathsType.awsOcp;\n            break;\n        case PerspectiveType.azure:\n            return TagPathsType.azure;\n            break;\n        case PerspectiveType.azureOcp:\n            return TagPathsType.azureOcp;\n            break;\n        case PerspectiveType.gcp:\n            return TagPathsType.gcp;\n            break;\n        case PerspectiveType.gcpOcp:\n            return TagPathsType.gcpOcp;\n            break;\n        case PerspectiveType.ibm:\n            return TagPathsType.ibm;\n            break;\n        case PerspectiveType.oci:\n            return TagPathsType.oci;\n            break;\n        case PerspectiveType.ocp:\n            return TagPathsType.ocp;\n            break;\n        case PerspectiveType.ocpCloud:\n            return TagPathsType.ocpCloud;\n            break;\n        case PerspectiveType.rhel:\n            return TagPathsType.rhel;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\n","import { Skeleton, Title } from '@patternfly/react-core';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { format } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ComputedReportItemType, ComputedReportItemValueType, isFloat, isInt, } from 'routes/views/components/charts/common/chartDatum';\nimport { CostExplorerChart } from 'routes/views/components/charts/costExplorerChart';\nimport { getDateRangeFromQuery } from 'routes/views/utils/dateRange';\nimport { getGroupByOrgValue, getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedExplorerReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { formatUnits } from 'utils/format';\nimport { withRouter } from 'utils/router';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { chartStyles, styles } from './explorerChart.styles';\nimport { getGroupByDefault, getReportPathsType, getReportType } from './explorerUtils';\nclass ExplorerChartBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.createReportDatum = (value, computedItem, reportItem = 'cost', reportItemValue = 'total') => {\n            const { intl } = this.props;\n            const computedItemDate = new Date(computedItem.date + 'T00:00:00');\n            const xVal = intl.formatDate(computedItemDate, {\n                day: 'numeric',\n                month: 'short',\n            });\n            const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n            return Object.assign(Object.assign({ x: xVal, y: value === null ? null : yVal }, (value === null && { _y: 0 })), { date: computedItem.date, key: computedItem.id, name: computedItem.label ? computedItem.label : computedItem.id, units: computedItem[reportItem]\n                    ? computedItem[reportItem][reportItemValue]\n                        ? computedItem[reportItem][reportItemValue].units // cost, infrastructure, supplementary\n                        : computedItem[reportItem].units // capacity, limit, request, usage\n                    : undefined });\n        };\n        this.fetchReport = () => {\n            const { fetchReport, perspective, reportQueryString } = this.props;\n            if (perspective) {\n                const reportPathsType = getReportPathsType(perspective);\n                const reportType = getReportType(perspective);\n                fetchReport(reportPathsType, reportType, reportQueryString);\n            }\n        };\n        this.getChartDatums = (computedItems) => {\n            const { computedReportItemType = ComputedReportItemType.cost, computedReportItemValueType = ComputedReportItemValueType.total, } = this.props;\n            const reportItem = computedReportItemType;\n            const reportItemValue = computedReportItemValueType;\n            const chartDatums = [];\n            computedItems.map(computedItem => {\n                const datums = [];\n                if (computedItem instanceof Map) {\n                    const items = Array.from(computedItem.values());\n                    items.map((i) => {\n                        const val = i[reportItem][reportItemValue] ? i[reportItem][reportItemValue].value : i[reportItem].value;\n                        datums.push(this.createReportDatum(val, i, reportItem, reportItemValue));\n                    });\n                }\n                chartDatums.push(datums);\n            });\n            return this.padChartDatums(chartDatums);\n        };\n        this.getComputedItems = () => {\n            const { report } = this.props;\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: this.getGroupBy(),\n                isDateMap: true,\n            });\n        };\n        this.getGroupBy = () => {\n            const { query } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByOrg = getGroupByOrgValue(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            return groupByTagKey ? groupByTagKey : groupByOrg ? 'org_entities' : groupById;\n        };\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, width: skeletonWidth.xs })));\n        };\n        // This pads chart datums with null datum objects, representing missing data at the beginning and end of the\n        // data series. The remaining data is left as is to allow for extrapolation. This allows us to display a \"no data\"\n        // message in the tooltip, which helps distinguish between zero values and when there is no data available.\n        this.padChartDatums = (items) => {\n            const { end_date, start_date } = this.props;\n            const result = [];\n            items.map(datums => {\n                const key = datums[0].key;\n                const label = datums[0].name;\n                const newItems = [];\n                for (let padDate = new Date(start_date + 'T00:00:00'); padDate <= new Date(end_date + 'T00:00:00'); padDate.setDate(padDate.getDate() + 1)) {\n                    const id = format(padDate, 'yyyy-MM-dd');\n                    const chartDatum = datums.find(val => val.date === id);\n                    if (chartDatum) {\n                        newItems.push(chartDatum);\n                    }\n                    else {\n                        const date = format(padDate, 'yyyy-MM-dd');\n                        newItems.push(this.createReportDatum(null, { date, id: key, label }, 'cost', null));\n                    }\n                }\n                result.push(newItems);\n            });\n            return result;\n        };\n    }\n    componentDidMount() {\n        this.fetchReport();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, reportError, reportQueryString } = this.props;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        if (newQuery || noReport) {\n            this.fetchReport();\n        }\n    }\n    render() {\n        const { perspective, reportFetchStatus, intl } = this.props;\n        const datums = this.getChartDatums(this.getComputedItems());\n        // Todo: get title from perspective menu\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { style: styles.titleContainer },\n                React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, intl.formatMessage(messages.explorerChartTitle, { value: perspective }))),\n            React.createElement(\"div\", { style: styles.chartContainer },\n                React.createElement(\"div\", { style: styles.costChart }, reportFetchStatus === FetchStatus.inProgress ? (this.getSkeleton()) : (React.createElement(CostExplorerChart, { adjustContainerHeight: true, containerHeight: chartStyles.chartContainerHeight, formatOptions: {}, formatter: formatUnits, height: chartStyles.chartHeight, top1stData: datums.length > 0 ? datums[0] : [], top2ndData: datums.length > 1 ? datums[1] : [], top3rdData: datums.length > 2 ? datums[2] : [], top4thData: datums.length > 3 ? datums[3] : [], top5thData: datums.length > 4 ? datums[4] : [], top6thData: datums.length > 5 ? datums[5] : [] }))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { costType, currency, perspective, router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const { end_date, start_date } = getDateRangeFromQuery(queryFromRoute);\n    // Ensure group_by key is not undefined\n    let group_by = queryFromRoute.group_by;\n    if (!group_by && perspective) {\n        group_by = { [getGroupByDefault(perspective)]: '*' };\n    }\n    const query = Object.assign(Object.assign({}, queryFromRoute), { group_by });\n    const reportQuery = {\n        cost_type: costType,\n        currency,\n        end_date,\n        exclude: query.exclude,\n        filter: { limit: 5 },\n        filter_by: query.filter_by,\n        group_by,\n        start_date,\n    };\n    const reportPathsType = getReportPathsType(perspective);\n    const reportType = getReportType(perspective);\n    const reportQueryString = getQuery(reportQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    return {\n        end_date,\n        perspective,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n        start_date,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst ExplorerChartConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerChartBase);\nconst ExplorerChart = injectIntl(withRouter(ExplorerChartConnect));\nexport { ExplorerChart };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    toContainer: {\n        marginLeft: global_spacer_md.var,\n        marginRight: global_spacer_md.var,\n    },\n};\n","import { DatePicker } from '@patternfly/react-core';\nimport { parseQuery } from 'api/queries/query';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { DateRangeType, getDateRangeFromQuery, getDateRangeTypeDefault } from 'routes/views/utils/dateRange';\nimport { formatDate, getLast90DaysDate, getToday } from 'utils/dates';\nimport { withRouter } from 'utils/router';\nimport { styles } from './explorerDatePicker.styles';\nconst MAX_DAYS = 65; // Max date range allowed for cost API\nclass ExplorerDatePickerBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n        // TBD\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.startDateRef = React.createRef();\n        this.endDateRef = React.createRef();\n        this.getStartDatePicker = () => {\n            const { intl } = this.props;\n            const { startDate } = this.state;\n            const { start_date, end_date } = getLast90DaysDate(false);\n            const rangeValidator = (date) => {\n                if (date < start_date) {\n                    return intl.formatMessage(messages.datePickerBeforeError);\n                }\n                else if (date > end_date) {\n                    return intl.formatMessage(messages.datePickerAfterError);\n                }\n                return '';\n            };\n            return (React.createElement(DatePicker, { \"aria-label\": intl.formatMessage(messages.datePickerStartDateAriaLabel), onChange: this.handleStartDateOnChange, placeholder: intl.formatMessage(messages.start), ref: this.startDateRef, validators: [rangeValidator], value: formatDate(startDate) }));\n        };\n        this.getEndDatePicker = () => {\n            const { intl } = this.props;\n            const { endDate, startDate } = this.state;\n            const end_date = this.getMaxEndDate();\n            const rangeValidator = (date) => {\n                if (date < startDate) {\n                    return intl.formatMessage(messages.datePickerBeforeError);\n                }\n                else if (date > end_date) {\n                    return intl.formatMessage(messages.datePickerAfterError);\n                }\n                return '';\n            };\n            return (React.createElement(DatePicker, { \"aria-label\": intl.formatMessage(messages.datePickerEndDateAriaLabel), isDisabled: !startDate, onChange: this.handleEndDateOnChange, placeholder: intl.formatMessage(messages.end), rangeStart: startDate, ref: this.endDateRef, validators: [rangeValidator], value: formatDate(endDate) }));\n        };\n        this.getMaxEndDate = () => {\n            const { startDate } = this.state;\n            const today = getToday();\n            const end_date = startDate ? new Date(startDate.getTime()) : today;\n            end_date.setDate(end_date.getDate() + MAX_DAYS - 1); // 65 days including start date\n            if (end_date > today) {\n                end_date.setTime(today.getTime());\n            }\n            return end_date;\n        };\n        this.isEndDateValid = (startDate, endDate) => {\n            const minDate = startDate;\n            const maxDate = startDate ? new Date(startDate.getTime()) : undefined;\n            if (maxDate) {\n                maxDate.setDate(maxDate.getDate() + MAX_DAYS - 1); // 65 days including start date\n            }\n            return endDate >= minDate && endDate <= maxDate;\n        };\n        this.isStartDateValid = startDate => {\n            const maxDate = getToday();\n            const { start_date: minDate } = getLast90DaysDate(false);\n            return startDate >= minDate && startDate <= maxDate;\n        };\n        this.handleEndDateOnChange = (evt, value, date) => {\n            const { onSelected } = this.props;\n            const { startDate } = this.state;\n            if (date && this.isEndDateValid(startDate, date)) {\n                this.setState({ endDate: date }, () => {\n                    if (onSelected) {\n                        onSelected(startDate, date);\n                    }\n                });\n            }\n        };\n        this.handleStartDateOnChange = (evt, value, date) => {\n            if (date && this.isStartDateValid(date)) {\n                this.setState({ startDate: date }, () => {\n                    if (this.endDateRef && this.endDateRef.current) {\n                        this.endDateRef.current.setCalendarOpen(true);\n                    }\n                });\n            }\n        };\n    }\n    componentDidMount() {\n        const { router } = this.props;\n        const queryFromRoute = parseQuery(router.location.search);\n        const dateRangeType = getDateRangeTypeDefault(queryFromRoute);\n        const { end_date, start_date } = getDateRangeFromQuery(queryFromRoute);\n        if (this.startDateRef && this.startDateRef.current) {\n            this.startDateRef.current.setCalendarOpen(dateRangeType !== DateRangeType.custom);\n        }\n        if (dateRangeType === DateRangeType.custom) {\n            this.setState({\n                startDate: new Date(start_date + 'T00:00:00'),\n                endDate: new Date(end_date + 'T00:00:00'),\n            });\n        }\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { endDate, startDate } = this.state;\n        if (prevState.startDate !== startDate) {\n            // Don't adjust unless an end date has already been selected\n            if (endDate && !this.isEndDateValid(startDate, endDate)) {\n                this.setState({ endDate: undefined });\n            }\n        }\n    }\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(React.Fragment, null,\n            this.getStartDatePicker(),\n            React.createElement(\"span\", { style: styles.toContainer }, intl.formatMessage(messages.to)),\n            this.getEndDatePicker()));\n    }\n}\nconst ExplorerDatePicker = injectIntl(withRouter(ExplorerDatePickerBase));\nexport { ExplorerDatePicker };\n","import { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nclass ExplorerDateRangeBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isSelectOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getSelect = () => {\n            const { dateRangeType, isDisabled } = this.props;\n            const { isSelectOpen } = this.state;\n            const selectOptions = this.getSelectOptions();\n            const selection = selectOptions.find((option) => option.value === dateRangeType);\n            return (React.createElement(Select, { id: \"dateRangeSelect\", isDisabled: isDisabled, isOpen: isSelectOpen, onSelect: this.handleSelect, onToggle: this.handleToggle, selections: selection, variant: SelectVariant.single }, selectOptions.map(option => (React.createElement(SelectOption, { key: option.value, value: option })))));\n        };\n        this.getSelectOptions = () => {\n            const { intl, options } = this.props;\n            const selectOptions = [];\n            options.map(option => {\n                selectOptions.push({\n                    toString: () => intl.formatMessage(option.label, { value: option.value }),\n                    value: option.value,\n                });\n            });\n            return selectOptions;\n        };\n        this.handleSelect = (event, selection) => {\n            const { onSelected } = this.props;\n            if (onSelected) {\n                onSelected(selection.value);\n            }\n            this.setState({\n                isSelectOpen: false,\n            });\n        };\n        this.handleToggle = isSelectOpen => {\n            this.setState({ isSelectOpen });\n        };\n    }\n    render() {\n        return this.getSelect();\n    }\n}\nconst ExplorerDateRange = injectIntl(ExplorerDateRangeBase);\nexport { ExplorerDateRange };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    toolbarContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        marginLeft: global_spacer_md.var,\n        paddingTop: global_spacer_sm.var,\n    },\n};\n","import { OrgType } from 'api/orgs/org';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { DateRangeType, getDateRangeFromQuery, getDateRangeTypeDefault } from 'routes/views/utils/dateRange';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps } from 'store/common';\nimport { orgActions, orgSelectors } from 'store/orgs';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { formatStartEndDate } from 'utils/dates';\nimport { isEqual } from 'utils/equal';\nimport { orgUnitIdKey, tagKey } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { ExplorerDatePicker } from './explorerDatePicker';\nimport { ExplorerDateRange } from './explorerDateRange';\nimport { styles } from './explorerFilter.styles';\nimport { dateRangeOptions, getGroupByOptions, getOrgReportPathsType, getTagReportPathsType } from './explorerUtils';\nconst orgReportType = OrgType.org;\nconst tagReportType = TagType.tag;\nexport class ExplorerFilterBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            showDatePicker: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { orgReport, perspective, intl, tagReport } = this.props;\n            const options = [];\n            const groupByOptions = getGroupByOptions(perspective);\n            groupByOptions.map(option => {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: option.label }),\n                    key: option.value,\n                });\n            });\n            if (orgReport && orgReport.data && orgReport.data.length > 0) {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: 'org_unit_id' }),\n                    key: orgUnitIdKey,\n                });\n            }\n            if (tagReport && tagReport.data && tagReport.data.length > 0) {\n                options.push({ name: intl.formatMessage(messages.filterByValues, { value: 'tag' }), key: tagKey });\n            }\n            return options;\n        };\n        this.getDateRangeComponent = () => {\n            const { isDisabled } = this.props;\n            const { currentDateRangeType } = this.state;\n            return (React.createElement(ExplorerDateRange, { dateRangeType: currentDateRangeType, isDisabled: isDisabled, onSelected: this.handleDateRangeSelected, options: dateRangeOptions }));\n        };\n        this.getDatePickerComponent = () => {\n            const { showDatePicker } = this.state;\n            return showDatePicker ? React.createElement(ExplorerDatePicker, { onSelected: this.handleDatePickerSelected }) : undefined;\n        };\n        this.handleDatePickerSelected = (startDate, endDate) => {\n            const { query, router } = this.props;\n            const { start_date, end_date } = formatStartEndDate(startDate, endDate);\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { dateRangeType: DateRangeType.custom, start_date,\n                end_date });\n            router.navigate(getRouteForQuery(newQuery, router.location), { replace: true });\n        };\n        this.handleDateRangeSelected = (value) => {\n            const { query, router } = this.props;\n            const showDatePicker = value === DateRangeType.custom;\n            this.setState({ currentDateRangeType: value, showDatePicker }, () => {\n                if (!showDatePicker) {\n                    const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { dateRangeType: value, start_date: undefined, end_date: undefined });\n                    router.navigate(getRouteForQuery(newQuery, router.location), { replace: true });\n                }\n            });\n        };\n    }\n    componentDidMount() {\n        const { dateRangeType, fetchOrg, fetchTag, orgQueryString, orgReportPathsType, tagQueryString, tagReportPathsType, } = this.props;\n        if (orgReportPathsType) {\n            fetchOrg(orgReportPathsType, orgReportType, orgQueryString);\n        }\n        if (tagReportPathsType) {\n            fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n        }\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n            currentDateRangeType: dateRangeType,\n            showDatePicker: dateRangeType === DateRangeType.custom,\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchOrg, fetchTag, orgQueryString, orgReport, orgReportPathsType, perspective, query, tagQueryString, tagReport, tagReportPathsType, } = this.props;\n        if (query && !isEqual(query, prevProps.query)) {\n            if (orgReportPathsType) {\n                fetchOrg(orgReportPathsType, orgReportType, orgQueryString);\n            }\n            if (tagReportPathsType) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n        }\n        if (!isEqual(orgReport, prevProps.orgReport) || !isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            });\n        }\n        // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n        if (prevProps.perspective !== perspective) {\n            this.handleDateRangeSelected(dateRangeOptions[0].value);\n        }\n    }\n    render() {\n        const { groupBy, isDisabled, onFilterAdded, onFilterRemoved, orgReport, query, resourcePathsType, tagReport, tagReportPathsType, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, dateRange: this.getDateRangeComponent(), datePicker: this.getDatePickerComponent(), groupBy: groupBy, isDisabled: isDisabled, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, orgReport: orgReport, query: query, resourcePathsType: resourcePathsType, style: styles.toolbarContainer, showFilter: true, tagReport: tagReport, tagReportPathsType: tagReportPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { perspective, router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const dateRangeType = getDateRangeTypeDefault(queryFromRoute);\n    const { end_date, start_date } = getDateRangeFromQuery(queryFromRoute);\n    // Omitting key_only to share a single request -- the toolbar needs key values\n    const orgQueryString = getQuery({\n        end_date,\n        start_date,\n        limit: 1000,\n    });\n    let orgReport;\n    let orgReportFetchStatus;\n    const orgReportPathsType = getOrgReportPathsType(perspective);\n    if (orgReportPathsType) {\n        orgReport = orgSelectors.selectOrg(state, orgReportPathsType, orgReportType, orgQueryString);\n        orgReportFetchStatus = orgSelectors.selectOrgFetchStatus(state, orgReportPathsType, orgReportType, orgQueryString);\n    }\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        end_date,\n        start_date,\n        key_only: true,\n        limit: 1000,\n    });\n    let tagReport;\n    let tagReportFetchStatus;\n    const tagReportPathsType = getTagReportPathsType(perspective);\n    if (tagReportPathsType) {\n        tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, tagQueryString);\n        tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, tagQueryString);\n    }\n    return {\n        dateRangeType,\n        orgQueryString,\n        orgReport,\n        orgReportFetchStatus,\n        orgReportPathsType,\n        tagQueryString,\n        tagReport,\n        tagReportFetchStatus,\n        tagReportPathsType,\n    };\n});\nconst mapDispatchToProps = {\n    fetchOrg: orgActions.fetchOrg,\n    fetchTag: tagActions.fetchTag,\n};\nconst ExplorerFilterConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerFilterBase);\nconst ExplorerFilter = injectIntl(withRouter(ExplorerFilterConnect));\nexport { ExplorerFilter };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_Color_200 from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    cost: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    costLabel: {},\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    costLabelDate: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_200.var,\n    },\n    costType: {\n        display: 'flex',\n        marginLeft: global_spacer_md.var,\n    },\n    groupBy: {\n        paddingLeft: global_spacer_lg.var,\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        paddingBottom: global_spacer_sm.var,\n        paddingLeft: global_spacer_lg.var,\n        paddingRight: global_spacer_lg.var,\n        paddingTop: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    perspectiveContainer: {\n        display: 'flex',\n        marginTop: global_spacer_md.var,\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { parseQuery } from 'api/queries/query';\nimport { getUserAccessQuery } from 'api/queries/userAccessQuery';\nimport { UserAccessType } from 'api/userAccess';\nimport { ExportsLink } from 'components/drawers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Currency } from 'routes/components/currency';\nimport { CostType } from 'routes/views/components/costType';\nimport { GroupBy } from 'routes/views/components/groupBy';\nimport { Perspective } from 'routes/views/components/perspective';\nimport { filterProviders, hasCloudProvider } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { userAccessQuery, userAccessSelectors } from 'store/userAccess';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedExplorerReportItems';\nimport { withRouter } from 'utils/router';\nimport { hasAwsAccess, hasAzureAccess, hasGcpAccess, hasIbmAccess, isAwsAvailable, isAzureAvailable, isGcpAvailable, isIbmAvailable, isOciAvailable, isOcpAvailable, isRhelAvailable, } from 'utils/userAccess';\nimport { ExplorerFilter } from './explorerFilter';\nimport { styles } from './explorerHeader.styles';\nimport { baseQuery, getGroupByDefault, getGroupByOptions, getOrgReportPathsType, getResourcePathsType, getTagReportPathsType, PerspectiveType, } from './explorerUtils';\nclass ExplorerHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n        // TBD...\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getPerspective = (isDisabled) => {\n            const { isIbmFeatureEnabled } = this.props;\n            const { currentPerspective } = this.state;\n            const hasAws = this.isAwsAvailable();\n            const hasAzure = this.isAzureAvailable();\n            const hasOci = this.isOciAvailable();\n            const hasGcp = this.isGcpAvailable();\n            const hasIbm = this.isIbmAvailable();\n            const hasOcp = this.isOcpAvailable();\n            const hasRhel = this.isRhelAvailable();\n            // Note: No need to test \"OCP on cloud\" here, since that requires at least one of the providers below\n            if (!(hasAws || hasAzure || hasOci || hasGcp || hasIbm || hasOcp || hasRhel)) {\n                return null;\n            }\n            return (React.createElement(Perspective, { currentItem: currentPerspective, hasAws: hasAws, hasAwsOcp: this.isAwsOcpAvailable(), hasAzure: hasAzure, hasAzureOcp: this.isAzureOcpAvailable(), hasGcp: hasGcp, hasGcpOcp: this.isGcpOcpAvailable(), hasIbm: hasIbm, hasIbmOcp: this.isIbmOcpAvailable(), hasOci: hasOci, hasOcp: hasOcp, hasOcpCloud: this.isOcpCloudAvailable(), hasRhel: hasRhel, isDisabled: isDisabled, isIbmFeatureEnabled: isIbmFeatureEnabled, onSelected: this.handlePerspectiveSelected }));\n        };\n        this.handlePerspectiveSelected = (value) => {\n            const { onPerspectiveClicked, query, router } = this.props;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { exclude: undefined, filter_by: undefined, group_by: { [getGroupByDefault(value)]: '*' }, order_by: undefined, perspective: value });\n            this.setState({ currentPerspective: value }, () => {\n                if (onPerspectiveClicked) {\n                    onPerspectiveClicked(value);\n                }\n                router.navigate(getRouteForQuery(newQuery, router.location), { replace: true });\n            });\n        };\n        this.isAwsAvailable = () => {\n            const { awsProviders, userAccess } = this.props;\n            return isAwsAvailable(userAccess, awsProviders);\n        };\n        this.isAwsOcpAvailable = () => {\n            const { awsProviders, ocpProviders, userAccess } = this.props;\n            return hasAwsAccess(userAccess) && hasCloudProvider(awsProviders, ocpProviders);\n        };\n        this.isAzureAvailable = () => {\n            const { azureProviders, userAccess } = this.props;\n            return isAzureAvailable(userAccess, azureProviders);\n        };\n        this.isAzureOcpAvailable = () => {\n            const { azureProviders, ocpProviders, userAccess } = this.props;\n            return hasAzureAccess(userAccess) && hasCloudProvider(azureProviders, ocpProviders);\n        };\n        this.isGcpAvailable = () => {\n            const { gcpProviders, userAccess } = this.props;\n            return isGcpAvailable(userAccess, gcpProviders);\n        };\n        this.isGcpOcpAvailable = () => {\n            const { gcpProviders, ocpProviders, userAccess } = this.props;\n            return hasGcpAccess(userAccess) && hasCloudProvider(gcpProviders, ocpProviders);\n        };\n        this.isIbmAvailable = () => {\n            const { ibmProviders, userAccess } = this.props;\n            return isIbmAvailable(userAccess, ibmProviders);\n        };\n        this.isIbmOcpAvailable = () => {\n            const { ibmProviders, ocpProviders, userAccess } = this.props;\n            return hasIbmAccess(userAccess) && hasCloudProvider(ibmProviders, ocpProviders);\n        };\n        this.isOciAvailable = () => {\n            const { ociProviders, userAccess } = this.props;\n            return isOciAvailable(userAccess, ociProviders);\n        };\n        this.isOcpAvailable = () => {\n            const { ocpProviders, userAccess } = this.props;\n            return isOcpAvailable(userAccess, ocpProviders);\n        };\n        this.isOcpCloudAvailable = () => {\n            const hasAwsOcp = this.isAwsOcpAvailable();\n            const hasAzureOcp = this.isAzureOcpAvailable();\n            const hasGcpOcp = this.isGcpOcpAvailable();\n            const hasIbmOcp = this.isIbmOcpAvailable();\n            return hasAwsOcp || hasAzureOcp || hasGcpOcp || hasIbmOcp;\n        };\n        this.isRhelAvailable = () => {\n            const { isFinsightsFeatureEnabled, rhelProviders, userAccess } = this.props;\n            return isFinsightsFeatureEnabled && isRhelAvailable(userAccess, rhelProviders);\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            currentPerspective: this.props.perspective,\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { perspective } = this.props;\n        if (prevProps.perspective !== perspective) {\n            this.setState({\n                currentPerspective: this.props.perspective,\n            });\n        }\n    }\n    render() {\n        const { costType, currency, groupBy, intl, isExportsFeatureEnabled, onCostTypeSelected, onCurrencySelected, onFilterAdded, onFilterRemoved, onGroupBySelected, perspective, providersFetchStatus, query, } = this.props;\n        // Note: No need to test OCP on cloud here, since that requires at least one provider\n        const noAwsProviders = !this.isAwsAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noAzureProviders = !this.isAzureAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noGcpProviders = !this.isGcpAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noIbmProviders = !this.isIbmAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noOcpProviders = !this.isOcpAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noRhelProviders = !this.isRhelAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noProviders = noAwsProviders && noAzureProviders && noGcpProviders && noIbmProviders && noOcpProviders && noRhelProviders;\n        const groupByOptions = getGroupByOptions(perspective);\n        const orgReportPathsType = getOrgReportPathsType(perspective);\n        const resourcePathsType = getResourcePathsType(perspective);\n        const tagReportPathsType = getTagReportPathsType(perspective);\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.explorerTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.perspectiveContainer },\n                this.getPerspective(noProviders),\n                React.createElement(\"div\", { style: styles.groupBy },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: noProviders, onSelected: onGroupBySelected, options: groupByOptions, orgReportPathsType: orgReportPathsType, perspective: perspective, showOrgs: orgReportPathsType, showTags: tagReportPathsType, tagReportPathsType: tagReportPathsType })),\n                (perspective === PerspectiveType.aws || perspective === PerspectiveType.awsOcp) && (React.createElement(\"div\", { style: styles.costType },\n                    React.createElement(CostType, { costType: costType, onSelect: onCostTypeSelected })))),\n            React.createElement(ExplorerFilter, { groupBy: groupBy, isDisabled: noProviders, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, perspective: perspective, query: query, resourcePathsType: resourcePathsType })));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { perspective, router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    const userAccessQueryString = getUserAccessQuery(userAccessQuery);\n    const userAccess = userAccessSelectors.selectUserAccess(state, UserAccessType.all, userAccessQueryString);\n    const userAccessError = userAccessSelectors.selectUserAccessError(state, UserAccessType.all, userAccessQueryString);\n    const userAccessFetchStatus = userAccessSelectors.selectUserAccessFetchStatus(state, UserAccessType.all, userAccessQueryString);\n    // Ensure group_by key is not undefined\n    let group_by = queryFromRoute.group_by;\n    if (!group_by && perspective) {\n        group_by = { [getGroupByDefault(perspective)]: '*' };\n    }\n    const query = Object.assign(Object.assign(Object.assign({}, baseQuery), queryFromRoute), { group_by });\n    return {\n        awsProviders: filterProviders(providers, ProviderType.aws),\n        azureProviders: filterProviders(providers, ProviderType.azure),\n        gcpProviders: filterProviders(providers, ProviderType.gcp),\n        ibmProviders: filterProviders(providers, ProviderType.ibm),\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        isFinsightsFeatureEnabled: featureFlagsSelectors.selectIsFinsightsFeatureEnabled(state),\n        isIbmFeatureEnabled: featureFlagsSelectors.selectIsIbmFeatureEnabled(state),\n        ociProviders: filterProviders(providers, ProviderType.oci),\n        ocpProviders: filterProviders(providers, ProviderType.ocp),\n        providers,\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n        query,\n        rhelProviders: filterProviders(providers, ProviderType.rhel),\n        userAccess,\n        userAccessError,\n        userAccessFetchStatus,\n        userAccessQueryString,\n    };\n});\nconst ExplorerHeader = injectIntl(withRouter(connect(mapStateToProps, {})(ExplorerHeaderBase)));\nexport { ExplorerHeader };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n};\n","import './explorerTable.scss';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { InnerScrollContainer, SortByDirection, TableComposable, Tbody, Td, Th, Thead, Tr, } from '@patternfly/react-table';\nimport { parseQuery } from 'api/queries/query';\nimport { format } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { ComputedReportItemType, ComputedReportItemValueType } from 'routes/views/components/charts/common/chartDatum';\nimport { getDateRangeFromQuery } from 'routes/views/utils/dateRange';\nimport { createMapStateToProps } from 'store/common';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { formatCurrency } from 'utils/format';\nimport { noPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { styles } from './explorerTable.styles';\nimport { PerspectiveType } from './explorerUtils';\nclass ExplorerTableBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { computedReportItemType = ComputedReportItemType.cost, computedReportItemValueType = ComputedReportItemValueType.total, end_date, groupBy, groupByOrg, groupByTagKey, isAllSelected, perspective, report, selectedItems, start_date, intl, } = this.props;\n            if (!report) {\n                return;\n            }\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                isDateMap: true,\n                idKey: groupByTagKey ? groupByTagKey : groupByOrg ? 'org_entities' : groupBy,\n            });\n            // Add first two column headings (i.e., select and name)\n            const columns = groupByTagKey || groupByOrg\n                ? [\n                    {\n                        name: '',\n                    },\n                    {\n                        name: groupByOrg\n                            ? intl.formatMessage(messages.names, { count: 2 })\n                            : intl.formatMessage(messages.tagNames),\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign({ date: undefined, name: intl.formatMessage(messages.groupByValueNames, { groupBy }), orderBy: groupBy === 'account' && perspective === PerspectiveType.aws ? 'account_alias' : groupBy }, (computedItems.length && { isSortable: true })),\n                ];\n            // Fill in missing columns\n            for (let currentDate = new Date(start_date + 'T00:00:00'); currentDate <= new Date(end_date + 'T00:00:00'); currentDate.setDate(currentDate.getDate() + 1)) {\n                const mapId = format(currentDate, 'yyyy-MM-dd');\n                let isSortable = false;\n                computedItems.map(rowItem => {\n                    const item = rowItem.get(mapId);\n                    if (!item) {\n                        rowItem.set(mapId, {\n                            date: mapId,\n                        });\n                    }\n                    else {\n                        isSortable = true; // At least one row must be available\n                    }\n                });\n                // Add column headings\n                const mapIdDate = new Date(mapId + 'T00:00:00');\n                columns.push({\n                    name: intl.formatDate(mapIdDate, {\n                        day: 'numeric',\n                        month: 'short',\n                    }),\n                    date: mapId,\n                    isSortable,\n                    orderBy: 'cost',\n                });\n            }\n            const reportItem = computedReportItemType;\n            const reportItemValue = computedReportItemValueType;\n            // Sort by date and fill in missing cells\n            computedItems.map(rowItem => {\n                const cells = [];\n                let desc; // First column description (i.e., show ID if different than label)\n                let name; // For first column resource name\n                let selectItem; // Save for row selection\n                const items = Array.from(rowItem.values()).sort((a, b) => {\n                    if (new Date(a.date) > new Date(b.date)) {\n                        return 1;\n                    }\n                    else if (new Date(a.date) < new Date(b.date)) {\n                        return -1;\n                    }\n                    else {\n                        return 0;\n                    }\n                });\n                items.map(item => {\n                    if (!name) {\n                        name = item && item.label && item.label !== null ? item.label : null;\n                    }\n                    if (!desc) {\n                        desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                    }\n                    if (item.id && !selectItem) {\n                        selectItem = item;\n                    }\n                    // Add row cells\n                    cells.push({\n                        value: item[reportItem] && item[reportItem][reportItemValue]\n                            ? formatCurrency(item[reportItem][reportItemValue].value, item[reportItem][reportItemValue].units)\n                            : intl.formatMessage(messages.chartNoData),\n                    });\n                });\n                // Add first row cells\n                cells.unshift({}, // Empty cell for row selection\n                {\n                    value: (React.createElement(\"div\", null,\n                        name,\n                        desc)),\n                });\n                rows.push({\n                    cells,\n                    selectionDisabled: selectItem.label === `${noPrefix}${groupBy}` || selectItem.label === `${noPrefix}${groupByTagKey}`,\n                    item: selectItem,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === selectItem.id) !== undefined),\n                });\n            });\n            this.setState({\n                columns,\n                rows,\n            });\n        };\n        this.getEmptyState = () => {\n            const { query, intl } = this.props;\n            for (const val of Object.values(query.filter_by)) {\n                if (val !== '*') {\n                    return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                }\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { query } = this.props;\n            const { columns } = this.state;\n            let direction;\n            const column = columns[index];\n            const hasOrderBy = query && query.order_by && query.order_by;\n            if (column.orderBy && !column.date) {\n                direction = hasOrderBy && query.order_by[column.orderBy];\n            }\n            else if (hasOrderBy && query.order_by.date === column.date) {\n                direction = hasOrderBy && query.order_by[column.orderBy];\n            }\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected } = this.props;\n            const { rows } = this.state;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { onSort } = this.props;\n            const { columns } = this.state;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending, columns[index].date);\n            }\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport || prevProps.selectedItems !== selectedItems) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { intl, isLoading } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(InnerScrollContainer, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.explorerTableAriaLabel), className: \"explorerTableOverride\", gridBreakPoint: \"\" },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => index === 0 ? (React.createElement(Th, { isStickyColumn: true, key: `col-${index}-${col.value}`, stickyMinWidth: \"53px\" })) : index === 1 ? (React.createElement(Th, { hasRightBorder: true, isStickyColumn: true, key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, stickyMinWidth: \"100px\", stickyLeftOffset: \"53px\" }, col.name)) : (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, isStickyColumn: true, key: `cell-${cellIndex}-${rowIndex}`, select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    }, stickyMinWidth: \"53px\" })) : cellIndex === 1 ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, hasRightBorder: true, isStickyColumn: true, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", stickyMinWidth: \"100px\", stickyLeftOffset: \"53px\" }, item.value)) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\" }, item.value))))))))),\n            Boolean(rows.length === 0) && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const { end_date, start_date } = getDateRangeFromQuery(queryFromRoute);\n    return {\n        end_date,\n        start_date,\n    };\n});\nconst mapDispatchToProps = {};\nconst ExplorerTableConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerTableBase);\nconst ExplorerTable = injectIntl(withRouter(ExplorerTableConnect));\nexport { ExplorerTable };\n","import React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { createMapStateToProps } from 'store/common';\nimport { getTagReportPathsType } from './explorerUtils';\nexport class ExplorerToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { isAllSelected, isBulkSelectDisabled, isDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onExportClicked, pagination, perspective, selectedItems, } = this.props;\n        const tagReportPathsType = getTagReportPathsType(perspective);\n        return (React.createElement(DataToolbar, { isAllSelected: isAllSelected, isBulkSelectDisabled: isBulkSelectDisabled, isDisabled: isDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onExportClicked: onExportClicked, pagination: pagination, selectedItems: selectedItems, showBulkSelect: true, showExcludes: true, showExport: true, tagReportPathsType: tagReportPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst ExplorerToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerToolbarBase);\nconst ExplorerToolbar = injectIntl(ExplorerToolbarConnect);\nexport { ExplorerToolbar };\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { getUserAccessQuery } from 'api/queries/userAccessQuery';\nimport { UserAccessType } from 'api/userAccess';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoData } from 'routes/state/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { ExportModal } from 'routes/views/components/export';\nimport { getDateRangeFromQuery, getDateRangeTypeDefault } from 'routes/views/utils/dateRange';\nimport { getGroupByOrgValue, getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { handleCostTypeSelected, handleCurrencySelected, handleFilterAdded, handleFilterRemoved, handlePerPageSelect, handleSetPage, handleSort, } from 'routes/views/utils/handles';\nimport { filterProviders, hasData } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { userAccessQuery, userAccessSelectors } from 'store/userAccess';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedExplorerReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getCostType } from 'utils/costType';\nimport { getCurrency } from 'utils/localStorage';\nimport { noPrefix, orgUnitIdKey, tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { isAwsAvailable, isAzureAvailable, isGcpAvailable, isIbmAvailable, isOciAvailable, isOcpAvailable, isRhelAvailable, } from 'utils/userAccess';\nimport { styles } from './explorer.styles';\nimport { ExplorerChart } from './explorerChart';\nimport { ExplorerHeader } from './explorerHeader';\nimport { ExplorerTable } from './explorerTable';\nimport { ExplorerToolbar } from './explorerToolbar';\nimport { baseQuery, getComputedReportItemType, getComputedReportItemValueType, getGroupByDefault, getPerspectiveDefault, getReportPathsType, getReportType, PerspectiveType, } from './explorerUtils';\nclass Explorer extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            isAllSelected: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByOrg = getGroupByOrgValue(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey ? groupByTagKey : groupByOrg ? 'org_entities' : groupById,\n                isDateMap: false, // Don't use isDateMap here, so we can use a flattened data structure with row selection\n            });\n            return computedItems;\n        };\n        this.getExportModal = (computedItems) => {\n            const { perspective, query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `${noPrefix}${groupById}` || item.label === `${noPrefix}${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: getReportPathsType(perspective), reportQueryString: reportQueryString, resolution: \"daily\", showTimeScope: false }));\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, report, router } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = Math.trunc(offset / limit + 1);\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handlePerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.explorerTitle),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { perspective, query, report, reportFetchStatus, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const groupByOrg = getGroupByOrgValue(query);\n            return (React.createElement(ExplorerTable, { computedReportItemType: getComputedReportItemType(perspective), computedReportItemValueType: getComputedReportItemValueType(perspective), groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, groupByTagKey: groupByTagKey, groupByOrg: groupByOrg, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending, date) => handleSort(query, router, sortType, isSortAscending, date), perspective: perspective, query: query, report: report, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { perspective, report } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(ExplorerToolbar, { isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isDisabled || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onExportClicked: this.handleExportModalOpen, pagination: this.getPagination(isDisabled), perspective: perspective, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleDatePickerSelected = (startDate, endDate) => {\n            this.setState({ startDate, endDate });\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            let groupByKey = groupBy;\n            let value = '*';\n            // Check for org units\n            const index = groupBy && groupBy.indexOf(orgUnitIdKey);\n            if (index !== -1) {\n                groupByKey = orgUnitIdKey.substring(0, orgUnitIdKey.length);\n                value = groupBy.slice(orgUnitIdKey.length);\n            }\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: value,\n                }, order_by: undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handlePerspectiveClick = () => {\n            this.setState({ isAllSelected: false, selectedItems: [] });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.isAwsAvailable = () => {\n            const { awsProviders, userAccess } = this.props;\n            return isAwsAvailable(userAccess, awsProviders);\n        };\n        this.isAzureAvailable = () => {\n            const { azureProviders, userAccess } = this.props;\n            return isAzureAvailable(userAccess, azureProviders);\n        };\n        this.isOciAvailable = () => {\n            const { ociProviders, userAccess } = this.props;\n            return isOciAvailable(userAccess, ociProviders);\n        };\n        this.isGcpAvailable = () => {\n            const { gcpProviders, userAccess } = this.props;\n            return isGcpAvailable(userAccess, gcpProviders);\n        };\n        this.isIbmAvailable = () => {\n            const { ibmProviders, userAccess } = this.props;\n            return isIbmAvailable(userAccess, ibmProviders);\n        };\n        this.isOcpAvailable = () => {\n            const { ocpProviders, userAccess } = this.props;\n            return isOcpAvailable(userAccess, ocpProviders);\n        };\n        this.isRhelAvailable = () => {\n            const { isFinsightsFeatureEnabled, rhelProviders, userAccess } = this.props;\n            return isFinsightsFeatureEnabled && isRhelAvailable(userAccess, rhelProviders);\n        };\n        this.updateReport = () => {\n            const { fetchReport, perspective, reportQueryString } = this.props;\n            fetchReport(getReportPathsType(perspective), getReportType(perspective), reportQueryString);\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handlePerspectiveClick = this.handlePerspectiveClick.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { perspective, report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newPerspective = prevProps.perspective !== perspective;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newPerspective || newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { awsProviders, azureProviders, ociProviders, costType, currency, gcpProviders, ibmProviders, intl, ocpProviders, providersFetchStatus, perspective, userAccessFetchStatus, query, report, reportError, reportFetchStatus, router, } = this.props;\n        // Note: No need to test OCP on cloud here, since that requires at least one provider\n        const noAwsProviders = !this.isAwsAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noAzureProviders = !this.isAzureAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noGcpProviders = !this.isGcpAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noIbmProviders = !this.isIbmAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noOcpProviders = !this.isOcpAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noOciProviders = !this.isOciAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noRhelProviders = !this.isRhelAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noProviders = noAwsProviders &&\n            noAzureProviders &&\n            noGcpProviders &&\n            noIbmProviders &&\n            noOciProviders &&\n            noOcpProviders &&\n            noRhelProviders;\n        const isLoading = providersFetchStatus === FetchStatus.inProgress || userAccessFetchStatus === FetchStatus.inProgress;\n        const computedItems = this.getComputedItems();\n        const isDisabled = computedItems.length === 0;\n        const itemsTotal = report && report.meta ? report.meta.count : 0;\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const groupByTagKey = getGroupByTagKey(query);\n        const title = intl.formatMessage(messages.explorerTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (isLoading) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (noProviders) {\n            return React.createElement(NoProviders, { title: title });\n        }\n        else if (!(hasData(awsProviders) ||\n            hasData(azureProviders) ||\n            hasData(ociProviders) ||\n            hasData(gcpProviders) ||\n            hasData(ibmProviders) ||\n            hasData(ocpProviders))) {\n            return React.createElement(NoData, { title: title });\n        }\n        return (React.createElement(\"div\", { style: styles.explorer },\n            React.createElement(ExplorerHeader, { costType: costType, currency: currency, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, onCostTypeSelected: value => handleCostTypeSelected(query, router, value), onCurrencySelected: value => handleCurrencySelected(query, router, value), onDatePickerSelected: this.handleDatePickerSelected, onFilterAdded: filter => handleFilterAdded(query, router, filter), onFilterRemoved: filter => handleFilterRemoved(query, router, filter), onGroupBySelected: this.handleGroupBySelected, onPerspectiveClicked: this.handlePerspectiveClick, perspective: perspective }),\n            itemsTotal > 0 && (React.createElement(\"div\", { style: styles.chartContent },\n                React.createElement(\"div\", { style: styles.chartContainer },\n                    React.createElement(ExplorerChart, { costType: costType, currency: currency, computedReportItemType: getComputedReportItemType(perspective), computedReportItemValueType: getComputedReportItemValueType(perspective), perspective: perspective })))),\n            React.createElement(\"div\", { style: styles.tableContent },\n                React.createElement(\"div\", { style: styles.toolbarContainer }, this.getToolbar(computedItems)),\n                this.getExportModal(computedItems),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    // Get roviders first\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    const awsProviders = filterProviders(providers, ProviderType.aws);\n    const azureProviders = filterProviders(providers, ProviderType.azure);\n    const ociProviders = filterProviders(providers, ProviderType.oci);\n    const gcpProviders = filterProviders(providers, ProviderType.gcp);\n    const ibmProviders = filterProviders(providers, ProviderType.ibm);\n    const ocpProviders = filterProviders(providers, ProviderType.ocp);\n    const rhelProviders = filterProviders(providers, ProviderType.rhel);\n    const userAccessQueryString = getUserAccessQuery(userAccessQuery);\n    const userAccess = userAccessSelectors.selectUserAccess(state, UserAccessType.all, userAccessQueryString);\n    const userAccessError = userAccessSelectors.selectUserAccessError(state, UserAccessType.all, userAccessQueryString);\n    const userAccessFetchStatus = userAccessSelectors.selectUserAccessFetchStatus(state, UserAccessType.all, userAccessQueryString);\n    // Cost Report\n    const dateRangeType = getDateRangeTypeDefault(queryFromRoute);\n    const { end_date, start_date } = getDateRangeFromQuery(queryFromRoute);\n    const perspective = getPerspectiveDefault({\n        awsProviders,\n        azureProviders,\n        ociProviders,\n        gcpProviders,\n        ibmProviders,\n        ocpProviders,\n        queryFromRoute,\n        rhelProviders,\n        userAccess,\n    });\n    // Ensure group_by key is not undefined\n    let group_by = queryFromRoute.group_by;\n    if (!group_by && perspective) {\n        group_by = { [getGroupByDefault(perspective)]: '*' };\n    }\n    const costType = perspective === PerspectiveType.aws || perspective === PerspectiveType.awsOcp ? getCostType() : undefined;\n    const currency = getCurrency();\n    const query = Object.assign(Object.assign(Object.assign({}, baseQuery), queryFromRoute), { group_by });\n    const reportQuery = {\n        cost_type: costType,\n        currency,\n        end_date,\n        exclude: query.exclude,\n        filter: query.filter,\n        filter_by: query.filter_by,\n        group_by,\n        order_by: query.order_by,\n        start_date,\n    };\n    const reportPathsType = getReportPathsType(perspective);\n    const reportType = getReportType(perspective);\n    const reportQueryString = getQuery(reportQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    return {\n        awsProviders,\n        azureProviders,\n        costType,\n        currency,\n        dateRangeType,\n        gcpProviders,\n        ibmProviders,\n        isFinsightsFeatureEnabled: featureFlagsSelectors.selectIsFinsightsFeatureEnabled(state),\n        ociProviders,\n        ocpProviders,\n        perspective,\n        providers,\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n        rhelProviders,\n        userAccess,\n        userAccessError,\n        userAccessFetchStatus,\n        userAccessQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(Explorer)));\n","import { UserAccessType } from 'api/userAccess';\nconst hasAccess = (userAccess, userAccessType) => {\n    let result = false;\n    if (userAccess && Array.isArray(userAccess.data)) {\n        // Used with multiple types (e.g., type=)\n        const data = userAccess.data.find(d => d.type === userAccessType);\n        result = data && data.access;\n    }\n    else {\n        // Used with type=any, type=GCP, etc.\n        result = userAccess && userAccess.data === true;\n    }\n    return result;\n};\nconst hasProviders = (providers) => {\n    let result = false;\n    if (providers && providers.meta) {\n        // providers API returns empty data array for no sources\n        result = providers.meta.count > 0;\n    }\n    return result;\n};\n// Returns true if user has access to AWS\nexport const hasAwsAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.aws);\n};\n// Returns true if user has access to AWS and at least one source provider\nexport const isAwsAvailable = (userAccess, awsProviders) => {\n    return hasAwsAccess(userAccess) && hasProviders(awsProviders);\n};\n// Returns true if user has access to Azure\nexport const hasAzureAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.azure);\n};\n// Returns true if user has access to Azure and at least one source provider\nexport const isAzureAvailable = (userAccess, azureProviders) => {\n    return hasAzureAccess(userAccess) && hasProviders(azureProviders);\n};\n// Returns true if user has access to Oci\nexport const hasOciAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.oci);\n};\n// Returns true if user has access to Oci and at least one source provider\nexport const isOciAvailable = (userAccess, ociProviders) => {\n    return hasOciAccess(userAccess) && hasProviders(ociProviders);\n};\n// Returns true if user has access to cost models\nexport const hasCostModelAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.cost_model);\n};\n// Returns true if user has access to GCP\nexport const hasGcpAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.gcp);\n};\n// Returns true if user has access to GCP and at least one source provider\nexport const isGcpAvailable = (userAccess, gcpProviders) => {\n    return hasAccess(userAccess, UserAccessType.gcp) && hasProviders(gcpProviders);\n};\n// Returns true if user has access to IBM\nexport const hasIbmAccess = (userAccess) => {\n    return hasGcpAccess(userAccess);\n};\n// Returns true if user has access to IBM and at least one source provider\nexport const isIbmAvailable = (userAccess, ibmProviders) => {\n    return hasIbmAccess(userAccess) && hasProviders(ibmProviders);\n};\n// Returns true if user has access to OCP\nexport const hasOcpAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.ocp);\n};\n// Returns true if user has access to OCP and at least one source provider\nexport const isOcpAvailable = (userAccess, ocpProviders) => {\n    return hasOcpAccess(userAccess) && hasProviders(ocpProviders);\n};\n// Returns true if user has access to RHEL\nexport const hasRhelAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.rhel);\n};\n// Returns true if user has access to RHEL and at least one source provider\nexport const isRhelAvailable = (userAccess, rhelProviders) => {\n    return hasRhelAccess(userAccess) && hasProviders(rhelProviders);\n};\n// Returns true if user has access to ROS\nexport const hasRosAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.ros);\n};\n// Returns true if user has access to RHEL and at least one source provider\nexport const isRosAvailable = (userAccess, rosProviders) => {\n    return hasRosAccess(userAccess) && hasProviders(rosProviders);\n};\n"],"names":["exports","getUserAccessQuery","query","stringify","encode","indices","infrastructureAwsOptions","label","messages","value","infrastructureAwsOcpOptions","infrastructureAzureOptions","infrastructureOciOptions","infrastructureAzureOcpOptions","infrastructureGcpOptions","infrastructureGcpOcpOptions","infrastructureIbmOptions","infrastructureIbmOcpOptions","infrastructureOcpCloudOptions","ocpOptions","rhelOptions","getInfrastructureOptions","hasAws","hasAwsOcp","hasAzure","hasAzureOcp","hasGcp","hasGcpOcp","hasIbm","hasIbmOcp","hasOci","isIbmFeatureEnabled","options","push","currentItem","hasOcp","hasOcpCloud","hasRhel","isDisabled","isInfrastructureTab","isRhelTab","onSelected","undefined","getIdKeyForGroupBy","groupBy","account","cluster","gcp_project","node","org_unit_id","payer_tenant_id","product_service","project","region","resource_location","service","service_name","subscription_guid","styles","chartContainer","backgroundColor","global_BackgroundColor_light_100","marginLeft","global_spacer_lg","marginRight","paddingRight","paddingBottom","paddingTop","chartContent","explorer","minHeight","paginationContainer","pagination","global_spacer_md","tableContainer","tableContent","toolbarContainer","_arrayLikeToArray","arr","len","length","i","arr2","Array","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","target","arguments","source","forEach","key","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","configurable","writable","fallbackProps","width","height","padding","stackData","props","childComponents","filterNullChildData","map","dataset","datum","_x","_y","datasets","fillInMissingData","xMap","reduce","prev","Date","getTime","xKeys","k","Number","xArr","indexOffset","isDate","x","index","y","fillData","d","xOffset","yOffset","y0","group","_group","firstDatasetBaseline","previousPoints","slice","concat","previousDatum","memo","some","point","getY0","_y0","_y1","_x1","addLayoutData","getCalculatedProps","children","role","style","theme","categories","c","data","domain","range","baseScale","scale","horizontal","_props","colorScale","getColorScale","child","type","colorScaleOptions","getChildren","calculatedProps","childProps","standalone","getChildProps","parentName","name","labels","getLabels","domainPadding","labelComponent","polar","VictoryStackBase","initialProps","VictoryStack","_Hooks$useAnimationSt","setAnimationState","getAnimationProps","getProps","modifiedProps","eventKey","containerComponent","groupComponent","externalEventMutations","modifiedChildren","_child","withoutSharedEvents","_React$useState2","isArray","_arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","err","_iterableToArrayLimit","o","minLen","n","prototype","toString","constructor","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","setProps","useMemoizedProps","newChildren","animate","reverse","containerProps","parent","userProps","container","defaultContainerProps","events","previousProps","propTypes","bins","defaultProps","componentConfig","expectedComponents","assign","displayName","ChartStack","_a","ariaDesc","ariaTitle","ChartContainer","hasPatterns","patternScale","themeColor","themeVariant","rest","desc","title","className","g","defaultPatternScale","themeColorScale","stack","chartStyles","chart_color_blue_300","chart_color_gold_300","chart_color_green_300","chart_color_purple_300","chart_color_orange_300","chart_color_cyan_300","yAxis","axisLabel","grid","stroke","ticks","yAxisAlt","tickLabels","fontSize","xAxis","CostExplorerChartBase","super","this","containerRef","observer","noop","state","hiddenSeries","Set","tickValues","initDatum","top1stData","top2ndData","top3rdData","top4thData","top5thData","top6thData","series","getTruncatedString","childName","initDatumChildName","legendItem","symbol","fill","tooltip","cursorVoronoiContainer","getCursorVoronoiContainer","units","getUnits","setState","getTickValues","getAdjustedContainerHeight","adjustContainerHeight","containerHeight","adjustedContainerHeight","getBarWidth","maxValue","s","sectionWidth","getChart","barWidth","has","ChartBar","formatter","formatOptions","CursorVoronoiContainer","cursorDimension","mouseFollowTooltips","voronoiDimension","voronoiPadding","bottom","left","right","top","getDomain","max","Math","getEvents","chartNames","isDataHidden","isHidden","legendName","onLegendClick","handleLegendClick","getLegend","ChartLegend","gutter","responsive","val","values","modVal","str","substring","maxChars","getTickValue","t","handleResize","clientWidth","current","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","render","intl","disable","ChartLegendTooltip","legendData","formatMessage","day","ref","Chart","legendAllowWrap","legendComponent","legendPosition","ChartTheme","ChartAxis","C","fixLabelOverlap","dependentAxis","tickFormat","injectIntl","global_spacer_2xl","chartSkeleton","marginBottom","marginTop","global_spacer_3xl","costChart","global_spacer_sm","legendSkeleton","titleContainer","trendChart","usageChart","PerspectiveType","baseQuery","limit","offset","exclude","filter_by","order_by","cost","dateRangeOptions","groupByAwsOptions","groupByAzureOptions","groupByGcpOptions","groupByGcpOcpOptions","groupByIbmOptions","groupByOciOptions","groupByOcpOptions","groupByRhelOptions","getComputedReportItemType","perspective","result","getComputedReportItemValueType","getGroupByDefault","aws","awsOcp","gcp","gcpOcp","ibm","azure","azureOcp","oci","ocp","ocpCloud","rhel","getGroupByOptions","getOrgReportPathsType","getReportType","getReportPathsType","getTagReportPathsType","ExplorerChartBase","stateProps","dispatchProps","defaultState","createReportDatum","computedItem","reportItem","reportItemValue","computedItemDate","date","xVal","formatDate","month","yVal","parseFloat","toFixed","id","fetchReport","reportQueryString","getChartDatums","computedItems","computedReportItemType","computedReportItemValueType","chartDatums","datums","Map","padChartDatums","getComputedItems","report","idKey","getGroupBy","isDateMap","groupById","group_by","groupByOrg","getSkeleton","Skeleton","skeleton","items","end_date","start_date","newItems","padDate","setDate","getDate","format","chartDatum","find","reportError","reportFetchStatus","Title","headingLevel","size","mapStateToProps","costType","currency","router","queryFromRoute","location","search","reportQuery","cost_type","reportPathsType","reportType","mapDispatchToProps","ExplorerChartConnect","connect","ExplorerChart","toContainer","ExplorerDatePickerBase","startDateRef","endDateRef","getStartDatePicker","startDate","DatePicker","onChange","handleStartDateOnChange","placeholder","validators","getEndDatePicker","endDate","getMaxEndDate","handleEndDateOnChange","rangeStart","today","setTime","isEndDateValid","minDate","maxDate","isStartDateValid","evt","setCalendarOpen","dateRangeType","prevState","ExplorerDatePicker","ExplorerDateRangeBase","isSelectOpen","getSelect","selectOptions","getSelectOptions","selection","option","Select","isOpen","onSelect","handleSelect","onToggle","handleToggle","selections","variant","SelectVariant","SelectOption","event","ExplorerDateRange","orgReportType","tagReportType","ExplorerFilterBase","showDatePicker","getCategoryOptions","orgReport","tagReport","getDateRangeComponent","currentDateRangeType","handleDateRangeSelected","getDatePickerComponent","handleDatePickerSelected","newQuery","JSON","parse","navigate","replace","fetchOrg","fetchTag","orgQueryString","orgReportPathsType","tagQueryString","tagReportPathsType","categoryOptions","onFilterAdded","onFilterRemoved","resourcePathsType","dateRange","datePicker","showFilter","orgReportFetchStatus","key_only","tagReportFetchStatus","ExplorerFilterConnect","ExplorerFilter","display","alignItems","costLabel","costValue","costLabelUnit","global_FontSize_sm","color","global_Color_100","costLabelDate","global_Color_200","paddingLeft","header","headerContent","justifyContent","headerContentRight","perspectiveContainer","ExplorerHeaderBase","getPerspective","currentPerspective","isAwsAvailable","isAzureAvailable","isOciAvailable","isGcpAvailable","isIbmAvailable","isOcpAvailable","isRhelAvailable","isAwsOcpAvailable","isAzureOcpAvailable","isGcpOcpAvailable","isIbmOcpAvailable","isOcpCloudAvailable","handlePerspectiveSelected","onPerspectiveClicked","awsProviders","userAccess","ocpProviders","azureProviders","gcpProviders","ibmProviders","ociProviders","isFinsightsFeatureEnabled","rhelProviders","isExportsFeatureEnabled","onCostTypeSelected","onCurrencySelected","onGroupBySelected","providersFetchStatus","noAwsProviders","noAzureProviders","noGcpProviders","noIbmProviders","noOcpProviders","noRhelProviders","noProviders","groupByOptions","getResourcePathsType","TitleSizes","showOrgs","showTags","providersQueryString","providers","providersError","userAccessQueryString","userAccessError","userAccessFetchStatus","featureFlags","ExplorerHeader","emptyState","infoArrow","position","infoArrowDesc","global_spacer_xs","infoDescription","global_disabled_color_100","global_FontSize_xs","ExplorerTableBase","columns","rows","groupByTagKey","isAllSelected","selectedItems","count","orderBy","isSortable","currentDate","mapId","rowItem","get","set","mapIdDate","cells","selectItem","sort","a","b","item","unshift","selectionDisabled","selected","getEmptyState","showMargin","EmptyState","EmptyStateIcon","icon","EmptyStateBody","getSortBy","direction","column","hasOrderBy","getSortParams","sortBy","onSort","handleOnSort","columnIndex","handleOnSelect","isSelected","rowId","newRows","row","SortByDirection","bind","currentReport","isLoading","InnerScrollContainer","TableComposable","gridBreakPoint","Thead","Tr","col","Th","isStickyColumn","stickyMinWidth","hasRightBorder","modifier","stickyLeftOffset","Tbody","Td","colSpan","Bullseye","textAlign","Spinner","rowIndex","cellIndex","dataLabel","select","_event","Boolean","ExplorerTableConnect","ExplorerTable","ExplorerToolbarBase","isBulkSelectDisabled","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onExportClicked","showBulkSelect","showExcludes","showExport","ExplorerToolbarConnect","ExplorerToolbar","Explorer","isExportModalOpen","getExportModal","meta","isAllItems","onClose","handleExportModalClose","resolution","showTimeScope","getPagination","isBottom","page","trunc","Pagination","isCompact","itemCount","onPerPageSelect","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","PaginationVariant","widgetId","getTable","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","handleExportModalOpen","action","handleGroupBySelected","groupByKey","indexOf","handlePerspectiveClick","updateReport","newPerspective","noReport","noLocation","noOciProviders","onDatePickerSelected","ibmOcp","hasAwsCloud","hasAzureCloud","hasGcpCloud","hasIbmCloud","getPerspectiveDefault","hasAccess","userAccessType","access","hasProviders","hasAwsAccess","hasAzureAccess","hasOciAccess","hasCostModelAccess","hasGcpAccess","hasIbmAccess","hasOcpAccess","hasRhelAccess","hasRosAccess"],"sourceRoot":""}