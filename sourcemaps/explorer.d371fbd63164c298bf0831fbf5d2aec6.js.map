{"version":3,"file":"js/explorer.edc6395718fc275f32a8.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-tokens/dist/js/chart_color_cyan_300.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/chart_color_gold_300.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/chart_color_purple_300.js","webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_Color_200.js","webpack:///./src/api/queries/userAccessQuery.ts","webpack:///./src/routes/components/charts/chartTheme/theme-koku.ts","webpack:///./src/routes/components/charts/chartTheme/index.ts","webpack:///./src/routes/components/charts/chartTheme/theme-utils.ts","webpack:///./src/routes/components/costDistribution/costDistribution.styles.ts","webpack:///./src/routes/components/costDistribution/costDistribution.tsx","webpack:///./src/routes/components/perspective/perspective.tsx","webpack:///./src/routes/utils/computedReport/getComputedExplorerReportItems.ts","webpack:///./src/routes/explorer/explorer.styles.ts","webpack:///./node_modules/victory-stack/es/helper-methods.js","webpack:///./node_modules/victory-stack/es/victory-stack.js","webpack:///./node_modules/@patternfly/react-charts/dist/esm/components/ChartStack/ChartStack.js","webpack:///./src/routes/components/charts/costExplorerChart/costExplorerChart.styles.ts","webpack:///./src/routes/components/charts/costExplorerChart/costExplorerChart.tsx","webpack:///./src/routes/explorer/explorerChart.styles.ts","webpack:///./src/routes/explorer/explorerUtils.ts","webpack:///./src/routes/explorer/explorerChart.tsx","webpack:///./src/routes/explorer/explorerDatePicker.styles.ts","webpack:///./src/routes/explorer/explorerDatePicker.tsx","webpack:///./src/routes/explorer/explorerDateRange.tsx","webpack:///./src/routes/explorer/explorerFilter.styles.ts","webpack:///./src/routes/explorer/explorerFilter.tsx","webpack:///./src/routes/explorer/explorerHeader.styles.ts","webpack:///./src/routes/explorer/explorerHeader.tsx","webpack:///./src/routes/explorer/explorerTable.styles.ts","webpack:///./src/routes/explorer/explorerTable.tsx","webpack:///./src/routes/explorer/explorerToolbar.tsx","webpack:///./src/routes/explorer/explorer.tsx","webpack:///./src/routes/utils/skeleton.ts","webpack:///./src/utils/userAccess.ts"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.chart_color_cyan_300 = {\n  \"name\": \"--pf-chart-color-cyan-300\",\n  \"value\": \"#009596\",\n  \"var\": \"var(--pf-chart-color-cyan-300, #009596)\"\n};\nexports[\"default\"] = exports.chart_color_cyan_300;","\"use strict\";\nexports.__esModule = true;\nexports.chart_color_gold_300 = {\n  \"name\": \"--pf-chart-color-gold-300\",\n  \"value\": \"#f4c145\",\n  \"var\": \"var(--pf-chart-color-gold-300, #f4c145)\"\n};\nexports[\"default\"] = exports.chart_color_gold_300;","\"use strict\";\nexports.__esModule = true;\nexports.chart_color_purple_300 = {\n  \"name\": \"--pf-chart-color-purple-300\",\n  \"value\": \"#5752d1\",\n  \"var\": \"var(--pf-chart-color-purple-300, #5752d1)\"\n};\nexports[\"default\"] = exports.chart_color_purple_300;","\"use strict\";\nexports.__esModule = true;\nexports.global_Color_200 = {\n  \"name\": \"--pf-global--Color--200\",\n  \"value\": \"#6a6e73\",\n  \"var\": \"var(--pf-global--Color--200)\"\n};\nexports[\"default\"] = exports.global_Color_200;","import { parse, stringify } from 'qs';\nexport function getUserAccessQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseUserAccessQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","// Layout\nconst LAYOUT_PROPS = {\n    padding: 8,\n};\n// Victory theme properties only\nexport default {\n    area: Object.assign({}, LAYOUT_PROPS),\n    axis: Object.assign({}, LAYOUT_PROPS),\n    bar: Object.assign({}, LAYOUT_PROPS),\n    boxplot: Object.assign({}, LAYOUT_PROPS),\n    candlestick: Object.assign({}, LAYOUT_PROPS),\n    chart: Object.assign({}, LAYOUT_PROPS),\n    errorbar: Object.assign({}, LAYOUT_PROPS),\n    group: Object.assign({}, LAYOUT_PROPS),\n    legend: {},\n    line: Object.assign({}, LAYOUT_PROPS),\n    pie: Object.assign({}, LAYOUT_PROPS),\n    scatter: Object.assign({}, LAYOUT_PROPS),\n    stack: Object.assign({}, LAYOUT_PROPS),\n    tooltip: {},\n    voronoi: Object.assign({}, LAYOUT_PROPS),\n};\n","import getTheme from './theme-utils';\nconst ChartTheme = getTheme();\nexport default ChartTheme;\n","import { ChartThemeColor, getCustomTheme } from '@patternfly/react-charts';\nimport { default as ChartTheme } from './theme-koku';\n// Applies theme color and variant to base theme\nconst getTheme = () => getCustomTheme(ChartThemeColor.default, null, ChartTheme);\nexport default getTheme;\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    selector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    label: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n        whiteSpace: 'nowrap',\n    },\n};\n","import './costDistribution.scss';\nimport { Select, SelectOption, SelectVariant, Title, TitleSizes } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ComputedReportItemValueType } from 'routes/components/charts/common';\nimport { createMapStateToProps } from 'store/common';\nimport { setCostDistribution } from 'utils/localStorage';\nimport { styles } from './costDistribution.styles';\nconst costDistributionOptions = [\n    { label: messages.costDistributionType, value: ComputedReportItemValueType.distributed },\n    { label: messages.costDistributionType, value: ComputedReportItemValueType.total },\n];\nclass CostDistributionBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isSelectOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getSelect = () => {\n            const { costDistribution, isDisabled } = this.props;\n            const { isSelectOpen } = this.state;\n            const selectOptions = this.getSelectOptions();\n            const selection = selectOptions.find((option) => option.value === costDistribution);\n            return (React.createElement(Select, { className: \"selectOverride\", id: \"costDistributionSelect\", isDisabled: isDisabled, isOpen: isSelectOpen, onSelect: this.handleSelect, onToggle: this.handleToggle, selections: selection, variant: SelectVariant.single }, selectOptions.map(option => (React.createElement(SelectOption, { description: option.desc, key: option.value, value: option })))));\n        };\n        this.getSelectOptions = () => {\n            const { intl } = this.props;\n            const options = [];\n            costDistributionOptions.map(option => {\n                options.push({\n                    toString: () => intl.formatMessage(option.label, { value: option.value }),\n                    value: option.value,\n                });\n            });\n            return options;\n        };\n        this.handleSelect = (event, selection) => {\n            const { onSelect } = this.props;\n            setCostDistribution(selection.value); // Set cost distribution in local storage\n            this.setState({\n                isSelectOpen: false,\n            }, () => {\n                if (onSelect) {\n                    onSelect(selection.value);\n                }\n            });\n        };\n        this.handleToggle = isSelectOpen => {\n            this.setState({ isSelectOpen });\n        };\n    }\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(\"div\", { style: styles.selector },\n            React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.md, style: styles.label }, intl.formatMessage(messages.costDistributionLabel)),\n            this.getSelect()));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst CostDistributionConnect = connect(mapStateToProps, mapDispatchToProps)(CostDistributionBase);\nconst CostDistribution = injectIntl(CostDistributionConnect);\nexport default CostDistribution;\n","import messages from 'locales/messages';\nimport React from 'react';\nimport { PerspectiveSelect } from 'routes/components/perspective/perspectiveSelect';\n// Infrastructure AWS options\nconst infrastructureAwsOptions = [{ label: messages.perspectiveValues, value: 'aws' }];\n// Infrastructure AWS filtered by OpenShift options\nconst infrastructureAwsOcpOptions = [{ label: messages.perspectiveValues, value: 'aws_ocp' }];\n// Infrastructure Azure options\nconst infrastructureAzureOptions = [{ label: messages.perspectiveValues, value: 'azure' }];\n// Infrastructure Oci options\nconst infrastructureOciOptions = [{ label: messages.perspectiveValues, value: 'oci' }];\n// Infrastructure Azure filtered by OpenShift options\nconst infrastructureAzureOcpOptions = [{ label: messages.perspectiveValues, value: 'azure_ocp' }];\n// Infrastructure GCP options\nconst infrastructureGcpOptions = [{ label: messages.perspectiveValues, value: 'gcp' }];\n// Infrastructure GCP filtered by OCP options\nconst infrastructureGcpOcpOptions = [{ label: messages.perspectiveValues, value: 'gcp_ocp' }];\n// Infrastructure IBM options\nconst infrastructureIbmOptions = [{ label: messages.perspectiveValues, value: 'ibm' }];\n// Infrastructure IBM filtered by OCP options\nconst infrastructureIbmOcpOptions = [{ label: messages.perspectiveValues, value: 'ibm_ocp' }];\n// Infrastructure Ocp cloud options\nconst infrastructureOcpCloudOptions = [{ label: messages.perspectiveValues, value: 'ocp_cloud' }];\n// Ocp options\nconst ocpOptions = [{ label: messages.perspectiveValues, value: 'ocp' }];\n// RHEL options\nconst rhelOptions = [{ label: messages.perspectiveValues, value: 'rhel' }];\nconst getInfrastructureOptions = ({ hasAws, hasAwsOcp, hasAzure, hasAzureOcp, hasGcp, hasGcpOcp, hasIbm, hasIbmOcp, hasOci, isIbmFeatureEnabled, }) => {\n    const options = [];\n    if (hasAws) {\n        options.push(...infrastructureAwsOptions);\n    }\n    if (hasAwsOcp) {\n        options.push(...infrastructureAwsOcpOptions);\n    }\n    if (hasGcp) {\n        options.push(...infrastructureGcpOptions);\n    }\n    if (hasGcpOcp) {\n        options.push(...infrastructureGcpOcpOptions);\n    }\n    if (hasIbm) {\n        options.push(...infrastructureIbmOptions);\n    }\n    if (hasIbmOcp && isIbmFeatureEnabled) {\n        options.push(...infrastructureIbmOcpOptions);\n    }\n    if (hasAzure) {\n        options.push(...infrastructureAzureOptions);\n    }\n    if (hasAzureOcp) {\n        options.push(...infrastructureAzureOcpOptions);\n    }\n    if (hasOci) {\n        options.push(...infrastructureOciOptions);\n    }\n    return options;\n};\nconst Perspective = ({ currentItem, hasAws, hasAwsOcp, hasAzure, hasAzureOcp, hasGcp, hasGcpOcp, hasIbm, hasIbmOcp, hasOci, hasOcp, hasOcpCloud, hasRhel, isDisabled, isIbmFeatureEnabled, isInfrastructureTab, isRhelTab, onSelected, }) => {\n    // Dynamically show options if providers are available\n    const options = [];\n    // Note isInfrastructureTab and isRhelTab will be undefined for cost explorer\n    if (isInfrastructureTab !== undefined || isRhelTab !== undefined) {\n        if (isInfrastructureTab) {\n            if (hasOcpCloud) {\n                options.push(...infrastructureOcpCloudOptions);\n            }\n            options.push(...getInfrastructureOptions({\n                hasAws,\n                hasAwsOcp,\n                hasAzure,\n                hasAzureOcp,\n                hasGcp,\n                hasGcpOcp,\n                hasIbm,\n                hasIbmOcp,\n                hasOci,\n                isIbmFeatureEnabled,\n            }));\n        }\n        else if (isRhelTab) {\n            if (hasRhel) {\n                options.push(...rhelOptions);\n            }\n        }\n        else if (hasOcp) {\n            options.push(...ocpOptions);\n        }\n    }\n    else {\n        if (hasOcp) {\n            options.push(...ocpOptions);\n        }\n        if (hasOcpCloud) {\n            options.push(...infrastructureOcpCloudOptions);\n        }\n        if (hasRhel) {\n            options.push(...rhelOptions);\n        }\n        options.push(...getInfrastructureOptions({\n            hasAws,\n            hasAwsOcp,\n            hasAzure,\n            hasAzureOcp,\n            hasGcp,\n            hasGcpOcp,\n            hasIbm,\n            hasIbmOcp,\n            hasOci,\n            isIbmFeatureEnabled,\n        }));\n    }\n    return (React.createElement(PerspectiveSelect, { currentItem: currentItem || options[0].value, isDisabled: isDisabled, onSelected: onSelected, options: options }));\n};\nexport default Perspective;\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.account) {\n        return 'account';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.gcp_project) {\n        return 'gcp_project';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    if (groupBy.org_unit_id) {\n        return 'org_unit_id';\n    }\n    if (groupBy.payer_tenant_id) {\n        return 'payer_tenant_id';\n    }\n    if (groupBy.product_service) {\n        return 'product_service';\n    }\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.region) {\n        return 'region';\n    }\n    if (groupBy.resource_location) {\n        return 'resource_location';\n    }\n    if (groupBy.service) {\n        return 'service';\n    }\n    if (groupBy.service_name) {\n        return 'service_name';\n    }\n    if (groupBy.subscription_guid) {\n        return 'subscription_guid';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    chartContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n        paddingRight: global_spacer_lg.value,\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    chartContent: {\n        paddingTop: global_spacer_lg.value,\n    },\n    explorer: {\n        minHeight: '100%',\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    tableContent: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    toolbarContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import _orderBy from \"lodash/orderBy\";\nimport _keys from \"lodash/keys\";\nimport _assign from \"lodash/assign\";\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport { Helpers, Scale, Wrapper } from \"victory-core\";\nimport isEqual from \"react-fast-compare\";\nvar fallbackProps = {\n  width: 450,\n  height: 300,\n  padding: 50\n}; // Assumes data in `datasets` is sorted by `Data.getData`.\n\nfunction fillData(props, datasets) {\n  var fillInMissingData = props.fillInMissingData;\n  var xMap = datasets.reduce(function (prev, dataset) {\n    dataset.forEach(function (datum) {\n      prev[datum._x instanceof Date ? datum._x.getTime() : datum._x] = true;\n    });\n    return prev;\n  }, {});\n\n  var xKeys = _keys(xMap).map(function (k) {\n    return Number(k);\n  });\n\n  var xArr = _orderBy(xKeys);\n\n  return datasets.map(function (dataset) {\n    var indexOffset = 0;\n    var isDate = dataset[0] && dataset[0]._x instanceof Date;\n    var filledInData = xArr.map(function (x, index) {\n      x = Number(x);\n      var datum = dataset[index - indexOffset];\n\n      if (datum) {\n        var x1 = isDate ? datum._x.getTime() : datum._x;\n\n        if (x1 === x) {\n          return datum;\n        }\n\n        indexOffset++;\n\n        var _y = fillInMissingData ? 0 : null;\n\n        x = isDate ? new Date(x) : x;\n        return {\n          x: x,\n          y: _y,\n          _x: x,\n          _y: _y\n        };\n      }\n\n      var y = fillInMissingData ? 0 : null;\n      x = isDate ? new Date(x) : x;\n      return {\n        x: x,\n        y: y,\n        _x: x,\n        _y: y\n      };\n    });\n    return filledInData;\n  });\n}\n\nfunction getY0(datum, index, datasets) {\n  if (datum.y0) {\n    return datum.y0;\n  }\n\n  var y = datum._y;\n  var group = datum._group;\n  var firstDatasetBaseline = datasets[0].map(function (d) {\n    return d.y0;\n  });\n  var previousDatasets = datasets.slice(0, index);\n  var previousPoints = previousDatasets.reduce(function (prev, dataset) {\n    return prev.concat(dataset.filter(function (previousDatum) {\n      return datum._x instanceof Date ? previousDatum._x.getTime() === datum._x.getTime() : previousDatum._x === datum._x;\n    }).map(function (previousDatum) {\n      return previousDatum._y || 0;\n    }));\n  }, []);\n  var y0 = previousPoints.length && previousPoints.reduce(function (memo, value) {\n    var sameSign = y < 0 && value < 0 || y >= 0 && value >= 0;\n    return sameSign ? Number(value) + memo : memo;\n  }, firstDatasetBaseline[group] || 0);\n  return previousPoints.some(function (point) {\n    return point instanceof Date;\n  }) ? new Date(y0) : y0;\n}\n/* eslint-disable no-nested-ternary */\n\n\nfunction addLayoutData(props, datasets, index) {\n  var xOffset = props.xOffset || 0;\n  return datasets[index].map(function (datum) {\n    var yOffset = getY0(datum, index, datasets) || 0;\n    return _assign({}, datum, {\n      _y0: !(datum._y instanceof Date) ? yOffset : yOffset ? new Date(yOffset) : datum._y,\n      _y1: datum._y === null ? null : datum._y instanceof Date ? new Date(Number(datum._y) + Number(yOffset)) : datum._y + yOffset,\n      _x1: datum._x === null ? null : datum._x instanceof Date ? new Date(Number(datum._x) + Number(xOffset)) : datum._x + xOffset\n    });\n  });\n}\n/* eslint-enable no-nested-ternary */\n\n\nfunction stackData(props, childComponents) {\n  var dataFromChildren = Wrapper.getDataFromChildren(props, childComponents);\n  var filterNullChildData = dataFromChildren.map(function (dataset) {\n    return dataset.filter(function (datum) {\n      return datum._x !== null && datum._y !== null;\n    });\n  });\n  var datasets = fillData(props, filterNullChildData);\n  return datasets.map(function (d, i) {\n    return addLayoutData(props, datasets, i);\n  });\n}\n\nexport function getCalculatedProps(props, childComponents) {\n  childComponents = childComponents || React.Children.toArray(props.children);\n  var role = \"stack\";\n  props = Helpers.modifyProps(props, fallbackProps, role);\n  var style = Wrapper.getStyle(props.theme, props.style, role);\n  var categories = props.categories || Wrapper.getCategories(props, childComponents);\n  var datasets = props.datasets || stackData(props, childComponents);\n  var children = childComponents.map(function (c, i) {\n    return /*#__PURE__*/React.cloneElement(c, {\n      data: datasets[i]\n    });\n  });\n  var domain = {\n    x: Wrapper.getDomain(_assign({}, props, {\n      categories: categories\n    }), \"x\", children),\n    y: Wrapper.getDomain(_assign({}, props, {\n      categories: categories\n    }), \"y\", children)\n  };\n  var range = props.range || {\n    x: Helpers.getRange(props, \"x\"),\n    y: Helpers.getRange(props, \"y\")\n  };\n  var baseScale = {\n    x: Scale.getScaleFromProps(props, \"x\") || Wrapper.getScale(props, \"x\"),\n    y: Scale.getScaleFromProps(props, \"y\") || Wrapper.getScale(props, \"y\")\n  };\n  var scale = {\n    x: baseScale.x.domain(domain.x).range(props.horizontal ? range.y : range.x),\n    y: baseScale.y.domain(domain.y).range(props.horizontal ? range.x : range.y)\n  };\n  var _props = props,\n      colorScale = _props.colorScale,\n      horizontal = _props.horizontal;\n  return {\n    datasets: datasets,\n    categories: categories,\n    range: range,\n    domain: domain,\n    horizontal: horizontal,\n    scale: scale,\n    style: style,\n    colorScale: colorScale,\n    role: role\n  };\n} // We need to remove sharedEvents in order to memoize the calculated data\n// With shared events, the props change on every event, and every value is re-calculated\n\nvar withoutSharedEvents = function (props) {\n  var children = props.children;\n  var modifiedChildren = React.Children.toArray(children).map(function (_child) {\n    var child = _child;\n    return _objectSpread(_objectSpread({}, child), {}, {\n      props: Helpers.omit(child.props, [\"sharedEvents\"])\n    });\n  });\n  props.children = modifiedChildren;\n  return props;\n};\n\nexport function useMemoizedProps(initialProps) {\n  var modifiedProps = withoutSharedEvents(initialProps);\n\n  var _React$useState = React.useState(modifiedProps),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      props = _React$useState2[0],\n      setProps = _React$useState2[1]; // React.memo uses shallow equality to compare objects. This way props\n  // will only be re-calculated when they change.\n\n\n  React.useEffect(function () {\n    if (!isEqual(modifiedProps, props)) {\n      setProps(modifiedProps);\n    }\n  }, [props, setProps, modifiedProps]);\n  return React.useMemo(function () {\n    return getCalculatedProps(props, props.children);\n  }, [props]);\n}\n\nfunction getLabels(props, datasets, index) {\n  if (!props.labels) {\n    return undefined;\n  }\n\n  return datasets.length === index + 1 ? props.labels : undefined;\n}\n\nexport function getChildProps(props, calculatedProps) {\n  var categories = calculatedProps.categories,\n      domain = calculatedProps.domain,\n      range = calculatedProps.range,\n      scale = calculatedProps.scale,\n      horizontal = calculatedProps.horizontal;\n  return {\n    height: props.height,\n    width: props.width,\n    padding: Helpers.getPadding(props),\n    standalone: false,\n    theme: props.theme,\n    categories: categories,\n    domain: domain,\n    range: range,\n    scale: scale,\n    horizontal: horizontal\n  };\n}\n\nfunction getColorScale(props, child) {\n  var role = child.type && child.type.role;\n  var colorScaleOptions = child.props.colorScale || props.colorScale;\n\n  if (role !== \"group\" && role !== \"stack\") {\n    return undefined;\n  }\n\n  return props.theme ? colorScaleOptions || props.theme.props.colorScale : colorScaleOptions;\n}\n\nexport function getChildren(props, childComponents, calculatedProps) {\n  props = Helpers.modifyProps(props, fallbackProps, \"stack\");\n  childComponents = childComponents || React.Children.toArray(props.children);\n  calculatedProps = calculatedProps || getCalculatedProps(props, childComponents);\n  var _calculatedProps = calculatedProps,\n      datasets = _calculatedProps.datasets;\n  var childProps = getChildProps(props, calculatedProps);\n  var parentName = props.name || \"stack\";\n  return childComponents.map(function (child, index) {\n    var role = child.type && child.type.role;\n    var data = datasets[index];\n    var style = Wrapper.getChildStyle(child, index, calculatedProps);\n    var labels = props.labels ? getLabels(props, datasets, index) : child.props.labels;\n    var name = child.props.name || \"\".concat(parentName, \"-\").concat(role, \"-\").concat(index);\n    return /*#__PURE__*/React.cloneElement(child, _assign({\n      key: \"\".concat(name, \"-key-\").concat(index),\n      labels: labels,\n      name: name,\n      domainPadding: child.props.domainPadding || props.domainPadding,\n      theme: props.theme,\n      labelComponent: props.labelComponent || child.props.labelComponent,\n      style: style,\n      colorScale: getColorScale(props, child),\n      data: data,\n      polar: props.polar\n    }, childProps));\n  });\n}","import _isEmpty from \"lodash/isEmpty\";\nimport _defaults from \"lodash/defaults\";\nimport _assign from \"lodash/assign\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { CommonProps, Helpers, Hooks, PropTypes as CustomPropTypes, UserProps, VictoryContainer, VictoryTheme, Wrapper } from \"victory-core\";\nimport { VictorySharedEvents } from \"victory-shared-events\";\nimport { getChildren, useMemoizedProps } from \"./helper-methods\";\nimport isEqual from \"react-fast-compare\";\nvar fallbackProps = {\n  width: 450,\n  height: 300,\n  padding: 50\n};\n\nvar VictoryStackBase = function (initialProps) {\n  // eslint-disable-next-line no-use-before-define\n  var role = VictoryStack.role;\n\n  var _Hooks$useAnimationSt = Hooks.useAnimationState(),\n      setAnimationState = _Hooks$useAnimationSt.setAnimationState,\n      getAnimationProps = _Hooks$useAnimationSt.getAnimationProps,\n      getProps = _Hooks$useAnimationSt.getProps;\n\n  var props = getProps(initialProps);\n  var modifiedProps = Helpers.modifyProps(props, fallbackProps, role);\n  var eventKey = modifiedProps.eventKey,\n      containerComponent = modifiedProps.containerComponent,\n      standalone = modifiedProps.standalone,\n      groupComponent = modifiedProps.groupComponent,\n      externalEventMutations = modifiedProps.externalEventMutations,\n      width = modifiedProps.width,\n      height = modifiedProps.height,\n      theme = modifiedProps.theme,\n      polar = modifiedProps.polar,\n      horizontal = modifiedProps.horizontal,\n      name = modifiedProps.name;\n  var childComponents = React.Children.toArray(modifiedProps.children);\n  var calculatedProps = useMemoizedProps(modifiedProps);\n  var domain = calculatedProps.domain,\n      scale = calculatedProps.scale,\n      style = calculatedProps.style;\n  var newChildren = React.useMemo(function () {\n    var children = getChildren(props, childComponents, calculatedProps);\n    var orderedChildren = children.map(function (child, index) {\n      var childProps = _assign({\n        animate: getAnimationProps(props, child, index)\n      }, child.props);\n\n      return /*#__PURE__*/React.cloneElement(child, childProps);\n    });\n    /*\n      reverse render order for children of `VictoryStack` so that higher children in the stack\n      are rendered behind lower children. This looks nicer for stacked bars with cornerRadius, and\n      areas with strokes\n    */\n\n    return orderedChildren.reverse();\n  }, [props, childComponents, calculatedProps, getAnimationProps]);\n  var containerProps = React.useMemo(function () {\n    if (standalone) {\n      return {\n        domain: domain,\n        scale: scale,\n        width: width,\n        height: height,\n        standalone: standalone,\n        theme: theme,\n        style: style.parent,\n        horizontal: horizontal,\n        polar: polar,\n        name: name\n      };\n    }\n\n    return {};\n  }, [standalone, domain, scale, width, height, theme, style, horizontal, polar, name]);\n  var userProps = React.useMemo(function () {\n    return UserProps.getSafeUserProps(initialProps);\n  }, [initialProps]);\n  var container = React.useMemo(function () {\n    if (standalone) {\n      var defaultContainerProps = _defaults({}, containerComponent.props, containerProps, userProps);\n\n      return /*#__PURE__*/React.cloneElement(containerComponent, defaultContainerProps);\n    }\n\n    return /*#__PURE__*/React.cloneElement(groupComponent, userProps);\n  }, [groupComponent, standalone, containerComponent, containerProps, userProps]);\n  var events = React.useMemo(function () {\n    return Wrapper.getAllEvents(props);\n  }, [props]);\n  var previousProps = Hooks.usePreviousProps(initialProps);\n  React.useEffect(function () {\n    // This is called before dismount to keep state in sync\n    return function () {\n      if (initialProps.animate) {\n        setAnimationState(previousProps, initialProps);\n      }\n    };\n  }, [setAnimationState, previousProps, initialProps]);\n\n  if (!_isEmpty(events)) {\n    return /*#__PURE__*/React.createElement(VictorySharedEvents, {\n      container: container,\n      eventKey: eventKey,\n      events: events,\n      externalEventMutations: externalEventMutations\n    }, newChildren);\n  }\n\n  return /*#__PURE__*/React.cloneElement(container, container.props, newChildren);\n};\n\nVictoryStackBase.propTypes = _objectSpread(_objectSpread({}, CommonProps.baseProps), {}, {\n  bins: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([CustomPropTypes.nonNegative, PropTypes.instanceOf(Date)])), CustomPropTypes.nonNegative]),\n  categories: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.shape({\n    x: PropTypes.arrayOf(PropTypes.string),\n    y: PropTypes.arrayOf(PropTypes.string)\n  })]),\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  colorScale: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.oneOf([\"grayscale\", \"qualitative\", \"heatmap\", \"warm\", \"cool\", \"red\", \"green\", \"blue\"])]),\n  fillInMissingData: PropTypes.bool,\n  horizontal: PropTypes.bool,\n  labelComponent: PropTypes.element,\n  labels: PropTypes.oneOfType([PropTypes.func, PropTypes.array]),\n  style: PropTypes.shape({\n    parent: PropTypes.object,\n    data: PropTypes.object,\n    labels: PropTypes.object\n  }),\n  xOffset: PropTypes.number\n});\nVictoryStackBase.defaultProps = {\n  containerComponent: /*#__PURE__*/React.createElement(VictoryContainer, null),\n  groupComponent: /*#__PURE__*/React.createElement(\"g\", null),\n  standalone: true,\n  theme: VictoryTheme.grayscale,\n  fillInMissingData: true\n};\nvar componentConfig = {\n  role: \"stack\",\n  expectedComponents: [\"groupComponent\", \"containerComponent\", \"labelComponent\"],\n  getChildren: getChildren\n};\nexport var VictoryStack = Object.assign( /*#__PURE__*/React.memo(VictoryStackBase, isEqual), componentConfig);\nVictoryStack.displayName = \"VictoryStack\";","import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { VictoryStack } from 'victory-stack';\nimport { ChartContainer } from '../ChartContainer';\nimport { getClassName, useDefaultPatternProps, getTheme, renderChildrenWithPatterns } from '../ChartUtils';\nexport const ChartStack = (_a) => {\n    var { ariaDesc, ariaTitle, children, colorScale, containerComponent = React.createElement(ChartContainer, null), hasPatterns, patternScale, themeColor, \n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    themeVariant, \n    // destructure last\n    theme = getTheme(themeColor) } = _a, rest = __rest(_a, [\"ariaDesc\", \"ariaTitle\", \"children\", \"colorScale\", \"containerComponent\", \"hasPatterns\", \"patternScale\", \"themeColor\", \"themeVariant\", \"theme\"]);\n    // Clone so users can override container props\n    const container = React.cloneElement(containerComponent, Object.assign(Object.assign({ desc: ariaDesc, title: ariaTitle, theme }, containerComponent.props), { className: getClassName({ className: containerComponent.props.className }) // Override VictoryContainer class name\n     }));\n    const { defaultPatternScale } = useDefaultPatternProps({\n        colorScale,\n        hasPatterns,\n        patternScale,\n        themeColorScale: theme.stack.colorScale\n    });\n    // Note: containerComponent is required for theme\n    return (React.createElement(VictoryStack, Object.assign({ colorScale: colorScale, containerComponent: container, theme: theme }, rest), renderChildrenWithPatterns({\n        children,\n        patternScale: defaultPatternScale\n    })));\n};\nChartStack.displayName = 'ChartStack';\n// Note: VictoryStack.getChildren & VictoryStack.role must be hoisted\nhoistNonReactStatics(ChartStack, VictoryStack);\n//# sourceMappingURL=ChartStack.js.map","import { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_cyan_300 } from '@patternfly/react-tokens/dist/js/chart_color_cyan_300';\nimport { chart_color_gold_300 } from '@patternfly/react-tokens/dist/js/chart_color_gold_300';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_orange_300 } from '@patternfly/react-tokens/dist/js/chart_color_orange_300';\nimport { chart_color_purple_300 } from '@patternfly/react-tokens/dist/js/chart_color_purple_300';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    colorScale: [\n        chart_color_blue_300.value,\n        chart_color_gold_300.value,\n        chart_color_green_300.value,\n        chart_color_purple_300.value,\n        chart_color_orange_300.value,\n        chart_color_cyan_300.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n    yAxisAlt: {\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'routes/components/charts/common/chart.scss';\nimport { Chart, ChartAxis, ChartBar, ChartLegend, ChartLegendTooltip, ChartStack, ChartThemeColor, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { default as ChartTheme } from 'routes/components/charts/chartTheme';\nimport { getMaxValue } from 'routes/components/charts/common/chartDatum';\nimport { getChartNames, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isDataHidden, isSeriesHidden, } from 'routes/components/charts/common/chartUtils';\nimport { noop } from 'routes/utils/noop';\nimport { formatCurrencyAbbreviation } from 'utils/format';\nimport { chartStyles } from './costExplorerChart.styles';\nclass CostExplorerChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            tickValues: [],\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { top1stData, top2ndData, top3rdData, top4thData, top5thData, top6thData } = this.props;\n            const series = [];\n            if (top1stData && top1stData.length) {\n                const name = this.getTruncatedString(top1stData[0].name);\n                series.push({\n                    childName: 'top1stData',\n                    data: this.initDatumChildName(top1stData, 'top1stData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[0],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[0],\n                        },\n                    },\n                });\n            }\n            if (top2ndData && top2ndData.length) {\n                const name = this.getTruncatedString(top2ndData[0].name);\n                series.push({\n                    childName: 'top2ndData',\n                    data: this.initDatumChildName(top2ndData, 'top2ndData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[1],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[1],\n                        },\n                    },\n                });\n            }\n            if (top3rdData && top3rdData.length) {\n                const name = this.getTruncatedString(top3rdData[0].name);\n                series.push({\n                    childName: 'top3rdData',\n                    data: this.initDatumChildName(top3rdData, 'top3rdData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[2],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[2],\n                        },\n                    },\n                });\n            }\n            if (top4thData && top4thData.length) {\n                const name = this.getTruncatedString(top4thData[0].name);\n                series.push({\n                    childName: 'top4thData',\n                    data: this.initDatumChildName(top4thData, 'top4thData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[3],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[3],\n                        },\n                    },\n                });\n            }\n            if (top5thData && top5thData.length) {\n                const name = this.getTruncatedString(top5thData[0].name);\n                series.push({\n                    childName: 'top5thData',\n                    data: this.initDatumChildName(top5thData, 'top5thData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[4],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[4],\n                        },\n                    },\n                });\n            }\n            if (top6thData && top6thData.length) {\n                const name = this.getTruncatedString(top6thData[0].name);\n                series.push({\n                    childName: 'top6thData',\n                    data: this.initDatumChildName(top6thData, 'top6thData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[5],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[5],\n                        },\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            const units = this.getUnits(series);\n            this.setState({ cursorVoronoiContainer, series, tickValues: this.getTickValues(), units });\n        };\n        // Adds a child name to help identify hidden data series\n        this.initDatumChildName = (data, childName) => {\n            data.map(datum => (datum.childName = childName));\n            return data;\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (width > 675 && width < 1250) {\n                    adjustedContainerHeight += 25;\n                }\n                else if (width > 400 && width < 650) {\n                    adjustedContainerHeight += 50;\n                }\n                else if (width <= 400) {\n                    adjustedContainerHeight += 150;\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        // If bar width exceeds max and domainPadding is true, extra width is returned to help center bars horizontally\n        this.getBarWidth = (domainPadding = false) => {\n            const { hiddenSeries, series, width } = this.state;\n            const maxWidth = 20;\n            let maxValue = -1;\n            if (series) {\n                series.forEach((s, index) => {\n                    if (!isSeriesHidden(hiddenSeries, index) && s.data && s.data.length !== 0) {\n                        if (s.data.length > maxValue) {\n                            maxValue = s.data.length;\n                        }\n                    }\n                });\n            }\n            // Divide available width into equal sections\n            const sections = maxValue * 2 + 1;\n            const sectionWidth = maxValue > 0 ? width / sections : 0;\n            if (domainPadding) {\n                // Add any extra bar width for domain padding\n                const extraWidth = sectionWidth > maxWidth ? (sectionWidth - maxWidth) * maxValue : 0;\n                return (sectionWidth + extraWidth / 2) * 2;\n            }\n            return sectionWidth > maxWidth ? maxWidth : sectionWidth;\n        };\n        this.getChart = (series, index, barWidth) => {\n            const { hiddenSeries } = this.state;\n            const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n            return (React.createElement(ChartBar, { barWidth: barWidth, data: data, key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatter, formatOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatter, formatOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        // Returns domain only if max y values are zero\n        this.getDomain = (series, hiddenSeries) => {\n            let maxValue = -1;\n            let domain;\n            if (series) {\n                series.forEach((s, index) => {\n                    if (!isSeriesHidden(hiddenSeries, index) && s.data && s.data.length !== 0) {\n                        const max = getMaxValue(s.data);\n                        maxValue = Math.max(maxValue, max);\n                    }\n                });\n            }\n            if (maxValue <= 0) {\n                domain = { y: [0, 100] };\n            }\n            return domain;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const { name = '' } = this.props;\n            const { hiddenSeries, series } = this.state;\n            const result = getInteractiveLegendEvents({\n                chartNames: getChartNames(series),\n                isDataHidden: data => isDataHidden(series, hiddenSeries, data),\n                isHidden: index => isSeriesHidden(hiddenSeries, index),\n                legendName: `${name}-legend`,\n                onLegendClick: props => this.handleLegendClick(props.index),\n            });\n            return result;\n        };\n        this.getLegend = () => {\n            const { name = '' } = this.props;\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, name: `${name}-legend`, responsive: false }));\n        };\n        // This ensures we show every 3rd tick value, including the first and last value\n        //\n        // Note: We're not using Victory's tickCount because it won't always include the last tick value.\n        this.getTickValues = () => {\n            const { top1stData, top2ndData, top3rdData, top4thData, top5thData, top6thData } = this.props;\n            // Find the datum with the greatest number of values\n            const allDatums = [top1stData, top2ndData, top3rdData, top4thData, top5thData, top6thData];\n            let datum;\n            allDatums.map(val => {\n                if (!datum || datum.length < val.length) {\n                    datum = val;\n                }\n            });\n            const values = [];\n            datum.map(val => {\n                values.push(val.x);\n            });\n            // Prune tick values\n            const tickValues = [];\n            const modVal = values.length < 6 ? 2 : 3;\n            for (let i = 0; i < values.length; i++) {\n                if (i % modVal === 0 && i + 2 < values.length) {\n                    tickValues.push(values[i]);\n                }\n                else if (values.length < 3 && i + 1 < values.length) {\n                    tickValues.push(values[i]);\n                }\n            }\n            tickValues.push(values[values.length - 1]);\n            return tickValues;\n        };\n        this.getTruncatedString = (str) => {\n            const maxChars = 20;\n            return str.length > maxChars ? str.substring(0, maxChars - 1) + '...' : str;\n        };\n        this.getTickValue = (t) => {\n            const { units } = this.state;\n            return formatCurrencyAbbreviation(t, units);\n        };\n        this.getUnits = (series) => {\n            if (series) {\n                for (const s of series) {\n                    for (const datum of s.data) {\n                        if (datum.units) {\n                            return datum.units;\n                        }\n                    }\n                }\n            }\n            return 'USD';\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.top1stData !== this.props.top1stData ||\n            prevProps.top2ndData !== this.props.top2ndData ||\n            prevProps.top3rdData !== this.props.top3rdData ||\n            prevProps.top4thData !== this.props.top4thData ||\n            prevProps.top5thData !== this.props.top5thData ||\n            prevProps.top6thData !== this.props.top6thData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    render() {\n        const { height, intl, name, padding = {\n            bottom: 50,\n            left: 40,\n            right: 8,\n            top: 8,\n        }, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, tickValues, width } = this.state;\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => intl.formatMessage(messages.chartDayOfTheMonth, { day: datum.x }) })),\n            })\n            : undefined;\n        const barWidth = this.getBarWidth();\n        // Note: For tooltip values to match properly, chart groups must be rendered in the order given as legend data\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n            React.createElement(\"div\", { style: { height, width } },\n                React.createElement(Chart, { ariaTitle: intl.formatMessage(messages.explorerChartAriaTitle), containerComponent: container, domain: this.getDomain(series, hiddenSeries), domainPadding: { x: this.getBarWidth(true) }, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", name: name, padding: padding, theme: ChartTheme, themeColor: ChartThemeColor.multiOrdered, width: width },\n                    series && series.length > 0 && (React.createElement(ChartStack, null, series.map((s, index) => this.getChart(s, index, barWidth)))),\n                    React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: tickValues, fixLabelOverlap: true }),\n                    React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis, tickFormat: this.getTickValue })))));\n    }\n}\nconst CostExplorerChart = injectIntl(CostExplorerChartBase);\nexport default CostExplorerChart;\n","import global_spacer_2xl from '@patternfly/react-tokens/dist/js/global_spacer_2xl';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    chartHeight: 300,\n    chartContainerHeight: 300,\n};\nexport const styles = {\n    chartContainer: {\n        marginLeft: global_spacer_2xl.value,\n    },\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n    costChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    titleContainer: {\n        marginLeft: global_spacer_lg.value,\n    },\n    trendChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    usageChart: {\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import { OrgPathsType } from 'api/orgs/org';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport { hasCloudProvider } from 'routes/utils/providers';\nimport { hasAwsAccess, hasAzureAccess, hasGcpAccess, hasIbmAccess, isAwsAvailable, isAzureAvailable, isGcpAvailable, isIbmAvailable, isOciAvailable, isOcpAvailable, isRhelAvailable, } from 'utils/userAccess';\n// eslint-disable-next-line no-shadow\nexport var PerspectiveType;\n(function (PerspectiveType) {\n    PerspectiveType[\"aws\"] = \"aws\";\n    PerspectiveType[\"awsOcp\"] = \"aws_ocp\";\n    PerspectiveType[\"azure\"] = \"azure\";\n    PerspectiveType[\"azureOcp\"] = \"azure_ocp\";\n    PerspectiveType[\"gcp\"] = \"gcp\";\n    PerspectiveType[\"gcpOcp\"] = \"gcp_ocp\";\n    PerspectiveType[\"ibm\"] = \"ibm\";\n    PerspectiveType[\"ibmOcp\"] = \"ibm_ocp\";\n    PerspectiveType[\"oci\"] = \"oci\";\n    PerspectiveType[\"ocp\"] = \"ocp\";\n    PerspectiveType[\"ocpCloud\"] = \"ocp_cloud\";\n    PerspectiveType[\"rhel\"] = \"rhel\";\n})(PerspectiveType || (PerspectiveType = {}));\nexport const baseQuery = {\n    filter: {\n        limit: 10,\n        offset: 0,\n    },\n    exclude: {},\n    filter_by: {},\n    order_by: {\n        cost: 'desc',\n    },\n};\nexport const dateRangeOptions = [\n    { label: messages.explorerDateRange, value: 'current_month_to_date' },\n    { label: messages.explorerDateRange, value: 'previous_month' },\n    { label: messages.explorerDateRange, value: 'previous_month_to_date' },\n    { label: messages.explorerDateRange, value: 'last_thirty_days' },\n    { label: messages.explorerDateRange, value: 'last_sixty_days' },\n    { label: messages.explorerDateRange, value: 'last_ninety_days' },\n    { label: messages.explorerDateRange, value: 'custom' },\n];\nexport const groupByAwsOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByAzureOptions = [\n    { label: 'subscription_guid', value: 'subscription_guid' },\n    { label: 'service_name', value: 'service_name' },\n    { label: 'resource_location', value: 'resource_location' },\n];\nexport const groupByGcpOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'gcp_project', value: 'gcp_project' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByGcpOcpOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'gcp_project', value: 'gcp_project' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByIbmOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'project', value: 'project' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByOciOptions = [\n    { label: 'payer_tenant_id', value: 'payer_tenant_id' },\n    { label: 'product_service', value: 'product_service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByOcpOptions = [\n    { label: 'cluster', value: 'cluster' },\n    { label: 'node', value: 'node' },\n    { label: 'project', value: 'project' },\n];\nexport const groupByRhelOptions = [\n    { label: 'cluster', value: 'cluster' },\n    { label: 'node', value: 'node' },\n    { label: 'project', value: 'project' },\n];\nexport const getPerspectiveDefault = ({ awsProviders, azureProviders, ociProviders, gcpProviders, ibmProviders, ocpProviders, queryFromRoute, rhelProviders, userAccess, }) => {\n    const perspective = queryFromRoute.perspective;\n    // Upon page refresh, perspective param takes precedence\n    switch (perspective) {\n        case PerspectiveType.aws:\n        case PerspectiveType.awsOcp:\n        case PerspectiveType.azure:\n        case PerspectiveType.azureOcp:\n        case PerspectiveType.gcp:\n        case PerspectiveType.gcpOcp:\n        case PerspectiveType.ibm:\n        case PerspectiveType.ibmOcp:\n        case PerspectiveType.oci:\n        case PerspectiveType.ocpCloud:\n        case PerspectiveType.rhel:\n            return perspective;\n    }\n    if (isOcpAvailable(userAccess, ocpProviders)) {\n        return PerspectiveType.ocp;\n    }\n    if (isRhelAvailable(userAccess, rhelProviders)) {\n        return PerspectiveType.rhel;\n    }\n    const hasAwsCloud = hasAwsAccess(userAccess) && hasCloudProvider(awsProviders, ocpProviders);\n    const hasAzureCloud = hasAzureAccess(userAccess) && hasCloudProvider(azureProviders, ocpProviders);\n    const hasGcpCloud = hasGcpAccess(userAccess) && hasCloudProvider(gcpProviders, ocpProviders);\n    const hasIbmCloud = hasIbmAccess(userAccess) && hasCloudProvider(ibmProviders, ocpProviders);\n    if (hasAwsCloud || hasAzureCloud || hasGcpCloud || hasIbmCloud) {\n        return PerspectiveType.ocpCloud;\n    }\n    if (isAwsAvailable(userAccess, awsProviders)) {\n        return PerspectiveType.aws;\n    }\n    if (isAzureAvailable(userAccess, azureProviders)) {\n        return PerspectiveType.azure;\n    }\n    if (isGcpAvailable(userAccess, gcpProviders)) {\n        return PerspectiveType.gcp;\n    }\n    if (isIbmAvailable(userAccess, ibmProviders)) {\n        return PerspectiveType.ibm;\n    }\n    if (isOciAvailable(userAccess, ociProviders)) {\n        return PerspectiveType.oci;\n    }\n    return undefined;\n};\nexport const getGroupByDefault = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n        case PerspectiveType.awsOcp:\n        case PerspectiveType.gcp:\n        case PerspectiveType.gcpOcp:\n        case PerspectiveType.ibm:\n            result = 'account';\n            break;\n        case PerspectiveType.azure:\n        case PerspectiveType.azureOcp:\n            result = 'subscription_guid';\n            break;\n        case PerspectiveType.oci:\n            result = 'payer_tenant_id';\n            break;\n        case PerspectiveType.ocp:\n        case PerspectiveType.ocpCloud:\n        case PerspectiveType.rhel:\n            result = 'project';\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getGroupByOptions = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n        case PerspectiveType.awsOcp:\n            result = groupByAwsOptions;\n            break;\n        case PerspectiveType.azure:\n        case PerspectiveType.azureOcp:\n            result = groupByAzureOptions;\n            break;\n        case PerspectiveType.gcp:\n            result = groupByGcpOptions;\n            break;\n        case PerspectiveType.gcpOcp:\n            result = groupByGcpOcpOptions;\n            break;\n        case PerspectiveType.ibm:\n            result = groupByIbmOptions;\n            break;\n        case PerspectiveType.oci:\n            result = groupByOciOptions;\n            break;\n        case PerspectiveType.ocp:\n        case PerspectiveType.ocpCloud:\n            result = groupByOcpOptions;\n            break;\n        case PerspectiveType.rhel:\n            result = groupByRhelOptions;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getOrgReportPathsType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n            result = OrgPathsType.aws;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getReportType = (perspective) => {\n    let result;\n    switch (perspective) {\n        default:\n            result = ReportType.cost;\n            break;\n    }\n    return result;\n};\nexport const getReportPathsType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n            result = ReportPathsType.aws;\n            break;\n        case PerspectiveType.awsOcp:\n            result = ReportPathsType.awsOcp;\n            break;\n        case PerspectiveType.azure:\n            result = ReportPathsType.azure;\n            break;\n        case PerspectiveType.azureOcp:\n            result = ReportPathsType.azureOcp;\n            break;\n        case PerspectiveType.gcp:\n            result = ReportPathsType.gcp;\n            break;\n        case PerspectiveType.gcpOcp:\n            result = ReportPathsType.gcpOcp;\n            break;\n        case PerspectiveType.ibm:\n            result = ReportPathsType.ibm;\n            break;\n        case PerspectiveType.oci:\n            result = ReportPathsType.oci;\n            break;\n        case PerspectiveType.ocp:\n            result = ReportPathsType.ocp;\n            break;\n        case PerspectiveType.ocpCloud:\n            result = ReportPathsType.ocpCloud;\n            break;\n        case PerspectiveType.rhel:\n            result = ReportPathsType.rhel;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getResourcePathsType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n            return ResourcePathsType.aws;\n        case PerspectiveType.awsOcp:\n            return ResourcePathsType.awsOcp;\n        case PerspectiveType.azure:\n            return ResourcePathsType.azure;\n        case PerspectiveType.azureOcp:\n            return ResourcePathsType.azureOcp;\n        case PerspectiveType.gcp:\n            return ResourcePathsType.gcp;\n        case PerspectiveType.gcpOcp:\n            return ResourcePathsType.gcpOcp;\n        case PerspectiveType.ibm:\n            return ResourcePathsType.ibm;\n        case PerspectiveType.oci:\n            return ResourcePathsType.oci;\n        case PerspectiveType.ocp:\n            return ResourcePathsType.ocp;\n        case PerspectiveType.ocpCloud:\n            return ResourcePathsType.ocpCloud;\n        case PerspectiveType.rhel:\n            return ResourcePathsType.rhel;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getTagReportPathsType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case PerspectiveType.aws:\n            return TagPathsType.aws;\n        case PerspectiveType.awsOcp:\n            return TagPathsType.awsOcp;\n        case PerspectiveType.azure:\n            return TagPathsType.azure;\n        case PerspectiveType.azureOcp:\n            return TagPathsType.azureOcp;\n        case PerspectiveType.gcp:\n            return TagPathsType.gcp;\n        case PerspectiveType.gcpOcp:\n            return TagPathsType.gcpOcp;\n        case PerspectiveType.ibm:\n            return TagPathsType.ibm;\n        case PerspectiveType.oci:\n            return TagPathsType.oci;\n        case PerspectiveType.ocp:\n            return TagPathsType.ocp;\n        case PerspectiveType.ocpCloud:\n            return TagPathsType.ocpCloud;\n        case PerspectiveType.rhel:\n            return TagPathsType.rhel;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\n","import { Skeleton, Title, TitleSizes } from '@patternfly/react-core';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { format } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ComputedReportItemType, ComputedReportItemValueType, isFloat, isInt, } from 'routes/components/charts/common/chartDatum';\nimport { CostExplorerChart } from 'routes/components/charts/costExplorerChart';\nimport { getIdKeyForGroupBy } from 'routes/utils/computedReport/getComputedExplorerReportItems';\nimport { getUnsortedComputedReportItems } from 'routes/utils/computedReport/getComputedReportItems';\nimport { getDateRangeFromQuery } from 'routes/utils/dateRange';\nimport { getGroupByCostCategory, getGroupById, getGroupByOrgValue, getGroupByTagKey } from 'routes/utils/groupBy';\nimport { skeletonWidth } from 'routes/utils/skeleton';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatUnits } from 'utils/format';\nimport { getCostDistribution } from 'utils/localStorage';\nimport { withRouter } from 'utils/router';\nimport { chartStyles, styles } from './explorerChart.styles';\nimport { PerspectiveType } from './explorerUtils';\nimport { getGroupByDefault, getReportPathsType, getReportType } from './explorerUtils';\nclass ExplorerChartBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.createReportDatum = (value, computedItem, reportItem = 'cost', reportItemValue = 'total') => {\n            const { intl } = this.props;\n            const computedItemDate = new Date(computedItem.date + 'T00:00:00');\n            const xVal = intl.formatDate(computedItemDate, {\n                day: 'numeric',\n                month: 'short',\n            });\n            const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n            return Object.assign(Object.assign({ x: xVal, y: value === null ? null : yVal }, (value === null && { _y: 0 })), { date: computedItem.date, key: computedItem.id, name: computedItem.label ? computedItem.label : computedItem.id, units: computedItem[reportItem]\n                    ? computedItem[reportItem][reportItemValue]\n                        ? computedItem[reportItem][reportItemValue].units // cost, infrastructure, supplementary\n                        : computedItem[reportItem].units // capacity, limit, request, usage\n                    : undefined });\n        };\n        this.updateReport = () => {\n            const { fetchReport, perspective, reportQueryString } = this.props;\n            if (perspective) {\n                const reportPathsType = getReportPathsType(perspective);\n                const reportType = getReportType(perspective);\n                fetchReport(reportPathsType, reportType, reportQueryString);\n            }\n        };\n        this.getChartDatums = (computedItems) => {\n            const { costDistribution } = this.props;\n            const reportItem = ComputedReportItemType.cost;\n            const reportItemValue = costDistribution ? costDistribution : ComputedReportItemValueType.total;\n            const chartDatums = [];\n            computedItems.map(computedItem => {\n                const datums = [];\n                if (computedItem instanceof Map) {\n                    const items = Array.from(computedItem.values());\n                    items.map((i) => {\n                        const val = i[reportItem][reportItemValue] ? i[reportItem][reportItemValue].value : i[reportItem].value;\n                        datums.push(this.createReportDatum(val, i, reportItem, reportItemValue));\n                    });\n                }\n                chartDatums.push(datums);\n            });\n            return this.padChartDatums(chartDatums);\n        };\n        this.getComputedItems = () => {\n            const { report } = this.props;\n            const computedReportItems = getUnsortedComputedReportItems({\n                report,\n                idKey: this.getGroupBy(),\n                isDateMap: true,\n            });\n            // Move \"Others\" to be the last legend label\n            for (let i = 0; i < computedReportItems.length; i++) {\n                let found = false;\n                for (const item of computedReportItems[i]) {\n                    if (item[item.length - 1].id === 'Others') {\n                        computedReportItems.push(computedReportItems.splice(i, 1)[0]);\n                        found = true;\n                        break;\n                    }\n                }\n                if (found) {\n                    break;\n                }\n            }\n            return computedReportItems;\n        };\n        this.getGroupBy = () => {\n            const { query } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByCostCategory = getGroupByCostCategory(query);\n            const groupByOrg = getGroupByOrgValue(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            return groupByCostCategory\n                ? groupByCostCategory\n                : groupByTagKey\n                    ? groupByTagKey\n                    : groupByOrg\n                        ? 'org_entities'\n                        : groupById;\n        };\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, width: skeletonWidth.xs })));\n        };\n        // This pads chart datums with null datum objects, representing missing data at the beginning and end of the\n        // data series. The remaining data is left as is to allow for extrapolation. This allows us to display a \"no data\"\n        // message in the tooltip, which helps distinguish between zero values and when there is no data available.\n        this.padChartDatums = (items) => {\n            const { end_date, start_date } = this.props;\n            const result = [];\n            items.map(datums => {\n                const key = datums[0].key;\n                const label = datums[0].name;\n                const newItems = [];\n                for (let padDate = new Date(start_date + 'T00:00:00'); padDate <= new Date(end_date + 'T00:00:00'); padDate.setDate(padDate.getDate() + 1)) {\n                    const id = format(padDate, 'yyyy-MM-dd');\n                    const chartDatum = datums.find(val => val.date === id);\n                    if (chartDatum) {\n                        newItems.push(chartDatum);\n                    }\n                    else {\n                        const date = format(padDate, 'yyyy-MM-dd');\n                        newItems.push(this.createReportDatum(null, { date, id: key, label }, 'cost', null));\n                    }\n                }\n                result.push(newItems);\n            });\n            return result;\n        };\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, reportError, reportQueryString } = this.props;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        if (newQuery || noReport) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { perspective, reportFetchStatus, intl } = this.props;\n        const datums = this.getChartDatums(this.getComputedItems());\n        // Todo: get title from perspective menu\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { style: styles.titleContainer },\n                React.createElement(Title, { headingLevel: \"h3\", size: TitleSizes.md }, intl.formatMessage(messages.explorerChartTitle, { value: perspective }))),\n            React.createElement(\"div\", { style: styles.chartContainer },\n                React.createElement(\"div\", { style: styles.costChart }, reportFetchStatus === FetchStatus.inProgress ? (this.getSkeleton()) : (React.createElement(CostExplorerChart, { adjustContainerHeight: true, containerHeight: chartStyles.chartContainerHeight, formatOptions: {}, formatter: formatUnits, height: chartStyles.chartHeight, top1stData: datums.length > 0 ? datums[0] : [], top2ndData: datums.length > 1 ? datums[1] : [], top3rdData: datums.length > 2 ? datums[2] : [], top4thData: datums.length > 3 ? datums[3] : [], top5thData: datums.length > 4 ? datums[4] : [], top6thData: datums.length > 5 ? datums[5] : [] }))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { costType, currency, perspective, router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const { end_date, start_date } = getDateRangeFromQuery(queryFromRoute);\n    const groupBy = queryFromRoute.group_by ? getGroupById(queryFromRoute) : getGroupByDefault(perspective);\n    const group_by = queryFromRoute.group_by ? queryFromRoute.group_by : { [groupBy]: '*' }; // Ensure group_by key is not undefined\n    const isCostDistributionFeatureEnabled = featureFlagsSelectors.selectIsCostDistributionFeatureEnabled(state);\n    const costDistribution = perspective === PerspectiveType.ocp && groupBy === 'project' && isCostDistributionFeatureEnabled\n        ? getCostDistribution()\n        : undefined;\n    const query = Object.assign(Object.assign({}, queryFromRoute), { group_by });\n    const reportQuery = Object.assign({ cost_type: costType, currency,\n        end_date, exclude: query.exclude, filter: { limit: 5 }, filter_by: query.filter_by, group_by,\n        start_date }, (costDistribution === ComputedReportItemValueType.distributed && {\n        order_by: { distributed_cost: 'desc' },\n    }));\n    const reportPathsType = getReportPathsType(perspective);\n    const reportType = getReportType(perspective);\n    const reportQueryString = getQuery(reportQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    return {\n        end_date,\n        perspective,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n        start_date,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst ExplorerChartConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerChartBase);\nconst ExplorerChart = injectIntl(withRouter(ExplorerChartConnect));\nexport { ExplorerChart };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    toContainer: {\n        marginLeft: global_spacer_md.var,\n        marginRight: global_spacer_md.var,\n    },\n};\n","import { DatePicker } from '@patternfly/react-core';\nimport { parseQuery } from 'api/queries/query';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { DateRangeType, getDateRangeFromQuery, getDateRangeTypeDefault } from 'routes/utils/dateRange';\nimport { formatDate, getLast90DaysDate, getToday } from 'utils/dates';\nimport { withRouter } from 'utils/router';\nimport { styles } from './explorerDatePicker.styles';\nconst MAX_DAYS = 65; // Max date range allowed for cost API\nclass ExplorerDatePickerBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n        // TBD\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.startDateRef = React.createRef();\n        this.endDateRef = React.createRef();\n        this.getStartDatePicker = () => {\n            const { intl } = this.props;\n            const { startDate } = this.state;\n            const { start_date, end_date } = getLast90DaysDate(false);\n            const rangeValidator = (date) => {\n                if (date < start_date) {\n                    return intl.formatMessage(messages.datePickerBeforeError);\n                }\n                else if (date > end_date) {\n                    return intl.formatMessage(messages.datePickerAfterError);\n                }\n                return '';\n            };\n            return (React.createElement(DatePicker, { \"aria-label\": intl.formatMessage(messages.datePickerStartDateAriaLabel), onChange: this.handleStartDateOnChange, placeholder: intl.formatMessage(messages.start), ref: this.startDateRef, validators: [rangeValidator], value: formatDate(startDate) }));\n        };\n        this.getEndDatePicker = () => {\n            const { intl } = this.props;\n            const { endDate, startDate } = this.state;\n            const end_date = this.getMaxEndDate();\n            const rangeValidator = (date) => {\n                if (date < startDate) {\n                    return intl.formatMessage(messages.datePickerBeforeError);\n                }\n                else if (date > end_date) {\n                    return intl.formatMessage(messages.datePickerAfterError);\n                }\n                return '';\n            };\n            return (React.createElement(DatePicker, { \"aria-label\": intl.formatMessage(messages.datePickerEndDateAriaLabel), isDisabled: !startDate, onChange: this.handleEndDateOnChange, placeholder: intl.formatMessage(messages.end), rangeStart: startDate, ref: this.endDateRef, validators: [rangeValidator], value: formatDate(endDate) }));\n        };\n        this.getMaxEndDate = () => {\n            const { startDate } = this.state;\n            const today = getToday();\n            const end_date = startDate ? new Date(startDate.getTime()) : today;\n            end_date.setDate(end_date.getDate() + MAX_DAYS - 1); // 65 days including start date\n            if (end_date > today) {\n                end_date.setTime(today.getTime());\n            }\n            return end_date;\n        };\n        this.isEndDateValid = (startDate, endDate) => {\n            const minDate = startDate;\n            const maxDate = startDate ? new Date(startDate.getTime()) : undefined;\n            if (maxDate) {\n                maxDate.setDate(maxDate.getDate() + MAX_DAYS - 1); // 65 days including start date\n            }\n            return endDate >= minDate && endDate <= maxDate;\n        };\n        this.isStartDateValid = startDate => {\n            const maxDate = getToday();\n            const { start_date: minDate } = getLast90DaysDate(false);\n            return startDate >= minDate && startDate <= maxDate;\n        };\n        this.handleEndDateOnChange = (evt, value, date) => {\n            const { onSelected } = this.props;\n            const { startDate } = this.state;\n            if (date && this.isEndDateValid(startDate, date)) {\n                this.setState({ endDate: date }, () => {\n                    if (onSelected) {\n                        onSelected(startDate, date);\n                    }\n                });\n            }\n        };\n        this.handleStartDateOnChange = (evt, value, date) => {\n            if (date && this.isStartDateValid(date)) {\n                this.setState({ startDate: date }, () => {\n                    if (this.endDateRef && this.endDateRef.current) {\n                        this.endDateRef.current.setCalendarOpen(true);\n                    }\n                });\n            }\n        };\n    }\n    componentDidMount() {\n        const { router } = this.props;\n        const queryFromRoute = parseQuery(router.location.search);\n        const dateRangeType = getDateRangeTypeDefault(queryFromRoute);\n        const { end_date, start_date } = getDateRangeFromQuery(queryFromRoute);\n        if (this.startDateRef && this.startDateRef.current) {\n            this.startDateRef.current.setCalendarOpen(dateRangeType !== DateRangeType.custom);\n        }\n        if (dateRangeType === DateRangeType.custom) {\n            this.setState({\n                startDate: new Date(start_date + 'T00:00:00'),\n                endDate: new Date(end_date + 'T00:00:00'),\n            });\n        }\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { endDate, startDate } = this.state;\n        if (prevState.startDate !== startDate) {\n            // Don't adjust unless an end date has already been selected\n            if (endDate && !this.isEndDateValid(startDate, endDate)) {\n                this.setState({ endDate: undefined });\n            }\n        }\n    }\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(React.Fragment, null,\n            this.getStartDatePicker(),\n            React.createElement(\"span\", { style: styles.toContainer }, intl.formatMessage(messages.to)),\n            this.getEndDatePicker()));\n    }\n}\nconst ExplorerDatePicker = injectIntl(withRouter(ExplorerDatePickerBase));\nexport { ExplorerDatePicker };\n","import { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nclass ExplorerDateRangeBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isSelectOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getSelect = () => {\n            const { dateRangeType, isDisabled } = this.props;\n            const { isSelectOpen } = this.state;\n            const selectOptions = this.getSelectOptions();\n            const selection = selectOptions.find((option) => option.value === dateRangeType);\n            return (React.createElement(Select, { id: \"dateRangeSelect\", isDisabled: isDisabled, isOpen: isSelectOpen, onSelect: this.handleSelect, onToggle: this.handleToggle, selections: selection, variant: SelectVariant.single }, selectOptions.map(option => (React.createElement(SelectOption, { key: option.value, value: option })))));\n        };\n        this.getSelectOptions = () => {\n            const { intl, options } = this.props;\n            const selectOptions = [];\n            options.map(option => {\n                selectOptions.push({\n                    toString: () => intl.formatMessage(option.label, { value: option.value }),\n                    value: option.value,\n                });\n            });\n            return selectOptions;\n        };\n        this.handleSelect = (event, selection) => {\n            const { onSelected } = this.props;\n            if (onSelected) {\n                onSelected(selection.value);\n            }\n            this.setState({\n                isSelectOpen: false,\n            });\n        };\n        this.handleToggle = isSelectOpen => {\n            this.setState({ isSelectOpen });\n        };\n    }\n    render() {\n        return this.getSelect();\n    }\n}\nconst ExplorerDateRange = injectIntl(ExplorerDateRangeBase);\nexport { ExplorerDateRange };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    toolbarContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingTop: global_spacer_sm.var,\n    },\n};\n","import './explorerFilter.scss';\nimport { OrgType } from 'api/orgs/org';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { ResourceType } from 'api/resources/resource';\nimport { TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/components/dataToolbar';\nimport { DateRangeType, getDateRangeFromQuery, getDateRangeTypeDefault } from 'routes/utils/dateRange';\nimport { isEqual } from 'routes/utils/equal';\nimport { getRouteForQuery } from 'routes/utils/query';\nimport { createMapStateToProps } from 'store/common';\nimport { orgActions, orgSelectors } from 'store/orgs';\nimport { resourceActions, resourceSelectors } from 'store/resources';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { formatStartEndDate } from 'utils/dates';\nimport { awsCategoryKey, orgUnitIdKey, tagKey } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { ExplorerDatePicker } from './explorerDatePicker';\nimport { ExplorerDateRange } from './explorerDateRange';\nimport { styles } from './explorerFilter.styles';\nimport { dateRangeOptions, getGroupByOptions, getOrgReportPathsType, getResourcePathsType, getTagReportPathsType, PerspectiveType, } from './explorerUtils';\nconst orgType = OrgType.org;\nconst resourceType = ResourceType.aws_category;\nconst tagType = TagType.tag;\nexport class ExplorerFilterBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            showDatePicker: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { orgReport, perspective, intl, resourceReport, tagReport } = this.props;\n            const options = [];\n            const groupByOptions = getGroupByOptions(perspective);\n            groupByOptions.map(option => {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: option.label }),\n                    key: option.value,\n                });\n            });\n            if (orgReport && orgReport.data && orgReport.data.length > 0) {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: 'org_unit_id' }),\n                    key: orgUnitIdKey,\n                });\n            }\n            if (resourceReport && resourceReport.data && resourceReport.data.length > 0) {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: awsCategoryKey }),\n                    key: awsCategoryKey,\n                });\n            }\n            if (tagReport && tagReport.data && tagReport.data.length > 0) {\n                options.push({ name: intl.formatMessage(messages.filterByValues, { value: tagKey }), key: tagKey });\n            }\n            return options.sort((a, b) => {\n                if (a.name < b.name) {\n                    return -1;\n                }\n                if (a.name > b.name) {\n                    return 1;\n                }\n                return 0;\n            });\n        };\n        this.getDateRangeComponent = () => {\n            const { isDisabled } = this.props;\n            const { currentDateRangeType } = this.state;\n            return (React.createElement(ExplorerDateRange, { dateRangeType: currentDateRangeType, isDisabled: isDisabled, onSelected: this.handleDateRangeSelected, options: dateRangeOptions }));\n        };\n        this.getDatePickerComponent = () => {\n            const { showDatePicker } = this.state;\n            return showDatePicker ? React.createElement(ExplorerDatePicker, { onSelected: this.handleDatePickerSelected }) : undefined;\n        };\n        this.handleDatePickerSelected = (startDate, endDate) => {\n            const { query, router } = this.props;\n            const { start_date, end_date } = formatStartEndDate(startDate, endDate);\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { dateRangeType: DateRangeType.custom, start_date,\n                end_date });\n            router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n        };\n        this.handleDateRangeSelected = (value) => {\n            const { query, router } = this.props;\n            const showDatePicker = value === DateRangeType.custom;\n            this.setState({ currentDateRangeType: value, showDatePicker }, () => {\n                if (!showDatePicker) {\n                    const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { dateRangeType: value, start_date: undefined, end_date: undefined });\n                    router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n                }\n            });\n        };\n        this.updateReport = () => {\n            const { fetchOrg, fetchResource, fetchTag, orgQueryString, orgPathsType, perspective, resourcePathsType, resourceQueryString, tagQueryString, tagPathsType, } = this.props;\n            if (orgPathsType) {\n                fetchOrg(orgPathsType, orgType, orgQueryString);\n            }\n            if (resourcePathsType && (perspective === PerspectiveType.aws || perspective === PerspectiveType.awsOcp)) {\n                fetchResource(resourcePathsType, resourceType, resourceQueryString);\n            }\n            if (tagPathsType) {\n                fetchTag(tagPathsType, tagType, tagQueryString);\n            }\n        };\n    }\n    componentDidMount() {\n        const { dateRangeType } = this.props;\n        this.updateReport();\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n            currentDateRangeType: dateRangeType,\n            showDatePicker: dateRangeType === DateRangeType.custom,\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { orgReport, perspective, query, tagReport } = this.props;\n        if (query && !isEqual(query, prevProps.query)) {\n            this.updateReport();\n        }\n        if (!isEqual(orgReport, prevProps.orgReport) || !isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            });\n        }\n        // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n        if (prevProps.perspective !== perspective) {\n            this.handleDateRangeSelected(dateRangeOptions[0].value);\n        }\n    }\n    render() {\n        const { groupBy, isDisabled, onFilterAdded, onFilterRemoved, orgReport, query, resourcePathsType, resourceReport, tagPathsType, tagReport, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, className: \"explorerToolbarOverride\", dateRange: this.getDateRangeComponent(), datePicker: this.getDatePickerComponent(), groupBy: groupBy, isDisabled: isDisabled, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, orgReport: orgReport, query: query, resourceReport: resourceReport, resourcePathsType: resourcePathsType, style: styles.toolbarContainer, showExcludes: true, showFilter: true, tagReport: tagReport, tagPathsType: tagPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { perspective, router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const dateRangeType = getDateRangeTypeDefault(queryFromRoute);\n    const { end_date, start_date } = getDateRangeFromQuery(queryFromRoute);\n    // Omitting key_only to share a single request -- the toolbar needs key values\n    const orgQueryString = getQuery({\n        end_date,\n        start_date,\n        limit: 1000,\n    });\n    let orgReport;\n    let orgReportFetchStatus;\n    const orgPathsType = getOrgReportPathsType(perspective);\n    if (orgPathsType) {\n        orgReport = orgSelectors.selectOrg(state, orgPathsType, orgType, orgQueryString);\n        orgReportFetchStatus = orgSelectors.selectOrgFetchStatus(state, orgPathsType, orgType, orgQueryString);\n    }\n    const resourceQueryString = getQuery({\n        key_only: true,\n    });\n    let resourceReport;\n    let resourceReportFetchStatus;\n    const resourcePathsType = getResourcePathsType(perspective);\n    if (resourcePathsType) {\n        resourceReport = resourceSelectors.selectResource(state, resourcePathsType, resourceType, resourceQueryString);\n        resourceReportFetchStatus = resourceSelectors.selectResourceFetchStatus(state, resourcePathsType, resourceType, resourceQueryString);\n    }\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        end_date,\n        start_date,\n        key_only: true,\n        limit: 1000,\n    });\n    let tagReport;\n    let tagReportFetchStatus;\n    const tagPathsType = getTagReportPathsType(perspective);\n    if (tagPathsType) {\n        tagReport = tagSelectors.selectTag(state, tagPathsType, tagType, tagQueryString);\n        tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagPathsType, tagType, tagQueryString);\n    }\n    return {\n        dateRangeType,\n        orgPathsType,\n        orgQueryString,\n        orgReport,\n        orgReportFetchStatus,\n        resourcePathsType,\n        resourceQueryString,\n        resourceReport,\n        resourceReportFetchStatus,\n        tagPathsType,\n        tagQueryString,\n        tagReport,\n        tagReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchOrg: orgActions.fetchOrg,\n    fetchResource: resourceActions.fetchResource,\n    fetchTag: tagActions.fetchTag,\n};\nconst ExplorerFilterConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerFilterBase);\nconst ExplorerFilter = injectIntl(withRouter(ExplorerFilterConnect));\nexport { ExplorerFilter };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_Color_200 from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    cost: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    costDistribution: {\n        display: 'flex',\n        marginLeft: global_spacer_lg.var,\n    },\n    costLabel: {},\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    costLabelDate: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_200.var,\n    },\n    costType: {\n        display: 'flex',\n        marginLeft: global_spacer_md.var,\n    },\n    groupBy: {\n        paddingLeft: global_spacer_lg.var,\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        paddingBottom: global_spacer_sm.var,\n        paddingLeft: global_spacer_lg.var,\n        paddingRight: global_spacer_lg.var,\n        paddingTop: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    perspectiveContainer: {\n        display: 'flex',\n        marginTop: global_spacer_md.var,\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { parseQuery } from 'api/queries/query';\nimport { getUserAccessQuery } from 'api/queries/userAccessQuery';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { UserAccessType } from 'api/userAccess';\nimport { ExportsLink } from 'components/drawers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { CostDistribution } from 'routes/components/costDistribution';\nimport { CostType } from 'routes/components/costType';\nimport { Currency } from 'routes/components/currency';\nimport { GroupBy } from 'routes/components/groupBy';\nimport { Perspective } from 'routes/components/perspective';\nimport { getIdKeyForGroupBy } from 'routes/utils/computedReport/getComputedExplorerReportItems';\nimport { filterProviders, hasCloudProvider } from 'routes/utils/providers';\nimport { getRouteForQuery } from 'routes/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { userAccessQuery, userAccessSelectors } from 'store/userAccess';\nimport { withRouter } from 'utils/router';\nimport { hasAwsAccess, hasAzureAccess, hasGcpAccess, hasIbmAccess, isAwsAvailable, isAzureAvailable, isGcpAvailable, isIbmAvailable, isOciAvailable, isOcpAvailable, isRhelAvailable, } from 'utils/userAccess';\nimport { ExplorerFilter } from './explorerFilter';\nimport { styles } from './explorerHeader.styles';\nimport { baseQuery, getGroupByDefault, getGroupByOptions, getOrgReportPathsType, getResourcePathsType, getTagReportPathsType, PerspectiveType, } from './explorerUtils';\nclass ExplorerHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n        // TBD...\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getPerspective = (isDisabled) => {\n            const { isIbmFeatureEnabled } = this.props;\n            const { currentPerspective } = this.state;\n            const hasAws = this.isAwsAvailable();\n            const hasAzure = this.isAzureAvailable();\n            const hasOci = this.isOciAvailable();\n            const hasGcp = this.isGcpAvailable();\n            const hasIbm = this.isIbmAvailable();\n            const hasOcp = this.isOcpAvailable();\n            const hasRhel = this.isRhelAvailable();\n            // Note: No need to test \"OCP on cloud\" here, since that requires at least one of the providers below\n            if (!(hasAws || hasAzure || hasOci || hasGcp || hasIbm || hasOcp || hasRhel)) {\n                return null;\n            }\n            return (React.createElement(Perspective, { currentItem: currentPerspective, hasAws: hasAws, hasAwsOcp: this.isAwsOcpAvailable(), hasAzure: hasAzure, hasAzureOcp: this.isAzureOcpAvailable(), hasGcp: hasGcp, hasGcpOcp: this.isGcpOcpAvailable(), hasIbm: hasIbm, hasIbmOcp: this.isIbmOcpAvailable(), hasOci: hasOci, hasOcp: hasOcp, hasOcpCloud: this.isOcpCloudAvailable(), hasRhel: hasRhel, isDisabled: isDisabled, isIbmFeatureEnabled: isIbmFeatureEnabled, onSelected: this.handlePerspectiveSelected }));\n        };\n        this.handlePerspectiveSelected = (value) => {\n            const { onPerspectiveClicked, query, router } = this.props;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { exclude: undefined, filter_by: undefined, group_by: { [getGroupByDefault(value)]: '*' }, order_by: undefined, perspective: value });\n            this.setState({ currentPerspective: value }, () => {\n                if (onPerspectiveClicked) {\n                    onPerspectiveClicked(value);\n                }\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.isAwsAvailable = () => {\n            const { awsProviders, userAccess } = this.props;\n            return isAwsAvailable(userAccess, awsProviders);\n        };\n        this.isAwsOcpAvailable = () => {\n            const { awsProviders, ocpProviders, userAccess } = this.props;\n            return hasAwsAccess(userAccess) && hasCloudProvider(awsProviders, ocpProviders);\n        };\n        this.isAzureAvailable = () => {\n            const { azureProviders, userAccess } = this.props;\n            return isAzureAvailable(userAccess, azureProviders);\n        };\n        this.isAzureOcpAvailable = () => {\n            const { azureProviders, ocpProviders, userAccess } = this.props;\n            return hasAzureAccess(userAccess) && hasCloudProvider(azureProviders, ocpProviders);\n        };\n        this.isGcpAvailable = () => {\n            const { gcpProviders, userAccess } = this.props;\n            return isGcpAvailable(userAccess, gcpProviders);\n        };\n        this.isGcpOcpAvailable = () => {\n            const { gcpProviders, ocpProviders, userAccess } = this.props;\n            return hasGcpAccess(userAccess) && hasCloudProvider(gcpProviders, ocpProviders);\n        };\n        this.isIbmAvailable = () => {\n            const { ibmProviders, userAccess } = this.props;\n            return isIbmAvailable(userAccess, ibmProviders);\n        };\n        this.isIbmOcpAvailable = () => {\n            const { ibmProviders, ocpProviders, userAccess } = this.props;\n            return hasIbmAccess(userAccess) && hasCloudProvider(ibmProviders, ocpProviders);\n        };\n        this.isOciAvailable = () => {\n            const { ociProviders, userAccess } = this.props;\n            return isOciAvailable(userAccess, ociProviders);\n        };\n        this.isOcpAvailable = () => {\n            const { ocpProviders, userAccess } = this.props;\n            return isOcpAvailable(userAccess, ocpProviders);\n        };\n        this.isOcpCloudAvailable = () => {\n            const hasAwsOcp = this.isAwsOcpAvailable();\n            const hasAzureOcp = this.isAzureOcpAvailable();\n            const hasGcpOcp = this.isGcpOcpAvailable();\n            const hasIbmOcp = this.isIbmOcpAvailable();\n            return hasAwsOcp || hasAzureOcp || hasGcpOcp || hasIbmOcp;\n        };\n        this.isRhelAvailable = () => {\n            const { isFinsightsFeatureEnabled, rhelProviders, userAccess } = this.props;\n            return isFinsightsFeatureEnabled && isRhelAvailable(userAccess, rhelProviders);\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            currentPerspective: this.props.perspective,\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { perspective } = this.props;\n        if (prevProps.perspective !== perspective) {\n            this.setState({\n                currentPerspective: this.props.perspective,\n            });\n        }\n    }\n    render() {\n        const { costDistribution, costType, currency, groupBy, intl, isCostDistributionFeatureEnabled, isExportsFeatureEnabled, onCostDistributionSelected, onCostTypeSelected, onCurrencySelected, onFilterAdded, onFilterRemoved, onGroupBySelected, perspective, providersFetchStatus, query, report, } = this.props;\n        // Note: No need to test OCP on cloud here, since that requires at least one provider\n        const noAwsProviders = !this.isAwsAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noAzureProviders = !this.isAzureAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noGcpProviders = !this.isGcpAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noIbmProviders = !this.isIbmAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noOcpProviders = !this.isOcpAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noRhelProviders = !this.isRhelAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noProviders = noAwsProviders && noAzureProviders && noGcpProviders && noIbmProviders && noOcpProviders && noRhelProviders;\n        const groupByOptions = getGroupByOptions(perspective);\n        const orgPathsType = getOrgReportPathsType(perspective);\n        const resourcePathsType = getResourcePathsType(perspective);\n        const tagPathsType = getTagReportPathsType(perspective);\n        const showCostDistribution = isCostDistributionFeatureEnabled &&\n            costDistribution &&\n            report &&\n            report.meta &&\n            report.meta.distributed_overhead === true;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.explorerTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.perspectiveContainer },\n                this.getPerspective(noProviders),\n                React.createElement(\"div\", { style: styles.groupBy },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: noProviders, onSelected: onGroupBySelected, options: groupByOptions, orgPathsType: orgPathsType, perspective: perspective, resourcePathsType: resourcePathsType, showCostCategories: resourcePathsType === ResourcePathsType.aws || resourcePathsType === ResourcePathsType.awsOcp, showOrgs: orgPathsType, showTags: tagPathsType, tagPathsType: tagPathsType })),\n                showCostDistribution && (React.createElement(\"div\", { style: styles.costDistribution },\n                    React.createElement(CostDistribution, { costDistribution: costDistribution, onSelect: onCostDistributionSelected }))),\n                (perspective === PerspectiveType.aws || perspective === PerspectiveType.awsOcp) && (React.createElement(\"div\", { style: styles.costType },\n                    React.createElement(CostType, { costType: costType, onSelect: onCostTypeSelected })))),\n            React.createElement(ExplorerFilter, { groupBy: groupBy, isDisabled: noProviders, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, perspective: perspective, query: query })));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { perspective, router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    const userAccessQueryString = getUserAccessQuery(userAccessQuery);\n    const userAccess = userAccessSelectors.selectUserAccess(state, UserAccessType.all, userAccessQueryString);\n    const userAccessError = userAccessSelectors.selectUserAccessError(state, UserAccessType.all, userAccessQueryString);\n    const userAccessFetchStatus = userAccessSelectors.selectUserAccessFetchStatus(state, UserAccessType.all, userAccessQueryString);\n    // Ensure group_by key is not undefined\n    let group_by = queryFromRoute.group_by;\n    if (!group_by && perspective) {\n        group_by = { [getGroupByDefault(perspective)]: '*' };\n    }\n    const query = Object.assign(Object.assign(Object.assign({}, baseQuery), queryFromRoute), { group_by });\n    return {\n        awsProviders: filterProviders(providers, ProviderType.aws),\n        azureProviders: filterProviders(providers, ProviderType.azure),\n        gcpProviders: filterProviders(providers, ProviderType.gcp),\n        ibmProviders: filterProviders(providers, ProviderType.ibm),\n        isCostDistributionFeatureEnabled: featureFlagsSelectors.selectIsCostDistributionFeatureEnabled(state),\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        isFinsightsFeatureEnabled: featureFlagsSelectors.selectIsFinsightsFeatureEnabled(state),\n        isIbmFeatureEnabled: featureFlagsSelectors.selectIsIbmFeatureEnabled(state),\n        ociProviders: filterProviders(providers, ProviderType.oci),\n        ocpProviders: filterProviders(providers, ProviderType.ocp),\n        providers,\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n        query,\n        rhelProviders: filterProviders(providers, ProviderType.rhel),\n        userAccess,\n        userAccessError,\n        userAccessFetchStatus,\n        userAccessQueryString,\n    };\n});\nconst ExplorerHeader = injectIntl(withRouter(connect(mapStateToProps, {})(ExplorerHeaderBase)));\nexport { ExplorerHeader };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    defaultLabel: {\n        minWidth: '50px',\n    },\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport './explorerTable.scss';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Label, Spinner, Tooltip } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { InnerScrollContainer, SortByDirection, TableComposable, TableVariant, Tbody, Td, Th, Thead, Tr, } from '@patternfly/react-table';\nimport { parseQuery } from 'api/queries/query';\nimport { format } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ComputedReportItemType, ComputedReportItemValueType } from 'routes/components/charts/common/chartDatum';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { getUnsortedComputedReportItems } from 'routes/utils/computedReport/getComputedReportItems';\nimport { getDateRangeFromQuery } from 'routes/utils/dateRange';\nimport { createMapStateToProps } from 'store/common';\nimport { formatCurrency } from 'utils/format';\nimport { classificationDefault, classificationUnallocated, noPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { styles } from './explorerTable.styles';\nimport { PerspectiveType } from './explorerUtils';\nclass ExplorerTableBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.selectColRef = React.createRef();\n        this.nameColRef = React.createRef();\n        this.labelColRef = React.createRef();\n        this.state = {\n            columns: [],\n            rows: [],\n            showLabels: false,\n        };\n        this.initDatum = () => {\n            const { costDistribution, end_date, groupBy, groupByCostCategory, groupByOrg, groupByTagKey, isAllSelected, perspective, report, selectedItems, start_date, intl, } = this.props;\n            if (!report) {\n                return;\n            }\n            const isGroupByProject = groupBy === 'project';\n            const showPlatformCosts = perspective === PerspectiveType.ocp && isGroupByProject;\n            const showCostDistribution = costDistribution === ComputedReportItemValueType.distributed &&\n                report &&\n                report.meta &&\n                report.meta.distributed_overhead === true;\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                isDateMap: true,\n                idKey: groupByCostCategory\n                    ? groupByCostCategory\n                    : groupByTagKey\n                        ? groupByTagKey\n                        : groupByOrg\n                            ? 'org_entities'\n                            : groupBy,\n            });\n            let orderBy = groupBy;\n            if (perspective === PerspectiveType.aws || perspective === PerspectiveType.awsOcp) {\n                orderBy = groupBy === 'account' ? 'account_alias' : groupBy;\n            }\n            else if (perspective === PerspectiveType.azure || perspective === PerspectiveType.azureOcp) {\n                orderBy = groupBy === 'subscription_guid' ? 'subscription_name' : groupBy;\n            }\n            // Add first two column headings (i.e., select and name)\n            const columns = groupByCostCategory || groupByTagKey || groupByOrg\n                ? [\n                    {\n                        name: '',\n                    },\n                    {\n                        name: groupByCostCategory\n                            ? intl.formatMessage(messages.costCategoryNames)\n                            : groupByOrg\n                                ? intl.formatMessage(messages.names, { count: 2 })\n                                : intl.formatMessage(messages.tagNames),\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign({ date: undefined, name: intl.formatMessage(messages.groupByValueNames, { groupBy }), orderBy }, (computedItems.length && { isSortable: true })),\n                    {\n                        hidden: !isGroupByProject,\n                        isLabelColumn: true,\n                        name: '',\n                    },\n                ];\n            // Fill in missing columns\n            for (let currentDate = new Date(start_date + 'T00:00:00'); currentDate <= new Date(end_date + 'T00:00:00'); currentDate.setDate(currentDate.getDate() + 1)) {\n                const mapId = format(currentDate, 'yyyy-MM-dd');\n                let isSortable = false;\n                computedItems.map(rowItem => {\n                    const item = rowItem.get(mapId);\n                    if (!item) {\n                        rowItem.set(mapId, {\n                            date: mapId,\n                        });\n                    }\n                    else {\n                        isSortable = true; // At least one row must be available\n                    }\n                });\n                // Add column headings\n                const mapIdDate = new Date(mapId + 'T00:00:00');\n                columns.push({\n                    name: intl.formatDate(mapIdDate, {\n                        day: 'numeric',\n                        month: 'short',\n                    }),\n                    date: mapId,\n                    isSortable,\n                    orderBy: costDistribution === ComputedReportItemValueType.distributed ? 'distributed_cost' : 'cost',\n                });\n            }\n            let showLabels = false;\n            const reportItem = ComputedReportItemType.cost;\n            const reportItemValue = costDistribution ? costDistribution : ComputedReportItemValueType.total;\n            const rows = [];\n            // Sort by date and fill in missing cells\n            computedItems.map(rowItem => {\n                const cells = [];\n                let desc; // First column description (i.e., show ID if different from label)\n                let name; // For first column resource name\n                let selectItem; // Save for row selection\n                let isOverheadCosts = false; // True if item has overhead costs\n                let isPlatformCosts = false; // True if item is of default classification\n                const items = Array.from(rowItem.values()).sort((a, b) => {\n                    if (new Date(a.date) > new Date(b.date)) {\n                        return 1;\n                    }\n                    else if (new Date(a.date) < new Date(b.date)) {\n                        return -1;\n                    }\n                    else {\n                        return 0;\n                    }\n                });\n                items.map(item => {\n                    if (!name) {\n                        name = item && item.label && item.label !== null ? item.label : null;\n                    }\n                    if (!desc) {\n                        desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                    }\n                    if (item.id && !selectItem) {\n                        selectItem = item;\n                    }\n                    if (showCostDistribution &&\n                        item.classification !== classificationUnallocated &&\n                        item.cost &&\n                        ((item.cost.platformDistributed && item.cost.platformDistributed.value > 0) ||\n                            (item.cost.workerUnallocatedDistributed && item.cost.workerUnallocatedDistributed.value > 0))) {\n                        isOverheadCosts = true;\n                        showLabels = true;\n                    }\n                    if (showPlatformCosts && item.classification === classificationDefault) {\n                        isPlatformCosts = true;\n                        showLabels = true;\n                    }\n                    // Add row cells\n                    cells.push({\n                        value: item[reportItem] && item[reportItem][reportItemValue]\n                            ? formatCurrency(item[reportItem][reportItemValue].value, item[reportItem][reportItemValue].units)\n                            : intl.formatMessage(messages.chartNoData),\n                    });\n                });\n                // Add first row cells\n                cells.unshift({}, // Empty cell for row selection\n                {\n                    value: (React.createElement(React.Fragment, null,\n                        name,\n                        desc)),\n                }, {\n                    hidden: !isGroupByProject,\n                    isLabelColumn: true,\n                    value: isPlatformCosts ? (React.createElement(Label, { variant: \"outline\", color: \"green\" }, intl.formatMessage(messages.default))) : isOverheadCosts ? (React.createElement(Tooltip, { content: intl.formatMessage(messages.overheadDesc), enableFlip: true },\n                        React.createElement(Label, { variant: \"outline\", color: \"orange\" }, intl.formatMessage(messages.overhead)))) : (React.createElement(\"span\", { style: styles.defaultLabel })),\n                });\n                rows.push({\n                    cells,\n                    selectionDisabled: selectItem.label === `${noPrefix}${groupBy}` ||\n                        selectItem.label === `${noPrefix}${groupByCostCategory}` ||\n                        selectItem.label === `${noPrefix}${groupByTagKey}`,\n                    item: selectItem,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === selectItem.id) !== undefined),\n                });\n            });\n            // Hide column if there are no labels to show\n            if (isGroupByProject && !showLabels) {\n                columns.map(column => {\n                    if (column.isLabelColumn) {\n                        column.hidden = true;\n                    }\n                });\n                rows.map(row => {\n                    row.cells.map(cell => {\n                        if (cell.isLabelColumn) {\n                            cell.hidden = true;\n                        }\n                    });\n                });\n            }\n            const filteredColumns = columns.filter(column => !column.hidden);\n            const filteredRows = rows.map((_a) => {\n                var row = __rest(_a, []);\n                row.cells = row.cells.filter(cell => !cell.hidden);\n                return row;\n            });\n            this.setState({\n                columns: filteredColumns,\n                rows: filteredRows,\n                showLabels,\n            });\n        };\n        this.getEmptyState = () => {\n            const { query, intl } = this.props;\n            for (const val of Object.values(query.filter_by)) {\n                if (val !== '*') {\n                    return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                }\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { query } = this.props;\n            const { columns } = this.state;\n            let direction;\n            const column = columns[index];\n            const hasOrderBy = query && query.order_by && query.order_by;\n            if (column.orderBy && !column.date) {\n                direction = hasOrderBy && query.order_by[column.orderBy];\n            }\n            else if (hasOrderBy && query.order_by.date === column.date) {\n                direction = hasOrderBy && query.order_by[column.orderBy];\n            }\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected } = this.props;\n            const { rows } = this.state;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { onSort } = this.props;\n            const { columns } = this.state;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending, columns[index].date);\n            }\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { costDistribution, report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport ||\n            prevProps.selectedItems !== selectedItems ||\n            prevProps.costDistribution !== costDistribution) {\n            this.initDatum();\n        }\n    }\n    render() {\n        var _a, _b, _c, _d, _e, _f;\n        const { intl, isLoading } = this.props;\n        const { columns, rows, showLabels } = this.state;\n        const selectColWidth = ((_b = (_a = this.selectColRef) === null || _a === void 0 ? void 0 : _a.current) === null || _b === void 0 ? void 0 : _b.clientWidth) > 0 ? this.selectColRef.current.clientWidth : 53;\n        const nameColWidth = ((_d = (_c = this.nameColRef) === null || _c === void 0 ? void 0 : _c.current) === null || _d === void 0 ? void 0 : _d.clientWidth) > 0 ? this.nameColRef.current.clientWidth : 200;\n        const labelColWidth = ((_f = (_e = this.labelColRef) === null || _e === void 0 ? void 0 : _e.current) === null || _f === void 0 ? void 0 : _f.clientWidth) > 0 ? this.labelColRef.current.clientWidth : 100;\n        return (React.createElement(InnerScrollContainer, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.explorerTableAriaLabel), className: \"explorerTableOverride\", gridBreakPoint: \"\", variant: TableVariant.compact },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => index === 0 ? (React.createElement(Th, { isStickyColumn: true, key: `col-${index}-${col.value}`, stickyMinWidth: `${selectColWidth}px` })) : index === 1 ? (React.createElement(Th, { hasRightBorder: !showLabels, isStickyColumn: true, key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, stickyMinWidth: showLabels ? `${nameColWidth}px` : `100px`, stickyLeftOffset: `${selectColWidth}px` }, col.name)) : index === 2 && showLabels ? (React.createElement(Th, { hasRightBorder: true, isStickyColumn: true, key: `col-${index}-${col.value}`, modifier: \"nowrap\", stickyMinWidth: `${labelColWidth}px`, stickyLeftOffset: `${selectColWidth + nameColWidth}px` }, col.name)) : (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, isStickyColumn: true, key: `cell-${cellIndex}-${rowIndex}`, ref: this.selectColRef, select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    }, stickyMinWidth: `${selectColWidth}px` })) : cellIndex === 1 ? (React.createElement(Td, { className: \"stickyColumn\", dataLabel: columns[cellIndex].name, hasRightBorder: !showLabels, isStickyColumn: true, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", ref: this.nameColRef, stickyMinWidth: showLabels ? `${nameColWidth}px` : `100px`, stickyLeftOffset: `${selectColWidth}px` }, item.value)) : cellIndex === 2 && showLabels ? (React.createElement(Td, { className: \"stickyColumn\", dataLabel: columns[cellIndex].name, hasRightBorder: true, isStickyColumn: true, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", ref: this.labelColRef, stickyMinWidth: `${labelColWidth}px`, stickyLeftOffset: `${selectColWidth + nameColWidth}px` }, item.value)) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\" }, item.value))))))))),\n            rows.length === 0 && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const { end_date, start_date } = getDateRangeFromQuery(queryFromRoute);\n    return {\n        end_date,\n        start_date,\n    };\n});\nconst mapDispatchToProps = {};\nconst ExplorerTableConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerTableBase);\nconst ExplorerTable = injectIntl(withRouter(ExplorerTableConnect));\nexport { ExplorerTable };\n","import React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/components/dataToolbar';\nimport { createMapStateToProps } from 'store/common';\nimport { getTagReportPathsType } from './explorerUtils';\nexport class ExplorerToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { isAllSelected, isBulkSelectDisabled, isDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onExportClicked, pagination, perspective, selectedItems, } = this.props;\n        const tagPathsType = getTagReportPathsType(perspective);\n        // Note: This is the table toolbar used for bulk select and pagination, not the filter toolbar in the page header\n        return (React.createElement(DataToolbar, { isAllSelected: isAllSelected, isBulkSelectDisabled: isBulkSelectDisabled, isDisabled: isDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onExportClicked: onExportClicked, pagination: pagination, selectedItems: selectedItems, showBulkSelect: true, showExcludes: true, showExport: true, tagPathsType: tagPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst ExplorerToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerToolbarBase);\nconst ExplorerToolbar = injectIntl(ExplorerToolbarConnect);\nexport { ExplorerToolbar };\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { getUserAccessQuery } from 'api/queries/userAccessQuery';\nimport { UserAccessType } from 'api/userAccess';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ComputedReportItemValueType } from 'routes/components/charts/common';\nimport { ExportModal } from 'routes/components/export';\nimport { Loading } from 'routes/components/page/loading';\nimport { NoData } from 'routes/components/page/noData';\nimport { NoProviders } from 'routes/components/page/noProviders';\nimport { NotAvailable } from 'routes/components/page/notAvailable';\nimport { getIdKeyForGroupBy } from 'routes/utils/computedReport/getComputedExplorerReportItems';\nimport { getUnsortedComputedReportItems } from 'routes/utils/computedReport/getComputedReportItems';\nimport { getDateRangeFromQuery, getDateRangeTypeDefault } from 'routes/utils/dateRange';\nimport { getGroupByCostCategory, getGroupById, getGroupByOrgValue, getGroupByTagKey } from 'routes/utils/groupBy';\nimport { filterProviders, hasData } from 'routes/utils/providers';\nimport { getRouteForQuery } from 'routes/utils/query';\nimport { handleOnCostDistributionSelected, handleOnCostTypeSelected, handleOnCurrencySelected, handleOnFilterAdded, handleOnFilterRemoved, handleOnPerPageSelect, handleOnSetPage, handleOnSort, } from 'routes/utils/queryNavigate';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { userAccessQuery, userAccessSelectors } from 'store/userAccess';\nimport { getCostDistribution, getCostType, getCurrency } from 'utils/localStorage';\nimport { awsCategoryPrefix, noPrefix, orgUnitIdKey, tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { isAwsAvailable, isAzureAvailable, isGcpAvailable, isIbmAvailable, isOciAvailable, isOcpAvailable, isRhelAvailable, } from 'utils/userAccess';\nimport { styles } from './explorer.styles';\nimport { ExplorerChart } from './explorerChart';\nimport { ExplorerHeader } from './explorerHeader';\nimport { ExplorerTable } from './explorerTable';\nimport { ExplorerToolbar } from './explorerToolbar';\nimport { baseQuery, getGroupByDefault, getPerspectiveDefault, getReportPathsType, getReportType, PerspectiveType, } from './explorerUtils';\nclass Explorer extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            isAllSelected: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByCostCategory = getGroupByCostCategory(query);\n            const groupByOrg = getGroupByOrgValue(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: groupByCostCategory\n                    ? groupByCostCategory\n                    : groupByTagKey\n                        ? groupByTagKey\n                        : groupByOrg\n                            ? 'org_entities'\n                            : groupById,\n                isDateMap: false, // Don't use isDateMap here, so we can use a flattened data structure with row selection\n            });\n            return computedItems;\n        };\n        this.getExportModal = (computedItems) => {\n            const { perspective, query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByCostCategory = getGroupByCostCategory(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `${noPrefix}${groupById}` || item.label === `${noPrefix}${groupByCostCategory}`) ||\n                    item.label === `${noPrefix}${groupByTagKey}`) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByCostCategory\n                    ? `${awsCategoryPrefix}${groupByCostCategory}`\n                    : groupByTagKey\n                        ? `${tagPrefix}${groupByTagKey}`\n                        : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: getReportPathsType(perspective), reportQueryString: reportQueryString, resolution: \"daily\", showTimeScope: false }));\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, report, router } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = Math.trunc(offset / limit + 1);\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handleOnPerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleOnSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.explorerTitle),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { costDistribution, perspective, query, report, reportFetchStatus, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByCostCategory = getGroupByCostCategory(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            const groupByOrg = getGroupByOrgValue(query);\n            return (React.createElement(ExplorerTable, { costDistribution: costDistribution, groupBy: groupByCostCategory\n                    ? `${awsCategoryPrefix}${groupByCostCategory}`\n                    : groupByTagKey\n                        ? `${tagPrefix}${groupByTagKey}`\n                        : groupById, groupByCostCategory: groupByCostCategory, groupByTagKey: groupByTagKey, groupByOrg: groupByOrg, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending, date) => handleOnSort(query, router, sortType, isSortAscending, date), perspective: perspective, query: query, report: report, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { perspective, report } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(ExplorerToolbar, { isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isDisabled || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onExportClicked: this.handleExportModalOpen, pagination: this.getPagination(isDisabled), perspective: perspective, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleDatePickerSelected = (startDate, endDate) => {\n            const { query, router } = this.props;\n            this.setState({ startDate, endDate }, () => {\n                router.navigate(getRouteForQuery(query, router.location, true), { replace: true });\n            });\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            let groupByKey = groupBy;\n            let value = '*';\n            // Check for org units\n            const index = groupBy && groupBy.indexOf(orgUnitIdKey);\n            if (index !== -1) {\n                groupByKey = orgUnitIdKey.substring(0, orgUnitIdKey.length);\n                value = groupBy.slice(orgUnitIdKey.length);\n            }\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: value,\n                }, order_by: undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handlePerspectiveClick = () => {\n            this.setState({ isAllSelected: false, selectedItems: [] });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.isAwsAvailable = () => {\n            const { awsProviders, userAccess } = this.props;\n            return isAwsAvailable(userAccess, awsProviders);\n        };\n        this.isAzureAvailable = () => {\n            const { azureProviders, userAccess } = this.props;\n            return isAzureAvailable(userAccess, azureProviders);\n        };\n        this.isOciAvailable = () => {\n            const { ociProviders, userAccess } = this.props;\n            return isOciAvailable(userAccess, ociProviders);\n        };\n        this.isGcpAvailable = () => {\n            const { gcpProviders, userAccess } = this.props;\n            return isGcpAvailable(userAccess, gcpProviders);\n        };\n        this.isIbmAvailable = () => {\n            const { ibmProviders, userAccess } = this.props;\n            return isIbmAvailable(userAccess, ibmProviders);\n        };\n        this.isOcpAvailable = () => {\n            const { ocpProviders, userAccess } = this.props;\n            return isOcpAvailable(userAccess, ocpProviders);\n        };\n        this.isRhelAvailable = () => {\n            const { isFinsightsFeatureEnabled, rhelProviders, userAccess } = this.props;\n            return isFinsightsFeatureEnabled && isRhelAvailable(userAccess, rhelProviders);\n        };\n        this.updateReport = () => {\n            const { fetchReport, perspective, reportQueryString } = this.props;\n            if (perspective) {\n                fetchReport(getReportPathsType(perspective), getReportType(perspective), reportQueryString);\n            }\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handlePerspectiveClick = this.handlePerspectiveClick.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { perspective, report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newPerspective = prevProps.perspective !== perspective;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newPerspective || newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { awsProviders, azureProviders, ociProviders, costDistribution, costType, currency, gcpProviders, ibmProviders, intl, ocpProviders, providersFetchStatus, perspective, userAccessFetchStatus, query, report, reportError, reportFetchStatus, router, } = this.props;\n        // Note: No need to test OCP on cloud here, since that requires at least one provider\n        const noAwsProviders = !this.isAwsAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noAzureProviders = !this.isAzureAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noGcpProviders = !this.isGcpAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noIbmProviders = !this.isIbmAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noOcpProviders = !this.isOcpAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noOciProviders = !this.isOciAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noRhelProviders = !this.isRhelAvailable() && providersFetchStatus === FetchStatus.complete;\n        const noProviders = noAwsProviders &&\n            noAzureProviders &&\n            noGcpProviders &&\n            noIbmProviders &&\n            noOciProviders &&\n            noOcpProviders &&\n            noRhelProviders;\n        const isLoading = providersFetchStatus === FetchStatus.inProgress || userAccessFetchStatus === FetchStatus.inProgress;\n        const computedItems = this.getComputedItems();\n        const isDisabled = computedItems.length === 0;\n        const itemsTotal = report && report.meta ? report.meta.count : 0;\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const groupByCostCategory = getGroupByCostCategory(query);\n        const groupByTagKey = getGroupByTagKey(query);\n        const title = intl.formatMessage(messages.explorerTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (isLoading) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (noProviders) {\n            return React.createElement(NoProviders, { title: title });\n        }\n        else if (!(hasData(awsProviders) ||\n            hasData(azureProviders) ||\n            hasData(ociProviders) ||\n            hasData(gcpProviders) ||\n            hasData(ibmProviders) ||\n            hasData(ocpProviders))) {\n            return React.createElement(NoData, { title: title });\n        }\n        return (React.createElement(\"div\", { style: styles.explorer },\n            React.createElement(ExplorerHeader, { costDistribution: costDistribution, costType: costType, currency: currency, groupBy: groupByCostCategory\n                    ? `${awsCategoryPrefix}${groupByCostCategory}`\n                    : groupByTagKey\n                        ? `${tagPrefix}${groupByTagKey}`\n                        : groupById, onCostDistributionSelected: () => handleOnCostDistributionSelected(query, router), onCostTypeSelected: () => handleOnCostTypeSelected(query, router), onCurrencySelected: () => handleOnCurrencySelected(query, router), onDatePickerSelected: this.handleDatePickerSelected, onFilterAdded: filter => handleOnFilterAdded(query, router, filter), onFilterRemoved: filter => handleOnFilterRemoved(query, router, filter), onGroupBySelected: this.handleGroupBySelected, onPerspectiveClicked: this.handlePerspectiveClick, perspective: perspective, report: report }),\n            itemsTotal > 0 && (React.createElement(\"div\", { style: styles.chartContent },\n                React.createElement(\"div\", { style: styles.chartContainer },\n                    React.createElement(ExplorerChart, { costDistribution: costDistribution, costType: costType, currency: currency, groupBy: groupByCostCategory\n                            ? `${awsCategoryPrefix}${groupByCostCategory}`\n                            : groupByTagKey\n                                ? `${tagPrefix}${groupByTagKey}`\n                                : groupById, perspective: perspective })))),\n            React.createElement(\"div\", { style: styles.tableContent },\n                React.createElement(\"div\", { style: styles.toolbarContainer }, this.getToolbar(computedItems)),\n                this.getExportModal(computedItems),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    // Get roviders first\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    const awsProviders = filterProviders(providers, ProviderType.aws);\n    const azureProviders = filterProviders(providers, ProviderType.azure);\n    const ociProviders = filterProviders(providers, ProviderType.oci);\n    const gcpProviders = filterProviders(providers, ProviderType.gcp);\n    const ibmProviders = filterProviders(providers, ProviderType.ibm);\n    const ocpProviders = filterProviders(providers, ProviderType.ocp);\n    const rhelProviders = filterProviders(providers, ProviderType.rhel);\n    const userAccessQueryString = getUserAccessQuery(userAccessQuery);\n    const userAccess = userAccessSelectors.selectUserAccess(state, UserAccessType.all, userAccessQueryString);\n    const userAccessError = userAccessSelectors.selectUserAccessError(state, UserAccessType.all, userAccessQueryString);\n    const userAccessFetchStatus = userAccessSelectors.selectUserAccessFetchStatus(state, UserAccessType.all, userAccessQueryString);\n    // Cost Report\n    const dateRangeType = getDateRangeTypeDefault(queryFromRoute);\n    const { end_date, start_date } = getDateRangeFromQuery(queryFromRoute);\n    const perspective = getPerspectiveDefault({\n        awsProviders,\n        azureProviders,\n        ociProviders,\n        gcpProviders,\n        ibmProviders,\n        ocpProviders,\n        queryFromRoute,\n        rhelProviders,\n        userAccess,\n    });\n    const groupBy = queryFromRoute.group_by ? getGroupById(queryFromRoute) : getGroupByDefault(perspective);\n    const group_by = queryFromRoute.group_by ? queryFromRoute.group_by : { [groupBy]: '*' }; // Ensure group_by key is not undefined\n    const isCostDistributionFeatureEnabled = featureFlagsSelectors.selectIsCostDistributionFeatureEnabled(state);\n    const costDistribution = perspective === PerspectiveType.ocp && groupBy === 'project' && isCostDistributionFeatureEnabled\n        ? getCostDistribution()\n        : undefined;\n    const costType = perspective === PerspectiveType.aws || perspective === PerspectiveType.awsOcp ? getCostType() : undefined;\n    const currency = getCurrency();\n    const query = Object.assign(Object.assign(Object.assign(Object.assign({}, baseQuery), (costDistribution === ComputedReportItemValueType.distributed && {\n        order_by: {\n            distributed_cost: 'desc',\n        },\n    })), queryFromRoute), { group_by });\n    const reportQuery = {\n        cost_type: costType,\n        currency,\n        end_date,\n        exclude: query.exclude,\n        filter: query.filter,\n        filter_by: query.filter_by,\n        group_by,\n        order_by: query.order_by,\n        start_date,\n    };\n    const reportPathsType = getReportPathsType(perspective);\n    const reportType = getReportType(perspective);\n    const reportQueryString = getQuery(reportQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    return {\n        awsProviders,\n        azureProviders,\n        costDistribution,\n        costType,\n        currency,\n        dateRangeType,\n        gcpProviders,\n        ibmProviders,\n        isFinsightsFeatureEnabled: featureFlagsSelectors.selectIsFinsightsFeatureEnabled(state),\n        ociProviders,\n        ocpProviders,\n        perspective,\n        providers,\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n        rhelProviders,\n        userAccess,\n        userAccessError,\n        userAccessFetchStatus,\n        userAccessQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(Explorer)));\n","export const skeletonWidth = {\n    xs: '16%',\n    sm: '33%',\n    md: '66%',\n    lg: '100%',\n};\n","import { UserAccessType } from 'api/userAccess';\nconst hasAccess = (userAccess, userAccessType) => {\n    let result = false;\n    if (userAccess && Array.isArray(userAccess.data)) {\n        // Used with multiple types (e.g., type=)\n        const data = userAccess.data.find(d => d.type === userAccessType);\n        result = data && data.access;\n    }\n    else {\n        // Used with type=any, type=GCP, etc.\n        result = userAccess && userAccess.data === true;\n    }\n    return result;\n};\nconst hasProviders = (providers) => {\n    let result = false;\n    if (providers && providers.meta) {\n        // providers API returns empty data array for no sources\n        result = providers.meta.count > 0;\n    }\n    return result;\n};\n// Returns true if user has access to AWS\nexport const hasAwsAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.aws);\n};\n// Returns true if user has access to AWS and at least one source provider\nexport const isAwsAvailable = (userAccess, awsProviders) => {\n    return hasAwsAccess(userAccess) && hasProviders(awsProviders);\n};\n// Returns true if user has access to Azure\nexport const hasAzureAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.azure);\n};\n// Returns true if user has access to Azure and at least one source provider\nexport const isAzureAvailable = (userAccess, azureProviders) => {\n    return hasAzureAccess(userAccess) && hasProviders(azureProviders);\n};\n// Returns true if user has access to Oci\nexport const hasOciAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.oci);\n};\n// Returns true if user has access to Oci and at least one source provider\nexport const isOciAvailable = (userAccess, ociProviders) => {\n    return hasOciAccess(userAccess) && hasProviders(ociProviders);\n};\n// Returns true if user has access to cost models\nexport const hasCostModelAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.cost_model);\n};\n// Returns true if user has access to GCP\nexport const hasGcpAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.gcp);\n};\n// Returns true if user has access to GCP and at least one source provider\nexport const isGcpAvailable = (userAccess, gcpProviders) => {\n    return hasAccess(userAccess, UserAccessType.gcp) && hasProviders(gcpProviders);\n};\n// Returns true if user has access to IBM\nexport const hasIbmAccess = (userAccess) => {\n    return hasGcpAccess(userAccess);\n};\n// Returns true if user has access to IBM and at least one source provider\nexport const isIbmAvailable = (userAccess, ibmProviders) => {\n    return hasIbmAccess(userAccess) && hasProviders(ibmProviders);\n};\n// Returns true if user has access to OCP\nexport const hasOcpAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.ocp);\n};\n// Returns true if user has access to OCP and at least one source provider\nexport const isOcpAvailable = (userAccess, ocpProviders) => {\n    return hasOcpAccess(userAccess) && hasProviders(ocpProviders);\n};\n// Returns true if user has access to RHEL\nexport const hasRhelAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.rhel);\n};\n// Returns true if user has access to RHEL and at least one source provider\nexport const isRhelAvailable = (userAccess, rhelProviders) => {\n    return hasRhelAccess(userAccess) && hasProviders(rhelProviders);\n};\n// Returns true if user has access to ROS\nexport const hasRosAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.ros);\n};\n// Returns true if user has access to RHEL and at least one source provider\nexport const isRosAvailable = (userAccess, rosProviders) => {\n    return hasRosAccess(userAccess) && hasProviders(rosProviders);\n};\n// Returns true if user has access to settings tabs\nexport const hasSettingsAccess = (userAccess) => {\n    // Todo: test \"settings\" access when user-access API has been updated\n    return userAccess !== undefined; // hasAccess(userAccess, UserAccessType.settings);\n};\n"],"names":["exports","getUserAccessQuery","query","stringify","encode","indices","LAYOUT_PROPS","padding","area","Object","assign","axis","bar","boxplot","candlestick","chart","errorbar","group","legend","line","pie","scatter","stack","tooltip","voronoi","ChartTheme","default","styles","selector","display","alignItems","label","marginBottom","marginRight","var","whiteSpace","costDistributionOptions","messages","costDistributionType","value","distributed","total","CostDistributionBase","constructor","super","arguments","this","defaultState","isSelectOpen","state","getSelect","costDistribution","isDisabled","props","selectOptions","getSelectOptions","selection","find","option","Select","className","id","isOpen","onSelect","handleSelect","onToggle","handleToggle","selections","variant","SelectVariant","single","map","SelectOption","description","desc","key","intl","options","push","toString","formatMessage","event","setState","render","style","Title","headingLevel","size","TitleSizes","md","costDistributionLabel","mapStateToProps","CostDistributionConnect","connect","injectIntl","infrastructureAwsOptions","perspectiveValues","infrastructureAwsOcpOptions","infrastructureAzureOptions","infrastructureOciOptions","infrastructureAzureOcpOptions","infrastructureGcpOptions","infrastructureGcpOcpOptions","infrastructureIbmOptions","infrastructureIbmOcpOptions","infrastructureOcpCloudOptions","ocpOptions","rhelOptions","getInfrastructureOptions","hasAws","hasAwsOcp","hasAzure","hasAzureOcp","hasGcp","hasGcpOcp","hasIbm","hasIbmOcp","hasOci","isIbmFeatureEnabled","currentItem","hasOcp","hasOcpCloud","hasRhel","isInfrastructureTab","isRhelTab","onSelected","undefined","getIdKeyForGroupBy","groupBy","account","cluster","gcp_project","node","org_unit_id","payer_tenant_id","product_service","project","region","resource_location","service","service_name","subscription_guid","chartContainer","backgroundColor","global_BackgroundColor_light_100","marginLeft","global_spacer_lg","paddingRight","paddingBottom","paddingTop","chartContent","explorer","minHeight","paginationContainer","pagination","global_spacer_md","tableContainer","tableContent","toolbarContainer","_arrayLikeToArray","arr","len","length","i","arr2","Array","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","apply","_objectSpread","target","source","forEach","_defineProperty","getOwnPropertyDescriptors","defineProperties","defineProperty","obj","configurable","writable","fallbackProps","width","height","stackData","childComponents","filterNullChildData","dataset","datum","_x","_y","datasets","fillInMissingData","xMap","reduce","prev","Date","getTime","xKeys","k","Number","xArr","indexOffset","isDate","x","index","y","fillData","d","xOffset","yOffset","y0","_group","firstDatasetBaseline","previousPoints","slice","concat","previousDatum","memo","some","point","getY0","_y0","_y1","_x1","addLayoutData","getCalculatedProps","toArray","children","role","theme","categories","c","data","domain","range","baseScale","scale","horizontal","_props","colorScale","useMemoizedProps","initialProps","modifiedProps","modifiedChildren","_child","child","withoutSharedEvents","_React$useState2","isArray","_arrayWithHoles","_i","Symbol","iterator","_s","_e","_arr","_n","_d","call","next","done","err","_iterableToArrayLimit","o","minLen","n","prototype","name","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","setProps","getColorScale","type","colorScaleOptions","getChildren","calculatedProps","childProps","standalone","getChildProps","parentName","labels","getLabels","domainPadding","labelComponent","polar","VictoryStackBase","VictoryStack","_Hooks$useAnimationSt","setAnimationState","getAnimationProps","getProps","eventKey","containerComponent","groupComponent","externalEventMutations","newChildren","animate","reverse","containerProps","parent","userProps","container","defaultContainerProps","events","previousProps","propTypes","baseProps","bins","defaultProps","grayscale","componentConfig","expectedComponents","displayName","ChartStack","_a","ariaDesc","ariaTitle","ChartContainer","hasPatterns","patternScale","themeColor","themeVariant","rest","title","g","defaultPatternScale","themeColorScale","chartStyles","chart_color_blue_300","chart_color_gold_300","chart_color_green_300","chart_color_purple_300","chart_color_orange_300","chart_color_cyan_300","yAxis","axisLabel","grid","stroke","ticks","yAxisAlt","tickLabels","fontSize","xAxis","CostExplorerChartBase","containerRef","observer","noop","hiddenSeries","Set","tickValues","initDatum","top1stData","top2ndData","top3rdData","top4thData","top5thData","top6thData","series","getTruncatedString","childName","initDatumChildName","legendItem","symbol","fill","cursorVoronoiContainer","getCursorVoronoiContainer","units","getUnits","getTickValues","getAdjustedContainerHeight","adjustContainerHeight","containerHeight","adjustedContainerHeight","getBarWidth","maxValue","s","sectionWidth","getChart","barWidth","has","ChartBar","formatter","formatOptions","CursorVoronoiContainer","cursorDimension","mouseFollowTooltips","voronoiDimension","voronoiPadding","bottom","left","right","top","getDomain","max","Math","getEvents","chartNames","isDataHidden","isHidden","legendName","onLegendClick","handleLegendClick","getLegend","ChartLegend","gutter","responsive","val","values","modVal","str","substring","maxChars","getTickValue","t","handleResize","clientWidth","current","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","disable","ChartLegendTooltip","legendData","chartDayOfTheMonth","day","ref","Chart","explorerChartAriaTitle","legendAllowWrap","legendComponent","legendPosition","multiOrdered","ChartAxis","C","fixLabelOverlap","dependentAxis","tickFormat","global_spacer_2xl","chartSkeleton","marginTop","global_spacer_3xl","costChart","global_spacer_sm","legendSkeleton","titleContainer","trendChart","usageChart","PerspectiveType","baseQuery","limit","offset","exclude","filter_by","order_by","cost","dateRangeOptions","explorerDateRange","groupByAwsOptions","groupByAzureOptions","groupByGcpOptions","groupByGcpOcpOptions","groupByIbmOptions","groupByOciOptions","groupByOcpOptions","groupByRhelOptions","getGroupByDefault","perspective","result","aws","awsOcp","gcp","gcpOcp","ibm","azure","azureOcp","oci","ocp","ocpCloud","rhel","getGroupByOptions","getOrgReportPathsType","getReportType","getReportPathsType","getResourcePathsType","getTagReportPathsType","ExplorerChartBase","stateProps","dispatchProps","createReportDatum","computedItem","reportItem","reportItemValue","computedItemDate","date","xVal","formatDate","month","yVal","parseFloat","toFixed","updateReport","fetchReport","reportQueryString","getChartDatums","computedItems","chartDatums","datums","Map","padChartDatums","getComputedItems","report","computedReportItems","idKey","getGroupBy","isDateMap","found","item","splice","groupById","group_by","groupByCostCategory","groupByOrg","groupByTagKey","getSkeleton","Skeleton","skeleton","xs","items","end_date","start_date","newItems","padDate","setDate","getDate","format","chartDatum","reportError","reportFetchStatus","explorerChartTitle","inProgress","costType","currency","router","queryFromRoute","location","search","isCostDistributionFeatureEnabled","featureFlags","reportQuery","cost_type","distributed_cost","reportPathsType","reportType","mapDispatchToProps","ExplorerChartConnect","ExplorerChart","toContainer","ExplorerDatePickerBase","startDateRef","endDateRef","getStartDatePicker","startDate","DatePicker","datePickerStartDateAriaLabel","onChange","handleStartDateOnChange","placeholder","start","validators","datePickerBeforeError","datePickerAfterError","getEndDatePicker","endDate","getMaxEndDate","datePickerEndDateAriaLabel","handleEndDateOnChange","end","rangeStart","today","setTime","isEndDateValid","minDate","maxDate","isStartDateValid","evt","setCalendarOpen","dateRangeType","custom","prevState","to","ExplorerDatePicker","ExplorerDateRangeBase","ExplorerDateRange","orgType","org","resourceType","aws_category","tagType","tag","ExplorerFilterBase","showDatePicker","getCategoryOptions","orgReport","resourceReport","tagReport","filterByValues","sort","a","b","getDateRangeComponent","currentDateRangeType","handleDateRangeSelected","getDatePickerComponent","handleDatePickerSelected","newQuery","JSON","parse","navigate","replace","fetchOrg","fetchResource","fetchTag","orgQueryString","orgPathsType","resourcePathsType","resourceQueryString","tagQueryString","tagPathsType","categoryOptions","onFilterAdded","onFilterRemoved","dateRange","datePicker","showExcludes","showFilter","orgReportFetchStatus","key_only","resourceReportFetchStatus","tagReportFetchStatus","ExplorerFilterConnect","ExplorerFilter","costLabel","costValue","costLabelUnit","global_FontSize_sm","color","global_Color_100","costLabelDate","global_Color_200","paddingLeft","header","headerContent","justifyContent","headerContentRight","perspectiveContainer","ExplorerHeaderBase","getPerspective","currentPerspective","isAwsAvailable","isAzureAvailable","isOciAvailable","isGcpAvailable","isIbmAvailable","isOcpAvailable","isRhelAvailable","isAwsOcpAvailable","isAzureOcpAvailable","isGcpOcpAvailable","isIbmOcpAvailable","isOcpCloudAvailable","handlePerspectiveSelected","onPerspectiveClicked","awsProviders","userAccess","ocpProviders","azureProviders","gcpProviders","ibmProviders","ociProviders","isFinsightsFeatureEnabled","rhelProviders","isExportsFeatureEnabled","onCostDistributionSelected","onCostTypeSelected","onCurrencySelected","onGroupBySelected","providersFetchStatus","noAwsProviders","complete","noAzureProviders","noGcpProviders","noIbmProviders","noOcpProviders","noRhelProviders","noProviders","groupByOptions","showCostDistribution","meta","distributed_overhead","explorerTitle","showCostCategories","showOrgs","showTags","providersQueryString","providers","all","providersError","userAccessQueryString","userAccessError","userAccessFetchStatus","ExplorerHeader","defaultLabel","minWidth","emptyState","infoArrow","position","infoArrowDesc","global_spacer_xs","infoDescription","global_disabled_color_100","global_FontSize_xs","ExplorerTableBase","selectColRef","nameColRef","labelColRef","columns","rows","showLabels","isAllSelected","selectedItems","isGroupByProject","showPlatformCosts","orderBy","costCategoryNames","names","count","tagNames","groupByValueNames","isSortable","hidden","isLabelColumn","currentDate","mapId","rowItem","get","set","mapIdDate","cells","selectItem","isOverheadCosts","isPlatformCosts","classification","platformDistributed","workerUnallocatedDistributed","chartNoData","unshift","Label","Tooltip","content","overheadDesc","enableFlip","overhead","selectionDisabled","selected","column","row","cell","filteredColumns","filteredRows","e","p","hasOwnProperty","indexOf","propertyIsEnumerable","__rest","getEmptyState","showMargin","EmptyState","EmptyStateIcon","icon","EmptyStateBody","detailsEmptyState","getSortBy","direction","hasOrderBy","getSortParams","sortBy","onSort","handleOnSort","columnIndex","handleOnSelect","isSelected","rowId","newRows","SortByDirection","asc","bind","currentReport","_b","_c","_f","isLoading","selectColWidth","nameColWidth","labelColWidth","InnerScrollContainer","TableComposable","explorerTableAriaLabel","gridBreakPoint","TableVariant","compact","Thead","Tr","col","Th","isStickyColumn","stickyMinWidth","hasRightBorder","modifier","stickyLeftOffset","Tbody","Td","colSpan","Bullseye","textAlign","Spinner","rowIndex","cellIndex","dataLabel","select","_event","ExplorerTableConnect","ExplorerTable","ExplorerToolbarBase","isBulkSelectDisabled","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onExportClicked","showBulkSelect","showExport","ExplorerToolbarConnect","ExplorerToolbar","Explorer","isExportModalOpen","getExportModal","isAllItems","onClose","handleExportModalClose","resolution","showTimeScope","getPagination","isBottom","page","trunc","Pagination","isCompact","itemCount","onPerPageSelect","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","PaginationVariant","widgetId","getTable","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","handleExportModalOpen","action","handleGroupBySelected","groupByKey","handlePerspectiveClick","newPerspective","noReport","noLocation","noOciProviders","onDatePickerSelected","ibmOcp","hasAwsCloud","hasAzureCloud","hasGcpCloud","hasIbmCloud","getPerspectiveDefault","skeletonWidth","sm","lg","hasAccess","userAccessType","access","hasProviders","hasAwsAccess","hasAzureAccess","hasOciAccess","hasCostModelAccess","cost_model","hasGcpAccess","hasIbmAccess","hasOcpAccess","hasRhelAccess","hasRosAccess","ros","hasSettingsAccess"],"sourceRoot":""}