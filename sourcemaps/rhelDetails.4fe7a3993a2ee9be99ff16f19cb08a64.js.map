{"version":3,"file":"js/rhelDetails.1559e6581b55ac53101e.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-tokens/dist/js/global_FontSize_md.js","webpack:///./src/routes/views/details/components/columnManagement/columnManagementModal.tsx","webpack:///./src/utils/computedReport/getComputedRhelReportItems.ts","webpack:///./src/routes/views/details/rhelDetails/detailsHeader.styles.ts","webpack:///./src/routes/views/details/rhelDetails/detailsHeader.tsx","webpack:///./src/routes/views/details/rhelDetails/detailsTable.tsx","webpack:///./src/routes/views/details/rhelDetails/detailsToolbar.tsx","webpack:///./src/routes/views/details/rhelDetails/rhelDetails.styles.ts","webpack:///./src/routes/views/details/rhelDetails/rhelDetails.tsx"],"sourcesContent":["\"use strict\";\nexports.__esModule = true;\nexports.global_FontSize_md = {\n  \"name\": \"--pf-global--FontSize--md\",\n  \"value\": \"1rem\",\n  \"var\": \"var(--pf-global--FontSize--md)\"\n};\nexports[\"default\"] = exports.global_FontSize_md;","import { Button, ButtonVariant, DataList, DataListCell, DataListCheck, DataListItem, DataListItemCells, DataListItemRow, Modal, ModalVariant, Text, TextContent, TextVariants, } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nexport const initHiddenColumns = (options) => {\n    const hiddenColumns = new Set();\n    options.map(option => {\n        if (option.hidden) {\n            hiddenColumns.add(option.value);\n        }\n    });\n    return hiddenColumns;\n};\nexport class ColumnManagementModalBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            hiddenColumns: initHiddenColumns(this.props.options),\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getHidden = (value) => {\n            const { hiddenColumns } = this.state;\n            const result = new Set(hiddenColumns);\n            if (!result.delete(value)) {\n                result.add(value);\n            }\n            return result;\n        };\n        this.isHidden = (value) => {\n            const { hiddenColumns } = this.state;\n            return hiddenColumns.has(value);\n        };\n        this.handleChange = (checked, event) => {\n            const hiddenColumns = this.getHidden(event.target.id);\n            this.setState({ hiddenColumns });\n        };\n        this.handleClose = () => {\n            // Reset defult state upon close\n            this.setState(Object.assign({}, this.defaultState), () => {\n                this.props.onClose(false);\n            });\n        };\n        this.handleSave = () => {\n            const { hiddenColumns } = this.state;\n            this.props.onSave(hiddenColumns);\n            this.handleClose();\n        };\n        this.selectAll = () => {\n            this.setState({ hiddenColumns: new Set() });\n        };\n    }\n    componentDidUpdate(prevProps) {\n        const { options } = this.props;\n        if (prevProps.options !== options) {\n            const hiddenColumns = initHiddenColumns(options);\n            this.setState({ hiddenColumns });\n        }\n    }\n    render() {\n        const { options, intl } = this.props;\n        return (React.createElement(Modal, { description: React.createElement(TextContent, null,\n                React.createElement(Text, { component: TextVariants.p }, intl.formatMessage(messages.manageColumnsDesc)),\n                React.createElement(Button, { isInline: true, onClick: this.selectAll, variant: \"link\" }, intl.formatMessage(messages.selectAll))), \n            // style={styles.modal}\n            isOpen: this.props.isOpen, onClose: this.handleClose, title: intl.formatMessage(messages.manageColumnsTitle), variant: ModalVariant.medium, actions: [\n                React.createElement(Button, { key: \"save\", onClick: this.handleSave, variant: ButtonVariant.link }, intl.formatMessage(messages.save)),\n                React.createElement(Button, { key: \"cancel\", onClick: this.handleClose, variant: ButtonVariant.link }, intl.formatMessage(messages.cancel)),\n            ] },\n            React.createElement(DataList, { \"aria-label\": intl.formatMessage(messages.manageColumnsAriaLabel), id: \"table-column-management\", isCompact: true }, options.map(option => (React.createElement(DataListItem, { \"aria-labelledby\": option.value, key: option.value },\n                React.createElement(DataListItemRow, null,\n                    React.createElement(DataListCheck, { \"aria-labelledby\": `${option.value}Label`, isChecked: !this.isHidden(option.value), name: option.value, id: option.value, onChange: this.handleChange }),\n                    React.createElement(DataListItemCells, { dataListCells: [\n                            React.createElement(DataListCell, { id: `${option.value}Label`, key: \"table-column-management-item1\" },\n                                React.createElement(\"span\", null, intl.formatMessage(option.label))),\n                            React.createElement(DataListCell, { key: \"table-column-management-item2\" }, option.description && React.createElement(\"span\", null, intl.formatMessage(option.description))),\n                        ] }))))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {};\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst ColumnManagementModalConnect = connect(mapStateToProps, mapDispatchToProps)(ColumnManagementModalBase);\nconst ColumnManagementModal = injectIntl(ColumnManagementModalConnect);\nexport default ColumnManagementModal;\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costValue: {\n        marginTop: global_spacer_lg.var,\n        marginBottom: 0,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    dateTitle: {\n        textAlign: 'end',\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentLeft: {\n        display: 'flex',\n        minHeight: '90px',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    info: {\n        verticalAlign: 'middle',\n    },\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title, TitleSizes, Tooltip } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { TagPathsType } from 'api/tags/tag';\nimport { ExportsLink } from 'components/drawers';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Currency } from 'routes/components/currency';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { GroupBy } from 'routes/views/components/groupBy';\nimport { filterProviders } from 'routes/views/utils/providers';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedRhelReportItems';\nimport { getSinceDateRangeString } from 'utils/dates';\nimport { formatCurrency } from 'utils/format';\nimport { styles } from './detailsHeader.styles';\nconst groupByOptions = [\n    { label: 'cluster', value: 'cluster' },\n    { label: 'node', value: 'node' },\n    { label: 'project', value: 'project' },\n];\nconst tagReportPathsType = TagPathsType.rhel;\nclass DetailsHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { currency, groupBy, isCurrencyFeatureEnabled, isExportsFeatureEnabled, onCurrencySelected, onGroupBySelected, providers, providersError, report, intl, } = this.props;\n        const showContent = report && !providersError && providers && providers.meta && providers.meta.count > 0;\n        let cost = React.createElement(EmptyValueState, null);\n        let supplementaryCost = React.createElement(EmptyValueState, null);\n        let infrastructureCost = React.createElement(EmptyValueState, null);\n        if (report && report.meta && report.meta.total) {\n            const hasCost = report.meta.total.cost && report.meta.total.cost.total;\n            const hasSupplementaryCost = report.meta.total.supplementary && report.meta.total.supplementary.total;\n            const hasInfrastructureCost = report.meta.total.infrastructure && report.meta.total.infrastructure.total;\n            cost = formatCurrency(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD');\n            supplementaryCost = formatCurrency(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost ? report.meta.total.supplementary.total.units : 'USD');\n            infrastructureCost = formatCurrency(hasInfrastructureCost ? report.meta.total.infrastructure.total.value : 0, hasInfrastructureCost ? report.meta.total.infrastructure.total.units : 'USD');\n        }\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, intl.formatMessage(messages.rhelDetailsTitle)),\n                React.createElement(\"div\", { style: styles.headerContentRight },\n                    isCurrencyFeatureEnabled && React.createElement(Currency, { currency: currency, onSelect: onCurrencySelected }),\n                    isExportsFeatureEnabled && React.createElement(ExportsLink, null))),\n            React.createElement(\"div\", { style: styles.headerContent },\n                React.createElement(\"div\", { style: styles.headerContentLeft },\n                    React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: !showContent, onSelected: onGroupBySelected, options: groupByOptions, showTags: true, tagReportPathsType: tagReportPathsType })),\n                Boolean(showContent) && (React.createElement(\"div\", null,\n                    React.createElement(Tooltip, { content: intl.formatMessage(messages.dashboardTotalCostTooltip, {\n                            infrastructureCost,\n                            supplementaryCost,\n                        }), enableFlip: true },\n                        React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: TitleSizes['4xl'] }, cost)),\n                    React.createElement(\"div\", { style: styles.dateTitle }, getSinceDateRangeString()))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        isCurrencyFeatureEnabled: featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state),\n        isExportsFeatureEnabled: featureFlagsSelectors.selectIsExportsFeatureEnabled(state),\n        providers: filterProviders(providers, ProviderType.rhel),\n        providersError,\n        providersFetchStatus,\n        providersQueryString,\n    };\n});\nconst DetailsHeader = injectIntl(connect(mapStateToProps, {})(DetailsHeaderBase));\nexport { DetailsHeader };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport 'routes/views/details/components/dataTable/dataTable.scss';\nimport { Label } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { ReportPathsType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { Actions } from 'routes/views/details/components/actions';\nimport { DataTable } from 'routes/views/details/components/dataTable';\nimport { styles } from 'routes/views/details/components/dataTable/dataTable.styles';\nimport { getBreakdownPath } from 'routes/views/utils/paths';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getForDateRangeString, getNoDataForDateRangeString } from 'utils/dates';\nimport { formatCurrency, formatPercentage } from 'utils/format';\nimport { formatPath } from 'utils/paths';\nimport { noPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nexport const DetailsTableColumnIds = {\n    infrastructure: 'infrastructure',\n    monthOverMonth: 'monthOverMonth',\n    supplementary: 'supplementary',\n};\nconst reportPathsType = ReportPathsType.rhel;\nclass DetailsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { groupBy, groupByTagKey, hiddenColumns, intl, isAllSelected, report, router, selectedItems } = this.props;\n            if (!report) {\n                return;\n            }\n            const showDefaultProject = groupBy === 'project';\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: (groupByTagKey ? groupByTagKey : groupBy),\n            });\n            const columns = groupByTagKey\n                ? [\n                    // Sorting with tag keys is not supported\n                    {\n                        name: '',\n                    },\n                    {\n                        name: intl.formatMessage(messages.tagNames),\n                        style: groupBy === 'project' ? styles.nameColumn : undefined,\n                    },\n                    {\n                        hidden: !showDefaultProject,\n                        name: '', // Default column\n                    },\n                    {\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    {\n                        id: DetailsTableColumnIds.infrastructure,\n                        name: intl.formatMessage(messages.rhelDetailsInfrastructureCost),\n                        style: styles.managedColumn,\n                    },\n                    {\n                        id: DetailsTableColumnIds.supplementary,\n                        name: intl.formatMessage(messages.rhelDetailsSupplementaryCost),\n                        style: styles.managedColumn,\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ]\n                : [\n                    {\n                        name: '',\n                    },\n                    Object.assign(Object.assign({ orderBy: groupBy, name: intl.formatMessage(messages.detailsResourceNames, { value: groupBy }) }, (computedItems.length && { isSortable: true })), { style: groupBy === 'project' ? styles.nameColumn : undefined }),\n                    {\n                        hidden: !showDefaultProject,\n                        name: '', // Default column\n                    },\n                    {\n                        id: DetailsTableColumnIds.monthOverMonth,\n                        name: intl.formatMessage(messages.monthOverMonthChange),\n                    },\n                    {\n                        id: DetailsTableColumnIds.infrastructure,\n                        orderBy: 'infrastructure_cost',\n                        name: intl.formatMessage(messages.rhelDetailsInfrastructureCost),\n                        style: styles.managedColumn,\n                        // Sort by infrastructure_cost is not supported -- https://github.com/project-koku/koku/issues/796\n                        // ...(computedItems.length && { isSortable: true }),\n                    },\n                    {\n                        id: DetailsTableColumnIds.supplementary,\n                        orderBy: 'supplementary_cost',\n                        name: intl.formatMessage(messages.rhelDetailsSupplementaryCost),\n                        style: styles.managedColumn,\n                        // Sort by supplementary_cost is not supported -- https://github.com/project-koku/koku/issues/796\n                        // ...(computedItems.length && { isSortable: true }),\n                    },\n                    Object.assign({ orderBy: 'cost', name: intl.formatMessage(messages.cost), style: styles.costColumn }, (computedItems.length && { isSortable: true })),\n                    {\n                        name: '',\n                    },\n                ];\n            computedItems.map((item, index) => {\n                const cost = this.getTotalCost(item, index);\n                const label = item && item.label !== null ? item.label : '';\n                const monthOverMonth = this.getMonthOverMonthCost(item, index);\n                const supplementaryCost = this.getSupplementaryCost(item, index);\n                const InfrastructureCost = this.getInfrastructureCost(item, index);\n                const desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                const isDisabled = label === `${noPrefix}${groupBy}` || label === `${noPrefix}${groupByTagKey}`;\n                const actions = this.getActions(item, isDisabled);\n                const name = isDisabled ? label : (React.createElement(Link, { to: getBreakdownPath({\n                        basePath: formatPath(routes.rhelDetailsBreakdown.path),\n                        description: item.id,\n                        groupBy,\n                        id: item.id,\n                        router,\n                        title: label.toString(),\n                    }) }, label));\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: (React.createElement(React.Fragment, null,\n                                React.createElement(\"div\", null, name),\n                                React.createElement(\"div\", { style: styles.infoDescription }, desc))),\n                        },\n                        {\n                            hidden: !showDefaultProject,\n                            value: item.default_project ? (React.createElement(\"div\", null,\n                                React.createElement(Label, { variant: \"outline\", color: \"green\" }, intl.formatMessage(messages.default)))) : (React.createElement(\"div\", { style: styles.defaultLabel })),\n                        },\n                        { value: React.createElement(\"div\", null, monthOverMonth), id: DetailsTableColumnIds.monthOverMonth },\n                        {\n                            value: React.createElement(\"div\", null, InfrastructureCost),\n                            id: DetailsTableColumnIds.infrastructure,\n                            style: styles.managedColumn,\n                        },\n                        {\n                            value: React.createElement(\"div\", null, supplementaryCost),\n                            id: DetailsTableColumnIds.supplementary,\n                            style: styles.managedColumn,\n                        },\n                        { value: React.createElement(\"div\", null, cost), style: styles.managedColumn },\n                        { value: React.createElement(\"div\", null, actions) },\n                    ],\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                    selectionDisabled: isDisabled,\n                });\n            });\n            const filteredColumns = columns.filter(column => !hiddenColumns.has(column.id) && !column.hidden);\n            const filteredRows = rows.map((_a) => {\n                var row = __rest(_a, []);\n                row.cells = row.cells.filter(cell => !hiddenColumns.has(cell.id) && !cell.hidden);\n                return row;\n            });\n            this.setState({\n                columns: filteredColumns,\n                rows: filteredRows,\n            });\n        };\n        this.getActions = (item, isDisabled) => {\n            const { groupBy, reportQueryString } = this.props;\n            return (React.createElement(Actions, { groupBy: groupBy, isDisabled: isDisabled, item: item, providerType: ProviderType.rhel, reportPathsType: reportPathsType, reportQueryString: reportQueryString, showPriceListOption: groupBy === 'cluster' }));\n        };\n        this.getSupplementaryCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.supplementary.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.supplementary.total.value, item.supplementary.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n        this.getInfrastructureCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.infrastructure.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.infrastructure.total.value, item.infrastructure.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n        this.getMonthOverMonthCost = (item, index) => {\n            const { intl } = this.props;\n            const value = formatCurrency(Math.abs(item.cost.total.value - item.delta_value), item.cost.total.units);\n            const percentage = item.delta_percent !== null ? formatPercentage(Math.abs(item.delta_percent)) : 0;\n            const showPercentage = !(percentage === 0 || percentage === '0.00');\n            const showValue = item.delta_percent !== null; // Workaround for https://github.com/project-koku/koku/issues/1395\n            let iconOverride;\n            if (showPercentage) {\n                iconOverride = 'iconOverride';\n                if (item.delta_percent !== null && item.delta_value < 0) {\n                    iconOverride += ' decrease';\n                }\n                if (item.delta_percent !== null && item.delta_value > 0) {\n                    iconOverride += ' increase';\n                }\n            }\n            if (!showValue) {\n                return getNoDataForDateRangeString();\n            }\n            else {\n                return (React.createElement(\"div\", { className: \"monthOverMonthOverride\" },\n                    React.createElement(\"div\", { className: iconOverride, key: `month-over-month-cost-${index}` },\n                        showPercentage ? intl.formatMessage(messages.percent, { value: percentage }) : React.createElement(EmptyValueState, null),\n                        Boolean(showPercentage && item.delta_percent !== null && item.delta_value > 0) && (React.createElement(\"span\", { className: \"fa fa-sort-up\", style: styles.infoArrow, key: `month-over-month-icon-${index}` })),\n                        Boolean(showPercentage && item.delta_percent !== null && item.delta_value < 0) && (React.createElement(\"span\", { className: \"fa fa-sort-down\", style: Object.assign(Object.assign({}, styles.ininfoArrow), styles.infoArrowDesc), key: `month-over-month-icon-${index}` }))),\n                    React.createElement(\"div\", { style: styles.infoDescription, key: `month-over-month-info-${index}` }, getForDateRangeString(value))));\n            }\n        };\n        this.getTotalCost = (item, index) => {\n            const { report, intl } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.cost.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.cost.total.value, item.cost.total.units),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, intl.formatMessage(messages.percentOfCost, { value: percentValue }))));\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { hiddenColumns, report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport ||\n            prevProps.selectedItems !== selectedItems ||\n            prevProps.hiddenColumns !== hiddenColumns) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { isLoading, onSelected, onSort, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, isLoading: isLoading, onSelected: onSelected, onSort: onSort, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst DetailsTable = injectIntl(withRouter(DetailsTableBase));\nexport { DetailsTable };\n","import { getQuery } from 'api/queries/ocpQuery';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport { TagPathsType, TagType } from 'api/tags/tag';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/views/components/dataToolbar';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { isEqual } from 'utils/equal';\nimport { tagKey } from 'utils/props';\nconst tagReportType = TagType.tag;\nconst tagReportPathsType = TagPathsType.ocp;\nexport class DetailsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { intl, tagReport } = this.props;\n            const options = [\n                { name: intl.formatMessage(messages.filterByValues, { value: 'cluster' }), key: 'cluster' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'node' }), key: 'node' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'project' }), key: 'project' },\n            ];\n            if (tagReport && tagReport.data && tagReport.data.length) {\n                options.push({\n                    name: intl.formatMessage(messages.filterByValues, { value: tagKey }),\n                    key: tagKey,\n                });\n            }\n            return options;\n        };\n    }\n    componentDidMount() {\n        const { fetchTag, tagReportFetchStatus, tagQueryString } = this.props;\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        }, () => {\n            if (tagReportFetchStatus !== FetchStatus.inProgress) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchTag, query, tagReport, tagReportFetchStatus, tagQueryString } = this.props;\n        if (!isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            }, () => {\n                if (tagReportFetchStatus !== FetchStatus.inProgress) {\n                    fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n                }\n            });\n        }\n        else if (query && !isEqual(query, prevProps.query) && tagReportFetchStatus !== FetchStatus.inProgress) {\n            fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n        }\n    }\n    render() {\n        const { groupBy, isAllSelected, isDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onColumnManagementClicked, onExportClicked, onFilterAdded, onFilterRemoved, onPlatformCostsChanged, pagination, query, selectedItems, tagReport, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, groupBy: groupBy, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onColumnManagementClicked: onColumnManagementClicked, onExportClicked: onExportClicked, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, onPlatformCostsChanged: onPlatformCostsChanged, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.ocp, selectedItems: selectedItems, showBulkSelect: true, showColumnManagement: true, showExport: true, showFilter: true, tagReport: tagReport, tagReportPathsType: tagReportPathsType }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    // Note: Omitting key_only would help to share a single, cached request -- the toolbar requires key values\n    // However, for better server-side performance, we chose to use key_only here.\n    const tagQueryString = getQuery({\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        key_only: true,\n        limit: 1000,\n    });\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, tagQueryString);\n    return {\n        tagReport,\n        tagReportFetchStatus,\n        tagQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst DetailsToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsToolbarBase);\nconst DetailsToolbar = injectIntl(DetailsToolbarConnect);\nexport { DetailsToolbar };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    ocpDetails: {\n        minHeight: '100%',\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    toolbarContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { ProviderType } from 'api/providers';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { getQuery, parseQuery } from 'api/queries/rhelQuery';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport { cloneDeep } from 'lodash';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NoData } from 'routes/state/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { ExportModal } from 'routes/views/components/export';\nimport { ColumnManagementModal, initHiddenColumns } from 'routes/views/details/components/columnManagement';\nimport { getGroupByTagKey } from 'routes/views/utils/groupBy';\nimport { handleCurrencySelected, handleFilterAdded, handleFilterRemoved, handlePerPageSelect, handleSetPage, handleSort, } from 'routes/views/utils/handles';\nimport { filterProviders, hasCurrentMonthData } from 'routes/views/utils/providers';\nimport { getRouteForQuery } from 'routes/views/utils/query';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedRhelReportItems';\nimport { getCurrency } from 'utils/localStorage';\nimport { noPrefix, platformCategoryKey, tagPrefix } from 'utils/props';\nimport { withRouter } from 'utils/router';\nimport { DetailsHeader } from './detailsHeader';\nimport { DetailsTable, DetailsTableColumnIds } from './detailsTable';\nimport { DetailsToolbar } from './detailsToolbar';\nimport { styles } from './rhelDetails.styles';\nconst baseQuery = {\n    delta: 'cost',\n    filter: {\n        limit: 10,\n        offset: 0,\n        resolution: 'monthly',\n        time_scope_units: 'month',\n        time_scope_value: -1,\n    },\n    exclude: {},\n    filter_by: {},\n    group_by: {\n        project: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst defaultColumnOptions = [\n    { label: messages.monthOverMonthChange, value: DetailsTableColumnIds.monthOverMonth },\n    {\n        description: messages.ocpDetailsInfrastructureCostDesc,\n        label: messages.ocpDetailsInfrastructureCost,\n        value: DetailsTableColumnIds.infrastructure,\n        hidden: true,\n    },\n    {\n        description: messages.ocpDetailsSupplementaryCostDesc,\n        label: messages.ocpDetailsSupplementaryCost,\n        value: DetailsTableColumnIds.supplementary,\n        hidden: true,\n    },\n];\nconst reportType = ReportType.cost;\nconst reportPathsType = ReportPathsType.ocp;\nclass RhelDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            hiddenColumns: initHiddenColumns(defaultColumnOptions),\n            isAllSelected: false,\n            isColumnManagementModalOpen: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getColumnManagementModal = () => {\n            const { hiddenColumns, isColumnManagementModalOpen } = this.state;\n            const options = cloneDeep(defaultColumnOptions);\n            options.map(option => {\n                option.hidden = hiddenColumns.has(option.value);\n            });\n            return (React.createElement(ColumnManagementModal, { isOpen: isColumnManagementModalOpen, options: options, onClose: this.handleColumnManagementModalClose, onSave: this.handleColumnManagementModalSave }));\n        };\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey || groupById,\n            });\n        };\n        this.getExportModal = (computedItems) => {\n            const { query, report, reportQueryString } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            // Omit items labeled 'no-project'\n            const items = [];\n            selectedItems.map(item => {\n                if (!(item.label === `${noPrefix}${groupById}` || item.label === `${noPrefix}${groupByTagKey}`)) {\n                    items.push(item);\n                }\n            });\n            return (React.createElement(ExportModal, { count: isAllSelected ? itemsTotal : items.length, isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: items, onClose: this.handleExportModalClose, reportPathsType: reportPathsType, reportQueryString: reportQueryString }));\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, report, router } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = offset / limit + 1;\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handlePerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.openShift),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { query, report, reportFetchStatus, reportQueryString, router } = this.props;\n            const { hiddenColumns, isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return (React.createElement(DetailsTable, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, groupByTagKey: groupByTagKey, hiddenColumns: hiddenColumns, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending) => handleSort(query, router, sortType, isSortAscending), report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, report, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(DetailsToolbar, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isAllSelected: isAllSelected, isDisabled: isDisabled, isExportDisabled: isDisabled || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onColumnManagementClicked: this.handleColumnManagementModalOpen, onExportClicked: this.handleExportModalOpen, onFilterAdded: filter => handleFilterAdded(query, router, filter), onFilterRemoved: filter => handleFilterRemoved(query, router, filter), onPlatformCostsChanged: this.handlePlatformCostsChanged, pagination: this.getPagination(), query: query, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleColumnManagementModalClose = (isOpen) => {\n            this.setState({ isColumnManagementModalOpen: isOpen });\n        };\n        this.handleColumnManagementModalOpen = () => {\n            this.setState({ isColumnManagementModalOpen: true });\n        };\n        this.handleColumnManagementModalSave = (hiddenColumns) => {\n            this.setState({ hiddenColumns });\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleGroupBySelected = groupBy => {\n            const { query, router } = this.props;\n            const groupByKey = groupBy;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: '*',\n                }, order_by: { cost: 'desc' }, category: undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handlePlatformCostsChanged = (checked) => {\n            const { query, router } = this.props;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { category: checked ? platformCategoryKey : undefined });\n            this.setState({ isAllSelected: false, selectedItems: [] }, () => {\n                router.navigate(getRouteForQuery(newQuery, router.location, true), { replace: true });\n            });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.updateReport = () => {\n            const { fetchReport, reportQueryString } = this.props;\n            fetchReport(reportPathsType, reportType, reportQueryString);\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleColumnManagementModalClose = this.handleColumnManagementModalClose.bind(this);\n        this.handleColumnManagementModalOpen = this.handleColumnManagementModalOpen.bind(this);\n        this.handleColumnManagementModalSave = this.handleColumnManagementModalSave.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handlePlatformCostsChanged = this.handlePlatformCostsChanged.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { currency, intl, providers, providersFetchStatus, query, report, reportError, reportFetchStatus, router } = this.props;\n        const computedItems = this.getComputedItems();\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const isDisabled = computedItems.length === 0;\n        const title = intl.formatMessage(messages.ocpDetailsTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.inProgress) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (providersFetchStatus === FetchStatus.complete) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: ProviderType.ocp, title: title });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.ocpDetails },\n            React.createElement(DetailsHeader, { currency: currency, groupBy: groupById, onCurrencySelected: value => handleCurrencySelected(query, router, value), onGroupBySelected: this.handleGroupBySelected, report: report }),\n            React.createElement(\"div\", { style: styles.content },\n                React.createElement(\"div\", { style: styles.toolbarContainer }, this.getToolbar(computedItems)),\n                this.getExportModal(computedItems),\n                this.getColumnManagementModal(),\n                reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const currency = featureFlagsSelectors.selectIsCurrencyFeatureEnabled(state) ? getCurrency() : undefined;\n    const query = {\n        delta: 'cost',\n        filter: Object.assign(Object.assign({}, baseQuery.filter), queryFromRoute.filter),\n        filter_by: queryFromRoute.filter_by || baseQuery.filter_by,\n        exclude: queryFromRoute.exclude || baseQuery.exclude,\n        group_by: queryFromRoute.group_by || baseQuery.group_by,\n        order_by: queryFromRoute.order_by || baseQuery.order_by,\n        category: queryFromRoute.category,\n    };\n    const reportQueryString = getQuery(Object.assign(Object.assign({}, query), { currency }));\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    return {\n        currency,\n        providers: filterProviders(providers, ProviderType.ocp),\n        providersFetchStatus,\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(RhelDetails)));\n"],"names":["exports","initHiddenColumns","options","hiddenColumns","Set","map","option","hidden","add","value","ColumnManagementModalBase","constructor","stateProps","dispatchProps","super","this","defaultState","props","state","Object","assign","getHidden","result","delete","isHidden","has","handleChange","checked","event","target","id","setState","handleClose","onClose","handleSave","onSave","selectAll","componentDidUpdate","prevProps","render","intl","Modal","description","TextContent","Text","component","TextVariants","formatMessage","messages","Button","isInline","onClick","variant","isOpen","title","ModalVariant","actions","key","ButtonVariant","DataList","isCompact","DataListItem","DataListItemRow","DataListCheck","isChecked","name","onChange","DataListItemCells","dataListCells","DataListCell","label","mapStateToProps","ColumnManagementModalConnect","connect","injectIntl","getIdKeyForGroupBy","groupBy","project","cluster","node","styles","costValue","marginTop","global_spacer_lg","marginBottom","costLabelUnit","fontSize","global_FontSize_sm","color","global_Color_100","dateTitle","textAlign","header","backgroundColor","global_BackgroundColor_light_100","padding","headerContent","display","justifyContent","headerContentLeft","minHeight","headerContentRight","info","verticalAlign","infoIcon","global_FontSize_md","infoTitle","fontWeight","paddingBottom","global_spacer_sm","groupByOptions","tagReportPathsType","DetailsHeaderBase","arguments","currency","isCurrencyFeatureEnabled","isExportsFeatureEnabled","onCurrencySelected","onGroupBySelected","providers","providersError","report","showContent","meta","count","cost","supplementaryCost","infrastructureCost","total","hasCost","hasSupplementaryCost","supplementary","hasInfrastructureCost","infrastructure","format","units","style","Title","headingLevel","size","TitleSizes","onSelect","isDisabled","onSelected","showTags","Boolean","Tooltip","content","enableFlip","providersQueryString","providersFetchStatus","featureFlags","DetailsHeader","DetailsTableColumnIds","reportPathsType","DetailsTableBase","columns","rows","initDatum","groupByTagKey","isAllSelected","router","selectedItems","showDefaultProject","computedItems","idKey","undefined","orderBy","length","isSortable","item","index","getTotalCost","monthOverMonth","getMonthOverMonthCost","getSupplementaryCost","InfrastructureCost","getInfrastructureCost","desc","getActions","Link","to","basePath","routes","toString","push","cells","default_project","Label","selected","find","val","selectionDisabled","filteredColumns","filter","column","filteredRows","_a","row","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","propertyIsEnumerable","__rest","cell","reportQueryString","providerType","showPriceListOption","percentValue","toFixed","Math","abs","delta_value","percentage","delta_percent","showPercentage","showValue","iconOverride","className","componentDidMount","currentReport","data","JSON","stringify","isLoading","onSort","DetailsTable","tagReportType","DetailsToolbarBase","getCategoryOptions","tagReport","fetchTag","tagReportFetchStatus","tagQueryString","categoryOptions","query","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onColumnManagementClicked","onExportClicked","onFilterAdded","onFilterRemoved","onPlatformCostsChanged","pagination","resourcePathsType","showBulkSelect","showColumnManagement","showExport","showFilter","resolution","time_scope_units","time_scope_value","key_only","limit","mapDispatchToProps","DetailsToolbarConnect","DetailsToolbar","paddingTop","ocpDetails","paginationContainer","marginLeft","marginRight","global_spacer_md","tableContainer","toolbarContainer","baseQuery","delta","offset","exclude","filter_by","group_by","order_by","defaultColumnOptions","reportType","RhelDetails","isColumnManagementModalOpen","isExportModalOpen","getColumnManagementModal","cloneDeep","handleColumnManagementModalClose","handleColumnManagementModalSave","getComputedItems","groupById","getExportModal","items","isAllItems","handleExportModalClose","getPagination","isBottom","page","Pagination","itemCount","onPerPageSelect","perPage","onSetPage","pageNumber","titles","paginationTitle","placement","PaginationVariant","widgetId","getTable","reportFetchStatus","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","handleColumnManagementModalOpen","handleExportModalOpen","handlePlatformCostsChanged","action","handleGroupBySelected","groupByKey","newQuery","parse","category","navigate","location","replace","isSelected","newItems","updateReport","fetchReport","bind","prevState","reportError","noReport","noLocation","search","queryFromRoute"],"sourceRoot":""}