{"version":3,"file":"js/overview.705852706a4ebdca4bba.js","mappings":"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","sources":["webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/calculator-icon.js","webpack:///./node_modules/@patternfly/react-icons/dist/esm/icons/ok-icon.js","webpack:///./src/api/queries/userAccessQuery.ts","webpack:///./src/routes/components/dataTable/dataTable.styles.ts","webpack:///./src/routes/components/dataTable/dataTable.tsx","webpack:///./src/routes/settings/calculations/calculations.styles.ts","webpack:///./src/routes/settings/calculations/calculations.tsx","webpack:///./src/routes/settings/costModels/costModelsDetails/utils/query.tsx","webpack:///./src/routes/settings/costModels/costModelsDetails/bottomPagination.tsx","webpack:///./src/routes/settings/costModels/costModelsDetails/costModelsDetails.styles.ts","webpack:///./src/routes/settings/costModels/costModelWizard/api.ts","webpack:///./src/routes/settings/costModels/costModelWizard/context.ts","webpack:///./src/routes/settings/costModels/costModelWizard/wizard.styles.ts","webpack:///./src/routes/settings/costModels/costModelWizard/distribution.tsx","webpack:///./src/routes/settings/costModels/costModelWizard/steps.tsx","webpack:///./src/routes/settings/costModels/costModelWizard/generalInformation.tsx","webpack:///./src/routes/settings/costModels/costModelWizard/markup.tsx","webpack:///./src/routes/settings/costModels/components/addPriceList.tsx","webpack:///./src/routes/settings/costModels/components/paginationToolbarTemplate.tsx","webpack:///./src/routes/settings/costModels/costModelWizard/priceListTable.tsx","webpack:///./src/routes/settings/costModels/costModelWizard/priceList.tsx","webpack:///./src/routes/settings/costModels/costModelWizard/review.tsx","webpack:///./src/routes/settings/costModels/costModelWizard/assignSourcesToolbar.tsx","webpack:///./src/routes/settings/costModels/costModelWizard/table.tsx","webpack:///./src/routes/settings/costModels/costModelWizard/sources.tsx","webpack:///./src/routes/settings/costModels/costModelWizard/costModelWizard.tsx","webpack:///./src/routes/settings/costModels/costModelsDetails/createCostModelButton.tsx","webpack:///./src/routes/settings/costModels/costModelsDetails/utils/dialog.tsx","webpack:///./src/routes/settings/costModels/costModelsDetails/dialog.tsx","webpack:///./src/routes/settings/costModels/costModelsDetails/emptyStateBase.tsx","webpack:///./src/routes/settings/costModels/costModelsDetails/noCostModels.tsx","webpack:///./src/routes/settings/costModels/costModelsDetails/table.tsx","webpack:///./src/routes/settings/costModels/costModelsDetails/utils/table.tsx","webpack:///./src/routes/settings/costModels/costModelsDetails/utils/filters.tsx","webpack:///./src/routes/settings/costModels/costModelsDetails/utils/toolbar.tsx","webpack:///./src/routes/settings/costModels/costModelsDetails/toolbar.tsx","webpack:///./src/routes/settings/costModels/costModelsDetails/costModelsDetails.tsx","webpack:///./src/routes/settings/tagDetails/tagDetails.styles.ts","webpack:///./src/routes/settings/tagDetails/tagTable.tsx","webpack:///./src/routes/settings/tagDetails/tagToolbar.tsx","webpack:///./src/routes/settings/tagDetails/tagDetails.tsx","webpack:///./src/routes/settings/costCategory/costCategory.styles.ts","webpack:///./src/routes/settings/costCategory/costCategoryTable.tsx","webpack:///./src/routes/settings/costCategory/costCategoryToolbar.tsx","webpack:///./src/routes/settings/costCategory/costCategory.tsx","webpack:///./src/routes/settings/settings.styles.ts","webpack:///./src/routes/settings/settings.tsx","webpack:///./src/routes/components/icons/optimizationIcon/optimizationIcon.tsx","webpack:///./src/routes/state/noOptimizations/noOptimizationsState.tsx","webpack:///./src/routes/views/components/perspective/perspective.tsx","webpack:///./src/routes/views/overview/components/dashboardBase.tsx","webpack:///./src/routes/views/overview/components/optimizationsSummary/optimizations.styles.ts","webpack:///./src/routes/views/overview/components/optimizationsSummary/optimizationsSummary.tsx","webpack:///./src/routes/views/overview/components/chartComparison.tsx","webpack:///./src/routes/views/overview/components/dashboardWidget.styles.ts","webpack:///./src/routes/views/overview/components/dashboardWidgetBase.tsx","webpack:///./src/routes/views/overview/awsDashboard/awsDashboardWidget.tsx","webpack:///./src/routes/views/overview/awsDashboard/awsDashboard.tsx","webpack:///./src/routes/views/overview/awsOcpDashboard/awsOcpDashboardWidget.tsx","webpack:///./src/routes/views/overview/awsOcpDashboard/awsOcpDashboard.tsx","webpack:///./src/routes/views/overview/azureDashboard/azureDashboardWidget.tsx","webpack:///./src/routes/views/overview/azureDashboard/azureDashboard.tsx","webpack:///./src/routes/views/overview/azureOcpDashboard/azureOcpDashboardWidget.tsx","webpack:///./src/routes/views/overview/azureOcpDashboard/azureOcpDashboard.tsx","webpack:///./src/routes/views/overview/gcpDashboard/gcpDashboardWidget.tsx","webpack:///./src/routes/views/overview/gcpDashboard/gcpDashboard.tsx","webpack:///./src/routes/views/overview/gcpOcpDashboard/gcpOcpDashboardWidget.tsx","webpack:///./src/routes/views/overview/gcpOcpDashboard/gcpOcpDashboard.tsx","webpack:///./src/routes/views/overview/ibmDashboard/ibmDashboardWidget.tsx","webpack:///./src/routes/views/overview/ibmDashboard/ibmDashboard.tsx","webpack:///./src/routes/views/overview/ocpCloudDashboard/ocpCloudDashboardWidget.tsx","webpack:///./src/routes/views/overview/ocpCloudDashboard/ocpCloudDashboard.tsx","webpack:///./src/routes/views/overview/ocpDashboard/ocpDashboardWidget.styles.ts","webpack:///./src/routes/views/overview/ocpDashboard/ocpDashboardWidget.tsx","webpack:///./src/routes/views/overview/ocpDashboard/ocpDashboard.tsx","webpack:///./src/routes/views/overview/rhelDashboard/rhelDashboardWidget.styles.ts","webpack:///./src/routes/views/overview/rhelDashboard/rhelDashboardWidget.tsx","webpack:///./src/routes/views/overview/rhelDashboard/rhelDashboard.tsx","webpack:///./src/routes/views/overview/ociDashboard/ociDashboardWidget.tsx","webpack:///./src/routes/views/overview/ociDashboard/ociDashboard.tsx","webpack:///./src/routes/views/overview/overview.styles.ts","webpack:///./src/routes/views/overview/overview.tsx","webpack:///./src/api/queries/overviewQuery.ts","webpack:///./src/utils/userAccess.ts"],"sourcesContent":["import { createIcon } from '../createIcon';\n\nexport const CalculatorIconConfig = {\n  name: 'CalculatorIcon',\n  height: 512,\n  width: 448,\n  svgPath: 'M400 0H48C22.4 0 0 22.4 0 48v416c0 25.6 22.4 48 48 48h352c25.6 0 48-22.4 48-48V48c0-25.6-22.4-48-48-48zM128 435.2c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm0-128c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm128 128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm0-128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8v-38.4c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v38.4zm128 128c0 6.4-6.4 12.8-12.8 12.8h-38.4c-6.4 0-12.8-6.4-12.8-12.8V268.8c0-6.4 6.4-12.8 12.8-12.8h38.4c6.4 0 12.8 6.4 12.8 12.8v166.4zm0-256c0 6.4-6.4 12.8-12.8 12.8H76.8c-6.4 0-12.8-6.4-12.8-12.8V76.8C64 70.4 70.4 64 76.8 64h294.4c6.4 0 12.8 6.4 12.8 12.8v102.4z',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const CalculatorIcon = createIcon(CalculatorIconConfig);\n\nexport default CalculatorIcon;","import { createIcon } from '../createIcon';\n\nexport const OkIconConfig = {\n  name: 'OkIcon',\n  height: 1024,\n  width: 1024,\n  svgPath: 'M668.3,361.4 L465.1,564.6 L352.2,451.7 C346.210177,445.698444 338.079189,442.325817 329.6,442.325817 C321.120811,442.325817 312.989823,445.698444 307,451.7 L261.8,496.9 C255.798444,502.889823 252.425817,511.020811 252.425817,519.5 C252.425817,527.979189 255.798444,536.110177 261.8,542.1 L442.4,722.7 C448.389823,728.701556 456.520811,732.074183 465,732.074183 C473.479189,732.074183 481.610177,728.701556 487.6,722.7 L758.6,451.7 C764.601556,445.710177 767.974183,437.579189 767.974183,429.1 C767.974183,420.620811 764.601556,412.489823 758.6,406.5 L713.4,361.3 C700.916226,348.87879 680.728569,348.923552 668.3,361.4 M512.1,127.9 C300.3,127.9 128.1,300.2 128.1,511.9 C128.1,723.8 300.3,895.9 512.1,895.9 C723.9,895.9 896.1,723.7 896.1,511.9 C896.1,300.1 723.8,127.9 512.1,127.9 M512.1,1024 C229.7,1024 0,794.3 0,512 C0,229.7 229.7,0 512.1,0 C794.3,0 1024,229.7 1024,512 C1024,794.3 794.3,1024 512.1,1024',\n  yOffset: 0,\n  xOffset: 0,\n};\n\nexport const OkIcon = createIcon(OkIconConfig);\n\nexport default OkIcon;","import { parse, stringify } from 'qs';\nexport function getUserAccessQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseUserAccessQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    costColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n        paddingRight: 0,\n    },\n    defaultLabel: {\n        minWidth: '50px',\n    },\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    lastItem: {\n        textAlign: 'right',\n        paddingRight: '3.8rem',\n    },\n    lastItemColumn: {\n        textAlign: 'right',\n        display: 'flex',\n        justifyContent: 'flex-end',\n    },\n    managedColumn: {\n        textAlign: 'right',\n    },\n    nameColumn: {\n        width: '1%',\n    },\n};\n","import './dataTable.scss';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/esm/icons/calculator-icon';\nimport { SortByDirection, TableComposable, TableVariant, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { NoOptimizationsState } from 'routes/state/noOptimizations/noOptimizationsState';\nimport { withRouter } from 'utils/router';\nimport { styles } from './dataTable.styles';\nclass DataTable extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getEmptyState = () => {\n            const { filterBy, intl, isOptimizations } = this.props;\n            if (filterBy) {\n                for (const val of Object.values(filterBy)) {\n                    if (val !== '*') {\n                        return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                    }\n                }\n            }\n            if (isOptimizations) {\n                return React.createElement(NoOptimizationsState, null);\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.detailsEmptyState))));\n        };\n        this.getSortBy = index => {\n            const { columns, orderBy } = this.props;\n            const direction = orderBy && orderBy[columns[index].orderBy];\n            return direction\n                ? {\n                    index,\n                    direction,\n                }\n                : {};\n        };\n        this.getSortParams = (index) => {\n            return {\n                sortBy: this.getSortBy(index),\n                onSort: this.handleOnSort,\n                columnIndex: index,\n            };\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected, rows } = this.props;\n            let newRows;\n            let items = [];\n            if (rowId === -1) {\n                newRows = rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                newRows = [...rows];\n                newRows[rowId].selected = isSelected;\n                items = [newRows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { columns, onSort } = this.props;\n            if (onSort) {\n                const orderBy = columns[index].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnRowClick = (event, rowIndex) => {\n            const { onRowClick, rows } = this.props;\n            rows.map(row => (row.selected = false));\n            rows[rowIndex].selected = true;\n            this.setState({ rows }, () => {\n                if (onRowClick) {\n                    onRowClick(event, rowIndex);\n                }\n            });\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    render() {\n        const { columns, intl, isActionsCell = false, isLoading, isOptimizations, rows } = this.props;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.dataTableAriaLabel), className: \"tableOverride\", gridBreakPoint: \"grid-2xl\", hasSelectableRowCaption: isOptimizations, variant: TableVariant.compact },\n                React.createElement(Thead, null,\n                    React.createElement(Tr, null, columns.map((col, index) => (React.createElement(Th, { key: `col-${index}-${col.value}`, modifier: \"nowrap\", sort: col.isSortable ? this.getSortParams(index) : undefined, style: col.style }, col.name))))),\n                React.createElement(Tbody, null, isLoading ? (React.createElement(Tr, null,\n                    React.createElement(Td, { colSpan: 100 },\n                        React.createElement(Bullseye, null,\n                            React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                React.createElement(Spinner, { size: \"xl\" })))))) : (rows.map((row, rowIndex) => (React.createElement(Tr, { isSelectable: isOptimizations, isHoverable: isOptimizations, isRowSelected: isOptimizations && row.selected, onRowClick: isOptimizations ? _event => this.handleOnRowClick(_event, rowIndex) : undefined, key: `row-${rowIndex}` }, row.cells.map((item, cellIndex) => cellIndex === 0 && !isOptimizations ? (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${cellIndex}-${rowIndex}`, modifier: \"nowrap\", select: {\n                        disable: row.selectionDisabled,\n                        isSelected: row.selected,\n                        onSelect: (_event, isSelected) => this.handleOnSelect(_event, isSelected, rowIndex),\n                        rowIndex,\n                    }, style: item.style })) : (React.createElement(Td, { dataLabel: columns[cellIndex].name, key: `cell-${rowIndex}-${cellIndex}`, modifier: \"nowrap\", isActionCell: isActionsCell && cellIndex === row.cells.length - 1, style: item.style }, item.value))))))))),\n            rows.length === 0 && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nexport default injectIntl(withRouter(DataTable));\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    costType: {\n        marginBottom: global_spacer_lg.var,\n        marginTop: global_spacer_lg.var,\n        width: 'fit-content',\n    },\n    costTypeContainer: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        paddingBottom: global_spacer_lg.var,\n        paddingLeft: global_spacer_lg.var,\n        paddingRight: global_spacer_lg.var,\n        paddingTop: global_spacer_lg.var,\n    },\n    currency: {\n        marginTop: global_spacer_lg.var,\n        width: 'fit-content',\n    },\n    currencyContainer: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        paddingBottom: global_spacer_lg.var,\n        paddingLeft: global_spacer_lg.var,\n        paddingRight: global_spacer_lg.var,\n        paddingTop: global_spacer_lg.var,\n    },\n    resetContainer: {\n        display: 'inline-block',\n        paddingLeft: global_spacer_md.var,\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { PageSection, Title, TitleSizes } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { CostType } from 'routes/components/costType';\nimport { Currency } from 'routes/components/currency';\nimport { createMapStateToProps } from 'store/common';\nimport { settingsActions, settingsSelectors } from 'store/settings';\nimport { getCostType, getCurrency, setAccountCurrency, setCostType, setCurrency } from 'utils/localStorage';\nimport { withRouter } from 'utils/router';\nimport { styles } from './calculations.styles';\nclass SettingsBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            currentCostType: getCostType(),\n            currentCurrency: getCurrency(),\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getCostType = () => {\n            const { intl } = this.props;\n            const { currentCostType } = this.state;\n            return (React.createElement(\"div\", { style: styles.costTypeContainer },\n                React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: TitleSizes.md }, intl.formatMessage(messages.costTypeSettingsLabel)),\n                intl.formatMessage(messages.costTypeSettingsDesc),\n                React.createElement(\"div\", { style: styles.costType },\n                    React.createElement(CostType, { costType: currentCostType, isLocalStorage: false, onSelect: this.handleOnCostTypeSelected, showLabel: false }))));\n        };\n        this.getCurrency = () => {\n            const { intl } = this.props;\n            const { currentCurrency } = this.state;\n            return (React.createElement(\"div\", { style: styles.currencyContainer },\n                React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: TitleSizes.md }, intl.formatMessage(messages.currency)),\n                intl.formatMessage(messages.currencyDesc),\n                React.createElement(\"div\", { style: styles.currency },\n                    React.createElement(Currency, { currency: currentCurrency, isLocalStorage: false, onSelect: this.handleOnCurrencySelected, showLabel: false }))));\n        };\n        this.handleOnCostTypeSelected = value => {\n            const { updateSettings } = this.props;\n            this.setState({ currentCostType: value }, () => {\n                setCostType(value);\n                updateSettings({\n                    api: {\n                        settings: {\n                            cost_type: value,\n                        },\n                    },\n                });\n            });\n        };\n        this.handleOnCurrencySelected = value => {\n            const { updateSettings } = this.props;\n            this.setState({ currentCurrency: value }, () => {\n                setCurrency(value);\n                setAccountCurrency(value); // Todo: remove account currency after settings page has been moved\n                updateSettings({\n                    api: {\n                        settings: {\n                            currency: value,\n                        },\n                    },\n                });\n            });\n        };\n    }\n    render() {\n        return (React.createElement(PageSection, { isFilled: true },\n            this.getCurrency(),\n            this.getCostType()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps(state => {\n    const updateSettingsStatus = settingsSelectors.selectSettingsUpdateStatus(state);\n    return {\n        updateSettingsStatus,\n    };\n});\nconst mapDispatchToProps = {\n    updateSettings: settingsActions.updateSettings,\n};\nconst Calculations = injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(SettingsBase)));\nexport default Calculations;\n","import { SortByDirection } from '@patternfly/react-table';\nexport const initialCostModelsQuery = {\n    limit: 10,\n    offset: 0,\n    ordering: null,\n    name: null,\n    source_type: null,\n    description: null,\n};\nexport const costModelsQueryKeys = Object.keys(initialCostModelsQuery);\nexport function stringifySearch(query) {\n    return Object.keys(query).reduce((acc, cur) => {\n        if (query[cur] === null) {\n            return acc;\n        }\n        return acc === '' ? `?${cur}=${query[cur]}` : `${acc}&${cur}=${query[cur]}`;\n    }, '');\n}\nexport function objectifySearch(search) {\n    if (!search) {\n        return initialCostModelsQuery;\n    }\n    const urlQuery = search\n        .slice(1)\n        .split('&')\n        .map(term => term.split('='))\n        .filter(key_value => key_value.length === 2);\n    const nameTerm = urlQuery.find(term => term[0] === 'name');\n    const sourceTypeTerm = urlQuery.find(term => term[0] === 'source_type');\n    const descriptionTerm = urlQuery.find(term => term[0] === 'description');\n    const orderingTerm = urlQuery.find(term => term[0] === 'ordering');\n    const limitTerm = urlQuery.find(term => term[0] === 'limit');\n    const offsetTerm = urlQuery.find(term => term[0] === 'offset');\n    return {\n        name: nameTerm === undefined ? null : nameTerm[1],\n        description: descriptionTerm === undefined ? null : descriptionTerm[1],\n        source_type: sourceTypeTerm === undefined ? null : sourceTypeTerm[1],\n        ordering: orderingTerm === undefined ? null : orderingTerm[1],\n        offset: offsetTerm === undefined ? 0 : Number(offsetTerm[1]),\n        limit: limitTerm === undefined ? 10 : Number(limitTerm[1]),\n    };\n}\nexport function parseOrdering(query, cells) {\n    const { ordering } = query;\n    if (ordering === null) {\n        return {};\n    }\n    const name = ordering[0] === '-' ? ordering.slice(1) : ordering;\n    const direction = ordering[0] === '-' ? SortByDirection.desc : SortByDirection.asc;\n    const index = cells.findIndex(cell => cell.data && cell.data.orderName === name);\n    return { index, direction };\n}\nexport function limitTransform(perPage) {\n    return perPage;\n}\nexport function offsetTransform(page, perPage) {\n    return (page - 1) * perPage;\n}\n","import { Pagination, PaginationVariant, Toolbar, ToolbarContent, ToolbarItem, ToolbarItemVariant, } from '@patternfly/react-core';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { costModelsSelectors } from 'store/costModels';\nimport { withRouter } from 'utils/router';\nimport { initialCostModelsQuery, limitTransform, offsetTransform, stringifySearch } from './utils/query';\nconst BottomPaginationBase = props => {\n    const { variant, intl = defaultIntl, // for testing\n    itemCount, page, perPage, onSetPage, onPerPageSelect, } = props;\n    return (React.createElement(Toolbar, null,\n        React.createElement(ToolbarContent, null,\n            React.createElement(ToolbarItem, { variant: ToolbarItemVariant.pagination },\n                React.createElement(Pagination, { onPerPageSelect: onPerPageSelect, onSetPage: onSetPage, variant: variant, itemCount: itemCount, page: page, perPage: perPage, titles: {\n                        paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                            title: intl.formatMessage(messages.costModelsDetailsTitle),\n                            placement: 'bottom',\n                        }),\n                    } })))));\n};\nconst mapStateToProps = (state) => {\n    const { count, page, perPage } = costModelsSelectors.pagination(state);\n    const query = costModelsSelectors.query(state);\n    return {\n        query,\n        count,\n        page,\n        perPage,\n    };\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { router } = ownProps;\n    const { count, page, perPage, query } = stateProps;\n    return {\n        itemCount: count,\n        page,\n        perPage,\n        variant: PaginationVariant.bottom,\n        onSetPage: (_evt, newPage, newPerPage) => {\n            router.navigate(stringifySearch(Object.assign(Object.assign(Object.assign({}, initialCostModelsQuery), query), { offset: offsetTransform(newPage, newPerPage) })));\n        },\n        onPerPageSelect: (_evt, newPerPage) => {\n            router.navigate(stringifySearch(Object.assign(Object.assign(Object.assign({}, initialCostModelsQuery), query), { limit: limitTransform(newPerPage), offset: 0 })));\n        },\n    };\n};\nexport const CostModelsBottomPagination = withRouter(connect(mapStateToProps, undefined, mergeProps)(injectIntl(BottomPaginationBase)));\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    descContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        padding: global_spacer_md.value,\n    },\n};\n","import { fetchProviders } from 'api/providers';\nexport const fetchSources = ({ type, page, perPage, query }) => {\n    const offset = (page - 1) * perPage;\n    const limit = perPage;\n    const queryParam = Object.keys(query).reduce((acc, cur) => (acc ? `${acc}&${cur}=${query[cur]}` : `${cur}=${query[cur]}`), '');\n    return fetchProviders(`type=${type}&limit=${limit}&offset=${offset}&${queryParam}`).then(sources => {\n        const payload = sources.data;\n        return payload.data.map(src => ({\n            name: src.name,\n            uuid: src.uuid,\n            costmodel: src.cost_models.map(cm => cm.name).join(','),\n            meta: payload.meta,\n        }));\n    });\n};\n// .then(sources => sources.data.data)\n","import React from 'react';\nimport { getAccountCurrency } from 'utils/localStorage';\nexport const defaultCostModelContext = {\n    apiError: null,\n    checked: {},\n    clearQuery: () => null,\n    createError: null,\n    createProcess: false,\n    createSuccess: false,\n    currencyUnits: getAccountCurrency(),\n    dataFetched: false,\n    description: '',\n    dirtyName: false,\n    distribution: '',\n    distributePlatformUnallocated: true,\n    distributeWorkerUnallocated: true,\n    error: null,\n    fetchSources: (type, query, page, perPage) => null,\n    filterName: '',\n    goToAddPL: (value) => null,\n    isDiscount: false,\n    handleMarkupDiscountChange: (...args) => null,\n    handleDistributionChange: (...args) => null,\n    handleDistributePlatformUnallocatedChange: (...args) => null,\n    handleDistributeWorkerUnallocatedChange: (...args) => null,\n    handleSignChange: (...args) => null,\n    loading: false,\n    markup: '',\n    metricsHash: {},\n    name: '',\n    onClose: () => null,\n    onCurrencyChange: (value) => null,\n    onDescChange: (value) => null,\n    onFilterChange: (value) => null,\n    onPageChange: (_evt, value) => null,\n    onPerPageChange: (_evt, value) => null,\n    onTypeChange: (value) => null,\n    onNameChange: (value) => null,\n    onSourceSelect: (...args) => null,\n    page: 1,\n    perPage: 10,\n    priceListPagination: {\n        page: 1,\n        perPage: 4,\n        onPerPageSet: (_evt, perPage) => null,\n        onPageSet: (_evt, page) => null,\n    },\n    query: {},\n    step: 1,\n    setSources: (value) => null,\n    sources: [],\n    submitTiers: (tiers) => null,\n    tiers: [],\n    total: 0,\n    type: '',\n};\nexport const CostModelContext = React.createContext(defaultCostModelContext);\n","export const styles = {\n    form: {\n        width: '350px',\n    },\n    textArea: {\n        maxWidth: '450px',\n        minWidth: '350px',\n        minHeight: '75px',\n        maxHeight: '150px',\n    },\n    selector: {\n        maxHeight: '350px',\n    },\n    titleWithLearnMore: {\n        display: 'inline-block',\n        marginRight: '1em',\n    },\n};\n","import { FormGroup, Radio, Stack, StackItem, Text, TextContent, Title, TitleSizes } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Form } from 'routes/settings/costModels/components/forms/form';\nimport { createMapStateToProps } from 'store/common';\nimport { CostModelContext } from './context';\nimport { styles } from './wizard.styles';\nclass DistributionBase extends React.Component {\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(CostModelContext.Consumer, null, ({ handleDistributionChange, handleDistributePlatformUnallocatedChange, handleDistributeWorkerUnallocatedChange, distribution, distributePlatformUnallocated, distributeWorkerUnallocated, }) => {\n            return (React.createElement(Stack, { hasGutter: true },\n                React.createElement(StackItem, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.xl, style: styles.titleWithLearnMore }, intl.formatMessage(messages.costDistribution)),\n                    React.createElement(\"a\", { href: intl.formatMessage(messages.docsCostModelsDistribution), rel: \"noreferrer\", target: \"_blank\" }, intl.formatMessage(messages.learnMore))),\n                React.createElement(StackItem, null,\n                    React.createElement(Title, { headingLevel: \"h3\", size: TitleSizes.md }, intl.formatMessage(messages.distributionType)),\n                    React.createElement(TextContent, null,\n                        React.createElement(Text, { style: styles.cardDescription }, intl.formatMessage(messages.distributionModelDesc)))),\n                React.createElement(StackItem, { isFilled: true },\n                    React.createElement(Form, null,\n                        React.createElement(FormGroup, { isInline: true, fieldId: \"cost-distribution-type\", isRequired: true },\n                            React.createElement(Radio, { isChecked: distribution === 'cpu', name: \"distributionType\", label: intl.formatMessage(messages.cpuTitle), \"aria-label\": intl.formatMessage(messages.cpuTitle), id: \"cpuDistribution\", value: \"cpu\", onChange: handleDistributionChange }),\n                            React.createElement(Radio, { isChecked: distribution === 'memory', name: \"distributionType\", label: intl.formatMessage(messages.memoryTitle), \"aria-label\": intl.formatMessage(messages.memoryTitle), id: \"memoryDistribution\", value: \"memory\", onChange: handleDistributionChange })))),\n                React.createElement(StackItem, null,\n                    React.createElement(Title, { headingLevel: \"h3\", size: TitleSizes.md }, intl.formatMessage(messages.platform)),\n                    React.createElement(TextContent, null,\n                        React.createElement(Text, { style: styles.cardDescription }, intl.formatMessage(messages.platformDesc)))),\n                React.createElement(StackItem, { isFilled: true },\n                    React.createElement(Form, null,\n                        React.createElement(FormGroup, { isInline: true, fieldId: \"cost-distribution-platform-unallocated\", isRequired: true },\n                            React.createElement(Radio, { isChecked: distributePlatformUnallocated, name: \"distributePlatformUnallocated\", label: intl.formatMessage(messages.distribute), \"aria-label\": intl.formatMessage(messages.distribute), id: \"distributePlatformTrue\", value: \"true\", onChange: handleDistributePlatformUnallocatedChange }),\n                            React.createElement(Radio, { isChecked: !distributePlatformUnallocated, name: \"distributePlatformUnallocated\", label: intl.formatMessage(messages.doNotDistribute), \"aria-label\": intl.formatMessage(messages.doNotDistribute), id: \"distributePlatformFalse\", value: \"false\", onChange: handleDistributePlatformUnallocatedChange })))),\n                React.createElement(StackItem, null,\n                    React.createElement(Title, { headingLevel: \"h3\", size: TitleSizes.md }, intl.formatMessage(messages.workerUnallocated)),\n                    React.createElement(TextContent, null,\n                        React.createElement(Text, { style: styles.cardDescription }, intl.formatMessage(messages.workerUnallocatedDesc)))),\n                React.createElement(StackItem, { isFilled: true },\n                    React.createElement(Form, null,\n                        React.createElement(FormGroup, { isInline: true, fieldId: \"cost-distribution-worker-unallocated\", isRequired: true },\n                            React.createElement(Radio, { isChecked: distributeWorkerUnallocated, name: \"distributeWorkerUnallocated\", label: intl.formatMessage(messages.distribute), \"aria-label\": intl.formatMessage(messages.distribute), id: \"distributeWorkerTrue\", value: \"true\", onChange: handleDistributeWorkerUnallocatedChange }),\n                            React.createElement(Radio, { isChecked: !distributeWorkerUnallocated, name: \"distributeWorkerUnallocated\", label: intl.formatMessage(messages.doNotDistribute), \"aria-label\": intl.formatMessage(messages.doNotDistribute), id: \"distributeWorkerFalse\", value: \"false\", onChange: handleDistributeWorkerUnallocatedChange }))))));\n        }));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst Distribution = injectIntl(connect(mapStateToProps, {})(DistributionBase));\nexport default Distribution;\n","import messages from 'locales/messages';\nimport { countDecimals, isPercentageFormatValid } from 'utils/format';\nexport const nameErrors = (name) => {\n    if (name.length === 0) {\n        return messages.costModelsRequiredField;\n    }\n    if (name.length > 100) {\n        return messages.costModelsInfoTooLong;\n    }\n    return null;\n};\nexport const descriptionErrors = (description) => {\n    if (description.length > 500) {\n        return messages.costModelsDescTooLong;\n    }\n    return null;\n};\nconst isMarkupValid = value => {\n    if (value.trim() === '') {\n        return false;\n    }\n    if (!isPercentageFormatValid(value)) {\n        return false;\n    }\n    // Test number of decimals\n    const decimals = countDecimals(value);\n    if (decimals > 10) {\n        return false;\n    }\n    return true;\n};\nexport const validatorsHash = {\n    '': [() => false],\n    AWS: [\n        ctx => nameErrors(ctx.name) === null && descriptionErrors(ctx.description) === null && ctx.type !== '',\n        ctx => isMarkupValid(ctx.markup),\n        () => true,\n        () => true,\n    ],\n    Azure: [\n        ctx => nameErrors(ctx.name) === null && descriptionErrors(ctx.description) === null && ctx.type !== '',\n        ctx => isMarkupValid(ctx.markup),\n        () => true,\n        () => true,\n    ],\n    GCP: [\n        ctx => nameErrors(ctx.name) === null && descriptionErrors(ctx.description) === null && ctx.type !== '',\n        ctx => isMarkupValid(ctx.markup),\n        () => true,\n        () => true,\n    ],\n    OCP: [\n        ctx => nameErrors(ctx.name) === null && descriptionErrors(ctx.description) === null && ctx.type !== '',\n        ctx => ctx.priceListCurrent.justSaved,\n        ctx => isMarkupValid(ctx.markup),\n        () => true,\n        () => true,\n        () => true,\n    ],\n};\n","import { FormGroup, SelectDirection, Stack, StackItem, TextArea, TextInput, Title, TitleSizes, } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { currencyOptions } from 'routes/components/currency';\nimport { Form } from 'routes/settings/costModels/components/forms/form';\nimport { Selector } from 'routes/settings/costModels/components/inputs/selector';\nimport { createMapStateToProps } from 'store/common';\nimport { CostModelContext } from './context';\nimport { descriptionErrors, nameErrors } from './steps';\nimport { styles } from './wizard.styles';\nclass GeneralInformation extends React.Component {\n    render() {\n        const getValueLabel = (valStr, options) => {\n            const val = options.find(o => o.value === valStr);\n            return !val ? valStr : intl.formatMessage(val.label, { units: val.value });\n        };\n        const { intl } = this.props;\n        const sourceTypeOptions = [\n            {\n                label: messages.costModelsWizardOnboardAws,\n                value: 'AWS',\n            },\n            {\n                label: messages.azure,\n                value: 'Azure',\n            },\n            {\n                label: messages.gcp,\n                value: 'GCP',\n            },\n            {\n                label: messages.costModelsWizardOnboardOcp,\n                value: 'OCP',\n            },\n        ];\n        return (React.createElement(CostModelContext.Consumer, null, ({ currencyUnits, dirtyName, description, name, type, onCurrencyChange, onNameChange, onDescChange, onTypeChange, }) => (React.createElement(Stack, { hasGutter: true },\n            React.createElement(StackItem, null,\n                React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.xl, style: styles.titleWithLearnMore }, intl.formatMessage(messages.costModelsWizardGeneralInfoTitle)),\n                React.createElement(\"a\", { href: intl.formatMessage(messages.docsConfigCostModels), rel: \"noreferrer\", target: \"_blank\" }, intl.formatMessage(messages.learnMore))),\n            React.createElement(StackItem, null,\n                React.createElement(Form, { style: styles.form },\n                    React.createElement(FormGroup, { helperTextInvalid: nameErrors(name) && intl.formatMessage(nameErrors(name)), validated: nameErrors(name) === null || !dirtyName ? 'default' : 'error', label: intl.formatMessage(messages.names, { count: 1 }), isRequired: true, fieldId: \"name\" },\n                        React.createElement(TextInput, { validated: nameErrors(name) === null || !dirtyName ? 'default' : 'error', isRequired: true, type: \"text\", id: \"name\", name: \"name\", value: name, onChange: onNameChange })),\n                    React.createElement(FormGroup, { helperTextInvalid: descriptionErrors(description) && intl.formatMessage(descriptionErrors(description)), validated: descriptionErrors(description) === null ? 'default' : 'error', label: intl.formatMessage(messages.description), fieldId: \"description\" },\n                        React.createElement(TextArea, { style: styles.textArea, type: \"text\", id: \"description\", name: \"description\", value: description, validated: descriptionErrors(description) === null ? 'default' : 'error', onChange: onDescChange })),\n                    React.createElement(Selector, { isRequired: true, id: \"source-type-selector\", direction: SelectDirection.up, appendMenuTo: \"inline\", maxHeight: styles.selector.maxHeight, label: messages.sourceType, toggleAriaLabel: intl.formatMessage(messages.costModelsWizardEmptySourceTypeLabel), placeholderText: intl.formatMessage(messages.costModelsWizardEmptySourceTypeLabel), value: getValueLabel(type, sourceTypeOptions), onChange: onTypeChange, options: sourceTypeOptions }),\n                    React.createElement(Selector, { label: messages.currency, direction: SelectDirection.up, appendMenuTo: \"inline\", maxHeight: styles.selector.maxHeight, toggleAriaLabel: intl.formatMessage(messages.costModelsWizardCurrencyToggleLabel), value: getValueLabel(currencyUnits, currencyOptions), onChange: onCurrencyChange, id: \"currency-units-selector\", options: currencyOptions.map(o => {\n                            return {\n                                label: intl.formatMessage(o.label, { units: o.value }),\n                                value: o.value,\n                            };\n                        }) })))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst mapDispatchToProps = {\n// TDB\n};\nexport default injectIntl(connect(mapStateToProps, mapDispatchToProps)(GeneralInformation));\n","import { Flex, FlexItem, FormGroup, InputGroup, InputGroupText, List, ListItem, Radio, Stack, StackItem, Text, TextContent, TextInput, TextVariants, Title, TitleSizes, } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Form } from 'routes/settings/costModels/components/forms/form';\nimport { styles as costCalcStyles } from 'routes/settings/costModels/costModel/costCalc.styles';\nimport { createMapStateToProps } from 'store/common';\nimport { countDecimals, isPercentageFormatValid } from 'utils/format';\nimport { CostModelContext } from './context';\nimport { styles } from './wizard.styles';\nclass MarkupWithDistributionBase extends React.Component {\n    render() {\n        const { intl } = this.props;\n        const handleOnKeyDown = event => {\n            // Prevent 'enter', '+', and '-'\n            if (event.keyCode === 13 || event.keyCode === 187 || event.keyCode === 189) {\n                event.preventDefault();\n            }\n        };\n        const markupValidator = value => {\n            if (!isPercentageFormatValid(value)) {\n                return messages.markupOrDiscountNumber;\n            }\n            // Test number of decimals\n            const decimals = countDecimals(value);\n            if (decimals > 10) {\n                return messages.markupOrDiscountTooLong;\n            }\n            return undefined;\n        };\n        return (React.createElement(CostModelContext.Consumer, null, ({ handleSignChange, handleMarkupDiscountChange, markup, isDiscount }) => {\n            const helpText = markupValidator(markup);\n            const validated = helpText ? 'error' : 'default';\n            return (React.createElement(Stack, { hasGutter: true },\n                React.createElement(StackItem, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.xl, style: styles.titleWithLearnMore }, intl.formatMessage(messages.costCalculationsOptional)),\n                    React.createElement(\"a\", { href: intl.formatMessage(messages.docsCostModelsMarkup), rel: \"noreferrer\", target: \"_blank\" }, intl.formatMessage(messages.learnMore))),\n                React.createElement(StackItem, null,\n                    React.createElement(Title, { headingLevel: \"h3\", size: TitleSizes.md }, intl.formatMessage(messages.markupOrDiscount)),\n                    React.createElement(TextContent, null,\n                        React.createElement(Text, null, intl.formatMessage(messages.markupOrDiscountModalDesc)))),\n                React.createElement(StackItem, null,\n                    React.createElement(Flex, { style: costCalcStyles.markupRadioContainer },\n                        React.createElement(Flex, { direction: { default: 'column' }, alignSelf: { default: 'alignSelfCenter' } },\n                            React.createElement(FlexItem, null,\n                                React.createElement(Radio, { isChecked: !isDiscount, name: \"discount\", label: intl.formatMessage(messages.markupPlus), \"aria-label\": intl.formatMessage(messages.markupPlus), id: \"markup\", value: \"false\" // \"+\"\n                                    , onChange: handleSignChange, style: costCalcStyles.markupRadio }),\n                                React.createElement(Radio, { isChecked: isDiscount, name: \"discount\", label: intl.formatMessage(messages.discountMinus), \"aria-label\": intl.formatMessage(messages.discountMinus), id: \"discount\", value: \"true\" // '-'\n                                    , onChange: handleSignChange }))),\n                        React.createElement(Flex, { direction: { default: 'column' }, alignSelf: { default: 'alignSelfCenter' } },\n                            React.createElement(FlexItem, null,\n                                React.createElement(Form, null,\n                                    React.createElement(FormGroup, { fieldId: \"markup-input-box\", helperTextInvalid: helpText ? intl.formatMessage(helpText) : undefined, style: costCalcStyles.rateContainer, validated: validated },\n                                        React.createElement(InputGroup, null,\n                                            React.createElement(InputGroupText, { style: costCalcStyles.sign }, isDiscount\n                                                ? intl.formatMessage(messages.discountMinus)\n                                                : intl.formatMessage(messages.markupPlus)),\n                                            React.createElement(TextInput, { \"aria-label\": intl.formatMessage(messages.rate), id: \"markup-input-box\", isRequired: true, onKeyDown: handleOnKeyDown, onChange: handleMarkupDiscountChange, placeholder: '0', style: costCalcStyles.inputField, type: \"text\", validated: validated, value: markup }),\n                                            React.createElement(InputGroupText, { style: costCalcStyles.percent }, intl.formatMessage(messages.percentSymbol))))))))),\n                React.createElement(StackItem, null,\n                    React.createElement(\"div\", { style: costCalcStyles.exampleMargin },\n                        React.createElement(TextContent, null,\n                            React.createElement(Text, { component: TextVariants.h3 }, intl.formatMessage(messages.examplesTitle))),\n                        React.createElement(List, null,\n                            React.createElement(ListItem, null, intl.formatMessage(messages.costModelsExamplesNoAdjust)),\n                            React.createElement(ListItem, null, intl.formatMessage(messages.costModelsExamplesDoubleMarkup)),\n                            React.createElement(ListItem, null, intl.formatMessage(messages.costModelsExamplesReduceZero)),\n                            React.createElement(ListItem, null, intl.formatMessage(messages.costModelsExamplesReduceSeventyfive)))))));\n        }));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst MarkupWithDistribution = injectIntl(connect(mapStateToProps, {})(MarkupWithDistributionBase));\nexport default MarkupWithDistribution;\n","import { ActionGroup, Button, ButtonVariant, Form, Stack, StackItem, Text, TextContent, TextVariants, Title, TitleSizes, } from '@patternfly/react-core';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { canSubmit as isReadyForSubmit, RateForm, useRateData } from 'routes/settings/costModels/components/rateForm';\nimport { CostModelContext } from 'routes/settings/costModels/costModelWizard/context';\nconst AddPriceList = ({ cancel, currencyUnits, intl = defaultIntl, // Default required for testing\nmetricsHash, submitRate, }) => {\n    const { tiers } = React.useContext(CostModelContext);\n    const rateFormData = useRateData(metricsHash, undefined, tiers);\n    const canSubmit = React.useMemo(() => isReadyForSubmit(rateFormData), [rateFormData.errors, rateFormData.rateKind]);\n    return (React.createElement(Stack, { hasGutter: true },\n        React.createElement(StackItem, null,\n            React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.xl }, intl.formatMessage(messages.costModelsWizardCreatePriceList))),\n        React.createElement(StackItem, null,\n            React.createElement(TextContent, null,\n                React.createElement(Text, { component: TextVariants.h3 }, intl.formatMessage(messages.costModelsWizardPriceListMetric)))),\n        React.createElement(StackItem, null,\n            React.createElement(Form, null,\n                React.createElement(RateForm, { currencyUnits: currencyUnits, metricsHash: metricsHash, rateFormData: rateFormData }))),\n        React.createElement(StackItem, null,\n            React.createElement(ActionGroup, null,\n                React.createElement(Button, { variant: ButtonVariant.primary, isDisabled: !canSubmit, onClick: () => submitRate(rateFormData) }, intl.formatMessage(messages.createRate)),\n                React.createElement(Button, { variant: ButtonVariant.link, onClick: cancel }, intl.formatMessage(messages.cancel))))));\n};\nexport default injectIntl(AddPriceList);\n","import { Pagination, Toolbar, ToolbarContent, ToolbarItem } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nexport const PaginationToolbarTemplateBase = ({ id, intl, itemCount, perPage, page, variant, onPerPageSelect, onSetPage, }) => {\n    return (React.createElement(Toolbar, { id: id },\n        React.createElement(ToolbarContent, null,\n            React.createElement(ToolbarItem, { variant: \"pagination\" },\n                React.createElement(Pagination, { variant: variant, itemCount: itemCount, perPage: perPage, page: page, onSetPage: onSetPage, onPerPageSelect: onPerPageSelect, titles: {\n                        paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                            title: intl.formatMessage(messages.createCostModelTitle),\n                            placement: 'bottom',\n                        }),\n                    } })))));\n};\nexport const PaginationToolbarTemplate = injectIntl(PaginationToolbarTemplateBase);\n","import { Bullseye, Button, EmptyState, EmptyStateBody, EmptyStateIcon, Pagination, Stack, StackItem, Text, TextContent, Title, TitleSizes, } from '@patternfly/react-core';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { SortByDirection } from '@patternfly/react-table';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { WithPriceListSearch } from 'routes/settings/costModels/components/hoc/withPriceListSearch';\nimport { PaginationToolbarTemplate } from 'routes/settings/costModels/components/paginationToolbarTemplate';\nimport { PriceListToolbar } from 'routes/settings/costModels/components/priceListToolbar';\nimport { compareBy } from 'routes/settings/costModels/components/rateForm/utils';\nimport { RateTable } from 'routes/settings/costModels/components/rateTable';\nimport { CheckboxSelector } from 'routes/settings/costModels/components/toolbar/checkboxSelector';\nimport { PrimarySelector } from 'routes/settings/costModels/components/toolbar/primarySelector';\nimport { createMapStateToProps } from 'store/common';\nimport { metricsSelectors } from 'store/metrics';\nimport { unitsLookupKey } from 'utils/format';\nimport { CostModelContext } from './context';\nclass PriceListTable extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            metrics: [],\n            measurements: [],\n            sortBy: {\n                index: 0,\n                direction: SortByDirection.asc,\n            },\n        };\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { addRateAction, deleteRateAction, intl, items, metricsHash } = this.props;\n        const getMetricLabel = m => {\n            // Match message descriptor or default to API string\n            const value = m.replace(/ /g, '_').toLowerCase();\n            const label = intl.formatMessage(messages.metricValues, { value });\n            return label ? label : m;\n        };\n        const getMeasurementLabel = m => {\n            // Match message descriptor or default to API string\n            const label = intl.formatMessage(messages.measurementValues, {\n                value: m.toLowerCase().replace('-', '_'),\n                count: 1,\n            });\n            return label ? label : m;\n        };\n        const metricOpts = Object.keys(metricsHash).map(m => ({\n            label: getMetricLabel(m),\n            value: m,\n        }));\n        const measurementOpts = metricOpts.reduce((acc, curr) => {\n            const measurs = Object.keys(metricsHash[curr.value])\n                .filter(m => !acc.map(i => i.value).includes(m))\n                .map(m => ({ label: getMeasurementLabel(m), value: m }));\n            return [...acc, ...measurs];\n        }, []);\n        const NoTiersEmptyState = () => (React.createElement(Bullseye, null,\n            React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: PlusCircleIcon }),\n                React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, intl.formatMessage(messages.costModelsWizardEmptyStateTitle)),\n                React.createElement(EmptyStateBody, null,\n                    intl.formatMessage(messages.costModelsWizardEmptyStateSkipStep, {\n                        value: React.createElement(\"strong\", null, intl.formatMessage(messages.next)),\n                    }),\n                    React.createElement(\"br\", null),\n                    intl.formatMessage(messages.costModelsWizardEmptyStateOtherTime)))));\n        return (React.createElement(CostModelContext.Consumer, null, ({ priceListPagination }) => {\n            return (React.createElement(Stack, { hasGutter: true },\n                React.createElement(StackItem, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.xl }, intl.formatMessage(messages.costModelsWizardCreatePriceList))),\n                React.createElement(StackItem, null,\n                    React.createElement(TextContent, null,\n                        React.createElement(Text, null, intl.formatMessage(messages.costModelsWizardSubTitleTable)))),\n                React.createElement(StackItem, null,\n                    React.createElement(WithPriceListSearch, { initialFilters: {\n                            primary: 'metrics',\n                            metrics: [],\n                            measurements: [],\n                        } }, ({ search, setSearch, onRemove, onSelect, onClearAll }) => {\n                        const getMetric = value => intl.formatMessage(messages.metricValues, { value }) || value;\n                        const getMeasurement = (measurement, units) => {\n                            units = intl.formatMessage(messages.units, { units: unitsLookupKey(units) }) || units;\n                            return intl.formatMessage(messages.measurementValues, {\n                                value: measurement.toLowerCase().replace('-', '_'),\n                                units,\n                                count: 2,\n                            });\n                        };\n                        const from = (priceListPagination.page - 1) * priceListPagination.perPage;\n                        const to = priceListPagination.page * priceListPagination.perPage;\n                        const filtered = items\n                            .map((item, index) => {\n                            return Object.assign(Object.assign({}, item), { stateIndex: index });\n                        })\n                            .filter(rate => search.metrics.length === 0 || search.metrics.includes(rate.metric.label_metric))\n                            .filter(rate => search.measurements.length === 0 ||\n                            search.measurements.includes(rate.metric.label_measurement))\n                            .sort((r1, r2) => {\n                            const projection = this.state.sortBy.index === 1\n                                ? (r) => getMetric(r.metric.label_metric)\n                                : this.state.sortBy.index === 2\n                                    ? (r) => getMeasurement(r.metric.label_measurement, r.metric.label_measurement_unit)\n                                    : () => '';\n                            return compareBy(r1, r2, this.state.sortBy.direction, projection);\n                        });\n                        const res = filtered.slice(from, to);\n                        return (React.createElement(React.Fragment, null,\n                            React.createElement(PriceListToolbar, { primary: React.createElement(PrimarySelector, { isDisabled: items.length === 0, primary: search.primary, setPrimary: (primary) => setSearch({ primary }), options: [\n                                        {\n                                            label: intl.formatMessage(messages.metric),\n                                            value: 'metrics',\n                                        },\n                                        {\n                                            label: intl.formatMessage(messages.measurement),\n                                            value: 'measurements',\n                                        },\n                                    ] }), selected: search.primary, secondaries: [\n                                    {\n                                        component: (React.createElement(CheckboxSelector, { isDisabled: items.length === 0, placeholderText: intl.formatMessage(messages.toolBarPriceListMeasurementPlaceHolder), selections: search.measurements, setSelections: (selection) => onSelect('measurements', selection), options: measurementOpts })),\n                                        name: 'measurements',\n                                        onRemove,\n                                        filters: search.measurements,\n                                    },\n                                    {\n                                        component: (React.createElement(CheckboxSelector, { isDisabled: items.length === 0, placeholderText: intl.formatMessage(messages.toolBarPriceListMetricPlaceHolder), selections: search.metrics, setSelections: (selection) => onSelect('metrics', selection), options: metricOpts })),\n                                        name: 'metrics',\n                                        onRemove,\n                                        filters: search.metrics,\n                                    },\n                                ], button: React.createElement(Button, { onClick: addRateAction }, intl.formatMessage(messages.createRate)), onClear: onClearAll, pagination: React.createElement(Pagination, { isCompact: true, itemCount: filtered.length, perPage: priceListPagination.perPage, page: priceListPagination.page, onSetPage: priceListPagination.onPageSet, onPerPageSelect: priceListPagination.onPerPageSet, titles: {\n                                        paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                                            title: intl.formatMessage(messages.costModelsAssignSourcesParen),\n                                            placement: 'top',\n                                        }),\n                                    } }) }),\n                            res.length === 0 &&\n                                (this.state.metrics.length !== 0 || this.state.measurements.length !== 0) && (React.createElement(Bullseye, null,\n                                React.createElement(EmptyFilterState, null))),\n                            res.length === 0 &&\n                                this.state.metrics.length === 0 &&\n                                this.state.measurements.length === 0 && React.createElement(NoTiersEmptyState, null),\n                            res.length > 0 && (React.createElement(RateTable, { actions: [\n                                    {\n                                        title: intl.formatMessage(messages.remove),\n                                        onClick: (_evt, _rowId, rowData) => {\n                                            deleteRateAction(rowData.data.stateIndex);\n                                        },\n                                    },\n                                ], tiers: res, sortCallback: e => {\n                                    this.setState(Object.assign(Object.assign({}, this.state), { sortBy: Object.assign({}, e) }));\n                                } })),\n                            React.createElement(PaginationToolbarTemplate, { isCompact: true, itemCount: filtered.length, perPage: priceListPagination.perPage, page: priceListPagination.page, onSetPage: priceListPagination.onPageSet, onPerPageSelect: priceListPagination.onPerPageSet, titles: {\n                                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                                        title: intl.formatMessage(messages.costModelsAssignSourcesParen),\n                                        placement: 'bottom',\n                                    }),\n                                } })));\n                    }))));\n        }));\n    }\n}\nexport default connect(createMapStateToProps(state => ({\n    metricsHash: metricsSelectors.metrics(state),\n})))(injectIntl(PriceListTable));\n","import React from 'react';\nimport AddPriceList from 'routes/settings/costModels/components/addPriceList';\nimport { transformFormDataToRequest } from 'routes/settings/costModels/components/rateForm/index';\nimport { CostModelContext } from './context';\nimport PriceListTable from './priceListTable';\nconst PriceList = () => {\n    const { currencyUnits, goToAddPL, metricsHash, tiers, submitTiers } = React.useContext(CostModelContext);\n    const [state, setState] = React.useState('table');\n    const submit = (rate) => {\n        submitTiers([...tiers, rate]);\n        setState('table');\n        goToAddPL(true);\n    };\n    if (state === 'table') {\n        return (React.createElement(PriceListTable, { items: tiers, deleteRateAction: (index) => {\n                const items = [...tiers.slice(0, index), ...tiers.slice(index + 1)];\n                submitTiers(items);\n                if (items.length === 0) {\n                    goToAddPL(true);\n                }\n            }, addRateAction: () => {\n                setState('form');\n                goToAddPL(false);\n            } }));\n    }\n    if (state === 'form') {\n        return (React.createElement(AddPriceList, { currencyUnits: currencyUnits, metricsHash: metricsHash, submitRate: (rateFormData) => {\n                const rate = transformFormDataToRequest(rateFormData, metricsHash, currencyUnits);\n                submit(rate);\n            }, cancel: () => {\n                setState('table');\n                goToAddPL(true);\n            } }));\n    }\n    return null;\n};\nexport default PriceList;\n","import { Alert, Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateSecondaryActions, Stack, StackItem, Text, TextContent, TextList, TextListItem, TextListItemVariants, TextListVariants, Title, TitleSizes, } from '@patternfly/react-core';\nimport { OkIcon } from '@patternfly/react-icons/dist/esm/icons/ok-icon';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { RateTable } from 'routes/settings/costModels/components/rateTable';\nimport { WarningIcon } from 'routes/settings/costModels/components/warningIcon';\nimport { createMapStateToProps } from 'store/common';\nimport { CostModelContext } from './context';\nconst ReviewSuccessBase = ({ intl }) => (React.createElement(CostModelContext.Consumer, null, ({ onClose, name }) => (React.createElement(EmptyState, null,\n    React.createElement(EmptyStateIcon, { icon: OkIcon, color: \"green\" }),\n    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, intl.formatMessage(messages.costModelsWizardReviewStatusTitle)),\n    React.createElement(EmptyStateBody, null, intl.formatMessage(messages.costModelsWizardReviewStatusSubTitle, { value: name })),\n    React.createElement(EmptyStateSecondaryActions, null,\n        React.createElement(Button, { variant: \"link\", onClick: onClose }, intl.formatMessage(messages.close)))))));\nconst ReviewSuccess = injectIntl(ReviewSuccessBase);\nconst ReviewDetailsBase = ({ intl }) => (React.createElement(CostModelContext.Consumer, null, ({ checked, createError, currencyUnits, description, distribution, distributePlatformUnallocated, distributeWorkerUnallocated, isDiscount, markup, name, tiers, type, }) => {\n    const selectedSources = Object.keys(checked)\n        .filter(key => checked[key].selected)\n        .map(key => checked[key].meta);\n    return (React.createElement(React.Fragment, null,\n        createError && React.createElement(Alert, { variant: \"danger\", title: `${createError}` }),\n        React.createElement(Stack, { hasGutter: true },\n            React.createElement(StackItem, null,\n                React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.xl }, intl.formatMessage(messages.costModelsWizardStepsReview))),\n            React.createElement(StackItem, null,\n                React.createElement(TextContent, null,\n                    React.createElement(Text, null, intl.formatMessage(messages.costModelsWizardReviewStatusSubDetails, {\n                        create: React.createElement(\"strong\", null, intl.formatMessage(messages.create)),\n                        back: React.createElement(\"strong\", null, intl.formatMessage(messages.back)),\n                    })))),\n            React.createElement(StackItem, null,\n                React.createElement(TextContent, null,\n                    React.createElement(TextList, { component: TextListVariants.dl },\n                        React.createElement(TextListItem, { component: TextListItemVariants.dt }, intl.formatMessage(messages.names, { count: 1 })),\n                        React.createElement(TextListItem, { component: TextListItemVariants.dd }, name),\n                        React.createElement(TextListItem, { component: TextListItemVariants.dt }, intl.formatMessage(messages.description)),\n                        React.createElement(TextListItem, { component: TextListItemVariants.dd }, description),\n                        React.createElement(TextListItem, { component: TextListItemVariants.dt }, intl.formatMessage(messages.currency)),\n                        React.createElement(TextListItem, { component: TextListItemVariants.dd }, intl.formatMessage(messages.currencyOptions, { units: currencyUnits })),\n                        type === 'OCP' && (React.createElement(React.Fragment, null,\n                            React.createElement(TextListItem, { component: TextListItemVariants.dt }, intl.formatMessage(messages.priceList)),\n                            React.createElement(TextListItem, { component: TextListItemVariants.dd }, tiers.length > 0 ? (React.createElement(RateTable, { tiers: tiers })) : (intl.formatMessage(messages.costModelsWizardNoRatesAdded))))),\n                        React.createElement(TextListItem, { component: TextListItemVariants.dt }, intl.formatMessage(messages.costModelsWizardReviewMarkDiscount)),\n                        React.createElement(TextListItem, { component: TextListItemVariants.dd }, intl.formatMessage(messages.percent, { value: isDiscount ? '-' + markup : markup })),\n                        type === 'OCP' && (React.createElement(React.Fragment, null,\n                            React.createElement(TextListItem, { component: TextListItemVariants.dt }, intl.formatMessage(messages.costDistribution)),\n                            React.createElement(TextListItem, { component: TextListItemVariants.dd }, intl.formatMessage(messages.distributionTypeDesc, { type: distribution })),\n                            React.createElement(TextListItem, { component: TextListItemVariants.dd }, intl.formatMessage(messages.distributeCosts, {\n                                value: distributePlatformUnallocated,\n                                type: 'platform',\n                            })),\n                            React.createElement(TextListItem, { component: TextListItemVariants.dd }, intl.formatMessage(messages.distributeCosts, {\n                                value: distributeWorkerUnallocated,\n                                type: 'worker',\n                            })))),\n                        React.createElement(TextListItem, { component: TextListItemVariants.dt },\n                            intl.formatMessage(messages.costModelsAssignSources, { count: 2 }),\n                            ' ',\n                            selectedSources.find(src => Boolean(src.costmodel)) && (React.createElement(WarningIcon, { text: intl.formatMessage(messages.costModelsWizardWarningSources) }))),\n                        React.createElement(TextListItem, { component: TextListItemVariants.dd }, selectedSources.map(r => r.name).join(', '))))))));\n}));\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst ReviewDetails = injectIntl(connect(mapStateToProps, {})(ReviewDetailsBase));\nconst ReviewWithDistribution = () => {\n    return (React.createElement(CostModelContext.Consumer, null, ({ createSuccess }) => {\n        if (!createSuccess) {\n            return React.createElement(ReviewDetails, null);\n        }\n        return React.createElement(ReviewSuccess, null);\n    }));\n};\nexport default ReviewWithDistribution;\n","import { InputGroup, InputGroupText, Pagination, TextInput, Toolbar, ToolbarContent, ToolbarFilter, ToolbarItem, ToolbarToggleGroup, } from '@patternfly/react-core';\nimport { FilterIcon } from '@patternfly/react-icons/dist/esm/icons/filter-icon';\nimport { SearchIcon } from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nconst FilterInput = ({ id, placeholder = '', value, onChange, onSearch }) => {\n    return (React.createElement(InputGroup, null,\n        React.createElement(TextInput, { value: value, placeholder: placeholder, id: id, onChange: onChange, onKeyPress: (evt) => {\n                if (evt.key !== 'Enter' || value === '') {\n                    return;\n                }\n                onSearch(evt);\n            } }),\n        React.createElement(InputGroupText, { style: { borderLeft: '0' } },\n            React.createElement(SearchIcon, null))));\n};\nexport const AssignSourcesToolbarBase = ({ intl, filterInputProps, paginationProps, filter, }) => {\n    return (React.createElement(Toolbar, { id: \"assign-sources-toolbar\", clearAllFilters: filter.onClearAll },\n        React.createElement(ToolbarContent, null,\n            React.createElement(ToolbarToggleGroup, { breakpoint: \"xl\", toggleIcon: React.createElement(FilterIcon, null) },\n                React.createElement(ToolbarItem, { variant: \"search-filter\" },\n                    React.createElement(ToolbarFilter, { deleteChip: filter.onRemove, chips: filter.query.name, categoryName: \"name\" },\n                        React.createElement(FilterInput, Object.assign({ placeholder: intl.formatMessage(messages.costModelsFilterPlaceholder) }, filterInputProps))))),\n            React.createElement(ToolbarItem, { variant: \"pagination\" },\n                React.createElement(Pagination, { isCompact: paginationProps.isCompact, itemCount: paginationProps.itemCount, page: paginationProps.page, perPage: paginationProps.perPage, onSetPage: paginationProps.onSetPage, onPerPageSelect: paginationProps.onPerPageSelect, titles: {\n                        paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                            title: intl.formatMessage(messages.costModelsAssignSourcesParen),\n                            placement: 'bottom',\n                        }),\n                    } })))));\n};\nexport const AssignSourcesToolbar = injectIntl(AssignSourcesToolbarBase);\n","import { Checkbox, Stack, StackItem, Text, TextContent, TextVariants, Title, TitleSizes } from '@patternfly/react-core';\nimport { TableComposable, TableVariant, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { LoadingState } from 'routes/components/state/loadingState';\nimport { addMultiValueQuery, removeMultiValueQuery } from 'routes/settings/costModels/components/filterLogic';\nimport { PaginationToolbarTemplate } from 'routes/settings/costModels/components/paginationToolbarTemplate';\nimport { WarningIcon } from 'routes/settings/costModels/components/warningIcon';\nimport { AssignSourcesToolbar } from './assignSourcesToolbar';\nimport { CostModelContext } from './context';\nconst SourcesTable = ({ intl }) => {\n    return (React.createElement(CostModelContext.Consumer, null, ({ checked, loading, onSourceSelect, sources, perPage, page, type, query, fetchSources, filterName, onFilterChange, }) => {\n        const sourceType = type === 'Azure' ? 'Azure' : type;\n        const itemCount = sources.length > 0 ? sources[0].meta.count : 0;\n        return (React.createElement(Stack, { hasGutter: true },\n            React.createElement(StackItem, null,\n                React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.xl }, intl.formatMessage(messages.costModelsWizardSourceTitle))),\n            React.createElement(StackItem, null,\n                React.createElement(TextContent, null,\n                    React.createElement(Text, null, intl.formatMessage(messages.costModelsWizardSourceSubtitle)))),\n            React.createElement(StackItem, null,\n                React.createElement(TextContent, null,\n                    React.createElement(Text, { component: TextVariants.h3 }, intl.formatMessage(messages.costModelsWizardSourceCaption, {\n                        value: type.toLowerCase(),\n                    })))),\n            React.createElement(StackItem, null,\n                React.createElement(AssignSourcesToolbar, { filter: {\n                        onRemove: (category, chip) => fetchSources(sourceType, removeMultiValueQuery(query)(category, chip), 1, perPage),\n                        onClearAll: () => fetchSources(sourceType, {}, 1, perPage),\n                        query,\n                    }, filterInputProps: {\n                        id: 'assign-source-search-input',\n                        value: filterName,\n                        onChange: onFilterChange,\n                        onSearch: () => {\n                            fetchSources(sourceType, addMultiValueQuery(query)('name', filterName), 1, perPage);\n                        },\n                    }, paginationProps: {\n                        isCompact: true,\n                        itemCount,\n                        perPage,\n                        page,\n                        onSetPage: (_evt, newPage) => {\n                            fetchSources(sourceType, query, newPage, perPage);\n                        },\n                        onPerPageSelect: (_evt, newPerPage) => fetchSources(sourceType, query, 1, newPerPage),\n                    } }),\n                loading ? (React.createElement(LoadingState, null)) : (React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.costModelsWizardSourceTableAriaLabel), variant: TableVariant.compact },\n                    React.createElement(Thead, null,\n                        React.createElement(Tr, null, [\n                            '',\n                            intl.formatMessage(messages.names, { count: 1 }),\n                            intl.formatMessage(messages.costModelsWizardSourceTableCostModel),\n                        ].map((c, i) => (React.createElement(Th, { key: i }, c))))),\n                    React.createElement(Tbody, null, sources.map((row, rowIndex) => (React.createElement(Tr, { key: rowIndex },\n                        React.createElement(Td, null,\n                            React.createElement(Checkbox, { onChange: isChecked => {\n                                    onSourceSelect(rowIndex, isChecked);\n                                }, id: row.name, key: row.name, \"aria-label\": intl.formatMessage(messages.selectRow, { value: rowIndex }), isChecked: checked[row.uuid] && checked[row.uuid].selected, isDisabled: Boolean(row.costmodel) })),\n                        React.createElement(Td, null,\n                            row.name,\n                            ' ',\n                            row.costmodel && (React.createElement(WarningIcon, { key: `wrng-${row.name}`, text: intl.formatMessage(messages.costModelsWizardSourceWarning, {\n                                    costModel: row.costmodel,\n                                }) }))),\n                        React.createElement(Td, null, row.costmodel ? row.costmodel : ''))))))),\n                React.createElement(PaginationToolbarTemplate, { itemCount: itemCount, perPage: perPage, page: page, titles: {\n                        paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                            title: intl.formatMessage(messages.sources),\n                            placement: 'bottom',\n                        }),\n                    }, onSetPage: (_evt, newPage) => {\n                        fetchSources(sourceType, query, newPage, perPage);\n                    }, onPerPageSelect: (_evt, newPerPage) => fetchSources(sourceType, query, 1, newPerPage) }))));\n    }));\n};\nexport default injectIntl(SourcesTable);\n","import React from 'react';\nimport { LoadingState } from 'routes/components/state/loadingState';\nimport { SourceStepErrorState } from 'routes/settings/costModels/components/errorState';\nimport { CostModelContext } from './context';\nimport SourcesTable from './table';\nclass Sources extends React.Component {\n    constructor(props) {\n        super(props);\n        this.fetchData = () => null;\n        this.fetchData = () => {\n            const { type, query, page, perPage, fetchSources } = this.context;\n            const sourceType = type === 'Azure' ? 'Azure' : type;\n            fetchSources(sourceType, query, page, perPage);\n        };\n    }\n    componentDidMount() {\n        const { dataFetched } = this.context;\n        if (dataFetched) {\n            return;\n        }\n        this.fetchData();\n    }\n    renderContent() {\n        if (this.context.loading) {\n            return React.createElement(LoadingState, null);\n        }\n        if (this.context.apiError) {\n            return React.createElement(SourceStepErrorState, { onRefresh: this.fetchData });\n        }\n        return React.createElement(SourcesTable, null);\n    }\n    render() {\n        return this.renderContent();\n    }\n}\nSources.contextType = CostModelContext;\nexport default Sources;\n","import { Title, TitleSizes, Wizard } from '@patternfly/react-core';\nimport { Button, Modal } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport { addCostModel } from 'api/costModels';\nimport messages from 'locales/messages';\nimport { cloneDeep } from 'lodash';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nimport { metricsSelectors } from 'store/metrics';\nimport { unFormat } from 'utils/format';\nimport { getAccountCurrency } from 'utils/localStorage';\nimport { fetchSources as apiSources } from './api';\nimport { CostModelContext } from './context';\nimport Distribution from './distribution';\nimport GeneralInformation from './generalInformation';\nimport Markup from './markup';\nimport { parseApiError } from './parseError';\nimport PriceList from './priceList';\nimport Review from './review';\nimport Sources from './sources';\nimport { validatorsHash } from './steps';\n// Update tiers currency\nconst updateTiersCurrency = (tiers, currencyUnits = 'USD') => {\n    const rates = cloneDeep(tiers);\n    rates.map(val => {\n        if (val.tiered_rates) {\n            for (const rate of val.tiered_rates) {\n                rate.unit = currencyUnits;\n                rate.usage.unit = currencyUnits;\n            }\n        }\n        if (val.tag_rates) {\n            for (const rate of val.tag_rates.tag_values) {\n                rate.unit = currencyUnits;\n            }\n        }\n    });\n    return rates;\n};\nconst InternalWizardBase = ({ intl, isProcess, isSuccess, closeFnc, isOpen, onMove, validators, steps, current = 1, context, setError, setSuccess, updateCostModel, }) => {\n    const newSteps = steps.map((step, ix) => {\n        return Object.assign(Object.assign({}, step), { canJumpTo: current > ix });\n    });\n    newSteps[current - 1].enableNext = validators[current - 1](context);\n    const isAddingRate = context.type === 'OCP' && current === 2 && !validators[current - 1](context);\n    if (current === steps.length && context.type !== '') {\n        newSteps[current - 1].nextButtonText = intl.formatMessage(messages.create);\n    }\n    return isOpen ? (React.createElement(Wizard, { isOpen: true, title: intl.formatMessage(messages.createCostModelTitle), description: intl.formatMessage(messages.createCostModelDesc), steps: newSteps, startAtStep: current, onNext: onMove, onBack: onMove, onGoToStep: onMove, onClose: closeFnc, footer: isSuccess || isProcess || isAddingRate ? React.createElement(\"div\", null) : null, onSave: () => {\n            const { currency, description, distribution, distributePlatformUnallocated, distributeWorkerUnallocated, isDiscount, markup, name, type, tiers, sources, } = context;\n            addCostModel({\n                name,\n                source_type: type,\n                currency,\n                description,\n                distribution_info: {\n                    distribution_type: distribution,\n                    platform_cost: distributePlatformUnallocated,\n                    worker_cost: distributeWorkerUnallocated,\n                },\n                rates: tiers,\n                markup: {\n                    value: `${isDiscount ? '-' : ''}${unFormat(markup)}`,\n                    unit: 'percent',\n                },\n                source_uuids: sources.map(src => src.uuid),\n            })\n                .then(() => {\n                setSuccess();\n                updateCostModel();\n            })\n                .catch(err => setError(parseApiError(err)));\n        } })) : null;\n};\nconst InternalWizard = injectIntl(InternalWizardBase);\nclass CostModelWizardBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            apiError: null,\n            checked: {},\n            createError: null,\n            createProcess: false,\n            createSuccess: false,\n            currencyUnits: getAccountCurrency(),\n            dataFetched: false,\n            dirtyName: false,\n            description: '',\n            distribution: 'cpu',\n            distributePlatformUnallocated: true,\n            distributeWorkerUnallocated: true,\n            error: null,\n            filterName: '',\n            isDialogOpen: false,\n            isDiscount: false,\n            loading: false,\n            markup: '0',\n            name: '',\n            page: 1,\n            perPage: 10,\n            priceListCurrent: {\n                metric: '',\n                measurement: '',\n                rate: '',\n                justSaved: true,\n            },\n            priceListPagination: {\n                page: 1,\n                perPage: 10,\n            },\n            query: {},\n            sources: [],\n            step: 1,\n            tiers: [],\n            total: 0,\n            type: '',\n        };\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { metricsHash, intl } = this.props;\n        /*\n         */\n        const closeConfirmDialog = () => {\n            this.setState({ isDialogOpen: false }, this.props.openWizard);\n        };\n        const stepsHash = () => ({\n            '': [\n                {\n                    id: 1,\n                    name: intl.formatMessage(messages.costModelsWizardStepsGenInfo),\n                    component: React.createElement(GeneralInformation, null),\n                },\n            ],\n            Azure: [\n                {\n                    id: 1,\n                    name: intl.formatMessage(messages.costModelsWizardStepsGenInfo),\n                    component: React.createElement(GeneralInformation, null),\n                },\n                {\n                    id: 2,\n                    name: intl.formatMessage(messages.costCalculations),\n                    component: React.createElement(Markup, null),\n                },\n                {\n                    id: 3,\n                    name: intl.formatMessage(messages.costModelsWizardStepsSources),\n                    component: React.createElement(Sources, null),\n                },\n                {\n                    id: 4,\n                    name: intl.formatMessage(messages.costModelsWizardStepsReview),\n                    component: React.createElement(Review, null),\n                },\n            ],\n            AWS: [\n                {\n                    id: 1,\n                    name: intl.formatMessage(messages.costModelsWizardStepsGenInfo),\n                    component: React.createElement(GeneralInformation, null),\n                },\n                {\n                    id: 2,\n                    name: intl.formatMessage(messages.costCalculations),\n                    component: React.createElement(Markup, null),\n                },\n                {\n                    id: 3,\n                    name: intl.formatMessage(messages.costModelsWizardStepsSources),\n                    component: React.createElement(Sources, null),\n                },\n                {\n                    id: 4,\n                    name: intl.formatMessage(messages.costModelsWizardStepsReview),\n                    component: React.createElement(Review, null),\n                },\n            ],\n            GCP: [\n                {\n                    id: 1,\n                    name: intl.formatMessage(messages.costModelsWizardStepsGenInfo),\n                    component: React.createElement(GeneralInformation, null),\n                },\n                {\n                    id: 2,\n                    name: intl.formatMessage(messages.costCalculations),\n                    component: React.createElement(Markup, null),\n                },\n                {\n                    id: 3,\n                    name: intl.formatMessage(messages.costModelsWizardStepsSources),\n                    component: React.createElement(Sources, null),\n                },\n                {\n                    id: 4,\n                    name: intl.formatMessage(messages.costModelsWizardStepsReview),\n                    component: React.createElement(Review, null),\n                },\n            ],\n            OCP: [\n                {\n                    id: 1,\n                    name: intl.formatMessage(messages.costModelsWizardStepsGenInfo),\n                    component: React.createElement(GeneralInformation, null),\n                },\n                {\n                    id: 2,\n                    name: intl.formatMessage(messages.priceList),\n                    component: React.createElement(PriceList, null),\n                },\n                {\n                    id: 3,\n                    name: intl.formatMessage(messages.costCalculations),\n                    component: React.createElement(Markup, null),\n                },\n                {\n                    id: 4,\n                    name: intl.formatMessage(messages.costDistribution),\n                    component: React.createElement(Distribution, null),\n                },\n                {\n                    id: 5,\n                    name: intl.formatMessage(messages.costModelsWizardStepsSources),\n                    component: React.createElement(Sources, null),\n                },\n                {\n                    id: 6,\n                    name: intl.formatMessage(messages.costModelsWizardStepsReview),\n                    component: React.createElement(Review, null),\n                },\n            ],\n        });\n        const CancelButton = (React.createElement(Button, { key: \"cancel\", variant: \"link\", onClick: closeConfirmDialog }, intl.formatMessage(messages.createCostModelNoContinue)));\n        const OkButton = (React.createElement(Button, { key: \"ok\", variant: \"primary\", onClick: () => this.setState(Object.assign({}, this.defaultState)) }, intl.formatMessage(messages.createCostModelExitYes)));\n        return (React.createElement(CostModelContext.Provider, { value: {\n                apiError: this.state.apiError,\n                checked: this.state.checked,\n                clearQuery: () => this.setState({ query: {} }),\n                createError: this.state.createError,\n                createProcess: this.state.createProcess,\n                createSuccess: this.state.createSuccess,\n                currencyUnits: this.state.currencyUnits,\n                description: this.state.description,\n                dataFetched: this.state.dataFetched,\n                dirtyName: this.state.dirtyName,\n                distribution: this.state.distribution,\n                distributePlatformUnallocated: this.state.distributePlatformUnallocated,\n                distributeWorkerUnallocated: this.state.distributeWorkerUnallocated,\n                error: this.state.error,\n                filterName: this.state.filterName,\n                fetchSources: (type, query, page, perPage) => {\n                    this.setState({ loading: true, apiError: null, filterName: '' }, () => apiSources({ type, query, page, perPage })\n                        .then((resp) => this.setState({\n                        sources: resp,\n                        query,\n                        page,\n                        perPage,\n                        loading: false,\n                        dataFetched: true,\n                        filterName: '',\n                    }))\n                        .catch(err => this.setState({\n                        apiError: err,\n                        loading: false,\n                        dataFetched: true,\n                        filterName: '',\n                    })));\n                },\n                goToAddPL: (value) => this.setState({\n                    priceListCurrent: Object.assign(Object.assign({}, this.state.priceListCurrent), { justSaved: value ? value : false }),\n                }),\n                handleDistributionChange: (_, event) => {\n                    const { value } = event.currentTarget;\n                    this.setState({ distribution: value });\n                },\n                handleDistributePlatformUnallocatedChange: (_, event) => {\n                    const { value } = event.currentTarget;\n                    this.setState({ distributePlatformUnallocated: value === 'true' });\n                },\n                handleDistributeWorkerUnallocatedChange: (_, event) => {\n                    const { value } = event.currentTarget;\n                    this.setState({ distributeWorkerUnallocated: value === 'true' });\n                },\n                handleMarkupDiscountChange: (_, event) => {\n                    const { value } = event.currentTarget;\n                    this.setState({ markup: value });\n                },\n                handleSignChange: (_, event) => {\n                    const { value } = event.currentTarget;\n                    this.setState({ isDiscount: value === 'true' });\n                },\n                isDiscount: this.state.isDiscount,\n                loading: this.state.loading,\n                metricsHash,\n                onClose: () => this.setState(Object.assign({}, this.defaultState), this.props.closeWizard),\n                onCurrencyChange: value => this.setState({ currencyUnits: value, tiers: updateTiersCurrency(this.state.tiers, value) }),\n                onDescChange: value => this.setState({ description: value }),\n                onFilterChange: value => this.setState({ filterName: value }),\n                onNameChange: value => this.setState({ name: value, dirtyName: true }),\n                onPageChange: (_evt, page) => this.setState({ page }),\n                onPerPageChange: (_evt, perPage) => this.setState({ page: 1, perPage }),\n                onSourceSelect: (rowId, isSelected) => {\n                    if (rowId === -1) {\n                        const pageSelections = this.state.sources.map(s => ({\n                            [s.uuid]: { selected: isSelected, meta: s },\n                        }));\n                        const newState = Object.assign(Object.assign({}, this.state.checked), pageSelections);\n                        return this.setState({ checked: newState });\n                    }\n                    const newState = Object.assign(Object.assign({}, this.state.checked), { [this.state.sources[rowId].uuid]: {\n                            selected: isSelected,\n                            meta: this.state.sources[rowId],\n                        } });\n                    return this.setState({ checked: newState });\n                },\n                onTypeChange: value => this.setState({ type: value, dataFetched: false, loading: false }),\n                page: this.state.page,\n                priceListPagination: {\n                    page: this.state.priceListPagination.page,\n                    perPage: this.state.priceListPagination.perPage,\n                    onPageSet: (_evt, page) => this.setState({\n                        priceListPagination: Object.assign(Object.assign({}, this.state.priceListPagination), { page }),\n                    }),\n                    onPerPageSet: (_evt, perPage) => this.setState({\n                        priceListPagination: {\n                            page: 1,\n                            perPage,\n                        },\n                    }),\n                },\n                markup: this.state.markup,\n                name: this.state.name,\n                perPage: this.state.perPage,\n                query: this.state.query,\n                setSources: sources => this.setState({ sources, dataFetched: true, loading: false }),\n                sources: this.state.sources,\n                step: this.state.step,\n                submitTiers: (tiers) => {\n                    this.setState({\n                        tiers,\n                    });\n                },\n                tiers: this.state.tiers,\n                total: this.state.total,\n                type: this.state.type,\n            } },\n            React.createElement(InternalWizard, { metricsHash: metricsHash, isProcess: this.state.createProcess, isSuccess: this.state.createSuccess, closeFnc: () => {\n                    if ((this.state.type === 'OCP' && this.state.step > 1 && this.state.tiers.length > 0) ||\n                        (this.state.type !== 'OCP' && this.state.step > 2)) {\n                        this.setState({ isDialogOpen: true }, this.props.closeWizard);\n                    }\n                    else {\n                        this.setState(Object.assign({}, this.defaultState), this.props.closeWizard);\n                    }\n                }, isOpen: this.props.isOpen, onMove: curr => this.setState({ step: Number(curr.id) }), steps: stepsHash()[this.state.type], current: this.state.step, validators: validatorsHash[this.state.type], setError: errorMessage => this.setState({ createError: errorMessage }), setSuccess: () => this.setState({ createError: null, createSuccess: true }), updateCostModel: () => this.props.fetch(), context: {\n                    name: this.state.name,\n                    type: this.state.type,\n                    currency: this.state.currencyUnits,\n                    description: this.state.description,\n                    distribution: this.state.distribution,\n                    distributePlatformUnallocated: this.state.distributePlatformUnallocated,\n                    distributeWorkerUnallocated: this.state.distributeWorkerUnallocated,\n                    markup: `${this.state.isDiscount ? '-' : ''}${this.state.markup}`,\n                    tiers: this.state.tiers,\n                    priceListCurrent: this.state.priceListCurrent,\n                    sources: Object.keys(this.state.checked).map(key => this.state.checked[key].meta),\n                } }),\n            React.createElement(Modal, { \"aria-label\": intl.formatMessage(messages.createCostModelExit), isOpen: this.state.isDialogOpen, header: React.createElement(Title, { headingLevel: \"h1\", size: TitleSizes['2xl'] },\n                    React.createElement(ExclamationTriangleIcon, { color: \"orange\" }),\n                    \" \",\n                    intl.formatMessage(messages.createCostModelExit)), onClose: closeConfirmDialog, actions: [OkButton, CancelButton], variant: \"small\" }, intl.formatMessage(messages.createCostModelConfirmMsg))));\n    }\n}\nconst CostModelWizard = connect(createMapStateToProps(state => ({\n    metricsHash: metricsSelectors.metrics(state),\n})), { fetch: costModelsActions.fetchCostModels })(injectIntl(CostModelWizardBase));\nexport default CostModelWizard;\n","import { Button } from '@patternfly/react-core';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { ReadOnlyTooltip } from 'routes/settings/costModels/components/readOnlyTooltip';\nimport { CostModelWizard } from 'routes/settings/costModels/costModelWizard';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { rbacSelectors } from 'store/rbac';\nconst buttonMapStateToProps = (state) => {\n    return {\n        canWrite: rbacSelectors.isCostModelWritePermission(state),\n    };\n};\nconst buttonMapDispatchToProps = (dispatch) => {\n    return {\n        openWizard: () => dispatch(costModelsActions.setCostModelDialog({ name: 'createWizard', isOpen: true })),\n        closeWizard: () => dispatch(costModelsActions.setCostModelDialog({ name: 'createWizard', isOpen: false })),\n    };\n};\nconst buttonMergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { intl = defaultIntl } = ownProps; // Default required for testing\n    const { canWrite } = stateProps;\n    const { openWizard } = dispatchProps;\n    return {\n        isDisabled: !canWrite,\n        tooltip: intl.formatMessage(messages.costModelsReadOnly),\n        children: (React.createElement(Button, { isDisabled: !canWrite, onClick: openWizard }, intl.formatMessage(messages.costModelsWizardCreateCostModel))),\n    };\n};\nexport const CreateCostModelButton = injectIntl(connect(buttonMapStateToProps, buttonMapDispatchToProps, buttonMergeProps)(ReadOnlyTooltip));\nconst wizardMapStateProps = (state) => {\n    return {\n        isOpen: costModelsSelectors.isDialogOpen(state)('costmodel').createWizard,\n    };\n};\nconst wizardMapDispatchProps = (dispatch) => {\n    return {\n        openWizard: () => {\n            dispatch(costModelsActions.setCostModelDialog({ name: 'createWizard', isOpen: true }));\n        },\n        closeWizard: () => {\n            dispatch(costModelsActions.setCostModelDialog({ name: 'createWizard', isOpen: false }));\n        },\n    };\n};\nconst wizardMergeProps = (stateProps, dispatchProps) => {\n    const { isOpen } = stateProps;\n    const { openWizard, closeWizard } = dispatchProps;\n    return { isOpen, openWizard, closeWizard };\n};\nexport const CreateCostModelWizard = connect(wizardMapStateProps, wizardMapDispatchProps, wizardMergeProps)(CostModelWizard);\n","import { Alert, AlertVariant, Button, ButtonVariant, Stack, StackItem, Text, TextContent, TextList, TextListItem, TextListVariants, } from '@patternfly/react-core';\nimport React from 'react';\nexport function DeleteDialogActions({ status, deleteText, deleteAction, cancelText, cancelAction, sourcesNo, }) {\n    let actions = [];\n    if (status === 'loading') {\n        actions = [\n            React.createElement(Button, { key: \"pending_delete\", variant: ButtonVariant.danger, isDisabled: true }, deleteText),\n            React.createElement(Button, { key: \"pending_cancel\", variant: ButtonVariant.link, isDisabled: true }, cancelText),\n        ];\n    }\n    if (['failure', 'open'].includes(status) && sourcesNo > 0) {\n        actions = [\n            React.createElement(Button, { key: \"sources_cancel\", variant: ButtonVariant.link, onClick: cancelAction }, cancelText),\n        ];\n    }\n    if (['failure', 'open'].includes(status) && sourcesNo === 0) {\n        actions = [\n            React.createElement(Button, { key: \"delete\", variant: ButtonVariant.danger, onClick: deleteAction }, deleteText),\n            React.createElement(Button, { key: \"cancel\", variant: ButtonVariant.link, onClick: cancelAction }, cancelText),\n        ];\n    }\n    return actions;\n}\nfunction CannotDeleteContent({ head, body, sources }) {\n    return (React.createElement(Stack, { hasGutter: true },\n        React.createElement(StackItem, null,\n            React.createElement(TextContent, null,\n                React.createElement(Text, null, head))),\n        React.createElement(StackItem, null,\n            React.createElement(TextContent, null,\n                React.createElement(Text, null, body),\n                React.createElement(TextList, { component: TextListVariants.ol }, sources.map(source => (React.createElement(TextListItem, { key: source }, source))))))));\n}\nexport function DeleteDialogBody({ status, sources, error, cannotDeleteTitle, cannotDeleteBody, canDeleteBody, }) {\n    if (status !== 'close' && sources.length > 0) {\n        return React.createElement(CannotDeleteContent, { head: cannotDeleteTitle, body: cannotDeleteBody, sources: sources });\n    }\n    if (status !== 'close' && sources.length === 0) {\n        return (React.createElement(Stack, { hasGutter: true },\n            status === 'failure' ? (React.createElement(StackItem, null,\n                React.createElement(Alert, { variant: AlertVariant.danger, title: error }))) : null,\n            React.createElement(StackItem, null, canDeleteBody)));\n    }\n}\nexport function getDialogStateName(isLoading, isOpen, error) {\n    if (!isOpen) {\n        return 'close';\n    }\n    if (isLoading) {\n        return 'loading';\n    }\n    if (error) {\n        return 'failure';\n    }\n    return 'open';\n}\n","import { Modal, ModalVariant } from '@patternfly/react-core';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { DeleteDialogActions, DeleteDialogBody, getDialogStateName } from './utils/dialog';\nconst mapStateToProps = (state) => {\n    return {\n        isOpen: costModelsSelectors.isDialogOpen(state)('costmodel').deleteCostModel,\n        isLoading: costModelsSelectors.deleteProcessing(state),\n        deleteError: costModelsSelectors.deleteError(state),\n        dialogData: costModelsSelectors.dialogData(state),\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        closeDialog: () => dispatch(costModelsActions.setCostModelDialog({ name: 'deleteCostModel', isOpen: false })),\n        deleteCostModel: (uuid) => costModelsActions.deleteCostModel(uuid, 'deleteCostModel')(dispatch),\n    };\n};\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { intl = defaultIntl } = ownProps; // Default required for testing\n    const stateName = getDialogStateName(stateProps.isLoading, stateProps.isOpen, stateProps.deleteError);\n    const data = stateProps.dialogData && stateProps.dialogData.costModel ? stateProps.dialogData.costModel : null;\n    const name = data ? data.name : '';\n    const sources = data ? data.sources.map(source => source.name) : [];\n    const uuid = data ? data.uuid : '';\n    const actions = DeleteDialogActions({\n        status: stateName,\n        deleteText: intl.formatMessage(messages.costModelsDelete),\n        deleteAction: () => dispatchProps.deleteCostModel(uuid),\n        cancelText: intl.formatMessage(messages.cancel),\n        cancelAction: dispatchProps.closeDialog,\n        sourcesNo: sources.length,\n    });\n    const children = DeleteDialogBody({\n        status: stateName,\n        sources,\n        error: stateProps.deleteError,\n        cannotDeleteTitle: intl.formatMessage(messages.costModelsDeleteSource),\n        cannotDeleteBody: intl.formatMessage(messages.costModelsCanNotDelete, { name }),\n        canDeleteBody: intl.formatMessage(messages.costModelsCanDelete, { name }),\n    });\n    return {\n        actions,\n        isOpen: stateName !== 'close',\n        variant: ModalVariant.small,\n        'aria-label': intl.formatMessage(messages.costModelsDelete),\n        title: intl.formatMessage(messages.costModelsDelete),\n        titleIconVariant: 'warning',\n        onClose: dispatchProps.closeDialog,\n        children,\n    };\n};\nconst DeleteDialog = injectIntl(connect(mapStateToProps, mapDispatchToProps, mergeProps)(Modal));\nexport default DeleteDialog;\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, Title, TitleSizes } from '@patternfly/react-core';\nimport React from 'react';\nfunction EmptyStateBase(props) {\n    return (React.createElement(EmptyState, { className: \"pf-m-redhat-font\" },\n        React.createElement(EmptyStateIcon, { icon: props.icon }),\n        React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, props.title),\n        React.createElement(EmptyStateBody, null, props.description),\n        props.actions ? props.actions : null));\n}\nexport default EmptyStateBase;\n","import { PlusCircleIcon } from '@patternfly/react-icons/dist/esm/icons/plus-circle-icon';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { CreateCostModelButton } from 'routes/settings/costModels/costModelsDetails/createCostModelButton';\nimport EmptyStateBase from './emptyStateBase';\n// defaultIntl required for testing\nconst NoCostModels = ({ intl = defaultIntl }) => {\n    return (React.createElement(EmptyStateBase, { title: intl.formatMessage(messages.costModelsEmptyState), description: intl.formatMessage(messages.costModelsEmptyStateDesc), icon: PlusCircleIcon, actions: React.createElement(React.Fragment, null,\n            React.createElement(CreateCostModelButton, null),\n            React.createElement(\"br\", null),\n            React.createElement(\"br\", null),\n            React.createElement(\"a\", { href: intl.formatMessage(messages.docsConfigCostModels), rel: \"noreferrer\", target: \"_blank\" }, intl.formatMessage(messages.costModelsEmptyStateLearnMore))) }));\n};\nexport default injectIntl(NoCostModels);\n","import { ActionsColumn, TableComposable, TableVariant, Tbody, Td, Th, Thead, Tr } from '@patternfly/react-table';\nimport { sortable, TableGridBreakpoint } from '@patternfly/react-table';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { rbacSelectors } from 'store/rbac';\nimport { withRouter } from 'utils/router';\nimport { createActions, createOnSort, getRowsByStateName } from './utils/table';\nclass CostModelsTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            dialogSource: null,\n            activeSortDirection: 'asc',\n            activeSortIndex: 0,\n        };\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { intl = defaultIntl, // Default required for testing\n        canWrite, costData, openDeleteDialog, query, router, stateName, } = this.props;\n        const rows = getRowsByStateName(stateName, costData);\n        const cells = [\n            Object.assign({ title: intl.formatMessage(messages.names, { count: 1 }), data: { orderName: 'name' } }, (rows.length && { transforms: [sortable] })),\n            { title: intl.formatMessage(messages.description) },\n            Object.assign({ title: intl.formatMessage(messages.sourceType), data: { orderName: 'source_type' } }, (rows.length && { transforms: [sortable] })),\n            { title: intl.formatMessage(messages.costModelsAssignedSources) },\n            Object.assign({ title: intl.formatMessage(messages.costModelsLastChange), data: { orderName: 'updated_timestamp' } }, (rows.length && { transforms: [sortable] })),\n            {\n                title: '',\n                props: { 'aria-label': intl.formatMessage(messages.costModelsActions) },\n            },\n        ];\n        const actions = createActions(stateName, canWrite, [\n            {\n                title: intl.formatMessage(messages.delete),\n                tooltip: intl.formatMessage(messages.costModelsReadOnly),\n                onClick: (_evt, _rowIx, rowData) => {\n                    openDeleteDialog(rowData.data);\n                },\n            },\n        ]);\n        const onSort = createOnSort(cells, query, router);\n        const getSortParams = (columnIndex) => ({\n            sortBy: {\n                index: this.state.activeSortIndex,\n                direction: this.state.activeSortDirection,\n                defaultDirection: 'asc',\n            },\n            onSort: (_evt, index, direction) => {\n                this.setState(Object.assign(Object.assign({}, this.state), { activeSortDirection: direction, activeSortIndex: index }));\n                onSort(_evt, index, direction);\n            },\n            columnIndex,\n        });\n        return (React.createElement(TableComposable, { \"aria-label\": intl.formatMessage(messages.costModelsTableAriaLabel), gridBreakPoint: TableGridBreakpoint.grid2xl, variant: TableVariant.compact },\n            React.createElement(Thead, null,\n                React.createElement(Tr, null,\n                    cells.map((c, cellIndex) => (React.createElement(Th, { key: cellIndex, sort: c.transforms ? getSortParams(cellIndex) : undefined }, c.title))),\n                    React.createElement(Th, null))),\n            React.createElement(Tbody, null, rows.map((r, rowIndex) => (React.createElement(Tr, { key: rowIndex },\n                r.cells.map((c, cellIndex) => (React.createElement(Td, { colSpan: c.props ? c.props.colSpan : undefined, key: cellIndex }, c.title ? c.title : c))),\n                !r.heightAuto && (React.createElement(Td, { isActionCell: true },\n                    React.createElement(ActionsColumn, { items: actions.map(a => {\n                            return Object.assign(Object.assign({}, a), { onClick: _evt => a.onClick(_evt, rowIndex, r, null) });\n                        }) })))))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        canWrite: rbacSelectors.isCostModelWritePermission(state),\n        query: costModelsSelectors.query(state),\n        costData: costModelsSelectors.costModels(state),\n        stateName: costModelsSelectors.stateName(state),\n    };\n});\nconst mapDispatchToProps = (dispatch) => {\n    const setDialogActionCreator = costModelsActions.setCostModelDialog;\n    return {\n        openDeleteDialog: (item) => dispatch(setDialogActionCreator({ name: 'deleteCostModel', isOpen: true, meta: item })),\n    };\n};\nconst CostModelsTableConnect = connect(mapStateToProps, mapDispatchToProps)(CostModelsTableBase);\nconst CostModelsTable = injectIntl(withRouter(CostModelsTableConnect));\nexport default CostModelsTable;\n","import { Bullseye } from '@patternfly/react-core';\nimport { SortByDirection } from '@patternfly/react-table';\nimport { Unavailable } from '@redhat-cloud-services/frontend-components/Unavailable';\nimport { intl } from 'components/i18n';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { EmptyFilterState } from 'routes/components/state/emptyFilterState';\nimport { LoadingState } from 'routes/components/state/loadingState';\nimport NoCostModels from 'routes/settings/costModels/costModelsDetails/noCostModels';\nimport { formatPath } from 'utils/paths';\nimport { stringifySearch } from './query';\nexport function getRowsByStateName(stateName, data) {\n    let component = null;\n    if (stateName === 'loading') {\n        component = React.createElement(LoadingState, null);\n    }\n    if (stateName === 'empty') {\n        component = React.createElement(NoCostModels, null);\n    }\n    if (stateName === 'no-match') {\n        component = React.createElement(EmptyFilterState, null);\n    }\n    if (stateName === 'failure') {\n        component = React.createElement(Unavailable, null);\n    }\n    if (component !== null) {\n        return [\n            {\n                heightAuto: true,\n                cells: [\n                    {\n                        props: { colSpan: 6 },\n                        title: React.createElement(Bullseye, null,\n                            \" \",\n                            component,\n                            \" \"),\n                    },\n                ],\n            },\n        ];\n    }\n    return data.map((item) => {\n        const dateTime = intl.formatDate(item.updated_timestamp, {\n            day: 'numeric',\n            hour: 'numeric',\n            hour12: false,\n            minute: 'numeric',\n            month: 'short',\n            timeZone: 'UTC',\n            timeZoneName: 'short',\n            year: 'numeric',\n        });\n        return {\n            cells: [\n                {\n                    title: React.createElement(Link, { to: `${formatPath(routes.costModel.basePath)}/${item.uuid}` }, item.name),\n                },\n                item.description,\n                item.source_type,\n                item.sources.length.toString(),\n                dateTime,\n            ],\n            data: { costModel: item },\n        };\n    });\n}\nexport function createOnSort(cells, query, router) {\n    return function (_event, index, direction) {\n        const name = cells[index] && cells[index].data ? cells[index].data.orderName : null;\n        if (name === null) {\n            return;\n        }\n        if (direction === SortByDirection.asc) {\n            router.navigate(stringifySearch(Object.assign(Object.assign({}, query), { ordering: name })));\n            return;\n        }\n        router.navigate(stringifySearch(Object.assign(Object.assign({}, query), { ordering: `-${name}` })));\n    };\n}\nexport function createActions(stateName, canWrite, actions) {\n    if (stateName !== 'success') {\n        return [];\n    }\n    return actions.map(action => {\n        return Object.assign(Object.assign({}, action), { isDisabled: !canWrite, style: !canWrite ? { pointerEvents: 'auto' } : undefined, tooltip: !canWrite ? action.tooltip : undefined });\n    });\n}\n","import { Dropdown, DropdownItem, DropdownToggle, InputGroup, InputGroupText, TextInput, Toolbar, ToolbarFilter, } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { costModelsSelectors } from 'store/costModels';\nimport { withRouter } from 'utils/router';\nimport { initialCostModelsQuery, stringifySearch } from './query';\nconst FilterInput = ({ placeholder = '', value, onChange, onKeyPress }) => {\n    return (React.createElement(InputGroup, null,\n        React.createElement(TextInput, { \"aria-label\": placeholder, value: value, placeholder: placeholder, onChange: onChange, onKeyPress: (evt) => {\n                if (evt.key !== 'Enter' || value === '') {\n                    return;\n                }\n                onKeyPress(evt);\n            } }),\n        React.createElement(InputGroupText, { style: { borderLeft: '0' } },\n            React.createElement(SearchIcon, null))));\n};\nexport const onKeyPress = (router, key, query, inputer) => (event) => {\n    if (event.key === 'Enter' && inputer.value !== '') {\n        const currentValue = inputer.value;\n        router.navigate(stringifySearch(Object.assign(Object.assign({}, query), { [key]: query[key] ? `${query[key]},${currentValue}` : currentValue })));\n        inputer.setValue('');\n    }\n};\nexport const onDeleteChip = (router, key, query) => {\n    return (_filterName, chipName) => {\n        const newState = query[key] ? query[key].split(',').filter(qval => qval !== chipName) : null;\n        router.navigate(stringifySearch(Object.assign(Object.assign({}, query), { [key]: newState === null || newState.length === 0 ? null : newState.join(',') })));\n    };\n};\nexport const onDeleteChipGroup = (router, query, key) => {\n    return () => {\n        router.navigate(stringifySearch(Object.assign(Object.assign({}, query), { [key]: null })));\n    };\n};\nconst descriptionMapStateToProps = (state) => {\n    const filterType = costModelsSelectors.currentFilterType(state);\n    const query = costModelsSelectors.query(state);\n    return { filterType, query };\n};\nconst descriptionMergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { intl = defaultIntl, // Default required for testing\n    router, } = ownProps;\n    const { filterType, query } = stateProps;\n    const chips = query.description ? query.description.split(',') : [];\n    return {\n        categoryName: intl.formatMessage(messages.description),\n        chips,\n        deleteChip: onDeleteChip(router, 'description', Object.assign(Object.assign({}, initialCostModelsQuery), query)),\n        deleteChipGroup: onDeleteChipGroup(router, Object.assign(Object.assign({}, initialCostModelsQuery), query), 'description'),\n        filterType,\n        intl,\n        query,\n        router,\n    };\n};\nconst DescriptionFilterBase = ({ deleteChip, deleteChipGroup, filterType, intl, chips, categoryName, query, router, }) => {\n    const [value, setValue] = React.useState('');\n    const children = filterType === 'description' ? (React.createElement(FilterInput, { placeholder: intl.formatMessage(messages.filterByPlaceholder, { value: filterType }), value: value, onChange: (text) => setValue(text), onKeyPress: onKeyPress(router, 'description', Object.assign(Object.assign({}, initialCostModelsQuery), query), { value, setValue }) })) : null;\n    return (React.createElement(ToolbarFilter, { deleteChip: deleteChip, deleteChipGroup: deleteChipGroup, chips: chips, categoryName: categoryName }, children));\n};\nconst DescriptionFilterConnect = connect(descriptionMapStateToProps, undefined, descriptionMergeProps)(DescriptionFilterBase);\nexport const DescriptionFilter = injectIntl(withRouter(DescriptionFilterConnect));\nconst nameFilterMapStateToProps = (state) => {\n    const filterType = costModelsSelectors.currentFilterType(state);\n    const query = costModelsSelectors.query(state);\n    return { filterType, query };\n};\nconst nameFilterMergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { intl = defaultIntl, // Default required for testing\n    router, } = ownProps;\n    const { filterType, query } = stateProps;\n    const chips = query.name ? query.name.split(',') : [];\n    return {\n        deleteChip: onDeleteChip(router, 'name', Object.assign(Object.assign({}, initialCostModelsQuery), query)),\n        deleteChipGroup: onDeleteChipGroup(router, Object.assign(Object.assign({}, initialCostModelsQuery), query), 'name'),\n        filterType,\n        chips,\n        categoryName: intl.formatMessage(messages.names, { count: 1 }),\n        intl,\n        query,\n        router,\n    };\n};\nconst NameFilterBase = ({ deleteChip, deleteChipGroup, filterType, intl, chips, categoryName, query, router, }) => {\n    const [value, setValue] = React.useState('');\n    const children = filterType === 'name' ? (React.createElement(FilterInput, { placeholder: intl.formatMessage(messages.filterByPlaceholder, { value: filterType }), value: value, onChange: (text) => setValue(text), onKeyPress: onKeyPress(router, 'name', Object.assign(Object.assign({}, initialCostModelsQuery), query), { value, setValue }) })) : null;\n    return (React.createElement(ToolbarFilter, { deleteChip: deleteChip, deleteChipGroup: deleteChipGroup, chips: chips, categoryName: categoryName }, children));\n};\nconst NameFilterConnect = connect(nameFilterMapStateToProps, undefined, nameFilterMergeProps)(NameFilterBase);\nexport const NameFilter = injectIntl(withRouter(NameFilterConnect));\nexport const onSelect = (id, setToggle) => {\n    return () => {\n        setToggle(false);\n        const element = document.getElementById(id);\n        element && element.focus();\n    };\n};\nconst sourceTypeFilterMapStateToProps = (state) => {\n    const filterType = costModelsSelectors.currentFilterType(state);\n    const query = costModelsSelectors.query(state);\n    return { filterType, query };\n};\nconst sourceTypeFilterMergeProps = (stateProps, _dispatchProps, ownProps) => {\n    const { intl = defaultIntl, // Default required for testing\n    router, } = ownProps;\n    const { filterType, query } = stateProps;\n    const chips = query.source_type ? [query.source_type] : [];\n    return {\n        chips,\n        categoryName: intl.formatMessage(messages.sourceType),\n        deleteChip: onDeleteChipGroup(router, Object.assign(Object.assign({}, initialCostModelsQuery), query), 'source_type'),\n        filterType,\n        intl,\n        query,\n        router,\n    };\n};\nconst SourceTypeFilterBase = ({ deleteChip, deleteChipGroup, filterType, intl, chips, categoryName, query, router, }) => {\n    const [isOpen, setIsOpen] = React.useState(false);\n    const id = 'source-type-filter';\n    const onFilter = (source) => router.navigate(stringifySearch(Object.assign(Object.assign(Object.assign({}, initialCostModelsQuery), query), { source_type: source })));\n    const children = filterType === 'sourceType' ? (React.createElement(Dropdown, { onSelect: onSelect(id, setIsOpen), isOpen: isOpen, toggle: React.createElement(DropdownToggle, { onToggle: (value) => {\n                setIsOpen(value);\n            }, id: id }, intl.formatMessage(messages.filterByPlaceholder, { value: 'source_type' })), dropdownItems: [\n            React.createElement(DropdownItem, { key: \"aws\", component: \"button\", onClick: () => onFilter('aws') }, intl.formatMessage(messages.aws)),\n            React.createElement(DropdownItem, { key: \"azure\", component: \"button\", onClick: () => onFilter('azure') }, intl.formatMessage(messages.azure)),\n            React.createElement(DropdownItem, { key: \"ocp\", component: \"button\", onClick: () => onFilter('ocp') }, intl.formatMessage(messages.openShift)),\n        ] })) : null;\n    return (React.createElement(ToolbarFilter, { deleteChip: deleteChip, deleteChipGroup: deleteChipGroup, chips: chips, categoryName: categoryName }, children));\n};\nconst SourceTypeFilterConnect = connect(sourceTypeFilterMapStateToProps, undefined, sourceTypeFilterMergeProps)(SourceTypeFilterBase);\nexport const SourceTypeFilter = injectIntl(withRouter(SourceTypeFilterConnect));\nconst toolbarMapStateToProps = (state) => {\n    const query = costModelsSelectors.query(state);\n    return { query };\n};\nconst toolbarMergeProps = (stateProps, _dispatchProps, ownProps) => {\n    const { children, router } = ownProps;\n    const { query } = stateProps;\n    return {\n        id: 'cost-models-toolbar',\n        clearAllFilters: () => router.navigate(stringifySearch(Object.assign(Object.assign(Object.assign({}, initialCostModelsQuery), query), { description: null, source_type: null, name: null }))),\n        children,\n    };\n};\nexport const ClearableToolbar = withRouter(connect(toolbarMapStateToProps, undefined, toolbarMergeProps)(Toolbar));\n","import { Pagination, PaginationVariant, Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { FilterIcon } from '@patternfly/react-icons/dist/esm/icons/filter-icon';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { withRouter } from 'utils/router';\nimport { initialCostModelsQuery, limitTransform, offsetTransform, stringifySearch } from './query';\nconst costModelsFilterSelectorMapStateToProps = (state) => {\n    return {\n        filterType: costModelsSelectors.currentFilterType(state),\n    };\n};\nconst costModelsFilterSelectorMapDispatchToProps = (dispatch) => {\n    return {\n        updateFilterType: (value) => {\n            dispatch(costModelsActions.updateFilterToolbar({\n                currentFilterType: value,\n            }));\n        },\n    };\n};\nconst costModelsFilterMergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { intl = defaultIntl } = ownProps; // Default required for testing\n    const { filterType } = stateProps;\n    return {\n        filterType,\n        intl,\n        updateFilterType: dispatchProps.updateFilterType,\n    };\n};\nconst CostModelsFilterSelectorBase = ({ filterType, intl, updateFilterType, }) => {\n    const [isOpen, setIsOpen] = React.useState(false);\n    const options = [\n        React.createElement(SelectOption, { key: \"name\", value: \"name\" }, intl.formatMessage(messages.names, { count: 1 })),\n        React.createElement(SelectOption, { key: \"description\", value: \"description\" }, intl.formatMessage(messages.description)),\n        React.createElement(SelectOption, { key: \"sourceType\", value: \"sourceType\" }, intl.formatMessage(messages.sourceType)),\n    ];\n    return (React.createElement(Select, { isOpen: isOpen, onSelect: (_event, value) => {\n            updateFilterType(value);\n            setIsOpen(false);\n        }, onToggle: setIsOpen, selections: filterType, toggleIcon: React.createElement(FilterIcon, null), variant: SelectVariant.single }, options));\n};\nconst CostModelsFilterSelectorConnect = connect(costModelsFilterSelectorMapStateToProps, costModelsFilterSelectorMapDispatchToProps, costModelsFilterMergeProps)(CostModelsFilterSelectorBase);\nexport const CostModelsFilterSelector = injectIntl(withRouter(CostModelsFilterSelectorConnect));\nconst topPaginationMapStateToProps = (state) => {\n    const { count, page, perPage } = costModelsSelectors.pagination(state);\n    const query = costModelsSelectors.query(state);\n    return { count, page, perPage, query };\n};\nconst topPaginationMergeProps = (stateProps, dispatchProps, ownProps) => {\n    const { router } = ownProps;\n    const { count, page, perPage, query } = stateProps;\n    return {\n        isCompact: true,\n        itemCount: count,\n        page,\n        perPage,\n        variant: PaginationVariant.top,\n        onSetPage: (_evt, newPage, newPerPage) => {\n            router.navigate(stringifySearch(Object.assign(Object.assign(Object.assign({}, initialCostModelsQuery), query), { offset: offsetTransform(newPage, newPerPage) })));\n        },\n        onPerPageSelect: (_evt, newPerPage) => {\n            router.navigate(stringifySearch(Object.assign(Object.assign(Object.assign({}, initialCostModelsQuery), query), { limit: limitTransform(newPerPage), offset: 0 })));\n        },\n    };\n};\nexport const CostModelsTopPagination = withRouter(connect(topPaginationMapStateToProps, undefined, topPaginationMergeProps)(Pagination));\n","import { ToolbarContent, ToolbarGroup, ToolbarItem, ToolbarItemVariant, ToolbarToggleGroup, } from '@patternfly/react-core';\nimport { FilterIcon } from '@patternfly/react-icons/dist/esm/icons/filter-icon';\nimport React from 'react';\nimport { CreateCostModelButton } from './createCostModelButton';\nimport { ClearableToolbar, DescriptionFilter, NameFilter, SourceTypeFilter } from './utils/filters';\nimport { CostModelsFilterSelector, CostModelsTopPagination } from './utils/toolbar';\nconst CostModelsToolbar = () => {\n    return (React.createElement(ClearableToolbar, null,\n        React.createElement(ToolbarContent, null,\n            React.createElement(ToolbarToggleGroup, { breakpoint: \"xl\", toggleIcon: React.createElement(FilterIcon, null) },\n                React.createElement(ToolbarGroup, { variant: \"filter-group\" },\n                    React.createElement(ToolbarItem, null,\n                        React.createElement(CostModelsFilterSelector, null)),\n                    React.createElement(NameFilter, null),\n                    React.createElement(DescriptionFilter, null),\n                    React.createElement(SourceTypeFilter, null))),\n            React.createElement(ToolbarGroup, null,\n                React.createElement(CreateCostModelButton, null)),\n            React.createElement(ToolbarItem, { variant: ToolbarItemVariant.pagination },\n                React.createElement(CostModelsTopPagination, null)))));\n};\nexport default CostModelsToolbar;\n","import { PageSection } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport { parse, stringify } from 'qs';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { costModelsActions } from 'store/costModels';\nimport { metricsActions } from 'store/metrics';\nimport { rbacActions } from 'store/rbac';\nimport { withRouter } from 'utils/router';\nimport { CostModelsBottomPagination } from './bottomPagination';\nimport { styles } from './costModelsDetails.styles';\nimport { CreateCostModelWizard } from './createCostModelButton';\nimport DeleteDialog from './dialog';\nimport CostModelsTable from './table';\nimport CostModelsToolbar from './toolbar';\nclass CostModelsDetailsBase extends React.Component {\n    componentDidMount() {\n        const { getCostModelsData, getMetricsData, getRbacData, search } = this.props;\n        getCostModelsData(search);\n        getMetricsData();\n        getRbacData();\n    }\n    componentDidUpdate(prevProps) {\n        const { getCostModelsData, search } = this.props;\n        if (prevProps.search !== search) {\n            getCostModelsData(search);\n        }\n    }\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(PageSection, { isFilled: true },\n            React.createElement(\"div\", { style: styles.descContainer }, intl.formatMessage(messages.costModelsDesc, {\n                learnMore: (React.createElement(\"a\", { href: intl.formatMessage(messages.docsUsingCostModels), rel: \"noreferrer\", target: \"_blank\" }, intl.formatMessage(messages.learnMore))),\n            })),\n            React.createElement(CreateCostModelWizard, null),\n            React.createElement(DeleteDialog, null),\n            React.createElement(CostModelsToolbar, null),\n            React.createElement(CostModelsTable, null),\n            React.createElement(CostModelsBottomPagination, null)));\n    }\n}\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        getCostModelsData: (query) => costModelsActions.fetchCostModels(query)(dispatch),\n        getRbacData: () => rbacActions.fetchRbac()(dispatch),\n        getMetricsData: () => metricsActions.fetchMetrics()(dispatch),\n    };\n};\nconst mapStateToProps = (state, ownProps) => {\n    const query = parse(ownProps.router.location.search, { ignoreQueryPrefix: true });\n    const searchQuery = Object.assign(Object.assign({}, query), { tabKey: undefined });\n    return {\n        search: stringify(searchQuery, { encode: false, indices: false }),\n    };\n};\nconst CostModelsDetails = withRouter(injectIntl(connect(mapStateToProps, mapDispatchToProps)(CostModelsDetailsBase)));\nexport default CostModelsDetails;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    action: {\n        marginLeft: global_spacer_md.var,\n    },\n    descContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingLeft: global_spacer_md.value,\n        paddingRight: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport 'routes/components/dataTable/dataTable.scss';\nimport { Label } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { DataTable } from 'routes/components/dataTable';\nimport { styles } from 'routes/components/dataTable/dataTable.styles';\nimport { getUnsortedComputedReportItems } from 'routes/views/utils/computedReport/getComputedReportItems';\nimport { withRouter } from 'utils/router';\nexport const TagTableColumnIds = {\n    infrastructure: 'infrastructure',\n    monthOverMonth: 'monthOverMonth',\n    supplementary: 'supplementary',\n};\nclass TagTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { intl, isAllSelected, report, selectedItems } = this.props;\n            if (!report) {\n                return;\n            }\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: 'project',\n            });\n            const columns = [\n                {\n                    name: '', // Selection column\n                },\n                Object.assign({ orderBy: 'project', name: intl.formatMessage(messages.detailsResourceNames, { value: 'name' }) }, (computedItems.length && { isSortable: true })),\n                Object.assign({ orderBy: 'status', name: intl.formatMessage(messages.detailsResourceNames, { value: 'status' }) }, (computedItems.length && { isSortable: true })),\n                Object.assign(Object.assign({ orderBy: 'source_type', name: intl.formatMessage(messages.sourceType) }, (computedItems.length && { isSortable: true })), { style: styles.lastItemColumn }),\n            ];\n            computedItems.map(item => {\n                const label = item && item.label !== null ? item.label : '';\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: label,\n                        },\n                        {\n                            value: (React.createElement(Label, { variant: \"outline\", color: \"green\" }, intl.formatMessage(messages.enabled))),\n                        },\n                        { value: 'source type', style: styles.lastItem },\n                    ],\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                });\n            });\n            const filteredColumns = columns.filter(column => !column.hidden);\n            const filteredRows = rows.map((_a) => {\n                var row = __rest(_a, []);\n                row.cells = row.cells.filter(cell => !cell.hidden);\n                return row;\n            });\n            this.setState({\n                columns: filteredColumns,\n                rows: filteredRows,\n            });\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport || prevProps.selectedItems !== selectedItems) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { filterBy, isLoading, onSelected, onSort, orderBy, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, filterBy: filterBy, isLoading: isLoading, onSelected: onSelected, onSort: onSort, orderBy: orderBy, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst TagTable = injectIntl(withRouter(TagTableBase));\nexport { TagTable };\n","import { Button, ButtonVariant } from '@patternfly/react-core';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/components/dataToolbar';\nimport { createMapStateToProps } from 'store/common';\nimport { styles } from './tagDetails.styles';\nexport class TagToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getTagActions = () => {\n            const { intl, onDisableTags, onEnableTags, selectedItems } = this.props;\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Button, { isDisabled: selectedItems.length === 0, key: \"save\", onClick: onEnableTags, variant: ButtonVariant.primary }, intl.formatMessage(messages.enableTags)),\n                React.createElement(Button, { isDisabled: selectedItems.length === 0, key: \"reset\", onClick: onDisableTags, style: styles.action, variant: ButtonVariant.secondary }, intl.formatMessage(messages.disableTags))));\n        };\n        this.getCategoryOptions = () => {\n            const { intl } = this.props;\n            const options = [\n                { name: intl.formatMessage(messages.filterByValues, { value: 'name' }), key: 'project' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'status' }), key: 'status' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'source_type' }), key: 'source_type' },\n            ];\n            return options;\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        });\n    }\n    render() {\n        const { isAllSelected, isDisabled, itemsPerPage, itemsTotal, onBulkSelected, onFilterAdded, onFilterRemoved, pagination, query, selectedItems, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, isAllSelected: isAllSelected, isDisabled: isDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.ocp, selectedItems: selectedItems, showBulkSelect: true, showFilter: true, tagActions: this.getTagActions() }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n    // TBD...\n    };\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst TagToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(TagToolbarBase);\nconst TagToolbar = injectIntl(TagToolbarConnect);\nexport { TagToolbar };\n","import { PageSection, Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { getQuery, parseQuery } from 'api/queries/ocpQuery';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport { getUnsortedComputedReportItems } from 'routes/views/utils/computedReport/getComputedReportItems';\nimport { handleOnFilterAdded, handleOnFilterRemoved, handleOnPerPageSelect, handleOnSetPage, handleOnSort, } from 'routes/views/utils/navHandles';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { withRouter } from 'utils/router';\nimport { styles } from './tagDetails.styles';\nimport { TagTable } from './tagTable';\nimport { TagToolbar } from './tagToolbar';\nconst baseQuery = {\n    filter: {\n        limit: 10,\n        offset: 0,\n    },\n    filter_by: {},\n    exclude: {},\n    group_by: {\n        project: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst reportType = ReportType.cost;\nconst reportPathsType = ReportPathsType.ocp;\nclass TagDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isAllSelected: false,\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getComputedItems = () => {\n            const { report } = this.props;\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: 'project',\n            });\n        };\n        this.getPagination = (isDisabled = false, isBottom = false) => {\n            const { intl, query, report, router } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = Math.trunc(offset / limit + 1);\n            return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handleOnPerPageSelect(query, router, perPage), onSetPage: (event, pageNumber) => handleOnSetPage(query, router, report, pageNumber), page: page, perPage: limit, titles: {\n                    paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                        title: intl.formatMessage(messages.openShift),\n                        placement: isBottom ? 'bottom' : 'top',\n                    }),\n                }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n        };\n        this.getTable = () => {\n            const { query, report, reportFetchStatus, reportQueryString, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            return (React.createElement(TagTable, { filterBy: query.filter_by, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, onSelected: this.handleSelected, onSort: (sortType, isSortAscending) => handleOnSort(query, router, sortType, isSortAscending), orderBy: query.order_by, report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, report, router } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const isDisabled = computedItems.length === 0;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(TagToolbar, { isAllSelected: isAllSelected, isDisabled: isDisabled, itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onDisableTags: this.handleOnDisableTags, onEnableTags: this.handleOnEnableTags, onFilterAdded: filter => handleOnFilterAdded(query, router, filter), onFilterRemoved: filter => handleOnFilterRemoved(query, router, filter), pagination: this.getPagination(isDisabled), query: query, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.handleOnDisableTags = () => { };\n        this.handleOnEnableTags = () => { };\n        this.updateReport = () => {\n            const { fetchReport, reportQueryString } = this.props;\n            fetchReport(reportPathsType, reportType, reportQueryString);\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { report, reportError, reportQueryString, router } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.reportQueryString !== reportQueryString;\n        const noReport = !report && !reportError;\n        const noLocation = !router.location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { intl, reportError, reportFetchStatus } = this.props;\n        const computedItems = this.getComputedItems();\n        const isDisabled = computedItems.length === 0;\n        const title = intl.formatMessage(messages.tagLabelsTitle);\n        // Note: Providers are fetched via the AccountSettings component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        return (React.createElement(PageSection, { isFilled: true },\n            React.createElement(\"div\", { style: styles.descContainer }, intl.formatMessage(messages.tagDesc, {\n                learnMore: (React.createElement(\"a\", { href: intl.formatMessage(messages.docsConfigTags), rel: \"noreferrer\", target: \"_blank\" }, intl.formatMessage(messages.learnMore))),\n            })),\n            this.getToolbar(computedItems),\n            reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                this.getTable(),\n                React.createElement(\"div\", { style: styles.pagination }, this.getPagination(isDisabled, true))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const query = Object.assign(Object.assign({}, baseQuery), queryFromRoute);\n    const reportQuery = {\n        filter: Object.assign(Object.assign({}, query.filter), { resolution: 'monthly', time_scope_units: 'month', time_scope_value: -1 }),\n        filter_by: query.filter_by,\n        group_by: query.group_by,\n        order_by: query.order_by,\n    };\n    const reportQueryString = getQuery(reportQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString);\n    return {\n        query,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(TagDetails)));\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    action: {\n        marginLeft: global_spacer_md.var,\n    },\n    descContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingLeft: global_spacer_md.value,\n        paddingRight: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport 'routes/components/dataTable/dataTable.scss';\nimport { Label } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { DataTable } from 'routes/components/dataTable';\nimport { getUnsortedComputedReportItems } from 'routes/views/utils/computedReport/getComputedReportItems';\nimport { withRouter } from 'utils/router';\nexport const CostCategoryColumnIds = {\n    infrastructure: 'infrastructure',\n    monthOverMonth: 'monthOverMonth',\n    supplementary: 'supplementary',\n};\nclass CostCategoryBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { intl, isAllSelected, report, selectedItems } = this.props;\n            if (!report) {\n                return;\n            }\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: 'project',\n            });\n            const columns = [\n                {\n                    name: '', // Selection column\n                },\n                Object.assign({ orderBy: 'project', name: intl.formatMessage(messages.detailsResourceNames, { value: 'name' }) }, (computedItems.length && { isSortable: true })),\n                Object.assign({ orderBy: 'status', name: intl.formatMessage(messages.detailsResourceNames, { value: 'status' }) }, (computedItems.length && { isSortable: true })),\n            ];\n            computedItems.map(item => {\n                const label = item && item.label !== null ? item.label : '';\n                rows.push({\n                    cells: [\n                        {},\n                        {\n                            value: label,\n                        },\n                        {\n                            value: (React.createElement(Label, { variant: \"outline\", color: \"green\" }, intl.formatMessage(messages.enabled))),\n                        },\n                    ],\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                });\n            });\n            const filteredColumns = columns.filter(column => !column.hidden);\n            const filteredRows = rows.map((_a) => {\n                var row = __rest(_a, []);\n                row.cells = row.cells.filter(cell => !cell.hidden);\n                return row;\n            });\n            this.setState({\n                columns: filteredColumns,\n                rows: filteredRows,\n            });\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (previousReport !== currentReport || prevProps.selectedItems !== selectedItems) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { filterBy, isLoading, onSelected, onSort, orderBy, selectedItems } = this.props;\n        const { columns, rows } = this.state;\n        return (React.createElement(DataTable, { columns: columns, filterBy: filterBy, isLoading: isLoading, onSelected: onSelected, onSort: onSort, orderBy: orderBy, rows: rows, selectedItems: selectedItems }));\n    }\n}\nconst CostCategoryTable = injectIntl(withRouter(CostCategoryBase));\nexport { CostCategoryTable };\n","import { Button, ButtonVariant } from '@patternfly/react-core';\nimport { ResourcePathsType } from 'api/resources/resource';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DataToolbar } from 'routes/components/dataToolbar';\nimport { createMapStateToProps } from 'store/common';\nimport { styles } from './costCategory.styles';\nexport class CostCategoryToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getTagActions = () => {\n            const { intl, onDisableTags, onEnableTags, selectedItems } = this.props;\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Button, { isDisabled: selectedItems.length === 0, key: \"save\", onClick: onEnableTags, variant: ButtonVariant.primary }, intl.formatMessage(messages.enableCategories)),\n                React.createElement(Button, { isDisabled: selectedItems.length === 0, key: \"reset\", onClick: onDisableTags, style: styles.action, variant: ButtonVariant.secondary }, intl.formatMessage(messages.disableCategories))));\n        };\n        this.getCategoryOptions = () => {\n            const { intl } = this.props;\n            const options = [\n                { name: intl.formatMessage(messages.filterByValues, { value: 'name' }), key: 'project' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'status' }), key: 'status' },\n                { name: intl.formatMessage(messages.filterByValues, { value: 'source_type' }), key: 'source_type' },\n            ];\n            return options;\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        });\n    }\n    render() {\n        const { isAllSelected, isDisabled, itemsPerPage, itemsTotal, onBulkSelected, onFilterAdded, onFilterRemoved, pagination, query, selectedItems, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, isAllSelected: isAllSelected, isDisabled: isDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, pagination: pagination, query: query, resourcePathsType: ResourcePathsType.ocp, selectedItems: selectedItems, showBulkSelect: true, showFilter: true, tagActions: this.getTagActions() }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst CostCategoryToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(CostCategoryToolbarBase);\nconst CostCategoryToolbar = injectIntl(CostCategoryToolbarConnect);\nexport { CostCategoryToolbar };\n","import { PageSection, Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { getQuery } from 'api/queries/ocpQuery';\nimport { ReportPathsType, ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React, { useEffect, useState } from 'react';\nimport { useIntl } from 'react-intl';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Loading } from 'routes/state/loading';\nimport { NotAvailable } from 'routes/state/notAvailable';\nimport * as handles from 'routes/utils/handles';\nimport { getUnsortedComputedReportItems } from 'routes/views/utils/computedReport/getComputedReportItems';\nimport { FetchStatus } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { styles } from './costCategory.styles';\nimport { CostCategoryTable } from './costCategoryTable';\nimport { CostCategoryToolbar } from './costCategoryToolbar';\nconst baseQuery = {\n    filter: {\n        resolution: 'monthly',\n        time_scope_units: 'month',\n        time_scope_value: -1,\n        limit: 10,\n        offset: 0,\n    },\n    filter_by: {},\n    group_by: {\n        project: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst reportType = ReportType.cost;\nconst reportPathsType = ReportPathsType.ocp;\nconst CostCategory = () => {\n    const [isAllSelected, setIsAllSelected] = useState(false);\n    const [query, setQuery] = useState(Object.assign({}, baseQuery));\n    const [selectedItems, setSelectedItems] = useState([]);\n    const intl = useIntl();\n    const { report, reportError, reportFetchStatus, reportQueryString } = useMapToProps({ query });\n    const getComputedItems = () => {\n        return getUnsortedComputedReportItems({\n            report,\n            idKey: 'project',\n        });\n    };\n    const getPagination = (isDisabled = false, isBottom = false) => {\n        const count = report && report.meta ? report.meta.count : 0;\n        const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n            ? report.meta.filter.limit\n            : baseQuery.filter.limit;\n        const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n            ? report.meta.filter.offset\n            : baseQuery.filter.offset;\n        const page = Math.trunc(offset / limit + 1);\n        return (React.createElement(Pagination, { isCompact: !isBottom, isDisabled: isDisabled, itemCount: count, onPerPageSelect: (event, perPage) => handleOnPerPageSelect(perPage), onSetPage: (event, pageNumber) => handleOnSetPage(pageNumber), page: page, perPage: limit, titles: {\n                paginationTitle: intl.formatMessage(messages.paginationTitle, {\n                    title: intl.formatMessage(messages.openShift),\n                    placement: isBottom ? 'bottom' : 'top',\n                }),\n            }, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: `exports-pagination${isBottom ? '-bottom' : ''}` }));\n    };\n    const getTable = () => {\n        return (React.createElement(CostCategoryTable, { filterBy: query.filter_by, isAllSelected: isAllSelected, isLoading: reportFetchStatus === FetchStatus.inProgress, orderBy: query.order_by, onSelected: handleOnSelected, onSort: (sortType, isSortAscending) => handleOnSort(sortType, isSortAscending), report: report, reportQueryString: reportQueryString, selectedItems: selectedItems }));\n    };\n    const getToolbar = (computedItems) => {\n        const isDisabled = computedItems.length === 0;\n        const itemsTotal = report && report.meta ? report.meta.count : 0;\n        return (React.createElement(CostCategoryToolbar, { isAllSelected: isAllSelected, isDisabled: isDisabled, itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: handleOnBulkSelected, onDisableTags: handleOnDisableCategories, onEnableTags: handleOnEnableCategories, onFilterAdded: filter => handleOnFilterAdded(filter), onFilterRemoved: filter => handleOnFilterRemoved(filter), pagination: getPagination(isDisabled), query: query, selectedItems: selectedItems }));\n    };\n    const handleOnBulkSelected = (action) => {\n        if (action === 'none') {\n            setIsAllSelected(false);\n            setSelectedItems([]);\n        }\n        else if (action === 'page') {\n            setIsAllSelected(false);\n            setSelectedItems(getComputedItems());\n        }\n        else if (action === 'all') {\n            setIsAllSelected(!isAllSelected);\n            setSelectedItems([]);\n        }\n    };\n    const handleOnDisableCategories = () => { };\n    const handleOnEnableCategories = () => { };\n    const handleOnFilterAdded = filter => {\n        const newQuery = handles.handleOnFilterAdded(query, filter);\n        setQuery(newQuery);\n    };\n    const handleOnFilterRemoved = filter => {\n        const newQuery = handles.handleOnFilterRemoved(query, filter);\n        setQuery(newQuery);\n    };\n    const handleOnPerPageSelect = perPage => {\n        const newQuery = handles.handleOnPerPageSelect(query, perPage);\n        setQuery(newQuery);\n    };\n    const handleOnSetPage = pageNumber => {\n        const newQuery = handles.handleOnSetPage(query, report, pageNumber);\n        setQuery(newQuery);\n    };\n    const handleOnSelected = (items, isSelected = false) => {\n        let newItems = [...(isAllSelected ? getComputedItems() : selectedItems)];\n        if (items && items.length > 0) {\n            if (isSelected) {\n                items.map(item => newItems.push(item));\n            }\n            else {\n                items.map(item => {\n                    newItems = newItems.filter(val => val.id !== item.id);\n                });\n            }\n        }\n        setIsAllSelected(false);\n        setSelectedItems(newItems);\n    };\n    const handleOnSort = (sortType, isSortAscending) => {\n        const newQuery = handles.handleOnSort(query, sortType, isSortAscending);\n        setQuery(newQuery);\n    };\n    const computedItems = getComputedItems();\n    const isDisabled = computedItems.length === 0;\n    // Note: Providers are fetched via the AccountSettings component used by all routes\n    if (reportError) {\n        const title = intl.formatMessage(messages.tagLabelsTitle);\n        return React.createElement(NotAvailable, { title: title });\n    }\n    return (React.createElement(PageSection, { isFilled: true },\n        React.createElement(\"div\", { style: styles.descContainer }, intl.formatMessage(messages.costCategoryDesc, {\n            learnMore: (React.createElement(\"a\", { href: intl.formatMessage(messages.docsConfigCostCategory), rel: \"noreferrer\", target: \"_blank\" }, intl.formatMessage(messages.learnMore))),\n        })),\n        getToolbar(computedItems),\n        reportFetchStatus === FetchStatus.inProgress ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n            getTable(),\n            React.createElement(\"div\", { style: styles.pagination }, getPagination(isDisabled, true))))));\n};\n// eslint-disable-next-line no-empty-pattern\nconst useMapToProps = ({ query }) => {\n    const dispatch = useDispatch();\n    const reportQueryString = getQuery(query);\n    const report = useSelector((state) => reportSelectors.selectReport(state, reportPathsType, reportType, reportQueryString));\n    const reportFetchStatus = useSelector((state) => reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, reportQueryString));\n    const reportError = useSelector((state) => reportSelectors.selectReportError(state, reportPathsType, reportType, reportQueryString));\n    useEffect(() => {\n        if (!reportError && reportFetchStatus !== FetchStatus.inProgress) {\n            dispatch(reportActions.fetchReport(reportPathsType, reportType, reportQueryString));\n        }\n    }, [query]);\n    return {\n        report,\n        reportError,\n        reportFetchStatus,\n        reportQueryString,\n    };\n};\nexport default CostCategory;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const styles = {\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        paddingLeft: global_spacer_lg.var,\n        paddingRight: global_spacer_lg.var,\n        paddingTop: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    tabs: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        paddingTop: global_spacer_lg.var,\n    },\n};\n","import './settings.scss';\nimport { Tab, TabContent, Tabs, TabTitleText, Title, TitleSizes } from '@patternfly/react-core';\nimport { getQueryRoute, parseQuery } from 'api/queries/query';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Calculations } from 'routes/settings/calculations';\nimport { CostModelsDetails } from 'routes/settings/costModels';\nimport { TagDetails } from 'routes/settings/tagDetails';\nimport { createMapStateToProps } from 'store/common';\nimport { withRouter } from 'utils/router';\nimport { CostCategory } from './costCategory';\nimport { styles } from './settings.styles';\n// eslint-disable-next-line no-shadow\nvar SettingsTab;\n(function (SettingsTab) {\n    SettingsTab[\"costModels\"] = \"cost_models\";\n    SettingsTab[\"calculations\"] = \"calculations\";\n    SettingsTab[\"costCategory\"] = \"cost_category\";\n    SettingsTab[\"tags\"] = \"tags\";\n})(SettingsTab || (SettingsTab = {}));\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case SettingsTab.costModels:\n            return 'cost_models';\n        case SettingsTab.calculations:\n            return 'calculations';\n        case SettingsTab.costCategory:\n            return 'cost_category';\n        case SettingsTab.tags:\n            return 'tags';\n    }\n};\nclass SettingsBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            activeTabKey: 0,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getAvailableTabs = () => {\n            const availableTabs = [\n                {\n                    contentRef: React.createRef(),\n                    tab: SettingsTab.costModels,\n                },\n                {\n                    contentRef: React.createRef(),\n                    tab: SettingsTab.calculations,\n                },\n                {\n                    contentRef: React.createRef(),\n                    tab: SettingsTab.tags,\n                },\n                {\n                    contentRef: React.createRef(),\n                    tab: SettingsTab.costCategory,\n                },\n            ];\n            return availableTabs;\n        };\n        this.getRouteForQuery = (query) => {\n            const { router } = this.props;\n            return `${router.location.pathname}?${getQueryRoute(query)}`;\n        };\n        this.getTab = (tab, contentRef, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, tabContentId: `tab-${index}`, tabContentRef: contentRef, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) }));\n        };\n        this.getTabContent = (availableTabs) => {\n            return availableTabs.map((val, index) => {\n                return (React.createElement(TabContent, { eventKey: index, key: `${getIdKeyForTab(val.tab)}-tabContent`, id: `tab-${index}`, ref: val.contentRef }, this.getTabItem(val.tab, index)));\n            });\n        };\n        this.getTabItem = (tab, index) => {\n            const { activeTabKey } = this.state;\n            const emptyTab = React.createElement(React.Fragment, null); // Lazily load tabs\n            if (activeTabKey !== index) {\n                return emptyTab;\n            }\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === SettingsTab.costModels) {\n                return React.createElement(CostModelsDetails, null);\n            }\n            else if (currentTab === SettingsTab.calculations) {\n                return React.createElement(Calculations, null);\n            }\n            else if (currentTab === SettingsTab.tags) {\n                return React.createElement(TagDetails, null);\n            }\n            else if (currentTab === SettingsTab.costCategory) {\n                return React.createElement(CostCategory, null);\n            }\n            else {\n                return emptyTab;\n            }\n        };\n        this.getTabs = (availableTabs) => {\n            const { activeTabKey } = this.state;\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((val, index) => this.getTab(val.tab, val.contentRef, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { intl } = this.props;\n            if (tab === SettingsTab.costModels) {\n                return intl.formatMessage(messages.costModels);\n            }\n            else if (tab === SettingsTab.calculations) {\n                return intl.formatMessage(messages.currencyCalcuationsTitle);\n            }\n            else if (tab === SettingsTab.tags) {\n                return intl.formatMessage(messages.tagLabelsTitle);\n            }\n            else if (tab === SettingsTab.costCategory) {\n                return intl.formatMessage(messages.costCategoryTitle);\n            }\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { query, router } = this.props;\n            const { activeTabKey } = this.state;\n            if (activeTabKey !== tabIndex) {\n                this.setState({\n                    activeTabKey: tabIndex,\n                }, () => {\n                    const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { tabKey: tabIndex });\n                    router.navigate(this.getRouteForQuery(newQuery), { replace: true });\n                });\n            }\n        };\n    }\n    componentDidMount() {\n        const { tabKey } = this.props;\n        this.setState({\n            activeTabKey: tabKey,\n        });\n    }\n    render() {\n        const { intl } = this.props;\n        const availableTabs = this.getAvailableTabs();\n        const title = intl.formatMessage(messages.settingsTitle);\n        return (React.createElement(\"div\", { className: \"tabsOverride\" },\n            React.createElement(\"header\", { style: styles.header },\n                React.createElement(\"div\", { style: styles.headerContent },\n                    React.createElement(Title, { headingLevel: \"h1\", size: TitleSizes['2xl'] }, title)),\n                React.createElement(\"div\", { style: styles.tabs }, this.getTabs(availableTabs))),\n            React.createElement(\"div\", null, this.getTabContent(availableTabs))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const tabKey = queryFromRoute.tabKey && !Number.isNaN(queryFromRoute.tabKey) ? Number(queryFromRoute.tabKey) : 0;\n    const query = Object.assign({}, queryFromRoute);\n    return {\n        query,\n        tabKey,\n    };\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst Settings = injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(SettingsBase)));\nexport default Settings;\n","import './optimizationIcon.scss';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nconst icon = require('./Red_Hat-IT_Optimization-Gray.svg');\nconst OptimizationIcon = ({ className, intl }) => {\n    return (React.createElement(\"img\", { className: `optimization-icon ${className}`, src: icon, alt: intl.formatMessage(messages.optimizations), \"aria-hidden\": \"true\" }));\n};\nexport default injectIntl(OptimizationIcon);\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title, TitleSizes, } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { OptimizationIcon } from 'routes/components/icons/optimizationIcon';\nclass NoOptimizationsStateBase extends React.Component {\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: OptimizationIcon }),\n            React.createElement(Title, { headingLevel: \"h1\", size: TitleSizes.lg }, intl.formatMessage(messages.noOptimizationsTitle)),\n            React.createElement(EmptyStateBody, null, intl.formatMessage(messages.noOptimizationsDesc))));\n    }\n}\nconst NoOptimizationsState = injectIntl(NoOptimizationsStateBase);\nexport { NoOptimizationsState };\n","import messages from 'locales/messages';\nimport React from 'react';\nimport { PerspectiveSelect } from 'routes/views/components/perspective/perspectiveSelect';\n// Infrastructure AWS options\nconst infrastructureAwsOptions = [{ label: messages.perspectiveValues, value: 'aws' }];\n// Infrastructure AWS filtered by OpenShift options\nconst infrastructureAwsOcpOptions = [{ label: messages.perspectiveValues, value: 'aws_ocp' }];\n// Infrastructure Azure options\nconst infrastructureAzureOptions = [{ label: messages.perspectiveValues, value: 'azure' }];\n// Infrastructure Oci options\nconst infrastructureOciOptions = [{ label: messages.perspectiveValues, value: 'oci' }];\n// Infrastructure Azure filtered by OpenShift options\nconst infrastructureAzureOcpOptions = [{ label: messages.perspectiveValues, value: 'azure_ocp' }];\n// Infrastructure GCP options\nconst infrastructureGcpOptions = [{ label: messages.perspectiveValues, value: 'gcp' }];\n// Infrastructure GCP filtered by OCP options\nconst infrastructureGcpOcpOptions = [{ label: messages.perspectiveValues, value: 'gcp_ocp' }];\n// Infrastructure IBM options\nconst infrastructureIbmOptions = [{ label: messages.perspectiveValues, value: 'ibm' }];\n// Infrastructure IBM filtered by OCP options\nconst infrastructureIbmOcpOptions = [{ label: messages.perspectiveValues, value: 'ibm_ocp' }];\n// Infrastructure Ocp cloud options\nconst infrastructureOcpCloudOptions = [{ label: messages.perspectiveValues, value: 'ocp_cloud' }];\n// Ocp options\nconst ocpOptions = [{ label: messages.perspectiveValues, value: 'ocp' }];\n// RHEL options\nconst rhelOptions = [{ label: messages.perspectiveValues, value: 'rhel' }];\nconst getInfrastructureOptions = ({ hasAws, hasAwsOcp, hasAzure, hasAzureOcp, hasGcp, hasGcpOcp, hasIbm, hasIbmOcp, hasOci, isIbmFeatureEnabled, }) => {\n    const options = [];\n    if (hasAws) {\n        options.push(...infrastructureAwsOptions);\n    }\n    if (hasAwsOcp) {\n        options.push(...infrastructureAwsOcpOptions);\n    }\n    if (hasGcp) {\n        options.push(...infrastructureGcpOptions);\n    }\n    if (hasGcpOcp) {\n        options.push(...infrastructureGcpOcpOptions);\n    }\n    if (hasIbm) {\n        options.push(...infrastructureIbmOptions);\n    }\n    if (hasIbmOcp && isIbmFeatureEnabled) {\n        options.push(...infrastructureIbmOcpOptions);\n    }\n    if (hasAzure) {\n        options.push(...infrastructureAzureOptions);\n    }\n    if (hasAzureOcp) {\n        options.push(...infrastructureAzureOcpOptions);\n    }\n    if (hasOci) {\n        options.push(...infrastructureOciOptions);\n    }\n    return options;\n};\nconst Perspective = ({ currentItem, hasAws, hasAwsOcp, hasAzure, hasAzureOcp, hasGcp, hasGcpOcp, hasIbm, hasIbmOcp, hasOci, hasOcp, hasOcpCloud, hasRhel, isDisabled, isIbmFeatureEnabled, isInfrastructureTab, isRhelTab, onSelected, }) => {\n    // Dynamically show options if providers are available\n    const options = [];\n    // Note isInfrastructureTab and isRhelTab will be undefined for cost explorer\n    if (isInfrastructureTab !== undefined || isRhelTab !== undefined) {\n        if (isInfrastructureTab) {\n            if (hasOcpCloud) {\n                options.push(...infrastructureOcpCloudOptions);\n            }\n            options.push(...getInfrastructureOptions({\n                hasAws,\n                hasAwsOcp,\n                hasAzure,\n                hasAzureOcp,\n                hasGcp,\n                hasGcpOcp,\n                hasIbm,\n                hasIbmOcp,\n                hasOci,\n                isIbmFeatureEnabled,\n            }));\n        }\n        else if (isRhelTab) {\n            if (hasRhel) {\n                options.push(...rhelOptions);\n            }\n        }\n        else if (hasOcp) {\n            options.push(...ocpOptions);\n        }\n    }\n    else {\n        if (hasOcp) {\n            options.push(...ocpOptions);\n        }\n        if (hasOcpCloud) {\n            options.push(...infrastructureOcpCloudOptions);\n        }\n        if (hasRhel) {\n            options.push(...rhelOptions);\n        }\n        options.push(...getInfrastructureOptions({\n            hasAws,\n            hasAwsOcp,\n            hasAzure,\n            hasAzureOcp,\n            hasGcp,\n            hasGcpOcp,\n            hasIbm,\n            hasIbmOcp,\n            hasOci,\n            isIbmFeatureEnabled,\n        }));\n    }\n    return (React.createElement(PerspectiveSelect, { currentItem: currentItem || options[0].value, isDisabled: isDisabled, onSelected: onSelected, options: options }));\n};\nexport default Perspective;\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nconst DashboardBase = ({ costType, currency, DashboardWidget, selectWidgets, widgets }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { hasGutter: true }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return widget.details && widget.details.showHorizontal ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(DashboardWidget, Object.assign({ widgetId: widgetId }, (costType && { costType }), (currency && { currency }))))) : (React.createElement(GridItem, { lg: 12, xl: 6, xl2: 4, key: widgetId },\n            React.createElement(DashboardWidget, Object.assign({ widgetId: widgetId }, (costType && { costType }), (currency && { currency })))));\n    }))));\nexport default DashboardBase;\n","import global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nexport const styles = {\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n};\n","import './optimizationsSummary.scss';\nimport { Button, ButtonVariant, Card, CardBody, CardTitle, Popover, Skeleton, Title, TitleSizes, } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { Link } from 'react-router-dom';\nimport { routes } from 'routes';\nimport { skeletonWidth } from 'routes/views/utils/skeleton';\nimport { FetchStatus } from 'store/common';\nimport { formatPath } from 'utils/paths';\nimport { styles } from './optimizations.styles';\nconst OptimizationsSummaryBase = ({ intl, report, status, title }) => {\n    const count = report && report.meta ? report.meta.count : 0;\n    const description = intl.formatMessage(messages.optimizationsDetails, { count });\n    return (React.createElement(Card, { className: \"summary\" },\n        React.createElement(CardTitle, null,\n            React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg },\n                intl.formatMessage(title),\n                React.createElement(\"span\", { style: styles.infoIcon },\n                    React.createElement(Popover, { \"aria-label\": intl.formatMessage(messages.optimizationsInfoArialLabel), enableFlip: true, bodyContent: React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.optimizationsInfo)) },\n                        React.createElement(Button, { \"aria-label\": intl.formatMessage(messages.optimizationsInfoButtonArialLabel), variant: ButtonVariant.plain },\n                            React.createElement(OutlinedQuestionCircleIcon, null)))))),\n        React.createElement(CardBody, null, status === FetchStatus.inProgress ? (React.createElement(React.Fragment, null,\n            React.createElement(Skeleton, { width: \"16%\" }),\n            React.createElement(Skeleton, { className: \"skeleton\", width: skeletonWidth.md }))) : count > 0 ? (React.createElement(Link, { to: formatPath(routes.optimizations.path) }, description)) : (description))));\n};\nconst OptimizationsSummary = injectIntl(OptimizationsSummaryBase);\nexport default OptimizationsSummary;\n","import { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport React from 'react';\nclass ChartComparisonBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            currentItem: this.props.options ? this.props.options.find(option => option.default).value : undefined,\n            isSelectOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getSelect = () => {\n            const { isDisabled } = this.props;\n            const { currentItem, isSelectOpen } = this.state;\n            const selectOptions = this.getSelectOptions();\n            const selection = selectOptions.find((option) => option.value === currentItem);\n            return (React.createElement(Select, { id: \"comparisonSelect\", isDisabled: isDisabled, isOpen: isSelectOpen, onSelect: this.handleSelect, onToggle: this.handleToggle, selections: selection, variant: SelectVariant.single }, selectOptions.map(option => (React.createElement(SelectOption, { key: option.value, value: option })))));\n        };\n        this.getSelectOptions = () => {\n            const { options } = this.props;\n            const selectOptions = [];\n            options.map(option => {\n                selectOptions.push({\n                    toString: () => option.label,\n                    value: option.value,\n                });\n            });\n            return selectOptions;\n        };\n        this.handleSelect = (event, selection) => {\n            const { onItemClicked } = this.props;\n            if (onItemClicked) {\n                onItemClicked(selection.value);\n            }\n            this.setState({\n                currentItem: selection.value,\n                isSelectOpen: false,\n            });\n        };\n        this.handleToggle = isSelectOpen => {\n            this.setState({ isSelectOpen });\n        };\n    }\n    render() {\n        return this.getSelect();\n    }\n}\nconst ChartComparison = ChartComparisonBase;\nexport { ChartComparison };\n","import global_spacer_2xl from '@patternfly/react-tokens/dist/js/global_spacer_2xl';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_xl from '@patternfly/react-tokens/dist/js/global_spacer_xl';\nexport const chartStyles = {\n    chartAltHeight: 250,\n    chartHeight: 180,\n    containerAltHeight: 250,\n    containerTrendHeight: 180,\n    containerUsageHeight: 180,\n};\nexport const styles = {\n    comparison: {\n        marginBottom: global_spacer_md.value,\n    },\n    comparisonContainer: {\n        display: 'flex',\n    },\n    tabs: {\n        marginTop: global_spacer_2xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n};\n","import { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { getQuery } from 'api/queries/query';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ComputedReportItemType, DatumType, transformReport } from 'routes/views/components/charts/common/chartDatum';\nimport { getComputedForecast, transformForecast, transformForecastCone, } from 'routes/views/components/charts/common/chartDatumForecast';\nimport { ReportSummary, ReportSummaryAlt, ReportSummaryCost, ReportSummaryDailyCost, ReportSummaryDailyTrend, ReportSummaryDetails, ReportSummaryItem, ReportSummaryItems, ReportSummaryTrend, ReportSummaryUsage, } from 'routes/views/components/reports/reportSummary';\nimport { OptimizationsSummary } from 'routes/views/overview/components/optimizationsSummary';\nimport { DashboardChartType } from 'store/dashboard/common/dashboardCommon';\nimport { formatCurrency, formatUnits, unitsLookupKey } from 'utils/format';\nimport { ChartComparison } from './chartComparison';\nimport { chartStyles, styles } from './dashboardWidget.styles';\n// eslint-disable-next-line no-shadow\nvar Comparison;\n(function (Comparison) {\n    Comparison[\"cumulative\"] = \"cumulative\";\n    Comparison[\"daily\"] = \"daily\";\n})(Comparison || (Comparison = {}));\nclass DashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            activeTabKey: 0,\n            currentComparison: Comparison.cumulative,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.buildDetailsLink = (tab) => {\n            const { details, getIdKeyForTab } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return `${details.viewAllPath}?${getQuery({\n                group_by: {\n                    [currentTab]: '*',\n                },\n            })}`;\n        };\n        this.getChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { chartType, trend } = this.props;\n            if (chartType === DashboardChartType.dailyTrend) {\n                return this.getDailyTrendChart(containerHeight, height, adjustContainerHeight, trend.showSupplementaryLabel);\n            }\n            else if (chartType === DashboardChartType.dailyCost) {\n                return this.getDailyCostChart(containerHeight, height, adjustContainerHeight);\n            }\n            else if (chartType === DashboardChartType.trend) {\n                return this.getTrendChart(containerHeight, height, adjustContainerHeight, trend.showSupplementaryLabel);\n            }\n            else if (chartType === DashboardChartType.usage) {\n                return this.getUsageChart(height, adjustContainerHeight);\n            }\n            else {\n                return null;\n            }\n        };\n        // This dropdown is for cumulative and daily cost\n        this.getChartComparison = () => {\n            const { intl, trend } = this.props;\n            const { currentComparison } = this.state;\n            const units = this.getFormattedUnits();\n            const cumulativeTitle = intl.formatMessage(trend.titleKey, { units });\n            const dailyTitle = intl.formatMessage(trend.dailyTitleKey, { units });\n            const options = [\n                { label: dailyTitle, value: Comparison.daily },\n                { label: cumulativeTitle, value: Comparison.cumulative, default: true },\n            ];\n            return (React.createElement(ChartComparison, { currentItem: currentComparison || options[0].value, onItemClicked: this.handleComparisonClick, options: options }));\n        };\n        // This chart displays cumulative and daily cost compared to infrastructure cost\n        this.getDailyCostChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { chartFormatter, currentReport, previousReport, trend } = this.props;\n            const { currentComparison } = this.state;\n            const computedReportItem = trend.computedReportItem; // cost, supplementary cost, etc.\n            const computedReportItemValue = trend.computedReportItemValue; // infrastructure usage cost\n            const daily = currentComparison === Comparison.daily;\n            const type = daily ? DatumType.rolling : trend.datumType;\n            // Cost data\n            const currentCostData = transformReport(currentReport, type, 'date', computedReportItem, computedReportItemValue);\n            const previousCostData = transformReport(previousReport, type, 'date', computedReportItem, computedReportItemValue);\n            // Forecast data\n            const forecastData = this.getForecastData(currentReport, trend.computedForecastItem);\n            const ReportSummaryComponent = daily ? ReportSummaryDailyCost : ReportSummaryCost;\n            return (React.createElement(React.Fragment, null,\n                React.createElement(\"div\", { style: styles.comparisonContainer },\n                    React.createElement(\"div\", { style: styles.comparison }, this.getChartComparison())),\n                React.createElement(ReportSummaryComponent, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentCostData: currentCostData, forecastConeData: forecastData.forecastConeData, forecastData: forecastData.forecastData, formatOptions: trend.formatOptions, formatter: chartFormatter || formatCurrency, height: height, previousCostData: previousCostData, showForecast: trend.computedForecastItem !== undefined })));\n        };\n        // This chart displays cumulative and daily cost\n        this.getDailyTrendChart = (containerHeight, height, adjustContainerHeight = false, showSupplementaryLabel = false) => {\n            const { chartFormatter, chartName, currentReport, details, previousReport, trend } = this.props;\n            const { currentComparison } = this.state;\n            const computedReportItem = trend.computedReportItem; // cost, supplementary cost, etc.\n            const computedReportItemValue = trend.computedReportItemValue; // infrastructure usage cost\n            const daily = currentComparison === Comparison.daily;\n            const type = daily ? DatumType.rolling : trend.datumType;\n            // Cost data\n            const currentData = transformReport(currentReport, type, 'date', computedReportItem, computedReportItemValue);\n            const previousData = transformReport(previousReport, type, 'date', computedReportItem, computedReportItemValue);\n            // Forecast data\n            const { forecastData, forecastConeData } = this.getForecastData(currentReport, trend.computedForecastItem);\n            const ReportSummaryComponent = daily ? ReportSummaryDailyTrend : ReportSummaryTrend;\n            return (React.createElement(React.Fragment, null,\n                React.createElement(\"div\", { style: styles.comparisonContainer },\n                    React.createElement(\"div\", { style: styles.comparison }, this.getChartComparison())),\n                React.createElement(ReportSummaryComponent, { adjustContainerHeight: adjustContainerHeight, chartName: chartName, containerHeight: containerHeight, currentData: currentData, forecastData: forecastData, forecastConeData: forecastConeData, formatOptions: trend.formatOptions, formatter: chartFormatter || formatUnits, height: height, previousData: previousData, showForecast: trend.computedForecastItem !== undefined, showSupplementaryLabel: showSupplementaryLabel, showUsageLegendLabel: details.showUsageLegendLabel, units: this.getUnits() })));\n        };\n        this.getForecastData = (report, computedForecastItem = 'cost') => {\n            const { forecast, trend } = this.props;\n            const { currentComparison } = this.state;\n            // Todo: Add cumulative / daily prop\n            const daily = currentComparison === Comparison.daily;\n            const datumType = daily ? DatumType.rolling : trend.datumType;\n            const computedForecast = getComputedForecast(forecast, report, computedForecastItem, datumType);\n            const forecastData = transformForecast(computedForecast, datumType, computedForecastItem);\n            const forecastConeData = transformForecastCone(computedForecast, datumType, computedForecastItem);\n            return { forecastData, forecastConeData };\n        };\n        // This chart displays cumulative cost only\n        this.getTrendChart = (containerHeight, height, adjustContainerHeight = false, showSupplementaryLabel = false) => {\n            const { chartFormatter, chartName, currentReport, details, intl, previousReport, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost'; // cost, supplementary cost, etc.\n            const computedReportItemValue = trend.computedReportItemValue; // infrastructure usage cost\n            const title = intl.formatMessage(trend.titleKey, { units: this.getFormattedUnits() });\n            // Cost data\n            const currentData = transformReport(currentReport, trend.datumType, 'date', computedReportItem, computedReportItemValue);\n            const previousData = transformReport(previousReport, trend.datumType, 'date', computedReportItem, computedReportItemValue);\n            // Forecast data\n            const { forecastData, forecastConeData } = this.getForecastData(currentReport, trend.computedForecastItem);\n            return (React.createElement(ReportSummaryTrend, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, chartName: chartName, currentData: currentData, forecastData: forecastData, forecastConeData: forecastConeData, formatOptions: trend.formatOptions, formatter: chartFormatter || formatUnits, height: height, previousData: previousData, showForecast: trend.computedForecastItem !== undefined, showSupplementaryLabel: showSupplementaryLabel, showUsageLegendLabel: details.showUsageLegendLabel, title: title, units: this.getUnits() }));\n        };\n        // This chart displays usage and requests\n        this.getUsageChart = (height, adjustContainerHeight = false) => {\n            const { chartFormatter, chartName, currentReport, intl, previousReport, trend } = this.props;\n            const title = intl.formatMessage(trend.titleKey, {\n                units: this.getFormattedUnits(),\n            });\n            // Request data\n            const currentRequestData = transformReport(currentReport, trend.datumType, 'date', 'request');\n            const previousRequestData = transformReport(previousReport, trend.datumType, 'date', 'request');\n            // Usage data\n            const currentUsageData = transformReport(currentReport, trend.datumType, 'date', 'usage');\n            const previousUsageData = transformReport(previousReport, trend.datumType, 'date', 'usage');\n            return (React.createElement(ReportSummaryUsage, { adjustContainerHeight: adjustContainerHeight, chartName: chartName, containerHeight: chartStyles.containerUsageHeight, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatOptions: trend.formatOptions, formatter: chartFormatter || formatUnits, height: height, previousRequestData: previousRequestData, previousUsageData: previousUsageData, title: title }));\n        };\n        this.getDetails = () => {\n            const { chartType, currentReport, details, reportType, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            return (React.createElement(ReportSummaryDetails, { chartType: chartType, computedReportItem: computedReportItem, computedReportItemValue: computedReportItemValue, costLabel: this.getDetailsLabel(details.costKey), formatOptions: details.formatOptions, report: currentReport, reportType: reportType, requestLabel: this.getDetailsLabel(details.requestKey), showTooltip: details.showTooltip, showUnits: details.showUnits, showUsageFirst: details.showUsageFirst, units: this.getUnits(), usageFormatOptions: details.usageFormatOptions, usageLabel: this.getDetailsLabel(details.usageKey) }));\n        };\n        this.getDetailsLabel = (key) => {\n            const { intl } = this.props;\n            return key ? intl.formatMessage(key) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, details } = this.props;\n            if (details.viewAllPath) {\n                return React.createElement(Link, { to: this.buildDetailsLink(currentTab) }, this.getDetailsLinkTitle(currentTab));\n            }\n            return null;\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { getIdKeyForTab, intl } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return intl.formatMessage(messages.groupByAll, { value: key, count: 2 });\n        };\n        this.getFormattedUnits = () => {\n            const { intl, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const units = this.getUnits();\n            if (computedReportItem === ComputedReportItemType.usage) {\n                return intl.formatMessage(messages.units, { units: unitsLookupKey(units) });\n            }\n            return intl.formatMessage(messages.currencyUnits, { units });\n        };\n        this.getHorizontalLayout = () => {\n            const { containerAltHeight = chartStyles.containerAltHeight, chartAltHeight = chartStyles.chartAltHeight, currentReportFetchStatus, details, } = this.props;\n            return (React.createElement(ReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(containerAltHeight, chartAltHeight, details.adjustContainerHeight)));\n        };\n        this.getOptimizationsSummary = () => {\n            const { rosReportFetchStatus, rosReport, titleKey } = this.props;\n            return React.createElement(OptimizationsSummary, { status: rosReportFetchStatus, report: rosReport, title: titleKey });\n        };\n        this.getTab = (tab, index) => {\n            const { getIdKeyForTab, tabsReport, tabsReportFetchStatus } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) },\n                React.createElement(\"div\", { style: styles.tabItems },\n                    React.createElement(ReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport, status: tabsReportFetchStatus }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, getIdKeyForTab, tabsReport, topItems, trend } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            let totalValue;\n            const hasTotal = tabsReport && tabsReport.meta && tabsReport.meta.total;\n            if (computedReportItem === ComputedReportItemType.usage) {\n                if (hasTotal && tabsReport.meta.total.usage) {\n                    totalValue = tabsReport.meta.total.usage.value;\n                }\n            }\n            else {\n                if (hasTotal &&\n                    tabsReport.meta.total[computedReportItem] &&\n                    tabsReport.meta.total[computedReportItem][computedReportItemValue]) {\n                    totalValue = tabsReport.meta.total[computedReportItem][computedReportItemValue].value;\n                }\n            }\n            if (activeTab === currentTab) {\n                return (React.createElement(ReportSummaryItem, { formatOptions: topItems ? topItems.formatOptions : undefined, key: `${reportItem.id}-item`, label: reportItem.label ? reportItem.label.toString() : '', totalValue: totalValue, units: this.getUnits(), value: reportItem[computedReportItem][computedReportItemValue].value }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { getIdKeyForTab, intl } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return intl.formatMessage(messages.groupByTop, { value: key, count: 2 });\n        };\n        this.getTitle = () => {\n            const { intl, titleKey } = this.props;\n            return intl.formatMessage(titleKey);\n        };\n        this.getUnits = () => {\n            const { currentReport, details, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            if (details.units) {\n                return details.units;\n            }\n            if (!currentReport) {\n                return '';\n            }\n            const hasTotal = currentReport && currentReport.meta && currentReport.meta.total;\n            if (computedReportItem === ComputedReportItemType.usage) {\n                const hasUsage = hasTotal && currentReport.meta.total.usage;\n                return hasUsage ? currentReport.meta.total.usage.units : undefined;\n            }\n            else {\n                const hasCost = hasTotal &&\n                    currentReport.meta.total[computedReportItem] &&\n                    currentReport.meta.total[computedReportItem][computedReportItemValue];\n                return hasCost ? currentReport.meta.total[computedReportItem][computedReportItemValue].units : 'USD';\n            }\n        };\n        this.getVerticalLayout = () => {\n            const { availableTabs, currentReportFetchStatus, details } = this.props;\n            return (React.createElement(ReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerTrendHeight, chartStyles.chartHeight, details.adjustContainerHeight),\n                availableTabs && React.createElement(\"div\", { style: styles.tabs }, this.getTabs())));\n        };\n        this.handleComparisonClick = (value) => {\n            this.setState({ currentComparison: value });\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({ activeTabKey: tabIndex });\n        };\n        this.updateForecasts = () => {\n            const { fetchForecasts, widgetId } = this.props;\n            if (fetchForecasts) {\n                fetchForecasts(widgetId);\n            }\n        };\n        this.updateReports = () => {\n            const { fetchReports, widgetId } = this.props;\n            if (fetchReports) {\n                fetchReports(widgetId);\n            }\n        };\n        this.updateRosReports = () => {\n            const { fetchRosReports, isRosFeatureEnabled, widgetId } = this.props;\n            if (fetchRosReports && isRosFeatureEnabled) {\n                fetchRosReports(widgetId);\n            }\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, details, id, trend, updateTab } = this.props;\n        if (availableTabs) {\n            updateTab(id, availableTabs[0]);\n        }\n        if (trend && trend.computedForecastItem !== undefined) {\n            this.updateForecasts();\n        }\n        if (!details.showOptimizations) {\n            this.updateReports();\n        }\n        if (details.showOptimizations) {\n            this.updateRosReports();\n        }\n    }\n    componentDidUpdate(prevProps) {\n        const { costType, currency, trend } = this.props;\n        if (prevProps.costType !== costType || prevProps.currency !== currency) {\n            this.updateReports();\n            if (trend && trend.computedForecastItem !== undefined) {\n                this.updateForecasts();\n            }\n        }\n    }\n    render() {\n        const { details, isRosFeatureEnabled } = this.props;\n        if (details.showOptimizations) {\n            return isRosFeatureEnabled ? this.getOptimizationsSummary() : null;\n        }\n        return details.showHorizontal ? this.getHorizontalLayout() : this.getVerticalLayout();\n    }\n}\nexport default DashboardWidgetBase;\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { awsDashboardActions, awsDashboardSelectors, AwsDashboardTab } from 'store/dashboard/awsDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCostType, getCurrency } from 'utils/localStorage';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case AwsDashboardTab.services:\n            return 'service';\n        case AwsDashboardTab.accounts:\n            return 'account';\n        case AwsDashboardTab.regions:\n            return 'region';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), costType: getCostType(), getIdKeyForTab }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: awsDashboardActions.fetchWidgetForecasts,\n    fetchReports: awsDashboardActions.fetchWidgetReports,\n    updateTab: awsDashboardActions.changeWidgetTab,\n};\nconst AwsDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AwsDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { awsDashboardSelectors } from 'store/dashboard/awsDashboard';\nimport { AwsDashboardWidget } from './awsDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: AwsDashboardWidget,\n        selectWidgets: awsDashboardSelectors.selectWidgets(state),\n        widgets: awsDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default AwsDashboard;\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { awsOcpDashboardActions, awsOcpDashboardSelectors, AwsOcpDashboardTab } from 'store/dashboard/awsOcpDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCostType, getCurrency } from 'utils/localStorage';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case AwsOcpDashboardTab.services:\n            return 'service';\n        case AwsOcpDashboardTab.accounts:\n            return 'account';\n        case AwsOcpDashboardTab.regions:\n            return 'region';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsOcpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsOcpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), costType: getCostType(), getIdKeyForTab }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: awsOcpDashboardActions.fetchWidgetForecasts,\n    fetchReports: awsOcpDashboardActions.fetchWidgetReports,\n    updateTab: awsOcpDashboardActions.changeWidgetTab,\n};\nconst AwsOcpDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AwsOcpDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { awsOcpDashboardSelectors } from 'store/dashboard/awsOcpDashboard';\nimport { AwsOcpDashboardWidget } from './awsOcpDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: AwsOcpDashboardWidget,\n        selectWidgets: awsOcpDashboardSelectors.selectWidgets(state),\n        widgets: awsOcpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsOcpDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default AwsOcpDashboard;\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { azureDashboardActions, azureDashboardSelectors, AzureDashboardTab } from 'store/dashboard/azureDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case AzureDashboardTab.service_names:\n            return 'service_name';\n        case AzureDashboardTab.subscription_guids:\n            return 'subscription_guid';\n        case AzureDashboardTab.resource_locations:\n            return 'resource_location';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = azureDashboardSelectors.selectWidget(state, widgetId);\n    const queries = azureDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), getIdKeyForTab }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: azureDashboardActions.fetchWidgetForecasts,\n    fetchReports: azureDashboardActions.fetchWidgetReports,\n    updateTab: azureDashboardActions.changeWidgetTab,\n};\nconst AzureDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AzureDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { azureDashboardSelectors } from 'store/dashboard/azureDashboard';\nimport { AzureDashboardWidget } from './azureDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: AzureDashboardWidget,\n        selectWidgets: azureDashboardSelectors.selectWidgets(state),\n        widgets: azureDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AzureDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default AzureDashboard;\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { azureOcpDashboardActions, azureOcpDashboardSelectors, AzureOcpDashboardTab, } from 'store/dashboard/azureOcpDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case AzureOcpDashboardTab.service_names:\n            return 'service_name';\n        case AzureOcpDashboardTab.subscription_guids:\n            return 'subscription_guid';\n        case AzureOcpDashboardTab.resource_locations:\n            return 'resource_location';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = azureOcpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = azureOcpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), getIdKeyForTab }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: azureOcpDashboardActions.fetchWidgetForecasts,\n    fetchReports: azureOcpDashboardActions.fetchWidgetReports,\n    updateTab: azureOcpDashboardActions.changeWidgetTab,\n};\nconst AzureOcpDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AzureOcpDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { azureOcpDashboardSelectors } from 'store/dashboard/azureOcpDashboard';\nimport { AzureOcpDashboardWidget } from './azureOcpDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: AzureOcpDashboardWidget,\n        selectWidgets: azureOcpDashboardSelectors.selectWidgets(state),\n        widgets: azureOcpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AzureOcpDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default AzureOcpDashboard;\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { gcpDashboardActions, gcpDashboardSelectors, GcpDashboardTab } from 'store/dashboard/gcpDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case GcpDashboardTab.gcpProjects:\n            return 'gcp_project';\n        case GcpDashboardTab.regions:\n            return 'region';\n        case GcpDashboardTab.services:\n            return 'service';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = gcpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = gcpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), getIdKeyForTab }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: gcpDashboardActions.fetchWidgetForecasts,\n    fetchReports: gcpDashboardActions.fetchWidgetReports,\n    updateTab: gcpDashboardActions.changeWidgetTab,\n};\nconst GcpDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { GcpDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { gcpDashboardSelectors } from 'store/dashboard/gcpDashboard';\nimport { GcpDashboardWidget } from './gcpDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: GcpDashboardWidget,\n        selectWidgets: gcpDashboardSelectors.selectWidgets(state),\n        widgets: gcpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst GcpDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default GcpDashboard;\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { gcpOcpDashboardActions, gcpOcpDashboardSelectors, GcpOcpDashboardTab } from 'store/dashboard/gcpOcpDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case GcpOcpDashboardTab.gcpProjects:\n            return 'gcp_project';\n        case GcpOcpDashboardTab.regions:\n            return 'region';\n        case GcpOcpDashboardTab.services:\n            return 'service';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = gcpOcpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = gcpOcpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), getIdKeyForTab }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: gcpOcpDashboardActions.fetchWidgetForecasts,\n    fetchReports: gcpOcpDashboardActions.fetchWidgetReports,\n    updateTab: gcpOcpDashboardActions.changeWidgetTab,\n};\nconst GcpOcpDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { GcpOcpDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { gcpOcpDashboardSelectors } from 'store/dashboard/gcpOcpDashboard';\nimport { GcpOcpDashboardWidget } from './gcpOcpDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: GcpOcpDashboardWidget,\n        selectWidgets: gcpOcpDashboardSelectors.selectWidgets(state),\n        widgets: gcpOcpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst GcpOcpDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default GcpOcpDashboard;\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { ibmDashboardActions, ibmDashboardSelectors, IbmDashboardTab } from 'store/dashboard/ibmDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case IbmDashboardTab.services:\n            return 'service';\n        case IbmDashboardTab.projects:\n            return 'project';\n        case IbmDashboardTab.regions:\n            return 'region';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ibmDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ibmDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), getIdKeyForTab }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: ibmDashboardActions.fetchWidgetForecasts,\n    fetchReports: ibmDashboardActions.fetchWidgetReports,\n    updateTab: ibmDashboardActions.changeWidgetTab,\n};\nconst IbmDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { IbmDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { ibmDashboardSelectors } from 'store/dashboard/ibmDashboard';\nimport { IbmDashboardWidget } from './ibmDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: IbmDashboardWidget,\n        selectWidgets: ibmDashboardSelectors.selectWidgets(state),\n        widgets: ibmDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst IbmDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default IbmDashboard;\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardActions, ocpCloudDashboardSelectors, OcpCloudDashboardTab, } from 'store/dashboard/ocpCloudDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case OcpCloudDashboardTab.accounts:\n            return 'account';\n        case OcpCloudDashboardTab.regions:\n            return 'region';\n        case OcpCloudDashboardTab.services:\n            return 'service';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), getIdKeyForTab }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: ocpCloudDashboardActions.fetchWidgetForecasts,\n    fetchReports: ocpCloudDashboardActions.fetchWidgetReports,\n    updateTab: ocpCloudDashboardActions.changeWidgetTab,\n};\nconst OcpCloudDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpCloudDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardSelectors } from 'store/dashboard/ocpCloudDashboard';\nimport { OcpCloudDashboardWidget } from './ocpCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: OcpCloudDashboardWidget,\n        selectWidgets: ocpCloudDashboardSelectors.selectWidgets(state),\n        widgets: ocpCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpCloudDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default OcpCloudDashboard;\n","export const chartStyles = {\n    chartAltHeight: 250,\n    containerAltHeight: 250,\n};\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardActions, ocpDashboardSelectors, OcpDashboardTab } from 'store/dashboard/ocpDashboard';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { rosSelectors } from 'store/ros';\nimport { getCurrency } from 'utils/localStorage';\nimport { chartStyles } from './ocpDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case OcpDashboardTab.clusters:\n            return 'cluster';\n        case OcpDashboardTab.nodes:\n            return 'node';\n        case OcpDashboardTab.projects:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), getIdKeyForTab, chartAltHeight: chartStyles.chartAltHeight, containerAltHeight: chartStyles.containerAltHeight }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    })), (widget.rosPathsType &&\n        widget.rosType && {\n        isRosFeatureEnabled: featureFlagsSelectors.selectIsRosFeatureEnabled(state),\n        rosReport: rosSelectors.selectRos(state, widget.rosPathsType, widget.rosType, queries.optimizations),\n        rosReportError: rosSelectors.selectRosError(state, widget.rosPathsType, widget.rosType, queries.optimizations),\n        rosReportFetchStatus: rosSelectors.selectRosFetchStatus(state, widget.rosPathsType, widget.rosType, queries.optimizations),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: ocpDashboardActions.fetchWidgetForecasts,\n    fetchReports: ocpDashboardActions.fetchWidgetReports,\n    fetchRosReports: ocpDashboardActions.fetchWidgetRosReports,\n    updateTab: ocpDashboardActions.changeWidgetTab,\n};\nconst OcpDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardSelectors } from 'store/dashboard/ocpDashboard';\nimport { OcpDashboardWidget } from './ocpDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: OcpDashboardWidget,\n        selectWidgets: ocpDashboardSelectors.selectWidgets(state),\n        widgets: ocpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default OcpDashboard;\n","export const chartStyles = {\n    chartAltHeight: 250,\n    containerAltHeight: 250,\n};\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { rhelDashboardActions, rhelDashboardSelectors, RhelDashboardTab } from 'store/dashboard/rhelDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nimport { chartStyles } from './rhelDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case RhelDashboardTab.clusters:\n            return 'cluster';\n        case RhelDashboardTab.nodes:\n            return 'node';\n        case RhelDashboardTab.projects:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = rhelDashboardSelectors.selectWidget(state, widgetId);\n    const queries = rhelDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), getIdKeyForTab, chartAltHeight: chartStyles.chartAltHeight, containerAltHeight: chartStyles.containerAltHeight }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: rhelDashboardActions.fetchWidgetForecasts,\n    fetchReports: rhelDashboardActions.fetchWidgetReports,\n    updateTab: rhelDashboardActions.changeWidgetTab,\n};\nconst RhelDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { RhelDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { rhelDashboardSelectors } from 'store/dashboard/rhelDashboard';\nimport { RhelDashboardWidget } from './rhelDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: RhelDashboardWidget,\n        selectWidgets: rhelDashboardSelectors.selectWidgets(state),\n        widgets: rhelDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst RhelDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default RhelDashboard;\n","import { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { DashboardWidgetBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { ociDashboardActions, ociDashboardSelectors, OciDashboardTab } from 'store/dashboard/ociDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { getCurrency } from 'utils/localStorage';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case OciDashboardTab.product_services:\n            return 'product_service';\n        case OciDashboardTab.payer_tenant_ids:\n            return 'payer_tenant_id';\n        case OciDashboardTab.regions:\n            return 'region';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ociDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ociDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign(Object.assign(Object.assign({}, widget), { currency: getCurrency(), getIdKeyForTab }), (widget.forecastPathsType &&\n        widget.forecastType && {\n        forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastError: forecastSelectors.selectForecastError(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n        forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast),\n    })), (widget.reportPathsType &&\n        widget.reportType && {\n        currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.current),\n        currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current),\n        previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.previous),\n        previousReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.previous),\n        tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportError: reportSelectors.selectReportError(state, widget.reportPathsType, widget.reportType, queries.tabs),\n        tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs),\n    }));\n});\nconst mapDispatchToProps = {\n    fetchForecasts: ociDashboardActions.fetchWidgetForecasts,\n    fetchReports: ociDashboardActions.fetchWidgetReports,\n    updateTab: ociDashboardActions.changeWidgetTab,\n};\nconst OciDashboardWidget = injectIntl(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OciDashboardWidget };\n","import { connect } from 'react-redux';\nimport { DashboardBase } from 'routes/views/overview/components';\nimport { createMapStateToProps } from 'store/common';\nimport { ociDashboardSelectors } from 'store/dashboard/ociDashboard';\nimport { OciDashboardWidget } from './ociDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: OciDashboardWidget,\n        selectWidgets: ociDashboardSelectors.selectWidgets(state),\n        widgets: ociDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OciDashboard = connect(mapStateToProps, {})(DashboardBase);\nexport default OciDashboard;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    date: {\n        alignSelf: 'center',\n        flexGrow: 1,\n        textAlign: 'end',\n    },\n    costType: {\n        marginLeft: global_spacer_md.var,\n    },\n    header: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        padding: global_spacer_lg.var,\n    },\n    headerContent: {\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    headerContentLeft: {\n        display: 'flex',\n    },\n    headerContentRight: {\n        display: 'flex',\n    },\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    main: {\n        padding: global_spacer_lg.value,\n    },\n    tabs: {\n        backgroundColor: global_BackgroundColor_light_100.var,\n        paddingBottom: global_spacer_lg.var,\n        paddingTop: global_spacer_lg.var,\n    },\n};\n","import './overview.scss';\nimport { Button, ButtonVariant, Popover, Tab, TabContent, Tabs, TabTitleText, Title, TitleSizes, } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons/dist/esm/icons/outlined-question-circle-icon';\nimport { ProviderType } from 'api/providers';\nimport { getQueryRoute, parseQuery } from 'api/queries/overviewQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { getUserAccessQuery } from 'api/queries/userAccessQuery';\nimport { UserAccessType } from 'api/userAccess';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { CostType } from 'routes/components/costType';\nimport { Currency } from 'routes/components/currency';\nimport { Loading } from 'routes/state/loading';\nimport NoData from 'routes/state/noData/noData';\nimport { NoProviders } from 'routes/state/noProviders';\nimport { Perspective } from 'routes/views/components/perspective';\nimport { AwsDashboard } from 'routes/views/overview/awsDashboard';\nimport { AwsOcpDashboard } from 'routes/views/overview/awsOcpDashboard';\nimport { AzureDashboard } from 'routes/views/overview/azureDashboard';\nimport { AzureOcpDashboard } from 'routes/views/overview/azureOcpDashboard';\nimport { GcpDashboard } from 'routes/views/overview/gcpDashboard';\nimport { GcpOcpDashboard } from 'routes/views/overview/gcpOcpDashboard';\nimport { IbmDashboard } from 'routes/views/overview/ibmDashboard';\nimport { OcpCloudDashboard } from 'routes/views/overview/ocpCloudDashboard';\nimport { OcpDashboard } from 'routes/views/overview/ocpDashboard';\nimport { RhelDashboard } from 'routes/views/overview/rhelDashboard';\nimport { filterProviders, hasCloudCurrentMonthData, hasCloudData, hasCloudPreviousMonthData, hasCloudProvider, hasCurrentMonthData, hasPreviousMonthData, } from 'routes/views/utils/providers';\nimport { createMapStateToProps, FetchStatus } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { providersQuery, providersSelectors } from 'store/providers';\nimport { userAccessQuery, userAccessSelectors } from 'store/userAccess';\nimport { getSinceDateRangeString } from 'utils/dates';\nimport { getCostType, getCurrency } from 'utils/localStorage';\nimport { withRouter } from 'utils/router';\nimport { hasAwsAccess, hasAzureAccess, hasGcpAccess, hasIbmAccess, isAwsAvailable, isAzureAvailable, isGcpAvailable, isIbmAvailable, isOciAvailable, isOcpAvailable, isRhelAvailable, } from 'utils/userAccess';\nimport { OciDashboard } from './ociDashboard';\nimport { styles } from './overview.styles';\n// eslint-disable-next-line no-shadow\nvar InfrastructurePerspective;\n(function (InfrastructurePerspective) {\n    InfrastructurePerspective[\"aws\"] = \"aws\";\n    InfrastructurePerspective[\"awsOcp\"] = \"aws_ocp\";\n    InfrastructurePerspective[\"azure\"] = \"azure\";\n    InfrastructurePerspective[\"azureOcp\"] = \"azure_ocp\";\n    InfrastructurePerspective[\"gcp\"] = \"gcp\";\n    InfrastructurePerspective[\"gcpOcp\"] = \"gcp_ocp\";\n    InfrastructurePerspective[\"ibm\"] = \"ibm\";\n    InfrastructurePerspective[\"ibmOcp\"] = \"ibm_ocp\";\n    InfrastructurePerspective[\"oci\"] = \"oci\";\n    InfrastructurePerspective[\"ocpCloud\"] = \"ocp_cloud\";\n})(InfrastructurePerspective || (InfrastructurePerspective = {}));\n// eslint-disable-next-line no-shadow\nvar OcpPerspective;\n(function (OcpPerspective) {\n    OcpPerspective[\"ocp\"] = \"ocp\";\n})(OcpPerspective || (OcpPerspective = {}));\n// eslint-disable-next-line no-shadow\nvar OverviewTab;\n(function (OverviewTab) {\n    OverviewTab[\"infrastructure\"] = \"infrastructure\";\n    OverviewTab[\"ocp\"] = \"ocp\";\n    OverviewTab[\"rhel\"] = \"rhel\";\n})(OverviewTab || (OverviewTab = {}));\n// eslint-disable-next-line no-shadow\nvar RhelPerspective;\n(function (RhelPerspective) {\n    RhelPerspective[\"rhel\"] = \"rhel\";\n})(RhelPerspective || (RhelPerspective = {}));\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case OverviewTab.infrastructure:\n            return 'infrastructure';\n        case OverviewTab.ocp:\n            return 'ocp';\n        case OverviewTab.rhel:\n            return 'rhel';\n    }\n};\nclass OverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            activeTabKey: 0,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getAvailableTabs = () => {\n            const { isFinsightsFeatureEnabled } = this.props;\n            const availableTabs = [];\n            const infrastructureTabs = this.isAwsAvailable() ||\n                this.isAzureAvailable() ||\n                this.isGcpAvailable() ||\n                this.isIbmAvailable() ||\n                this.isOciAvailable() ||\n                this.isOcpCloudAvailable()\n                ? [\n                    {\n                        contentRef: React.createRef(),\n                        tab: OverviewTab.infrastructure,\n                    },\n                ]\n                : undefined;\n            const ocpTabs = this.isOcpAvailable()\n                ? [\n                    {\n                        contentRef: React.createRef(),\n                        tab: OverviewTab.ocp,\n                    },\n                ]\n                : undefined;\n            const rhelTabs = this.isRhelAvailable()\n                ? [\n                    {\n                        contentRef: React.createRef(),\n                        tab: OverviewTab.rhel,\n                    },\n                ]\n                : undefined;\n            if (isFinsightsFeatureEnabled) {\n                if (infrastructureTabs) {\n                    availableTabs.push(...infrastructureTabs);\n                }\n                if (rhelTabs) {\n                    availableTabs.push(...rhelTabs);\n                }\n                if (ocpTabs) {\n                    availableTabs.push(...ocpTabs);\n                }\n            }\n            else {\n                if (ocpTabs) {\n                    availableTabs.push(...ocpTabs);\n                }\n                if (infrastructureTabs) {\n                    availableTabs.push(...infrastructureTabs);\n                }\n            }\n            return availableTabs;\n        };\n        this.getCostType = () => {\n            const { costType } = this.props;\n            const { currentInfrastructurePerspective, currentOcpPerspective } = this.state;\n            const currentItem = this.getCurrentTab() === OverviewTab.infrastructure ? currentInfrastructurePerspective : currentOcpPerspective;\n            if (currentItem === InfrastructurePerspective.aws || currentItem === InfrastructurePerspective.awsOcp) {\n                return (React.createElement(\"div\", { style: styles.costType },\n                    React.createElement(CostType, { costType: costType, onSelect: this.handleOnCostTypeSelected })));\n            }\n            return null;\n        };\n        this.getCurrency = () => {\n            const { currency } = this.props;\n            return React.createElement(Currency, { onSelect: this.handleOnCurrencySelected, currency: currency });\n        };\n        this.getCurrentTab = () => {\n            const { isFinsightsFeatureEnabled } = this.props;\n            const { activeTabKey } = this.state;\n            const hasAws = this.isAwsAvailable();\n            const hasAzure = this.isAzureAvailable();\n            const hasOci = this.isOciAvailable();\n            const hasGcp = this.isGcpAvailable();\n            const hasIbm = this.isIbmAvailable();\n            const hasOcp = this.isOcpAvailable();\n            const hasOcpCloud = this.isOcpCloudAvailable();\n            const hasRhel = this.isRhelAvailable();\n            const hasInfrastructure = hasAws || hasAzure || hasOci || hasGcp || hasIbm || hasOcpCloud;\n            const showInfrastructureOnly = hasInfrastructure && !hasOcp && !hasRhel;\n            const showOcpOnly = hasOcp && !hasInfrastructure && !hasRhel;\n            const showRhelOnly = hasRhel && !hasInfrastructure && !hasOcp;\n            if (showOcpOnly) {\n                return OverviewTab.ocp;\n            }\n            else if (showInfrastructureOnly) {\n                return OverviewTab.infrastructure;\n            }\n            else if (showRhelOnly) {\n                return OverviewTab.rhel;\n            }\n            else {\n                if (isFinsightsFeatureEnabled) {\n                    switch (activeTabKey) {\n                        case 0:\n                            return OverviewTab.infrastructure;\n                        case 1:\n                            return OverviewTab.rhel;\n                        case 2:\n                            return OverviewTab.ocp;\n                    }\n                }\n                switch (activeTabKey) {\n                    case 0:\n                        return OverviewTab.ocp;\n                    case 1:\n                        return OverviewTab.infrastructure;\n                }\n            }\n        };\n        this.getDefaultInfrastructurePerspective = () => {\n            const { perspective } = this.props;\n            // Upon page refresh, perspective param takes precedence\n            switch (perspective) {\n                case InfrastructurePerspective.aws:\n                case InfrastructurePerspective.awsOcp:\n                case InfrastructurePerspective.azure:\n                case InfrastructurePerspective.oci:\n                case InfrastructurePerspective.azureOcp:\n                case InfrastructurePerspective.gcp:\n                case InfrastructurePerspective.gcpOcp:\n                case InfrastructurePerspective.ibm:\n                case InfrastructurePerspective.ibmOcp:\n                case InfrastructurePerspective.ocpCloud:\n                    return perspective;\n            }\n            if (this.isOcpCloudAvailable()) {\n                return InfrastructurePerspective.ocpCloud;\n            }\n            if (this.isAwsAvailable()) {\n                return InfrastructurePerspective.aws;\n            }\n            if (this.isAzureAvailable()) {\n                return InfrastructurePerspective.azure;\n            }\n            if (this.isOciAvailable()) {\n                return InfrastructurePerspective.oci;\n            }\n            if (this.isGcpAvailable()) {\n                return InfrastructurePerspective.gcp;\n            }\n            if (this.isIbmAvailable()) {\n                return InfrastructurePerspective.ibm;\n            }\n            return undefined;\n        };\n        this.getDefaultOcpPerspective = () => {\n            const { ocpProviders, perspective, userAccess } = this.props;\n            // Upon page refresh, perspective param takes precedence\n            switch (perspective) {\n                case OcpPerspective.ocp:\n                    return perspective;\n            }\n            if (isOcpAvailable(userAccess, ocpProviders)) {\n                return OcpPerspective.ocp;\n            }\n            return undefined;\n        };\n        this.getDefaultRhelPerspective = () => {\n            const { perspective, rhelProviders, userAccess } = this.props;\n            // Upon page refresh, perspective param takes precedence\n            switch (perspective) {\n                case RhelPerspective.rhel:\n                    return perspective;\n            }\n            if (isRhelAvailable(userAccess, rhelProviders)) {\n                return RhelPerspective.rhel;\n            }\n            return undefined;\n        };\n        this.getPerspective = () => {\n            const { isIbmFeatureEnabled } = this.props;\n            const { currentInfrastructurePerspective, currentOcpPerspective, currentRhelPerspective } = this.state;\n            const hasAws = this.isAwsAvailable();\n            const hasAzure = this.isAzureAvailable();\n            const hasGcp = this.isGcpAvailable();\n            const hasIbm = this.isIbmAvailable();\n            const hasOci = this.isOciAvailable();\n            const hasOcp = this.isOcpAvailable();\n            const hasRhel = this.isRhelAvailable();\n            // Note: No need to test \"OCP on cloud\" here, since that requires at least one of the providers below\n            if (!(hasAws || hasAzure || hasGcp || hasIbm || hasOci || hasOcp || hasRhel)) {\n                return null;\n            }\n            let currentItem;\n            const currentTab = this.getCurrentTab();\n            switch (currentTab) {\n                case OverviewTab.infrastructure:\n                    currentItem = currentInfrastructurePerspective;\n                    break;\n                case OverviewTab.ocp:\n                    currentItem = currentOcpPerspective;\n                    break;\n                case OverviewTab.rhel:\n                    currentItem = currentRhelPerspective;\n                    break;\n            }\n            return (React.createElement(Perspective, { currentItem: currentItem, hasAws: hasAws, hasAwsOcp: this.isAwsOcpAvailable(), hasAzure: hasAzure, hasAzureOcp: this.isAzureOcpAvailable(), hasGcp: hasGcp, hasGcpOcp: this.isGcpOcpAvailable(), hasIbm: hasIbm, hasIbmOcp: this.isIbmOcpAvailable(), hasOci: hasOci, hasOcp: hasOcp, hasOcpCloud: this.isOcpCloudAvailable(), hasRhel: hasRhel, isIbmFeatureEnabled: isIbmFeatureEnabled, isInfrastructureTab: OverviewTab.infrastructure === currentTab, isRhelTab: OverviewTab.rhel === currentTab, onSelected: this.handlePerspectiveSelected }));\n        };\n        this.getRouteForQuery = (query) => {\n            const { router } = this.props;\n            return `${router.location.pathname}?${getQueryRoute(query)}`;\n        };\n        this.getTab = (tab, contentRef, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, tabContentId: `tab-${index}`, tabContentRef: contentRef, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) }));\n        };\n        this.getTabContent = (availableTabs) => {\n            return availableTabs.map((val, index) => {\n                return (React.createElement(TabContent, { eventKey: index, key: `${getIdKeyForTab(val.tab)}-tabContent`, id: `tab-${index}`, ref: val.contentRef }, this.getTabItem(val.tab, index)));\n            });\n        };\n        this.getTabItem = (tab, index) => {\n            const { awsProviders, azureProviders, ociProviders, costType, currency, gcpProviders, ibmProviders, ocpProviders, rhelProviders, } = this.props;\n            const { activeTabKey, currentInfrastructurePerspective, currentOcpPerspective, currentRhelPerspective } = this.state;\n            const emptyTab = React.createElement(React.Fragment, null); // Lazily load tabs\n            const noData = React.createElement(NoData, { showReload: false });\n            if (activeTabKey !== index) {\n                return emptyTab;\n            }\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === OverviewTab.infrastructure) {\n                if (currentInfrastructurePerspective === InfrastructurePerspective.ocpCloud) {\n                    const hasData = hasCloudData(awsProviders, ocpProviders) ||\n                        hasCloudData(azureProviders, ocpProviders) ||\n                        hasCloudData(gcpProviders, ocpProviders) ||\n                        hasCloudData(ibmProviders, ocpProviders);\n                    return hasData ? React.createElement(OcpCloudDashboard, { currency: currency }) : noData;\n                }\n                else if (currentInfrastructurePerspective === InfrastructurePerspective.aws) {\n                    const hasData = hasCurrentMonthData(awsProviders) || hasPreviousMonthData(awsProviders);\n                    return hasData ? React.createElement(AwsDashboard, { costType: costType }) : noData;\n                }\n                else if (currentInfrastructurePerspective === InfrastructurePerspective.awsOcp) {\n                    const hasData = hasCloudCurrentMonthData(awsProviders, ocpProviders) || hasCloudPreviousMonthData(awsProviders, ocpProviders);\n                    return hasData ? React.createElement(AwsOcpDashboard, { currency: currency }) : noData;\n                }\n                else if (currentInfrastructurePerspective === InfrastructurePerspective.azure) {\n                    const hasData = hasCurrentMonthData(azureProviders) || hasPreviousMonthData(azureProviders);\n                    return hasData ? React.createElement(AzureDashboard, { currency: currency }) : noData;\n                }\n                else if (currentInfrastructurePerspective === InfrastructurePerspective.azureOcp) {\n                    const hasData = hasCloudCurrentMonthData(azureProviders, ocpProviders) ||\n                        hasCloudPreviousMonthData(azureProviders, ocpProviders);\n                    return hasData ? React.createElement(AzureOcpDashboard, { currency: currency }) : noData;\n                }\n                else if (currentInfrastructurePerspective === InfrastructurePerspective.gcp) {\n                    const hasData = hasCurrentMonthData(gcpProviders) || hasPreviousMonthData(gcpProviders);\n                    return hasData ? React.createElement(GcpDashboard, { currency: currency }) : noData;\n                }\n                else if (currentInfrastructurePerspective === InfrastructurePerspective.gcpOcp) {\n                    const hasData = hasCloudCurrentMonthData(gcpProviders, ocpProviders) || hasCloudPreviousMonthData(gcpProviders, ocpProviders);\n                    return hasData ? React.createElement(GcpOcpDashboard, { currency: currency }) : noData;\n                }\n                else if (currentInfrastructurePerspective === InfrastructurePerspective.ibm) {\n                    const hasData = hasCurrentMonthData(ibmProviders) || hasPreviousMonthData(ibmProviders);\n                    return hasData ? React.createElement(IbmDashboard, { currency: currency }) : noData;\n                }\n                else if (currentInfrastructurePerspective === InfrastructurePerspective.oci) {\n                    const hasData = hasCurrentMonthData(ociProviders) || hasPreviousMonthData(ociProviders);\n                    return hasData ? React.createElement(OciDashboard, { currency: currency }) : noData;\n                }\n                else {\n                    return noData;\n                }\n            }\n            else if (currentTab === OverviewTab.ocp) {\n                const hasData = hasCurrentMonthData(ocpProviders) || hasPreviousMonthData(ocpProviders);\n                if (currentOcpPerspective === OcpPerspective.ocp) {\n                    return hasData ? React.createElement(OcpDashboard, { currency: currency }) : noData;\n                }\n                else {\n                    return noData;\n                }\n            }\n            else if (currentTab === OverviewTab.rhel) {\n                const hasData = hasCurrentMonthData(rhelProviders) || hasPreviousMonthData(rhelProviders);\n                if (currentRhelPerspective === RhelPerspective.rhel) {\n                    return hasData ? React.createElement(RhelDashboard, { currency: currency }) : noData;\n                }\n                else {\n                    return noData;\n                }\n            }\n            else {\n                return emptyTab;\n            }\n        };\n        this.getTabs = (availableTabs) => {\n            const { activeTabKey } = this.state;\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((val, index) => this.getTab(val.tab, val.contentRef, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { intl, isFinsightsFeatureEnabled } = this.props;\n            if (tab === OverviewTab.infrastructure) {\n                if (isFinsightsFeatureEnabled) {\n                    return intl.formatMessage(messages.summary);\n                }\n                return intl.formatMessage(messages.infrastructure);\n            }\n            else if (tab === OverviewTab.ocp) {\n                return intl.formatMessage(messages.openShift);\n            }\n            else if (tab === OverviewTab.rhel) {\n                return intl.formatMessage(messages.rhel);\n            }\n        };\n        this.handleOnCostTypeSelected = () => {\n            const { query, router } = this.props;\n            const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n            router.navigate(this.getRouteForQuery(newQuery), { replace: true });\n        };\n        this.handleOnCurrencySelected = () => {\n            const { router, query } = this.props;\n            const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n            router.navigate(this.getRouteForQuery(newQuery), { replace: true });\n        };\n        this.handlePerspectiveSelected = (value) => {\n            const { query, router } = this.props;\n            const currentTab = this.getCurrentTab();\n            this.setState(Object.assign(Object.assign({}, (currentTab === OverviewTab.infrastructure && {\n                currentInfrastructurePerspective: value,\n            })), (currentTab === OverviewTab.ocp && { currentOcpPerspective: value })), () => {\n                const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { perspective: value });\n                router.navigate(this.getRouteForQuery(newQuery), { replace: true });\n            });\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { query, router } = this.props;\n            const { activeTabKey } = this.state;\n            if (activeTabKey !== tabIndex) {\n                this.setState({\n                    activeTabKey: tabIndex,\n                }, () => {\n                    const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { tabKey: tabIndex });\n                    router.navigate(this.getRouteForQuery(newQuery), { replace: true });\n                });\n            }\n        };\n        this.isAwsAvailable = () => {\n            const { awsProviders, userAccess } = this.props;\n            return isAwsAvailable(userAccess, awsProviders);\n        };\n        this.isAwsOcpAvailable = () => {\n            const { awsProviders, ocpProviders, userAccess } = this.props;\n            return hasAwsAccess(userAccess) && hasCloudProvider(awsProviders, ocpProviders);\n        };\n        this.isAzureAvailable = () => {\n            const { azureProviders, userAccess } = this.props;\n            return isAzureAvailable(userAccess, azureProviders);\n        };\n        this.isAzureOcpAvailable = () => {\n            const { azureProviders, ocpProviders, userAccess } = this.props;\n            return hasAzureAccess(userAccess) && hasCloudProvider(azureProviders, ocpProviders);\n        };\n        this.isGcpAvailable = () => {\n            const { gcpProviders, userAccess } = this.props;\n            return isGcpAvailable(userAccess, gcpProviders);\n        };\n        this.isGcpOcpAvailable = () => {\n            const { gcpProviders, ocpProviders, userAccess } = this.props;\n            return hasGcpAccess(userAccess) && hasCloudProvider(gcpProviders, ocpProviders);\n        };\n        this.isIbmAvailable = () => {\n            const { ibmProviders, userAccess } = this.props;\n            return isIbmAvailable(userAccess, ibmProviders);\n        };\n        this.isIbmOcpAvailable = () => {\n            const { ibmProviders, ocpProviders, userAccess } = this.props;\n            return hasIbmAccess(userAccess) && hasCloudProvider(ibmProviders, ocpProviders);\n        };\n        this.isOciAvailable = () => {\n            const { ociProviders, userAccess } = this.props;\n            return isOciAvailable(userAccess, ociProviders);\n        };\n        this.isOcpAvailable = () => {\n            const { ocpProviders, userAccess } = this.props;\n            return isOcpAvailable(userAccess, ocpProviders);\n        };\n        this.isOcpCloudAvailable = () => {\n            const hasAwsOcp = this.isAwsOcpAvailable();\n            const hasAzureOcp = this.isAzureOcpAvailable();\n            const hasGcpOcp = this.isGcpOcpAvailable();\n            const hasIbmOcp = this.isIbmOcpAvailable();\n            return hasAwsOcp || hasAzureOcp || hasGcpOcp || hasIbmOcp;\n        };\n        this.isRhelAvailable = () => {\n            const { isFinsightsFeatureEnabled, rhelProviders, userAccess } = this.props;\n            return isFinsightsFeatureEnabled && isRhelAvailable(userAccess, rhelProviders);\n        };\n    }\n    componentDidMount() {\n        const { tabKey } = this.props;\n        this.setState({\n            activeTabKey: tabKey,\n            currentInfrastructurePerspective: this.getDefaultInfrastructurePerspective(),\n            currentOcpPerspective: this.getDefaultOcpPerspective(),\n            currentRhelPerspective: this.getDefaultRhelPerspective(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { providers, tabKey, userAccess } = this.props;\n        // Note: User access and providers are fetched via the AccountSettings component used by all routes\n        if (prevProps.userAccess !== userAccess || prevProps.providers !== providers) {\n            this.setState({\n                activeTabKey: tabKey,\n                currentInfrastructurePerspective: this.getDefaultInfrastructurePerspective(),\n                currentOcpPerspective: this.getDefaultOcpPerspective(),\n                currentRhelPerspective: this.getDefaultRhelPerspective(),\n            });\n        }\n    }\n    render() {\n        const { providersFetchStatus, intl, isFinsightsFeatureEnabled, isIbmFeatureEnabled, userAccessFetchStatus } = this.props;\n        // Note: No need to test OCP on cloud here, since that requires at least one provider\n        const noProviders = providersFetchStatus === FetchStatus.complete &&\n            !this.isAwsAvailable() &&\n            !this.isAzureAvailable() &&\n            !this.isGcpAvailable() &&\n            !this.isIbmAvailable() &&\n            !this.isOciAvailable() &&\n            !this.isOcpAvailable() &&\n            !this.isRhelAvailable();\n        const isLoading = providersFetchStatus === FetchStatus.inProgress || userAccessFetchStatus === FetchStatus.inProgress;\n        const availableTabs = this.getAvailableTabs();\n        const title = intl.formatMessage(messages.overviewTitle);\n        if (isLoading) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (noProviders) {\n            return React.createElement(NoProviders, { title: title });\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"header\", { style: styles.header },\n                React.createElement(\"div\", { style: styles.headerContent },\n                    React.createElement(Title, { headingLevel: \"h1\", size: TitleSizes['2xl'] },\n                        title,\n                        React.createElement(\"span\", { style: styles.infoIcon },\n                            React.createElement(Popover, { \"aria-label\": intl.formatMessage(messages.overviewInfoArialLabel), enableFlip: true, bodyContent: React.createElement(React.Fragment, null,\n                                    React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.openShiftCloudInfrastructure)),\n                                    React.createElement(\"p\", null, intl.formatMessage(messages.openShiftCloudInfrastructureDesc)),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.openShift)),\n                                    React.createElement(\"p\", null, intl.formatMessage(messages.openShiftDesc)),\n                                    React.createElement(\"br\", null),\n                                    isFinsightsFeatureEnabled && (React.createElement(React.Fragment, null,\n                                        React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.rhel)),\n                                        React.createElement(\"p\", null, intl.formatMessage(messages.rhelDesc)),\n                                        React.createElement(\"br\", null))),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.aws)),\n                                    React.createElement(\"p\", null, intl.formatMessage(messages.awsDesc)),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.gcp)),\n                                    React.createElement(\"p\", null, intl.formatMessage(messages.gcpDesc)),\n                                    isIbmFeatureEnabled && (React.createElement(React.Fragment, null,\n                                        React.createElement(\"br\", null),\n                                        React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.ibm)),\n                                        React.createElement(\"p\", null, intl.formatMessage(messages.ibmDesc)))),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.azure)),\n                                    React.createElement(\"p\", null, intl.formatMessage(messages.azureDesc)),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, intl.formatMessage(messages.oci)),\n                                    React.createElement(\"p\", null, intl.formatMessage(messages.ociDesc))) },\n                                React.createElement(Button, { \"aria-label\": intl.formatMessage(messages.overviewInfoButtonArialLabel), variant: ButtonVariant.plain },\n                                    React.createElement(OutlinedQuestionCircleIcon, null))))),\n                    React.createElement(\"div\", { style: styles.headerContentRight }, this.getCurrency())),\n                React.createElement(\"div\", { style: styles.tabs }, this.getTabs(availableTabs)),\n                React.createElement(\"div\", { style: styles.headerContent },\n                    React.createElement(\"div\", { style: styles.headerContentLeft },\n                        this.getPerspective(),\n                        this.getCostType()),\n                    React.createElement(\"div\", { style: styles.date }, getSinceDateRangeString()))),\n            React.createElement(\"div\", { style: styles.main }, this.getTabContent(availableTabs))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { router }) => {\n    const queryFromRoute = parseQuery(router.location.search);\n    const tabKey = queryFromRoute.tabKey && !Number.isNaN(queryFromRoute.tabKey) ? Number(queryFromRoute.tabKey) : 0;\n    const perspective = queryFromRoute.perspective;\n    const currency = getCurrency();\n    const costType = perspective === InfrastructurePerspective.aws || perspective === InfrastructurePerspective.awsOcp\n        ? getCostType()\n        : undefined;\n    const query = Object.assign({}, queryFromRoute);\n    const providersQueryString = getProvidersQuery(providersQuery);\n    const providers = providersSelectors.selectProviders(state, ProviderType.all, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, ProviderType.all, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, ProviderType.all, providersQueryString);\n    const userAccessQueryString = getUserAccessQuery(userAccessQuery);\n    const userAccess = userAccessSelectors.selectUserAccess(state, UserAccessType.all, userAccessQueryString);\n    const userAccessError = userAccessSelectors.selectUserAccessError(state, UserAccessType.all, userAccessQueryString);\n    const userAccessFetchStatus = userAccessSelectors.selectUserAccessFetchStatus(state, UserAccessType.all, userAccessQueryString);\n    return {\n        awsProviders: filterProviders(providers, ProviderType.aws),\n        azureProviders: filterProviders(providers, ProviderType.azure),\n        costType,\n        currency,\n        gcpProviders: filterProviders(providers, ProviderType.gcp),\n        ibmProviders: filterProviders(providers, ProviderType.ibm),\n        isFinsightsFeatureEnabled: featureFlagsSelectors.selectIsFinsightsFeatureEnabled(state),\n        isIbmFeatureEnabled: featureFlagsSelectors.selectIsIbmFeatureEnabled(state),\n        ociProviders: filterProviders(providers, ProviderType.oci),\n        ocpProviders: filterProviders(providers, ProviderType.ocp),\n        providers,\n        providersError,\n        providersFetchStatus,\n        perspective,\n        query,\n        rhelProviders: filterProviders(providers, ProviderType.rhel),\n        tabKey,\n        userAccess,\n        userAccessError,\n        userAccessFetchStatus,\n        userAccessQueryString,\n    };\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst Overview = injectIntl(withRouter(connect(mapStateToProps, mapDispatchToProps)(OverviewBase)));\nexport default Overview;\n","import * as utils from './query';\n// filter_by props are converted and returned with logical OR/AND prefix\nexport function getQuery(query) {\n    return utils.getQuery(query);\n}\n// filter_by props are not converted\nexport function getQueryRoute(query) {\n    return utils.getQueryRoute(query);\n}\nexport function parseQuery(query) {\n    return utils.parseQuery(query);\n}\n","import { UserAccessType } from 'api/userAccess';\nconst hasAccess = (userAccess, userAccessType) => {\n    let result = false;\n    if (userAccess && Array.isArray(userAccess.data)) {\n        // Used with multiple types (e.g., type=)\n        const data = userAccess.data.find(d => d.type === userAccessType);\n        result = data && data.access;\n    }\n    else {\n        // Used with type=any, type=GCP, etc.\n        result = userAccess && userAccess.data === true;\n    }\n    return result;\n};\nconst hasProviders = (providers) => {\n    let result = false;\n    if (providers && providers.meta) {\n        // providers API returns empty data array for no sources\n        result = providers.meta.count > 0;\n    }\n    return result;\n};\n// Returns true if user has access to AWS\nexport const hasAwsAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.aws);\n};\n// Returns true if user has access to AWS and at least one source provider\nexport const isAwsAvailable = (userAccess, awsProviders) => {\n    return hasAwsAccess(userAccess) && hasProviders(awsProviders);\n};\n// Returns true if user has access to Azure\nexport const hasAzureAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.azure);\n};\n// Returns true if user has access to Azure and at least one source provider\nexport const isAzureAvailable = (userAccess, azureProviders) => {\n    return hasAzureAccess(userAccess) && hasProviders(azureProviders);\n};\n// Returns true if user has access to Oci\nexport const hasOciAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.oci);\n};\n// Returns true if user has access to Oci and at least one source provider\nexport const isOciAvailable = (userAccess, ociProviders) => {\n    return hasOciAccess(userAccess) && hasProviders(ociProviders);\n};\n// Returns true if user has access to cost models\nexport const hasCostModelAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.cost_model);\n};\n// Returns true if user has access to GCP\nexport const hasGcpAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.gcp);\n};\n// Returns true if user has access to GCP and at least one source provider\nexport const isGcpAvailable = (userAccess, gcpProviders) => {\n    return hasAccess(userAccess, UserAccessType.gcp) && hasProviders(gcpProviders);\n};\n// Returns true if user has access to IBM\nexport const hasIbmAccess = (userAccess) => {\n    return hasGcpAccess(userAccess);\n};\n// Returns true if user has access to IBM and at least one source provider\nexport const isIbmAvailable = (userAccess, ibmProviders) => {\n    return hasIbmAccess(userAccess) && hasProviders(ibmProviders);\n};\n// Returns true if user has access to OCP\nexport const hasOcpAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.ocp);\n};\n// Returns true if user has access to OCP and at least one source provider\nexport const isOcpAvailable = (userAccess, ocpProviders) => {\n    return hasOcpAccess(userAccess) && hasProviders(ocpProviders);\n};\n// Returns true if user has access to RHEL\nexport const hasRhelAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.rhel);\n};\n// Returns true if user has access to RHEL and at least one source provider\nexport const isRhelAvailable = (userAccess, rhelProviders) => {\n    return hasRhelAccess(userAccess) && hasProviders(rhelProviders);\n};\n// Returns true if user has access to ROS\nexport const hasRosAccess = (userAccess) => {\n    return hasAccess(userAccess, UserAccessType.ros);\n};\n// Returns true if user has access to RHEL and at least one source provider\nexport const isRosAvailable = (userAccess, rosProviders) => {\n    return hasRosAccess(userAccess) && hasProviders(rosProviders);\n};\n"],"names":["CalculatorIconConfig","name","height","width","svgPath","yOffset","xOffset","CalculatorIcon","OkIconConfig","OkIcon","getUserAccessQuery","query","stringify","encode","indices","styles","costColumn","textAlign","display","justifyContent","paddingRight","defaultLabel","minWidth","emptyState","backgroundColor","paddingTop","infoArrow","position","infoArrowDesc","bottom","infoDescription","color","fontSize","lastItem","lastItemColumn","managedColumn","nameColumn","DataTable","constructor","props","super","this","getEmptyState","filterBy","intl","isOptimizations","val","Object","values","filter","showMargin","EmptyState","EmptyStateIcon","icon","EmptyStateBody","formatMessage","messages","getSortBy","index","columns","orderBy","direction","getSortParams","sortBy","onSort","handleOnSort","columnIndex","handleOnSelect","event","isSelected","rowId","onSelected","rows","newRows","items","map","row","selected","item","setState","SortByDirection","handleOnRowClick","rowIndex","onRowClick","bind","render","isActionsCell","isLoading","TableComposable","className","gridBreakPoint","hasSelectableRowCaption","variant","TableVariant","Thead","Tr","col","Th","key","value","modifier","sort","isSortable","undefined","style","Tbody","Td","colSpan","Bullseye","Spinner","size","isSelectable","isHoverable","isRowSelected","_event","cells","cellIndex","dataLabel","isActionCell","length","select","disable","selectionDisabled","onSelect","injectIntl","costType","marginBottom","global_spacer_lg","marginTop","costTypeContainer","global_BackgroundColor_light_100","paddingBottom","paddingLeft","currency","currencyContainer","resetContainer","global_spacer_md","title","global_spacer_sm","SettingsBase","arguments","defaultState","currentCostType","currentCurrency","state","assign","getCostType","Title","headingLevel","TitleSizes","isLocalStorage","handleOnCostTypeSelected","showLabel","getCurrency","handleOnCurrencySelected","updateSettings","api","settings","cost_type","PageSection","isFilled","mapStateToProps","updateSettingsStatus","mapDispatchToProps","connect","initialCostModelsQuery","limit","offset","ordering","source_type","description","stringifySearch","keys","reduce","acc","cur","offsetTransform","page","perPage","CostModelsBottomPagination","count","costModels","stateProps","dispatchProps","ownProps","router","itemCount","PaginationVariant","onSetPage","_evt","newPage","newPerPage","navigate","onPerPageSelect","Toolbar","ToolbarContent","ToolbarItem","ToolbarItemVariant","Pagination","titles","paginationTitle","placement","descContainer","padding","defaultCostModelContext","apiError","checked","clearQuery","createError","createProcess","createSuccess","currencyUnits","dataFetched","dirtyName","distribution","distributePlatformUnallocated","distributeWorkerUnallocated","error","fetchSources","type","filterName","goToAddPL","isDiscount","handleMarkupDiscountChange","args","handleDistributionChange","handleDistributePlatformUnallocatedChange","handleDistributeWorkerUnallocatedChange","handleSignChange","loading","markup","metricsHash","onClose","onCurrencyChange","onDescChange","onFilterChange","onPageChange","onPerPageChange","onTypeChange","onNameChange","onSourceSelect","priceListPagination","onPerPageSet","onPageSet","step","setSources","sources","submitTiers","tiers","total","CostModelContext","form","textArea","maxWidth","minHeight","maxHeight","selector","titleWithLearnMore","marginRight","DistributionBase","Consumer","Stack","hasGutter","StackItem","href","rel","target","TextContent","Text","FormGroup","isInline","fieldId","isRequired","Radio","isChecked","label","id","onChange","nameErrors","descriptionErrors","isMarkupValid","trim","validatorsHash","AWS","ctx","Azure","GCP","OCP","priceListCurrent","justSaved","GeneralInformation","getValueLabel","valStr","options","find","o","units","sourceTypeOptions","helperTextInvalid","validated","TextInput","TextArea","SelectDirection","appendMenuTo","toggleAriaLabel","placeholderText","MarkupWithDistributionBase","handleOnKeyDown","keyCode","preventDefault","helpText","Flex","default","alignSelf","FlexItem","InputGroup","InputGroupText","onKeyDown","placeholder","component","TextVariants","List","ListItem","cancel","submitRate","rateFormData","canSubmit","errors","rateKind","Form","ActionGroup","Button","ButtonVariant","isDisabled","onClick","PaginationToolbarTemplate","PriceListTable","metrics","measurements","addRateAction","deleteRateAction","getMetricLabel","m","replace","toLowerCase","getMeasurementLabel","metricOpts","measurementOpts","curr","measurs","i","includes","NoTiersEmptyState","initialFilters","primary","search","setSearch","onRemove","onClearAll","from","to","filtered","stateIndex","rate","metric","label_metric","label_measurement","r1","r2","projection","r","getMetric","getMeasurement","measurement","label_measurement_unit","res","slice","setPrimary","secondaries","selections","setSelections","selection","filters","button","onClear","pagination","isCompact","actions","_rowId","rowData","data","sortCallback","e","ReviewSuccess","EmptyStateSecondaryActions","ReviewDetails","selectedSources","meta","Alert","create","back","TextList","TextListVariants","TextListItem","TextListItemVariants","src","Boolean","costmodel","text","join","FilterInput","onSearch","onKeyPress","evt","borderLeft","AssignSourcesToolbar","filterInputProps","paginationProps","clearAllFilters","ToolbarToggleGroup","breakpoint","toggleIcon","ToolbarFilter","deleteChip","chips","categoryName","sourceType","category","chip","c","Checkbox","uuid","costModel","Sources","fetchData","context","componentDidMount","renderContent","onRefresh","contextType","updateTiersCurrency","rates","cloneDeep","tiered_rates","unit","usage","tag_rates","tag_values","InternalWizard","isProcess","isSuccess","closeFnc","isOpen","onMove","validators","steps","current","setError","setSuccess","updateCostModel","newSteps","ix","canJumpTo","enableNext","isAddingRate","nextButtonText","Wizard","startAtStep","onNext","onBack","onGoToStep","footer","onSave","distribution_info","distribution_type","platform_cost","worker_cost","source_uuids","then","catch","err","CostModelWizardBase","isDialogOpen","closeConfirmDialog","openWizard","CancelButton","OkButton","Provider","queryParam","payload","cost_models","cm","resp","_","currentTarget","closeWizard","pageSelections","s","newState","Number","errorMessage","fetch","Modal","header","CreateCostModelButton","canWrite","rbac","dispatch","tooltip","children","CreateCostModelWizard","createWizard","CannotDeleteContent","head","body","source","DeleteDialog","deleteCostModel","deleteError","dialogData","closeDialog","stateName","status","deleteText","deleteAction","cancelText","cancelAction","sourcesNo","DeleteDialogActions","cannotDeleteTitle","cannotDeleteBody","canDeleteBody","AlertVariant","DeleteDialogBody","ModalVariant","titleIconVariant","CostModelsTableBase","dialogSource","activeSortDirection","activeSortIndex","costData","openDeleteDialog","Unavailable","heightAuto","dateTime","updated_timestamp","day","hour","hour12","minute","month","timeZone","timeZoneName","year","Link","routes","toString","getRowsByStateName","orderName","transforms","sortable","action","pointerEvents","createActions","_rowIx","createOnSort","defaultDirection","TableGridBreakpoint","ActionsColumn","a","CostModelsTableConnect","setDialogActionCreator","inputer","currentValue","setValue","onDeleteChip","_filterName","chipName","split","qval","onDeleteChipGroup","DescriptionFilterConnect","filterType","deleteChipGroup","DescriptionFilter","NameFilterConnect","NameFilter","setToggle","element","document","getElementById","focus","SourceTypeFilterConnect","_dispatchProps","setIsOpen","onFilter","Dropdown","toggle","DropdownToggle","onToggle","dropdownItems","DropdownItem","SourceTypeFilter","ClearableToolbar","CostModelsFilterSelectorConnect","updateFilterType","currentFilterType","SelectOption","Select","SelectVariant","CostModelsFilterSelector","CostModelsTopPagination","ToolbarGroup","CostModelsDetailsBase","getCostModelsData","getMetricsData","getRbacData","componentDidUpdate","prevProps","learnMore","parse","location","ignoreQueryPrefix","searchQuery","tabKey","marginLeft","TagTableBase","initDatum","isAllSelected","report","selectedItems","computedItems","idKey","push","Label","filteredColumns","column","hidden","filteredRows","_a","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","cell","currentReport","JSON","TagTable","TagToolbarBase","getTagActions","onDisableTags","onEnableTags","getCategoryOptions","categoryOptions","itemsPerPage","itemsTotal","onBulkSelected","onFilterAdded","onFilterRemoved","resourcePathsType","showBulkSelect","showFilter","tagActions","TagToolbarConnect","TagToolbar","baseQuery","filter_by","exclude","group_by","project","order_by","cost","reportType","reportPathsType","TagDetails","getComputedItems","getPagination","isBottom","Math","trunc","pageNumber","widgetId","getTable","reportFetchStatus","reportQueryString","handleSelected","sortType","isSortAscending","getToolbar","handleBulkSelected","handleOnDisableTags","handleOnEnableTags","newItems","updateReport","fetchReport","prevState","reportError","newQuery","noReport","noLocation","queryFromRoute","reportQuery","resolution","time_scope_units","time_scope_value","CostCategoryBase","CostCategoryTable","CostCategoryToolbarBase","CostCategoryToolbarConnect","CostCategoryToolbar","setIsAllSelected","useState","setQuery","setSelectedItems","useIntl","useDispatch","useSelector","useEffect","useMapToProps","handleOnPerPageSelect","handleOnSetPage","handleOnBulkSelected","handleOnDisableCategories","handleOnEnableCategories","handles","handleOnFilterAdded","handleOnFilterRemoved","headerContent","tabs","SettingsTab","getIdKeyForTab","tab","calculations","costCategory","tags","activeTabKey","getAvailableTabs","contentRef","getRouteForQuery","pathname","getTab","Tab","eventKey","tabContentId","tabContentRef","TabTitleText","getTabTitle","getTabContent","availableTabs","TabContent","ref","getTabItem","emptyTab","currentTab","getTabs","Tabs","activeKey","handleTabClick","tabIndex","isNaN","alt","NoOptimizationsStateBase","EmptyStateVariant","NoOptimizationsState","infrastructureAwsOptions","infrastructureAwsOcpOptions","infrastructureAzureOptions","infrastructureOciOptions","infrastructureAzureOcpOptions","infrastructureGcpOptions","infrastructureGcpOcpOptions","infrastructureIbmOptions","infrastructureIbmOcpOptions","infrastructureOcpCloudOptions","ocpOptions","rhelOptions","getInfrastructureOptions","hasAws","hasAwsOcp","hasAzure","hasAzureOcp","hasGcp","hasGcpOcp","hasIbm","hasIbmOcp","hasOci","isIbmFeatureEnabled","currentItem","hasOcp","hasOcpCloud","hasRhel","isInfrastructureTab","isRhelTab","DashboardWidget","selectWidgets","widgets","Grid","widget","details","showHorizontal","GridItem","sm","lg","xl","xl2","infoIcon","global_FontSize_md","Card","CardTitle","Popover","enableFlip","bodyContent","infoTitle","CardBody","Skeleton","skeleton","ChartComparisonBase","option","isSelectOpen","getSelect","selectOptions","getSelectOptions","handleSelect","handleToggle","onItemClicked","ChartComparison","chartStyles","chartAltHeight","chartHeight","containerAltHeight","containerTrendHeight","containerUsageHeight","comparison","comparisonContainer","global_spacer_2xl","tabItems","global_spacer_xl","Comparison","DashboardWidgetBase","currentComparison","cumulative","buildDetailsLink","viewAllPath","getChart","containerHeight","adjustContainerHeight","chartType","trend","getDailyTrendChart","showSupplementaryLabel","getDailyCostChart","getTrendChart","getUsageChart","getChartComparison","getFormattedUnits","cumulativeTitle","titleKey","dailyTitleKey","daily","handleComparisonClick","chartFormatter","previousReport","computedReportItem","computedReportItemValue","datumType","currentCostData","previousCostData","forecastData","getForecastData","computedForecastItem","ReportSummaryComponent","forecastConeData","formatOptions","formatter","format","showForecast","chartName","currentData","previousData","showUsageLegendLabel","getUnits","forecast","computedForecast","currentRequestData","previousRequestData","currentUsageData","previousUsageData","getDetails","costLabel","getDetailsLabel","costKey","requestLabel","requestKey","showTooltip","showUnits","showUsageFirst","usageFormatOptions","usageLabel","usageKey","getDetailsLink","getDetailsLinkTitle","getHorizontalLayout","currentReportFetchStatus","detailsLink","getTitle","getOptimizationsSummary","rosReportFetchStatus","rosReport","tabsReport","tabsReportFetchStatus","reportItem","topItems","activeTab","totalValue","hasTotal","getVerticalLayout","updateTab","updateForecasts","fetchForecasts","updateReports","fetchReports","updateRosReports","fetchRosReports","isRosFeatureEnabled","showOptimizations","awsDashboard","queries","forecastPathsType","forecastType","forecastError","forecastFetchStatus","currentReportError","previous","previousReportError","previousReportFetchStatus","tabsReportError","AwsDashboardWidget","awsOcpDashboard","AwsOcpDashboardWidget","azureDashboard","AzureDashboardWidget","azureOcpDashboard","AzureOcpDashboardWidget","gcpDashboard","GcpDashboardWidget","gcpOcpDashboard","GcpOcpDashboardWidget","ibmDashboard","IbmDashboardWidget","ocpCloudDashboard","OcpCloudDashboardWidget","ocpDashboard","rosPathsType","rosType","featureFlags","ros","optimizations","rosReportError","OcpDashboardWidget","rhelDashboard","RhelDashboardWidget","ociDashboard","OciDashboardWidget","date","flexGrow","headerContentLeft","headerContentRight","fontWeight","main","InfrastructurePerspective","OcpPerspective","OverviewTab","RhelPerspective","infrastructure","ocp","rhel","OverviewBase","isFinsightsFeatureEnabled","infrastructureTabs","isAwsAvailable","isAzureAvailable","isGcpAvailable","isIbmAvailable","isOciAvailable","isOcpCloudAvailable","ocpTabs","isOcpAvailable","rhelTabs","isRhelAvailable","currentInfrastructurePerspective","currentOcpPerspective","getCurrentTab","aws","awsOcp","hasInfrastructure","showInfrastructureOnly","showRhelOnly","getDefaultInfrastructurePerspective","perspective","azure","oci","azureOcp","gcp","gcpOcp","ibm","ibmOcp","ocpCloud","getDefaultOcpPerspective","ocpProviders","userAccess","getDefaultRhelPerspective","rhelProviders","getPerspective","currentRhelPerspective","isAwsOcpAvailable","isAzureOcpAvailable","isGcpOcpAvailable","isIbmOcpAvailable","handlePerspectiveSelected","getQueryRoute","awsProviders","azureProviders","ociProviders","gcpProviders","ibmProviders","noData","showReload","hasData","providers","providersFetchStatus","userAccessFetchStatus","noProviders","parseQuery","providersQueryString","providersError","userAccessQueryString","userAccessError","hasAccess","userAccessType","result","Array","isArray","d","access","hasProviders","hasAwsAccess","hasAzureAccess","hasOciAccess","hasCostModelAccess","hasGcpAccess","hasIbmAccess","hasOcpAccess","hasRhelAccess","hasRosAccess"],"sourceRoot":""}