{"version":3,"file":"js/8316.b69742685577fcff8034.js","mappings":"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","sources":["webpack:///./src/routes/views/components/charts/chartTheme/theme-koku.ts","webpack:///./src/routes/views/components/charts/chartTheme/index.ts","webpack:///./src/routes/views/components/charts/chartTheme/theme-utils.ts","webpack:///./src/routes/views/components/charts/common/chartUtils.ts","webpack:///./src/routes/views/components/costType/costType.styles.ts","webpack:///./src/routes/views/components/costType/costType.tsx","webpack:///./src/routes/views/components/reports/reportSummary/reportSummary.tsx","webpack:///./src/routes/views/components/reports/reportSummary/reportSummaryAlt.tsx","webpack:///./src/routes/views/components/reports/reportSummary/reportSummaryDetails.tsx","webpack:///./src/routes/views/components/reports/reportSummary/reportSummaryItem.tsx","webpack:///./src/routes/views/components/reports/reportSummary/reportSummaryItems.tsx","webpack:///./src/routes/views/components/charts/costChart/costChart.styles.ts","webpack:///./src/routes/views/components/charts/costChart/costChart.tsx","webpack:///./src/routes/views/components/reports/reportSummary/reportSummaryCost.tsx","webpack:///./src/routes/views/components/charts/dailyCostChart/dailyCostChart.styles.ts","webpack:///./src/routes/views/components/charts/dailyCostChart/dailyCostChart.tsx","webpack:///./src/routes/views/components/reports/reportSummary/reportSummaryDailyCost.tsx","webpack:///./src/routes/views/components/charts/dailyTrendChart/dailyTrendChart.styles.ts","webpack:///./src/routes/views/components/charts/dailyTrendChart/dailyTrendChart.tsx","webpack:///./src/routes/views/components/reports/reportSummary/reportSummaryDailyTrend.tsx","webpack:///./src/routes/views/components/charts/trendChart/trendChart.styles.ts","webpack:///./src/routes/views/components/charts/trendChart/trendChart.tsx","webpack:///./src/routes/views/components/reports/reportSummary/reportSummaryTrend.tsx","webpack:///./src/routes/views/components/charts/usageChart/usageChart.styles.ts","webpack:///./src/routes/views/components/charts/usageChart/usageChart.tsx","webpack:///./src/routes/views/components/reports/reportSummary/reportSummaryUsage.tsx","webpack:///./src/utils/skeleton.ts"],"sourcesContent":["// Layout\nconst LAYOUT_PROPS = {\n    padding: 8,\n};\n// Victory theme properties only\nexport default {\n    area: Object.assign({}, LAYOUT_PROPS),\n    axis: Object.assign({}, LAYOUT_PROPS),\n    bar: Object.assign({}, LAYOUT_PROPS),\n    boxplot: Object.assign({}, LAYOUT_PROPS),\n    candlestick: Object.assign({}, LAYOUT_PROPS),\n    chart: Object.assign({}, LAYOUT_PROPS),\n    errorbar: Object.assign({}, LAYOUT_PROPS),\n    group: Object.assign({}, LAYOUT_PROPS),\n    legend: {},\n    line: Object.assign({}, LAYOUT_PROPS),\n    pie: Object.assign({}, LAYOUT_PROPS),\n    scatter: Object.assign({}, LAYOUT_PROPS),\n    stack: Object.assign({}, LAYOUT_PROPS),\n    tooltip: {},\n    voronoi: Object.assign({}, LAYOUT_PROPS),\n};\n","import getTheme from './theme-utils';\nconst ChartTheme = getTheme();\nexport default ChartTheme;\n","import { ChartThemeColor, getCustomTheme } from '@patternfly/react-charts';\nimport { default as ChartTheme } from './theme-koku';\n// Applies theme color and variant to base theme\nconst getTheme = () => getCustomTheme(ChartThemeColor.default, null, ChartTheme);\nexport default getTheme;\n","import { getInteractiveLegendItemStyles } from '@patternfly/react-charts';\nimport { intl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport { getMaxMinValues, getTooltipContent } from './chartDatum';\n// Returns groups of chart names associated with each data series\nexport const getChartNames = (series) => {\n    const result = [];\n    if (series) {\n        series.map(serie => {\n            // Each group of chart names are hidden / shown together\n            result.push(serie.childName);\n        });\n    }\n    return result;\n};\nexport const getDomain = (series, hiddenSeries) => {\n    const domain = { x: [1, 31] };\n    let maxValue = -1;\n    let minValue = -1;\n    if (series) {\n        series.forEach((s, index) => {\n            if (!isSeriesHidden(hiddenSeries, index) && s.data && s.data.length !== 0) {\n                const { max, min } = getMaxMinValues(s.data);\n                maxValue = Math.max(maxValue, max);\n                if (minValue === -1) {\n                    minValue = min;\n                }\n                else {\n                    minValue = Math.min(minValue, min);\n                }\n            }\n        });\n    }\n    const threshold = maxValue * 0.1;\n    const max = maxValue > 0 ? Math.ceil(maxValue + threshold) : 0;\n    const _min = minValue > 0 ? Math.max(0, Math.floor(minValue - threshold)) : 0;\n    const min = _min > 0 ? _min : 0;\n    if (max > 0) {\n        domain.y = [min, max];\n    }\n    return domain;\n};\n// Returns legend data styled per hiddenSeries\nexport const getLegendData = (series, hiddenSeries, tooltip = false) => {\n    if (!series) {\n        return undefined;\n    }\n    const result = series.map((s, index) => {\n        const data = Object.assign(Object.assign(Object.assign({ childName: s.childName }, s.legendItem), (tooltip && { name: s.legendItem.tooltip })), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n        return data;\n    });\n    return result;\n};\n// Note: Forecast is expected to use both datum.y and datum.y0\nexport const getTooltipLabel = (datum, formatter, formatOptions) => {\n    const tooltipFormatter = getTooltipContent(formatter);\n    const dy = datum.y !== undefined && datum.y !== null ? tooltipFormatter(datum.y, datum.units, formatOptions) : undefined;\n    const dy0 = datum.y0 !== undefined && datum.y0 !== null ? tooltipFormatter(datum.y0, datum.units, formatOptions) : undefined;\n    if (dy !== undefined && dy0 !== undefined) {\n        return intl.formatMessage(messages.chartCostForecastConeTooltip, { value0: dy0, value1: dy });\n    }\n    return dy !== undefined ? dy : intl.formatMessage(messages.chartNoData);\n};\nexport const getResizeObserver = (containerRef, handleResize) => {\n    const containerElement = containerRef;\n    const { ResizeObserver } = window;\n    let _navToggle;\n    let _resizeObserver;\n    if (containerElement && ResizeObserver) {\n        const resizeObserver = new ResizeObserver(entries => {\n            // We wrap it in requestAnimationFrame to avoid this error - ResizeObserver loop limit exceeded\n            window.requestAnimationFrame(() => {\n                if (!Array.isArray(entries) || !entries.length) {\n                    return;\n                }\n                handleResize();\n            });\n        });\n        resizeObserver.observe(containerElement);\n        _resizeObserver = () => resizeObserver.unobserve(containerElement);\n    }\n    else {\n        handleResize();\n        window.addEventListener('resize', handleResize);\n        _resizeObserver = () => window.removeEventListener('resize', handleResize);\n        _navToggle = insights.chrome.on('NAVIGATION_TOGGLE', setTimeout(handleResize, 500));\n    }\n    return () => {\n        if (_resizeObserver) {\n            _resizeObserver();\n        }\n        if (_navToggle) {\n            _navToggle();\n        }\n    };\n};\nexport const initHiddenSeries = (series, hiddenSeries, index) => {\n    const result = new Set(hiddenSeries);\n    if (!result.delete(index)) {\n        result.add(index);\n    }\n    return result;\n};\n// Returns true if at least one data series is available\nexport const isDataAvailable = (series, hiddenSeries) => {\n    const unavailable = []; // API data may not be available (e.g., on 1st of month)\n    if (series) {\n        series.forEach((s, index) => {\n            if (isSeriesHidden(hiddenSeries, index) || (s.data && s.data.length === 0)) {\n                unavailable.push(index);\n            }\n        });\n    }\n    return unavailable.length !== (series ? series.length : 0);\n};\n// Returns true if data series is hidden\nexport const isDataHidden = (series, hiddenSeries, data) => {\n    if (data && data.length) {\n        for (let keys = hiddenSeries.keys(), key; !(key = keys.next()).done;) {\n            let dataChildName;\n            let serieChildName;\n            for (const item of data) {\n                if (item.childName) {\n                    dataChildName = item.childName;\n                    break;\n                }\n            }\n            for (const item of series[key.value].data) {\n                if (item.childName) {\n                    serieChildName = item.childName;\n                    break;\n                }\n            }\n            if (serieChildName && dataChildName && serieChildName === dataChildName) {\n                return true;\n            }\n        }\n    }\n    return false;\n};\n// Returns true if data series is hidden\nexport const isSeriesHidden = (hiddenSeries, index) => {\n    return hiddenSeries.has(index);\n};\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    costSelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    costLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n        whiteSpace: 'nowrap',\n    },\n};\n","import './costType.scss';\nimport { Select, SelectOption, SelectVariant, Title } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { CostTypes } from 'utils/costType';\nimport { invalidateSession, setCostType } from 'utils/localStorage';\nimport { styles } from './costType.styles';\nconst costTypeOptions = [\n    { desc: messages.costTypeAmortizedDesc, label: messages.costTypeAmortized, value: CostTypes.amortized },\n    { desc: messages.costTypeBlendedDesc, label: messages.costTypeBlended, value: CostTypes.blended },\n    { desc: messages.costTypeUnblendedDesc, label: messages.costTypeUnblended, value: CostTypes.unblended },\n];\nclass CostTypeBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isSelectOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getSelect = () => {\n            const { costType, isDisabled } = this.props;\n            const { isSelectOpen } = this.state;\n            const selectOptions = this.getSelectOptions();\n            const selection = selectOptions.find((option) => option.value === costType);\n            return (React.createElement(Select, { className: \"selectOverride\", id: \"costTypeSelect\", isDisabled: isDisabled, isOpen: isSelectOpen, onSelect: this.handleSelect, onToggle: this.handleToggle, selections: selection, variant: SelectVariant.single }, selectOptions.map(option => (React.createElement(SelectOption, { description: option.desc, key: option.value, value: option })))));\n        };\n        this.getSelectOptions = () => {\n            const { intl } = this.props;\n            const options = [];\n            costTypeOptions.map(option => {\n                options.push({\n                    desc: intl.formatMessage(option.desc),\n                    toString: () => intl.formatMessage(option.label),\n                    value: option.value,\n                });\n            });\n            return options;\n        };\n        this.handleSelect = (event, selection) => {\n            const { onSelect } = this.props;\n            setCostType(selection.value); // Set cost type in local storage\n            this.setState({\n                isSelectOpen: false,\n            }, () => {\n                if (onSelect) {\n                    onSelect(selection.value);\n                }\n            });\n        };\n        this.handleToggle = isSelectOpen => {\n            this.setState({ isSelectOpen });\n        };\n    }\n    render() {\n        const { intl } = this.props;\n        // Clear local storage value if current session is not valid\n        invalidateSession();\n        return (React.createElement(\"div\", { style: styles.costSelector },\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\", style: styles.costLabel }, intl.formatMessage(messages.costTypeLabel)),\n            this.getSelect()));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {\n    // TBD...\n    };\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst CostTypeConnect = connect(mapStateToProps, mapDispatchToProps)(CostTypeBase);\nconst CostType = injectIntl(CostTypeConnect);\nexport default CostType;\n","import './reportSummary.scss';\nimport { Card, CardBody, CardFooter, CardTitle, Skeleton, Title, TitleSizes } from '@patternfly/react-core';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { FetchStatus } from 'store/common';\nimport { skeletonWidth } from 'utils/skeleton';\nconst ReportSummaryBase = ({ children, detailsLink, title, subTitle, status }) => (React.createElement(Card, { className: \"reportSummary\" },\n    React.createElement(CardTitle, null,\n        React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: \"subtitle\" }, subTitle)),\n    React.createElement(CardBody, null, status === FetchStatus.inProgress ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { width: \"16%\" }),\n        React.createElement(Skeleton, { className: \"chartSkeleton\", width: skeletonWidth.md }),\n        React.createElement(Skeleton, { width: \"33%\" }),\n        React.createElement(Skeleton, { className: \"legendSkeleton\", width: skeletonWidth.xs }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst ReportSummary = injectIntl(ReportSummaryBase);\nexport default ReportSummary;\n","import './reportSummaryAlt.scss';\nimport { Card, CardBody, CardFooter, CardTitle, Grid, GridItem, Skeleton, Title, TitleSizes, } from '@patternfly/react-core';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { FetchStatus } from 'store/common';\nimport { skeletonWidth } from 'utils/skeleton';\nconst ReportSummaryAltBase = ({ children, detailsLink, status, subTitle, tabs, title, }) => (React.createElement(Card, { className: \"reportSummary\" },\n    React.createElement(Grid, { hasGutter: true },\n        React.createElement(GridItem, { xl: 8 },\n            React.createElement(\"div\", { className: \"cost\" },\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, title),\n                    Boolean(subTitle) && React.createElement(\"p\", { className: \"subtitle\" }, subTitle)),\n                React.createElement(CardBody, null, status === FetchStatus.inProgress ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { width: \"16%\" }),\n                    React.createElement(Skeleton, { className: \"chartSkeleton\", width: skeletonWidth.md }),\n                    React.createElement(Skeleton, { width: \"33%\" }),\n                    React.createElement(Skeleton, { className: \"legendSkeleton\", width: skeletonWidth.xs }))) : (children)))),\n        React.createElement(GridItem, { xl: 4 },\n            React.createElement(\"div\", { className: \"tops\" }, status !== FetchStatus.inProgress && (React.createElement(React.Fragment, null,\n                Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink))))))));\nconst ReportSummaryAlt = injectIntl(ReportSummaryAltBase);\nexport default ReportSummaryAlt;\n","import './reportSummaryDetails.scss';\nimport { Tooltip } from '@patternfly/react-core';\nimport { ReportType } from 'api/reports/report';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState';\nimport { ComputedReportItemType } from 'routes/views/components/charts/common/chartDatum';\nimport { DashboardChartType } from 'store/dashboard/common/dashboardCommon';\nimport { formatCurrency, formatUnits, unitsLookupKey } from 'utils/format';\nconst ReportSummaryDetailsBase = ({ chartType, computedReportItem = 'cost', computedReportItemValue = 'total', costLabel, formatOptions, intl, report, requestFormatOptions, requestLabel, reportType, showTooltip = false, showUnits = false, showUsageFirst = false, units, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let supplementaryCost = React.createElement(EmptyValueState, null);\n    let infrastructureCost = React.createElement(EmptyValueState, null);\n    let request = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    const hasTotal = report && report.meta && report.meta.total;\n    const hasCost = hasTotal && report.meta.total.cost && report.meta.total.cost.total;\n    const hasCount = hasTotal && report.meta.total.count;\n    const hasSupplementaryCost = hasTotal &&\n        report.meta.total.supplementary &&\n        report.meta.total.supplementary.total &&\n        report.meta.total.supplementary.total.value;\n    const hasInfrastructureCost = hasTotal &&\n        report.meta.total.infrastructure &&\n        report.meta.total.infrastructure[computedReportItemValue] &&\n        report.meta.total.infrastructure[computedReportItemValue].value;\n    const hasRequest = hasTotal && report.meta.total.request;\n    const hasUsage = hasTotal && report.meta.total.usage;\n    if (hasTotal) {\n        cost = formatCurrency(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD', formatOptions);\n        supplementaryCost = formatCurrency(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost ? report.meta.total.supplementary.total.units : 'USD', formatOptions);\n        infrastructureCost = formatCurrency(hasInfrastructureCost ? report.meta.total.infrastructure[computedReportItemValue].value : 0, hasInfrastructureCost ? report.meta.total.infrastructure[computedReportItemValue].units : 'USD', formatOptions);\n        request = formatUnits(hasRequest ? report.meta.total.request.value : 0, hasRequest ? report.meta.total.request.units : undefined, requestFormatOptions);\n        if (hasUsage && report.meta.total.usage.value >= 0) {\n            usage = formatUnits(hasUsage ? report.meta.total.usage.value : 0, hasUsage ? report.meta.total.usage.units : undefined, usageFormatOptions);\n        }\n        else {\n            // Workaround for https://github.com/project-koku/koku-ui/issues/1058\n            usage = formatUnits(hasUsage ? report.meta.total.usage : 0, hasCount ? report.meta.total.count.units : undefined, usageFormatOptions);\n        }\n    }\n    const getCostLayout = (showAltHeroFont = false) => {\n        let value = cost;\n        if (computedReportItem === ComputedReportItemType.infrastructure) {\n            value = infrastructureCost;\n        }\n        else if (computedReportItem === ComputedReportItemType.supplementary) {\n            value = supplementaryCost;\n        }\n        const altHeroFont = showAltHeroFont ? 'Alt' : '';\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            showTooltip ? (React.createElement(Tooltip, { content: intl.formatMessage(messages.dashboardTotalCostTooltip, { infrastructureCost, supplementaryCost }), enableFlip: true },\n                React.createElement(\"div\", { className: `value${altHeroFont}` }, value))) : (React.createElement(\"div\", { className: `value${altHeroFont}` }, value)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, costLabel))));\n    };\n    const getRequestLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasRequest ? report.meta.total.request.units : undefined;\n        const unitsLabel = intl.formatMessage(messages.units, { units: unitsLookupKey(usageUnits) });\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            React.createElement(\"span\", { className: \"value\" }, request),\n            Boolean(showUnits && (units || (hasRequest && report.meta.total.request.value >= 0))) && (React.createElement(\"span\", { className: \"units\" }, unitsLabel)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, requestLabel))));\n    };\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasUsage ? report.meta.total.usage.units : undefined;\n        // added as a work-around for azure #1079\n        const _units = unitsLookupKey(units ? units : usageUnits);\n        const unitsLabel = intl.formatMessage(messages.units, { units: _units });\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            React.createElement(\"span\", { className: \"value\" }, usage),\n            Boolean(showUnits && (units || (hasUsage && report.meta.total.usage.value >= 0))) && (React.createElement(\"span\", { className: \"units\" }, unitsLabel)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (chartType === DashboardChartType.dailyCost ||\n        chartType === DashboardChartType.dailyTrend ||\n        chartType === DashboardChartType.cost) {\n        return React.createElement(React.Fragment, null, getCostLayout(reportType === ReportType.cost));\n    }\n    else if (chartType === DashboardChartType.trend) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getCostLayout(reportType === ReportType.cost)));\n        }\n        return (React.createElement(React.Fragment, null,\n            getCostLayout(reportType === ReportType.cost),\n            getUsageLayout()));\n    }\n    else if (chartType === DashboardChartType.usage) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getRequestLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getRequestLayout(),\n            getUsageLayout()));\n    }\n    else {\n        return null;\n    }\n};\nconst ReportSummaryDetails = injectIntl(ReportSummaryDetailsBase);\nexport default ReportSummaryDetails;\n","import './reportSummaryItem.scss';\nimport { Progress, ProgressSize } from '@patternfly/react-core';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { formatCurrency, formatPercentage, unitsLookupKey } from 'utils/format';\nconst ReportSummaryItemBase = ({ intl = defaultIntl, // Default required for testing\nlabel, totalValue, units, value, formatOptions, }) => {\n    const unitsLabel = intl.formatMessage(messages.units, { units: unitsLookupKey(units) });\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = formatPercentage(percent);\n    const percentLabel = intl.formatMessage(messages.percentTotalCost, {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatCurrency(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: \"reportSummaryItem\" },\n        React.createElement(Progress, { label: percentLabel, value: Number(percentVal), title: label, size: ProgressSize.sm })));\n};\nconst ReportSummaryItem = injectIntl(ReportSummaryItemBase);\nexport default ReportSummaryItem;\n","import './reportSummaryItems.scss';\nimport { Skeleton } from '@patternfly/react-core';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { FetchStatus } from 'store/common';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { skeletonWidth } from 'utils/skeleton';\nclass ReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { idKey, report } = this.props;\n        const computedItems = getComputedReportItems({\n            report,\n            idKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id === 'Other' || id === 'Others';\n            }\n        });\n        if (otherIndex !== -1) {\n            return [...computedItems.slice(0, otherIndex), ...computedItems.slice(otherIndex + 1), computedItems[otherIndex]];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === FetchStatus.inProgress) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { width: skeletonWidth.md }),\n                React.createElement(Skeleton, { className: \"skeleton\", width: skeletonWidth.md }),\n                React.createElement(Skeleton, { className: \"skeleton\", width: skeletonWidth.md }),\n                React.createElement(Skeleton, { className: \"skeleton\", width: skeletonWidth.md })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst ReportSummaryItems = injectIntl(ReportSummaryItemsBase);\nexport default ReportSummaryItems;\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentCostData: {\n        fill: 'none',\n    },\n    currentInfrastructureColorScale: [\n        chart_color_blue_400.value,\n        chart_color_blue_300.value,\n        chart_color_blue_200.value,\n        chart_color_blue_100.value,\n        chart_color_blue_500.value,\n    ],\n    currentInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    forecastConeData: {\n        fill: chart_color_green_100.value,\n        strokeWidth: 0,\n    },\n    forecastConeDataColorScale: [chart_color_green_100.value],\n    forecastData: {\n        fill: 'none',\n    },\n    forecastDataColorScale: [chart_color_green_200.value],\n    forecastInfrastructureConeData: {\n        fill: chart_color_blue_100.value,\n        strokeWidth: 0,\n    },\n    forecastInfrastructureConeDataColorScale: [chart_color_blue_100.value],\n    forecastInfrastructureData: {\n        fill: 'none',\n    },\n    forecastInfrastructureDataColorScale: [chart_color_blue_200.value],\n    previousCostData: {\n        fill: 'none',\n    },\n    previousInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'routes/views/components/charts/common/chart.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { getDate } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { default as ChartTheme } from 'routes/views/components/charts/chartTheme';\nimport { getCostRangeString, getCostRangeTooltip, getDateRange, } from 'routes/views/components/charts/common/chartDatum';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'routes/views/components/charts/common/chartUtils';\nimport { noop } from 'utils/noop';\nimport { chartStyles } from './costChart.styles';\nclass CostChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentCostData, forecastConeData, forecastData, previousCostData, showForecast } = this.props;\n            const costKey = messages.chartCostLegendLabel;\n            const costTooltipKey = messages.chartCostLegendTooltip;\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1, messages.chartCostLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeTooltip(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousCostData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false, 0, messages.chartCostLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeTooltip(currentCostData, costTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentCostData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: forecastData,\n                    legendItem: {\n                        name: getCostRangeString(forecastData, messages.chartCostForecastLegendLabel, false, false, 0, messages.chartCostForecastLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeTooltip(forecastData, messages.chartCostForecastLegendTooltip, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastData), { stroke: chartStyles.forecastDataColorScale[0] }),\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: forecastConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, messages.chartCostForecastConeLegendLabel, false, false, 0, messages.chartCostForecastConeLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleLeft',\n                        },\n                        tooltip: getCostRangeTooltip(forecastConeData, messages.chartCostForecastConeLegendTooltip, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastConeData), { stroke: chartStyles.forecastConeDataColorScale[0] }),\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    if (width > 675 && width < 1175) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width > 450 && width < 675) {\n                        adjustedContainerHeight += 50;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 75;\n                    }\n                }\n                else {\n                    if (width > 450 && width < 725) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 50;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatter, formatOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatter, formatOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { name = '' } = this.props;\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, name: `${name}-legend`, responsive: false }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { name = '' } = this.props;\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: `${name}-legend`,\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    getEndDate() {\n        const { currentCostData, forecastData, previousCostData } = this.props;\n        const currentCostDate = currentCostData ? getDate(getDateRange(currentCostData, true, true)[1]) : 0;\n        const forecastCostDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        const previousUsageDate = previousCostData ? getDate(getDateRange(previousCostData, true, true)[1]) : 0;\n        return currentCostDate > 0 || previousUsageDate > 0\n            ? Math.max(currentCostDate, forecastCostDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { height, intl, name, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const lastDate = this.getEndDate();\n        const half = Math.floor(lastDate / 2);\n        const _1stDay = 1;\n        const _2ndDay = _1stDay + Math.floor(half / 2);\n        const _3rdDay = _1stDay + half;\n        const _4thDay = lastDate - Math.floor(half / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => intl.formatMessage(messages.chartDayOfTheMonth, { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            title && (React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", name: name, padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [_1stDay, _2ndDay, _3rdDay, _4thDay, lastDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nconst CostChart = injectIntl(CostChartBase);\nexport default CostChart;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport './reportSummaryCost.scss';\nimport React from 'react';\nimport { CostChart } from 'routes/views/components/charts/costChart';\nconst ReportSummaryCost = (_a) => {\n    var { chartName } = _a, rest = __rest(_a, [\"chartName\"]);\n    return (React.createElement(\"div\", { className: \"chart\" },\n        React.createElement(CostChart, Object.assign({ name: chartName }, rest))));\n};\nexport default ReportSummaryCost;\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { chart_color_orange_300 } from '@patternfly/react-tokens/dist/js/chart_color_orange_300';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentInfrastructureColorScale: [\n        chart_color_blue_400.value,\n        chart_color_blue_300.value,\n        chart_color_blue_200.value,\n        chart_color_blue_100.value,\n        chart_color_blue_500.value,\n    ],\n    currentInfrastructureCostData: {\n        strokeDasharray: '3,3',\n    },\n    forecastConeDataColorScale: [chart_color_orange_300.value],\n    forecastDataColorScale: [chart_color_green_200.value],\n    forecastInfrastructureConeDataColorScale: [chart_color_orange_300.value],\n    forecastInfrastructureDataColorScale: [chart_color_blue_200.value],\n    previousInfrastructureCostData: {\n        strokeDasharray: '3,3',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'routes/views/components/charts/common/chart.scss';\nimport { Chart, ChartAxis, ChartBar, ChartGroup, ChartLegend, ChartLegendTooltip, ChartLine, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { getDate } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { default as ChartTheme } from 'routes/views/components/charts/chartTheme';\nimport { getCostRangeString, getCostRangeTooltip, getDateRange, } from 'routes/views/components/charts/common/chartDatum';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isDataHidden, isSeriesHidden, } from 'routes/views/components/charts/common/chartUtils';\nimport { noop } from 'utils/noop';\nimport { chartStyles } from './dailyCostChart.styles';\nclass DailyCostChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentCostData, forecastConeData, forecastData, previousCostData, showForecast } = this.props;\n            const costKey = messages.chartCostLegendLabel;\n            const costTooltipKey = messages.chartCostLegendTooltip;\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: this.initDatumChildName(previousCostData, 'previousCost'),\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1, messages.chartCostLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeTooltip(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    isLine: true,\n                    style: {\n                        data: {\n                            stroke: chartStyles.previousColorScale[0],\n                        },\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: this.initDatumChildName(currentCostData, 'currentCost'),\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false, 0, messages.chartCostLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeTooltip(currentCostData, costTooltipKey, false, false),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.currentColorScale[0],\n                        },\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: this.initDatumChildName(forecastData, 'forecast'),\n                    legendItem: {\n                        name: getCostRangeString(forecastData, messages.chartCostForecastLegendLabel, false, false, 0, messages.chartCostForecastLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeTooltip(forecastData, messages.chartCostForecastLegendTooltip, false, false),\n                    },\n                    isBar: true,\n                    isForecast: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                        },\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: this.initDatumChildName(forecastConeData, 'forecastCone'),\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, messages.chartCostForecastConeLegendLabel, false, false, 0, messages.chartCostForecastConeLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleLeft',\n                        },\n                        tooltip: getCostRangeTooltip(forecastConeData, messages.chartCostForecastConeLegendTooltip, false, false),\n                    },\n                    isForecast: true,\n                    isLine: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                        },\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        // Adds a child name to help identify hidden data series\n        this.initDatumChildName = (data, childName) => {\n            data.map(datum => (datum.childName = childName));\n            return data;\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    if (width > 675 && width < 1175) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width > 450 && width < 675) {\n                        adjustedContainerHeight += 50;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 75;\n                    }\n                }\n                else {\n                    if (width > 450 && width < 725) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 50;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (!series.isForecast) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                if (series.isBar) {\n                    return (React.createElement(ChartBar, { alignment: \"middle\", data: data, key: series.childName, name: series.childName, style: series.style }));\n                }\n                else if (series.isLine) {\n                    return React.createElement(ChartLine, { data: data, key: series.childName, name: series.childName, style: series.style });\n                }\n            }\n            return null;\n        };\n        this.getForecastBarChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (series.isForecast && series.isBar) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                return (React.createElement(ChartBar, { alignment: \"middle\", data: data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        this.getForecastLineChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (series.isForecast && series.isLine) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                return (React.createElement(ChartBar, { alignment: \"middle\", barWidth: 1, data: data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatter, formatOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatter, formatOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { name = '' } = this.props;\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, name: `${name}-legend`, responsive: false }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentCostData, forecastData, previousCostData } = this.props;\n        const currentCostDate = currentCostData ? getDate(getDateRange(currentCostData, true, true)[1]) : 0;\n        const forecastCostDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        const previousUsageDate = previousCostData ? getDate(getDateRange(previousCostData, true, true)[1]) : 0;\n        return currentCostDate > 0 || previousUsageDate > 0\n            ? Math.max(currentCostDate, forecastCostDate, previousUsageDate)\n            : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { name = '' } = this.props;\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isDataHidden: data => isDataHidden(series, hiddenSeries, data),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: `${name}-legend`,\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, intl, name, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const lastDate = this.getEndDate();\n        const half = Math.floor(lastDate / 2);\n        const _1stDay = 1;\n        const _2ndDay = _1stDay + Math.floor(half / 2);\n        const _3rdDay = _1stDay + half;\n        const _4thDay = lastDate - Math.floor(half / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => intl.formatMessage(messages.chartDayOfTheMonth, { day: datum.x }) })),\n            })\n            : undefined;\n        // Note: For tooltip values to match properly, chart groups must be rendered in the order given as legend data\n        return (React.createElement(React.Fragment, null,\n            title && (React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", name: name, padding: padding, theme: ChartTheme, width: width },\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 5.5 }, series.map((s, index) => this.getChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 5.5 }, series.map((s, index) => this.getForecastBarChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 5.5 }, series.map((s, index) => this.getForecastLineChart(s, index)))),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [_1stDay, _2ndDay, _3rdDay, _4thDay, lastDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nconst DailyCostChart = injectIntl(DailyCostChartBase);\nexport default DailyCostChart;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport './reportSummaryDailyCost.scss';\nimport React from 'react';\nimport { DailyCostChart } from 'routes/views/components/charts/dailyCostChart';\nconst ReportSummaryDailyCost = (_a) => {\n    var { chartName } = _a, rest = __rest(_a, [\"chartName\"]);\n    return (React.createElement(\"div\", { className: \"chart\" },\n        React.createElement(DailyCostChart, Object.assign({ name: chartName }, rest))));\n};\nexport default ReportSummaryDailyCost;\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { chart_color_orange_300 } from '@patternfly/react-tokens/dist/js/chart_color_orange_300';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    forecastConeDataColorScale: [chart_color_orange_300.value],\n    forecastDataColorScale: [chart_color_green_200.value],\n    itemsPerRow: 4,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'routes/views/components/charts/common/chart.scss';\nimport { Chart, ChartAxis, ChartBar, ChartGroup, ChartLegend, ChartLegendTooltip, ChartLine, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { getDate } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { default as ChartTheme } from 'routes/views/components/charts/chartTheme';\nimport { getCostRangeString, getCostRangeTooltip, getDateRange, } from 'routes/views/components/charts/common/chartDatum';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isDataHidden, isSeriesHidden, } from 'routes/views/components/charts/common/chartUtils';\nimport { noop } from 'utils/noop';\nimport { chartStyles } from './dailyTrendChart.styles';\nclass DailyTrendChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, forecastData, forecastConeData, previousData, showForecast, showSupplementaryLabel = false, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? messages.chartUsageLegendLabel\n                : showSupplementaryLabel\n                    ? messages.chartCostSupplementaryLegendLabel\n                    : messages.chartCostLegendLabel;\n            const tooltipKey = showUsageLegendLabel\n                ? messages.chartUsageLegendTooltip\n                : showSupplementaryLabel\n                    ? messages.chartCostSupplementaryLegendTooltip\n                    : messages.chartCostLegendTooltip;\n            const noDataKey = showUsageLegendLabel\n                ? messages.chartUsageLegendNoDataLabel\n                : showSupplementaryLabel\n                    ? messages.chartCostSupplementaryLegendNoDataLabel\n                    : messages.chartCostLegendNoDataLabel;\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: this.initDatumChildName(previousData, 'previousCost'),\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1, noDataKey),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeTooltip(previousData, tooltipKey, false, false, 1),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.previousColorScale[0],\n                        },\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: this.initDatumChildName(currentData, 'currentCost'),\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false, 0, noDataKey),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeTooltip(currentData, tooltipKey, false, false),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.currentColorScale[0],\n                        },\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: this.initDatumChildName(forecastData, 'forecast'),\n                    legendItem: {\n                        name: getCostRangeString(forecastData, messages.chartCostForecastLegendLabel, false, false, 0, messages.chartCostForecastLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeTooltip(forecastData, messages.chartCostForecastLegendTooltip, false, false),\n                    },\n                    isBar: true,\n                    isForecast: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                        },\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: this.initDatumChildName(forecastConeData, 'forecastCone'),\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, messages.chartCostForecastConeLegendLabel, false, false, 0, messages.chartCostForecastConeLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeTooltip(forecastConeData, messages.chartCostForecastConeLegendTooltip, false, false),\n                    },\n                    isForecast: true,\n                    isLine: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                        },\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        // Adds a child name to help identify hidden data series\n        this.initDatumChildName = (data, childName) => {\n            data.map(datum => (datum.childName = childName));\n            return data;\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast, showSupplementaryLabel, } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    const maxWidth = showSupplementaryLabel ? 850 : 725;\n                    if (width < maxWidth) {\n                        adjustedContainerHeight += 25;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (!series.isForecast) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                if (series.isBar) {\n                    return (React.createElement(ChartBar, { alignment: \"middle\", data: data, key: series.childName, name: series.childName, style: series.style }));\n                }\n                else if (series.isLine) {\n                    return React.createElement(ChartLine, { data: data, key: series.childName, name: series.childName, style: series.style });\n                }\n            }\n            return null;\n        };\n        this.getForecastBarChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (series.isForecast && series.isBar) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                return (React.createElement(ChartBar, { alignment: \"middle\", data: data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        this.getForecastLineChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (series.isForecast && series.isLine) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                return (React.createElement(ChartBar, { alignment: \"middle\", barWidth: 1, data: data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatter, formatOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatter, formatOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 50,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow, name = '' } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), gutter: 20, height: 25, itemsPerRow: legendItemsPerRow, name: `${name}-legend`, orientation: width > 150 ? 'horizontal' : 'vertical' }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentData, forecastData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        const forecastDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0 ? Math.max(currentDate, forecastDate, previousDate) : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { name = '' } = this.props;\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isDataHidden: data => isDataHidden(series, hiddenSeries, data),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: `${name}-legend`,\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, intl, name, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const lastDate = this.getEndDate();\n        const half = Math.floor(lastDate / 2);\n        const _1stDay = 1;\n        const _2ndDay = _1stDay + Math.floor(half / 2);\n        const _3rdDay = _1stDay + half;\n        const _4thDay = lastDate - Math.floor(half / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => intl.formatMessage(messages.chartDayOfTheMonth, { day: datum.x }) })),\n            })\n            : undefined;\n        // Note: For tooltip values to match properly, chart groups must be rendered in the order given as legend data\n        return (React.createElement(React.Fragment, null,\n            title && (React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", name: name, padding: padding, theme: ChartTheme, width: width },\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 11 }, series.map((s, index) => this.getChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 11 },\n                            React.createElement(ChartBar, { data: [{ y: null }], name: \"forcast_spacer\" }),\n                            series.map((s, index) => this.getForecastBarChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 11 },\n                            React.createElement(ChartBar, { data: [{ y: null }], name: \"forcast_cone_spacer\" }),\n                            series.map((s, index) => this.getForecastLineChart(s, index)))),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [_1stDay, _2ndDay, _3rdDay, _4thDay, lastDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nconst DailyTrendChart = injectIntl(DailyTrendChartBase);\nexport default DailyTrendChart;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport './reportSummaryDailyTrend.scss';\nimport React from 'react';\nimport { DailyTrendChart } from 'routes/views/components/charts/dailyTrendChart';\nconst ReportSummaryDailyTrend = (_a) => {\n    var { chartName } = _a, rest = __rest(_a, [\"chartName\"]);\n    return (React.createElement(\"div\", { className: \"chart\" },\n        React.createElement(DailyTrendChart, Object.assign({ name: chartName }, rest))));\n};\nexport default ReportSummaryDailyTrend;\n","import chart_color_black_200 from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport chart_color_green_100 from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport chart_color_green_200 from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport chart_color_green_300 from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_green_500 from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentMonthData: {\n        fill: 'none',\n    },\n    forecastConeData: {\n        fill: chart_color_green_100.value,\n        strokeWidth: 0,\n    },\n    forecastConeDataColorScale: [chart_color_green_100.value],\n    forecastData: {\n        fill: 'none',\n    },\n    forecastDataColorScale: [chart_color_green_200.value],\n    itemsPerRow: 4,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    previousMonthData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'routes/views/components/charts/common/chart.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { getDate } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { default as ChartTheme } from 'routes/views/components/charts/chartTheme';\nimport { getCostRangeString, getCostRangeTooltip, getDateRange, } from 'routes/views/components/charts/common/chartDatum';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'routes/views/components/charts/common/chartUtils';\nimport { noop } from 'utils/noop';\nimport { chartStyles } from './trendChart.styles';\nclass TrendChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, forecastData, forecastConeData, previousData, showForecast, showSupplementaryLabel = false, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? messages.chartUsageLegendLabel\n                : showSupplementaryLabel\n                    ? messages.chartCostSupplementaryLegendLabel\n                    : messages.chartCostLegendLabel;\n            const tooltipKey = showUsageLegendLabel\n                ? messages.chartUsageLegendTooltip\n                : showSupplementaryLabel\n                    ? messages.chartCostSupplementaryLegendTooltip\n                    : messages.chartCostLegendTooltip;\n            const noDataKey = showUsageLegendLabel\n                ? messages.chartUsageLegendNoDataLabel\n                : showSupplementaryLabel\n                    ? messages.chartCostSupplementaryLegendNoDataLabel\n                    : messages.chartCostLegendNoDataLabel;\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousData,\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1, noDataKey),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeTooltip(previousData, tooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousMonthData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentData,\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false, 0, noDataKey),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeTooltip(currentData, tooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentMonthData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: forecastData,\n                    legendItem: {\n                        name: getCostRangeString(forecastData, messages.chartCostForecastLegendLabel, false, false, 0, messages.chartCostForecastLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeTooltip(forecastData, messages.chartCostForecastLegendTooltip, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastData), { stroke: chartStyles.forecastDataColorScale[0] }),\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: forecastConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, messages.chartCostForecastConeLegendLabel, false, false, 0, messages.chartCostForecastConeLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleLeft',\n                        },\n                        tooltip: getCostRangeTooltip(forecastConeData, messages.chartCostForecastConeLegendTooltip, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastConeData), { stroke: chartStyles.forecastConeDataColorScale[0] }),\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast, showSupplementaryLabel, } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    const maxWidth = showSupplementaryLabel ? 900 : 725;\n                    if (width < maxWidth) {\n                        adjustedContainerHeight += 25;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatter, formatOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatter, formatOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 50,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { name = '', legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), gutter: 20, height: 25, itemsPerRow: legendItemsPerRow, name: `${name}-legend`, orientation: width > 150 ? 'horizontal' : 'vertical' }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentData, forecastData, forecastConeData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        const forecastDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        const forecastConeDate = forecastConeData ? getDate(getDateRange(forecastConeData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0\n            ? Math.max(currentDate, forecastDate, forecastConeDate, previousDate)\n            : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { name = '' } = this.props;\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: `${name}-legend`,\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, intl, name, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => intl.formatMessage(messages.chartDayOfTheMonth, { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            (title === null || title === void 0 ? void 0 : title.length) && (React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width }, \"data-testid\": \"trend-chart-wrapper\" },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", name: name, padding: padding, theme: ChartTheme, title: title || 'Trend Chart', width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nconst TrendChart = injectIntl(TrendChartBase);\nexport default TrendChart;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport './reportSummaryTrend.scss';\nimport React from 'react';\nimport { TrendChart } from 'routes/views/components/charts/trendChart';\nconst ReportSummaryTrend = (_a) => {\n    var { chartName } = _a, rest = __rest(_a, [\"chartName\"]);\n    return (React.createElement(\"div\", { className: \"chart\" },\n        React.createElement(TrendChart, Object.assign({ name: chartName }, rest))));\n};\nexport default ReportSummaryTrend;\n","import chart_color_black_200 from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport chart_color_green_100 from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport chart_color_green_200 from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport chart_color_green_300 from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_green_500 from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const chartStyles = {\n    chartContainer: {\n        marginTop: global_spacer_lg.value,\n    },\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_green_300.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_green_400.value,\n        },\n    },\n    itemsPerRow: 2,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        chart_color_black_200.value,\n        chart_color_green_400.value,\n        chart_color_black_200.value,\n        chart_color_green_300.value,\n    ],\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_black_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_black_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    // TBD: No grey scale, yet\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'routes/views/components/charts/common/chart.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { getDate } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { default as ChartTheme } from 'routes/views/components/charts/chartTheme';\nimport { getDateRange, getUsageRangeString, getUsageRangeTooltip, } from 'routes/views/components/charts/common/chartDatum';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'routes/views/components/charts/common/chartUtils';\nimport { noop } from 'utils/noop';\nimport { chartStyles } from './usageChart.styles';\nclass UsageChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n            const usageKey = messages.chartUsageLegendLabel;\n            const usageTooltipKey = messages.chartUsageLegendTooltip;\n            const requestKey = messages.chartRequestsLegendLabel;\n            const requestTooltipKey = messages.chartRequestsLegendTooltip;\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousUsage',\n                    data: previousUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(previousUsageData, usageKey, true, true, 1, messages.chartUsageLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeTooltip(previousUsageData, usageTooltipKey, false, false, 1),\n                    },\n                    style: chartStyles.previousUsageData,\n                },\n                {\n                    childName: 'currentUsage',\n                    data: currentUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(currentUsageData, usageKey, true, false, 0, messages.chartUsageLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[1],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeTooltip(currentUsageData, usageTooltipKey, false, false),\n                    },\n                    style: chartStyles.currentUsageData,\n                },\n                {\n                    childName: 'previousRequest',\n                    data: previousRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(previousRequestData, requestKey, true, true, 1, messages.chartRequestsLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[2],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeTooltip(previousRequestData, requestTooltipKey, false, false, 1),\n                    },\n                    style: chartStyles.previousRequestData,\n                },\n                {\n                    childName: 'currentRequest',\n                    data: currentRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(currentRequestData, requestKey, true, false, 0, messages.chartRequestsLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[3],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeTooltip(currentRequestData, requestTooltipKey, false, false),\n                    },\n                    style: chartStyles.currentRequestData,\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (width < 480) {\n                    adjustedContainerHeight += 20;\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatter, formatOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatter, formatOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { name = '', legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 300 ? chartStyles.itemsPerRow : 1;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: `${name}-legend` }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n        const currentRequestDate = currentRequestData ? getDate(getDateRange(currentRequestData, true, true)[1]) : 0;\n        const currentUsageDate = currentUsageData ? getDate(getDateRange(currentUsageData, true, true)[1]) : 0;\n        const previousRequestDate = previousRequestData ? getDate(getDateRange(previousRequestData, true, true)[1]) : 0;\n        const previousUsageDate = previousUsageData ? getDate(getDateRange(previousUsageData, true, true)[1]) : 0;\n        return currentRequestDate > 0 || currentUsageDate > 0 || previousRequestDate > 0 || previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { name = '' } = this.props;\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: `${name}-legend`,\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, intl, name, padding = {\n            bottom: 75,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => intl.formatMessage(messages.chartDayOfTheMonth, { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            (title === null || title === void 0 ? void 0 : title.length) && (React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width }, \"data-testid\": \"usage-chart-wrapper\" },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", name: name, padding: padding, theme: ChartTheme, title: title || 'Usage Chart', width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nconst UsageChart = injectIntl(UsageChartBase);\nexport default UsageChart;\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport './reportSummaryUsage.scss';\nimport React from 'react';\nimport { UsageChart } from 'routes/views/components/charts/usageChart';\nconst ReportSummaryUsage = (_a) => {\n    var { chartName } = _a, rest = __rest(_a, [\"chartName\"]);\n    return (React.createElement(\"div\", { className: \"chart\" },\n        React.createElement(UsageChart, Object.assign({ name: chartName }, rest))));\n};\nexport default ReportSummaryUsage;\n","export const skeletonWidth = {\n    xs: '16%',\n    sm: '33%',\n    md: '66%',\n    lg: '100%',\n};\n"],"names":["LAYOUT_PROPS","padding","area","Object","assign","axis","bar","boxplot","candlestick","chart","errorbar","group","legend","line","pie","scatter","stack","tooltip","voronoi","ChartTheme","getChartNames","series","result","map","serie","push","childName","getDomain","hiddenSeries","domain","x","maxValue","minValue","forEach","s","index","isSeriesHidden","data","length","max","min","Math","threshold","ceil","_min","floor","y","getLegendData","legendItem","name","has","getTooltipLabel","datum","formatter","formatOptions","tooltipFormatter","dy","undefined","units","dy0","y0","value0","value1","getResizeObserver","containerRef","handleResize","containerElement","ResizeObserver","window","_navToggle","_resizeObserver","resizeObserver","entries","requestAnimationFrame","Array","isArray","observe","unobserve","addEventListener","removeEventListener","insights","chrome","on","setTimeout","initHiddenSeries","Set","delete","add","isDataAvailable","unavailable","isDataHidden","key","keys","next","done","dataChildName","serieChildName","item","value","styles","costSelector","display","alignItems","costLabel","marginBottom","marginRight","whiteSpace","costTypeOptions","desc","messages","label","CostTypeBase","constructor","super","arguments","this","defaultState","isSelectOpen","state","getSelect","costType","isDisabled","props","selectOptions","getSelectOptions","selection","find","option","Select","className","id","isOpen","onSelect","handleSelect","onToggle","handleToggle","selections","variant","SelectVariant","SelectOption","description","intl","options","formatMessage","toString","event","setState","render","style","Title","headingLevel","size","mapStateToProps","CostTypeConnect","connect","injectIntl","children","detailsLink","title","subTitle","status","Card","CardTitle","TitleSizes","Boolean","CardBody","Skeleton","width","skeleton","CardFooter","tabs","Grid","hasGutter","GridItem","xl","chartType","computedReportItem","computedReportItemValue","report","requestFormatOptions","requestLabel","reportType","showTooltip","showUnits","showUsageFirst","usageFormatOptions","usageLabel","cost","supplementaryCost","infrastructureCost","request","usage","hasTotal","meta","total","hasCost","hasCount","count","hasSupplementaryCost","supplementary","hasInfrastructureCost","infrastructure","hasRequest","hasUsage","format","getCostLayout","showAltHeroFont","altHeroFont","Tooltip","content","enableFlip","getRequestLayout","usageUnits","unitsLabel","getUsageLayout","_units","totalValue","percent","percentVal","percentLabel","Progress","Number","ProgressSize","ReportSummaryItemsBase","shouldComponentUpdate","nextProps","getItems","idKey","computedItems","getComputedReportItems","otherIndex","findIndex","i","slice","items","chartStyles","currentColorScale","chart_color_green_400","chart_color_green_300","chart_color_green_200","chart_color_green_100","chart_color_green_500","currentCostData","fill","currentInfrastructureColorScale","chart_color_blue_400","chart_color_blue_300","chart_color_blue_200","chart_color_blue_100","chart_color_blue_500","currentInfrastructureCostData","strokeDasharray","forecastConeData","strokeWidth","forecastConeDataColorScale","forecastData","forecastDataColorScale","forecastInfrastructureConeData","forecastInfrastructureConeDataColorScale","forecastInfrastructureData","forecastInfrastructureDataColorScale","previousCostData","previousInfrastructureCostData","previousColorScale","chart_color_black_200","yAxis","axisLabel","grid","stroke","ticks","tickLabels","fontSize","xAxis","CostChartBase","observer","noop","initDatum","showForecast","costKey","costTooltipKey","symbol","type","cursorVoronoiContainer","getCursorVoronoiContainer","getAdjustedContainerHeight","adjustContainerHeight","height","containerHeight","adjustedContainerHeight","getChart","ChartArea","interpolation","CursorVoronoiContainer","cursorDimension","labels","mouseFollowTooltips","voronoiDimension","voronoiPadding","bottom","left","right","top","getLegend","ChartLegend","gutter","responsive","handleLegendClick","clientWidth","current","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","getEvents","chartNames","isHidden","legendName","onLegendClick","getEndDate","currentCostDate","getDate","forecastCostDate","previousUsageDate","ge","lastDate","half","_2ndDay","_3rdDay","_4thDay","container","disable","labelComponent","ChartLegendTooltip","legendData","day","ref","Chart","containerComponent","events","legendAllowWrap","legendComponent","legendPosition","theme","ChartAxis","C","tickValues","dependentAxis","_a","chartName","rest","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","chart_color_orange_300","DailyCostChartBase","initDatumChildName","isLine","isBar","isForecast","ChartBar","alignment","ChartLine","getForecastBarChart","getForecastLineChart","barWidth","ChartGroup","offset","itemsPerRow","DailyTrendChartBase","currentData","previousData","showSupplementaryLabel","showUsageLegendLabel","tooltipKey","noDataKey","legendItemsPerRow","orientation","previousDate","currentDate","forecastDate","currentMonthData","previousMonthData","TrendChartBase","forecastConeDate","endDate","midDate","chartContainer","marginTop","currentRequestData","currentUsageData","legendColorScale","previousRequestData","previousUsageData","UsageChartBase","usageKey","usageTooltipKey","requestKey","requestTooltipKey","currentRequestDate","currentUsageDate","previousRequestDate","skeletonWidth","xs","sm","md","lg"],"sourceRoot":""}