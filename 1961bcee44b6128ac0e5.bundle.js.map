{"version":3,"file":"1961bcee44b6128ac0e5.bundle.js","mappings":"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","sources":["webpack://koku-ui/./src/routes/components/state/emptyValueState/emptyValueState.tsx","webpack://koku-ui/./src/routes/views/components/reports/reportSummary/reportSummary.tsx","webpack://koku-ui/./src/routes/views/components/reports/reportSummary/reportSummaryAlt.tsx","webpack://koku-ui/./src/routes/views/components/reports/reportSummary/reportSummaryDetails.tsx","webpack://koku-ui/./src/routes/views/components/reports/reportSummary/reportSummaryItem.tsx","webpack://koku-ui/./src/routes/views/components/reports/reportSummary/reportSummaryItems.tsx","webpack://koku-ui/./src/routes/views/components/charts/costChart/costChart.styles.ts","webpack://koku-ui/./src/routes/views/components/charts/costChart/costChart.tsx","webpack://koku-ui/./src/routes/views/components/reports/reportSummary/reportSummaryCost.tsx","webpack://koku-ui/./src/routes/views/components/charts/dailyCostChart/dailyCostChart.styles.ts","webpack://koku-ui/./src/routes/views/components/charts/dailyCostChart/dailyCostChart.tsx","webpack://koku-ui/./src/routes/views/components/reports/reportSummary/reportSummaryDailyCost.tsx","webpack://koku-ui/./src/routes/views/components/charts/dailyTrendChart/dailyTrendChart.styles.ts","webpack://koku-ui/./src/routes/views/components/charts/dailyTrendChart/dailyTrendChart.tsx","webpack://koku-ui/./src/routes/views/components/reports/reportSummary/reportSummaryDailyTrend.tsx","webpack://koku-ui/./src/routes/views/components/charts/trendChart/trendChart.styles.ts","webpack://koku-ui/./src/routes/views/components/charts/trendChart/trendChart.tsx","webpack://koku-ui/./src/routes/views/components/reports/reportSummary/reportSummaryTrend.tsx","webpack://koku-ui/./src/routes/views/components/charts/usageChart/usageChart.styles.ts","webpack://koku-ui/./src/routes/views/components/charts/usageChart/usageChart.tsx","webpack://koku-ui/./src/routes/views/components/reports/reportSummary/reportSummaryUsage.tsx"],"sourcesContent":["import './emptyValueState.scss';\nimport { MinusIcon } from '@patternfly/react-icons/dist/esm/icons/minus-icon';\nimport React from 'react';\nexport const EmptyValueState = () => {\n    return (React.createElement(\"span\", { className: \"emptyValueContainer\" },\n        React.createElement(MinusIcon, null)));\n};\n","import './reportSummary.scss';\nimport { Card, CardBody, CardFooter, CardTitle, Skeleton, Title, TitleSizes } from '@patternfly/react-core';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { skeletonWidth } from 'utils/skeleton';\nconst ReportSummaryBase = ({ children, detailsLink, title, subTitle, status }) => (React.createElement(Card, { className: \"reportSummary\" },\n    React.createElement(CardTitle, null,\n        React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: \"subtitle\" }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* FetchStatus.inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { width: \"16%\" }),\n        React.createElement(Skeleton, { className: \"chartSkeleton\", width: skeletonWidth.md }),\n        React.createElement(Skeleton, { width: \"33%\" }),\n        React.createElement(Skeleton, { className: \"legendSkeleton\", width: skeletonWidth.xs }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst ReportSummary = injectIntl(ReportSummaryBase);\nexport { ReportSummary };\n","import './reportSummaryAlt.scss';\nimport { Card, CardBody, CardFooter, CardTitle, Grid, GridItem, Skeleton, Title, TitleSizes, } from '@patternfly/react-core';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { skeletonWidth } from 'utils/skeleton';\nconst OcpCloudReportSummaryAltBase = ({ children, detailsLink, status, subTitle, tabs, title, }) => (React.createElement(Card, { className: \"reportSummary\" },\n    React.createElement(Grid, { hasGutter: true },\n        React.createElement(GridItem, { xl: 8 },\n            React.createElement(\"div\", { className: \"cost\" },\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, title),\n                    Boolean(subTitle) && React.createElement(\"p\", { className: \"subtitle\" }, subTitle)),\n                React.createElement(CardBody, null, status === 1 /* FetchStatus.inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { width: \"16%\" }),\n                    React.createElement(Skeleton, { className: \"chartSkeleton\", width: skeletonWidth.md }),\n                    React.createElement(Skeleton, { width: \"33%\" }),\n                    React.createElement(Skeleton, { className: \"legendSkeleton\", width: skeletonWidth.xs }))) : (children)))),\n        React.createElement(GridItem, { xl: 4 },\n            React.createElement(\"div\", { className: \"tops\" }, status !== 1 /* FetchStatus.inProgress */ && (React.createElement(React.Fragment, null,\n                Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink))))))));\nconst ReportSummaryAlt = injectIntl(OcpCloudReportSummaryAltBase);\nexport { ReportSummaryAlt };\n","import './reportSummaryDetails.scss';\nimport { Tooltip } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { EmptyValueState } from 'routes/components/state/emptyValueState/emptyValueState';\nimport { formatCurrency, formatUnits, unitsLookupKey } from 'utils/format';\nconst ReportSummaryDetailsBase = ({ chartType, computedReportItem = 'cost', computedReportItemValue = 'total', costLabel, formatOptions, intl, report, requestFormatOptions, requestLabel, reportType, showTooltip = false, showUnits = false, showUsageFirst = false, units, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let supplementaryCost = React.createElement(EmptyValueState, null);\n    let infrastructureCost = React.createElement(EmptyValueState, null);\n    let request = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    const hasTotal = report && report.meta && report.meta.total;\n    const hasCost = hasTotal && report.meta.total.cost && report.meta.total.cost.total;\n    const hasCount = hasTotal && report.meta.total.count;\n    const hasSupplementaryCost = hasTotal &&\n        report.meta.total.supplementary &&\n        report.meta.total.supplementary.total &&\n        report.meta.total.supplementary.total.value;\n    const hasInfrastructureCost = hasTotal &&\n        report.meta.total.infrastructure &&\n        report.meta.total.infrastructure[computedReportItemValue] &&\n        report.meta.total.infrastructure[computedReportItemValue].value;\n    const hasRequest = hasTotal && report.meta.total.request;\n    const hasUsage = hasTotal && report.meta.total.usage;\n    if (hasTotal) {\n        cost = formatCurrency(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD', formatOptions);\n        supplementaryCost = formatCurrency(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost ? report.meta.total.supplementary.total.units : 'USD', formatOptions);\n        infrastructureCost = formatCurrency(hasInfrastructureCost ? report.meta.total.infrastructure[computedReportItemValue].value : 0, hasInfrastructureCost ? report.meta.total.infrastructure[computedReportItemValue].units : 'USD', formatOptions);\n        request = formatUnits(hasRequest ? report.meta.total.request.value : 0, hasRequest ? report.meta.total.request.units : undefined, requestFormatOptions);\n        if (hasUsage && report.meta.total.usage.value >= 0) {\n            usage = formatUnits(hasUsage ? report.meta.total.usage.value : 0, hasUsage ? report.meta.total.usage.units : undefined, usageFormatOptions);\n        }\n        else {\n            // Workaround for https://github.com/project-koku/koku-ui/issues/1058\n            usage = formatUnits(hasUsage ? report.meta.total.usage : 0, hasCount ? report.meta.total.count.units : undefined, usageFormatOptions);\n        }\n    }\n    const getCostLayout = (showAltHeroFont = false) => {\n        let value = cost;\n        if (computedReportItem === \"infrastructure\" /* ComputedReportItemType.infrastructure */) {\n            value = infrastructureCost;\n        }\n        else if (computedReportItem === \"supplementary\" /* ComputedReportItemType.supplementary */) {\n            value = supplementaryCost;\n        }\n        const altHeroFont = showAltHeroFont ? 'Alt' : '';\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            showTooltip ? (React.createElement(Tooltip, { content: intl.formatMessage(messages.dashboardTotalCostTooltip, { infrastructureCost, supplementaryCost }), enableFlip: true },\n                React.createElement(\"div\", { className: `value${altHeroFont}` }, value))) : (React.createElement(\"div\", { className: `value${altHeroFont}` }, value)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, costLabel))));\n    };\n    const getRequestLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasRequest ? report.meta.total.request.units : undefined;\n        const unitsLabel = intl.formatMessage(messages.units, { units: unitsLookupKey(usageUnits) });\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            React.createElement(\"span\", { className: \"value\" }, request),\n            Boolean(showUnits && (units || (hasRequest && report.meta.total.request.value >= 0))) && (React.createElement(\"span\", { className: \"units\" }, unitsLabel)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, requestLabel))));\n    };\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasUsage ? report.meta.total.usage.units : undefined;\n        // added as a work-around for azure #1079\n        const _units = unitsLookupKey(units ? units : usageUnits);\n        const unitsLabel = intl.formatMessage(messages.units, { units: _units });\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            React.createElement(\"span\", { className: \"value\" }, usage),\n            Boolean(showUnits && (units || (hasUsage && report.meta.total.usage.value >= 0))) && (React.createElement(\"span\", { className: \"units\" }, unitsLabel)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (chartType === \"dailyCost\" /* DashboardChartType.dailyCost */ ||\n        chartType === \"dailyTrend\" /* DashboardChartType.dailyTrend */ ||\n        chartType === \"cost\" /* DashboardChartType.cost */) {\n        return React.createElement(React.Fragment, null, getCostLayout(reportType === \"cost\" /* ReportType.cost */));\n    }\n    else if (chartType === \"trend\" /* DashboardChartType.trend */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getCostLayout(reportType === \"cost\" /* ReportType.cost */)));\n        }\n        return (React.createElement(React.Fragment, null,\n            getCostLayout(reportType === \"cost\" /* ReportType.cost */),\n            getUsageLayout()));\n    }\n    else if (chartType === \"usage\" /* DashboardChartType.usage */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getRequestLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getRequestLayout(),\n            getUsageLayout()));\n    }\n    else {\n        return null;\n    }\n};\nconst ReportSummaryDetails = injectIntl(ReportSummaryDetailsBase);\nexport { ReportSummaryDetails };\n","import './reportSummaryItem.scss';\nimport { Progress, ProgressSize } from '@patternfly/react-core';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { formatCurrency, formatPercentage, unitsLookupKey } from 'utils/format';\nconst ReportSummaryItemBase = ({ intl = defaultIntl, // Default required for testing\nlabel, totalValue, units, value, formatOptions, }) => {\n    const unitsLabel = intl.formatMessage(messages.units, { units: unitsLookupKey(units) });\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = formatPercentage(percent);\n    const percentLabel = intl.formatMessage(messages.percentTotalCost, {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatCurrency(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: \"reportSummaryItem\" },\n        React.createElement(Progress, { label: percentLabel, value: Number(percentVal), title: label, size: ProgressSize.sm })));\n};\nconst ReportSummaryItem = injectIntl(ReportSummaryItemBase);\nexport { ReportSummaryItem };\n","import './reportSummaryItems.scss';\nimport { Skeleton } from '@patternfly/react-core';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { getComputedReportItems, } from 'utils/computedReport/getComputedReportItems';\nimport { skeletonWidth } from 'utils/skeleton';\nclass ReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { idKey, report } = this.props;\n        const computedItems = getComputedReportItems({\n            report,\n            idKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id === 'Other' || id === 'Others';\n            }\n        });\n        if (otherIndex !== -1) {\n            return [...computedItems.slice(0, otherIndex), ...computedItems.slice(otherIndex + 1), computedItems[otherIndex]];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* FetchStatus.inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { width: skeletonWidth.md }),\n                React.createElement(Skeleton, { className: \"skeleton\", width: skeletonWidth.md }),\n                React.createElement(Skeleton, { className: \"skeleton\", width: skeletonWidth.md }),\n                React.createElement(Skeleton, { className: \"skeleton\", width: skeletonWidth.md })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst ReportSummaryItems = injectIntl(ReportSummaryItemsBase);\nexport { ReportSummaryItems };\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentCostData: {\n        fill: 'none',\n    },\n    currentInfrastructureColorScale: [\n        chart_color_blue_400.value,\n        chart_color_blue_300.value,\n        chart_color_blue_200.value,\n        chart_color_blue_100.value,\n        chart_color_blue_500.value,\n    ],\n    currentInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    forecastConeData: {\n        fill: chart_color_green_100.value,\n        strokeWidth: 0,\n    },\n    forecastConeDataColorScale: [chart_color_green_100.value],\n    forecastData: {\n        fill: 'none',\n    },\n    forecastDataColorScale: [chart_color_green_200.value],\n    forecastInfrastructureConeData: {\n        fill: chart_color_blue_100.value,\n        strokeWidth: 0,\n    },\n    forecastInfrastructureConeDataColorScale: [chart_color_blue_100.value],\n    forecastInfrastructureData: {\n        fill: 'none',\n    },\n    forecastInfrastructureDataColorScale: [chart_color_blue_200.value],\n    previousCostData: {\n        fill: 'none',\n    },\n    previousInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'routes/views/components/charts/common/chart.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { getDate } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { default as ChartTheme } from 'routes/views/components/charts/chartTheme';\nimport { getCostRangeString, getDateRange } from 'routes/views/components/charts/common/chartDatum';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'routes/views/components/charts/common/chartUtils';\nimport { noop } from 'utils/noop';\nimport { chartStyles } from './costChart.styles';\nclass CostChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentCostData, forecastConeData, forecastData, previousCostData, showForecast } = this.props;\n            const costKey = messages.chartCostLegendLabel;\n            const costTooltipKey = messages.chartCostLegendTooltip;\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1, messages.chartCostLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousCostData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false, 0, messages.chartCostLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentCostData, costTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentCostData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: forecastData,\n                    legendItem: {\n                        name: getCostRangeString(forecastData, messages.chartCostForecastLegendLabel, false, false, 0, messages.chartCostForecastLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, messages.chartCostForecastLegendTooltip, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastData), { stroke: chartStyles.forecastDataColorScale[0] }),\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: forecastConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, messages.chartCostForecastConeLegendLabel, false, false, 0, messages.chartCostForecastConeLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleLeft',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, messages.chartCostForecastConeLegendTooltip, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastConeData), { stroke: chartStyles.forecastConeDataColorScale[0] }),\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    if (width > 675 && width < 1175) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width > 450 && width < 675) {\n                        adjustedContainerHeight += 50;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 75;\n                    }\n                }\n                else {\n                    if (width > 450 && width < 725) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 50;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatter, formatOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatter, formatOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { name = '' } = this.props;\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, name: `${name}-legend`, responsive: false }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { name = '' } = this.props;\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: `${name}-legend`,\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    getEndDate() {\n        const { currentCostData, forecastData, previousCostData } = this.props;\n        const currentCostDate = currentCostData ? getDate(getDateRange(currentCostData, true, true)[1]) : 0;\n        const forecastCostDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        const previousUsageDate = previousCostData ? getDate(getDateRange(previousCostData, true, true)[1]) : 0;\n        return currentCostDate > 0 || previousUsageDate > 0\n            ? Math.max(currentCostDate, forecastCostDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { height, intl, name, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const lastDate = this.getEndDate();\n        const half = Math.floor(lastDate / 2);\n        const _1stDay = 1;\n        const _2ndDay = _1stDay + Math.floor(half / 2);\n        const _3rdDay = _1stDay + half;\n        const _4thDay = lastDate - Math.floor(half / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => intl.formatMessage(messages.chartDayOfTheMonth, { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            title && (React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", name: name, padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [_1stDay, _2ndDay, _3rdDay, _4thDay, lastDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nconst CostChart = injectIntl(CostChartBase);\nexport { CostChart };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport './reportSummaryCost.scss';\nimport React from 'react';\nimport { CostChart } from 'routes/views/components/charts/costChart';\nconst ReportSummaryCost = (_a) => {\n    var { chartName } = _a, rest = __rest(_a, [\"chartName\"]);\n    return (React.createElement(\"div\", { className: \"chart\" },\n        React.createElement(CostChart, Object.assign({ name: chartName }, rest))));\n};\nexport { ReportSummaryCost };\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { chart_color_orange_300 } from '@patternfly/react-tokens/dist/js/chart_color_orange_300';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentInfrastructureColorScale: [\n        chart_color_blue_400.value,\n        chart_color_blue_300.value,\n        chart_color_blue_200.value,\n        chart_color_blue_100.value,\n        chart_color_blue_500.value,\n    ],\n    currentInfrastructureCostData: {\n        strokeDasharray: '3,3',\n    },\n    forecastConeDataColorScale: [chart_color_orange_300.value],\n    forecastDataColorScale: [chart_color_green_200.value],\n    forecastInfrastructureConeDataColorScale: [chart_color_orange_300.value],\n    forecastInfrastructureDataColorScale: [chart_color_blue_200.value],\n    previousInfrastructureCostData: {\n        strokeDasharray: '3,3',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'routes/views/components/charts/common/chart.scss';\nimport { Chart, ChartAxis, ChartBar, ChartGroup, ChartLegend, ChartLegendTooltip, ChartLine, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { getDate } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { default as ChartTheme } from 'routes/views/components/charts/chartTheme';\nimport { getCostRangeString, getDateRange } from 'routes/views/components/charts/common/chartDatum';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isDataHidden, isSeriesHidden, } from 'routes/views/components/charts/common/chartUtils';\nimport { noop } from 'utils/noop';\nimport { chartStyles } from './dailyCostChart.styles';\nclass DailyCostChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentCostData, forecastConeData, forecastData, previousCostData, showForecast } = this.props;\n            const costKey = messages.chartCostLegendLabel;\n            const costTooltipKey = messages.chartCostLegendTooltip;\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: this.initDatumChildName(previousCostData, 'previousCost'),\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1, messages.chartCostLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    isLine: true,\n                    style: {\n                        data: {\n                            stroke: chartStyles.previousColorScale[0],\n                        },\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: this.initDatumChildName(currentCostData, 'currentCost'),\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false, 0, messages.chartCostLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentCostData, costTooltipKey, false, false),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.currentColorScale[0],\n                        },\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: this.initDatumChildName(forecastData, 'forecast'),\n                    legendItem: {\n                        name: getCostRangeString(forecastData, messages.chartCostForecastLegendLabel, false, false, 0, messages.chartCostForecastLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, messages.chartCostForecastLegendTooltip, false, false),\n                    },\n                    isBar: true,\n                    isForecast: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                        },\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: this.initDatumChildName(forecastConeData, 'forecastCone'),\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, messages.chartCostForecastConeLegendLabel, false, false, 0, messages.chartCostForecastConeLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleLeft',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, messages.chartCostForecastConeLegendTooltip, false, false),\n                    },\n                    isForecast: true,\n                    isLine: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                        },\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        // Adds a child name to help identify hidden data series\n        this.initDatumChildName = (data, childName) => {\n            data.map(datum => (datum.childName = childName));\n            return data;\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    if (width > 675 && width < 1175) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width > 450 && width < 675) {\n                        adjustedContainerHeight += 50;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 75;\n                    }\n                }\n                else {\n                    if (width > 450 && width < 725) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 50;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (!series.isForecast) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                if (series.isBar) {\n                    return (React.createElement(ChartBar, { alignment: \"middle\", data: data, key: series.childName, name: series.childName, style: series.style }));\n                }\n                else if (series.isLine) {\n                    return React.createElement(ChartLine, { data: data, key: series.childName, name: series.childName, style: series.style });\n                }\n            }\n            return null;\n        };\n        this.getForecastBarChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (series.isForecast && series.isBar) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                return (React.createElement(ChartBar, { alignment: \"middle\", data: data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        this.getForecastLineChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (series.isForecast && series.isLine) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                return (React.createElement(ChartBar, { alignment: \"middle\", barWidth: 1, data: data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatter, formatOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatter, formatOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { name = '' } = this.props;\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, name: `${name}-legend`, responsive: false }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentCostData, forecastData, previousCostData } = this.props;\n        const currentCostDate = currentCostData ? getDate(getDateRange(currentCostData, true, true)[1]) : 0;\n        const forecastCostDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        const previousUsageDate = previousCostData ? getDate(getDateRange(previousCostData, true, true)[1]) : 0;\n        return currentCostDate > 0 || previousUsageDate > 0\n            ? Math.max(currentCostDate, forecastCostDate, previousUsageDate)\n            : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { name = '' } = this.props;\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isDataHidden: data => isDataHidden(series, hiddenSeries, data),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: `${name}-legend`,\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, intl, name, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const lastDate = this.getEndDate();\n        const half = Math.floor(lastDate / 2);\n        const _1stDay = 1;\n        const _2ndDay = _1stDay + Math.floor(half / 2);\n        const _3rdDay = _1stDay + half;\n        const _4thDay = lastDate - Math.floor(half / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => intl.formatMessage(messages.chartDayOfTheMonth, { day: datum.x }) })),\n            })\n            : undefined;\n        // Note: For tooltip values to match properly, chart groups must be rendered in the order given as legend data\n        return (React.createElement(React.Fragment, null,\n            title && (React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", name: name, padding: padding, theme: ChartTheme, width: width },\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 5.5 }, series.map((s, index) => this.getChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 5.5 }, series.map((s, index) => this.getForecastBarChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 5.5 }, series.map((s, index) => this.getForecastLineChart(s, index)))),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [_1stDay, _2ndDay, _3rdDay, _4thDay, lastDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nconst DailyCostChart = injectIntl(DailyCostChartBase);\nexport { DailyCostChart };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport './reportSummaryDailyCost.scss';\nimport React from 'react';\nimport { DailyCostChart } from 'routes/views/components/charts/dailyCostChart';\nconst ReportSummaryDailyCost = (_a) => {\n    var { chartName } = _a, rest = __rest(_a, [\"chartName\"]);\n    return (React.createElement(\"div\", { className: \"chart\" },\n        React.createElement(DailyCostChart, Object.assign({ name: chartName }, rest))));\n};\nexport { ReportSummaryDailyCost };\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { chart_color_orange_300 } from '@patternfly/react-tokens/dist/js/chart_color_orange_300';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    forecastConeDataColorScale: [chart_color_orange_300.value],\n    forecastDataColorScale: [chart_color_green_200.value],\n    itemsPerRow: 4,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'routes/views/components/charts/common/chart.scss';\nimport { Chart, ChartAxis, ChartBar, ChartGroup, ChartLegend, ChartLegendTooltip, ChartLine, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { getDate } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { default as ChartTheme } from 'routes/views/components/charts/chartTheme';\nimport { getCostRangeString, getDateRange } from 'routes/views/components/charts/common/chartDatum';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isDataHidden, isSeriesHidden, } from 'routes/views/components/charts/common/chartUtils';\nimport { noop } from 'utils/noop';\nimport { chartStyles } from './dailyTrendChart.styles';\nclass DailyTrendChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, forecastData, forecastConeData, previousData, showForecast, showSupplementaryLabel = false, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? messages.chartUsageLegendLabel\n                : showSupplementaryLabel\n                    ? messages.chartCostSupplementaryLegendLabel\n                    : messages.chartCostLegendLabel;\n            const tooltipKey = showUsageLegendLabel\n                ? messages.chartUsageLegendTooltip\n                : showSupplementaryLabel\n                    ? messages.chartCostSupplementaryLegendTooltip\n                    : messages.chartCostLegendTooltip;\n            const noDataKey = showUsageLegendLabel\n                ? messages.chartUsageLegendNoDataLabel\n                : showSupplementaryLabel\n                    ? messages.chartCostSupplementaryLegendNoDataLabel\n                    : messages.chartCostLegendNoDataLabel;\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: this.initDatumChildName(previousData, 'previousCost'),\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1, noDataKey),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousData, tooltipKey, false, false, 1),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.previousColorScale[0],\n                        },\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: this.initDatumChildName(currentData, 'currentCost'),\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false, 0, noDataKey),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentData, tooltipKey, false, false),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.currentColorScale[0],\n                        },\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: this.initDatumChildName(forecastData, 'forecast'),\n                    legendItem: {\n                        name: getCostRangeString(forecastData, messages.chartCostForecastLegendTooltip, false, false, 0, messages.chartCostForecastLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, messages.chartCostForecastConeLegendTooltip, false, false),\n                    },\n                    isBar: true,\n                    isForecast: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                        },\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: this.initDatumChildName(forecastConeData, 'forecastCone'),\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, messages.chartCostForecastConeLegendLabel, false, false, 0, messages.chartCostForecastConeLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, messages.chartCostForecastConeLegendTooltip, false, false),\n                    },\n                    isForecast: true,\n                    isLine: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                        },\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        // Adds a child name to help identify hidden data series\n        this.initDatumChildName = (data, childName) => {\n            data.map(datum => (datum.childName = childName));\n            return data;\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast, showSupplementaryLabel, } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    const maxWidth = showSupplementaryLabel ? 850 : 700;\n                    if (width < maxWidth) {\n                        adjustedContainerHeight += 25;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (!series.isForecast) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                if (series.isBar) {\n                    return (React.createElement(ChartBar, { alignment: \"middle\", data: data, key: series.childName, name: series.childName, style: series.style }));\n                }\n                else if (series.isLine) {\n                    return React.createElement(ChartLine, { data: data, key: series.childName, name: series.childName, style: series.style });\n                }\n            }\n            return null;\n        };\n        this.getForecastBarChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (series.isForecast && series.isBar) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                return (React.createElement(ChartBar, { alignment: \"middle\", data: data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        this.getForecastLineChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (series.isForecast && series.isLine) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                return (React.createElement(ChartBar, { alignment: \"middle\", barWidth: 1, data: data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatter, formatOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatter, formatOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 50,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow, name = '' } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), gutter: 20, height: 25, itemsPerRow: legendItemsPerRow, name: `${name}-legend`, orientation: width > 150 ? 'horizontal' : 'vertical' }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentData, forecastData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        const forecastDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0 ? Math.max(currentDate, forecastDate, previousDate) : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { name = '' } = this.props;\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isDataHidden: data => isDataHidden(series, hiddenSeries, data),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: `${name}-legend`,\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, intl, name, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const lastDate = this.getEndDate();\n        const half = Math.floor(lastDate / 2);\n        const _1stDay = 1;\n        const _2ndDay = _1stDay + Math.floor(half / 2);\n        const _3rdDay = _1stDay + half;\n        const _4thDay = lastDate - Math.floor(half / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => intl.formatMessage(messages.chartDayOfTheMonth, { day: datum.x }) })),\n            })\n            : undefined;\n        // Note: For tooltip values to match properly, chart groups must be rendered in the order given as legend data\n        return (React.createElement(React.Fragment, null,\n            title && (React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", name: name, padding: padding, theme: ChartTheme, width: width },\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 11 }, series.map((s, index) => this.getChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 11 },\n                            React.createElement(ChartBar, { data: [{ y: null }], name: \"forcast_spacer\" }),\n                            series.map((s, index) => this.getForecastBarChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 11 },\n                            React.createElement(ChartBar, { data: [{ y: null }], name: \"forcast_cone_spacer\" }),\n                            series.map((s, index) => this.getForecastLineChart(s, index)))),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [_1stDay, _2ndDay, _3rdDay, _4thDay, lastDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nconst DailyTrendChart = injectIntl(DailyTrendChartBase);\nexport { DailyTrendChart };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport './reportSummaryDailyTrend.scss';\nimport React from 'react';\nimport { DailyTrendChart } from 'routes/views/components/charts/dailyTrendChart';\nconst ReportSummaryDailyTrend = (_a) => {\n    var { chartName } = _a, rest = __rest(_a, [\"chartName\"]);\n    return (React.createElement(\"div\", { className: \"chart\" },\n        React.createElement(DailyTrendChart, Object.assign({ name: chartName }, rest))));\n};\nexport { ReportSummaryDailyTrend };\n","import chart_color_black_200 from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport chart_color_green_100 from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport chart_color_green_200 from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport chart_color_green_300 from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_green_500 from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentMonthData: {\n        fill: 'none',\n    },\n    forecastConeData: {\n        fill: chart_color_green_100.value,\n        strokeWidth: 0,\n    },\n    forecastConeDataColorScale: [chart_color_green_100.value],\n    forecastData: {\n        fill: 'none',\n    },\n    forecastDataColorScale: [chart_color_green_200.value],\n    itemsPerRow: 4,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    previousMonthData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'routes/views/components/charts/common/chart.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { getDate } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { default as ChartTheme } from 'routes/views/components/charts/chartTheme';\nimport { getCostRangeString, getDateRange } from 'routes/views/components/charts/common/chartDatum';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'routes/views/components/charts/common/chartUtils';\nimport { noop } from 'utils/noop';\nimport { chartStyles } from './trendChart.styles';\nclass TrendChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, forecastData, forecastConeData, previousData, showForecast, showSupplementaryLabel = false, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? messages.chartUsageLegendLabel\n                : showSupplementaryLabel\n                    ? messages.chartCostSupplementaryLegendLabel\n                    : messages.chartCostLegendLabel;\n            const tooltipKey = showUsageLegendLabel\n                ? messages.chartUsageLegendTooltip\n                : showSupplementaryLabel\n                    ? messages.chartCostSupplementaryLegendTooltip\n                    : messages.chartCostLegendTooltip;\n            const noDataKey = showUsageLegendLabel\n                ? messages.chartUsageLegendNoDataLabel\n                : showSupplementaryLabel\n                    ? messages.chartCostSupplementaryLegendNoDataLabel\n                    : messages.chartCostLegendNoDataLabel;\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousData,\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1, noDataKey),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousData, tooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousMonthData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentData,\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false, 0, noDataKey),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentData, tooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentMonthData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: forecastData,\n                    legendItem: {\n                        name: getCostRangeString(forecastData, messages.chartCostForecastLegendLabel, false, false, 0, messages.chartCostForecastLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, messages.chartCostForecastLegendTooltip, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastData), { stroke: chartStyles.forecastDataColorScale[0] }),\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: forecastConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, messages.chartCostForecastConeLegendLabel, false, false, 0, messages.chartCostForecastConeLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleLeft',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, messages.chartCostForecastConeLegendTooltip, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastConeData), { stroke: chartStyles.forecastConeDataColorScale[0] }),\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast, showSupplementaryLabel, } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    const maxWidth = showSupplementaryLabel ? 900 : 700;\n                    if (width < maxWidth) {\n                        adjustedContainerHeight += 25;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatter, formatOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatter, formatOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 50,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { name = '', legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), gutter: 20, height: 25, itemsPerRow: legendItemsPerRow, name: `${name}-legend`, orientation: width > 150 ? 'horizontal' : 'vertical' }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentData, forecastData, forecastConeData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        const forecastDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        const forecastConeDate = forecastConeData ? getDate(getDateRange(forecastConeData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0\n            ? Math.max(currentDate, forecastDate, forecastConeDate, previousDate)\n            : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { name = '' } = this.props;\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: `${name}-legend`,\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, intl, name, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => intl.formatMessage(messages.chartDayOfTheMonth, { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            (title === null || title === void 0 ? void 0 : title.length) && (React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width }, \"data-testid\": \"trend-chart-wrapper\" },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", name: name, padding: padding, theme: ChartTheme, title: title || 'Trend Chart', width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nconst TrendChart = injectIntl(TrendChartBase);\nexport { TrendChart };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport './reportSummaryTrend.scss';\nimport React from 'react';\nimport { TrendChart } from 'routes/views/components/charts/trendChart';\nconst ReportSummaryTrend = (_a) => {\n    var { chartName } = _a, rest = __rest(_a, [\"chartName\"]);\n    return (React.createElement(\"div\", { className: \"chart\" },\n        React.createElement(TrendChart, Object.assign({ name: chartName }, rest))));\n};\nexport { ReportSummaryTrend };\n","import chart_color_black_200 from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport chart_color_green_100 from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport chart_color_green_200 from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport chart_color_green_300 from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_green_500 from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const chartStyles = {\n    chartContainer: {\n        marginTop: global_spacer_lg.value,\n    },\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_green_300.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_green_400.value,\n        },\n    },\n    itemsPerRow: 2,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        chart_color_black_200.value,\n        chart_color_green_400.value,\n        chart_color_black_200.value,\n        chart_color_green_300.value,\n    ],\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_black_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_black_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    // TBD: No grey scale, yet\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'routes/views/components/charts/common/chart.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { getDate } from 'date-fns';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { default as ChartTheme } from 'routes/views/components/charts/chartTheme';\nimport { getDateRange, getUsageRangeString } from 'routes/views/components/charts/common/chartDatum';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'routes/views/components/charts/common/chartUtils';\nimport { noop } from 'utils/noop';\nimport { chartStyles } from './usageChart.styles';\nclass UsageChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n            const usageKey = messages.chartUsageLegendLabel;\n            const usageTooltipKey = messages.chartUsageLegendTooltip;\n            const requestKey = messages.chartRequestsLegendLabel;\n            const requestTooltipKey = messages.chartRequestsLegendTooltip;\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousUsage',\n                    data: previousUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(previousUsageData, usageKey, true, true, 1, messages.chartUsageLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(previousUsageData, usageTooltipKey, false, false, 1),\n                    },\n                    style: chartStyles.previousUsageData,\n                },\n                {\n                    childName: 'currentUsage',\n                    data: currentUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(currentUsageData, usageKey, true, false, 0, messages.chartUsageLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[1],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(currentUsageData, usageTooltipKey, false, false),\n                    },\n                    style: chartStyles.currentUsageData,\n                },\n                {\n                    childName: 'previousRequest',\n                    data: previousRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(previousRequestData, requestKey, true, true, 1, messages.chartRequestsLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[2],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(previousRequestData, requestTooltipKey, false, false, 1),\n                    },\n                    style: chartStyles.previousRequestData,\n                },\n                {\n                    childName: 'currentRequest',\n                    data: currentRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(currentRequestData, requestKey, true, false, 0, messages.chartRequestsLegendNoDataLabel),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[3],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(currentRequestData, requestTooltipKey, false, false),\n                    },\n                    style: chartStyles.currentRequestData,\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (width < 480) {\n                    adjustedContainerHeight += 20;\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatter, formatOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatter, formatOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { name = '', legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 300 ? chartStyles.itemsPerRow : 1;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: `${name}-legend` }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n        const currentRequestDate = currentRequestData ? getDate(getDateRange(currentRequestData, true, true)[1]) : 0;\n        const currentUsageDate = currentUsageData ? getDate(getDateRange(currentUsageData, true, true)[1]) : 0;\n        const previousRequestDate = previousRequestData ? getDate(getDateRange(previousRequestData, true, true)[1]) : 0;\n        const previousUsageDate = previousUsageData ? getDate(getDateRange(previousUsageData, true, true)[1]) : 0;\n        return currentRequestDate > 0 || currentUsageDate > 0 || previousRequestDate > 0 || previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { name = '' } = this.props;\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: `${name}-legend`,\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, intl, name, padding = {\n            bottom: 75,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => intl.formatMessage(messages.chartDayOfTheMonth, { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            (title === null || title === void 0 ? void 0 : title.length) && (React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width }, \"data-testid\": \"usage-chart-wrapper\" },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", name: name, padding: padding, theme: ChartTheme, title: title || 'Usage Chart', width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nconst UsageChart = injectIntl(UsageChartBase);\nexport { UsageChart };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport './reportSummaryUsage.scss';\nimport React from 'react';\nimport { UsageChart } from 'routes/views/components/charts/usageChart';\nconst ReportSummaryUsage = (_a) => {\n    var { chartName } = _a, rest = __rest(_a, [\"chartName\"]);\n    return (React.createElement(\"div\", { className: \"chart\" },\n        React.createElement(UsageChart, Object.assign({ name: chartName }, rest))));\n};\nexport { ReportSummaryUsage };\n"],"names":["EmptyValueState","className","ReportSummary","injectIntl","children","detailsLink","title","subTitle","status","Card","CardTitle","Title","headingLevel","size","TitleSizes","Boolean","CardBody","Skeleton","width","skeleton","CardFooter","ReportSummaryAlt","tabs","Grid","hasGutter","GridItem","xl","ReportSummaryDetails","chartType","computedReportItem","computedReportItemValue","costLabel","formatOptions","intl","report","requestFormatOptions","requestLabel","reportType","showTooltip","showUnits","showUsageFirst","units","usageFormatOptions","usageLabel","cost","supplementaryCost","infrastructureCost","request","usage","hasTotal","meta","total","hasCost","hasCount","count","hasSupplementaryCost","supplementary","value","hasInfrastructureCost","infrastructure","hasRequest","hasUsage","format","undefined","getCostLayout","showAltHeroFont","altHeroFont","Tooltip","content","formatMessage","messages","enableFlip","getRequestLayout","usageUnits","unitsLabel","getUsageLayout","_units","ReportSummaryItem","label","totalValue","percent","percentVal","percentLabel","Progress","Number","ProgressSize","ReportSummaryItemsBase","shouldComponentUpdate","nextProps","this","props","getItems","idKey","computedItems","getComputedReportItems","otherIndex","findIndex","i","id","slice","render","items","ReportSummaryItems","chartStyles","currentColorScale","chart_color_green_400","chart_color_green_300","chart_color_green_200","chart_color_green_100","chart_color_green_500","currentCostData","fill","currentInfrastructureColorScale","chart_color_blue_400","chart_color_blue_300","chart_color_blue_200","chart_color_blue_100","chart_color_blue_500","currentInfrastructureCostData","strokeDasharray","forecastConeData","strokeWidth","forecastConeDataColorScale","forecastData","forecastDataColorScale","forecastInfrastructureConeData","forecastInfrastructureConeDataColorScale","forecastInfrastructureData","forecastInfrastructureDataColorScale","previousCostData","previousInfrastructureCostData","previousColorScale","chart_color_black_200","yAxis","axisLabel","padding","grid","stroke","ticks","tickLabels","fontSize","xAxis","CostChartBase","constructor","super","arguments","containerRef","observer","noop","state","hiddenSeries","Set","initDatum","showForecast","costKey","costTooltipKey","series","childName","data","legendItem","name","symbol","type","tooltip","style","Object","assign","push","cursorVoronoiContainer","getCursorVoronoiContainer","setState","getAdjustedContainerHeight","adjustContainerHeight","height","containerHeight","adjustedContainerHeight","getChart","index","ChartArea","has","y","interpolation","key","formatter","CursorVoronoiContainer","cursorDimension","labels","datum","mouseFollowTooltips","voronoiDimension","voronoiPadding","bottom","left","right","top","getLegend","ChartLegend","gutter","responsive","handleLegendClick","handleResize","clientWidth","current","componentDidMount","componentDidUpdate","prevProps","componentWillUnmount","getEvents","chartNames","isHidden","legendName","onLegendClick","getEndDate","currentCostDate","getDate","forecastCostDate","previousUsageDate","Math","max","domain","ge","lastDate","half","floor","_2ndDay","_3rdDay","_4thDay","container","disable","labelComponent","ChartLegendTooltip","legendData","day","x","ref","Chart","containerComponent","events","legendAllowWrap","legendComponent","legendPosition","theme","map","s","ChartAxis","C","tickValues","dependentAxis","CostChart","ReportSummaryCost","_a","chartName","rest","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","length","propertyIsEnumerable","__rest","chart_color_orange_300","DailyCostChartBase","initDatumChildName","isLine","isBar","isForecast","ChartBar","alignment","ChartLine","getForecastBarChart","getForecastLineChart","barWidth","isDataHidden","ChartGroup","offset","DailyCostChart","ReportSummaryDailyCost","itemsPerRow","DailyTrendChartBase","currentData","previousData","showSupplementaryLabel","showUsageLegendLabel","tooltipKey","noDataKey","legendItemsPerRow","orientation","previousDate","currentDate","forecastDate","DailyTrendChart","ReportSummaryDailyTrend","currentMonthData","previousMonthData","TrendChartBase","forecastConeDate","endDate","midDate","TrendChart","ReportSummaryTrend","chartContainer","marginTop","currentRequestData","currentUsageData","legendColorScale","previousRequestData","previousUsageData","UsageChartBase","usageKey","usageTooltipKey","requestKey","requestTooltipKey","currentRequestDate","currentUsageDate","previousRequestDate","UsageChart","ReportSummaryUsage"],"sourceRoot":""}