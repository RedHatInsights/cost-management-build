{"version":3,"sources":["webpack:///./src/pages/overview/overview.scss?a989","webpack:///./src/pages/overview/overview.scss","webpack:///./src/pages/dashboard/components/dashboardBase.tsx","webpack:///./src/pages/dashboard/components/dashboardWidget.styles.ts","webpack:///./src/pages/dashboard/components/dashboardWidgetBase.tsx","webpack:///./src/pages/dashboard/awsCloudDashboard/awsCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/awsCloudDashboard/awsCloudDashboard.tsx","webpack:///./src/pages/dashboard/awsDashboard/awsDashboardWidget.tsx","webpack:///./src/pages/dashboard/awsDashboard/awsDashboard.tsx","webpack:///./src/pages/dashboard/azureCloudDashboard/azureCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/azureCloudDashboard/azureCloudDashboard.tsx","webpack:///./src/pages/dashboard/azureDashboard/azureDashboardWidget.tsx","webpack:///./src/pages/dashboard/azureDashboard/azureDashboard.tsx","webpack:///./src/pages/dashboard/gcpDashboard/gcpDashboardWidget.tsx","webpack:///./src/pages/dashboard/gcpDashboard/gcpDashboard.tsx","webpack:///./src/pages/dashboard/ocpCloudDashboard/ocpCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpCloudDashboard/ocpCloudDashboard.tsx","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboardWidget.styles.ts","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboard.tsx","webpack:///./src/pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboard.tsx","webpack:///./src/pages/dashboard/ocpUsageDashboard/ocpUsageDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpUsageDashboard/ocpUsageDashboard.tsx","webpack:///./src/pages/overview/overview.styles.ts","webpack:///./src/pages/overview/perspective.styles.ts","webpack:///./src/pages/overview/perspective.tsx","webpack:///./src/pages/overview/overview.tsx","webpack:///./src/pages/overview/index.ts","webpack:///./src/utils/formatValue.ts","webpack:///./src/utils/computedForecast/getComputedForecastItems.ts","webpack:///./src/components/charts/common/chartUtils.ts","webpack:///./src/components/charts/common/charts-common.scss?2cec","webpack:///./src/components/charts/chartTheme/theme-koku.ts","webpack:///./src/components/charts/chartTheme/index.ts","webpack:///./src/components/charts/chartTheme/theme-utils.ts","webpack:///./src/utils/computedReport/getComputedReportItems.ts","webpack:///./src/utils/computedReport/getItemLabel.ts","webpack:///./src/components/state/loadingState/loadingState.tsx","webpack:///./src/api/queries/providersQuery.ts","webpack:///./src/utils/sort.ts","webpack:///./src/components/state/emptyValueState/emptyValueState.tsx","webpack:///./src/components/reports/reportSummary/reportSummary.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryAlt.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryDetails.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryItem.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryItems.tsx","webpack:///./src/components/charts/costChart/costChart.styles.ts","webpack:///./src/components/charts/costChart/costChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryCost.tsx","webpack:///./src/components/charts/trendChart/trendChart.styles.ts","webpack:///./src/components/charts/trendChart/trendChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryTrend.tsx","webpack:///./src/components/charts/usageChart/usageChart.styles.ts","webpack:///./src/components/charts/usageChart/usageChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryUsage.tsx","webpack:///./src/utils/pathname.ts","webpack:///./src/pages/state/loading/loading.tsx","webpack:///./src/pages/state/loading/index.ts","webpack:///./src/components/reports/reportSummary/reportSummary.scss?97f8","webpack:///./src/components/reports/reportSummary/reportSummary.scss","webpack:///./src/components/reports/reportSummary/reportSummaryAlt.scss?964b","webpack:///./src/components/reports/reportSummary/reportSummaryAlt.scss","webpack:///./src/components/reports/reportSummary/reportSummaryDetails.scss?0d10","webpack:///./src/components/reports/reportSummary/reportSummaryDetails.scss","webpack:///./src/components/state/emptyValueState/emptyValueState.scss?e614","webpack:///./src/components/state/emptyValueState/emptyValueState.scss","webpack:///./src/components/reports/reportSummary/reportSummaryItem.scss?0e2c","webpack:///./src/components/reports/reportSummary/reportSummaryItem.scss","webpack:///./src/components/reports/reportSummary/reportSummaryItems.scss?00c0","webpack:///./src/components/reports/reportSummary/reportSummaryItems.scss","webpack:///./src/components/reports/reportSummary/reportSummaryCost.scss?4e01","webpack:///./src/components/reports/reportSummary/reportSummaryCost.scss","webpack:///./src/components/charts/common/charts-common.scss","webpack:///./src/components/reports/reportSummary/reportSummaryTrend.scss?6066","webpack:///./src/components/reports/reportSummary/reportSummaryTrend.scss","webpack:///./src/components/reports/reportSummary/reportSummaryUsage.scss?37e6","webpack:///./src/components/reports/reportSummary/reportSummaryUsage.scss","webpack:///./src/components/icons/costIcon/costIcon.scss?e2d0","webpack:///./src/components/icons/costIcon/costIcon.scss","webpack:///./src/components/icons/costIcon/Cost-icon.svg","webpack:///./src/components/icons/costIcon/costIcon.tsx","webpack:///./src/components/icons/costIcon/index.ts","webpack:///./src/pages/state/noProviders/noProvidersState.styles.ts","webpack:///./src/pages/state/noProviders/noProvidersState.tsx","webpack:///./src/pages/state/noProviders/noProviders.tsx","webpack:///./src/pages/state/noProviders/index.ts"],"names":["content","module","i","options","transform","undefined","locals","exports","___CSS_LOADER_API_IMPORT___","push","DashboardBase","DashboardWidget","selectWidgets","widgets","createElement","Grid","hasGutter","map","widgetId","details","showHorizontal","GridItem","sm","key","lg","xl","xl2","chartStyles","chartAltHeight","chartHeight","containerAltHeight","containerTrendHeight","containerUsageHeight","styles","tabs","marginTop","value","tabItems","Component","super","arguments","this","state","activeTabKey","buildDetailsLink","tab","getIdKeyForTab","props","currentTab","viewAllPath","group_by","order_by","cost","getChart","containerHeight","height","adjustContainerHeight","chartType","getCostChart","getTrendChart","getUsageChart","currentReport","previousReport","t","trend","units","getUnits","title","titleKey","computedReportItem","computedReportItemValue","currentInfrastructureData","type","previousInfrastructureData","currentCostData","previousCostData","currentInfrastructureCostData","formatDatumValue","formatValue","formatDatumOptions","formatOptions","previousInfrastructureCostData","showSupplementaryLabel","forecast","computedForecastItem","currentData","previousData","forecastData","forecastConeData","newForecast","date","data","length","total","meta","item","Date","shift","unshift","values","confidence_max","confidence_min","showUsageLegendLabel","currentRequestData","previousRequestData","currentUsageData","previousUsageData","getDetails","costLabel","getDetailsLabel","costKey","report","requestLabel","requestKey","showTooltip","showUnits","showUsageFirst","usageFormatOptions","usageLabel","usageKey","getDetailsLink","Link","to","onClick","handleInsightsNavClick","getDetailsLinkTitle","groupBy","getHorizontalLayout","currentReportFetchStatus","detailsLink","status","subTitle","getSubTitle","getTabs","getTitle","adjustChartContainerHeight","today","month","endDate","startDate","count","getTab","index","tabsReport","tabsReportFetchStatus","Tab","eventKey","TabTitleText","getTabTitle","style","idKey","items","reportItem","getTabItem","availableTabs","topItems","activeTab","totalValue","hasTotal","usage","id","label","toString","Tabs","isFilled","activeKey","onSelect","handleTabClick","getVerticalLayout","Boolean","appNavId","insights","chrome","appNavClick","secondaryNav","event","tabIndex","updateTab","setState","fetchForecasts","fetchReports","mapStateToProps","widget","awsCloudDashboard","selectWidget","queries","selectWidgetQueries","Object","assign","selectReport","reportPathsType","reportType","current","selectReportFetchStatus","previous","mapDispatchToProps","fetchWidgetReports","changeWidgetTab","AwsCloudDashboardWidget","withTranslation","selectCurrentWidgets","awsDashboard","selectForecast","forecastPathsType","forecastType","forecastFetchStatus","selectForecastFetchStatus","fetchWidgetForecasts","AwsDashboardWidget","azureCloudDashboard","AzureCloudDashboardWidget","azureDashboard","AzureDashboardWidget","gcpDashboard","GcpDashboardWidget","ocpCloudDashboard","OcpCloudDashboardWidget","ocpDashboard","currentQuery","previousQuery","tabsQuery","OcpDashboardWidget","ocpSupplementaryDashboard","OcpSupplementaryDashboardWidget","ocpUsageDashboard","OcpUsageDashboardWidget","infoIcon","fontSize","infoTitle","fontWeight","perspective","perspectiveSelector","display","alignItems","perspectiveLabel","marginBottom","marginRight","var","defaultState","isPerspectiveOpen","getDropDownItems","option","DropdownItem","component","handleClick","getCurrentLabel","currentItem","onItemClicked","handleSelect","handleToggle","dropdownItems","Dropdown","toggle","DropdownToggle","onToggle","isOpen","Perspective","ocpOptions","infrastructureAllCloudOptions","infrastructureAwsOptions","infrastructureAwsCloudOptions","infrastructureAzureOptions","infrastructureAzureCloudOptions","infrastructureGcpOptions","infrastructureOcpOptions","isAwsAccessAllowed","isAzureAccessAllowed","isGcpAccessAllowed","isOcpAccessAllowed","getAvailableTabs","isAwsAvailable","isAzureAvailable","isGcpAvailable","isOcpAvailable","isOcpCloudAvailable","contentRef","createRef","getCurrentTab","getDefaultInfrastructurePerspective","getDefaultOcpPerspective","getPerspective","currentInfrastructurePerspective","currentOcpPerspective","handlePerspectiveClick","tabContentId","tabContentRef","getTabContent","val","TabContent","ref","emptyTab","Fragment","awsProviders","azureProviders","gcpProviders","ocpProviders","async","isEntitled","isOrgAdmin","getPermissions","then","prevProps","awsProvidersFetchStatus","azureProvidersFetchStatus","gcpProvidersFetchStatus","ocpProvidersFetchStatus","isLoading","noAwsProviders","noAzureProviders","noGcpProviders","noOcpProviders","noProviders","className","Title","headingLevel","size","Popover","enableFlip","bodyContent","Button","variant","plain","awsProvidersQueryString","providers","selectProviders","selectProvidersFetchStatus","azureProvidersQueryString","gcpProvidersQueryString","ocpProvidersQueryString","unitLookupKey","unit","lookup","toLowerCase","fValue","formatCurrency","formatUsageGb","formatUsageHrs","unknownTypeFormatter","_unit","fractionDigits","toLocaleString","minimumFractionDigits","maximumFractionDigits","currency","getComputedForecastItems","sortDirection","sortKey","sort","itemMap","Map","visitDataPoint","dataPoint","forEach","_val","rsquared","Number","pvalues","get","set","Array","from","getUnsortedComputedForecastItems","direction","transformForecast","computedItems","result","createForecastDatum","reduce","acc","d","prevValue","y","transformForecastCone","createForecastConeDatum","prevMaxValue","prevMinValue","y0","transformReport","reportItemValue","getComputedReportItems","createReportDatum","datums","firstDate","lastDate","padDate","getDate","setDate","padComputedReportItems","computedItem","xVal","yVal","isFloat","parseFloat","toFixed","isInt","x","maxValue","minValue","y0Val","getDateRange","firstOfMonth","lastOfMonth","offset","start","end","setMonth","getMonth","getDatumDateRange","getMaxValue","max","datum","getTooltipContent","i18next","getCostRangeString","year","getUsageRangeString","n","LAYOUT_PROPS","padding","area","axis","bar","boxplot","candlestick","chart","errorbar","group","legend","line","pie","scatter","stack","tooltip","voronoi","ChartTheme","default","labelKey","getUnsortedComputedReportItems","idSuffix","cluster","org_unit_id","mapId","cluster_alias","clusters","capacity","deltaPercent","delta_percent","deltaValue","delta_value","source_uuid","supplementary","infrastructure","itemLabelKey","String","keys","indexOf","tagPrefixKey","hasOwnProperty","getItemLabel","alias","account_alias","limit","request","LoadingState","large","getProvidersQuery","query","encode","indices","getValueForItem","array","a","b","aVal","bVal","EmptyValueState","ReportSummary","children","Card","CardTitle","CardBody","Skeleton","CardFooter","ReportSummaryAlt","ReportSummaryDetails","requestFormatOptions","supplementaryCost","infrastructureCost","hasCost","hasCount","hasSupplementaryCost","hasInfrastructureCost","hasRequest","hasUsage","getCostLayout","showAltHeroFont","altHeroFont","Tooltip","getRequestLayout","usageUnits","_units","unitsLabel","getUsageLayout","ReportSummaryItemBase","percentVal","percentLabel","percent","Progress","defaultProps","v","ReportSummaryItem","nextProps","otherIndex","findIndex","includes","slice","getItems","ReportSummaryItems","currentColorScale","chart_color_green_400","chart_color_green_300","chart_color_green_200","chart_color_green_100","chart_color_green_500","fill","strokeDasharray","forecastCostData","itemsPerRow","previousColorScale","chart_color_black_200","yAxis","axisLabel","grid","stroke","ticks","tickLabels","xAxis","containerRef","hiddenSeries","Set","width","initDatum","series","childName","legendItem","name","symbol","isForecast","handleNavToggle","setTimeout","handleResize","clientWidth","ChartArea","has","interpolation","getContainer","CursorVoronoiContainer","cursorDimension","labels","isDataAvailable","getTooltipLabel","labelComponent","ChartLegendTooltip","legendData","getLegendData","day","mouseFollowTooltips","voronoiDimension","voronoiPadding","bottom","left","right","top","getLegend","legendItemsPerRow","ChartLegend","gutter","responsive","formatter","handleLegendClick","delete","add","unavailable","s","isSeriesHidden","getChartNames","serie","getEvents","chartNames","isHidden","legendName","onLegendClick","window","addEventListener","navToggle","on","removeEventListener","domain","maxCurrentInfrastructure","maxCurrentCost","maxForecastCost","maxPreviousInfrastructure","maxPreviousUsage","Math","ceil","currentInfrastructureDate","currentCostDate","forecastCostDate","previousInfrastructureDate","previousUsageDate","getDomain","getEndDate","midDate","floor","adjustedContainerHeight","Chart","containerComponent","events","legendComponent","legendPosition","theme","ChartAxis","tickValues","dependentAxis","ReportSummaryCost","currentMonthData","forecastColorScale","forecastConeColorScale","strokeWidth","previousMonthData","tooltipKey","orientation","dy","dy0","value0","value1","maxCurrent","maxPrevious","previousDate","currentDate","forecastDate","ReportSummaryTrend","chartContainer","legendColorScale","maxCurrentRequest","maxCurrentUsage","maxPreviousRequest","currentRequestDate","currentUsageDate","previousRequestDate","ReportSummaryUsage","getReleasePath","pathName","location","pathname","split","release","withRouter","PageHeader","Main","___CSS_LOADER_AT_RULE_IMPORT_0___","src","alt","iconSpacer","marginLeft","viewSources","getDocLink","textKey","urlKey","href","rel","target","getRouteToSources","providerType","docUrlKey","icon","descKey","EmptyState","EmptyStateIcon","EmptyStateBody","NoProvidersState"],"mappings":"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","file":"2ba25913205fcfb7ef1d.bundle.js","sourcesContent":["\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./overview.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./overview.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./overview.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".headerOverride.pf-c-page__main-section{--pf-c-page__main-section--PaddingBottom: 0}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nconst DashboardBase = ({ DashboardWidget, selectWidgets, widgets }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { hasGutter: true }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return widget.details.showHorizontal ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(DashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { lg: 12, xl: 6, xl2: 4, key: widgetId },\n            React.createElement(DashboardWidget, { widgetId: widgetId })));\n    }))));\nexport { DashboardBase };\n","import global_spacer_2xl from '@patternfly/react-tokens/dist/js/global_spacer_2xl';\nimport global_spacer_xl from '@patternfly/react-tokens/dist/js/global_spacer_xl';\nexport const chartStyles = {\n    chartAltHeight: 250,\n    chartHeight: 180,\n    containerAltHeight: 250,\n    containerTrendHeight: 180,\n    containerUsageHeight: 180,\n};\nexport const styles = {\n    tabs: {\n        marginTop: global_spacer_2xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n};\n","import { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { getQuery } from 'api/queries/awsQuery';\nimport { transformForecast, transformForecastCone, transformReport, } from 'components/charts/common/chartUtils';\nimport { ReportSummary, ReportSummaryAlt, ReportSummaryCost, ReportSummaryDetails, ReportSummaryItem, ReportSummaryItems, ReportSummaryTrend, ReportSummaryUsage, } from 'components/reports/reportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport { cloneDeep } from 'lodash';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './dashboardWidget.styles';\nclass DashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = (tab) => {\n            const { details, getIdKeyForTab } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return `${details.viewAllPath}?${getQuery({\n                group_by: {\n                    [currentTab]: '*',\n                },\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.getChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { chartType } = this.props;\n            if (chartType === \"cost\" /* cost */) {\n                return this.getCostChart(containerHeight, height, adjustContainerHeight);\n            }\n            else if (chartType === \"supplementary\" /* supplementary */) {\n                return this.getTrendChart(containerHeight, height, adjustContainerHeight, true);\n            }\n            else if (chartType === \"trend\" /* trend */) {\n                return this.getTrendChart(containerHeight, height, adjustContainerHeight);\n            }\n            else if (chartType === \"usage\" /* usage */) {\n                return this.getUsageChart(height, adjustContainerHeight);\n            }\n            else {\n                return null;\n            }\n        };\n        // This chart displays cost and infrastructure cost\n        this.getCostChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { currentReport, previousReport, t, trend } = this.props;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            const computedReportItem = trend.computedReportItem || 'cost'; // cost, supplementaryCost, etc.\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            // Infrastructure data\n            const currentInfrastructureData = transformReport(currentReport, trend.type, 'date', 'infrastructure', computedReportItemValue);\n            const previousInfrastructureData = transformReport(previousReport, trend.type, 'date', 'infrastructure', computedReportItemValue);\n            // Cost data\n            const currentCostData = transformReport(currentReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            const previousCostData = transformReport(previousReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            return (React.createElement(ReportSummaryCost, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentCostData: currentCostData, currentInfrastructureCostData: currentInfrastructureData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousCostData: previousCostData, previousInfrastructureCostData: previousInfrastructureData, title: title }));\n        };\n        // This chart displays cost only\n        this.getTrendChart = (containerHeight, height, adjustContainerHeight = false, showSupplementaryLabel = false) => {\n            const { currentReport, details, forecast, previousReport, t, trend } = this.props;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            const computedForecastItem = trend.computedForecastItem;\n            const computedReportItem = trend.computedReportItem || 'cost'; // cost, supplementaryCost, etc.\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            // Data\n            const currentData = transformReport(currentReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            const previousData = transformReport(previousReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            // Join forecast\n            let forecastData;\n            let forecastConeData;\n            if (computedForecastItem) {\n                const newForecast = cloneDeep(forecast);\n                if (forecast && currentReport) {\n                    const date = currentReport.data ? currentReport.data[currentReport.data.length - 1].date : undefined;\n                    const total = currentReport.meta && currentReport.meta.total && currentReport.meta.total.cost\n                        ? currentReport.meta.total.cost.total.value\n                        : 0;\n                    // Remove overlapping dates, if any\n                    for (const item of forecast.data) {\n                        if (new Date(date) >= new Date(item.date)) {\n                            newForecast.data.shift();\n                        }\n                    }\n                    // Show continuous line from current report to forecast\n                    newForecast.data.unshift({\n                        date,\n                        values: [\n                            {\n                                date,\n                                cost: {\n                                    confidence_max: {\n                                        value: 0,\n                                    },\n                                    confidence_min: {\n                                        value: 0,\n                                    },\n                                    total: {\n                                        value: total,\n                                        units: 'USD',\n                                    },\n                                },\n                            },\n                        ],\n                    });\n                }\n                forecastData = transformForecast(newForecast, trend.type, computedForecastItem);\n                forecastConeData = transformForecastCone(newForecast, trend.type, computedForecastItem);\n            }\n            return (React.createElement(ReportSummaryTrend, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentData: currentData, forecastData: forecastData, forecastConeData: forecastConeData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousData, showSupplementaryLabel: showSupplementaryLabel, showUsageLegendLabel: details.showUsageLegendLabel, title: title, units: units }));\n        };\n        // This chart displays usage and requests\n        this.getUsageChart = (height, adjustContainerHeight = false) => {\n            const { currentReport, previousReport, t, trend } = this.props;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            // Request data\n            const currentRequestData = transformReport(currentReport, trend.type, 'date', 'request');\n            const previousRequestData = transformReport(previousReport, trend.type, 'date', 'request');\n            // Usage data\n            const currentUsageData = transformReport(currentReport, trend.type, 'date', 'usage');\n            const previousUsageData = transformReport(previousReport, trend.type, 'date', 'usage');\n            return (React.createElement(ReportSummaryUsage, { adjustContainerHeight: adjustContainerHeight, containerHeight: chartStyles.containerUsageHeight, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousRequestData: previousRequestData, previousUsageData: previousUsageData, title: title }));\n        };\n        this.getDetails = () => {\n            const { chartType, currentReport, details, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            const units = this.getUnits();\n            return (React.createElement(ReportSummaryDetails, { chartType: chartType, computedReportItem: computedReportItem, computedReportItemValue: computedReportItemValue, costLabel: this.getDetailsLabel(details.costKey, units), formatOptions: details.formatOptions, formatValue: formatValue, report: currentReport, requestLabel: this.getDetailsLabel(details.requestKey, units), showTooltip: details.showTooltip, showUnits: details.showUnits, showUsageFirst: details.showUsageFirst, units: details.units, usageFormatOptions: details.usageFormatOptions, usageLabel: this.getDetailsLabel(details.usageKey, units) }));\n        };\n        this.getDetailsLabel = (key, units) => {\n            const { t } = this.props;\n            return key ? t(key, { units: t(`units.${units}`) }) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, details } = this.props;\n            if (details.viewAllPath) {\n                return (React.createElement(Link, { to: this.buildDetailsLink(currentTab), onClick: this.handleInsightsNavClick }, this.getDetailsLinkTitle(currentTab)));\n            }\n            return null;\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { getIdKeyForTab, t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { containerAltHeight = chartStyles.containerAltHeight, chartAltHeight = chartStyles.chartAltHeight, currentReportFetchStatus, details, } = this.props;\n            return (React.createElement(ReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(containerAltHeight, chartAltHeight, details.adjustChartContainerHeight)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'D');\n            const startDate = formatDate(startOfMonth(today), 'D');\n            return t('aws_dashboard.widget_subtitle', {\n                count: getDate(today),\n                endDate,\n                month,\n                startDate,\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { getIdKeyForTab, tabsReport, tabsReportFetchStatus, trend } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) },\n                React.createElement(\"div\", { style: styles.tabItems },\n                    React.createElement(ReportSummaryItems, { computedReportItemValue: computedReportItemValue, idKey: currentTab, key: `${currentTab}-items`, report: tabsReport, status: tabsReportFetchStatus }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, details, getIdKeyForTab, tabsReport, topItems, trend } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            let totalValue;\n            const hasTotal = tabsReport && tabsReport.meta && tabsReport.meta.total;\n            if (computedReportItem === \"usage\" /* usage */) {\n                if (hasTotal && tabsReport.meta.total.usage) {\n                    totalValue = tabsReport.meta.total.usage.value;\n                }\n            }\n            else {\n                if (hasTotal &&\n                    tabsReport.meta.total[computedReportItem] &&\n                    tabsReport.meta.total[computedReportItem][computedReportItemValue]) {\n                    totalValue = tabsReport.meta.total[computedReportItem][computedReportItemValue].value;\n                }\n            }\n            if (activeTab === currentTab) {\n                return (React.createElement(ReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: totalValue, units: details.units ? details.units : this.getUnits(), value: reportItem[computedReportItem] }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { getIdKeyForTab, t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getUnits = () => {\n            const { currentReport, details, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            if (details.units) {\n                return details.units;\n            }\n            let units;\n            const hasTotal = currentReport && currentReport.meta && currentReport.meta.total;\n            if (computedReportItem === \"usage\" /* usage */) {\n                const hasUsage = hasTotal && currentReport.meta.total.usage;\n                units = hasUsage ? unitLookupKey(currentReport.meta.total.usage.units) : '';\n            }\n            else {\n                const hasCost = hasTotal &&\n                    currentReport.meta.total[computedReportItem] &&\n                    currentReport.meta.total[computedReportItem][computedReportItemValue];\n                units = hasCost ? unitLookupKey(currentReport.meta.total[computedReportItem][computedReportItemValue].units) : '';\n            }\n            return units;\n        };\n        this.getVerticalLayout = () => {\n            const { availableTabs, currentReportFetchStatus, details } = this.props;\n            return (React.createElement(ReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerTrendHeight, chartStyles.chartHeight, details.adjustChartContainerHeight),\n                Boolean(availableTabs) && React.createElement(\"div\", { style: styles.tabs }, this.getTabs())));\n        };\n        this.handleInsightsNavClick = () => {\n            const { details } = this.props;\n            if (details.appNavId) {\n                insights.chrome.appNavClick({\n                    id: details.appNavId,\n                    secondaryNav: true,\n                });\n            }\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchForecasts, fetchReports, id, updateTab, widgetId } = this.props;\n        if (availableTabs) {\n            updateTab(id, availableTabs[0]);\n        }\n        if (fetchForecasts) {\n            fetchForecasts(widgetId);\n        }\n        if (fetchReports) {\n            fetchReports(widgetId);\n        }\n    }\n    render() {\n        const { details } = this.props;\n        return details.showHorizontal ? this.getHorizontalLayout() : this.getVerticalLayout();\n    }\n}\nexport { DashboardWidgetBase };\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsCloudDashboardActions, awsCloudDashboardSelectors, } from 'store/dashboard/awsCloudDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: awsCloudDashboardActions.fetchWidgetReports,\n    updateTab: awsCloudDashboardActions.changeWidgetTab,\n};\nconst AwsCloudDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AwsCloudDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsCloudDashboardSelectors } from 'store/dashboard/awsCloudDashboard';\nimport { AwsCloudDashboardWidget } from './awsCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: AwsCloudDashboardWidget,\n        selectWidgets: awsCloudDashboardSelectors.selectWidgets(state),\n        widgets: awsCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsCloudDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default AwsCloudDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsDashboardActions, awsDashboardSelectors } from 'store/dashboard/awsDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: awsDashboardActions.fetchWidgetForecasts,\n    fetchReports: awsDashboardActions.fetchWidgetReports,\n    updateTab: awsDashboardActions.changeWidgetTab,\n};\nconst AwsDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AwsDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsDashboardSelectors } from 'store/dashboard/awsDashboard';\nimport { AwsDashboardWidget } from './awsDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: AwsDashboardWidget,\n        selectWidgets: awsDashboardSelectors.selectWidgets(state),\n        widgets: awsDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default AwsDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureCloudDashboardActions, azureCloudDashboardSelectors, } from 'store/dashboard/azureCloudDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"service_names\" /* service_names */:\n            return 'service_name';\n        case \"subscription_guids\" /* subscription_guids */:\n            return 'subscription_guid';\n        case \"resource_locations\" /* resource_locations */:\n            return 'resource_location';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = azureCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = azureCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: azureCloudDashboardActions.fetchWidgetReports,\n    updateTab: azureCloudDashboardActions.changeWidgetTab,\n};\nconst AzureCloudDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AzureCloudDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureCloudDashboardSelectors } from 'store/dashboard/azureCloudDashboard';\nimport { AzureCloudDashboardWidget } from './azureCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: AzureCloudDashboardWidget,\n        selectWidgets: azureCloudDashboardSelectors.selectWidgets(state),\n        widgets: azureCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AzureCloudDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default AzureCloudDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureDashboardActions, azureDashboardSelectors } from 'store/dashboard/azureDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"service_names\" /* service_names */:\n            return 'service_name';\n        case \"subscription_guids\" /* subscription_guids */:\n            return 'subscription_guid';\n        case \"resource_locations\" /* resource_locations */:\n            return 'resource_location';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = azureDashboardSelectors.selectWidget(state, widgetId);\n    const queries = azureDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: azureDashboardActions.fetchWidgetReports,\n    updateTab: azureDashboardActions.changeWidgetTab,\n};\nconst AzureDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AzureDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureDashboardSelectors } from 'store/dashboard/azureDashboard';\nimport { AzureDashboardWidget } from './azureDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: AzureDashboardWidget,\n        selectWidgets: azureDashboardSelectors.selectWidgets(state),\n        widgets: azureDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AzureDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default AzureDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { gcpDashboardActions, gcpDashboardSelectors } from 'store/dashboard/gcpDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = gcpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = gcpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: gcpDashboardActions.fetchWidgetReports,\n    updateTab: gcpDashboardActions.changeWidgetTab,\n};\nconst GcpDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { GcpDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { gcpDashboardSelectors } from 'store/dashboard/gcpDashboard';\nimport { GcpDashboardWidget } from './gcpDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: GcpDashboardWidget,\n        selectWidgets: gcpDashboardSelectors.selectWidgets(state),\n        widgets: gcpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst GcpDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default GcpDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardActions, ocpCloudDashboardSelectors, } from 'store/dashboard/ocpCloudDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"services\" /* services */:\n            return 'service';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpCloudDashboardActions.fetchWidgetReports,\n    updateTab: ocpCloudDashboardActions.changeWidgetTab,\n};\nconst OcpCloudDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpCloudDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardSelectors } from 'store/dashboard/ocpCloudDashboard';\nimport { OcpCloudDashboardWidget } from './ocpCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: OcpCloudDashboardWidget,\n        selectWidgets: ocpCloudDashboardSelectors.selectWidgets(state),\n        widgets: ocpCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpCloudDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpCloudDashboard;\n","export const chartStyles = {\n    chartAltHeight: 250,\n    containerAltHeight: 250,\n};\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardActions, ocpDashboardSelectors } from 'store/dashboard/ocpDashboard';\nimport { reportSelectors } from 'store/reports';\nimport { chartStyles } from './ocpDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, chartAltHeight: chartStyles.chartAltHeight, containerAltHeight: chartStyles.containerAltHeight, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpDashboardActions.fetchWidgetReports,\n    updateTab: ocpDashboardActions.changeWidgetTab,\n};\nconst OcpDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardSelectors } from 'store/dashboard/ocpDashboard';\nimport { OcpDashboardWidget } from './ocpDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: OcpDashboardWidget,\n        selectWidgets: ocpDashboardSelectors.selectWidgets(state),\n        widgets: ocpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpSupplementaryDashboardActions, ocpSupplementaryDashboardSelectors, } from 'store/dashboard/ocpSupplementaryDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpSupplementaryDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpSupplementaryDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpSupplementaryDashboardActions.fetchWidgetReports,\n    updateTab: ocpSupplementaryDashboardActions.changeWidgetTab,\n};\nconst OcpSupplementaryDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpSupplementaryDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpSupplementaryDashboardSelectors } from 'store/dashboard/ocpSupplementaryDashboard';\nimport { OcpSupplementaryDashboardWidget } from './ocpSupplementaryDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: OcpSupplementaryDashboardWidget,\n        selectWidgets: ocpSupplementaryDashboardSelectors.selectWidgets(state),\n        widgets: ocpSupplementaryDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpSupplementaryDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpSupplementaryDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpUsageDashboardActions, ocpUsageDashboardSelectors, } from 'store/dashboard/ocpUsageDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpUsageDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpUsageDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpUsageDashboardActions.fetchWidgetReports,\n    updateTab: ocpUsageDashboardActions.changeWidgetTab,\n};\nconst OcpUsageDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpUsageDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpUsageDashboardSelectors } from 'store/dashboard/ocpUsageDashboard';\nimport { OcpUsageDashboardWidget } from './ocpUsageDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: OcpUsageDashboardWidget,\n        selectWidgets: ocpUsageDashboardSelectors.selectWidgets(state),\n        widgets: ocpUsageDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpUsageDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpUsageDashboard;\n","import global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const styles = {\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    perspective: {\n        marginTop: global_spacer_lg.value,\n    },\n    tabs: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    perspectiveSelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    perspectiveLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n};\n","import { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './perspective.styles';\nclass PerspectiveBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isPerspectiveOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getDropDownItems = () => {\n            const { options, t } = this.props;\n            return options.map(option => (React.createElement(DropdownItem, { component: \"button\", key: option.value, onClick: () => this.handleClick(option.value) }, t(option.label))));\n        };\n        this.getCurrentLabel = () => {\n            const { currentItem, options, t } = this.props;\n            let label = '';\n            for (const option of options) {\n                if (currentItem === option.value) {\n                    label = t(option.label);\n                    break;\n                }\n            }\n            return label;\n        };\n        this.handleClick = value => {\n            const { onItemClicked } = this.props;\n            if (onItemClicked) {\n                onItemClicked(value);\n            }\n        };\n        this.handleSelect = () => {\n            this.setState({\n                isPerspectiveOpen: !this.state.isPerspectiveOpen,\n            });\n        };\n        this.handleToggle = isPerspectiveOpen => {\n            this.setState({\n                isPerspectiveOpen,\n            });\n        };\n    }\n    render() {\n        const { t } = this.props;\n        const { isPerspectiveOpen } = this.state;\n        const dropdownItems = this.getDropDownItems();\n        return (React.createElement(\"div\", { style: styles.perspectiveSelector },\n            React.createElement(\"label\", { style: styles.perspectiveLabel }, t('overview.perspective.label')),\n            React.createElement(Dropdown, { onSelect: this.handleSelect, toggle: React.createElement(DropdownToggle, { onToggle: this.handleToggle }, this.getCurrentLabel()), isOpen: isPerspectiveOpen, dropdownItems: dropdownItems })));\n    }\n}\nconst Perspective = withTranslation()(PerspectiveBase);\nexport { Perspective };\n","import './overview.scss';\nimport { Button, ButtonVariant, Popover, Tab, TabContent, Tabs, TabTitleText, Title } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport AwsCloudDashboard from 'pages/dashboard/awsCloudDashboard/awsCloudDashboard';\nimport AwsDashboard from 'pages/dashboard/awsDashboard/awsDashboard';\nimport AzureCloudDashboard from 'pages/dashboard/azureCloudDashboard/azureCloudDashboard';\nimport AzureDashboard from 'pages/dashboard/azureDashboard/azureDashboard';\nimport GcpDashboard from 'pages/dashboard/gcpDashboard/gcpDashboard';\nimport OcpCloudDashboard from 'pages/dashboard/ocpCloudDashboard/ocpCloudDashboard';\nimport OcpDashboard from 'pages/dashboard/ocpDashboard/ocpDashboard';\nimport OcpSupplementaryDashboard from 'pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboard';\nimport OcpUsageDashboard from 'pages/dashboard/ocpUsageDashboard/ocpUsageDashboard';\nimport Loading from 'pages/state/loading';\nimport NoProviders from 'pages/state/noProviders';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsProvidersQuery, azureProvidersQuery, gcpProvidersQuery, ocpProvidersQuery, providersSelectors, } from 'store/providers';\nimport { hasAwsPermissions, hasAzurePermissions, hasEntitledPermissions, hasGcpPermissions, hasOcpPermissions, hasOrgAdminPermissions, } from 'utils/permissions';\nimport { styles } from './overview.styles';\nimport { Perspective } from './perspective';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"infrastructure\" /* infrastructure */:\n            return 'infrastructure';\n        case \"ocp\" /* ocp */:\n            return 'ocp';\n    }\n};\n// Ocp options\nconst ocpOptions = [\n    { label: 'overview.perspective.all', value: 'all' },\n    { label: 'overview.perspective.supplementary', value: 'supplementary' },\n];\n// Infrastructure all cloud options\nconst infrastructureAllCloudOptions = [{ label: 'overview.perspective.all_cloud', value: 'all_cloud' }];\n// Infrastructure AWS options\nconst infrastructureAwsOptions = [{ label: 'overview.perspective.aws', value: 'aws' }];\n// Infrastructure AWS cloud options\nconst infrastructureAwsCloudOptions = [{ label: 'overview.perspective.aws_cloud', value: 'aws_cloud' }];\n// Infrastructure Azure options\nconst infrastructureAzureOptions = [{ label: 'overview.perspective.azure', value: 'azure' }];\n// Infrastructure Azure cloud options\nconst infrastructureAzureCloudOptions = [{ label: 'overview.perspective.azure_cloud', value: 'azure_cloud' }];\n// Infrastructure GCP options\nconst infrastructureGcpOptions = [{ label: 'overview.perspective.gcp', value: 'gcp' }];\n// Infrastructure Ocp options\nconst infrastructureOcpOptions = [{ label: 'overview.perspective.ocp_usage', value: 'ocp_usage' }];\nconst getPermissions = async () => {\n    const isEntitled = await hasEntitledPermissions();\n    const isOrgAdmin = await hasOrgAdminPermissions();\n    const isAwsAccessAllowed = isEntitled && (isOrgAdmin || (await hasAwsPermissions()));\n    const isAzureAccessAllowed = isEntitled && (isOrgAdmin || (await hasAzurePermissions()));\n    const isGcpAccessAllowed = isEntitled && (isOrgAdmin || (await hasGcpPermissions()));\n    const isOcpAccessAllowed = isEntitled && (isOrgAdmin || (await hasOcpPermissions()));\n    return {\n        isAwsAccessAllowed,\n        isAzureAccessAllowed,\n        isGcpAccessAllowed,\n        isOcpAccessAllowed,\n    };\n};\nclass OverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            activeTabKey: 0,\n            isAwsAccessAllowed: false,\n            isAzureAccessAllowed: false,\n            isGcpAccessAllowed: false,\n            isOcpAccessAllowed: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getAvailableTabs = () => {\n            const availableTabs = [];\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isGcpAvailable = this.isGcpAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            const isOcpCloudAvailable = this.isOcpCloudAvailable();\n            if (isOcpAvailable) {\n                availableTabs.push({\n                    contentRef: React.createRef(),\n                    tab: \"ocp\" /* ocp */,\n                });\n            }\n            if (isAwsAvailable || isAzureAvailable || isGcpAvailable || isOcpCloudAvailable) {\n                availableTabs.push({\n                    contentRef: React.createRef(),\n                    tab: \"infrastructure\" /* infrastructure */,\n                });\n            }\n            return availableTabs;\n        };\n        this.getCurrentTab = () => {\n            const { activeTabKey } = this.state;\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isGcpAvailable = this.isGcpAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            const isOcpCloudAvailable = this.isOcpCloudAvailable();\n            const showOcpOnly = isOcpAvailable && !(isAwsAvailable || isAzureAvailable || isGcpAvailable || isOcpCloudAvailable);\n            const showInfrastructureOnly = !isOcpAvailable && (isAwsAvailable || isAzureAvailable || isGcpAvailable || isOcpCloudAvailable);\n            if (showOcpOnly) {\n                return \"ocp\" /* ocp */;\n            }\n            else if (showInfrastructureOnly) {\n                return \"infrastructure\" /* infrastructure */;\n            }\n            else {\n                return activeTabKey === 0 ? \"ocp\" /* ocp */ : \"infrastructure\" /* infrastructure */;\n            }\n        };\n        this.getDefaultInfrastructurePerspective = () => {\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isGcpAvailable = this.isGcpAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            if (isOcpAvailable) {\n                return \"all_cloud\" /* allCloud */;\n            }\n            if (isAwsAvailable) {\n                return \"aws\" /* aws */;\n            }\n            if (isAzureAvailable) {\n                return \"azure\" /* azure */;\n            }\n            if (isGcpAvailable) {\n                return \"gcp\" /* gcp */;\n            }\n            return undefined;\n        };\n        this.getDefaultOcpPerspective = () => {\n            const isOcpAvailable = this.isOcpAvailable();\n            if (isOcpAvailable) {\n                return \"all\" /* all */;\n            }\n            return undefined;\n        };\n        this.getPerspective = () => {\n            const { currentInfrastructurePerspective, currentOcpPerspective } = this.state;\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isGcpAvailable = this.isGcpAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            if (!(isAwsAvailable || isAzureAvailable || isGcpAvailable || isOcpAvailable)) {\n                return null;\n            }\n            // Dynamically show options if providers are available\n            const options = [];\n            if (this.getCurrentTab() === \"infrastructure\" /* infrastructure */) {\n                if (isOcpAvailable) {\n                    options.push(...infrastructureAllCloudOptions);\n                }\n                if (isAwsAvailable) {\n                    options.push(...infrastructureAwsOptions);\n                }\n                if (isOcpAvailable && isAwsAvailable) {\n                    options.push(...infrastructureAwsCloudOptions);\n                }\n                if (isGcpAvailable) {\n                    options.push(...infrastructureGcpOptions);\n                }\n                if (isAzureAvailable) {\n                    options.push(...infrastructureAzureOptions);\n                }\n                if (isOcpAvailable && isAzureAvailable) {\n                    options.push(...infrastructureAzureCloudOptions);\n                }\n                if (isOcpAvailable) {\n                    options.push(...infrastructureOcpOptions);\n                }\n            }\n            else {\n                options.push(...ocpOptions);\n            }\n            const currentItem = this.getCurrentTab() === \"infrastructure\" /* infrastructure */ ? currentInfrastructurePerspective : currentOcpPerspective;\n            return (React.createElement(Perspective, { currentItem: currentItem || options[0].value, onItemClicked: this.handlePerspectiveClick, options: options }));\n        };\n        this.getTab = (tab, contentRef, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, tabContentId: `tab-${index}`, tabContentRef: contentRef, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) }));\n        };\n        this.getTabContent = (availableTabs) => {\n            return availableTabs.map((val, index) => {\n                return (React.createElement(TabContent, { eventKey: index, key: `${getIdKeyForTab(val.tab)}-tabContent`, id: `tab-${index}`, ref: val.contentRef }, this.getTabItem(val.tab, index)));\n            });\n        };\n        this.getTabItem = (tab, index) => {\n            const { activeTabKey, currentInfrastructurePerspective, currentOcpPerspective } = this.state;\n            const emptyTab = React.createElement(React.Fragment, null); // Lazily load tabs\n            if (activeTabKey !== index) {\n                return emptyTab;\n            }\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === \"infrastructure\" /* infrastructure */) {\n                if (currentInfrastructurePerspective === \"all_cloud\" /* allCloud */) {\n                    return React.createElement(OcpCloudDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"aws\" /* aws */) {\n                    return React.createElement(AwsDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"aws_cloud\" /* awsFiltered */) {\n                    return React.createElement(AwsCloudDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"gcp\" /* gcp */) {\n                    return React.createElement(GcpDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"azure\" /* azure */) {\n                    return React.createElement(AzureDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"azure_cloud\" /* azureCloud */) {\n                    return React.createElement(AzureCloudDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"ocp_usage\" /* ocpUsage */) {\n                    return React.createElement(OcpUsageDashboard, null);\n                }\n                else {\n                    return React.createElement(OcpCloudDashboard, null); // default\n                }\n            }\n            else if (currentTab === \"ocp\" /* ocp */) {\n                if (currentOcpPerspective === \"all\" /* all */) {\n                    return React.createElement(OcpDashboard, null);\n                }\n                else if (currentOcpPerspective === \"supplementary\" /* supplementary */) {\n                    return React.createElement(OcpSupplementaryDashboard, null);\n                }\n                else {\n                    return React.createElement(OcpDashboard, null); // default\n                }\n            }\n            else {\n                return emptyTab;\n            }\n        };\n        this.getTabs = (availableTabs) => {\n            const { activeTabKey } = this.state;\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((val, index) => this.getTab(val.tab, val.contentRef, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            if (tab === \"infrastructure\" /* infrastructure */) {\n                return t('overview.infrastructure');\n            }\n            else if (tab === \"ocp\" /* ocp */) {\n                return t('overview.ocp');\n            }\n        };\n        this.handlePerspectiveClick = (value) => {\n            const currentTab = this.getCurrentTab();\n            this.setState(Object.assign(Object.assign({}, (currentTab === \"infrastructure\" /* infrastructure */ && {\n                currentInfrastructurePerspective: value,\n            })), (currentTab === \"ocp\" /* ocp */ && { currentOcpPerspective: value })));\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { activeTabKey } = this.state;\n            if (activeTabKey !== tabIndex) {\n                this.setState({\n                    activeTabKey: tabIndex,\n                });\n            }\n        };\n        this.isAwsAvailable = () => {\n            const { awsProviders } = this.props;\n            const { isAwsAccessAllowed } = this.state;\n            return (\n            // API returns empty data array for no sources\n            isAwsAccessAllowed && awsProviders !== undefined && awsProviders.meta !== undefined && awsProviders.meta.count > 0);\n        };\n        this.isAzureAvailable = () => {\n            const { azureProviders } = this.props;\n            const { isAzureAccessAllowed } = this.state;\n            return (\n            // API returns empty data array for no sources\n            isAzureAccessAllowed &&\n                azureProviders !== undefined &&\n                azureProviders.meta !== undefined &&\n                azureProviders.meta.count > 0);\n        };\n        this.isGcpAvailable = () => {\n            const { gcpProviders } = this.props;\n            const { isGcpAccessAllowed } = this.state;\n            return (\n            // API returns empty data array for no sources\n            isGcpAccessAllowed && gcpProviders !== undefined && gcpProviders.meta !== undefined && gcpProviders.meta.count > 0);\n        };\n        this.isOcpAvailable = () => {\n            const { ocpProviders } = this.props;\n            const { isOcpAccessAllowed } = this.state;\n            return (\n            // API returns empty data array for no sources\n            isOcpAccessAllowed && ocpProviders !== undefined && ocpProviders.meta !== undefined && ocpProviders.meta.count > 0);\n        };\n        this.isOcpCloudAvailable = () => {\n            return this.isAwsAvailable() && this.isOcpAvailable();\n        };\n    }\n    componentDidMount() {\n        getPermissions().then(({ isAwsAccessAllowed, isAzureAccessAllowed, isGcpAccessAllowed, isOcpAccessAllowed }) => {\n            this.setState({\n                currentInfrastructurePerspective: this.getDefaultInfrastructurePerspective(),\n                currentOcpPerspective: this.getDefaultOcpPerspective(),\n                isAwsAccessAllowed,\n                isAzureAccessAllowed,\n                isGcpAccessAllowed,\n                isOcpAccessAllowed,\n            });\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { awsProviders, azureProviders, gcpProviders, ocpProviders } = this.props;\n        if (prevProps.awsProviders !== awsProviders ||\n            prevProps.azureProviders !== azureProviders ||\n            prevProps.gcpProviders !== gcpProviders ||\n            prevProps.ocpProviders !== ocpProviders) {\n            this.setState({\n                currentInfrastructurePerspective: this.getDefaultInfrastructurePerspective(),\n                currentOcpPerspective: this.getDefaultOcpPerspective(),\n            });\n        }\n    }\n    render() {\n        const { awsProvidersFetchStatus, azureProvidersFetchStatus, gcpProvidersFetchStatus, ocpProvidersFetchStatus, t, } = this.props;\n        const availableTabs = this.getAvailableTabs();\n        const isLoading = awsProvidersFetchStatus === 1 /* inProgress */ ||\n            azureProvidersFetchStatus === 1 /* inProgress */ ||\n            gcpProvidersFetchStatus === 1 /* inProgress */ ||\n            ocpProvidersFetchStatus === 1 /* inProgress */;\n        // Test for no providers\n        const noAwsProviders = !this.isAwsAvailable() && awsProvidersFetchStatus === 2 /* complete */;\n        const noAzureProviders = !this.isAzureAvailable() && azureProvidersFetchStatus === 2 /* complete */;\n        const noGcpProviders = !this.isGcpAvailable() && gcpProvidersFetchStatus === 2 /* complete */;\n        const noOcpProviders = !this.isOcpAvailable() && ocpProvidersFetchStatus === 2 /* complete */;\n        const noProviders = noAwsProviders && noAzureProviders && noGcpProviders && noOcpProviders;\n        const title = t('navigation.overview');\n        if (noProviders) {\n            return React.createElement(NoProviders, { title: title });\n        }\n        else if (isLoading) {\n            return React.createElement(Loading, { title: title });\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"section\", { className: `pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light headerOverride}` },\n                React.createElement(\"header\", { className: \"pf-u-display-flex pf-u-justify-content-space-between pf-u-align-items-center\" },\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"2xl\" },\n                        t('overview.title'),\n                        React.createElement(\"span\", { style: styles.infoIcon },\n                            React.createElement(Popover, { \"aria-label\": t('ocp_details.supplementary_aria_label'), enableFlip: true, bodyContent: React.createElement(React.Fragment, null,\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.ocp_cloud')),\n                                    React.createElement(\"p\", null, t('overview.ocp_cloud_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.ocp')),\n                                    React.createElement(\"p\", null, t('overview.ocp_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.gcp')),\n                                    React.createElement(\"p\", null, t('overview.gcp_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.aws')),\n                                    React.createElement(\"p\", null, t('overview.aws_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.azure')),\n                                    React.createElement(\"p\", null, t('overview.azure_desc'))) },\n                                React.createElement(Button, { variant: ButtonVariant.plain },\n                                    React.createElement(OutlinedQuestionCircleIcon, null)))))),\n                React.createElement(\"div\", { style: styles.tabs }, this.getTabs(availableTabs)),\n                React.createElement(\"div\", { style: styles.perspective }, this.getPerspective())),\n            React.createElement(\"section\", { className: \"pf-l-page__main-section pf-c-page__main-section\", \"page-type\": \"cost-management-overview\" }, this.getTabContent(availableTabs))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const awsProvidersQueryString = getProvidersQuery(awsProvidersQuery);\n    const awsProviders = providersSelectors.selectProviders(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const awsProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const azureProvidersQueryString = getProvidersQuery(azureProvidersQuery);\n    const azureProviders = providersSelectors.selectProviders(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const azureProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const gcpProvidersQueryString = getProvidersQuery(gcpProvidersQuery);\n    const gcpProviders = providersSelectors.selectProviders(state, \"gcp\" /* gcp */, gcpProvidersQueryString);\n    const gcpProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"gcp\" /* gcp */, gcpProvidersQueryString);\n    const ocpProvidersQueryString = getProvidersQuery(ocpProvidersQuery);\n    const ocpProviders = providersSelectors.selectProviders(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    const ocpProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    return {\n        awsProviders,\n        awsProvidersFetchStatus,\n        awsProvidersQueryString,\n        azureProviders,\n        azureProvidersFetchStatus,\n        azureProvidersQueryString,\n        gcpProviders,\n        gcpProvidersFetchStatus,\n        gcpProvidersQueryString,\n        ocpProviders,\n        ocpProvidersFetchStatus,\n        ocpProvidersQueryString,\n    };\n});\nconst Overview = withTranslation()(connect(mapStateToProps)(OverviewBase));\nexport default Overview;\n","import Overview from './overview';\nexport default Overview;\n","export const unitLookupKey = unit => {\n    const lookup = unit ? unit.toLowerCase() : '';\n    switch (lookup) {\n        case 'usd':\n        case 'gb':\n        case 'gb-hours':\n        case 'gb-mo':\n        case 'core-hours':\n        case 'hrs':\n        case 'tag-mo':\n        case 'vm-hours':\n            return lookup;\n        default:\n            return '';\n    }\n};\nexport const formatValue = (value, unit, options = {}) => {\n    const lookup = unitLookupKey(unit);\n    const fValue = value || 0;\n    switch (lookup) {\n        case 'usd':\n            return formatCurrency(fValue, lookup, options);\n        case 'gb':\n        case 'gb-hours':\n        case 'gb-mo':\n        case 'tag-mo':\n        case 'vm-hours':\n            return formatUsageGb(fValue, lookup, options);\n        case 'core-hours':\n        case 'hrs':\n            return formatUsageHrs(fValue, lookup, options);\n        default:\n            return unknownTypeFormatter(fValue, lookup, options);\n    }\n};\nconst unknownTypeFormatter = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatCurrency = (value, unit, { fractionDigits = 2 } = {}) => {\n    let fValue = value;\n    if (!value) {\n        fValue = 0;\n    }\n    return fValue.toLocaleString('en', {\n        style: 'currency',\n        currency: unit || 'USD',\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatUsageGb = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatUsageHrs = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\n","import { sort } from 'utils/sort';\nexport function getComputedForecastItems({ forecast, idKey, sortDirection = 0 /* asc */, sortKey = 'date', }) {\n    return sort(getUnsortedComputedForecastItems({\n        forecast,\n        idKey,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nexport function getUnsortedComputedForecastItems({ forecast, idKey, }) {\n    if (!forecast) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint && dataPoint.values) {\n            dataPoint.values.forEach((val) => {\n                const _val = val[idKey];\n                const date = val.date;\n                const confidence_max = _val.confidence_max ? _val.confidence_max.value : 0;\n                const confidence_min = _val.confidence_min ? _val.confidence_min.value : 0;\n                const rsquared = _val.rsquared ? Number(_val.rsquared.value) : undefined;\n                const pvalues = _val.pvalues ? Number(_val.pvalues.value) : undefined;\n                const total = _val.total ? _val.total.value : 0;\n                const units = _val.total ? _val.total.units : 'USD';\n                const item = itemMap.get(date);\n                if (item) {\n                    itemMap.set(date, Object.assign(Object.assign({}, item), { confidence_max: item.confidence_max + confidence_max, confidence_min: item.confidence_min + confidence_min, date,\n                        rsquared,\n                        pvalues, total: item.total + total, units }));\n                }\n                else {\n                    itemMap.set(date, {\n                        confidence_max,\n                        confidence_min,\n                        date,\n                        rsquared,\n                        pvalues,\n                        total,\n                        units,\n                    });\n                }\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (forecast && forecast.data) {\n        forecast.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\n","import endOfMonth from 'date-fns/end_of_month';\nimport format from 'date-fns/format';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getYear from 'date-fns/get_year';\nimport startOfMonth from 'date-fns/start_of_month';\nimport i18next from 'i18next';\nimport { getComputedForecastItems } from 'utils/computedForecast/getComputedForecastItems';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { unitLookupKey } from 'utils/formatValue';\nexport function transformForecast(forecast, type = 1 /* daily */, key = 'cost') {\n    if (!forecast) {\n        return [];\n    }\n    const items = {\n        idKey: key,\n        forecast,\n        sortKey: 'date',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedForecastItems(items);\n    let result;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        result = computedItems.map(i => createForecastDatum(i.total, i));\n    }\n    else {\n        result = computedItems.reduce((acc, d) => {\n            const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n            return [...acc, createForecastDatum(prevValue + d.total, d)];\n        }, []);\n    }\n    return result;\n}\nexport function transformForecastCone(forecast, type = 1 /* daily */, key = 'cost') {\n    if (!forecast) {\n        return [];\n    }\n    const items = {\n        idKey: key,\n        forecast,\n        sortKey: 'date',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedForecastItems(items);\n    let result;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        result = computedItems.map(i => createForecastConeDatum(i.confidence_max, i.confidence_min, i));\n    }\n    else {\n        result = computedItems.reduce((acc, d) => {\n            const prevMaxValue = acc.length ? acc[acc.length - 1].y : d.total;\n            const prevMinValue = acc.length ? acc[acc.length - 1].y0 : d.total;\n            return [...acc, createForecastConeDatum(prevMaxValue + d.confidence_max, prevMinValue + d.confidence_min, d)];\n        }, []);\n    }\n    return result;\n}\nexport function transformReport(report, type = 1 /* daily */, key = 'date', reportItem = 'cost', reportItemValue = 'total') {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        idKey: key,\n        report,\n        reportItemValue,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedReportItems(items);\n    let result;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        result = computedItems.map(i => createReportDatum(i[reportItem], i, key, reportItem));\n    }\n    else {\n        result = computedItems.reduce((acc, d) => {\n            const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n            return [...acc, createReportDatum(prevValue + d[reportItem], d, key, reportItem)];\n        }, []);\n    }\n    return key === 'date' ? padComputedReportItems(result) : result;\n}\nexport function createForecastDatum(value, computedItem) {\n    const xVal = getDate(computedItem.date);\n    const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n    return {\n        x: xVal,\n        y: value === null ? null : yVal,\n        key: computedItem.date,\n        units: computedItem.units,\n    };\n}\nexport function createForecastConeDatum(maxValue, minValue, computedItem) {\n    const xVal = getDate(computedItem.date);\n    const yVal = isFloat(maxValue) ? parseFloat(maxValue.toFixed(2)) : isInt(maxValue) ? maxValue : 0;\n    const y0Val = isFloat(minValue) ? parseFloat(minValue.toFixed(2)) : isInt(minValue) ? minValue : 0;\n    return {\n        x: xVal,\n        y: maxValue === null ? null : yVal,\n        y0: minValue === null ? null : y0Val,\n        key: computedItem.date,\n        units: computedItem.units,\n    };\n}\nexport function createReportDatum(value, computedItem, idKey = 'date', reportItem = 'cost') {\n    const xVal = idKey === 'date' ? getDate(computedItem.id) : computedItem.label;\n    const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n    return {\n        x: xVal,\n        y: value === null ? null : yVal,\n        key: computedItem.id,\n        units: computedItem.units ? computedItem.units[reportItem] : undefined,\n    };\n}\n// This pads computed report items with null datum objects, representing missing data at the begining and end of the\n// data series. The remaining data is left as is to allow for extrapolation. This allows us to display a \"no data\"\n// message in the tooltip, which helps distinguish between zero values and when there is no data available.\nexport function padComputedReportItems(datums) {\n    const result = [];\n    if (!datums || datums.length === 0) {\n        return result;\n    }\n    const firstDate = new Date(datums[0].key + 'T00:00:00');\n    const lastDate = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    // Pad start for missing data\n    let padDate = startOfMonth(firstDate);\n    for (let i = padDate.getDate(); i < firstDate.getDate(); i++) {\n        padDate.setDate(i);\n        const id = formatDate(padDate, 'YYYY-MM-DD');\n        result.push(createReportDatum(null, { id }, 'date', null));\n    }\n    // Fill middle with existing data\n    result.push(...datums);\n    // Pad end for missing data\n    padDate = new Date(lastDate);\n    for (let i = padDate.getDate() + 1; i <= endOfMonth(lastDate).getDate(); i++) {\n        padDate.setDate(i);\n        const id = formatDate(padDate, 'YYYY-MM-DD');\n        result.push(createReportDatum(null, { id }, 'date', null));\n    }\n    return result;\n}\nexport function getDatumDateRange(datums, offset = 0) {\n    if (!(datums && datums.length)) {\n        const today = new Date();\n        // If datums is empty, obtain the month based on offset (e.g., to show previous month in chart legends)\n        if (offset) {\n            today.setMonth(today.getMonth() - offset);\n        }\n        const firstOfMonth = startOfMonth(today);\n        return [firstOfMonth, today];\n    }\n    const start = new Date(datums[0].key + 'T00:00:00');\n    const end = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    return [start, end];\n}\nexport function getDateRange(datums, firstOfMonth = true, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDatumDateRange(datums, offset);\n    // Show the date range we are trying to cover (i.e., days 1-30/31)\n    if (firstOfMonth && start.setDate) {\n        start.setDate(1);\n    }\n    if (lastOfMonth && start.setDate) {\n        const lastDate = endOfMonth(start).getDate();\n        end.setDate(lastDate);\n    }\n    return [start, end];\n}\nexport function getDateRangeString(datums, firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(`chart.date_range`, {\n        count: getDate(end),\n        endDate: formatDate(end, 'DD'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'DD'),\n        year: getYear(end),\n    });\n}\nexport function getMonthRangeString(datums, key = 'chart.month_legend_label', offset = 0) {\n    const [start, end] = getDateRange(datums, true, false, offset);\n    return [\n        i18next.t(key, {\n            month: Number(formatDate(start, 'M')) - 1,\n        }),\n        i18next.t(key, {\n            month: Number(formatDate(end, 'M')) - 1,\n        }),\n    ];\n}\nexport function getMaxValue(datums) {\n    let max = 0;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            if (datum.y > max) {\n                max = datum.y;\n            }\n        });\n    }\n    return max;\n}\nexport function getTooltipContent(formatValue) {\n    return function labelFormatter(value, unit = null, options = {}) {\n        const lookup = unitLookupKey(unit);\n        switch (lookup) {\n            case 'core-hours':\n            case 'hrs':\n            case 'gb':\n            case 'gb-hours':\n            case 'gb-mo':\n            case 'vm-hours':\n                return i18next.t(`unit_tooltips.${lookup}`, {\n                    value: `${formatValue(value, unit, options)}`,\n                });\n            default:\n                return `${formatValue(value, unit, options)}`;\n        }\n    };\n}\nexport function getTooltipLabel(datum, formatValue, formatOptions, idKey = 'date', units) {\n    if (!datum.key) {\n        return '';\n    }\n    if (idKey === 'date') {\n        const date = format(datum.key, 'DD MMM YYYY');\n        return `${date} ${formatValue(datum.y, units ? units : datum.units, formatOptions)}`;\n    }\n    return datum.key.toString();\n}\nexport function getCostRangeString(datums, key = 'chart.cost_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(key, {\n        count: getDate(end),\n        endDate: formatDate(end, 'D'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'D'),\n        year: getYear(end),\n    });\n}\nexport function getUsageRangeString(datums, key = 'chart.usage_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    return getCostRangeString(datums, key, firstOfMonth, lastOfMonth, offset);\n}\nfunction isInt(n) {\n    return Number(n) === n && n % 1 === 0;\n}\nfunction isFloat(n) {\n    return Number(n) === n && n % 1 !== 0;\n}\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./charts-common.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./charts-common.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./charts-common.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Layout\nconst LAYOUT_PROPS = {\n    padding: 8,\n};\n// Victory theme properties only\nexport default {\n    area: Object.assign({}, LAYOUT_PROPS),\n    axis: Object.assign({}, LAYOUT_PROPS),\n    bar: Object.assign({}, LAYOUT_PROPS),\n    boxplot: Object.assign({}, LAYOUT_PROPS),\n    candlestick: Object.assign({}, LAYOUT_PROPS),\n    chart: Object.assign({}, LAYOUT_PROPS),\n    errorbar: Object.assign({}, LAYOUT_PROPS),\n    group: Object.assign({}, LAYOUT_PROPS),\n    legend: {},\n    line: Object.assign({}, LAYOUT_PROPS),\n    pie: Object.assign({}, LAYOUT_PROPS),\n    scatter: Object.assign({}, LAYOUT_PROPS),\n    stack: Object.assign({}, LAYOUT_PROPS),\n    tooltip: {},\n    voronoi: Object.assign({}, LAYOUT_PROPS),\n};\n","import getTheme from './theme-utils';\nconst ChartTheme = getTheme();\nexport default ChartTheme;\n","import { ChartThemeColor, ChartThemeVariant, getCustomTheme } from '@patternfly/react-charts';\nimport { default as ChartTheme } from './theme-koku';\n// Applies theme color and variant to base theme\nconst getTheme = () => getCustomTheme(ChartThemeColor.default, ChartThemeVariant.default, ChartTheme);\nexport default getTheme;\n","import { sort } from 'utils/sort';\nimport { getItemLabel } from './getItemLabel';\nexport function getComputedReportItems({ idKey, labelKey = idKey, report, reportItemValue = 'total', sortDirection = 0 /* asc */, sortKey = 'cost', }) {\n    return sort(getUnsortedComputedReportItems({\n        idKey,\n        labelKey,\n        report,\n        reportItemValue,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nexport function getUnsortedComputedReportItems({ report, idKey, labelKey = idKey, reportItemValue = 'total', }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint && dataPoint.values) {\n            const type = dataPoint.type;\n            dataPoint.values.forEach((val) => {\n                // Ensure unique map IDs -- https://github.com/project-koku/koku-ui/issues/706\n                const idSuffix = idKey !== 'date' && idKey !== 'cluster' && val.cluster ? `-${val.cluster}` : '';\n                // org_unit_id workaround for storage and instance-type APIs\n                let id = idKey === 'org_entities' ? val.org_unit_id : val[idKey];\n                if (id === undefined) {\n                    id = val.id;\n                }\n                const mapId = `${id}${idSuffix}`;\n                // clusters will either contain the cluster alias or default to cluster ID\n                const cluster_alias = val.clusters && val.clusters.length > 0 ? val.clusters[0] : undefined;\n                const cluster = cluster_alias || val.cluster;\n                const clusters = val.clusters ? val.clusters : [];\n                const capacity = val.capacity ? val.capacity.value : 0;\n                const cost = val.cost && val.cost.total ? val.cost.total.value : 0;\n                const deltaPercent = val.delta_percent ? val.delta_percent : 0;\n                const deltaValue = val.delta_value ? val.delta_value : 0;\n                const source_uuid = val.source_uuid ? val.source_uuid : [];\n                const supplementary = val.supplementary && val.supplementary.total ? val.supplementary.total.value : 0;\n                const infrastructure = val.infrastructure && val.infrastructure[reportItemValue] ? val.infrastructure[reportItemValue].value : 0;\n                let label;\n                const itemLabelKey = getItemLabel({ report, labelKey, value: val });\n                if (itemLabelKey === 'org_entities' && val.alias) {\n                    label = val.alias;\n                }\n                else if (itemLabelKey === 'account' && val.account_alias) {\n                    label = val.account_alias;\n                }\n                else if (itemLabelKey === 'cluster' && cluster_alias) {\n                    label = cluster_alias;\n                }\n                else if (val[itemLabelKey] instanceof Object) {\n                    label = val[itemLabelKey].value;\n                }\n                else {\n                    label = val[itemLabelKey];\n                }\n                if (label === undefined) {\n                    label = val.alias ? val.alias : val.id;\n                }\n                const limit = val.limit ? val.limit.value : 0;\n                const request = val.request ? val.request.value : 0;\n                const usage = val.usage ? val.usage.value : 0;\n                const units = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, (val.capacity && { capacity: val.capacity.units })), { cost: val.cost && val.cost.total ? val.cost.total.units : 'USD' }), (val.limit && { limit: val.limit.units })), (val.infrastructure &&\n                    val.infrastructure.total && {\n                    infrastructure: val.infrastructure.total.units,\n                })), (val.request && { request: val.request.units })), (val.supplementary &&\n                    val.supplementary.total && {\n                    supplementary: val.supplementary.total.units,\n                })), (val.usage && { usage: val.usage.units }));\n                const item = itemMap.get(mapId);\n                if (item) {\n                    itemMap.set(mapId, Object.assign(Object.assign({}, item), { capacity: item.capacity + capacity, cost: item.cost + cost, supplementary: item.supplementary + supplementary, infrastructure: item.infrastructure + infrastructure, limit: item.limit + limit, request: item.request + request, usage: item.usage + usage }));\n                }\n                else {\n                    itemMap.set(mapId, {\n                        capacity,\n                        cluster,\n                        clusters,\n                        cost,\n                        deltaPercent,\n                        deltaValue,\n                        source_uuid,\n                        supplementary,\n                        id,\n                        infrastructure,\n                        label,\n                        limit,\n                        request,\n                        type,\n                        units,\n                        usage,\n                    });\n                }\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\n","import { tagPrefix } from 'api/queries/query';\nexport function getItemLabel({ report, labelKey, value }) {\n    let itemLabelKey = String(labelKey);\n    if (report.meta && report.meta.group_by) {\n        const group_by = report.meta.group_by;\n        for (const key of Object.keys(group_by)) {\n            if (key.indexOf(tagPrefix)) {\n                const tagPrefixKey = tagPrefix + labelKey;\n                if (value.hasOwnProperty(tagPrefixKey)) {\n                    itemLabelKey = tagPrefixKey;\n                }\n            }\n        }\n    }\n    return itemLabelKey;\n}\n","import { EmptyState, EmptyStateBody, EmptyStateVariant, Spinner, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst LoadingStateBase = ({ t }) => {\n    const title = t('loading_state.sources_title');\n    const subTitle = t('loading_state.sources_desc');\n    return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n        React.createElement(Spinner, { size: \"lg\" }),\n        React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, title),\n        React.createElement(EmptyStateBody, null, subTitle)));\n};\nconst LoadingState = withTranslation()(LoadingStateBase);\nexport { LoadingState };\n","import { parse, stringify } from 'qs';\nexport function getProvidersQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseProvidersQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","function getValueForItem(item, options) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    const sortKey = options.key;\n    return item[sortKey];\n}\nexport function sort(array, options) {\n    const { direction = 0 /* asc */ } = options || {};\n    return [...array].sort((a, b) => {\n        const aVal = direction === 0 /* asc */ ? getValueForItem(a, options) : getValueForItem(b, options);\n        const bVal = direction === 0 /* asc */ ? getValueForItem(b, options) : getValueForItem(a, options);\n        if (aVal > bVal) {\n            return -1;\n        }\n        if (aVal < bVal) {\n            return 1;\n        }\n        return 0;\n    });\n}\n","import './emptyValueState.scss';\nimport { MinusIcon } from '@patternfly/react-icons/dist/js/icons/minus-icon';\nimport React from 'react';\nexport const EmptyValueState = () => {\n    return (React.createElement(\"span\", { className: \"emptyValueContainer\" },\n        React.createElement(MinusIcon, null)));\n};\n","import './reportSummary.scss';\nimport { Card, CardBody, CardFooter, CardTitle, Title } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst ReportSummaryBase = ({ children, detailsLink, title, subTitle, status }) => (React.createElement(Card, { className: \"reportSummary\" },\n    React.createElement(CardTitle, null,\n        React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: \"subtitle\" }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { size: \"xs\" }),\n        React.createElement(Skeleton, { className: \"chartSkeleton\", size: \"md\" }),\n        React.createElement(Skeleton, { size: \"sm\" }),\n        React.createElement(Skeleton, { className: \"legendSkeleton\", size: \"xs\" }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst ReportSummary = withTranslation()(ReportSummaryBase);\nexport { ReportSummary };\n","import './reportSummaryAlt.scss';\nimport { Card, CardBody, CardFooter, CardTitle, Grid, GridItem, Title } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst OcpCloudReportSummaryAltBase = ({ children, detailsLink, status, subTitle, tabs, title, }) => (React.createElement(Card, { className: \"reportSummary\" },\n    React.createElement(Grid, { hasGutter: true },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { className: \"cost\" },\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, title),\n                    Boolean(subTitle) && React.createElement(\"p\", { className: \"subtitle\" }, subTitle)),\n                React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { size: \"xs\" }),\n                    React.createElement(Skeleton, { className: \"chartSkeleton\", size: \"md\" }),\n                    React.createElement(Skeleton, { size: \"sm\" }),\n                    React.createElement(Skeleton, { className: \"legendSkeleton\", size: \"xs\" }))) : (children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { className: \"container\" },\n                React.createElement(\"div\", { className: \"tops\" }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst ReportSummaryAlt = withTranslation()(OcpCloudReportSummaryAltBase);\nexport { ReportSummaryAlt };\n","import './reportSummaryDetails.scss';\nimport { Tooltip } from '@patternfly/react-core';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nconst ReportSummaryDetailsBase = ({ chartType, computedReportItem = 'cost', computedReportItemValue = 'total', costLabel, formatValue, formatOptions, report, requestFormatOptions, requestLabel, showTooltip = false, showUnits = false, showUsageFirst = false, t, units, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let supplementaryCost = React.createElement(EmptyValueState, null);\n    let infrastructureCost = React.createElement(EmptyValueState, null);\n    let request = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    const hasTotal = report && report.meta && report.meta.total;\n    const hasCost = hasTotal && report.meta.total.cost && report.meta.total.cost.total;\n    const hasCount = hasTotal && report.meta.total.count;\n    const hasSupplementaryCost = hasTotal &&\n        report.meta.total.supplementary &&\n        report.meta.total.supplementary.total &&\n        report.meta.total.supplementary.total.value;\n    const hasInfrastructureCost = hasTotal &&\n        report.meta.total.infrastructure &&\n        report.meta.total.infrastructure[computedReportItemValue] &&\n        report.meta.total.infrastructure[computedReportItemValue].value;\n    const hasRequest = hasTotal && report.meta.total.request;\n    const hasUsage = hasTotal && report.meta.total.usage;\n    if (hasTotal) {\n        cost = formatValue(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD', formatOptions);\n        supplementaryCost = formatValue(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost ? report.meta.total.supplementary.total.units : 'USD', formatOptions);\n        infrastructureCost = formatValue(hasInfrastructureCost ? report.meta.total.infrastructure[computedReportItemValue].value : 0, hasInfrastructureCost ? report.meta.total.infrastructure[computedReportItemValue].units : 'USD', formatOptions);\n        request = formatValue(hasRequest ? report.meta.total.request.value : 0, hasRequest ? report.meta.total.request.units : '', requestFormatOptions ? usageFormatOptions : formatOptions);\n        if (hasUsage && report.meta.total.usage.value >= 0) {\n            usage = formatValue(hasUsage ? report.meta.total.usage.value : 0, hasUsage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n        else {\n            // Workaround for https://github.com/project-koku/koku-ui/issues/1058\n            usage = formatValue(hasUsage ? report.meta.total.usage : 0, hasCount ? report.meta.total.count.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n    }\n    const getCostLayout = (showAltHeroFont = false) => {\n        let value = cost;\n        if (computedReportItem === \"infrastructure\" /* infrastructure */) {\n            value = infrastructureCost;\n        }\n        else if (computedReportItem === \"supplementary\" /* supplementary */) {\n            value = supplementaryCost;\n        }\n        const altHeroFont = showAltHeroFont ? 'Alt' : '';\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            showTooltip ? (React.createElement(Tooltip, { content: t('dashboard.total_cost_tooltip', {\n                    infrastructureCost,\n                    supplementaryCost,\n                }), enableFlip: true },\n                React.createElement(\"div\", { className: `value${altHeroFont}` }, value))) : (React.createElement(\"div\", { className: `value${altHeroFont}` }, value)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, costLabel))));\n    };\n    const getRequestLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasRequest ? report.meta.total.request.units : '';\n        const _units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            React.createElement(\"span\", { className: \"value\" }, request),\n            Boolean(showUnits && (units || (hasRequest && report.meta.total.request.value >= 0))) && (React.createElement(\"span\", { className: \"units\" }, unitsLabel)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, requestLabel))));\n    };\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasUsage ? report.meta.total.usage.units : '';\n        // added as a work-around for azure #1079\n        const _units = unitLookupKey(units ? units : usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            React.createElement(\"span\", { className: \"value\" }, usage),\n            Boolean(showUnits && (units || (hasUsage && report.meta.total.usage.value >= 0))) && (React.createElement(\"span\", { className: \"units\" }, unitsLabel)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (chartType === \"cost\" /* cost */ || chartType === \"supplementary\" /* supplementary */) {\n        return React.createElement(React.Fragment, null, getCostLayout(true));\n    }\n    else if (chartType === \"trend\" /* trend */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getCostLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getCostLayout(),\n            getUsageLayout()));\n    }\n    else if (chartType === \"usage\" /* usage */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getRequestLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getRequestLayout(),\n            getUsageLayout()));\n    }\n    else {\n        return null;\n    }\n};\nconst ReportSummaryDetails = withTranslation()(ReportSummaryDetailsBase);\nexport { ReportSummaryDetails };\n","import './reportSummaryItem.scss';\nimport { Progress, ProgressSize } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nconst ReportSummaryItemBase = ({ label, formatOptions, formatValue, t, totalValue, units, value, }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: \"reportSummaryItem\" },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst ReportSummaryItem = withTranslation()(ReportSummaryItemBase);\nexport { ReportSummaryItem };\n","import './reportSummaryItems.scss';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { getComputedReportItems, } from 'utils/computedReport/getComputedReportItems';\nclass ReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { computedReportItemValue = 'total', idKey, labelKey, report } = this.props;\n        const computedItems = getComputedReportItems({\n            report,\n            idKey,\n            labelKey,\n            reportItemValue: computedReportItemValue,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [...computedItems.slice(0, otherIndex), ...computedItems.slice(otherIndex + 1), computedItems[otherIndex]];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: \"md\" }),\n                React.createElement(Skeleton, { size: \"md\", className: \"skeleton\" }),\n                React.createElement(Skeleton, { size: \"md\", className: \"skeleton\" }),\n                React.createElement(Skeleton, { size: \"md\", className: \"skeleton\" })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst ReportSummaryItems = withTranslation()(ReportSummaryItemsBase);\nexport { ReportSummaryItems };\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentCostData: {\n        fill: 'none',\n    },\n    currentInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    forecastCostData: {\n        fill: 'orange',\n    },\n    itemsPerRow: 2,\n    previousCostData: {\n        fill: 'none',\n    },\n    previousInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange, getMaxValue, getTooltipContent } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './costChart.styles';\nclass CostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentInfrastructureCostData, currentCostData, forecastCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            const costInfrastructureTooltipKey = 'chart.cost_infrastructure_legend_tooltip';\n            const costTooltipKey = 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousCostData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentCostData, costTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentCostData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'previousInfrastructureCost',\n                    data: previousInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(previousInfrastructureCostData, costInfrastructureTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousInfrastructureCostData), { stroke: chartStyles.previousColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'currentInfrastructureCost',\n                    data: currentInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(currentInfrastructureCostData, costInfrastructureTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentInfrastructureCostData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n            ];\n            if (forecastCostData) {\n                series.push({\n                    childName: 'forecastCost',\n                    data: forecastCostData,\n                    isForecast: true,\n                    legendItem: {\n                        name: getCostRangeString(forecastCostData, costKey, true, false),\n                        symbol: {\n                            fill: chartStyles.forecastCostData[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastCostData, costTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastCostData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                });\n            }\n            this.setState({ series });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            // Todo: Return forecast and cone of confidence\n            if (series.isForecast) {\n                return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n            }\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getContainer = () => {\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.isDataAvailable() ? this.getTooltipLabel : undefined, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData(true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 400 ? chartStyles.itemsPerRow : 1;\n            return React.createElement(ChartLegend, { height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\", responsive: false });\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            return datum.y !== null ? formatter(datum.y, datum.units, formatDatumOptions) : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map(serie => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = (tooltip = false) => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    const data = Object.assign(Object.assign(Object.assign({ childName: s.childName }, s.legendItem), (tooltip && { name: s.legendItem.tooltip })), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                    return data;\n                });\n                return result;\n            }\n            return undefined;\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentInfrastructureCostData !== this.props.currentInfrastructureCostData ||\n            prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.forecastCostData !== this.props.forecastCostData ||\n            prevProps.previousInfrastructureCostData !== this.props.previousInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { currentInfrastructureCostData, currentCostData, forecastCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentInfrastructure = currentInfrastructureCostData ? getMaxValue(currentInfrastructureCostData) : 0;\n        const maxCurrentCost = currentCostData ? getMaxValue(currentCostData) : 0;\n        const maxForecastCost = forecastCostData ? getMaxValue(forecastCostData) : 0;\n        const maxPreviousInfrastructure = previousInfrastructureCostData ? getMaxValue(previousInfrastructureCostData) : 0;\n        const maxPreviousUsage = previousCostData ? getMaxValue(previousCostData) : 0;\n        const maxValue = Math.max(maxCurrentInfrastructure, maxCurrentCost, maxForecastCost, maxPreviousInfrastructure, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, currentCostData, forecastCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const currentInfrastructureDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const currentCostDate = currentCostData ? getDate(getDateRange(currentCostData, true, true)[1]) : 0;\n        const forecastCostDate = forecastCostData ? getDate(getDateRange(forecastCostData, true, true)[1]) : 0;\n        const previousInfrastructureDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousCostData ? getDate(getDateRange(previousCostData, true, true)[1]) : 0;\n        return currentInfrastructureDate > 0 ||\n            currentCostDate > 0 ||\n            previousInfrastructureDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentInfrastructureDate, currentCostDate, forecastCostDate, previousInfrastructureDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 75,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 400\n                ? containerHeight\n                : containerHeight + 75\n            : containerHeight;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: adjustedContainerHeight } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: this.getContainer(), domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { CostChart };\n","import './reportSummaryCost.scss';\nimport { CostChart } from 'components/charts/costChart';\nimport React from 'react';\nconst ReportSummaryCost = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(CostChart, Object.assign({}, props))));\nexport { ReportSummaryCost };\n","import chart_color_black_200 from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport chart_color_green_100 from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport chart_color_green_200 from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport chart_color_green_300 from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_green_500 from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentMonthData: {\n        fill: 'none',\n    },\n    forecastColorScale: [chart_color_green_200.value],\n    forecastConeColorScale: [chart_color_green_100.value],\n    forecastData: {\n        fill: 'none',\n    },\n    forecastConeData: {\n        fill: chart_color_green_100.value,\n        strokeWidth: 0,\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    previousMonthData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange, getMaxValue, getTooltipContent } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './trendChart.styles';\nclass TrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, forecastData, forecastConeData, previousData, showSupplementaryLabel = false, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? 'chart.usage_legend_label'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_label'\n                    : 'chart.cost_legend_label';\n            const tooltipKey = showUsageLegendLabel\n                ? 'chart.usage_legend_tooltip'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_tooltip'\n                    : 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousData,\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousData, tooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousMonthData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentData,\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentData, tooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentMonthData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n            ];\n            if (forecastData) {\n                series.push({\n                    childName: 'forecast',\n                    data: forecastData,\n                    isForecast: true,\n                    legendItem: {\n                        name: getCostRangeString(forecastData, 'chart.cost_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, 'chart.cost_forecast_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastData), { stroke: chartStyles.forecastColorScale[0] }),\n                    },\n                });\n            }\n            if (forecastConeData) {\n                series.push({\n                    childName: 'forecastCone',\n                    data: forecastConeData,\n                    isForecast: true,\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastConeColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastConeData), { stroke: chartStyles.forecastConeColorScale[0] }),\n                    },\n                });\n            }\n            this.setState({ series });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (series.isForecast) {\n                return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n            }\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getContainer = () => {\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.isDataAvailable() ? this.getTooltipLabel : undefined, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData(true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 50,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            return (React.createElement(ChartLegend, { data: this.getLegendData(), gutter: 20, height: 25, name: \"legend\", orientation: width > 150 ? 'horizontal' : 'vertical' }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions, units } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            const dy = datum.y !== null ? formatter(datum.y, units || datum.units, formatDatumOptions) : undefined;\n            const dy0 = datum.y0 && datum.y0 !== null ? formatter(datum.y0, units || datum.units, formatDatumOptions) : undefined;\n            if (dy && dy0) {\n                return i18next.t('chart.cost_forecast_cone_tooltip', { value0: dy0, value1: dy });\n            }\n            return dy ? dy : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            // Todo: Leave one legend item visible at all times?\n            // const { hiddenSeries, series } = this.state;\n            // const leaveVisible = hiddenSeries.size === series.length - 1;\n            // if (leaveVisible && !this.isSeriesHidden(props.index)) {\n            //   return;\n            // }\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map(serie => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = (tooltip = false) => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign(Object.assign({ childName: s.childName }, s.legendItem), (tooltip && { name: s.legendItem.tooltip })), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { currentData, forecastData, previousData } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrent = currentData ? getMaxValue(currentData) : 0;\n        const maxForecastCost = forecastData ? getMaxValue(forecastData) : 0;\n        const maxPrevious = previousData ? getMaxValue(previousData) : 0;\n        const maxValue = Math.max(maxCurrent, maxForecastCost, maxPrevious);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentData, forecastData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        const forecastDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0 ? Math.max(currentDate, forecastDate, previousDate) : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 400\n                ? containerHeight\n                : containerHeight + 20\n            : containerHeight;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: adjustedContainerHeight } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: this.getContainer(), domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { TrendChart };\n","import './reportSummaryTrend.scss';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nconst ReportSummaryTrend = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { ReportSummaryTrend };\n","import chart_color_black_200 from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport chart_color_green_100 from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport chart_color_green_200 from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport chart_color_green_300 from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_green_500 from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const chartStyles = {\n    chartContainer: {\n        marginTop: global_spacer_lg.value,\n    },\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_green_300.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_green_400.value,\n        },\n    },\n    itemsPerRow: 2,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        chart_color_black_200.value,\n        chart_color_green_400.value,\n        chart_color_black_200.value,\n        chart_color_green_300.value,\n    ],\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_black_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_black_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    // TBD: No grey scale, yet\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getDateRange, getMaxValue, getTooltipContent, getUsageRangeString } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './usageChart.styles';\nclass UsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n            const usageKey = 'chart.usage_legend_label';\n            const usageTooltipKey = 'chart.usage_legend_tooltip';\n            const requestKey = 'chart.requests_legend_label';\n            const requestTooltipKey = 'chart.requests_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                series: [\n                    {\n                        childName: 'previousUsage',\n                        data: previousUsageData,\n                        legendItem: {\n                            name: getUsageRangeString(previousUsageData, usageKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.legendColorScale[0],\n                                type: 'minus',\n                            },\n                            tooltip: getUsageRangeString(previousUsageData, usageTooltipKey, false, false, 1),\n                        },\n                        style: chartStyles.previousUsageData,\n                    },\n                    {\n                        childName: 'currentUsage',\n                        data: currentUsageData,\n                        legendItem: {\n                            name: getUsageRangeString(currentUsageData, usageKey, true, false),\n                            symbol: {\n                                fill: chartStyles.legendColorScale[1],\n                                type: 'minus',\n                            },\n                            tooltip: getUsageRangeString(currentUsageData, usageTooltipKey, false, false),\n                        },\n                        style: chartStyles.currentUsageData,\n                    },\n                    {\n                        childName: 'previousRequest',\n                        data: previousRequestData,\n                        legendItem: {\n                            name: getUsageRangeString(previousRequestData, requestKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.legendColorScale[2],\n                                type: 'dash',\n                            },\n                            tooltip: getUsageRangeString(previousRequestData, requestTooltipKey, false, false, 1),\n                        },\n                        style: chartStyles.previousRequestData,\n                    },\n                    {\n                        childName: 'currentRequest',\n                        data: currentRequestData,\n                        legendItem: {\n                            name: getUsageRangeString(currentRequestData, requestKey, true, false),\n                            symbol: {\n                                fill: chartStyles.legendColorScale[3],\n                                type: 'dash',\n                            },\n                            tooltip: getUsageRangeString(currentRequestData, requestTooltipKey, false, false),\n                        },\n                        style: chartStyles.currentRequestData,\n                    },\n                ],\n            });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getContainer = () => {\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.isDataAvailable() ? this.getTooltipLabel : undefined, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData(true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 300 ? chartStyles.itemsPerRow : 1;\n            return React.createElement(ChartLegend, { data: this.getLegendData(), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\" });\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            return datum.y !== null ? formatter(datum.y, datum.units, formatDatumOptions) : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map(serie => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = (tooltip = false) => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign(Object.assign({ childName: s.childName }, s.legendItem), (tooltip && { name: s.legendItem.tooltip })), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentRequest = currentRequestData ? getMaxValue(currentRequestData) : 0;\n        const maxCurrentUsage = currentUsageData ? getMaxValue(currentUsageData) : 0;\n        const maxPreviousRequest = previousRequestData ? getMaxValue(previousRequestData) : 0;\n        const maxPreviousUsage = previousUsageData ? getMaxValue(previousUsageData) : 0;\n        const maxValue = Math.max(maxCurrentRequest, maxCurrentUsage, maxPreviousRequest, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n        const currentRequestDate = currentRequestData ? getDate(getDateRange(currentRequestData, true, true)[1]) : 0;\n        const currentUsageDate = currentUsageData ? getDate(getDateRange(currentUsageData, true, true)[1]) : 0;\n        const previousRequestDate = previousRequestData ? getDate(getDateRange(previousRequestData, true, true)[1]) : 0;\n        const previousUsageDate = previousUsageData ? getDate(getDateRange(previousUsageData, true, true)[1]) : 0;\n        return currentRequestDate > 0 || currentUsageDate > 0 || previousRequestDate > 0 || previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 75,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 480\n                ? containerHeight\n                : containerHeight + 20\n            : containerHeight;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: adjustedContainerHeight } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: this.getContainer(), domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { UsageChart };\n","import './reportSummaryUsage.scss';\nimport { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nconst ReportSummaryUsage = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { ReportSummaryUsage };\n","export const getReleasePath = () => {\n    const pathName = window.location.pathname.split('/');\n    pathName.shift();\n    let release = '';\n    if (pathName[0] === 'beta') {\n        release = `/beta`;\n    }\n    return release;\n};\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nconst Loading = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(LoadingState, null))));\n};\nexport default withRouter(Loading);\n","import Loading from './loading';\nexport default Loading;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummary.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummary.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummary.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".chartSkeleton{height:125px;margin-bottom:var(--pf-global--spacer--md);margin-top:var(--pf-global--spacer--md)}.legendSkeleton{margin-top:var(--pf-global--spacer--md)}.reportSummary{height:100%}.subtitle{display:inline-block;font-size:var(--pf-global--FontSize--xs);color:var(--pf-global--Color--200);margin-bottom:0}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryAlt.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryAlt.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryAlt.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".chartSkeleton{height:175px;margin-bottom:var(--pf-global--spacer--md);margin-top:var(--pf-global--spacer--md)}.container{display:flex}.cost{flex-grow:1;min-height:470px;margin-tight:var(--pf-global--spacer--md)}.legendSkeleton{margin-top:var(--pf-global--spacer--md)}.reportSummary{height:100%}.subtitle{display:inline-block;font-size:var(--pf-global--FontSize--xs);color:var(--pf-global--Color--200);margin-bottom:0}.tops{flex-grow:1;margin-top:var(--pf-global--spacer--lg)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryDetails.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryDetails.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryDetails.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".reportSummaryDetails{margin-bottom:var(--pf-global--spacer--md);display:flex;align-Items:flex-end}.text{padding-bottom:var(--pf-global--spacer--sm);line-height:var(--pf-global--LineHeight--sm);font-size:var(--pf-global--FontSize--xs)}.units{padding-left:var(--pf-global--spacer--xs);padding-bottom:var(--pf-global--spacer--sm);line-height:var(--pf-global--LineHeight--sm);font-size:var(--pf-global--FontSize--xs);white-space:nowrap}.value{color:var(--pf-global--Color--100);margin-right:var(--pf-global--spacer--sm);font-size:var(--pf-global--FontSize--2xl)}.valueAlt{color:var(--pf-global--Color--100);margin-right:var(--pf-global--spacer--sm);font-size:var(--pf-global--FontSize--4xl)}.valueContainer{display:inline-block;margin-bottom:var(--pf-global--spacer--md);width:50%;word-Wrap:break-word}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./emptyValueState.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./emptyValueState.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./emptyValueState.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".emptyValueContainer{font-size:var(--pf-global--FontSize--sm)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryItem.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryItem.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryItem.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".reportSummaryItem:not(:last-child){margin-bottom:var(--pf-global--spacer--md)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryItems.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryItems.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryItems.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".skeleton{margin-top:var(--pf-global--spacer--md)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryCost.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryCost.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryCost.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".chart{margin-bottom:var(--pf-global--spacer--sm)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".chartOverride :not(foo) svg{overflow:visible}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryTrend.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryTrend.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryTrend.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".chart{margin-nottom:var(--pf-global--spacer--sm)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryUsage.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryUsage.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryUsage.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".chart{margin-bottom:var(--pf-global--spacer--sm)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./costIcon.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./costIcon.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./costIcon.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".cost-icon{height:120px}.cost-icon.st0{fill:blue !important}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","module.exports = __webpack_public_path__ + \"8a2acb5e9233030023f599e0f04ebd7f.svg\";","import './costIcon.scss';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst icon = require('./Cost-icon.svg');\nconst CostIcon = ({ className, t }) => {\n    return React.createElement(\"img\", { className: `cost-icon ${className}`, src: icon, alt: t('cost_management'), \"aria-hidden\": \"true\" });\n};\nexport default withTranslation()(CostIcon);\n","import CostIcon from './costIcon';\nexport default CostIcon;\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    iconSpacer: {\n        marginLeft: global_spacer_xs.value,\n    },\n    viewSources: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/js/icons/plus-circle-icon';\nimport CostIcon from 'components/icons/costIcon';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { withRouter } from 'react-router';\nimport { getReleasePath } from 'utils/pathname';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDocLink = (textKey, urlKey) => {\n            const { t } = this.props;\n            return (React.createElement(\"a\", { href: t(urlKey), rel: \"noreferrer\", target: \"_blank\" },\n                t(textKey),\n                React.createElement(\"span\", { style: styles.iconSpacer },\n                    React.createElement(ExternalLinkAltIcon, null))));\n        };\n        this.getRouteToSources = () => {\n            const release = getReleasePath();\n            return `${release}/settings/sources`;\n        };\n    }\n    render() {\n        const { providerType, t } = this.props;\n        let descKey = 'no_providers_state.overview_desc';\n        let titleKey = 'no_providers_state.overview_title';\n        let docUrlKey;\n        let icon;\n        let textKey;\n        switch (providerType) {\n            case \"aws\" /* aws */:\n                descKey = 'no_providers_state.aws_desc';\n                titleKey = 'no_providers_state.aws_title';\n                break;\n            case \"azure\" /* azure */:\n                descKey = 'no_providers_state.azure_desc';\n                titleKey = 'no_providers_state.azure_title';\n                break;\n            case \"gcp\" /* gcp */:\n                descKey = 'no_providers_state.gcp_desc';\n                titleKey = 'no_providers_state.gcp_title';\n                break;\n            case \"ocp\" /* ocp */:\n                descKey = 'no_providers_state.ocp_desc';\n                docUrlKey = 'docs.add_ocp_sources';\n                textKey = 'no_providers_state.ocp_add_sources';\n                titleKey = 'no_providers_state.ocp_title';\n                break;\n            default:\n                icon = CostIcon;\n        }\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: icon ? icon : PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, t(titleKey)),\n            React.createElement(EmptyStateBody, null, t(descKey)),\n            docUrlKey && textKey ? (React.createElement(\"div\", { style: styles.viewSources }, this.getDocLink(textKey, docUrlKey))) : (React.createElement(Button, { variant: \"primary\", component: \"a\", href: this.getRouteToSources() }, t('no_providers_state.get_started')))));\n    }\n}\nconst NoProvidersState = withRouter(withTranslation()(NoProvidersStateBase));\nexport { NoProvidersState };\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { NoProvidersState } from './noProvidersState';\nconst NoProviders = ({ providerType, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(NoProvidersState, { providerType: providerType }))));\n};\nexport default withRouter(NoProviders);\n","import NoProviders from './noProviders';\nexport default NoProviders;\n"],"sourceRoot":""}