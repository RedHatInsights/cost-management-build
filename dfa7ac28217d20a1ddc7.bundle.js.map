{"version":3,"sources":["webpack:///./src/pages/overview/overview.scss?a989","webpack:///./src/pages/overview/overview.scss","webpack:///./src/pages/dashboard/components/dashboardBase.tsx","webpack:///./src/pages/dashboard/components/dashboardWidget.styles.ts","webpack:///./src/pages/dashboard/components/dashboardWidgetBase.tsx","webpack:///./src/pages/dashboard/awsCloudDashboard/awsCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/awsCloudDashboard/awsCloudDashboard.tsx","webpack:///./src/pages/dashboard/awsDashboard/awsDashboardWidget.tsx","webpack:///./src/pages/dashboard/awsDashboard/awsDashboard.tsx","webpack:///./src/pages/dashboard/azureCloudDashboard/azureCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/azureCloudDashboard/azureCloudDashboard.tsx","webpack:///./src/pages/dashboard/azureDashboard/azureDashboardWidget.tsx","webpack:///./src/pages/dashboard/azureDashboard/azureDashboard.tsx","webpack:///./src/pages/dashboard/gcpDashboard/gcpDashboardWidget.tsx","webpack:///./src/pages/dashboard/gcpDashboard/gcpDashboard.tsx","webpack:///./src/pages/dashboard/ocpCloudDashboard/ocpCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpCloudDashboard/ocpCloudDashboard.tsx","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboardWidget.styles.ts","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboard.tsx","webpack:///./src/pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboard.tsx","webpack:///./src/pages/dashboard/ocpUsageDashboard/ocpUsageDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpUsageDashboard/ocpUsageDashboard.tsx","webpack:///./src/pages/overview/overview.styles.ts","webpack:///./src/pages/overview/perspective.styles.ts","webpack:///./src/pages/overview/perspective.tsx","webpack:///./src/pages/overview/overview.tsx","webpack:///./src/pages/overview/index.ts","webpack:///./src/utils/formatValue.ts","webpack:///./src/utils/computedForecast/getComputedForecastItems.ts","webpack:///./src/components/charts/common/chartUtils.ts","webpack:///./src/components/charts/common/charts-common.scss?2cec","webpack:///./src/components/charts/chartTheme/theme-koku.ts","webpack:///./src/components/charts/chartTheme/index.ts","webpack:///./src/components/charts/chartTheme/theme-utils.ts","webpack:///./src/utils/computedReport/getComputedReportItems.ts","webpack:///./src/utils/computedReport/getItemLabel.ts","webpack:///./src/components/state/loadingState/loadingState.tsx","webpack:///./src/api/queries/providersQuery.ts","webpack:///./src/utils/sort.ts","webpack:///./src/components/state/emptyValueState/emptyValueState.tsx","webpack:///./src/components/reports/reportSummary/reportSummary.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryAlt.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryDetails.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryItem.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryItems.tsx","webpack:///./src/components/charts/costChart/costChart.styles.ts","webpack:///./src/components/charts/costChart/costChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryCost.tsx","webpack:///./src/components/charts/trendChart/trendChart.styles.ts","webpack:///./src/components/charts/trendChart/trendChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryTrend.tsx","webpack:///./src/components/charts/usageChart/usageChart.styles.ts","webpack:///./src/components/charts/usageChart/usageChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryUsage.tsx","webpack:///./src/utils/pathname.ts","webpack:///./src/pages/state/loading/loading.tsx","webpack:///./src/pages/state/loading/index.ts","webpack:///./src/components/reports/reportSummary/reportSummary.scss?97f8","webpack:///./src/components/reports/reportSummary/reportSummary.scss","webpack:///./src/components/reports/reportSummary/reportSummaryAlt.scss?964b","webpack:///./src/components/reports/reportSummary/reportSummaryAlt.scss","webpack:///./src/components/reports/reportSummary/reportSummaryDetails.scss?0d10","webpack:///./src/components/reports/reportSummary/reportSummaryDetails.scss","webpack:///./src/components/state/emptyValueState/emptyValueState.scss?e614","webpack:///./src/components/state/emptyValueState/emptyValueState.scss","webpack:///./src/components/reports/reportSummary/reportSummaryItem.scss?0e2c","webpack:///./src/components/reports/reportSummary/reportSummaryItem.scss","webpack:///./src/components/reports/reportSummary/reportSummaryItems.scss?00c0","webpack:///./src/components/reports/reportSummary/reportSummaryItems.scss","webpack:///./src/components/reports/reportSummary/reportSummaryCost.scss?4e01","webpack:///./src/components/reports/reportSummary/reportSummaryCost.scss","webpack:///./src/components/charts/common/charts-common.scss","webpack:///./src/components/reports/reportSummary/reportSummaryTrend.scss?6066","webpack:///./src/components/reports/reportSummary/reportSummaryTrend.scss","webpack:///./src/components/reports/reportSummary/reportSummaryUsage.scss?37e6","webpack:///./src/components/reports/reportSummary/reportSummaryUsage.scss","webpack:///./src/components/icons/costIcon/costIcon.scss?e2d0","webpack:///./src/components/icons/costIcon/costIcon.scss","webpack:///./src/components/icons/costIcon/Cost-icon.svg","webpack:///./src/components/icons/costIcon/costIcon.tsx","webpack:///./src/components/icons/costIcon/index.ts","webpack:///./src/pages/state/noProviders/noProvidersState.styles.ts","webpack:///./src/pages/state/noProviders/noProvidersState.tsx","webpack:///./src/pages/state/noProviders/noProviders.tsx","webpack:///./src/pages/state/noProviders/index.ts"],"names":["content","module","i","options","transform","undefined","locals","exports","___CSS_LOADER_API_IMPORT___","push","DashboardBase","DashboardWidget","selectWidgets","widgets","createElement","Grid","hasGutter","map","widgetId","details","showHorizontal","GridItem","sm","key","lg","xl","xl2","chartStyles","chartAltHeight","chartHeight","containerAltHeight","containerTrendHeight","containerUsageHeight","styles","tabs","marginTop","value","tabItems","Component","super","arguments","this","state","activeTabKey","buildDetailsLink","tab","getIdKeyForTab","props","currentTab","viewAllPath","group_by","order_by","cost","getChart","containerHeight","height","adjustContainerHeight","chartType","getCostChart","getTrendChart","getUsageChart","currentReport","previousReport","t","trend","units","getUnits","title","titleKey","computedReportItem","computedReportItemValue","currentInfrastructureData","type","previousInfrastructureData","currentCostData","previousCostData","forecastData","forecastConeData","getForecastData","currentInfrastructureCostData","formatDatumValue","formatValue","formatDatumOptions","formatOptions","previousInfrastructureCostData","showForecast","computedForecastItem","forecast","newForecast","data","total","meta","reportedValues","filter","val","values","length","lastReported","date","lastReportedDate","Date","lastReportedMonth","getMonth","forecastDate","forecastMonth","unshift","confidence_max","confidence_min","showSupplementaryLabel","currentData","previousData","showUsageLegendLabel","currentRequestData","previousRequestData","currentUsageData","previousUsageData","getDetails","reportType","costLabel","getDetailsLabel","costKey","report","requestLabel","requestKey","showTooltip","showUnits","showUsageFirst","usageFormatOptions","usageLabel","usageKey","getDetailsLink","Link","to","onClick","handleInsightsNavClick","getDetailsLinkTitle","groupBy","getHorizontalLayout","currentReportFetchStatus","detailsLink","status","subTitle","getSubTitle","getTabs","getTitle","today","month","endDate","startDate","count","getTab","index","tabsReport","tabsReportFetchStatus","Tab","eventKey","TabTitleText","getTabTitle","style","idKey","items","reportItem","getTabItem","availableTabs","topItems","activeTab","totalValue","hasTotal","usage","id","label","toString","Tabs","isFilled","activeKey","onSelect","handleTabClick","getVerticalLayout","Boolean","appNavId","insights","chrome","appNavClick","secondaryNav","event","tabIndex","updateTab","setState","fetchForecasts","fetchReports","mapStateToProps","widget","awsCloudDashboard","selectWidget","queries","selectWidgetQueries","Object","assign","selectReport","reportPathsType","current","selectReportFetchStatus","previous","mapDispatchToProps","fetchWidgetReports","changeWidgetTab","AwsCloudDashboardWidget","withTranslation","selectCurrentWidgets","awsDashboard","selectForecast","forecastPathsType","forecastType","forecastFetchStatus","selectForecastFetchStatus","fetchWidgetForecasts","AwsDashboardWidget","azureCloudDashboard","AzureCloudDashboardWidget","azureDashboard","AzureDashboardWidget","gcpDashboard","GcpDashboardWidget","ocpCloudDashboard","OcpCloudDashboardWidget","ocpDashboard","currentQuery","forecastQuery","previousQuery","tabsQuery","OcpDashboardWidget","ocpSupplementaryDashboard","OcpSupplementaryDashboardWidget","ocpUsageDashboard","OcpUsageDashboardWidget","infoIcon","fontSize","infoTitle","fontWeight","perspective","perspectiveSelector","display","alignItems","perspectiveLabel","marginBottom","marginRight","var","defaultState","isPerspectiveOpen","getDropDownItems","option","DropdownItem","component","handleClick","getCurrentLabel","currentItem","onItemClicked","handleSelect","handleToggle","dropdownItems","Dropdown","toggle","DropdownToggle","onToggle","isOpen","Perspective","ocpOptions","infrastructureAllCloudOptions","infrastructureAwsOptions","infrastructureAwsCloudOptions","infrastructureAzureOptions","infrastructureAzureCloudOptions","infrastructureGcpOptions","infrastructureOcpOptions","isAwsAccessAllowed","isAzureAccessAllowed","isGcpAccessAllowed","isOcpAccessAllowed","getAvailableTabs","isAwsAvailable","isAzureAvailable","isGcpAvailable","isOcpAvailable","isOcpCloudAvailable","contentRef","createRef","getCurrentTab","getDefaultInfrastructurePerspective","getDefaultOcpPerspective","getPerspective","currentInfrastructurePerspective","currentOcpPerspective","handlePerspectiveClick","tabContentId","tabContentRef","getTabContent","TabContent","ref","emptyTab","Fragment","awsProviders","azureProviders","gcpProviders","ocpProviders","async","isEntitled","isOrgAdmin","getPermissions","then","prevProps","awsProvidersFetchStatus","azureProvidersFetchStatus","gcpProvidersFetchStatus","ocpProvidersFetchStatus","isLoading","noAwsProviders","noAzureProviders","noGcpProviders","noOcpProviders","noProviders","className","Title","headingLevel","size","Popover","enableFlip","bodyContent","Button","variant","plain","awsProvidersQueryString","providers","selectProviders","selectProvidersFetchStatus","azureProvidersQueryString","gcpProvidersQueryString","ocpProvidersQueryString","unitLookupKey","unit","lookup","toLowerCase","fValue","formatCurrency","formatUsageGb","formatUsageHrs","unknownTypeFormatter","_unit","fractionDigits","toLocaleString","minimumFractionDigits","maximumFractionDigits","currency","getComputedForecastItems","sortDirection","sortKey","sort","itemMap","Map","visitDataPoint","dataPoint","forEach","item","get","set","getCostData","infrastructure","supplementary","Array","from","getUnsortedComputedForecastItems","direction","pvalues","Number","rsquared","transformForecast","forecastItem","forecastItemValue","computedItems","result","createForecastDatum","reduce","acc","d","prevValue","y","padComputedReportItems","transformForecastCone","createForecastConeDatum","prevMaxValue","prevMinValue","y0","transformReport","reportItemValue","getComputedReportItems","createReportDatum","computedItem","xVal","yVal","isFloat","parseFloat","toFixed","isInt","x","maxValue","minValue","y0Val","datums","firstDate","lastDate","padDate","getDate","setDate","getDateRange","firstOfMonth","lastOfMonth","offset","start","end","setMonth","getDatumDateRange","getMaxMinValues","max","min","datum","getTooltipContent","i18next","getCostRangeString","year","getUsageRangeString","n","LAYOUT_PROPS","padding","area","axis","bar","boxplot","candlestick","chart","errorbar","group","legend","line","pie","scatter","stack","tooltip","voronoi","ChartTheme","default","getUnsortedComputedReportItems","markup","raw","getUsageData","capacity","limit","request","idSuffix","cluster","org_unit_id","mapId","cluster_alias","clusters","delta_percent","delta_value","source_uuid","itemLabelKey","String","keys","indexOf","tagPrefixKey","hasOwnProperty","getItemLabel","alias","account_alias","LoadingState","large","getProvidersQuery","query","encode","indices","getValueForItem","array","a","b","aVal","bVal","EmptyValueState","ReportSummary","children","Card","CardTitle","CardBody","Skeleton","CardFooter","ReportSummaryAlt","ReportSummaryDetails","requestFormatOptions","supplementaryCost","infrastructureCost","hasCost","hasCount","hasSupplementaryCost","hasInfrastructureCost","hasRequest","hasUsage","getCostLayout","showAltHeroFont","altHeroFont","Tooltip","getRequestLayout","usageUnits","_units","unitsLabel","getUsageLayout","ReportSummaryItemBase","percentVal","percentLabel","percent","Progress","defaultProps","v","ReportSummaryItem","nextProps","otherIndex","findIndex","includes","slice","getItems","ReportSummaryItems","currentColorScale","chart_color_green_400","chart_color_green_300","chart_color_green_200","chart_color_green_100","chart_color_green_500","fill","strokeDasharray","forecastColorScale","forecastConeColorScale","strokeWidth","previousColorScale","chart_color_black_200","yAxis","axisLabel","grid","stroke","ticks","tickLabels","xAxis","containerRef","hiddenSeries","Set","width","initDatum","series","childName","legendItem","name","symbol","cursorVoronoiContainer","getCursorVoronoiContainer","handleNavToggle","setTimeout","handleResize","clientWidth","ChartArea","has","interpolation","CursorVoronoiContainer","cursorDimension","labels","getTooltipLabel","labelComponent","ChartLegendTooltip","legendData","getLegendData","day","mouseFollowTooltips","voronoiDimension","voronoiPadding","bottom","left","right","top","getLegend","ChartLegend","gutter","responsive","formatter","dy","dy0","value0","value1","handleLegendClick","delete","add","isDataAvailable","unavailable","s","isSeriesHidden","getChartNames","serie","getAdjustedContainerHeight","adjustedContainerHeight","getEvents","chartNames","isHidden","legendName","onLegendClick","window","addEventListener","navToggle","on","removeEventListener","domain","Math","ceil","minY","floor","currentInfrastructureDate","currentCostDate","forecastCostDate","previousInfrastructureDate","previousUsageDate","getDomain","getEndDate","midDate","container","cloneElement","disable","Chart","containerComponent","events","legendAllowWrap","legendComponent","legendPosition","theme","ChartAxis","tickValues","dependentAxis","ReportSummaryCost","currentMonthData","itemsPerRow","previousMonthData","tooltipKey","legendItemsPerRow","orientation","previousDate","currentDate","ReportSummaryTrend","chartContainer","legendColorScale","currentRequestDate","currentUsageDate","previousRequestDate","ReportSummaryUsage","getReleasePath","pathName","location","pathname","split","shift","release","withRouter","PageHeader","Main","___CSS_LOADER_AT_RULE_IMPORT_0___","src","alt","iconSpacer","marginLeft","viewSources","getDocLink","textKey","urlKey","href","rel","target","getRouteToSources","providerType","docUrlKey","icon","descKey","EmptyState","EmptyStateIcon","EmptyStateBody","NoProvidersState"],"mappings":"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","file":"dfa7ac28217d20a1ddc7.bundle.js","sourcesContent":["\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./overview.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./overview.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./overview.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".headerOverride.pf-c-page__main-section{--pf-c-page__main-section--PaddingBottom: 0}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nconst DashboardBase = ({ DashboardWidget, selectWidgets, widgets }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { hasGutter: true }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return widget.details.showHorizontal ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(DashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { lg: 12, xl: 6, xl2: 4, key: widgetId },\n            React.createElement(DashboardWidget, { widgetId: widgetId })));\n    }))));\nexport { DashboardBase };\n","import global_spacer_2xl from '@patternfly/react-tokens/dist/js/global_spacer_2xl';\nimport global_spacer_xl from '@patternfly/react-tokens/dist/js/global_spacer_xl';\nexport const chartStyles = {\n    chartAltHeight: 250,\n    chartHeight: 180,\n    containerAltHeight: 250,\n    containerTrendHeight: 180,\n    containerUsageHeight: 180,\n};\nexport const styles = {\n    tabs: {\n        marginTop: global_spacer_2xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n};\n","import { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { getQuery } from 'api/queries/awsQuery';\nimport { transformForecast, transformForecastCone, transformReport, } from 'components/charts/common/chartUtils';\nimport { ReportSummary, ReportSummaryAlt, ReportSummaryCost, ReportSummaryDetails, ReportSummaryItem, ReportSummaryItems, ReportSummaryTrend, ReportSummaryUsage, } from 'components/reports/reportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport { cloneDeep } from 'lodash';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './dashboardWidget.styles';\nclass DashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = (tab) => {\n            const { details, getIdKeyForTab } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return `${details.viewAllPath}?${getQuery({\n                group_by: {\n                    [currentTab]: '*',\n                },\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.getChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { chartType } = this.props;\n            if (chartType === \"cost\" /* cost */) {\n                return this.getCostChart(containerHeight, height, adjustContainerHeight);\n            }\n            else if (chartType === \"supplementary\" /* supplementary */) {\n                return this.getTrendChart(containerHeight, height, adjustContainerHeight, true);\n            }\n            else if (chartType === \"trend\" /* trend */) {\n                return this.getTrendChart(containerHeight, height, adjustContainerHeight);\n            }\n            else if (chartType === \"usage\" /* usage */) {\n                return this.getUsageChart(height, adjustContainerHeight);\n            }\n            else {\n                return null;\n            }\n        };\n        // This chart displays cost and infrastructure cost\n        this.getCostChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { currentReport, previousReport, t, trend } = this.props;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            const computedReportItem = trend.computedReportItem; // cost, supplementary cost, etc.\n            const computedReportItemValue = trend.computedReportItemValue; // infrastructure usage cost\n            // Infrastructure data\n            const currentInfrastructureData = transformReport(currentReport, trend.type, 'date', 'infrastructure', computedReportItemValue);\n            const previousInfrastructureData = transformReport(previousReport, trend.type, 'date', 'infrastructure', computedReportItemValue);\n            // Cost data\n            const currentCostData = transformReport(currentReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            const previousCostData = transformReport(previousReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            // Forecast data\n            const { forecastData, forecastConeData } = this.getForecastData();\n            return (React.createElement(ReportSummaryCost, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentCostData: currentCostData, currentInfrastructureCostData: currentInfrastructureData, forecastData: forecastData, forecastConeData: forecastConeData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousCostData: previousCostData, previousInfrastructureCostData: previousInfrastructureData, showForecast: trend.computedForecastItem !== undefined, title: title }));\n        };\n        this.getForecastData = () => {\n            const { currentReport, forecast, trend } = this.props;\n            const computedForecastItem = trend.computedForecastItem;\n            let forecastData;\n            let forecastConeData;\n            if (computedForecastItem) {\n                const newForecast = cloneDeep(forecast);\n                if (newForecast) {\n                    newForecast.data = [];\n                }\n                if (forecast && currentReport && currentReport.data) {\n                    const total = currentReport.meta && currentReport.meta.total && currentReport.meta.total.cost\n                        ? currentReport.meta.total.cost.total.value\n                        : 0;\n                    // Find last currentData date with values\n                    const reportedValues = currentReport.data.filter(val => val.values.length);\n                    const lastReported = reportedValues[reportedValues.length - 1].date;\n                    // Remove overlapping forecast dates, if any\n                    if (forecast && forecast.data) {\n                        const lastReportedDate = new Date(lastReported);\n                        const lastReportedMonth = lastReportedDate.getMonth() + 1;\n                        for (let i = 0; i < forecast.data.length - 1; i++) {\n                            const forecastDate = new Date(forecast.data[i].date);\n                            const forecastMonth = forecastDate.getMonth() + 1;\n                            // Ensure month match. AWS forecast currently starts with \"2020-12-04\", but ends on \"2021-01-01\"\n                            if (forecastDate > lastReportedDate && lastReportedMonth === forecastMonth) {\n                                newForecast.data.push(forecast.data[i]);\n                            }\n                        }\n                    }\n                    // Show continuous line from current report to forecast\n                    newForecast.data.unshift({\n                        date: lastReported,\n                        values: [\n                            {\n                                date: lastReported,\n                                cost: {\n                                    confidence_max: {\n                                        value: 0,\n                                    },\n                                    confidence_min: {\n                                        value: 0,\n                                    },\n                                    total: {\n                                        value: total,\n                                        units: 'USD',\n                                    },\n                                },\n                            },\n                        ],\n                    });\n                }\n                forecastData = transformForecast(newForecast, trend.type, computedForecastItem);\n                forecastConeData = transformForecastCone(newForecast, trend.type, computedForecastItem);\n            }\n            return { forecastData, forecastConeData };\n        };\n        // This chart displays cost only\n        this.getTrendChart = (containerHeight, height, adjustContainerHeight = false, showSupplementaryLabel = false) => {\n            const { currentReport, details, previousReport, t, trend } = this.props;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            const computedReportItem = trend.computedReportItem; // cost, supplementary cost, etc.\n            const computedReportItemValue = trend.computedReportItemValue; // infrastructure usage cost\n            // Cost data\n            const currentData = transformReport(currentReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            const previousData = transformReport(previousReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            // Forecast data\n            const { forecastData, forecastConeData } = this.getForecastData();\n            return (React.createElement(ReportSummaryTrend, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentData: currentData, forecastData: forecastData, forecastConeData: forecastConeData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousData, showForecast: trend.computedForecastItem !== undefined, showSupplementaryLabel: showSupplementaryLabel, showUsageLegendLabel: details.showUsageLegendLabel, title: title, units: units }));\n        };\n        // This chart displays usage and requests\n        this.getUsageChart = (height, adjustContainerHeight = false) => {\n            const { currentReport, previousReport, t, trend } = this.props;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            // Request data\n            const currentRequestData = transformReport(currentReport, trend.type, 'date', 'request');\n            const previousRequestData = transformReport(previousReport, trend.type, 'date', 'request');\n            // Usage data\n            const currentUsageData = transformReport(currentReport, trend.type, 'date', 'usage');\n            const previousUsageData = transformReport(previousReport, trend.type, 'date', 'usage');\n            return (React.createElement(ReportSummaryUsage, { adjustContainerHeight: adjustContainerHeight, containerHeight: chartStyles.containerUsageHeight, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousRequestData: previousRequestData, previousUsageData: previousUsageData, title: title }));\n        };\n        this.getDetails = () => {\n            const { chartType, currentReport, details, reportType, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            const units = this.getUnits();\n            return (React.createElement(ReportSummaryDetails, { chartType: chartType, computedReportItem: computedReportItem, computedReportItemValue: computedReportItemValue, costLabel: this.getDetailsLabel(details.costKey, units), formatOptions: details.formatOptions, formatValue: formatValue, report: currentReport, reportType: reportType, requestLabel: this.getDetailsLabel(details.requestKey, units), showTooltip: details.showTooltip, showUnits: details.showUnits, showUsageFirst: details.showUsageFirst, units: details.units, usageFormatOptions: details.usageFormatOptions, usageLabel: this.getDetailsLabel(details.usageKey, units) }));\n        };\n        this.getDetailsLabel = (key, units) => {\n            const { t } = this.props;\n            return key ? t(key, { units: t(`units.${units}`) }) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, details } = this.props;\n            if (details.viewAllPath) {\n                return (React.createElement(Link, { to: this.buildDetailsLink(currentTab), onClick: this.handleInsightsNavClick }, this.getDetailsLinkTitle(currentTab)));\n            }\n            return null;\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { getIdKeyForTab, t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { containerAltHeight = chartStyles.containerAltHeight, chartAltHeight = chartStyles.chartAltHeight, currentReportFetchStatus, details, } = this.props;\n            return (React.createElement(ReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(containerAltHeight, chartAltHeight, details.adjustContainerHeight)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'D');\n            const startDate = formatDate(startOfMonth(today), 'D');\n            return t('aws_dashboard.widget_subtitle', {\n                count: getDate(today),\n                endDate,\n                month,\n                startDate,\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { getIdKeyForTab, tabsReport, tabsReportFetchStatus } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) },\n                React.createElement(\"div\", { style: styles.tabItems },\n                    React.createElement(ReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport, status: tabsReportFetchStatus }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, details, getIdKeyForTab, tabsReport, topItems, trend } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            let totalValue;\n            const hasTotal = tabsReport && tabsReport.meta && tabsReport.meta.total;\n            if (computedReportItem === \"usage\" /* usage */) {\n                if (hasTotal && tabsReport.meta.total.usage) {\n                    totalValue = tabsReport.meta.total.usage.value;\n                }\n            }\n            else {\n                if (hasTotal &&\n                    tabsReport.meta.total[computedReportItem] &&\n                    tabsReport.meta.total[computedReportItem][computedReportItemValue]) {\n                    totalValue = tabsReport.meta.total[computedReportItem][computedReportItemValue].value;\n                }\n            }\n            if (activeTab === currentTab) {\n                return (React.createElement(ReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: totalValue, units: details.units ? details.units : this.getUnits(), value: reportItem[computedReportItem][computedReportItemValue].value }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { getIdKeyForTab, t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getUnits = () => {\n            const { currentReport, details, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            if (details.units) {\n                return details.units;\n            }\n            let units;\n            const hasTotal = currentReport && currentReport.meta && currentReport.meta.total;\n            if (computedReportItem === \"usage\" /* usage */) {\n                const hasUsage = hasTotal && currentReport.meta.total.usage;\n                units = hasUsage ? unitLookupKey(currentReport.meta.total.usage.units) : '';\n            }\n            else {\n                const hasCost = hasTotal &&\n                    currentReport.meta.total[computedReportItem] &&\n                    currentReport.meta.total[computedReportItem][computedReportItemValue];\n                units = hasCost ? unitLookupKey(currentReport.meta.total[computedReportItem][computedReportItemValue].units) : '';\n            }\n            return units;\n        };\n        this.getVerticalLayout = () => {\n            const { availableTabs, currentReportFetchStatus, details } = this.props;\n            return (React.createElement(ReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerTrendHeight, chartStyles.chartHeight, details.adjustContainerHeight),\n                Boolean(availableTabs) && React.createElement(\"div\", { style: styles.tabs }, this.getTabs())));\n        };\n        this.handleInsightsNavClick = () => {\n            const { details } = this.props;\n            if (details.appNavId) {\n                insights.chrome.appNavClick({\n                    id: details.appNavId,\n                    secondaryNav: true,\n                });\n            }\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchForecasts, fetchReports, id, updateTab, widgetId } = this.props;\n        if (availableTabs) {\n            updateTab(id, availableTabs[0]);\n        }\n        if (fetchForecasts) {\n            fetchForecasts(widgetId);\n        }\n        if (fetchReports) {\n            fetchReports(widgetId);\n        }\n    }\n    render() {\n        const { details } = this.props;\n        return details.showHorizontal ? this.getHorizontalLayout() : this.getVerticalLayout();\n    }\n}\nexport { DashboardWidgetBase };\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsCloudDashboardActions, awsCloudDashboardSelectors, } from 'store/dashboard/awsCloudDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: awsCloudDashboardActions.fetchWidgetReports,\n    updateTab: awsCloudDashboardActions.changeWidgetTab,\n};\nconst AwsCloudDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AwsCloudDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsCloudDashboardSelectors } from 'store/dashboard/awsCloudDashboard';\nimport { AwsCloudDashboardWidget } from './awsCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: AwsCloudDashboardWidget,\n        selectWidgets: awsCloudDashboardSelectors.selectWidgets(state),\n        widgets: awsCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsCloudDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default AwsCloudDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsDashboardActions, awsDashboardSelectors } from 'store/dashboard/awsDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: awsDashboardActions.fetchWidgetForecasts,\n    fetchReports: awsDashboardActions.fetchWidgetReports,\n    updateTab: awsDashboardActions.changeWidgetTab,\n};\nconst AwsDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AwsDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsDashboardSelectors } from 'store/dashboard/awsDashboard';\nimport { AwsDashboardWidget } from './awsDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: AwsDashboardWidget,\n        selectWidgets: awsDashboardSelectors.selectWidgets(state),\n        widgets: awsDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default AwsDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureCloudDashboardActions, azureCloudDashboardSelectors, } from 'store/dashboard/azureCloudDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"service_names\" /* service_names */:\n            return 'service_name';\n        case \"subscription_guids\" /* subscription_guids */:\n            return 'subscription_guid';\n        case \"resource_locations\" /* resource_locations */:\n            return 'resource_location';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = azureCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = azureCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: azureCloudDashboardActions.fetchWidgetReports,\n    updateTab: azureCloudDashboardActions.changeWidgetTab,\n};\nconst AzureCloudDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AzureCloudDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureCloudDashboardSelectors } from 'store/dashboard/azureCloudDashboard';\nimport { AzureCloudDashboardWidget } from './azureCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: AzureCloudDashboardWidget,\n        selectWidgets: azureCloudDashboardSelectors.selectWidgets(state),\n        widgets: azureCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AzureCloudDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default AzureCloudDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureDashboardActions, azureDashboardSelectors } from 'store/dashboard/azureDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"service_names\" /* service_names */:\n            return 'service_name';\n        case \"subscription_guids\" /* subscription_guids */:\n            return 'subscription_guid';\n        case \"resource_locations\" /* resource_locations */:\n            return 'resource_location';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = azureDashboardSelectors.selectWidget(state, widgetId);\n    const queries = azureDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: azureDashboardActions.fetchWidgetForecasts,\n    fetchReports: azureDashboardActions.fetchWidgetReports,\n    updateTab: azureDashboardActions.changeWidgetTab,\n};\nconst AzureDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AzureDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureDashboardSelectors } from 'store/dashboard/azureDashboard';\nimport { AzureDashboardWidget } from './azureDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: AzureDashboardWidget,\n        selectWidgets: azureDashboardSelectors.selectWidgets(state),\n        widgets: azureDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AzureDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default AzureDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { gcpDashboardActions, gcpDashboardSelectors } from 'store/dashboard/gcpDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = gcpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = gcpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: gcpDashboardActions.fetchWidgetReports,\n    updateTab: gcpDashboardActions.changeWidgetTab,\n};\nconst GcpDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { GcpDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { gcpDashboardSelectors } from 'store/dashboard/gcpDashboard';\nimport { GcpDashboardWidget } from './gcpDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: GcpDashboardWidget,\n        selectWidgets: gcpDashboardSelectors.selectWidgets(state),\n        widgets: gcpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst GcpDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default GcpDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardActions, ocpCloudDashboardSelectors, } from 'store/dashboard/ocpCloudDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"services\" /* services */:\n            return 'service';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpCloudDashboardActions.fetchWidgetReports,\n    updateTab: ocpCloudDashboardActions.changeWidgetTab,\n};\nconst OcpCloudDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpCloudDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardSelectors } from 'store/dashboard/ocpCloudDashboard';\nimport { OcpCloudDashboardWidget } from './ocpCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: OcpCloudDashboardWidget,\n        selectWidgets: ocpCloudDashboardSelectors.selectWidgets(state),\n        widgets: ocpCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpCloudDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpCloudDashboard;\n","export const chartStyles = {\n    chartAltHeight: 250,\n    containerAltHeight: 250,\n};\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardActions, ocpDashboardSelectors } from 'store/dashboard/ocpDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nimport { chartStyles } from './ocpDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, chartAltHeight: chartStyles.chartAltHeight, containerAltHeight: chartStyles.containerAltHeight, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: ocpDashboardActions.fetchWidgetForecasts,\n    fetchReports: ocpDashboardActions.fetchWidgetReports,\n    updateTab: ocpDashboardActions.changeWidgetTab,\n};\nconst OcpDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardSelectors } from 'store/dashboard/ocpDashboard';\nimport { OcpDashboardWidget } from './ocpDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: OcpDashboardWidget,\n        selectWidgets: ocpDashboardSelectors.selectWidgets(state),\n        widgets: ocpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpSupplementaryDashboardActions, ocpSupplementaryDashboardSelectors, } from 'store/dashboard/ocpSupplementaryDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpSupplementaryDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpSupplementaryDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpSupplementaryDashboardActions.fetchWidgetReports,\n    updateTab: ocpSupplementaryDashboardActions.changeWidgetTab,\n};\nconst OcpSupplementaryDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpSupplementaryDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpSupplementaryDashboardSelectors } from 'store/dashboard/ocpSupplementaryDashboard';\nimport { OcpSupplementaryDashboardWidget } from './ocpSupplementaryDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: OcpSupplementaryDashboardWidget,\n        selectWidgets: ocpSupplementaryDashboardSelectors.selectWidgets(state),\n        widgets: ocpSupplementaryDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpSupplementaryDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpSupplementaryDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpUsageDashboardActions, ocpUsageDashboardSelectors, } from 'store/dashboard/ocpUsageDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpUsageDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpUsageDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpUsageDashboardActions.fetchWidgetReports,\n    updateTab: ocpUsageDashboardActions.changeWidgetTab,\n};\nconst OcpUsageDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpUsageDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpUsageDashboardSelectors } from 'store/dashboard/ocpUsageDashboard';\nimport { OcpUsageDashboardWidget } from './ocpUsageDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: OcpUsageDashboardWidget,\n        selectWidgets: ocpUsageDashboardSelectors.selectWidgets(state),\n        widgets: ocpUsageDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpUsageDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpUsageDashboard;\n","import global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const styles = {\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    perspective: {\n        marginTop: global_spacer_lg.value,\n    },\n    tabs: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    perspectiveSelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    perspectiveLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n};\n","import { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './perspective.styles';\nclass PerspectiveBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isPerspectiveOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getDropDownItems = () => {\n            const { options, t } = this.props;\n            return options.map(option => (React.createElement(DropdownItem, { component: \"button\", key: option.value, onClick: () => this.handleClick(option.value) }, t(option.label))));\n        };\n        this.getCurrentLabel = () => {\n            const { currentItem, options, t } = this.props;\n            let label = '';\n            for (const option of options) {\n                if (currentItem === option.value) {\n                    label = t(option.label);\n                    break;\n                }\n            }\n            return label;\n        };\n        this.handleClick = value => {\n            const { onItemClicked } = this.props;\n            if (onItemClicked) {\n                onItemClicked(value);\n            }\n        };\n        this.handleSelect = () => {\n            this.setState({\n                isPerspectiveOpen: !this.state.isPerspectiveOpen,\n            });\n        };\n        this.handleToggle = isPerspectiveOpen => {\n            this.setState({\n                isPerspectiveOpen,\n            });\n        };\n    }\n    render() {\n        const { t } = this.props;\n        const { isPerspectiveOpen } = this.state;\n        const dropdownItems = this.getDropDownItems();\n        return (React.createElement(\"div\", { style: styles.perspectiveSelector },\n            React.createElement(\"label\", { style: styles.perspectiveLabel }, t('overview.perspective.label')),\n            React.createElement(Dropdown, { onSelect: this.handleSelect, toggle: React.createElement(DropdownToggle, { onToggle: this.handleToggle }, this.getCurrentLabel()), isOpen: isPerspectiveOpen, dropdownItems: dropdownItems })));\n    }\n}\nconst Perspective = withTranslation()(PerspectiveBase);\nexport { Perspective };\n","import './overview.scss';\nimport { Button, ButtonVariant, Popover, Tab, TabContent, Tabs, TabTitleText, Title } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport AwsCloudDashboard from 'pages/dashboard/awsCloudDashboard/awsCloudDashboard';\nimport AwsDashboard from 'pages/dashboard/awsDashboard/awsDashboard';\nimport AzureCloudDashboard from 'pages/dashboard/azureCloudDashboard/azureCloudDashboard';\nimport AzureDashboard from 'pages/dashboard/azureDashboard/azureDashboard';\nimport GcpDashboard from 'pages/dashboard/gcpDashboard/gcpDashboard';\nimport OcpCloudDashboard from 'pages/dashboard/ocpCloudDashboard/ocpCloudDashboard';\nimport OcpDashboard from 'pages/dashboard/ocpDashboard/ocpDashboard';\nimport OcpSupplementaryDashboard from 'pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboard';\nimport OcpUsageDashboard from 'pages/dashboard/ocpUsageDashboard/ocpUsageDashboard';\nimport Loading from 'pages/state/loading';\nimport NoProviders from 'pages/state/noProviders';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsProvidersQuery, azureProvidersQuery, gcpProvidersQuery, ocpProvidersQuery, providersSelectors, } from 'store/providers';\nimport { hasAwsPermissions, hasAzurePermissions, hasEntitledPermissions, hasGcpPermissions, hasOcpPermissions, hasOrgAdminPermissions, } from 'utils/permissions';\nimport { styles } from './overview.styles';\nimport { Perspective } from './perspective';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"infrastructure\" /* infrastructure */:\n            return 'infrastructure';\n        case \"ocp\" /* ocp */:\n            return 'ocp';\n    }\n};\n// Ocp options\nconst ocpOptions = [\n    { label: 'overview.perspective.all', value: 'all' },\n    { label: 'overview.perspective.supplementary', value: 'supplementary' },\n];\n// Infrastructure all cloud options\nconst infrastructureAllCloudOptions = [{ label: 'overview.perspective.all_cloud', value: 'all_cloud' }];\n// Infrastructure AWS options\nconst infrastructureAwsOptions = [{ label: 'overview.perspective.aws', value: 'aws' }];\n// Infrastructure AWS cloud options\nconst infrastructureAwsCloudOptions = [{ label: 'overview.perspective.aws_cloud', value: 'aws_cloud' }];\n// Infrastructure Azure options\nconst infrastructureAzureOptions = [{ label: 'overview.perspective.azure', value: 'azure' }];\n// Infrastructure Azure cloud options\nconst infrastructureAzureCloudOptions = [{ label: 'overview.perspective.azure_cloud', value: 'azure_cloud' }];\n// Infrastructure GCP options\nconst infrastructureGcpOptions = [{ label: 'overview.perspective.gcp', value: 'gcp' }];\n// Infrastructure Ocp options\nconst infrastructureOcpOptions = [{ label: 'overview.perspective.ocp_usage', value: 'ocp_usage' }];\nconst getPermissions = async () => {\n    const isEntitled = await hasEntitledPermissions();\n    const isOrgAdmin = await hasOrgAdminPermissions();\n    const isAwsAccessAllowed = isEntitled && (isOrgAdmin || (await hasAwsPermissions()));\n    const isAzureAccessAllowed = isEntitled && (isOrgAdmin || (await hasAzurePermissions()));\n    const isGcpAccessAllowed = isEntitled && (isOrgAdmin || (await hasGcpPermissions()));\n    const isOcpAccessAllowed = isEntitled && (isOrgAdmin || (await hasOcpPermissions()));\n    return {\n        isAwsAccessAllowed,\n        isAzureAccessAllowed,\n        isGcpAccessAllowed,\n        isOcpAccessAllowed,\n    };\n};\nclass OverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            activeTabKey: 0,\n            isAwsAccessAllowed: false,\n            isAzureAccessAllowed: false,\n            isGcpAccessAllowed: false,\n            isOcpAccessAllowed: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getAvailableTabs = () => {\n            const availableTabs = [];\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isGcpAvailable = this.isGcpAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            const isOcpCloudAvailable = this.isOcpCloudAvailable();\n            if (isOcpAvailable) {\n                availableTabs.push({\n                    contentRef: React.createRef(),\n                    tab: \"ocp\" /* ocp */,\n                });\n            }\n            if (isAwsAvailable || isAzureAvailable || isGcpAvailable || isOcpCloudAvailable) {\n                availableTabs.push({\n                    contentRef: React.createRef(),\n                    tab: \"infrastructure\" /* infrastructure */,\n                });\n            }\n            return availableTabs;\n        };\n        this.getCurrentTab = () => {\n            const { activeTabKey } = this.state;\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isGcpAvailable = this.isGcpAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            const isOcpCloudAvailable = this.isOcpCloudAvailable();\n            const showOcpOnly = isOcpAvailable && !(isAwsAvailable || isAzureAvailable || isGcpAvailable || isOcpCloudAvailable);\n            const showInfrastructureOnly = !isOcpAvailable && (isAwsAvailable || isAzureAvailable || isGcpAvailable || isOcpCloudAvailable);\n            if (showOcpOnly) {\n                return \"ocp\" /* ocp */;\n            }\n            else if (showInfrastructureOnly) {\n                return \"infrastructure\" /* infrastructure */;\n            }\n            else {\n                return activeTabKey === 0 ? \"ocp\" /* ocp */ : \"infrastructure\" /* infrastructure */;\n            }\n        };\n        this.getDefaultInfrastructurePerspective = () => {\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isGcpAvailable = this.isGcpAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            if (isOcpAvailable) {\n                return \"all_cloud\" /* allCloud */;\n            }\n            if (isAwsAvailable) {\n                return \"aws\" /* aws */;\n            }\n            if (isAzureAvailable) {\n                return \"azure\" /* azure */;\n            }\n            if (isGcpAvailable) {\n                return \"gcp\" /* gcp */;\n            }\n            return undefined;\n        };\n        this.getDefaultOcpPerspective = () => {\n            const isOcpAvailable = this.isOcpAvailable();\n            if (isOcpAvailable) {\n                return \"all\" /* all */;\n            }\n            return undefined;\n        };\n        this.getPerspective = () => {\n            const { currentInfrastructurePerspective, currentOcpPerspective } = this.state;\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isGcpAvailable = this.isGcpAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            if (!(isAwsAvailable || isAzureAvailable || isGcpAvailable || isOcpAvailable)) {\n                return null;\n            }\n            // Dynamically show options if providers are available\n            const options = [];\n            if (this.getCurrentTab() === \"infrastructure\" /* infrastructure */) {\n                if (isOcpAvailable) {\n                    options.push(...infrastructureAllCloudOptions);\n                }\n                if (isAwsAvailable) {\n                    options.push(...infrastructureAwsOptions);\n                }\n                if (isOcpAvailable && isAwsAvailable) {\n                    options.push(...infrastructureAwsCloudOptions);\n                }\n                if (isGcpAvailable) {\n                    options.push(...infrastructureGcpOptions);\n                }\n                if (isAzureAvailable) {\n                    options.push(...infrastructureAzureOptions);\n                }\n                if (isOcpAvailable && isAzureAvailable) {\n                    options.push(...infrastructureAzureCloudOptions);\n                }\n                if (isOcpAvailable) {\n                    options.push(...infrastructureOcpOptions);\n                }\n            }\n            else {\n                options.push(...ocpOptions);\n            }\n            const currentItem = this.getCurrentTab() === \"infrastructure\" /* infrastructure */ ? currentInfrastructurePerspective : currentOcpPerspective;\n            return (React.createElement(Perspective, { currentItem: currentItem || options[0].value, onItemClicked: this.handlePerspectiveClick, options: options }));\n        };\n        this.getTab = (tab, contentRef, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, tabContentId: `tab-${index}`, tabContentRef: contentRef, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) }));\n        };\n        this.getTabContent = (availableTabs) => {\n            return availableTabs.map((val, index) => {\n                return (React.createElement(TabContent, { eventKey: index, key: `${getIdKeyForTab(val.tab)}-tabContent`, id: `tab-${index}`, ref: val.contentRef }, this.getTabItem(val.tab, index)));\n            });\n        };\n        this.getTabItem = (tab, index) => {\n            const { activeTabKey, currentInfrastructurePerspective, currentOcpPerspective } = this.state;\n            const emptyTab = React.createElement(React.Fragment, null); // Lazily load tabs\n            if (activeTabKey !== index) {\n                return emptyTab;\n            }\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === \"infrastructure\" /* infrastructure */) {\n                if (currentInfrastructurePerspective === \"all_cloud\" /* allCloud */) {\n                    return React.createElement(OcpCloudDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"aws\" /* aws */) {\n                    return React.createElement(AwsDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"aws_cloud\" /* awsFiltered */) {\n                    return React.createElement(AwsCloudDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"gcp\" /* gcp */) {\n                    return React.createElement(GcpDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"azure\" /* azure */) {\n                    return React.createElement(AzureDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"azure_cloud\" /* azureCloud */) {\n                    return React.createElement(AzureCloudDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"ocp_usage\" /* ocpUsage */) {\n                    return React.createElement(OcpUsageDashboard, null);\n                }\n                else {\n                    return React.createElement(OcpCloudDashboard, null); // default\n                }\n            }\n            else if (currentTab === \"ocp\" /* ocp */) {\n                if (currentOcpPerspective === \"all\" /* all */) {\n                    return React.createElement(OcpDashboard, null);\n                }\n                else if (currentOcpPerspective === \"supplementary\" /* supplementary */) {\n                    return React.createElement(OcpSupplementaryDashboard, null);\n                }\n                else {\n                    return React.createElement(OcpDashboard, null); // default\n                }\n            }\n            else {\n                return emptyTab;\n            }\n        };\n        this.getTabs = (availableTabs) => {\n            const { activeTabKey } = this.state;\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((val, index) => this.getTab(val.tab, val.contentRef, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            if (tab === \"infrastructure\" /* infrastructure */) {\n                return t('overview.infrastructure');\n            }\n            else if (tab === \"ocp\" /* ocp */) {\n                return t('overview.ocp');\n            }\n        };\n        this.handlePerspectiveClick = (value) => {\n            const currentTab = this.getCurrentTab();\n            this.setState(Object.assign(Object.assign({}, (currentTab === \"infrastructure\" /* infrastructure */ && {\n                currentInfrastructurePerspective: value,\n            })), (currentTab === \"ocp\" /* ocp */ && { currentOcpPerspective: value })));\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { activeTabKey } = this.state;\n            if (activeTabKey !== tabIndex) {\n                this.setState({\n                    activeTabKey: tabIndex,\n                });\n            }\n        };\n        this.isAwsAvailable = () => {\n            const { awsProviders } = this.props;\n            const { isAwsAccessAllowed } = this.state;\n            return (\n            // API returns empty data array for no sources\n            isAwsAccessAllowed && awsProviders !== undefined && awsProviders.meta !== undefined && awsProviders.meta.count > 0);\n        };\n        this.isAzureAvailable = () => {\n            const { azureProviders } = this.props;\n            const { isAzureAccessAllowed } = this.state;\n            return (\n            // API returns empty data array for no sources\n            isAzureAccessAllowed &&\n                azureProviders !== undefined &&\n                azureProviders.meta !== undefined &&\n                azureProviders.meta.count > 0);\n        };\n        this.isGcpAvailable = () => {\n            const { gcpProviders } = this.props;\n            const { isGcpAccessAllowed } = this.state;\n            return (\n            // API returns empty data array for no sources\n            isGcpAccessAllowed && gcpProviders !== undefined && gcpProviders.meta !== undefined && gcpProviders.meta.count > 0);\n        };\n        this.isOcpAvailable = () => {\n            const { ocpProviders } = this.props;\n            const { isOcpAccessAllowed } = this.state;\n            return (\n            // API returns empty data array for no sources\n            isOcpAccessAllowed && ocpProviders !== undefined && ocpProviders.meta !== undefined && ocpProviders.meta.count > 0);\n        };\n        this.isOcpCloudAvailable = () => {\n            return this.isAwsAvailable() && this.isOcpAvailable();\n        };\n    }\n    componentDidMount() {\n        getPermissions().then(({ isAwsAccessAllowed, isAzureAccessAllowed, isGcpAccessAllowed, isOcpAccessAllowed }) => {\n            this.setState({\n                currentInfrastructurePerspective: this.getDefaultInfrastructurePerspective(),\n                currentOcpPerspective: this.getDefaultOcpPerspective(),\n                isAwsAccessAllowed,\n                isAzureAccessAllowed,\n                isGcpAccessAllowed,\n                isOcpAccessAllowed,\n            });\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { awsProviders, azureProviders, gcpProviders, ocpProviders } = this.props;\n        if (prevProps.awsProviders !== awsProviders ||\n            prevProps.azureProviders !== azureProviders ||\n            prevProps.gcpProviders !== gcpProviders ||\n            prevProps.ocpProviders !== ocpProviders) {\n            this.setState({\n                currentInfrastructurePerspective: this.getDefaultInfrastructurePerspective(),\n                currentOcpPerspective: this.getDefaultOcpPerspective(),\n            });\n        }\n    }\n    render() {\n        const { awsProvidersFetchStatus, azureProvidersFetchStatus, gcpProvidersFetchStatus, ocpProvidersFetchStatus, t, } = this.props;\n        const availableTabs = this.getAvailableTabs();\n        const isLoading = awsProvidersFetchStatus === 1 /* inProgress */ ||\n            azureProvidersFetchStatus === 1 /* inProgress */ ||\n            gcpProvidersFetchStatus === 1 /* inProgress */ ||\n            ocpProvidersFetchStatus === 1 /* inProgress */;\n        // Test for no providers\n        const noAwsProviders = !this.isAwsAvailable() && awsProvidersFetchStatus === 2 /* complete */;\n        const noAzureProviders = !this.isAzureAvailable() && azureProvidersFetchStatus === 2 /* complete */;\n        const noGcpProviders = !this.isGcpAvailable() && gcpProvidersFetchStatus === 2 /* complete */;\n        const noOcpProviders = !this.isOcpAvailable() && ocpProvidersFetchStatus === 2 /* complete */;\n        const noProviders = noAwsProviders && noAzureProviders && noGcpProviders && noOcpProviders;\n        const title = t('navigation.overview');\n        if (noProviders) {\n            return React.createElement(NoProviders, { title: title });\n        }\n        else if (isLoading) {\n            return React.createElement(Loading, { title: title });\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"section\", { className: `pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light headerOverride}` },\n                React.createElement(\"header\", { className: \"pf-u-display-flex pf-u-justify-content-space-between pf-u-align-items-center\" },\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"2xl\" },\n                        t('overview.title'),\n                        React.createElement(\"span\", { style: styles.infoIcon },\n                            React.createElement(Popover, { \"aria-label\": t('ocp_details.supplementary_aria_label'), enableFlip: true, bodyContent: React.createElement(React.Fragment, null,\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.ocp_cloud')),\n                                    React.createElement(\"p\", null, t('overview.ocp_cloud_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.ocp')),\n                                    React.createElement(\"p\", null, t('overview.ocp_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.gcp')),\n                                    React.createElement(\"p\", null, t('overview.gcp_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.aws')),\n                                    React.createElement(\"p\", null, t('overview.aws_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.azure')),\n                                    React.createElement(\"p\", null, t('overview.azure_desc'))) },\n                                React.createElement(Button, { variant: ButtonVariant.plain },\n                                    React.createElement(OutlinedQuestionCircleIcon, null)))))),\n                React.createElement(\"div\", { style: styles.tabs }, this.getTabs(availableTabs)),\n                React.createElement(\"div\", { style: styles.perspective }, this.getPerspective())),\n            React.createElement(\"section\", { className: \"pf-l-page__main-section pf-c-page__main-section\", \"page-type\": \"cost-management-overview\" }, this.getTabContent(availableTabs))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const awsProvidersQueryString = getProvidersQuery(awsProvidersQuery);\n    const awsProviders = providersSelectors.selectProviders(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const awsProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const azureProvidersQueryString = getProvidersQuery(azureProvidersQuery);\n    const azureProviders = providersSelectors.selectProviders(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const azureProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const gcpProvidersQueryString = getProvidersQuery(gcpProvidersQuery);\n    const gcpProviders = providersSelectors.selectProviders(state, \"gcp\" /* gcp */, gcpProvidersQueryString);\n    const gcpProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"gcp\" /* gcp */, gcpProvidersQueryString);\n    const ocpProvidersQueryString = getProvidersQuery(ocpProvidersQuery);\n    const ocpProviders = providersSelectors.selectProviders(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    const ocpProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    return {\n        awsProviders,\n        awsProvidersFetchStatus,\n        awsProvidersQueryString,\n        azureProviders,\n        azureProvidersFetchStatus,\n        azureProvidersQueryString,\n        gcpProviders,\n        gcpProvidersFetchStatus,\n        gcpProvidersQueryString,\n        ocpProviders,\n        ocpProvidersFetchStatus,\n        ocpProvidersQueryString,\n    };\n});\nconst Overview = withTranslation()(connect(mapStateToProps)(OverviewBase));\nexport default Overview;\n","import Overview from './overview';\nexport default Overview;\n","export const unitLookupKey = unit => {\n    const lookup = unit ? unit.toLowerCase() : '';\n    switch (lookup) {\n        case 'usd':\n        case 'gb':\n        case 'gb-hours':\n        case 'gb-mo':\n        case 'core-hours':\n        case 'hrs':\n        case 'tag-mo':\n        case 'vm-hours':\n            return lookup;\n        default:\n            return '';\n    }\n};\nexport const formatValue = (value, unit, options = {}) => {\n    const lookup = unitLookupKey(unit);\n    const fValue = value || 0;\n    switch (lookup) {\n        case 'usd':\n            return formatCurrency(fValue, lookup, options);\n        case 'gb':\n        case 'gb-hours':\n        case 'gb-mo':\n        case 'tag-mo':\n        case 'vm-hours':\n            return formatUsageGb(fValue, lookup, options);\n        case 'core-hours':\n        case 'hrs':\n            return formatUsageHrs(fValue, lookup, options);\n        default:\n            return unknownTypeFormatter(fValue, lookup, options);\n    }\n};\nconst unknownTypeFormatter = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatCurrency = (value, unit, { fractionDigits = 2 } = {}) => {\n    let fValue = value;\n    if (!value) {\n        fValue = 0;\n    }\n    return fValue.toLocaleString('en', {\n        style: 'currency',\n        currency: unit || 'USD',\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatUsageGb = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatUsageHrs = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\n","import { sort } from 'utils/sort';\nexport function getComputedForecastItems({ forecast, sortDirection = 0 /* asc */, sortKey = 'date', }) {\n    return sort(getUnsortedComputedForecastItems({\n        forecast,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nfunction getCostData(val, key, item) {\n    return {\n        confidence_max: {\n            value: item\n                ? item[key].confidence_max.value\n                : 0 + val[key] && val[key].confidence_max\n                    ? val[key].confidence_max.value\n                    : 0,\n            units: val[key] && val[key].confidence_max ? val[key].confidence_max.units : 'USD',\n        },\n        confidence_min: {\n            value: item\n                ? item[key].confidence_min.value\n                : 0 + val[key] && val[key].confidence_min\n                    ? val[key].confidence_min.value\n                    : 0,\n            units: val[key] && val[key].confidence_min ? val[key].confidence_min.units : 'USD',\n        },\n        pvalues: {\n            value: val[key] && val[key].pvalues ? Number(val[key].pvalues.value) : 0,\n            units: val[key] && val[key].pvalues ? val[key].pvalues.units : null,\n        },\n        rsquared: {\n            value: val[key] && val[key].rsquared ? Number(val[key].rsquared.value) : 0,\n            units: val[key] && val[key].rsquared ? val[key].rsquared.units : null,\n        },\n        total: {\n            value: item ? item[key].total.value : 0 + val[key] && val[key].total ? val[key].total.value : 0,\n            units: val[key] && val[key].total ? val[key].total.units : 'USD',\n        },\n    };\n}\nexport function getUnsortedComputedForecastItems({ forecast, }) {\n    if (!forecast) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint && dataPoint.values) {\n            dataPoint.values.forEach((val) => {\n                const date = val.date;\n                const item = itemMap.get(date);\n                if (item) {\n                    // This code block is typically entered with filter[resolution]=monthly\n                    itemMap.set(date, Object.assign(Object.assign({}, item), { date, cost: getCostData(val, 'cost', item), infrastructure: getCostData(val, 'infrastructure', item), supplementary: getCostData(val, 'supplementary', item) }));\n                }\n                else {\n                    // This code block is typically entered with filter[resolution]=daily\n                    itemMap.set(date, {\n                        date,\n                        cost: getCostData(val, 'cost'),\n                        infrastructure: getCostData(val, 'infrastructure'),\n                        supplementary: getCostData(val, 'supplementary'),\n                    });\n                }\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (forecast && forecast.data) {\n        forecast.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\n","import endOfMonth from 'date-fns/end_of_month';\nimport format from 'date-fns/format';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getYear from 'date-fns/get_year';\nimport startOfMonth from 'date-fns/start_of_month';\nimport i18next from 'i18next';\nimport { getComputedForecastItems } from 'utils/computedForecast/getComputedForecastItems';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { unitLookupKey } from 'utils/formatValue';\nexport function transformForecast(forecast, type = 1 /* daily */, forecastItem = 'cost', forecastItemValue = 'total') {\n    if (!forecast) {\n        return [];\n    }\n    const items = {\n        forecast,\n        sortKey: 'date',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedForecastItems(items);\n    let result;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        result = computedItems.map(i => createForecastDatum(i[forecastItem][forecastItemValue].value, i));\n    }\n    else {\n        result = computedItems.reduce((acc, d) => {\n            const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n            return [...acc, createForecastDatum(prevValue + d[forecastItem][forecastItemValue].value, d)];\n        }, []);\n    }\n    return padComputedReportItems(result);\n}\nexport function transformForecastCone(forecast, type = 1 /* daily */, forecastItem = 'cost', forecastItemValue = 'total') {\n    if (!forecast) {\n        return [];\n    }\n    const items = {\n        forecast,\n        sortKey: 'date',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedForecastItems(items);\n    let result;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        result = computedItems.map(i => createForecastConeDatum(i[forecastItem].confidence_max.value, i[forecastItem].confidence_min.value, i));\n    }\n    else {\n        result = computedItems.reduce((acc, d) => {\n            const prevMaxValue = acc.length ? acc[acc.length - 1].y : d[forecastItem][forecastItemValue].value;\n            const prevMinValue = acc.length ? acc[acc.length - 1].y0 : d[forecastItem][forecastItemValue].value;\n            return [\n                ...acc,\n                createForecastConeDatum(prevMaxValue + d[forecastItem].confidence_max.value, prevMinValue + d[forecastItem].confidence_min.value, d),\n            ];\n        }, []);\n    }\n    return padComputedReportItems(result);\n}\nexport function transformReport(report, type = 1 /* daily */, idKey = 'date', reportItem = 'cost', reportItemValue = 'total' // useful for infrastructure.usage values\n) {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        idKey,\n        report,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedReportItems(items);\n    let result;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        result = computedItems.map(i => {\n            const val = i[reportItem][reportItemValue] ? i[reportItem][reportItemValue].value : i[reportItem].value;\n            return createReportDatum(val, i, idKey, reportItem, reportItemValue);\n        });\n    }\n    else {\n        result = computedItems.reduce((acc, d) => {\n            const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n            const val = d[reportItem][reportItemValue] ? d[reportItem][reportItemValue].value : d[reportItem].value;\n            return [...acc, createReportDatum(prevValue + val, d, idKey, reportItem, reportItemValue)];\n        }, []);\n    }\n    return idKey === 'date' ? padComputedReportItems(result) : result;\n}\nexport function createForecastDatum(value, computedItem, forecastItem = 'cost', forecastItemValue = 'total') {\n    const xVal = getDate(computedItem.date);\n    const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n    return {\n        x: xVal,\n        y: value === null ? null : yVal,\n        key: computedItem.date,\n        units: computedItem[forecastItem] && computedItem[forecastItem][forecastItemValue]\n            ? computedItem[forecastItem][forecastItemValue].units\n            : undefined,\n    };\n}\nexport function createForecastConeDatum(maxValue, minValue, computedItem, forecastItem = 'cost', forecastItemValue = 'total') {\n    const xVal = getDate(computedItem.date);\n    const yVal = isFloat(maxValue) ? parseFloat(maxValue.toFixed(2)) : isInt(maxValue) ? maxValue : 0;\n    const y0Val = isFloat(minValue) ? parseFloat(minValue.toFixed(2)) : isInt(minValue) ? minValue : 0;\n    return {\n        x: xVal,\n        y: maxValue === null ? null : yVal,\n        y0: minValue === null ? null : y0Val,\n        key: computedItem.date,\n        units: computedItem[forecastItem] && computedItem[forecastItem][forecastItemValue]\n            ? computedItem[forecastItem][forecastItemValue].units\n            : undefined,\n    };\n}\nexport function createReportDatum(value, computedItem, idKey = 'date', reportItem = 'cost', reportItemValue = 'total' // useful for infrastructure.usage values\n) {\n    const xVal = idKey === 'date' ? getDate(computedItem.id) : computedItem.label;\n    const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n    return {\n        x: xVal,\n        y: value === null ? null : yVal,\n        key: computedItem.id,\n        units: computedItem[reportItem]\n            ? computedItem[reportItem][reportItemValue]\n                ? computedItem[reportItem][reportItemValue].units // cost, infrastructure, supplementary\n                : computedItem[reportItem].units // capacity, limit, request, usage\n            : undefined,\n    };\n}\n// This pads computed report items with null datum objects, representing missing data at the beginning and end of the\n// data series. The remaining data is left as is to allow for extrapolation. This allows us to display a \"no data\"\n// message in the tooltip, which helps distinguish between zero values and when there is no data available.\nexport function padComputedReportItems(datums) {\n    const result = [];\n    if (!datums || datums.length === 0) {\n        return result;\n    }\n    const firstDate = new Date(datums[0].key + 'T00:00:00');\n    const lastDate = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    // Pad start for missing data\n    let padDate = startOfMonth(firstDate);\n    for (let i = padDate.getDate(); i < firstDate.getDate(); i++) {\n        padDate.setDate(i);\n        const id = formatDate(padDate, 'YYYY-MM-DD');\n        result.push(createReportDatum(null, { id }, 'date', null));\n    }\n    // Fill middle with existing data\n    result.push(...datums);\n    // Pad end for missing data\n    padDate = new Date(lastDate);\n    for (let i = padDate.getDate() + 1; i <= endOfMonth(lastDate).getDate(); i++) {\n        padDate.setDate(i);\n        const id = formatDate(padDate, 'YYYY-MM-DD');\n        result.push(createReportDatum(null, { id }, 'date', null));\n    }\n    return result;\n}\nexport function getDatumDateRange(datums, offset = 0) {\n    if (!(datums && datums.length)) {\n        const today = new Date();\n        // If datums is empty, obtain the month based on offset (e.g., to show previous month in chart legends)\n        if (offset) {\n            today.setMonth(today.getMonth() - offset);\n        }\n        const firstOfMonth = startOfMonth(today);\n        return [firstOfMonth, today];\n    }\n    const start = new Date(datums[0].key + 'T00:00:00');\n    const end = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    return [start, end];\n}\nexport function getDateRange(datums, firstOfMonth = true, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDatumDateRange(datums, offset);\n    // Show the date range we are trying to cover (i.e., days 1-30/31)\n    if (firstOfMonth && start.setDate) {\n        start.setDate(1);\n    }\n    if (lastOfMonth && start.setDate) {\n        const lastDate = endOfMonth(start).getDate();\n        end.setDate(lastDate);\n    }\n    return [start, end];\n}\nexport function getDateRangeString(datums, firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(`chart.date_range`, {\n        count: getDate(end),\n        endDate: formatDate(end, 'DD'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'DD'),\n        year: getYear(end),\n    });\n}\nexport function getMonthRangeString(datums, key = 'chart.month_legend_label', offset = 0) {\n    const [start, end] = getDateRange(datums, true, false, offset);\n    return [\n        i18next.t(key, {\n            month: Number(formatDate(start, 'M')) - 1,\n        }),\n        i18next.t(key, {\n            month: Number(formatDate(end, 'M')) - 1,\n        }),\n    ];\n}\nexport function getMaxValue(datums) {\n    let max = 0;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            if (datum.y > max) {\n                max = datum.y;\n            }\n        });\n    }\n    return max;\n}\nexport function getMaxMinValues(datums) {\n    let max = 0;\n    let min = 0;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            if (datum.y > max) {\n                max = datum.y;\n            }\n            if ((min === 0 || datum.y < min) && datum.y !== null) {\n                min = datum.y;\n            }\n        });\n    }\n    return { max, min };\n}\nexport function getTooltipContent(formatValue) {\n    return function labelFormatter(value, unit = null, options = {}) {\n        const lookup = unitLookupKey(unit);\n        switch (lookup) {\n            case 'core-hours':\n            case 'hrs':\n            case 'gb':\n            case 'gb-hours':\n            case 'gb-mo':\n            case 'vm-hours':\n                return i18next.t(`unit_tooltips.${lookup}`, {\n                    value: `${formatValue(value, unit, options)}`,\n                });\n            default:\n                return `${formatValue(value, unit, options)}`;\n        }\n    };\n}\nexport function getTooltipLabel(datum, formatValue, formatOptions, idKey = 'date', units) {\n    if (!datum.key) {\n        return '';\n    }\n    if (idKey === 'date') {\n        const date = format(datum.key, 'DD MMM YYYY');\n        return `${date} ${formatValue(datum.y, units ? units : datum.units, formatOptions)}`;\n    }\n    return datum.key.toString();\n}\nexport function getCostRangeString(datums, key = 'chart.cost_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(key, {\n        count: getDate(end),\n        endDate: formatDate(end, 'D'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'D'),\n        year: getYear(end),\n    });\n}\nexport function getUsageRangeString(datums, key = 'chart.usage_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    return getCostRangeString(datums, key, firstOfMonth, lastOfMonth, offset);\n}\nfunction isInt(n) {\n    return Number(n) === n && n % 1 === 0;\n}\nfunction isFloat(n) {\n    return Number(n) === n && n % 1 !== 0;\n}\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./charts-common.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./charts-common.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./charts-common.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Layout\nconst LAYOUT_PROPS = {\n    padding: 8,\n};\n// Victory theme properties only\nexport default {\n    area: Object.assign({}, LAYOUT_PROPS),\n    axis: Object.assign({}, LAYOUT_PROPS),\n    bar: Object.assign({}, LAYOUT_PROPS),\n    boxplot: Object.assign({}, LAYOUT_PROPS),\n    candlestick: Object.assign({}, LAYOUT_PROPS),\n    chart: Object.assign({}, LAYOUT_PROPS),\n    errorbar: Object.assign({}, LAYOUT_PROPS),\n    group: Object.assign({}, LAYOUT_PROPS),\n    legend: {},\n    line: Object.assign({}, LAYOUT_PROPS),\n    pie: Object.assign({}, LAYOUT_PROPS),\n    scatter: Object.assign({}, LAYOUT_PROPS),\n    stack: Object.assign({}, LAYOUT_PROPS),\n    tooltip: {},\n    voronoi: Object.assign({}, LAYOUT_PROPS),\n};\n","import getTheme from './theme-utils';\nconst ChartTheme = getTheme();\nexport default ChartTheme;\n","import { ChartThemeColor, ChartThemeVariant, getCustomTheme } from '@patternfly/react-charts';\nimport { default as ChartTheme } from './theme-koku';\n// Applies theme color and variant to base theme\nconst getTheme = () => getCustomTheme(ChartThemeColor.default, ChartThemeVariant.default, ChartTheme);\nexport default getTheme;\n","import { sort } from 'utils/sort';\nimport { getItemLabel } from './getItemLabel';\nexport function getComputedReportItems({ idKey, report, sortDirection = 0 /* asc */, sortKey = 'date', }) {\n    return sort(getUnsortedComputedReportItems({\n        idKey,\n        report,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nfunction getCostData(val, key, item) {\n    return {\n        markup: {\n            value: item ? item[key].markup.value : 0 + val[key] && val[key].markup ? val[key].markup.value : 0,\n            units: val[key] && val[key].markup ? val[key].markup.units : 'USD',\n        },\n        raw: {\n            value: item ? item[key].raw.value : 0 + val[key] && val[key].raw ? val[key].raw.value : 0,\n            units: val[key] && val[key].raw ? val[key].raw.units : 'USD',\n        },\n        total: {\n            value: item ? item[key].total.value : 0 + val[key] && val[key].total ? Number(val[key].total.value) : 0,\n            units: val[key] && val[key].total ? val[key].total.units : null,\n        },\n        usage: {\n            value: item ? item[key].usage.value : 0 + val[key] && val[key].usage ? Number(val[key].usage.value) : 0,\n            units: val[key] && val[key].usage ? val[key].usage.units : null,\n        },\n    };\n}\nfunction getUsageData(val, item) {\n    return {\n        capacity: {\n            value: item ? item.capacity.value : 0 + val.capacity ? val.capacity.value : 0,\n            units: val.capacity ? val.capacity.units : 'Core-Hours',\n        },\n        limit: {\n            value: item ? item.limit.value : 0 + val.limit ? val.limit.value : 0,\n            units: val.limit ? val.limit.units : 'Core-Hours',\n        },\n        request: {\n            value: item ? item.request.value : 0 + val.request ? val.request.value : 0,\n            units: val.request ? val.request.units : 'Core-Hours',\n        },\n        usage: {\n            value: item ? item.usage.value : 0 + val.usage ? val.usage.value : 0,\n            units: val.usage ? val.usage.units : 'Core-Hours',\n        },\n    };\n}\nexport function getUnsortedComputedReportItems({ report, idKey, }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint && dataPoint.values) {\n            const type = dataPoint.type;\n            dataPoint.values.forEach((val) => {\n                // Ensure unique map IDs -- https://github.com/project-koku/koku-ui/issues/706\n                const idSuffix = idKey !== 'date' && idKey !== 'cluster' && val.cluster ? `-${val.cluster}` : '';\n                // org_unit_id workaround for storage and instance-type APIs\n                let id = idKey === 'org_entities' ? val.org_unit_id : val[idKey];\n                if (id === undefined) {\n                    id = val.id || val.date;\n                }\n                const mapId = `${id}${idSuffix}`;\n                // 'clusters' will contain either the cluster alias or default cluster ID\n                const cluster_alias = val.clusters && val.clusters.length > 0 ? val.clusters[0] : undefined;\n                const cluster = cluster_alias || val.cluster;\n                const clusters = val.clusters ? val.clusters : [];\n                const date = val.date;\n                const delta_percent = val.delta_percent ? val.delta_percent : 0;\n                const delta_value = val.delta_value ? val.delta_value : 0;\n                const source_uuid = val.source_uuid ? val.source_uuid : [];\n                let label;\n                const itemLabelKey = getItemLabel({ report, idKey, value: val });\n                if (itemLabelKey === 'org_entities' && val.alias) {\n                    label = val.alias;\n                }\n                else if (itemLabelKey === 'account' && val.account_alias) {\n                    label = val.account_alias;\n                }\n                else if (itemLabelKey === 'cluster' && cluster_alias) {\n                    label = cluster_alias;\n                }\n                else if (val[itemLabelKey] instanceof Object) {\n                    label = val[itemLabelKey].value;\n                }\n                else {\n                    label = val[itemLabelKey];\n                }\n                if (label === undefined) {\n                    label = val.alias ? val.alias : val.id;\n                }\n                const item = itemMap.get(mapId);\n                if (item) {\n                    // This code block is typically entered with filter[resolution]=monthly\n                    itemMap.set(mapId, Object.assign(Object.assign(Object.assign({}, item), getUsageData(val, item)), { // capacity, limit, request, & usage\n                        cluster,\n                        clusters,\n                        date,\n                        delta_percent,\n                        delta_value, cost: getCostData(val, 'cost', item), id, infrastructure: getCostData(val, 'infrastructure', item), label,\n                        source_uuid, supplementary: getCostData(val, 'supplementary', item), type }));\n                }\n                else {\n                    // This code block is typically entered with filter[resolution]=daily\n                    itemMap.set(mapId, Object.assign(Object.assign({}, getUsageData(val)), { // capacity, limit, request, & usage\n                        cluster,\n                        clusters, cost: getCostData(val, 'cost'), date,\n                        delta_percent,\n                        delta_value,\n                        id, infrastructure: getCostData(val, 'infrastructure'), label,\n                        source_uuid, supplementary: getCostData(val, 'supplementary'), type }));\n                }\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\n","import { tagPrefix } from 'api/queries/query';\nexport function getItemLabel({ idKey, report, value }) {\n    let itemLabelKey = String(idKey);\n    if (report.meta && report.meta.group_by) {\n        const group_by = report.meta.group_by;\n        for (const key of Object.keys(group_by)) {\n            if (key.indexOf(tagPrefix)) {\n                const tagPrefixKey = tagPrefix + idKey;\n                if (value.hasOwnProperty(tagPrefixKey)) {\n                    itemLabelKey = tagPrefixKey;\n                }\n            }\n        }\n    }\n    return itemLabelKey;\n}\n","import { EmptyState, EmptyStateBody, EmptyStateVariant, Spinner, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst LoadingStateBase = ({ t }) => {\n    const title = t('loading_state.sources_title');\n    const subTitle = t('loading_state.sources_desc');\n    return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n        React.createElement(Spinner, { size: \"lg\" }),\n        React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, title),\n        React.createElement(EmptyStateBody, null, subTitle)));\n};\nconst LoadingState = withTranslation()(LoadingStateBase);\nexport { LoadingState };\n","import { parse, stringify } from 'qs';\nexport function getProvidersQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseProvidersQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","function getValueForItem(item, options) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    const sortKey = options.key;\n    return item[sortKey];\n}\nexport function sort(array, options) {\n    const { direction = 0 /* asc */ } = options || {};\n    return [...array].sort((a, b) => {\n        const aVal = direction === 0 /* asc */ ? getValueForItem(a, options) : getValueForItem(b, options);\n        const bVal = direction === 0 /* asc */ ? getValueForItem(b, options) : getValueForItem(a, options);\n        if (aVal > bVal) {\n            return -1;\n        }\n        if (aVal < bVal) {\n            return 1;\n        }\n        return 0;\n    });\n}\n","import './emptyValueState.scss';\nimport { MinusIcon } from '@patternfly/react-icons/dist/js/icons/minus-icon';\nimport React from 'react';\nexport const EmptyValueState = () => {\n    return (React.createElement(\"span\", { className: \"emptyValueContainer\" },\n        React.createElement(MinusIcon, null)));\n};\n","import './reportSummary.scss';\nimport { Card, CardBody, CardFooter, CardTitle, Title } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst ReportSummaryBase = ({ children, detailsLink, title, subTitle, status }) => (React.createElement(Card, { className: \"reportSummary\" },\n    React.createElement(CardTitle, null,\n        React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: \"subtitle\" }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { size: \"xs\" }),\n        React.createElement(Skeleton, { className: \"chartSkeleton\", size: \"md\" }),\n        React.createElement(Skeleton, { size: \"sm\" }),\n        React.createElement(Skeleton, { className: \"legendSkeleton\", size: \"xs\" }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst ReportSummary = withTranslation()(ReportSummaryBase);\nexport { ReportSummary };\n","import './reportSummaryAlt.scss';\nimport { Card, CardBody, CardFooter, CardTitle, Grid, GridItem, Title } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst OcpCloudReportSummaryAltBase = ({ children, detailsLink, status, subTitle, tabs, title, }) => (React.createElement(Card, { className: \"reportSummary\" },\n    React.createElement(Grid, { hasGutter: true },\n        React.createElement(GridItem, { xl: 8 },\n            React.createElement(\"div\", { className: \"cost\" },\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, title),\n                    Boolean(subTitle) && React.createElement(\"p\", { className: \"subtitle\" }, subTitle)),\n                React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { size: \"xs\" }),\n                    React.createElement(Skeleton, { className: \"chartSkeleton\", size: \"md\" }),\n                    React.createElement(Skeleton, { size: \"sm\" }),\n                    React.createElement(Skeleton, { className: \"legendSkeleton\", size: \"xs\" }))) : (children)))),\n        React.createElement(GridItem, { xl: 4 },\n            React.createElement(\"div\", { className: \"tops\" }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink))))))));\nconst ReportSummaryAlt = withTranslation()(OcpCloudReportSummaryAltBase);\nexport { ReportSummaryAlt };\n","import './reportSummaryDetails.scss';\nimport { Tooltip } from '@patternfly/react-core';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nconst ReportSummaryDetailsBase = ({ chartType, computedReportItem = 'cost', computedReportItemValue = 'total', costLabel, formatValue, formatOptions, report, requestFormatOptions, requestLabel, reportType, showTooltip = false, showUnits = false, showUsageFirst = false, t, units, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let supplementaryCost = React.createElement(EmptyValueState, null);\n    let infrastructureCost = React.createElement(EmptyValueState, null);\n    let request = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    const hasTotal = report && report.meta && report.meta.total;\n    const hasCost = hasTotal && report.meta.total.cost && report.meta.total.cost.total;\n    const hasCount = hasTotal && report.meta.total.count;\n    const hasSupplementaryCost = hasTotal &&\n        report.meta.total.supplementary &&\n        report.meta.total.supplementary.total &&\n        report.meta.total.supplementary.total.value;\n    const hasInfrastructureCost = hasTotal &&\n        report.meta.total.infrastructure &&\n        report.meta.total.infrastructure[computedReportItemValue] &&\n        report.meta.total.infrastructure[computedReportItemValue].value;\n    const hasRequest = hasTotal && report.meta.total.request;\n    const hasUsage = hasTotal && report.meta.total.usage;\n    if (hasTotal) {\n        cost = formatValue(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD', formatOptions);\n        supplementaryCost = formatValue(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost ? report.meta.total.supplementary.total.units : 'USD', formatOptions);\n        infrastructureCost = formatValue(hasInfrastructureCost ? report.meta.total.infrastructure[computedReportItemValue].value : 0, hasInfrastructureCost ? report.meta.total.infrastructure[computedReportItemValue].units : 'USD', formatOptions);\n        request = formatValue(hasRequest ? report.meta.total.request.value : 0, hasRequest ? report.meta.total.request.units : '', requestFormatOptions ? usageFormatOptions : formatOptions);\n        if (hasUsage && report.meta.total.usage.value >= 0) {\n            usage = formatValue(hasUsage ? report.meta.total.usage.value : 0, hasUsage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n        else {\n            // Workaround for https://github.com/project-koku/koku-ui/issues/1058\n            usage = formatValue(hasUsage ? report.meta.total.usage : 0, hasCount ? report.meta.total.count.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n    }\n    const getCostLayout = (showAltHeroFont = false) => {\n        let value = cost;\n        if (computedReportItem === \"infrastructure\" /* infrastructure */) {\n            value = infrastructureCost;\n        }\n        else if (computedReportItem === \"supplementary\" /* supplementary */) {\n            value = supplementaryCost;\n        }\n        const altHeroFont = showAltHeroFont ? 'Alt' : '';\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            showTooltip ? (React.createElement(Tooltip, { content: t('dashboard.total_cost_tooltip', {\n                    infrastructureCost,\n                    supplementaryCost,\n                }), enableFlip: true },\n                React.createElement(\"div\", { className: `value${altHeroFont}` }, value))) : (React.createElement(\"div\", { className: `value${altHeroFont}` }, value)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, costLabel))));\n    };\n    const getRequestLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasRequest ? report.meta.total.request.units : '';\n        const _units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            React.createElement(\"span\", { className: \"value\" }, request),\n            Boolean(showUnits && (units || (hasRequest && report.meta.total.request.value >= 0))) && (React.createElement(\"span\", { className: \"units\" }, unitsLabel)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, requestLabel))));\n    };\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasUsage ? report.meta.total.usage.units : '';\n        // added as a work-around for azure #1079\n        const _units = unitLookupKey(units ? units : usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            React.createElement(\"span\", { className: \"value\" }, usage),\n            Boolean(showUnits && (units || (hasUsage && report.meta.total.usage.value >= 0))) && (React.createElement(\"span\", { className: \"units\" }, unitsLabel)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (chartType === \"cost\" /* cost */ || chartType === \"supplementary\" /* supplementary */) {\n        return React.createElement(React.Fragment, null, getCostLayout(reportType === \"cost\" /* cost */));\n    }\n    else if (chartType === \"trend\" /* trend */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getCostLayout(reportType === \"cost\" /* cost */)));\n        }\n        return (React.createElement(React.Fragment, null,\n            getCostLayout(reportType === \"cost\" /* cost */),\n            getUsageLayout()));\n    }\n    else if (chartType === \"usage\" /* usage */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getRequestLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getRequestLayout(),\n            getUsageLayout()));\n    }\n    else {\n        return null;\n    }\n};\nconst ReportSummaryDetails = withTranslation()(ReportSummaryDetailsBase);\nexport { ReportSummaryDetails };\n","import './reportSummaryItem.scss';\nimport { Progress, ProgressSize } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nconst ReportSummaryItemBase = ({ label, formatOptions, formatValue, t, totalValue, units, value, }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: \"reportSummaryItem\" },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst ReportSummaryItem = withTranslation()(ReportSummaryItemBase);\nexport { ReportSummaryItem };\n","import './reportSummaryItems.scss';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { getComputedReportItems, } from 'utils/computedReport/getComputedReportItems';\nclass ReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { idKey, report } = this.props;\n        const computedItems = getComputedReportItems({\n            report,\n            idKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [...computedItems.slice(0, otherIndex), ...computedItems.slice(otherIndex + 1), computedItems[otherIndex]];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: \"md\" }),\n                React.createElement(Skeleton, { size: \"md\", className: \"skeleton\" }),\n                React.createElement(Skeleton, { size: \"md\", className: \"skeleton\" }),\n                React.createElement(Skeleton, { size: \"md\", className: \"skeleton\" })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst ReportSummaryItems = withTranslation()(ReportSummaryItemsBase);\nexport { ReportSummaryItems };\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentCostData: {\n        fill: 'none',\n    },\n    currentInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    forecastColorScale: [chart_color_green_200.value],\n    forecastConeColorScale: [chart_color_green_100.value],\n    forecastData: {\n        fill: 'none',\n    },\n    forecastConeData: {\n        fill: chart_color_green_100.value,\n        strokeWidth: 0,\n    },\n    previousCostData: {\n        fill: 'none',\n    },\n    previousInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange, getMaxMinValues, getTooltipContent, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './costChart.styles';\nclass CostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentInfrastructureCostData, currentCostData, forecastData, forecastConeData, previousInfrastructureCostData, previousCostData, showForecast, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            const costInfrastructureTooltipKey = 'chart.cost_infrastructure_legend_tooltip';\n            const costTooltipKey = 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousCostData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentCostData, costTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentCostData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'previousInfrastructureCost',\n                    data: previousInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(previousInfrastructureCostData, costInfrastructureTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousInfrastructureCostData), { stroke: chartStyles.previousColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'currentInfrastructureCost',\n                    data: currentInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(currentInfrastructureCostData, costInfrastructureTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentInfrastructureCostData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n            ];\n            if (showForecast || (forecastData && forecastData.length)) {\n                series.push({\n                    childName: 'forecast',\n                    data: forecastData,\n                    legendItem: {\n                        name: getCostRangeString(forecastData, 'chart.cost_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, 'chart.cost_forecast_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastData), { stroke: chartStyles.forecastColorScale[0] }),\n                    },\n                });\n            }\n            if (showForecast || (forecastConeData && forecastConeData.length)) {\n                series.push({\n                    childName: 'forecastCone',\n                    data: forecastConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastConeColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastConeData), { stroke: chartStyles.forecastConeColorScale[0] }),\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer(series);\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = (series) => {\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.getTooltipLabel, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData(series, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { series } = this.state;\n            return React.createElement(ChartLegend, { data: this.getLegendData(series), height: 25, gutter: 20, name: \"legend\", responsive: false });\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            const dy = datum.y !== null ? formatter(datum.y, datum.units, formatDatumOptions) : undefined;\n            const dy0 = datum.y0 && datum.y0 !== null ? formatter(datum.y0, datum.units, formatDatumOptions) : undefined;\n            if (dy && dy0) {\n                return i18next.t('chart.cost_forecast_cone_tooltip', { value0: dy0, value1: dy });\n            }\n            return dy ? dy : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            const unavailable = []; // API data may not be available (e.g., on 1st of month)\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map(serie => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, forecastData, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast || (forecastData && forecastData.length)) {\n                    if (width > 650 && width < 1130) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width > 450 && width < 650) {\n                        adjustedContainerHeight += 50;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 75;\n                    }\n                }\n                else {\n                    if (width > 450 && width < 725) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 50;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = (series, tooltip = false) => {\n            const { hiddenSeries } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    const data = Object.assign(Object.assign(Object.assign({ childName: s.childName }, s.legendItem), (tooltip && { name: s.legendItem.tooltip })), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                    return data;\n                });\n                return result;\n            }\n            return undefined;\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentInfrastructureCostData !== this.props.currentInfrastructureCostData ||\n            prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.previousInfrastructureCostData !== this.props.previousInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { series } = this.state;\n        const domain = { x: [1, 31] };\n        let maxValue = 0;\n        let minValue = 0;\n        if (series) {\n            series.forEach((s, index) => {\n                if (!this.isSeriesHidden(index) && s.data && s.data.length !== 0) {\n                    const { max, min } = getMaxMinValues(s.data);\n                    maxValue = Math.max(maxValue, max);\n                    if (minValue === 0) {\n                        minValue = min;\n                    }\n                    else {\n                        minValue = Math.min(minValue, min);\n                    }\n                }\n            });\n        }\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        const minY = Math.floor(minValue - minValue * 0.1);\n        const min = minY > 0 ? minY : 0;\n        if (max > 0) {\n            domain.y = [min, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, currentCostData, forecastData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const currentInfrastructureDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const currentCostDate = currentCostData ? getDate(getDateRange(currentCostData, true, true)[1]) : 0;\n        const forecastCostDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        const previousInfrastructureDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousCostData ? getDate(getDateRange(previousCostData, true, true)[1]) : 0;\n        return currentInfrastructureDate > 0 ||\n            currentCostDate > 0 ||\n            previousInfrastructureDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentInfrastructureDate, currentCostDate, forecastCostDate, previousInfrastructureDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !this.isDataAvailable(),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: this.getLegendData(series), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { CostChart };\n","import './reportSummaryCost.scss';\nimport { CostChart } from 'components/charts/costChart';\nimport React from 'react';\nconst ReportSummaryCost = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(CostChart, Object.assign({}, props))));\nexport { ReportSummaryCost };\n","import chart_color_black_200 from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport chart_color_green_100 from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport chart_color_green_200 from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport chart_color_green_300 from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_green_500 from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentMonthData: {\n        fill: 'none',\n    },\n    forecastColorScale: [chart_color_green_200.value],\n    forecastConeColorScale: [chart_color_green_100.value],\n    forecastData: {\n        fill: 'none',\n    },\n    forecastConeData: {\n        fill: chart_color_green_100.value,\n        strokeWidth: 0,\n    },\n    itemsPerRow: 4,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    previousMonthData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange, getMaxMinValues, getTooltipContent, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './trendChart.styles';\nclass TrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, forecastData, forecastConeData, previousData, showForecast, showSupplementaryLabel = false, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? 'chart.usage_legend_label'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_label'\n                    : 'chart.cost_legend_label';\n            const tooltipKey = showUsageLegendLabel\n                ? 'chart.usage_legend_tooltip'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_tooltip'\n                    : 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousData,\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousData, tooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousMonthData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentData,\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentData, tooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentMonthData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n            ];\n            if (showForecast || (forecastData && forecastData.length)) {\n                series.push({\n                    childName: 'forecast',\n                    data: forecastData,\n                    legendItem: {\n                        name: getCostRangeString(forecastData, 'chart.cost_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, 'chart.cost_forecast_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastData), { stroke: chartStyles.forecastColorScale[0] }),\n                    },\n                });\n            }\n            if (showForecast || (forecastConeData && forecastConeData.length)) {\n                series.push({\n                    childName: 'forecastCone',\n                    data: forecastConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastConeColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastConeData), { stroke: chartStyles.forecastConeColorScale[0] }),\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer(series);\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = (series) => {\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.getTooltipLabel, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData(series, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 50,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { series, width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            return (React.createElement(ChartLegend, { data: this.getLegendData(series), gutter: 20, height: 25, itemsPerRow: legendItemsPerRow, name: \"legend\", orientation: width > 150 ? 'horizontal' : 'vertical' }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions, units } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            const dy = datum.y !== null ? formatter(datum.y, units || datum.units, formatDatumOptions) : undefined;\n            const dy0 = datum.y0 && datum.y0 !== null ? formatter(datum.y0, units || datum.units, formatDatumOptions) : undefined;\n            if (dy && dy0) {\n                return i18next.t('chart.cost_forecast_cone_tooltip', { value0: dy0, value1: dy });\n            }\n            return dy ? dy : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            // Todo: Leave one legend item visible at all times?\n            // const { hiddenSeries, series } = this.state;\n            // const leaveVisible = hiddenSeries.size === series.length - 1;\n            // if (leaveVisible && !this.isSeriesHidden(props.index)) {\n            //   return;\n            // }\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            const unavailable = []; // API data may not be available (e.g., on 1st of month)\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map(serie => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, forecastData, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast || (forecastData && forecastData.length)) {\n                    if (width < 700) {\n                        adjustedContainerHeight += 25;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = (series, tooltip = false) => {\n            const { hiddenSeries } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign(Object.assign({ childName: s.childName }, s.legendItem), (tooltip && { name: s.legendItem.tooltip })), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { series } = this.state;\n        const domain = { x: [1, 31] };\n        let maxValue = 0;\n        let minValue = 0;\n        if (series) {\n            series.forEach((s, index) => {\n                if (!this.isSeriesHidden(index) && s.data && s.data.length !== 0) {\n                    const { max, min } = getMaxMinValues(s.data);\n                    maxValue = Math.max(maxValue, max);\n                    if (minValue === 0) {\n                        minValue = min;\n                    }\n                    else {\n                        minValue = Math.min(minValue, min);\n                    }\n                }\n            });\n        }\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        const minY = Math.floor(minValue - minValue * 0.1);\n        const min = minY > 0 ? minY : 0;\n        if (max > 0) {\n            domain.y = [min, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentData, forecastData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        const forecastDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0 ? Math.max(currentDate, forecastDate, previousDate) : 31;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !this.isDataAvailable(),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: this.getLegendData(series), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { TrendChart };\n","import './reportSummaryTrend.scss';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nconst ReportSummaryTrend = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { ReportSummaryTrend };\n","import chart_color_black_200 from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport chart_color_green_100 from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport chart_color_green_200 from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport chart_color_green_300 from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_green_500 from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const chartStyles = {\n    chartContainer: {\n        marginTop: global_spacer_lg.value,\n    },\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_green_300.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_green_400.value,\n        },\n    },\n    itemsPerRow: 2,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        chart_color_black_200.value,\n        chart_color_green_400.value,\n        chart_color_black_200.value,\n        chart_color_green_300.value,\n    ],\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_black_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_black_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    // TBD: No grey scale, yet\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getDateRange, getMaxMinValues, getTooltipContent, getUsageRangeString, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './usageChart.styles';\nclass UsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n            const usageKey = 'chart.usage_legend_label';\n            const usageTooltipKey = 'chart.usage_legend_tooltip';\n            const requestKey = 'chart.requests_legend_label';\n            const requestTooltipKey = 'chart.requests_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousUsage',\n                    data: previousUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(previousUsageData, usageKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(previousUsageData, usageTooltipKey, false, false, 1),\n                    },\n                    style: chartStyles.previousUsageData,\n                },\n                {\n                    childName: 'currentUsage',\n                    data: currentUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(currentUsageData, usageKey, true, false),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[1],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(currentUsageData, usageTooltipKey, false, false),\n                    },\n                    style: chartStyles.currentUsageData,\n                },\n                {\n                    childName: 'previousRequest',\n                    data: previousRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(previousRequestData, requestKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[2],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(previousRequestData, requestTooltipKey, false, false, 1),\n                    },\n                    style: chartStyles.previousRequestData,\n                },\n                {\n                    childName: 'currentRequest',\n                    data: currentRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(currentRequestData, requestKey, true, false),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[3],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(currentRequestData, requestTooltipKey, false, false),\n                    },\n                    style: chartStyles.currentRequestData,\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer(series);\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = (series) => {\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.getTooltipLabel, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData(series, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { series, width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 300 ? chartStyles.itemsPerRow : 1;\n            return (React.createElement(ChartLegend, { data: this.getLegendData(series), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\" }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            return datum.y !== null ? formatter(datum.y, datum.units, formatDatumOptions) : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            const unavailable = []; // API data may not be available (e.g., on 1st of month)\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (width < 480) {\n                    adjustedContainerHeight += 20;\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map(serie => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = (series, tooltip = false) => {\n            const { hiddenSeries } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign(Object.assign({ childName: s.childName }, s.legendItem), (tooltip && { name: s.legendItem.tooltip })), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { series } = this.state;\n        const domain = { x: [1, 31] };\n        let maxValue = 0;\n        let minValue = 0;\n        if (series) {\n            series.forEach((s, index) => {\n                if (!this.isSeriesHidden(index) && s.data && s.data.length !== 0) {\n                    const { max, min } = getMaxMinValues(s.data);\n                    maxValue = Math.max(maxValue, max);\n                    if (minValue === 0) {\n                        minValue = min;\n                    }\n                    else {\n                        minValue = Math.min(minValue, min);\n                    }\n                }\n            });\n        }\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        const minY = Math.floor(minValue - minValue * 0.1);\n        const min = minY > 0 ? minY : 0;\n        if (max > 0) {\n            domain.y = [min, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n        const currentRequestDate = currentRequestData ? getDate(getDateRange(currentRequestData, true, true)[1]) : 0;\n        const currentUsageDate = currentUsageData ? getDate(getDateRange(currentUsageData, true, true)[1]) : 0;\n        const previousRequestDate = previousRequestData ? getDate(getDateRange(previousRequestData, true, true)[1]) : 0;\n        const previousUsageDate = previousUsageData ? getDate(getDateRange(previousUsageData, true, true)[1]) : 0;\n        return currentRequestDate > 0 || currentUsageDate > 0 || previousRequestDate > 0 || previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 75,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !this.isDataAvailable(),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(series), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { UsageChart };\n","import './reportSummaryUsage.scss';\nimport { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nconst ReportSummaryUsage = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { ReportSummaryUsage };\n","export const getReleasePath = () => {\n    const pathName = window.location.pathname.split('/');\n    pathName.shift();\n    let release = '';\n    if (pathName[0] === 'beta') {\n        release = `/beta`;\n    }\n    return release;\n};\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nconst Loading = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(LoadingState, null))));\n};\nexport default withRouter(Loading);\n","import Loading from './loading';\nexport default Loading;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummary.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummary.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummary.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".chartSkeleton{height:125px;margin-bottom:var(--pf-global--spacer--md);margin-top:var(--pf-global--spacer--md)}.legendSkeleton{margin-top:var(--pf-global--spacer--md)}.reportSummary{height:100%}.subtitle{display:inline-block;font-size:var(--pf-global--FontSize--xs);color:var(--pf-global--Color--200);margin-bottom:0}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryAlt.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryAlt.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryAlt.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".chartSkeleton{height:175px;margin-bottom:var(--pf-global--spacer--md);margin-top:var(--pf-global--spacer--md)}.cost{flex-grow:1;min-height:470px;margin-tight:var(--pf-global--spacer--md)}.legendSkeleton{margin-top:var(--pf-global--spacer--md)}.reportSummary{height:100%}.subtitle{display:inline-block;font-size:var(--pf-global--FontSize--xs);color:var(--pf-global--Color--200);margin-bottom:0}.tops{margin-top:var(--pf-global--spacer--lg)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryDetails.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryDetails.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryDetails.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".reportSummaryDetails{margin-bottom:var(--pf-global--spacer--md);display:flex;align-Items:flex-end}.text{padding-bottom:var(--pf-global--spacer--sm);line-height:var(--pf-global--LineHeight--sm);font-size:var(--pf-global--FontSize--xs)}.units{padding-left:var(--pf-global--spacer--xs);padding-bottom:var(--pf-global--spacer--sm);line-height:var(--pf-global--LineHeight--sm);font-size:var(--pf-global--FontSize--xs);white-space:nowrap}.value{color:var(--pf-global--Color--100);margin-right:var(--pf-global--spacer--sm);font-size:var(--pf-global--FontSize--2xl)}.valueAlt{color:var(--pf-global--Color--100);margin-right:var(--pf-global--spacer--sm);font-size:var(--pf-global--FontSize--4xl)}.valueContainer{display:inline-block;margin-bottom:var(--pf-global--spacer--md);width:50%;word-Wrap:break-word}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./emptyValueState.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./emptyValueState.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./emptyValueState.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".emptyValueContainer{font-size:var(--pf-global--FontSize--sm)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryItem.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryItem.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryItem.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".reportSummaryItem:not(:last-child){margin-bottom:var(--pf-global--spacer--md)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryItems.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryItems.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryItems.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".skeleton{margin-top:var(--pf-global--spacer--md)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryCost.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryCost.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryCost.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".chart{margin-bottom:var(--pf-global--spacer--sm)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".chartOverride :not(foo) svg{overflow:visible}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryTrend.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryTrend.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryTrend.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".chart{margin-nottom:var(--pf-global--spacer--sm)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryUsage.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryUsage.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryUsage.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".chart{margin-bottom:var(--pf-global--spacer--sm)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./costIcon.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./costIcon.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./costIcon.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".cost-icon{height:120px}.cost-icon.st0{fill:blue !important}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","module.exports = __webpack_public_path__ + \"8a2acb5e9233030023f599e0f04ebd7f.svg\";","import './costIcon.scss';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst icon = require('./Cost-icon.svg');\nconst CostIcon = ({ className, t }) => {\n    return React.createElement(\"img\", { className: `cost-icon ${className}`, src: icon, alt: t('cost_management'), \"aria-hidden\": \"true\" });\n};\nexport default withTranslation()(CostIcon);\n","import CostIcon from './costIcon';\nexport default CostIcon;\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    iconSpacer: {\n        marginLeft: global_spacer_xs.value,\n    },\n    viewSources: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/js/icons/plus-circle-icon';\nimport CostIcon from 'components/icons/costIcon';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { withRouter } from 'react-router';\nimport { getReleasePath } from 'utils/pathname';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDocLink = (textKey, urlKey) => {\n            const { t } = this.props;\n            return (React.createElement(\"a\", { href: t(urlKey), rel: \"noreferrer\", target: \"_blank\" },\n                t(textKey),\n                React.createElement(\"span\", { style: styles.iconSpacer },\n                    React.createElement(ExternalLinkAltIcon, null))));\n        };\n        this.getRouteToSources = () => {\n            const release = getReleasePath();\n            return `${release}/settings/sources`;\n        };\n    }\n    render() {\n        const { providerType, t } = this.props;\n        let descKey = 'no_providers_state.overview_desc';\n        let titleKey = 'no_providers_state.overview_title';\n        let docUrlKey;\n        let icon;\n        let textKey;\n        switch (providerType) {\n            case \"aws\" /* aws */:\n                descKey = 'no_providers_state.aws_desc';\n                titleKey = 'no_providers_state.aws_title';\n                break;\n            case \"azure\" /* azure */:\n                descKey = 'no_providers_state.azure_desc';\n                titleKey = 'no_providers_state.azure_title';\n                break;\n            case \"gcp\" /* gcp */:\n                descKey = 'no_providers_state.gcp_desc';\n                titleKey = 'no_providers_state.gcp_title';\n                break;\n            case \"ocp\" /* ocp */:\n                descKey = 'no_providers_state.ocp_desc';\n                docUrlKey = 'docs.add_ocp_sources';\n                textKey = 'no_providers_state.ocp_add_sources';\n                titleKey = 'no_providers_state.ocp_title';\n                break;\n            default:\n                icon = CostIcon;\n        }\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: icon ? icon : PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, t(titleKey)),\n            React.createElement(EmptyStateBody, null, t(descKey)),\n            docUrlKey && textKey ? (React.createElement(\"div\", { style: styles.viewSources }, this.getDocLink(textKey, docUrlKey))) : (React.createElement(Button, { variant: \"primary\", component: \"a\", href: this.getRouteToSources() }, t('no_providers_state.get_started')))));\n    }\n}\nconst NoProvidersState = withRouter(withTranslation()(NoProvidersStateBase));\nexport { NoProvidersState };\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { NoProvidersState } from './noProvidersState';\nconst NoProviders = ({ providerType, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(NoProvidersState, { providerType: providerType }))));\n};\nexport default withRouter(NoProviders);\n","import NoProviders from './noProviders';\nexport default NoProviders;\n"],"sourceRoot":""}