{"version":3,"sources":["webpack:///./src/testIds.ts","webpack:///./src/utils/formatValue.ts","webpack:///./src/components/charts/commonChart/chartUtils.ts","webpack:///./src/utils/getComputedOcpReportItems.ts","webpack:///./src/utils/sort.ts","webpack:///./src/utils/getComputedAwsReportItems.ts","webpack:///./src/components/charts/trendChart/trendChart.styles.ts","webpack:///./src/components/charts/trendChart/trendChart.tsx","webpack:///./src/components/state/errorState/errorState.styles.ts","webpack:///./src/components/state/errorState/errorState.tsx","webpack:///./src/components/state/loadingState/loadingState.styles.ts","webpack:///./src/components/state/loadingState/loadingState.tsx","webpack:///./src/components/state/noProvidersState/noProvidersState.styles.ts","webpack:///./src/components/state/noProvidersState/noProvidersState.tsx","webpack:///./src/components/charts/usageChart/usageChart.styles.ts","webpack:///./src/components/charts/usageChart/usageChart.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummary.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummary.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryAlt.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryAlt.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryDetails.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryDetails.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryItem.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryItem.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryItems.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryTrend.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryTrend.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummary.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummary.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryAlt.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryAlt.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryDetails.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryDetails.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryItem.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryItem.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryItems.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryTrend.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryTrend.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryUsage.tsx","webpack:///./node_modules/date-fns/get_month/index.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/@patternfly/patternfly/components/Tabs/tabs.css.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Tabs/TabContent.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Tabs/Tabs.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Tabs/Tab.js","webpack:///./node_modules/react-router-dom/es/Link.js","webpack:///./src/components/link/link.tsx","webpack:///./src/pages/awsDashboard/awsDashboardWidget.styles.ts","webpack:///./src/pages/awsDashboard/awsDashboardWidget.tsx","webpack:///./src/pages/awsDashboard/awsDashboard.tsx","webpack:///./src/pages/ocpDashboard/ocpDashboardWidget.styles.ts","webpack:///./src/pages/ocpDashboard/ocpDashboardWidget.tsx","webpack:///./src/pages/ocpDashboard/ocpDashboard.tsx","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummary.styles.ts","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummary.tsx","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryAlt.styles.ts","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryAlt.tsx","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryDetails.styles.ts","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryDetails.tsx","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryItem.styles.ts","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryItem.tsx","webpack:///./src/utils/getComputedOcpOnAwsReportItems.ts","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryItems.tsx","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryTrend.styles.ts","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryTrend.tsx","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryUsage.tsx","webpack:///./src/pages/ocpOnAwsDashboard/ocpOnAwsDashboardWidget.styles.ts","webpack:///./src/pages/ocpOnAwsDashboard/ocpOnAwsDashboardWidget.tsx","webpack:///./src/pages/ocpOnAwsDashboard/ocpOnAwsDashboard.tsx","webpack:///./src/pages/overview/overview.tsx","webpack:///./src/pages/overview/index.ts"],"names":["getTestProps","id","data-testid","testIds","details","historical_data_btn","tag_lnk","show_more_btn","export","cancel_btn","submit_btn","login","alert","form","username_input","password_input","submit","masthead","username","sidebarToggle","logout","onboarding","btn_cancel","btn_back","btn_continue","btn_close","type_selector","type_opt_aws","type_opt_ocp","type_opt_non","name_input","check_box_1","check_box_2","check_box_3","check_box_4","check_box_5","check_box_all","s3_input","clusterid_input","arn_input","providers","add_btn","bucket_input","empty_state_add_btn","resource_name_input","cluster_id_input","type_input","sidebar","nav","link","backdrop","unitLookupKey","unit","split","toLowerCase","formatValue","value","options","lookup","fValue","formatCurrency","formatStorage","unknownTypeFormatter","_unit","fractionDigits","toFixed","toLocaleString","style","currency","minimumFractionDigits","maximumFractionDigits","transformAwsReport","report","type","key","reportItem","items","idKey","sortKey","sortDirection","computedItems","Object","utils_getComputedAwsReportItems__WEBPACK_IMPORTED_MODULE_6__","map","i","createDatum","reduce","acc","d","prevValue","length","y","transformOcpReport","utils_getComputedOcpReportItems__WEBPACK_IMPORTED_MODULE_7__","transformOcpOnAwsReport","computedItem","n","x","date_fns_get_date__WEBPACK_IMPORTED_MODULE_2___default","label","Number","parseFloat","isInt","name","units","getDateRange","datums","firstOfMonth","lastOfMonth","start","end","today","Date","date_fns_start_of_month__WEBPACK_IMPORTED_MODULE_3___default","getDatumDateRange","setDate","lastDate","date_fns_end_of_month__WEBPACK_IMPORTED_MODULE_0___default","getDate","getDateRangeString","current","monthName","date_fns_format__WEBPACK_IMPORTED_MODULE_1___default","startDate","endDate","i18next__WEBPACK_IMPORTED_MODULE_4__","t","date","getDateString","month","getMaxValue","max","forEach","datum","getTooltipContent","utils_formatValue__WEBPACK_IMPORTED_MODULE_5__","getTooltipLabel","formatOptions","toString","day","getComputedOcpReportItems","labelKey","_sort__WEBPACK_IMPORTED_MODULE_0__","getUnsortedComputedOcpReportItems","direction","itemMap","Map","visitDataPoint","dataPoint","values","capacity","cost","cluster_alias","limit","request","usage","get","set","assign","deltaPercent","delta_percent","deltaValue","delta_value","Array","data","from","getIdKeyForGroupBy","groupBy","project","cluster","node","getValueForItem","item","sort","array","a","b","aVal","bVal","__webpack_require__","__webpack_exports__","getComputedAwsReportItems","getUnsortedComputedAwsReportItems","total","account_alias","account","instance_type","region","service","chartStyles","colorScale","esm","legend","labels","fontFamily","fontSize","minWidth","previousMonth","fill","stroke","currentMonth","yAxis","axisLabel","padding","grid","ticks","tickLabels","xAxis","styles","StyleSheet","create","chartContainer",":not(foo) svg","overflow","display","marginTop","trendChart_TrendChart","react_default","Component","[object Object]","super","arguments","this","containerRef","createRef","state","width","initDatum","currentData","previousData","title","props","legendData","push","chartUtils","symbol","charts","show","onClick","handleCostLegendClick","setState","newDatum","index","handleResize","clientWidth","getChart","createElement","ChartArea","getLegend","ChartLegend","containerComponent","ChartContainer","responsive","events","target","eventHandlers","mutation","gutter","height","orientation","theme","ChartTheme","light","blue","formatDatumValue","formatDatumOptions","setTimeout","window","addEventListener","prevProps","removeEventListener","domain","maxCurrent","maxPrevious","maxValue","Math","ceil","previousDate","get_date_default","currentDate","result","trim","container","ChartVoronoiContainer","voronoiDimension","legendWidth","getDomain","getEndDate","midDate","floor","className","ref","Chart","Boolean","chart","ChartAxis","tickValues","dependentAxis","isLegendVisible","justifyContent","ErrorState","es","error","icon","error_circle_o_icon","subTitle","response","status","ban_icon","EmptyState","EmptyStateIcon","Title","size","EmptyStateBody","LoadingState","binoculars_icon","mapStateToProps","common","NoProvidersState","react_redux_es","openProvidersModal","openModal","getAddSourceButton","Button","variant","primary","dollar_sign_icon","currentRequestData","strokeDasharray","currentUsageData","previousRequestData","previousUsageData","currentColorScale","previousColorScale","marginBottom","usageChart_UsageChart","previousLegendData","previous","handlePreviousLegendClick","currentLegendData","handleCurrentLegendClick","maxCurrentRequest","maxCurrentUsage","maxPreviousRequest","maxPreviousUsage","currentRequestDate","currentUsageDate","previousRequestDate","previousUsageDate","isPreviousLegendVisible","isCurrentLegendVisible","reportSummary","subtitle","color","var","AwsReportSummary","detailsLink","children","Card","CardHeader","CardBody","CardFooter","awsReportSummaryAlt_styles_styles","flexGrow","minHeight","tops","AwsReportSummaryAlt","tabs","Grid","GridItem","lg","xl","Fragment","awsReportSummaryDetails_styles_styles","reportSummaryDetails","alignItems","marginRight","text","paddingBottom","lineHeight","AwsReportSummaryDetails","reportType","meta","awsReportSummaryItem_styles_styles","reportSummaryItem",":not(:last-child)","test","AwsReportSummaryItem","totalValue","percentVal","percentLabel","Progress","sm","defaultProps","v","awsReportSummaryItems_AwsReportSummaryItems","nextProps","otherIndex","findIndex","includes","slice","getItems","awsReportSummaryTrend_styles_styles","AwsReportSummaryTrend","trendChart","OcpReportSummary","ocpReportSummaryAlt_styles_styles","OcpReportSummaryAlt","ocpReportSummaryDetails_styles_styles","requestedValue","marginLeft","titleContainer","usageText","OcpReportSummaryDetails","requestLabel","requestValue","ocpReportSummaryItem_styles_styles","OcpReportSummaryItem","ocpReportSummaryItems_OcpReportSummaryItems","ocpReportSummaryTrend_styles_styles","OcpReportSummaryTrend","OcpReportSummaryUsage","usageChart","parse","module","exports","dirtyDate","getMonth","tabs_css","_extends","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","propTypes","activeKey","prop_types_default","number","child","string","isRequired","TabContent_TabContent","_ref","hidden","eventKey","concat","aria-labelledby","role","tabIndex","Tabs_TabContent","_typeof","obj","Symbol","iterator","constructor","Tabs_extends","Tabs_objectWithoutProperties","Tabs_objectWithoutPropertiesLoose","_defineProperties","descriptor","enumerable","configurable","writable","defineProperty","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","p","_defineProperty","Tabs_propTypes","onSelect","func","isFilled","bool","isSecondary","leftScrollAriaLabel","rightScrollAriaLabel","Tabs_defaultProps","Tabs_Tabs","_React$Component","Tabs","_getPrototypeOf2","_this","instance","Constructor","TypeError","_classCallCheck","_len","args","_key","showLeftScrollButton","showRightScrollButton","highlightLeftScrollButton","highlightRightScrollButton","util","tabList","selectedTab","firstChild","lastChild","search","sideOutOfView","constants","LEFT","BOTH","RIGHT","firstElementInView","lastElementOutOfView","childrenArr","scrollLeft","scrollWidth","lastElementInView","firstElementOutOfView","protoProps","staticProps","subClass","superClass","_inherits","event","handleScrollButtons","document","_this2","_this$props","_this$state","modifiers","tabsSecondary","startCurrent","endCurrent","tabsScrollButton","aria-label","angle_left_icon","tabsList","onScroll","tabsItem","tabsButton","handleTabClick","aria-controls","scrollRight","angle_right_icon","components_Tabs_Tabs","Tab_objectWithoutProperties","Tab_objectWithoutPropertiesLoose","Tab_propTypes","Tab_Tab","Tabs_Tab","Link_extends","Link_possibleConstructorReturn","isModifiedEvent","metaKey","altKey","ctrlKey","shiftKey","Link_Link","Link","_temp","Link_classCallCheck","handleClick","defaultPrevented","button","preventDefault","history","context","router","replace","to","Link_inherits","render","_props","innerRef","Link_objectWithoutProperties","browser_default","undefined","location","history_es","href","createHref","oneOfType","object","contextTypes","shape","es_Link","CastedButton","link_Link","component","getIdKeyForTab","tab","widgetId","widget","awsDashboard","selectWidget","queries","selectWidgetQueries","currentQuery","previousQuery","tabsQuery","currentReport","awsReports","selectReport","currentReportFetchStatus","selectReportFetchStatus","previousReport","tabsReport","mapDispatchToProps","fetchReports","fetchWidgetReports","updateTab","changeWidgetTab","AwsDashboardWidget","activeTabKey","buildDetailsLink","awsQuery","group_by","order_by","availableTabs","trend","awsReportSummary","utils_formatValue","titleKey","getDetails","getDetailsLabel","labelKeyContext","getDetailsLink","currentTab","isDetailsLink","getDetailsLinkTitle","getHorizontalLayout","getSubTitle","getTabs","getTitle","get_month_default","format_default","start_of_month_default","count","getTab","getTabTitle","getTabItem","topItems","getVerticalLayout","isHorizontal","awsDashboard_mapStateToProps","selectWidgets","widgets","selectCurrentWidgets","awsDashboard_awsDashboard","ocpDashboardWidget_styles_styles","ocpDashboardWidget_getIdKeyForTab","ocpDashboardWidget_mapStateToProps","ocpDashboard","ocpReports","ocpDashboardWidget_mapDispatchToProps","OcpDashboardWidget","ocpQuery","ocpReportSummary","getRequestLabel","requestLabelKey","ocpDashboard_mapStateToProps","ocpDashboard_ocpDashboard","ocpOnAwsReportSummary_styles_styles","OcpOnAwsReportSummary","ocpOnAwsReportSummaryAlt_styles_styles","OcpOnAwsReportSummaryAlt","ocpOnAwsReportSummaryDetails_styles_styles","OcpOnAwsReportSummaryDetails","awsReportType","ocpOnAwsReportSummaryItem_styles_styles","OcpOnAwsReportSummaryItem","getComputedOcpOnAwsReportItems","getUnsortedComputedOcpOnAwsReportItems","ocpOnAwsReportSummaryItems_OcpOnAwsReportSummaryItems","ocpOnAwsReportSummaryTrend_styles_styles","OcpOnAwsReportSummaryTrend","OcpOnAwsReportSummaryUsage","ocpOnAwsDashboardWidget_styles_styles","ocpOnAwsDashboardWidget_getIdKeyForTab","ocpOnAwsDashboardWidget_mapStateToProps","ocpOnAwsDashboard","ocpOnAwsReports","ocpOnAwsDashboardWidget_mapDispatchToProps","OcpOnAwsDashboardWidget","ocpOnAwsQuery","ocpOnAwsDashboard_mapStateToProps","ocpOnAwsDashboard_ocpOnAwsDashboard","overview_getIdKeyForTab","overview_mapStateToProps","awsProvidersQueryString","providersQuery","awsProviders","selectProviders","awsProvidersError","selectProvidersError","awsProvidersFetchStatus","selectProvidersFetchStatus","ocpProvidersQueryString","ocpProviders","ocpProvidersError","ocpProvidersFetchStatus","Overview","secondary","isLoading","noAwsProviders","noOcpProviders","noProviders","page-type","errorState","noProvidersState","loadingState","react_hot_loader__WEBPACK_IMPORTED_MODULE_0__","_overview__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"561616d6f25c2e98adb8.bundle.js","sourcesContent":["export const testIdProp = 'data-testid';\nexport const getTestProps = (id) => ({ [testIdProp]: id });\nexport const testIds = {\n    details: {\n        historical_data_btn: 'historical-data-btn',\n        tag_lnk: 'tag-lnk',\n        show_more_btn: 'show-more-btn',\n    },\n    export: {\n        cancel_btn: 'cancel-btn',\n        submit_btn: 'submit-btn',\n    },\n    login: {\n        alert: 'alert',\n        form: 'login-form',\n        username_input: 'username-input',\n        password_input: 'password-input',\n        submit: 'submit',\n    },\n    masthead: {\n        masthead: 'masthead',\n        username: 'username',\n        sidebarToggle: 'sidebar-toggle',\n        logout: 'logout',\n    },\n    onboarding: {\n        btn_cancel: 'btn-cancel',\n        btn_back: 'btn-back',\n        btn_continue: 'btn-continue',\n        btn_close: 'btn-close',\n        type_selector: 'type-selector',\n        type_opt_aws: 'type-option-aws',\n        type_opt_ocp: 'type-option-ocp',\n        type_opt_non: 'type-option-non',\n        name_input: 'name-input',\n        check_box_1: 'check-box-1',\n        check_box_2: 'check-box-2',\n        check_box_3: 'check-box-3',\n        check_box_4: 'check-box-4',\n        check_box_5: 'check-box-5',\n        check_box_all: 'check-box-all',\n        s3_input: 's3-input',\n        clusterid_input: 'clusterid-input',\n        arn_input: 'arn-input',\n    },\n    providers: {\n        add_btn: 'add-btn',\n        bucket_input: 'bucket-input',\n        cancel_btn: 'cancel-btn',\n        empty_state_add_btn: 'empty_state_add-btn',\n        name_input: 'provider-name-input',\n        resource_name_input: 'provider-resource-name-input',\n        cluster_id_input: 'provider-cluster-id-input',\n        submit_btn: 'submit-btn',\n        type_input: 'provider-type-input',\n    },\n    sidebar: {\n        nav: 'vertical-nav',\n        link: 'vertical-nav-link',\n        backdrop: 'sidebar-backdrop',\n    },\n};\n","export const unitLookupKey = unit => unit ? unit.split('-')[0].toLowerCase() : '';\nexport const formatValue = (value, unit, options = {}) => {\n    const lookup = unitLookupKey(unit);\n    const fValue = value || 0;\n    switch (lookup) {\n        case 'usd':\n            return formatCurrency(fValue, lookup, options);\n        case 'gb':\n            return formatStorage(fValue, lookup, options);\n        default:\n            return unknownTypeFormatter(fValue, lookup, options);\n    }\n};\nconst unknownTypeFormatter = (value, _unit, { fractionDigits } = {}) => {\n    return value.toFixed(fractionDigits);\n};\nexport const formatCurrency = (value, _unit, { fractionDigits = 2 } = {}) => {\n    let fValue = value;\n    if (!value) {\n        fValue = 0;\n    }\n    return fValue.toLocaleString('en', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatStorage = (value, _unit, { fractionDigits = 2 } = {}) => {\n    return value.toFixed(fractionDigits);\n};\n","import endOfMonth from 'date-fns/end_of_month';\nimport format from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport startOfMonth from 'date-fns/start_of_month';\nimport i18next from 'i18next';\nimport { unitLookupKey, } from 'utils/formatValue';\nimport { getComputedAwsReportItems, } from 'utils/getComputedAwsReportItems';\nimport { getComputedOcpReportItems, } from 'utils/getComputedOcpReportItems';\nexport function transformAwsReport(report, type = 1 /* daily */, key = 'date', reportItem = 'total') {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        report,\n        idKey: key,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedAwsReportItems(items);\n    if (type === 1 /* daily */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    if (type === 2 /* monthly */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    return computedItems.reduce((acc, d) => {\n        const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n        return [...acc, createDatum(prevValue + d[reportItem], d, key)];\n    }, []);\n}\nexport function transformOcpReport(report, type = 1 /* daily */, key = 'date', reportItem = 'cost') {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        report,\n        idKey: key,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedOcpReportItems(items);\n    if (type === 1 /* daily */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    if (type === 2 /* monthly */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    return computedItems.reduce((acc, d) => {\n        const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n        return [...acc, createDatum(prevValue + d[reportItem], d, key)];\n    }, []);\n}\nexport function transformOcpOnAwsReport(report, type = 1 /* daily */, key = 'date', reportItem = 'cost') {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        report,\n        idKey: key,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedOcpReportItems(items);\n    if (type === 1 /* daily */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    if (type === 2 /* monthly */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    return computedItems.reduce((acc, d) => {\n        const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n        return [...acc, createDatum(prevValue + d[reportItem], d, key)];\n    }, []);\n}\nexport function createDatum(value, computedItem, idKey = 'date') {\n    const xVal = idKey === 'date' ? getDate(computedItem.id) : computedItem.label;\n    const yVal = isFloat(value)\n        ? parseFloat(value.toFixed(2))\n        : isInt(value)\n            ? value\n            : 0;\n    return {\n        x: xVal,\n        y: yVal,\n        key: computedItem.id,\n        name: computedItem.id,\n        units: computedItem.units,\n    };\n}\nexport function getDatumDateRange(datums) {\n    if (!(datums && datums.length)) {\n        const today = new Date();\n        const firstOfMonth = startOfMonth(today);\n        return [firstOfMonth, today];\n    }\n    const start = new Date(datums[0].key + 'T00:00:00');\n    const end = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    return [start, end];\n}\nexport function getDateRange(datums, firstOfMonth = true, lastOfMonth = false) {\n    const [start, end] = getDatumDateRange(datums);\n    // Show the date range we are trying to cover (i.e., days 1-30/31)\n    if (firstOfMonth && start.setDate) {\n        start.setDate(1);\n    }\n    if (lastOfMonth && start.setDate) {\n        const lastDate = endOfMonth(start).getDate();\n        end.setDate(lastDate);\n    }\n    return [start, end];\n}\nexport function getDateRangeString(datums, firstOfMonth = false, lastOfMonth = false, current = false) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth);\n    const monthName = format(start, 'MMM');\n    const startDate = getDate(start);\n    const endDate = getDate(end);\n    if (current) {\n        return i18next.t(`date.range_current`, {\n            date: getDateString(startDate),\n            month: startDate !== endDate ? monthName : '',\n        });\n    }\n    return i18next.t(`date.range_full`, {\n        endDate: getDateString(endDate),\n        startDate: getDateString(startDate),\n        month: startDate !== endDate ? monthName : '',\n    });\n}\nexport function getMaxValue(datums) {\n    let max = 0;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            if (datum.y > max) {\n                max = datum.y;\n            }\n        });\n    }\n    return max;\n}\nexport function getTooltipContent(formatValue) {\n    return function labelFormatter(value, unit = null, options = {}) {\n        const lookup = unitLookupKey(unit);\n        switch (lookup) {\n            case 'hrs':\n            case 'gb':\n                return i18next.t(`units.${lookup}`, {\n                    value: `${formatValue(value, unit, options)}`,\n                });\n            default:\n                return `${formatValue(value, unit, options)}`;\n        }\n    };\n}\nexport function getTooltipLabel(datum, formatValue, formatOptions, idKey = 'date') {\n    if (!datum.key) {\n        return '';\n    }\n    if (idKey === 'date') {\n        const date = format(datum.key, 'MMM D YYYY');\n        return `${date}: ${formatValue(datum.y, datum.units, formatOptions)}`;\n    }\n    return datum.key.toString();\n}\nfunction isInt(n) {\n    return Number(n) === n && n % 1 === 0;\n}\nfunction isFloat(n) {\n    return Number(n) === n && n % 1 !== 0;\n}\nfunction getDateString(date) {\n    const day = date % 10;\n    if (day === 1) {\n        return i18next.t(`date.first`, { date });\n    }\n    else if (day === 2) {\n        return i18next.t(`date.second`, { date });\n    }\n    else if (day === 3) {\n        return i18next.t(`date.third`, { date });\n    }\n    return i18next.t(`date.tenth`, { date });\n}\n","import { sort } from './sort';\nexport function getComputedOcpReportItems({ report, idKey, labelKey = idKey, sortKey = 'cost', sortDirection = 0 /* asc */, }) {\n    return sort(getUnsortedComputedOcpReportItems({\n        report,\n        idKey,\n        labelKey,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nexport function getUnsortedComputedOcpReportItems({ report, idKey, labelKey = idKey, }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint.values) {\n            dataPoint.values.forEach(value => {\n                const capacity = value.capacity ? value.capacity.value : 0;\n                const cost = value.cost ? value.cost.value : 0;\n                const id = value[idKey];\n                let label;\n                if (labelKey === 'cluster' && value.cluster_alias) {\n                    label = value.cluster_alias;\n                }\n                else if (value[labelKey] instanceof Object) {\n                    label = value[labelKey].value;\n                }\n                else {\n                    label = value[labelKey];\n                }\n                const limit = value.limit ? value.limit.value : 0;\n                const request = value.request ? value.request.value : 0;\n                const usage = value.usage ? value.usage.value : 0;\n                const units = value.usage ? value.usage.units : value.cost.units;\n                if (!itemMap.get(id)) {\n                    itemMap.set(id, {\n                        capacity,\n                        cost,\n                        deltaPercent: value.delta_percent,\n                        deltaValue: value.delta_value,\n                        id,\n                        label,\n                        limit,\n                        request,\n                        units,\n                        usage,\n                    });\n                    return;\n                }\n                itemMap.set(id, Object.assign({}, itemMap.get(id), { capacity: itemMap.get(id).capacity + capacity, cost: itemMap.get(id).cost + cost, limit: itemMap.get(id).limit + limit, request: itemMap.get(id).request + request, usage: itemMap.get(id).usage + usage }));\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\nexport function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    return 'date';\n}\n","function getValueForItem(item, options) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    const sortKey = options.key;\n    return item[sortKey];\n}\nexport function sort(array, options) {\n    const { direction = 0 /* asc */ } = options || {};\n    return [...array].sort((a, b) => {\n        const aVal = direction === 0 /* asc */\n            ? getValueForItem(a, options)\n            : getValueForItem(b, options);\n        const bVal = direction === 0 /* asc */\n            ? getValueForItem(b, options)\n            : getValueForItem(a, options);\n        if (aVal > bVal) {\n            return -1;\n        }\n        if (aVal < bVal) {\n            return 1;\n        }\n        return 0;\n    });\n}\n","import { sort } from './sort';\nexport function getComputedAwsReportItems({ report, idKey, labelKey = idKey, sortKey = 'total', sortDirection = 0 /* asc */, }) {\n    return sort(getUnsortedComputedAwsReportItems({\n        report,\n        idKey,\n        labelKey,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nexport function getUnsortedComputedAwsReportItems({ report, idKey, labelKey = idKey, }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint.values) {\n            dataPoint.values.forEach(value => {\n                const total = value.usage ? value.usage.value : value.cost.value;\n                const id = value[idKey];\n                let label;\n                if (value[labelKey] instanceof Object) {\n                    label = value[labelKey].value;\n                }\n                else {\n                    label = value[labelKey];\n                }\n                if (labelKey === 'account' && value.account_alias) {\n                    label = value.account_alias;\n                }\n                if (!itemMap.get(id)) {\n                    itemMap.set(id, {\n                        deltaPercent: value.delta_percent,\n                        deltaValue: value.delta_value,\n                        id,\n                        total,\n                        label,\n                        units: value.usage ? value.usage.units : value.cost.units,\n                    });\n                    return;\n                }\n                itemMap.set(id, Object.assign({}, itemMap.get(id), { total: itemMap.get(id).total + total }));\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\nexport function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.account) {\n        return 'account';\n    }\n    if (groupBy.instance_type) {\n        return 'instance_type';\n    }\n    if (groupBy.region) {\n        return 'region';\n    }\n    if (groupBy.service) {\n        return 'service';\n    }\n    return 'date';\n}\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_disabled_color_200, global_FontFamily_sans_serif, global_FontSize_md, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    colorScale: [\n        global_disabled_color_200.value,\n        '#A2DA9C',\n        '#88D080',\n        '#6EC664',\n        '#519149',\n        '#3C6C37',\n    ],\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 14,\n        },\n        minWidth: 175,\n    },\n    previousMonth: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    currentMonth: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = StyleSheet.create({\n    chartContainer: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n    legend: {\n        display: 'inline-block',\n        fontSize: global_FontSize_md.value,\n        marginTop: global_spacer_lg.value,\n        minWidth: '175px',\n    },\n});\n","import { Chart, ChartArea, ChartAxis, ChartContainer, ChartLegend, ChartTheme, ChartVoronoiContainer, } from '@patternfly/react-charts';\nimport { css } from '@patternfly/react-styles';\nimport { getDateRange, getDateRangeString, getMaxValue, getTooltipContent, getTooltipLabel, } from 'components/charts/commonChart/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport React from 'react';\nimport { chartStyles, styles } from './trendChart.styles';\nclass TrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, previousData, title } = this.props;\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const legendData = [];\n            if (previousData) {\n                legendData.push({\n                    name: getDateRangeString(previousData, true, true),\n                    symbol: {\n                        type: 'minus',\n                    },\n                });\n            }\n            if (currentData) {\n                legendData.push({\n                    name: getDateRangeString(currentData, true, false, true),\n                    symbol: {\n                        type: 'minus',\n                    },\n                });\n            }\n            const cost = {\n                charts: [\n                    {\n                        data: previousData,\n                        show: true,\n                        style: chartStyles.previousMonth,\n                    },\n                    {\n                        data: currentData,\n                        show: true,\n                        style: chartStyles.currentMonth,\n                    },\n                ],\n                legend: {\n                    colorScale: chartStyles.colorScale,\n                    data: legendData,\n                    onClick: this.handleCostLegendClick,\n                    title,\n                },\n            };\n            this.setState({\n                datum: {\n                    cost,\n                },\n            });\n        };\n        this.handleCostLegendClick = props => {\n            const { datum } = this.state;\n            const newDatum = Object.assign({}, datum);\n            if (props.index >= 0 && newDatum.cost.charts.length) {\n                newDatum.cost.charts[props.index].show = !newDatum.cost.charts[props.index].show;\n                this.setState({ datum: newDatum });\n            }\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (datum, index) => {\n            if (datum.data && datum.data.length && datum.show) {\n                return (React.createElement(ChartArea, { data: datum.data, key: `trend-chart-${index}`, style: datum.style }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getLegend = (datum, width) => {\n            if (datum && datum.data && datum.data.length) {\n                return (React.createElement(ChartLegend, { colorScale: datum.colorScale, containerComponent: React.createElement(ChartContainer, { responsive: false }), data: datum.data, events: [\n                        {\n                            target: 'data',\n                            eventHandlers: {\n                                onClick: () => {\n                                    return [\n                                        {\n                                            target: 'data',\n                                            mutation: props => {\n                                                datum.onClick(props);\n                                                return null;\n                                            },\n                                        },\n                                    ];\n                                },\n                            },\n                        },\n                    ], gutter: 5, height: 25, orientation: width > 150 ? 'horizontal' : 'vertical', style: chartStyles.legend, theme: ChartTheme.light.blue, width: width }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTooltipLabel = (datum) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            return getTooltipLabel(datum, getTooltipContent(formatDatumValue), formatDatumOptions, 'date');\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentData, previousData } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrent = currentData ? getMaxValue(currentData) : 0;\n        const maxPrevious = previousData ? getMaxValue(previousData) : 0;\n        const maxValue = Math.max(maxCurrent, maxPrevious);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentData, previousData } = this.props;\n        const previousDate = previousData\n            ? getDate(getDateRange(previousData, true, true)[1])\n            : 0;\n        const currentDate = currentData\n            ? getDate(getDateRange(currentData, true, true)[1])\n            : 0;\n        return currentDate > 0 || previousDate > 0\n            ? Math.max(currentDate, previousDate)\n            : 31;\n    }\n    isLegendVisible() {\n        const { datum } = this.state;\n        let result = false;\n        if (datum && datum.cost.legend && datum.cost.legend.data) {\n            datum.cost.legend.data.forEach(item => {\n                if (item.name && item.name.trim() !== '') {\n                    result = true;\n                    return;\n                }\n            });\n        }\n        return result;\n    }\n    render() {\n        const { height } = this.props;\n        const { datum, width } = this.state;\n        const container = (React.createElement(ChartVoronoiContainer, { labels: this.getTooltipLabel, voronoiDimension: \"x\" }));\n        const legendWidth = chartStyles.legend.minWidth > width / 2\n            ? chartStyles.legend.minWidth\n            : width / 2;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        return (React.createElement(\"div\", { className: css(styles.chartContainer), ref: this.containerRef },\n            React.createElement(Chart, { containerComponent: container, domain: domain, height: height, width: width },\n                Boolean(datum && datum.cost) &&\n                    datum.cost.charts.map((chart, index) => {\n                        return this.getChart(chart, index);\n                    }),\n                React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis })),\n            Boolean(this.isLegendVisible()) && (React.createElement(\"div\", { className: css(styles.legend) },\n                Boolean(datum.cost.legend.title) && (React.createElement(\"div\", null, datum.cost.legend.title)),\n                this.getLegend(datum.cost.legend, legendWidth)))));\n    }\n}\nexport { TrendChart };\n","import { StyleSheet } from '@patternfly/react-styles';\nexport const styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100vh',\n        marginTop: '150px',\n    },\n});\n","import { EmptyState as PfEmptyState, EmptyStateBody, EmptyStateIcon, Title, } from '@patternfly/react-core';\nimport { BanIcon, ErrorCircleOIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './errorState.styles';\nconst ErrorStateBase = ({ error, icon = ErrorCircleOIcon, t, }) => {\n    let title = t('error_state.unexpected_title');\n    let subTitle = t('error_state.unexpected_desc');\n    if (error && error.response && error.response.status === 401) {\n        icon = BanIcon;\n        title = t('error_state.unauthorized_title');\n        subTitle = t('error_state.unauthorized_desc');\n    }\n    return (React.createElement(\"div\", { className: css(styles.container) },\n        React.createElement(PfEmptyState, null,\n            React.createElement(EmptyStateIcon, { icon: icon }),\n            React.createElement(Title, { size: \"lg\" }, title),\n            React.createElement(EmptyStateBody, null, subTitle))));\n};\nconst ErrorState = translate()(ErrorStateBase);\nexport { ErrorState };\n","import { StyleSheet } from '@patternfly/react-styles';\nexport const styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100vh',\n        marginTop: '150px',\n    },\n});\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, Title, } from '@patternfly/react-core';\nimport { BinocularsIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './loadingState.styles';\nconst LoadingStateBase = ({ icon = BinocularsIcon, t, }) => {\n    const title = t('loading_state.sources_title');\n    const subTitle = t('loading_state.sources_desc');\n    return (React.createElement(\"div\", { className: css(styles.container) },\n        React.createElement(EmptyState, null,\n            React.createElement(EmptyStateIcon, { icon: icon }),\n            React.createElement(Title, { size: \"lg\" }, title),\n            React.createElement(EmptyStateBody, null, subTitle))));\n};\nconst LoadingState = translate()(LoadingStateBase);\nexport { LoadingState };\n","import { StyleSheet } from '@patternfly/react-styles';\nexport const styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100vh',\n        marginTop: '150px',\n    },\n});\n","import { Button, ButtonType, ButtonVariant, EmptyState, EmptyStateBody, EmptyStateIcon, Title, } from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions } from 'store/onboarding';\nimport { getTestProps, testIds } from 'testIds';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getAddSourceButton = () => {\n            const { openProvidersModal, t } = this.props;\n            return (React.createElement(Button, Object.assign({}, getTestProps(testIds.providers.add_btn), { onClick: openProvidersModal, type: ButtonType.submit, variant: ButtonVariant.primary }), t('providers.add_source')));\n        };\n    }\n    render() {\n        const { t } = this.props;\n        return (React.createElement(\"div\", { className: css(styles.container) },\n            React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: DollarSignIcon }),\n                React.createElement(Title, { size: \"lg\" }, t('providers.empty_state_title')),\n                React.createElement(EmptyStateBody, null, t('providers.empty_state_desc')),\n                this.getAddSourceButton())));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, {}) => {\n    return {};\n});\nconst NoProvidersState = translate()(connect(mapStateToProps, {\n    openProvidersModal: onboardingActions.openModal,\n})(NoProvidersStateBase));\nexport { NoProvidersState };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_disabled_color_100, global_disabled_color_200, global_FontFamily_sans_serif, global_FontSize_md, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: '#88D080',\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 14,\n        },\n        minWidth: 175,\n    },\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: ['#A2DA9C', '#88D080', '#6EC664', '#519149', '#3C6C37'],\n    // TBD: No grey scale, yet\n    previousColorScale: [\n        global_disabled_color_200.value,\n        global_disabled_color_100.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = StyleSheet.create({\n    chartContainer: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n    legend: {\n        display: 'inline-block',\n        fontSize: global_FontSize_md.value,\n        marginBottom: global_spacer_lg.value,\n        marginTop: global_spacer_lg.value,\n        minWidth: '175px',\n        width: '50%',\n    },\n});\n","import { Chart, ChartArea, ChartAxis, ChartContainer, ChartLegend, ChartTheme, ChartVoronoiContainer, } from '@patternfly/react-charts';\nimport { css } from '@patternfly/react-styles';\nimport { getDateRange, getDateRangeString, getMaxValue, getTooltipContent, getTooltipLabel, } from 'components/charts/commonChart/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles, styles } from './usageChart.styles';\nclass UsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const previousLegendData = [];\n            if (previousUsageData) {\n                previousLegendData.push({\n                    name: i18next.t(`chart.used`),\n                    symbol: {\n                        type: 'minus',\n                    },\n                });\n            }\n            if (previousRequestData) {\n                previousLegendData.push({\n                    name: i18next.t(`chart.requested`),\n                    symbol: {\n                        type: 'dash',\n                    },\n                });\n            }\n            const previous = {\n                charts: [\n                    {\n                        data: previousUsageData,\n                        show: true,\n                        style: chartStyles.previousUsageData,\n                    },\n                    {\n                        data: previousRequestData,\n                        show: true,\n                        style: chartStyles.previousRequestData,\n                    },\n                ],\n                legend: {\n                    colorScale: chartStyles.previousColorScale,\n                    data: previousLegendData,\n                    onClick: this.handlePreviousLegendClick,\n                    title: getDateRangeString(previousUsageData, true, true),\n                },\n            };\n            const currentLegendData = [];\n            if (currentUsageData) {\n                currentLegendData.push({\n                    name: i18next.t(`chart.used`),\n                    symbol: {\n                        type: 'minus',\n                    },\n                });\n            }\n            if (currentRequestData) {\n                currentLegendData.push({\n                    name: i18next.t(`chart.requested`),\n                    symbol: {\n                        type: 'dash',\n                    },\n                });\n            }\n            const current = {\n                charts: [\n                    {\n                        data: currentUsageData,\n                        show: true,\n                        style: chartStyles.currentUsageData,\n                    },\n                    {\n                        data: currentRequestData,\n                        show: true,\n                        style: chartStyles.currentRequestData,\n                    },\n                ],\n                legend: {\n                    colorScale: chartStyles.currentColorScale,\n                    data: currentLegendData,\n                    gutter: 55,\n                    onClick: this.handleCurrentLegendClick,\n                    title: getDateRangeString(currentUsageData, true, false),\n                },\n            };\n            this.setState({\n                datum: {\n                    previous,\n                    current,\n                },\n            });\n        };\n        this.handleCurrentLegendClick = props => {\n            const { datum } = this.state;\n            const newDatum = Object.assign({}, datum);\n            if (props.index >= 0 && newDatum.current.charts.length) {\n                newDatum.current.charts[props.index].show = !newDatum.current.charts[props.index].show;\n                this.setState({ datum: newDatum });\n            }\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.handlePreviousLegendClick = props => {\n            const { datum } = this.state;\n            const newDatum = Object.assign({}, datum);\n            if (props.index >= 0 && newDatum.previous.charts.length) {\n                newDatum.previous.charts[props.index].show = !newDatum.previous.charts[props.index].show;\n                this.setState({ datum: newDatum });\n            }\n        };\n        this.getChart = (datum, index) => {\n            if (datum.data && datum.data.length && datum.show) {\n                return (React.createElement(ChartArea, { data: datum.data, key: `usage-chart-${index}`, style: datum.style }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getLegend = (datum, width) => {\n            if (datum && datum.data && datum.data.length) {\n                return (React.createElement(ChartLegend, { colorScale: datum.colorScale, containerComponent: React.createElement(ChartContainer, { responsive: false }), data: datum.data, events: [\n                        {\n                            target: 'data',\n                            eventHandlers: {\n                                onClick: () => {\n                                    return [\n                                        {\n                                            target: 'data',\n                                            mutation: props => {\n                                                datum.onClick(props);\n                                                return null;\n                                            },\n                                        },\n                                    ];\n                                },\n                            },\n                        },\n                    ], height: 25, orientation: \"horizontal\", style: chartStyles.legend, theme: ChartTheme.light.blue }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTooltipLabel = (datum) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            return getTooltipLabel(datum, getTooltipContent(formatDatumValue), formatDatumOptions, 'date');\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentRequest = currentRequestData\n            ? getMaxValue(currentRequestData)\n            : 0;\n        const maxCurrentUsage = currentUsageData\n            ? getMaxValue(currentUsageData)\n            : 0;\n        const maxPreviousRequest = previousRequestData\n            ? getMaxValue(previousRequestData)\n            : 0;\n        const maxPreviousUsage = previousUsageData\n            ? getMaxValue(previousUsageData)\n            : 0;\n        const maxValue = Math.max(maxCurrentRequest, maxCurrentUsage, maxPreviousRequest, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const currentRequestDate = currentRequestData\n            ? getDate(getDateRange(currentRequestData, true, true)[1])\n            : 0;\n        const currentUsageDate = currentUsageData\n            ? getDate(getDateRange(currentUsageData, true, true)[1])\n            : 0;\n        const previousRequestDate = previousRequestData\n            ? getDate(getDateRange(previousRequestData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousUsageData\n            ? getDate(getDateRange(previousUsageData, true, true)[1])\n            : 0;\n        return currentRequestDate > 0 ||\n            currentUsageDate > 0 ||\n            previousRequestDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    isCurrentLegendVisible() {\n        const { datum } = this.state;\n        let result = false;\n        if (datum && datum.current.legend && datum.current.legend.data) {\n            datum.current.legend.data.forEach(data => {\n                if (data.name && data.name.trim() !== '') {\n                    result = true;\n                    return;\n                }\n            });\n        }\n        return result;\n    }\n    isPreviousLegendVisible() {\n        const { datum } = this.state;\n        let result = false;\n        if (datum && datum.previous.legend && datum.previous.legend.data) {\n            datum.previous.legend.data.forEach(data => {\n                if (data.name && data.name.trim() !== '') {\n                    result = true;\n                    return;\n                }\n            });\n        }\n        return result;\n    }\n    render() {\n        const { height } = this.props;\n        const { datum, width } = this.state;\n        const container = (React.createElement(ChartVoronoiContainer, { labels: this.getTooltipLabel, voronoiDimension: \"x\" }));\n        const legendWidth = chartStyles.legend.minWidth > width / 2\n            ? chartStyles.legend.minWidth\n            : width / 2;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        return (React.createElement(\"div\", { className: css(styles.chartContainer), ref: this.containerRef },\n            React.createElement(Chart, { containerComponent: container, domain: domain, height: height, width: width },\n                Boolean(datum && datum.previous) &&\n                    datum.previous.charts.map((chart, index) => {\n                        return this.getChart(chart, index);\n                    }),\n                Boolean(datum && datum.current) &&\n                    datum.current.charts.map((chart, index) => {\n                        return this.getChart(chart, index);\n                    }),\n                React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis })),\n            Boolean(this.isPreviousLegendVisible()) && (React.createElement(\"div\", { className: css(styles.legend) },\n                Boolean(datum.previous.legend.title) && (React.createElement(\"div\", null, datum.previous.legend.title)),\n                this.getLegend(datum.previous.legend, legendWidth))),\n            Boolean(this.isCurrentLegendVisible()) && (React.createElement(\"div\", { className: css(styles.legend) },\n                Boolean(datum.current.legend.title) && (React.createElement(\"div\", null, datum.current.legend.title)),\n                this.getLegend(datum.current.legend, legendWidth)))));\n    }\n}\nexport { UsageChart };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './awsReportSummary.styles';\nconst AwsReportSummaryBase = ({ title, subTitle, detailsLink, children, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? `${t('loading')}...` : children),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst AwsReportSummary = translate()(AwsReportSummaryBase);\nexport { AwsReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '440px'\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './awsReportSummaryAlt.styles';\nconst AwsReportSummaryAltBase = ({ children, detailsLink, status, t, tabs, title, subTitle, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(Grid, { gutter: \"md\" },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.cost) },\n                    React.createElement(CardHeader, null,\n                        React.createElement(Title, { size: \"lg\" }, title),\n                        Boolean(subTitle) && (React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle))),\n                    React.createElement(CardBody, null, status === 1 /* inProgress */\n                        ? `${t('loading')}...`\n                        : children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.tops) }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst AwsReportSummaryAlt = translate()(AwsReportSummaryAltBase);\nexport { AwsReportSummaryAlt };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryDetails: {\n        marginBottom: global_spacer_md.value,\n        display: 'flex',\n        alignItems: 'flex-end',\n    },\n    value: {\n        color: global_Color_100.var,\n        marginRight: global_spacer_sm.value,\n        fontSize: global_FontSize_4xl.value,\n    },\n    text: {\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './awsReportSummaryDetails.styles';\nconst AwsReportSummaryDetails = ({ label, formatValue, formatOptions, report, reportType = \"cost\" /* cost */, }) => {\n    let value = '----';\n    if (report && report.meta && report.meta.total) {\n        if (reportType === \"cost\" /* cost */) {\n            const units = report.meta.total.cost\n                ? report.meta.total.cost.units\n                : 'USD';\n            value = formatValue(report.meta.total.cost.value ? report.meta.total.cost.value : 0, units, formatOptions);\n        }\n        else {\n            const units = report.meta.total.usage\n                ? report.meta.total.usage.units\n                : 'USD';\n            value = formatValue(report.meta.total.usage.value ? report.meta.total.usage.value : 0, units, formatOptions);\n        }\n    }\n    return (React.createElement(\"div\", { className: css(styles.reportSummaryDetails) },\n        React.createElement(\"div\", { className: css(styles.value) }, value),\n        React.createElement(\"div\", { className: css(styles.text) },\n            React.createElement(\"div\", null, label))));\n};\nexport { AwsReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './awsReportSummaryItem.styles';\nconst AwsReportSummaryItem = ({ label, value, totalValue, formatValue, units, formatOptions, }) => {\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = `${formatValue(value, units, formatOptions)} (${percentVal}%)`;\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nAwsReportSummaryItem.defaultProps = {\n    formatValue: v => v,\n};\nexport { AwsReportSummaryItem };\n","import React from 'react';\nimport { getComputedAwsReportItems, } from 'utils/getComputedAwsReportItems';\nclass AwsReportSummaryItems extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedAwsReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { report, children } = this.props;\n        if (!report) {\n            return null;\n        }\n        const items = this.getItems();\n        return React.createElement(\"ul\", null, children({ items }));\n    }\n}\nexport { AwsReportSummaryItems, };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nimport { styles } from './awsReportSummaryTrend.styles';\nconst AwsReportSummaryTrend = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { AwsReportSummaryTrend };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpReportSummary.styles';\nconst OcpReportSummaryBase = ({ title, subTitle, detailsLink, children, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? `${t('loading')}...` : children),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst OcpReportSummary = translate()(OcpReportSummaryBase);\nexport { OcpReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '440px'\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpReportSummaryAlt.styles';\nconst OcpReportSummaryAltBase = ({ children, detailsLink, status, t, tabs, title, subTitle, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(Grid, { gutter: \"md\" },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.cost) },\n                    React.createElement(CardHeader, null,\n                        React.createElement(Title, { size: \"lg\" }, title),\n                        Boolean(subTitle) && (React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle))),\n                    React.createElement(CardBody, null, status === 1 /* inProgress */\n                        ? `${t('loading')}...`\n                        : children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.tops) }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst OcpReportSummaryAlt = translate()(OcpReportSummaryAltBase);\nexport { OcpReportSummaryAlt };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    requestedValue: {\n        marginLeft: global_spacer_sm.value,\n    },\n    text: {\n        display: 'flex',\n        alignItems: 'flex-end',\n        marginLeft: global_spacer_sm.value,\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    titleContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        minWidth: '175px',\n        width: '50%',\n    },\n    usageText: {\n        marginRight: global_spacer_sm.value,\n    },\n    value: {\n        display: 'flex',\n        color: global_Color_100.var,\n        fontSize: global_FontSize_4xl.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './ocpReportSummaryDetails.styles';\nconst OcpReportSummaryDetails = ({ label, formatValue, formatOptions, report, reportType = \"cost\" /* cost */, requestLabel, }) => {\n    let value = '----';\n    let requestValue = '----';\n    if (report && report.meta && report.meta.total) {\n        if (reportType === \"cost\" /* cost */) {\n            const units = report.meta.total.cost.units\n                ? report.meta.total.cost.units\n                : 'USD';\n            value = formatValue(report.meta.total.cost.value ? report.meta.total.cost.value : 0, units, formatOptions);\n        }\n        else {\n            const units = report.meta.total.usage.units\n                ? report.meta.total.usage.units\n                : 'GB';\n            value = formatValue(report.meta.total.usage.value ? report.meta.total.usage.value : 0, units, formatOptions);\n            requestValue = formatValue(report.meta.total.request.value ? report.meta.total.request.value : 0, units, formatOptions);\n        }\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: css(styles.titleContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                value,\n                React.createElement(\"div\", { className: css(styles.text) },\n                    React.createElement(\"div\", null, label)))),\n        React.createElement(\"div\", { className: css(styles.titleContainer) }, Boolean(reportType !== \"cost\" /* cost */) && (React.createElement(\"div\", { className: css(styles.value, styles.requestedValue) },\n            requestValue,\n            React.createElement(\"div\", { className: css(styles.text) }, requestLabel))))));\n};\nexport { OcpReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './ocpReportSummaryItem.styles';\nconst OcpReportSummaryItem = ({ label, value, totalValue, formatValue, units, formatOptions, }) => {\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = `${formatValue(value, units, formatOptions)} (${percentVal}%)`;\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nOcpReportSummaryItem.defaultProps = {\n    formatValue: v => v,\n};\nexport { OcpReportSummaryItem };\n","import React from 'react';\nimport { getComputedOcpReportItems, } from 'utils/getComputedOcpReportItems';\nclass OcpReportSummaryItems extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedOcpReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { report, children } = this.props;\n        if (!report) {\n            return null;\n        }\n        const items = this.getItems();\n        return React.createElement(\"ul\", null, children({ items }));\n    }\n}\nexport { OcpReportSummaryItems, };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nimport { styles } from './ocpReportSummaryTrend.styles';\nconst OcpReportSummaryTrend = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { OcpReportSummaryTrend };\n","import { css } from '@patternfly/react-styles';\nimport { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nimport { styles } from './ocpReportSummaryTrend.styles';\nconst OcpReportSummaryUsage = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { OcpReportSummaryUsage };\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the month\n *\n * @example\n * // Which month is 29 February 2012?\n * var result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\nfunction getMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var month = date.getMonth()\n  return month\n}\n\nmodule.exports = getMonth\n","import { StyleSheet } from '@patternfly/react-styles';\nexport default StyleSheet.parse(`.pf-c-tabs{--pf-c-tabs__item--BackgroundColor:var(--pf-global--BackgroundColor--100);--pf-c-tabs__item--BorderColor:var(--pf-global--BorderColor--light-200);--pf-c-tabs__item--BorderWidth:var(--pf-global--BorderWidth--sm);--pf-c-tabs__item--m-current--ZIndex:var(--pf-global--ZIndex--sm);--pf-c-tabs__item--m-current--Color:var(--pf-global--active-color--100);--pf-c-tabs__item--m-current--BorderTopWidth:var(--pf-global--BorderWidth--md);--pf-c-tabs__item--hover--Color:var(--pf-global--Color--dark-200);--pf-c-tabs__button--Background:transparent;--pf-c-tabs__button--PaddingTop:var(--pf-global--spacer--sm);--pf-c-tabs__button--PaddingRight:var(--pf-global--spacer--sm);--pf-c-tabs__button--PaddingBottom:var(--pf-global--spacer--sm);--pf-c-tabs__button--PaddingLeft:var(--pf-global--spacer--sm);--pf-c-tabs__scroll-button--Width:var(--pf-global--spacer--xl);--pf-c-tabs__scroll-button--ZIndex:var(--pf-global--ZIndex--md);position:relative;display:flex;flex-direction:column;align-items:flex-start;}.pf-c-tabs .pf-c-tabs__scroll-button{display:none;visibility:hidden;}.pf-c-tabs.pf-m-start .pf-c-tabs__scroll-button:nth-of-type(1),.pf-c-tabs.pf-m-end .pf-c-tabs__scroll-button:nth-of-type(2){display:block;visibility:visible;}.pf-c-tabs.pf-m-start-current .pf-c-tabs__scroll-button:nth-of-type(1)::after,.pf-c-tabs.pf-m-end-current .pf-c-tabs__scroll-button:nth-of-type(2)::after{position:absolute;top:0;right:0;bottom:0;left:0;margin-left:var(--pf-c-tabs__item--BorderWidth);content:\"\";border-top:var(--pf-c-tabs__item--m-current--BorderTopWidth) solid var(--pf-c-tabs__item--m-current--Color);}+ .pf-c-tabs.pf-m-tabs-secondary{margin-top:calc(-1 * var(--pf-c-tabs__item--BorderWidth));border-top:var(--pf-c-tabs__item--BorderWidth) solid var(--pf-c-tabs__item--BorderColor);}+ .pf-c-tabs.pf-m-tabs-secondary .pf-c-tabs__scroll-button{margin-top:calc(-1 * var(--pf-c-tabs__item--BorderWidth));}.pf-c-tabs.pf-m-fill .pf-c-tabs__list{width:100%;}.pf-c-tabs.pf-m-fill .pf-c-tabs__item{flex:1;white-space:nowrap;}.pf-c-tabs.pf-m-fill .pf-c-tabs__item:first-of-type .pf-c-tabs__button::before{border-left:none;}.pf-c-tabs.pf-m-fill .pf-c-tabs__item:last-of-type .pf-c-tabs__button::before{border-right:none;}.pf-c-tabs.pf-m-fill .pf-c-tabs__item .pf-c-tabs__button{width:100%;}.pf-c-tabs__list{position:relative;display:flex;max-width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch;}.pf-c-tabs__list .pf-c-tabs__item:last-of-type .pf-c-tabs__button::before{border-right-width:var(--pf-c-tabs__item--BorderWidth);}.pf-c-tabs__item{flex:none;}.pf-c-tabs__item:not(.pf-m-current):hover .pf-c-tabs__button::after{position:absolute;top:0;right:0;bottom:0;left:0;margin-left:var(--pf-c-tabs__item--BorderWidth);content:\"\";border-top:var(--pf-c-tabs__item--m-current--BorderTopWidth) solid var(--pf-c-tabs__item--hover--Color);}.pf-c-tabs__item.pf-m-current .pf-c-tabs__button{z-index:var(--pf-c-tabs__item--m-current--ZIndex);color:var(--pf-c-tabs__item--m-current--Color);}.pf-c-tabs__item.pf-m-current .pf-c-tabs__button::before{border-bottom-color:var(--pf-c-tabs__item--BackgroundColor);}.pf-c-tabs__item.pf-m-current .pf-c-tabs__button::after{position:absolute;top:0;right:0;bottom:0;left:0;margin-left:var(--pf-c-tabs__item--BorderWidth);content:\"\";border-top:var(--pf-c-tabs__item--m-current--BorderTopWidth) solid var(--pf-c-tabs__item--m-current--Color);}.pf-m-tabs-secondary .pf-c-tabs__item .pf-c-tabs__button::before,.pf-m-tabs-secondary .pf-c-tabs__item .pf-c-tabs__button::after,.pf-m-tabs-secondary .pf-c-tabs__item .pf-c-tabs__button:hover::after{content:none;}.pf-m-tabs-secondary .pf-c-tabs__item:not(.pf-m-current) .pf-c-tabs__button:hover{color:var(--pf-c-tabs__item--hover--Color);}.pf-c-tabs__button{position:relative;padding:var(--pf-c-tabs__button--PaddingTop) var(--pf-c-tabs__button--PaddingRight) var(--pf-c-tabs__button--PaddingBottom) var(--pf-c-tabs__button--PaddingLeft);user-select:none;background:var(--pf-c-tabs__button--Background);border:0;}.pf-c-tabs__button::before{position:absolute;top:0;right:0;bottom:0;left:0;content:\"\";border:solid var(--pf-c-tabs__item--BorderColor);border-width:var(--pf-c-tabs__item--BorderWidth) 0 var(--pf-c-tabs__item--BorderWidth) var(--pf-c-tabs__item--BorderWidth);}.pf-c-tabs__scroll-item{position:absolute;top:0;bottom:0;width:var(--pf-c-tabs__scroll-button--Width);}.pf-c-tabs__scroll-item:first-of-type{left:0;}.pf-c-tabs__scroll-item:last-of-type{right:0;}.pf-c-tabs__scroll-button{position:absolute;top:0;bottom:0;z-index:var(--pf-c-tabs__scroll-button--ZIndex);width:var(--pf-c-tabs__scroll-button--Width);line-height:1;background-color:var(--pf-c-tabs__item--BackgroundColor);border:initial;}.pf-c-tabs__scroll-button:nth-of-type(2){right:0;}.pf-c-tabs__scroll-button::before{position:absolute;top:0;right:0;bottom:0;left:0;content:\"\";border:var(--pf-c-tabs__item--BorderWidth) solid var(--pf-c-tabs__item--BorderColor);}.pf-c-tabs__scroll-button:hover::after{position:absolute;top:0;right:0;bottom:0;left:0;content:\"\";border-top:var(--pf-c-tabs__item--m-current--BorderTopWidth) solid var(--pf-c-tabs__item--hover--Color);}`);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from '@patternfly/react-styles';\nvar propTypes = {\n  /** the index of the active tab */\n  activeKey: PropTypes.number,\n\n  /** content rendered inside the tab content area. */\n  child: PropTypes.node,\n\n  /** id passed from parent to identify the content section */\n  id: PropTypes.string.isRequired\n};\nvar defaultProps = {\n  activeKey: 0,\n  child: null\n};\n\nvar TabContent = function TabContent(_ref) {\n  var id = _ref.id,\n      activeKey = _ref.activeKey,\n      child = _ref.child,\n      props = _objectWithoutProperties(_ref, [\"id\", \"activeKey\", \"child\"]);\n\n  return React.createElement(\"section\", _extends({\n    hidden: child.props.eventKey !== activeKey,\n    className: css('pf-c-tab-content', child.props.className),\n    id: \"pf-tab-section-\".concat(child.props.eventKey, \"-\").concat(id),\n    \"aria-labelledby\": \"pf-tab-\".concat(child.props.eventKey, \"-\").concat(id),\n    role: \"tabpanel\",\n    tabIndex: \"0\"\n  }, props), child.props.children);\n};\n\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;\nexport default TabContent;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport styles from \"../../@patternfly/patternfly/components/Tabs/tabs.css.js\";\nimport { css } from '@patternfly/react-styles';\nimport PropTypes from 'prop-types';\nimport { AngleLeftIcon, AngleRightIcon } from '@patternfly/react-icons';\nimport { getUniqueId, isElementInView, sideElementIsOutOfView } from '../../helpers/util';\nimport { SIDE } from '../../helpers/constants';\nimport TabContent from './TabContent';\nvar propTypes = {\n  /** content rendered inside the Tabs Component. */\n  children: PropTypes.node.isRequired,\n\n  /** additional classes added to the Tabs */\n  className: PropTypes.string,\n\n  /** the index of the active tab */\n  activeKey: PropTypes.number,\n\n  /** handel tab selection */\n  onSelect: PropTypes.func,\n\n  /** Enables the filled tab list layout */\n  isFilled: PropTypes.bool,\n\n  /** Enables Secondary Tab styling */\n  isSecondary: PropTypes.bool,\n\n  /** Aria Label for the left Scroll Button */\n  leftScrollAriaLabel: PropTypes.string,\n\n  /** Aria Label for the right Scroll Button */\n  rightScrollAriaLabel: PropTypes.string\n};\nvar defaultProps = {\n  className: '',\n  activeKey: 0,\n  onSelect: function onSelect() {\n    return undefined;\n  },\n  isFilled: false,\n  isSecondary: false,\n  leftScrollAriaLabel: 'Scroll left',\n  rightScrollAriaLabel: 'Scroll Right'\n};\n\nvar Tabs =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tabs, _React$Component);\n\n  function Tabs() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Tabs);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Tabs)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      showLeftScrollButton: false,\n      showRightScrollButton: false,\n      highlightLeftScrollButton: false,\n      highlightRightScrollButton: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"id\", getUniqueId());\n\n    _defineProperty(_assertThisInitialized(_this), \"tabList\", React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleScrollButtons\", function () {\n      if (_this.tabList.current) {\n        var container = _this.tabList.current; // get first element and check if it is in view\n\n        var showLeftScrollButton = !isElementInView(container, container.firstChild, false); // get lase element and check if it is in view\n\n        var showRightScrollButton = !isElementInView(container, container.lastChild, false); // determine if selected tab is out of view and apply styles\n\n        var selectedTab;\n        var childrenArr = Array.from(container.children);\n        childrenArr.forEach(function (child) {\n          var className = child.className;\n\n          if (className.search('pf-m-current') > 0) {\n            selectedTab = child;\n          }\n        });\n        var sideOutOfView = sideElementIsOutOfView(container, selectedTab);\n\n        _this.setState({\n          showLeftScrollButton: showLeftScrollButton,\n          showRightScrollButton: showRightScrollButton,\n          highlightLeftScrollButton: (sideOutOfView === SIDE.LEFT || sideOutOfView === SIDE.BOTH) && showLeftScrollButton,\n          highlightRightScrollButton: (sideOutOfView === SIDE.RIGHT || sideOutOfView === SIDE.BOTH) && showRightScrollButton\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"scrollLeft\", function () {\n      // find first Element that is fully in view on the left, then scroll to the element before it\n      if (_this.tabList.current) {\n        var container = _this.tabList.current;\n        var childrenArr = Array.from(container.children);\n        var firstElementInView;\n        var lastElementOutOfView;\n        var i;\n\n        for (i = 0; i < childrenArr.length && !firstElementInView; i++) {\n          if (isElementInView(container, childrenArr[i], false)) {\n            firstElementInView = childrenArr[i];\n            lastElementOutOfView = childrenArr[i - 1];\n          }\n        }\n\n        lastElementOutOfView && (container.scrollLeft -= lastElementOutOfView.scrollWidth);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"scrollRight\", function () {\n      // find last Element that is fully in view on the right, then scroll to the element after it\n      if (_this.tabList.current) {\n        var container = _this.tabList.current;\n        var childrenArr = Array.from(container.children);\n        var lastElementInView;\n        var firstElementOutOfView;\n        var i;\n\n        for (i = childrenArr.length - 1; i >= 0 && !lastElementInView; i--) {\n          if (isElementInView(container, childrenArr[i], false)) {\n            lastElementInView = childrenArr[i];\n            firstElementOutOfView = childrenArr[i + 1];\n          }\n        }\n\n        firstElementOutOfView && (container.scrollLeft += firstElementOutOfView.scrollWidth);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Tabs, [{\n    key: \"handleTabClick\",\n    value: function handleTabClick(event, eventKey) {\n      this.props.onSelect(event, eventKey);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('resize', this.handleScrollButtons, false); // call the handle resize function to check if scroll buttons should be shown\n\n      this.handleScrollButtons();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener('resize', this.handleScrollButtons, false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          className = _this$props.className,\n          children = _this$props.children,\n          activeKey = _this$props.activeKey,\n          isFilled = _this$props.isFilled,\n          isSecondary = _this$props.isSecondary,\n          leftScrollAriaLabel = _this$props.leftScrollAriaLabel,\n          rightScrollAriaLabel = _this$props.rightScrollAriaLabel,\n          props = _objectWithoutProperties(_this$props, [\"className\", \"children\", \"activeKey\", \"isFilled\", \"isSecondary\", \"leftScrollAriaLabel\", \"rightScrollAriaLabel\"]);\n\n      var _this$state = this.state,\n          showLeftScrollButton = _this$state.showLeftScrollButton,\n          showRightScrollButton = _this$state.showRightScrollButton,\n          highlightLeftScrollButton = _this$state.highlightLeftScrollButton,\n          highlightRightScrollButton = _this$state.highlightRightScrollButton;\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", _extends({}, props, {\n        className: css(styles.tabs, isFilled && styles.modifiers.fill, isSecondary && styles.modifiers.tabsSecondary, showLeftScrollButton && styles.modifiers.start, showRightScrollButton && styles.modifiers.end, highlightLeftScrollButton && styles.modifiers.startCurrent, highlightRightScrollButton && styles.modifiers.endCurrent, className)\n      }), !isSecondary && React.createElement(\"button\", {\n        className: css(styles.tabsScrollButton),\n        variant: \"plain\",\n        \"aria-label\": leftScrollAriaLabel,\n        onClick: this.scrollLeft\n      }, React.createElement(AngleLeftIcon, null)), React.createElement(\"ul\", {\n        className: css(styles.tabsList),\n        ref: this.tabList,\n        onScroll: this.handleScrollButtons\n      }, children.map(function (child, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          className: css(styles.tabsItem, child.props.eventKey === activeKey && styles.modifiers.current, className)\n        }, React.createElement(\"button\", {\n          className: css(styles.tabsButton),\n          onClick: function onClick(event) {\n            return _this2.handleTabClick(event, child.props.eventKey);\n          },\n          id: \"pf-tab-\".concat(child.props.eventKey, \"-\").concat(child.props.id || _this2.id),\n          \"aria-controls\": \"pf-tab-section-\".concat(child.props.eventKey, \"-\").concat(child.props.id || _this2.id)\n        }, child.props.title));\n      })), !isSecondary && React.createElement(\"button\", {\n        className: css(styles.tabsScrollButton),\n        variant: \"plain\",\n        \"aria-label\": rightScrollAriaLabel,\n        onClick: this.scrollRight\n      }, React.createElement(AngleRightIcon, null))), children.map(function (child, index) {\n        return React.createElement(TabContent, {\n          key: index,\n          activeKey: activeKey,\n          child: child,\n          index: index,\n          id: child.props.id || _this2.id\n        });\n      }));\n    }\n  }]);\n\n  return Tabs;\n}(React.Component);\n\n_defineProperty(Tabs, \"propTypes\", propTypes);\n\n_defineProperty(Tabs, \"defaultProps\", defaultProps);\n\nexport default Tabs;","function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar propTypes = {\n  /** content rendered inside the Tab content area. */\n  children: PropTypes.node,\n\n  /** additional classes added to the Modal */\n  className: PropTypes.string,\n\n  /** Tab title */\n  title: PropTypes.string.isRequired,\n\n  /** uniquely identifies the tab */\n  eventKey: PropTypes.number.isRequired\n};\nvar defaultProps = {\n  children: null,\n  className: ''\n};\n\nvar Tab = function Tab(_ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      title = _ref.title,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutProperties(_ref, [\"className\", \"children\", \"title\", \"eventKey\"]);\n\n  return React.createElement(React.Fragment, null, children);\n};\n\nTab.propTypes = propTypes;\nTab.defaultProps = defaultProps;\nexport default Tab;","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"invariant\";\nimport { createLocation } from \"history\";\n\nvar isModifiedEvent = function isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n};\n\n/**\n * The public API for rendering a history-aware <a>.\n */\n\nvar Link = function (_React$Component) {\n  _inherits(Link, _React$Component);\n\n  function Link() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Link);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (event) {\n      if (_this.props.onClick) _this.props.onClick(event);\n\n      if (!event.defaultPrevented && // onClick prevented default\n      event.button === 0 && // ignore everything but left clicks\n      !_this.props.target && // let browser handle \"target=_blank\" etc.\n      !isModifiedEvent(event) // ignore clicks with modifier keys\n      ) {\n          event.preventDefault();\n\n          var history = _this.context.router.history;\n          var _this$props = _this.props,\n              replace = _this$props.replace,\n              to = _this$props.to;\n\n\n          if (replace) {\n            history.replace(to);\n          } else {\n            history.push(to);\n          }\n        }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Link.prototype.render = function render() {\n    var _props = this.props,\n        replace = _props.replace,\n        to = _props.to,\n        innerRef = _props.innerRef,\n        props = _objectWithoutProperties(_props, [\"replace\", \"to\", \"innerRef\"]); // eslint-disable-line no-unused-vars\n\n    invariant(this.context.router, \"You should not use <Link> outside a <Router>\");\n\n    invariant(to !== undefined, 'You must specify the \"to\" property');\n\n    var history = this.context.router.history;\n\n    var location = typeof to === \"string\" ? createLocation(to, null, null, history.location) : to;\n\n    var href = history.createHref(location);\n    return React.createElement(\"a\", _extends({}, props, { onClick: this.handleClick, href: href, ref: innerRef }));\n  };\n\n  return Link;\n}(React.Component);\n\nLink.propTypes = {\n  onClick: PropTypes.func,\n  target: PropTypes.string,\n  replace: PropTypes.bool,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  innerRef: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n};\nLink.defaultProps = {\n  replace: false\n};\nLink.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n      replace: PropTypes.func.isRequired,\n      createHref: PropTypes.func.isRequired\n    }).isRequired\n  }).isRequired\n};\n\n\nexport default Link;","import { Button } from '@patternfly/react-core';\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nconst CastedButton = Button;\nconst Link = props => (React.createElement(CastedButton, Object.assign({ component: RouterLink, variant: \"link\" }, props)));\nexport { Link };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_xl } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    tabs: {\n        marginTop: global_spacer_xl.value,\n    },\n});\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { getQuery, parseQuery } from 'api/awsQuery';\nimport { transformAwsReport } from 'components/charts/commonChart/chartUtils';\nimport { Link } from 'components/link';\nimport { AwsReportSummary, AwsReportSummaryAlt, AwsReportSummaryDetails, AwsReportSummaryItem, AwsReportSummaryItems, AwsReportSummaryTrend, } from 'components/reports/awsReportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { awsDashboardActions, awsDashboardSelectors, } from 'store/awsDashboard';\nimport { awsReportsSelectors } from 'store/awsReports';\nimport { createMapStateToProps } from 'store/common';\nimport { formatValue } from 'utils/formatValue';\nimport { styles } from './awsDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nclass AwsDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = () => {\n            const { currentQuery } = this.props;\n            const groupBy = parseQuery(currentQuery).group_by;\n            return `/aws?${getQuery({\n                group_by: groupBy,\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n        this.getChart = (height) => {\n            const { currentReport, previousReport, t, trend } = this.props;\n            const currentData = transformAwsReport(currentReport, trend.type);\n            const previousData = transformAwsReport(previousReport, trend.type);\n            return (React.createElement(AwsReportSummaryTrend, { currentData: currentData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousData, title: t(trend.titleKey) }));\n        };\n        this.getDetails = () => {\n            const { currentReport, details, reportType } = this.props;\n            return (React.createElement(AwsReportSummaryDetails, { formatOptions: details.formatOptions, formatValue: formatValue, label: this.getDetailsLabel(), report: currentReport, reportType: reportType }));\n        };\n        this.getDetailsLabel = () => {\n            const { details, t } = this.props;\n            return t(details.labelKey, { context: details.labelKeyContext });\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, isDetailsLink } = this.props;\n            return (isDetailsLink && (React.createElement(Link, { to: this.buildDetailsLink() }, this.getDetailsLinkTitle(currentTab))));\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(AwsReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(180)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t('aws_dashboard.widget_subtitle', {\n                endDate,\n                month,\n                startDate,\n                count: getDate(today),\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { tabsReport } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) },\n                React.createElement(\"div\", { className: css(styles.tabs) },\n                    React.createElement(AwsReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, reportType, tabsReport, topItems } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            if (activeTab === currentTab) {\n                return (React.createElement(AwsReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: reportType === \"cost\" /* cost */\n                        ? tabsReport.meta.total.cost.value\n                        : tabsReport.meta.total.usage.value, units: reportItem.units, value: reportItem.total }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getVerticalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(AwsReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(75),\n                this.getTabs()));\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, updateTab, widgetId } = this.props;\n        updateTab(id, availableTabs[0]);\n        fetchReports(widgetId);\n    }\n    render() {\n        const { isHorizontal = false } = this.props;\n        return Boolean(isHorizontal)\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: awsReportsSelectors.selectReport(state, widget.reportType, queries.current), currentReportFetchStatus: awsReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current), previousReport: awsReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabsReport: awsReportsSelectors.selectReport(state, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: awsDashboardActions.fetchWidgetReports,\n    updateTab: awsDashboardActions.changeWidgetTab,\n};\nconst AwsDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(AwsDashboardWidgetBase));\nexport { AwsDashboardWidget, AwsDashboardWidgetBase };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { awsDashboardSelectors } from 'store/awsDashboard';\nimport { createMapStateToProps } from 'store/common';\nimport { AwsDashboardWidget } from './awsDashboardWidget';\nconst AwsDashboardBase = ({ selectWidgets, t, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.isHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(AwsDashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { xl: 4, lg: 6, key: widgetId },\n            React.createElement(AwsDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: awsDashboardSelectors.selectWidgets(state),\n        widgets: awsDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsDashboard = translate()(connect(mapStateToProps, {})(AwsDashboardBase));\nexport default AwsDashboard;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_xl } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    tabs: {\n        marginTop: global_spacer_xl.value,\n    },\n});\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { getQuery, parseQuery } from 'api/ocpQuery';\nimport { transformOcpReport } from 'components/charts/commonChart/chartUtils';\nimport { Link } from 'components/link';\nimport { OcpReportSummary, OcpReportSummaryAlt, OcpReportSummaryDetails, OcpReportSummaryItem, OcpReportSummaryItems, OcpReportSummaryTrend, OcpReportSummaryUsage, } from 'components/reports/ocpReportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardActions, ocpDashboardSelectors, } from 'store/ocpDashboard';\nimport { ocpReportsSelectors } from 'store/ocpReports';\nimport { formatValue } from 'utils/formatValue';\nimport { styles } from './ocpDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nclass OcpDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = () => {\n            const { currentQuery } = this.props;\n            const groupBy = parseQuery(currentQuery).group_by;\n            return `/ocp?${getQuery({\n                group_by: groupBy,\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id } = this.props;\n            const tab = availableTabs[tabIndex];\n            this.props.updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n        this.getChart = (height) => {\n            const { currentReport, previousReport, reportType, t, trend } = this.props;\n            const reportItem = reportType === \"cost\" /* cost */ ? 'cost' : 'usage';\n            const currentUsageData = transformOcpReport(currentReport, trend.type, 'date', reportItem);\n            const previousUsageData = transformOcpReport(previousReport, trend.type, 'date', reportItem);\n            const currentRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpReport(currentReport, trend.type, 'date', 'request')\n                : undefined;\n            const previousRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpReport(previousReport, trend.type, 'date', 'request')\n                : undefined;\n            return (React.createElement(React.Fragment, null, Boolean(reportType === \"cost\" /* cost */) ? (React.createElement(OcpReportSummaryTrend, { currentData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousUsageData, title: t(trend.titleKey) })) : (React.createElement(OcpReportSummaryUsage, { currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousRequestData: previousRequestData, previousUsageData: previousUsageData }))));\n        };\n        this.getDetails = () => {\n            const { currentReport, details, reportType } = this.props;\n            return (React.createElement(OcpReportSummaryDetails, { formatOptions: details.formatOptions, formatValue: formatValue, label: this.getDetailsLabel(), report: currentReport, reportType: reportType, requestLabel: this.getRequestLabel() }));\n        };\n        this.getDetailsLabel = () => {\n            const { details, t } = this.props;\n            return t(details.labelKey, { context: details.labelKeyContext });\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, isDetailsLink } = this.props;\n            return (isDetailsLink && (React.createElement(Link, { to: this.buildDetailsLink() }, this.getDetailsLinkTitle(currentTab))));\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(180)));\n        };\n        this.getRequestLabel = () => {\n            const { details, t } = this.props;\n            return t(details.requestLabelKey, { context: details.labelKeyContext });\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t('ocp_dashboard.widget_subtitle', {\n                endDate,\n                month,\n                startDate,\n                count: getDate(today),\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { tabsReport } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) },\n                React.createElement(\"div\", { className: css(styles.tabs) },\n                    React.createElement(OcpReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, reportType, tabsReport, topItems } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            if (activeTab === currentTab) {\n                return (React.createElement(OcpReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: reportType === \"cost\" /* cost */\n                        ? tabsReport.meta.total.cost.value\n                        : tabsReport.meta.total.usage.value, units: reportItem.units, value: reportType === \"cost\" /* cost */\n                        ? reportItem.cost\n                        : reportItem.usage }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getVerticalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(75),\n                this.getTabs()));\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, widgetId } = this.props;\n        this.props.updateTab(id, availableTabs[0]);\n        fetchReports(widgetId);\n    }\n    render() {\n        const { isHorizontal = false } = this.props;\n        return Boolean(isHorizontal)\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: ocpReportsSelectors.selectReport(state, widget.reportType, queries.current), currentReportFetchStatus: ocpReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current), previousReport: ocpReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabsReport: ocpReportsSelectors.selectReport(state, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpDashboardActions.fetchWidgetReports,\n    updateTab: ocpDashboardActions.changeWidgetTab,\n};\nconst OcpDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(OcpDashboardWidgetBase));\nexport { OcpDashboardWidget, OcpDashboardWidgetBase };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardSelectors } from 'store/ocpDashboard';\nimport { OcpDashboardWidget } from './ocpDashboardWidget';\nconst OcpDashboardBase = ({ selectWidgets, t, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.isHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(OcpDashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { xl: 4, lg: 6, key: widgetId },\n            React.createElement(OcpDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: ocpDashboardSelectors.selectWidgets(state),\n        widgets: ocpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpDashboard = translate()(connect(mapStateToProps, {})(OcpDashboardBase));\nexport default OcpDashboard;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpOnAwsReportSummary.styles';\nconst OcpOnAwsReportSummaryBase = ({ title, subTitle, detailsLink, children, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? `${t('loading')}...` : children),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst OcpOnAwsReportSummary = translate()(OcpOnAwsReportSummaryBase);\nexport { OcpOnAwsReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '440px',\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpOnAwsReportSummaryAlt.styles';\nconst OcpOnAwsReportSummaryAltBase = ({ children, detailsLink, status, t, tabs, title, subTitle }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(Grid, { gutter: \"md\" },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.cost) },\n                    React.createElement(CardHeader, null,\n                        React.createElement(Title, { size: \"lg\" }, title),\n                        Boolean(subTitle) && (React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle))),\n                    React.createElement(CardBody, null, status === 1 /* inProgress */\n                        ? `${t('loading')}...`\n                        : children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.tops) }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst OcpOnAwsReportSummaryAlt = translate()(OcpOnAwsReportSummaryAltBase);\nexport { OcpOnAwsReportSummaryAlt };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    requestedValue: {\n        marginLeft: global_spacer_sm.value,\n    },\n    text: {\n        display: 'flex',\n        alignItems: 'flex-end',\n        marginLeft: global_spacer_sm.value,\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    titleContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        minWidth: '175px',\n        width: '50%',\n    },\n    usageText: {\n        marginRight: global_spacer_sm.value,\n    },\n    value: {\n        display: 'flex',\n        color: global_Color_100.var,\n        fontSize: global_FontSize_4xl.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './ocpOnAwsReportSummaryDetails.styles';\nconst OcpOnAwsReportSummaryDetails = ({ label, formatValue, formatOptions, report, reportType = \"cost\" /* cost */, requestLabel, }) => {\n    let value = '----';\n    let requestValue = '----';\n    const awsReportType = reportType === \"instance_type\" /* instanceType */ ||\n        reportType === \"storage\" /* storage */;\n    if (report && report.meta && report.meta.total) {\n        if (reportType === \"cost\" /* cost */) {\n            const units = report.meta.total.cost.units\n                ? report.meta.total.cost.units\n                : 'USD';\n            value = formatValue(report.meta.total.cost.value ? report.meta.total.cost.value : 0, units, formatOptions);\n        }\n        else if (awsReportType) {\n            const units = report.meta.total.usage\n                ? report.meta.total.usage.units\n                : 'USD';\n            value = formatValue(report.meta.total.usage.value ? report.meta.total.usage.value : 0, units, formatOptions);\n        }\n        else {\n            const units = report.meta.total.usage.units\n                ? report.meta.total.usage.units\n                : 'GB';\n            value = formatValue(report.meta.total.usage.value ? report.meta.total.usage.value : 0, units, formatOptions);\n            requestValue = formatValue(report.meta.total.request.value ? report.meta.total.request.value : 0, units, formatOptions);\n        }\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: css(styles.titleContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                value,\n                React.createElement(\"div\", { className: css(styles.text) },\n                    React.createElement(\"div\", null, label)))),\n        React.createElement(\"div\", { className: css(styles.titleContainer) }, Boolean(reportType !== \"cost\" /* cost */ && !awsReportType) && (React.createElement(\"div\", { className: css(styles.value, styles.requestedValue) },\n            requestValue,\n            React.createElement(\"div\", { className: css(styles.text) }, requestLabel))))));\n};\nexport { OcpOnAwsReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './ocpOnAwsReportSummaryItem.styles';\nconst OcpOnAwsReportSummaryItem = ({ label, value, totalValue, formatValue, units, formatOptions, }) => {\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = `${formatValue(value, units, formatOptions)} (${percentVal}%)`;\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nOcpOnAwsReportSummaryItem.defaultProps = {\n    formatValue: v => v,\n};\nexport { OcpOnAwsReportSummaryItem };\n","import { sort } from './sort';\nexport function getComputedOcpOnAwsReportItems({ report, idKey, labelKey = idKey, sortKey = 'cost', sortDirection = 0 /* asc */, }) {\n    return sort(getUnsortedComputedOcpOnAwsReportItems({\n        report,\n        idKey,\n        labelKey,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nexport function getUnsortedComputedOcpOnAwsReportItems({ report, idKey, labelKey = idKey, }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint.values) {\n            dataPoint.values.forEach(value => {\n                const capacity = value.capacity ? value.capacity.value : 0;\n                const cost = value.cost ? value.cost.value : 0;\n                const id = value[idKey];\n                let label;\n                if (labelKey === 'cluster' && value.cluster_alias) {\n                    label = value.cluster_alias;\n                }\n                else if (value[labelKey] instanceof Object) {\n                    label = value[labelKey].value;\n                }\n                else {\n                    label = value[labelKey];\n                }\n                const limit = value.limit ? value.limit.value : 0;\n                const request = value.request ? value.request.value : 0;\n                const usage = value.usage ? value.usage.value : 0;\n                const units = value.usage ? value.usage.units : value.cost.units;\n                if (!itemMap.get(id)) {\n                    itemMap.set(id, {\n                        capacity,\n                        cost,\n                        deltaPercent: value.delta_percent,\n                        deltaValue: value.delta_value,\n                        id,\n                        label,\n                        limit,\n                        request,\n                        units,\n                        usage,\n                    });\n                    return;\n                }\n                itemMap.set(id, Object.assign({}, itemMap.get(id), { capacity: itemMap.get(id).capacity + capacity, cost: itemMap.get(id).cost + cost, limit: itemMap.get(id).limit + limit, request: itemMap.get(id).request + request, usage: itemMap.get(id).usage + usage }));\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\nexport function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    return 'date';\n}\n","import React from 'react';\nimport { getComputedOcpOnAwsReportItems, } from 'utils/getComputedOcpOnAwsReportItems';\nclass OcpOnAwsReportSummaryItems extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedOcpOnAwsReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { report, children } = this.props;\n        if (!report) {\n            return null;\n        }\n        const items = this.getItems();\n        return React.createElement(\"ul\", null, children({ items }));\n    }\n}\nexport { OcpOnAwsReportSummaryItems, };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nimport { styles } from './ocpOnAwsReportSummaryTrend.styles';\nconst OcpOnAwsReportSummaryTrend = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { OcpOnAwsReportSummaryTrend };\n","import { css } from '@patternfly/react-styles';\nimport { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nimport { styles } from './ocpOnAwsReportSummaryTrend.styles';\nconst OcpOnAwsReportSummaryUsage = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { OcpOnAwsReportSummaryUsage };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_xl } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    tabs: {\n        marginTop: global_spacer_xl.value,\n    },\n});\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { getQuery, parseQuery } from 'api/ocpOnAwsQuery';\nimport { transformOcpOnAwsReport } from 'components/charts/commonChart/chartUtils';\nimport { Link } from 'components/link';\nimport { OcpOnAwsReportSummary, OcpOnAwsReportSummaryAlt, OcpOnAwsReportSummaryDetails, OcpOnAwsReportSummaryItem, OcpOnAwsReportSummaryItems, OcpOnAwsReportSummaryTrend, OcpOnAwsReportSummaryUsage, } from 'components/reports/ocpOnAwsReportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpOnAwsDashboardActions, ocpOnAwsDashboardSelectors, } from 'store/ocpOnAwsDashboard';\nimport { ocpOnAwsReportsSelectors } from 'store/ocpOnAwsReports';\nimport { formatValue } from 'utils/formatValue';\nimport { styles } from './ocpOnAwsDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nclass OcpOnAwsDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = () => {\n            const { currentQuery } = this.props;\n            const groupBy = parseQuery(currentQuery).group_by;\n            return `/ocp?${getQuery({\n                group_by: groupBy,\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n        this.getChart = (height) => {\n            const { currentReport, previousReport, reportType, t, trend } = this.props;\n            const reportItem = reportType === \"cost\" /* cost */ ? 'cost' : 'usage';\n            const currentUsageData = transformOcpOnAwsReport(currentReport, trend.type, 'date', reportItem);\n            const previousUsageData = transformOcpOnAwsReport(previousReport, trend.type, 'date', reportItem);\n            const currentRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpOnAwsReport(currentReport, trend.type, 'date', 'request')\n                : undefined;\n            const previousRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpOnAwsReport(previousReport, trend.type, 'date', 'request')\n                : undefined;\n            return (React.createElement(React.Fragment, null, Boolean(reportType === \"cost\" /* cost */ ||\n                reportType === \"instance_type\" /* instanceType */ ||\n                reportType === \"storage\" /* storage */) ? (React.createElement(OcpOnAwsReportSummaryTrend, { currentData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousUsageData, title: t(trend.titleKey) })) : (React.createElement(OcpOnAwsReportSummaryUsage, { currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousRequestData: previousRequestData, previousUsageData: previousUsageData }))));\n        };\n        this.getDetails = () => {\n            const { currentReport, details, reportType } = this.props;\n            return (React.createElement(OcpOnAwsReportSummaryDetails, { formatOptions: details.formatOptions, formatValue: formatValue, label: this.getDetailsLabel(), report: currentReport, reportType: reportType, requestLabel: this.getRequestLabel() }));\n        };\n        this.getDetailsLabel = () => {\n            const { details, t } = this.props;\n            return t(details.labelKey, { context: details.labelKeyContext });\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, isDetailsLink } = this.props;\n            return (isDetailsLink && (React.createElement(Link, { to: this.buildDetailsLink() }, this.getDetailsLinkTitle(currentTab))));\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpOnAwsReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: `${this.getSubTitle()}`, tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(180)));\n        };\n        this.getRequestLabel = () => {\n            const { details, t } = this.props;\n            return t(details.requestLabelKey, { context: details.labelKeyContext });\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            const test = t('ocp_on_aws_dashboard.ocp.widget_subtitle', {\n                endDate,\n                month,\n                startDate,\n                count: getDate(today),\n            });\n            return test;\n        };\n        this.getTab = (tab, index) => {\n            const { tabsReport } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) },\n                React.createElement(\"div\", { className: css(styles.tabs) },\n                    React.createElement(OcpOnAwsReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, reportType, tabsReport, topItems } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            if (activeTab === currentTab) {\n                return (React.createElement(OcpOnAwsReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: reportType === \"cost\" /* cost */\n                        ? tabsReport.meta.total.cost.value\n                        : tabsReport.meta.total.usage.value, units: reportItem.units, value: reportType === \"cost\" /* cost */\n                        ? reportItem.cost\n                        : reportItem.usage }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            if (availableTabs) {\n                return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getVerticalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpOnAwsReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(75),\n                this.getTabs()));\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, updateTab, widgetId } = this.props;\n        if (availableTabs) {\n            updateTab(id, availableTabs[0]);\n        }\n        fetchReports(widgetId);\n    }\n    render() {\n        const { isHorizontal = false } = this.props;\n        return Boolean(isHorizontal)\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpOnAwsDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpOnAwsDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: ocpOnAwsReportsSelectors.selectReport(state, widget.reportType, queries.current), currentReportFetchStatus: ocpOnAwsReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current), previousReport: ocpOnAwsReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabsReport: ocpOnAwsReportsSelectors.selectReport(state, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpOnAwsDashboardActions.fetchWidgetReports,\n    updateTab: ocpOnAwsDashboardActions.changeWidgetTab,\n};\nconst OcpOnAwsDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(OcpOnAwsDashboardWidgetBase));\nexport { OcpOnAwsDashboardWidget, OcpOnAwsDashboardWidgetBase, };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpOnAwsDashboardSelectors } from 'store/ocpOnAwsDashboard';\nimport { OcpOnAwsDashboardWidget } from './ocpOnAwsDashboardWidget';\nconst OcpOnAwsDashboardBase = ({ selectWidgets, t, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.isHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(OcpOnAwsDashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { xl: 4, lg: 6, key: widgetId },\n            React.createElement(OcpOnAwsDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: ocpOnAwsDashboardSelectors.selectWidgets(state),\n        widgets: ocpOnAwsDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpOnAwsDashboard = translate()(connect(mapStateToProps, {})(OcpOnAwsDashboardBase));\nexport default OcpOnAwsDashboard;\n","import { Button, ButtonType, ButtonVariant, Tab, Tabs, Title, TitleSize, } from '@patternfly/react-core';\nimport { getProvidersQuery } from 'api/providersQuery';\nimport { ErrorState } from 'components/state/errorState/errorState';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport { NoProvidersState } from 'components/state/noProvidersState/noProvidersState';\nimport AwsDashboard from 'pages/awsDashboard/awsDashboard';\nimport OcpDashboard from 'pages/ocpDashboard/ocpDashboard';\nimport OcpOnAwsDashboard from 'pages/ocpOnAwsDashboard/ocpOnAwsDashboard';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions } from 'store/onboarding';\nimport { awsProvidersQuery, ocpProvidersQuery, providersSelectors, } from 'store/providers';\nimport { getTestProps, testIds } from 'testIds';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"aws\" /* aws */:\n            return 'aws';\n        case \"ocp\" /* ocp */:\n            return 'ocp';\n        case \"ocpOnAws\" /* ocpOnAws */:\n            return 'ocpOnAws';\n    }\n};\nclass OverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.getAddSourceButton = () => {\n            const { openProvidersModal, t } = this.props;\n            return (React.createElement(Button, Object.assign({}, getTestProps(testIds.providers.add_btn), { onClick: openProvidersModal, type: ButtonType.submit, variant: ButtonVariant.secondary }), t('providers.add_source')));\n        };\n        this.getTab = (tab, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) }, this.getTabItem(tab, index)));\n        };\n        this.getTabItem = (tab, index) => {\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === \"ocpOnAws\" /* ocpOnAws */) {\n                return activeTabKey === index ? React.createElement(OcpOnAwsDashboard, null) : null;\n            }\n            else if (currentTab === \"ocp\" /* ocp */) {\n                return activeTabKey === index ? React.createElement(OcpDashboard, null) : null;\n            }\n            else if (currentTab === \"aws\" /* aws */) {\n                return activeTabKey === index ? React.createElement(AwsDashboard, null) : null;\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { awsProviders, ocpProviders } = this.props;\n            const { activeTabKey } = this.state;\n            const availableTabs = [];\n            // Todo: How do we check if we have Ocp on Aws?\n            if (awsProviders &&\n                awsProviders.meta &&\n                awsProviders.meta.count &&\n                (ocpProviders && ocpProviders.meta && ocpProviders.meta.count)) {\n                availableTabs.push(\"ocpOnAws\" /* ocpOnAws */);\n            }\n            if (ocpProviders && ocpProviders.meta && ocpProviders.meta.count) {\n                availableTabs.push(\"ocp\" /* ocp */);\n            }\n            if (awsProviders && awsProviders.meta && awsProviders.meta.count) {\n                availableTabs.push(\"aws\" /* aws */);\n            }\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            if (tab === \"aws\" /* aws */) {\n                return t('overview.aws');\n            }\n            else if (tab === \"ocp\" /* ocp */) {\n                return t('overview.ocp');\n            }\n            else if (tab === \"ocpOnAws\" /* ocpOnAws */) {\n                return t('overview.ocp_on_aws');\n            }\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    render() {\n        const { awsProviders, awsProvidersError, awsProvidersFetchStatus, ocpProviders, ocpProvidersError, ocpProvidersFetchStatus, t, } = this.props;\n        const error = awsProvidersError || ocpProvidersError;\n        const isLoading = awsProvidersFetchStatus === 1 /* inProgress */ ||\n            ocpProvidersFetchStatus === 1 /* inProgress */;\n        const noAwsProviders = awsProviders !== undefined &&\n            awsProviders.meta !== undefined &&\n            awsProviders.meta.count === 0 &&\n            awsProvidersFetchStatus === 2 /* complete */;\n        const noOcpProviders = ocpProviders !== undefined &&\n            ocpProviders.meta !== undefined &&\n            ocpProviders.meta.count === 0 &&\n            ocpProvidersFetchStatus === 2 /* complete */;\n        const noProviders = noAwsProviders && noOcpProviders;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"section\", { className: \"pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light\" },\n                React.createElement(\"header\", { className: \"pf-u-display-flex pf-u-justify-content-space-between pf-u-align-items-center\" },\n                    React.createElement(Title, { size: TitleSize.lg }, t('overview.title')),\n                    this.getAddSourceButton())),\n            React.createElement(\"section\", { className: \"pf-l-page__main-section pf-c-page__main-section\", \"page-type\": \"cost-management-overview\" }, Boolean(error) ? (React.createElement(ErrorState, { error: error })) : Boolean(noProviders) ? (React.createElement(NoProvidersState, null)) : Boolean(isLoading) ? (React.createElement(LoadingState, null)) : (this.getTabs()))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(state => {\n    const awsProvidersQueryString = getProvidersQuery(awsProvidersQuery);\n    const awsProviders = providersSelectors.selectProviders(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const awsProvidersError = providersSelectors.selectProvidersError(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const awsProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const ocpProvidersQueryString = getProvidersQuery(ocpProvidersQuery);\n    const ocpProviders = providersSelectors.selectProviders(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    const ocpProvidersError = providersSelectors.selectProvidersError(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    const ocpProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    return {\n        awsProviders,\n        awsProvidersError,\n        awsProvidersFetchStatus,\n        awsProvidersQueryString,\n        ocpProviders,\n        ocpProvidersError,\n        ocpProvidersFetchStatus,\n        ocpProvidersQueryString,\n    };\n});\nconst Overview = translate()(connect(mapStateToProps, {\n    openProvidersModal: onboardingActions.openModal,\n})(OverviewBase));\nexport default Overview;\n","import { hot } from 'react-hot-loader';\nimport Overview from './overview';\nexport default hot(module)(Overview);\n"],"sourceRoot":""}