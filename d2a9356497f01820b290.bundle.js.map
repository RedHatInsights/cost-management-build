{"version":3,"sources":["webpack://koku-ui/./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeader.js","webpack://koku-ui/./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeaderTitle.js","webpack://koku-ui/./src/api/queries/providersQuery.ts","webpack://koku-ui/./src/components/charts/chartTheme/theme-koku.ts","webpack://koku-ui/./src/components/charts/chartTheme/index.ts","webpack://koku-ui/./src/components/charts/chartTheme/theme-utils.ts","webpack://koku-ui/./src/utils/computedForecast/getComputedForecastItems.ts","webpack://koku-ui/./src/components/charts/common/chartDatumUtils.ts","webpack://koku-ui/./src/components/charts/common/chartUtils.ts","webpack://koku-ui/./src/components/reports/reportSummary/reportSummary.tsx","webpack://koku-ui/./src/components/reports/reportSummary/reportSummaryAlt.tsx","webpack://koku-ui/./src/components/reports/reportSummary/reportSummaryDetails.tsx","webpack://koku-ui/./src/components/reports/reportSummary/reportSummaryItem.tsx","webpack://koku-ui/./src/components/reports/reportSummary/reportSummaryItems.tsx","webpack://koku-ui/./src/components/charts/costChart/costChart.styles.ts","webpack://koku-ui/./src/components/charts/costChart/costChart.tsx","webpack://koku-ui/./src/components/reports/reportSummary/reportSummaryCost.tsx","webpack://koku-ui/./src/components/charts/dailyCostChart/dailyCostChart.styles.ts","webpack://koku-ui/./src/components/charts/dailyCostChart/dailyCostChart.tsx","webpack://koku-ui/./src/components/reports/reportSummary/reportSummaryDailyCost.tsx","webpack://koku-ui/./src/components/charts/dailyTrendChart/dailyTrendChart.styles.ts","webpack://koku-ui/./src/components/charts/dailyTrendChart/dailyTrendChart.tsx","webpack://koku-ui/./src/components/reports/reportSummary/reportSummaryDailyTrend.tsx","webpack://koku-ui/./src/components/charts/trendChart/trendChart.styles.ts","webpack://koku-ui/./src/components/charts/trendChart/trendChart.tsx","webpack://koku-ui/./src/components/reports/reportSummary/reportSummaryTrend.tsx","webpack://koku-ui/./src/components/charts/usageChart/usageChart.styles.ts","webpack://koku-ui/./src/components/charts/usageChart/usageChart.tsx","webpack://koku-ui/./src/components/reports/reportSummary/reportSummaryUsage.tsx","webpack://koku-ui/./src/components/state/emptyValueState/emptyValueState.tsx","webpack://koku-ui/./src/pages/state/loading/loading.tsx","webpack://koku-ui/./src/pages/state/loading/index.ts","webpack://koku-ui/./src/pages/state/noData/noDataState.tsx","webpack://koku-ui/./src/pages/state/noData/noData.tsx","webpack://koku-ui/./src/components/icons/costIcon/costIcon.tsx","webpack://koku-ui/./src/components/icons/costIcon/index.ts","webpack://koku-ui/./src/pages/state/noProviders/noProvidersState.styles.ts","webpack://koku-ui/./src/pages/state/noProviders/noProvidersState.tsx","webpack://koku-ui/./src/pages/state/noProviders/index.ts","webpack://koku-ui/./src/pages/state/noProviders/noProviders.tsx","webpack://koku-ui/./src/pages/views/utils/providers.ts","webpack://koku-ui/./src/utils/computedReport/getComputedReportItems.ts","webpack://koku-ui/./src/utils/computedReport/getItemLabel.ts","webpack://koku-ui/./src/utils/noop.ts","webpack://koku-ui/./src/utils/pathname.ts","webpack://koku-ui/./src/utils/skeleton.ts","webpack://koku-ui/./src/utils/sort.ts"],"names":["PageHeader","_ref","className","children","props","pageHeaderClasses","theme","arguments","length","undefined","themeClasses","concat","propTypes","PageHeaderTitle","title","pageHeaderTitleClasses","headingLevel","size","getProvidersQuery","query","stringify","encode","indices","LAYOUT_PROPS","padding","area","Object","assign","axis","bar","boxplot","candlestick","chart","errorbar","group","legend","line","pie","scatter","stack","tooltip","voronoi","getCustomTheme","ChartThemeColor","ChartThemeVariant","getComputedForecastItems","forecast","sortDirection","sortKey","sort","itemMap","Map","visitDataPoint","dataPoint","values","forEach","val","date","item","get","set","cost","getCostData","infrastructure","supplementary","key","Array","data","from","getUnsortedComputedForecastItems","direction","confidence_max","value","units","confidence_min","pvalues","Number","rsquared","total","transformForecast","type","forecastItem","forecastItemValue","computedItems","chartDatums","map","i","createForecastDatum","reduce","acc","d","prevValue","y","padChartDatums","transformForecastCone","createForecastConeDatum","prevMaxValue","prevMinValue","y0","transformReport","report","idKey","reportItem","reportItemValue","items","getComputedReportItems","createReportDatum","computedItem","xVal","getDate","Date","yVal","isFloat","parseFloat","toFixed","isInt","x","maxValue","minValue","y0Val","id","label","name","datums","result","firstDate","lastDate","padDate","startOfMonth","setDate","format","push","endOfMonth","prevChartDatum","chartDatum","find","fillChartDatums","getDateRange","firstOfMonth","lastOfMonth","offset","start","end","today","setMonth","getMonth","firstDay","lastDay","getDatumDateRange","getMaxValue","max","datum","getMaxMinValues","min","maxY","Math","minY","getTooltipContent","formatValue","unit","options","lookup","getCostRangeString","count","endDate","month","startDate","year","getYear","getUsageRangeString","n","getChartNames","series","serie","childName","getDomain","hiddenSeries","domain","s","index","isSeriesHidden","threshold","ceil","_min","floor","getLegendData","legendItem","getInteractiveLegendItemStyles","has","filter","indexOf","getTooltipLabel","formatDatumValue","formatDatumOptions","formatter","dy","dy0","value0","value1","getResizeObserver","containerRef","handleResize","containerElement","ResizeObserver","window","_navToggle","_resizeObserver","resizeObserver","entries","requestAnimationFrame","isArray","observe","unobserve","addEventListener","removeEventListener","insights","chrome","on","setTimeout","initHiddenSeries","Set","delete","add","_index","isDataAvailable","unavailable","isDataHidden","keys","next","done","dataChildName","serieChildName","ReportSummary","withTranslation","detailsLink","subTitle","status","Card","CardTitle","Title","Boolean","CardBody","Skeleton","width","skeleton","CardFooter","ReportSummaryAlt","tabs","Grid","hasGutter","GridItem","xl","ReportSummaryDetails","chartType","computedReportItem","computedReportItemValue","costLabel","formatOptions","requestFormatOptions","requestLabel","reportType","showTooltip","showUnits","showUsageFirst","t","usageFormatOptions","usageLabel","supplementaryCost","infrastructureCost","request","usage","hasTotal","meta","hasCost","hasCount","hasSupplementaryCost","hasInfrastructureCost","hasRequest","hasUsage","getCostLayout","showAltHeroFont","altHeroFont","Tooltip","content","enableFlip","getRequestLayout","usageUnits","_units","unitsLabel","getUsageLayout","ReportSummaryItemBase","totalValue","percentVal","percentLabel","percent","Progress","ProgressSize","defaultProps","v","ReportSummaryItem","ReportSummaryItemsBase","nextProps","this","otherIndex","findIndex","slice","getItems","ReportSummaryItems","chartStyles","currentColorScale","chart_color_green_400","chart_color_green_300","chart_color_green_200","chart_color_green_100","chart_color_green_500","currentCostData","fill","currentInfrastructureColorScale","chart_color_blue_400","chart_color_blue_300","chart_color_blue_200","chart_color_blue_100","chart_color_blue_500","currentInfrastructureCostData","strokeDasharray","forecastConeData","strokeWidth","forecastConeDataColorScale","forecastData","forecastDataColorScale","forecastInfrastructureConeData","forecastInfrastructureConeDataColorScale","forecastInfrastructureData","forecastInfrastructureDataColorScale","previousCostData","previousInfrastructureCostData","previousColorScale","chart_color_black_200","yAxis","axisLabel","grid","stroke","ticks","tickLabels","fontSize","xAxis","CostChart","super","observer","noop","state","initDatum","showForecast","costKey","costInfrastructureKey","costInfrastructureTooltipKey","costTooltipKey","symbol","style","cursorVoronoiContainer","getCursorVoronoiContainer","setState","getAdjustedContainerHeight","adjustContainerHeight","height","containerHeight","adjustedContainerHeight","getChart","ChartArea","interpolation","CursorVoronoiContainer","createContainer","cursorDimension","labels","mouseFollowTooltips","voronoiDimension","voronoiPadding","bottom","left","right","top","getLegend","ChartLegend","gutter","responsive","handleLegendClick","clientWidth","current","prevProps","getInteractiveLegendEvents","chartNames","isHidden","legendName","onLegendClick","currentInfrastructureDate","currentCostDate","forecastCostDate","previousInfrastructureDate","previousUsageDate","ge","getEndDate","half","_2ndDay","_3rdDay","_4thDay","container","disable","labelComponent","ChartLegendTooltip","legendData","day","ref","Chart","containerComponent","events","getEvents","legendAllowWrap","legendComponent","legendPosition","ChartAxis","tickValues","dependentAxis","ReportSummaryCost","chart_color_orange_300","DailyCostChart","initDatumChildName","isLine","isBar","isForecast","ChartBar","alignment","ChartLine","getForecastBarChart","getForecastLineChart","barWidth","ChartGroup","ReportSummaryDailyCost","itemsPerRow","DailyTrendChart","currentData","previousData","showSupplementaryLabel","showUsageLegendLabel","tooltipKey","legendItemsPerRow","orientation","previousDate","currentDate","forecastDate","ReportSummaryDailyTrend","currentMonthData","previousMonthData","TrendChart","midDate","tooltipTitle","ReportSummaryTrend","chartContainer","marginTop","currentRequestData","currentUsageData","legendColorScale","previousRequestData","previousUsageData","UsageChart","usageKey","usageTooltipKey","requestKey","requestTooltipKey","currentRequestDate","currentUsageDate","previousRequestDate","ReportSummaryUsage","EmptyValueState","withRouter","Main","NoDataStateBase","showReload","EmptyState","variant","EmptyStateVariant","EmptyStateIcon","icon","EmptyStateBody","Button","onClick","location","reload","NoDataState","src","alt","styles","iconSpacer","marginLeft","viewSources","global_spacer_lg","NoProvidersStateBase","getDocLink","textKey","urlKey","href","rel","target","getRouteToSources","providerType","docUrlKey","descKey","titleKey","component","NoProvidersState","hasCurrentMonthData","providers","provider","current_month_data","hasData","has_data","hasPreviousMonthData","previous_month_data","daily","getUnsortedComputedReportItems","markup","raw","getUsageData","capacity","limit","mapId","cluster","cluster_alias","clusters","delta_percent","delta_value","source_uuid","others","itemLabelKey","String","group_by","tagPrefixKey","hasOwnProperty","getItemLabel","alias","account_alias","trim","dateMap","getReleasePath","pathName","pathname","split","shift","release","skeletonWidth","xs","sm","md","lg","getValueForItem","array","a","b","aVal","bVal"],"mappings":"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","file":"d2a9356497f01820b290.bundle.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ThemeContext from '../Dark/configContext';\nimport \"../../PageHeader/./page-header.css\";\n/**\n * This is a page header that mimics the patternfly layout for a header section\n */\n\nvar PageHeader = function PageHeader(_ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"className\", \"children\"]);\n\n  var pageHeaderClasses = classNames(className, 'pf-l-page-header', 'pf-c-page-header', 'pf-l-page__main-section', 'pf-c-page__main-section');\n  return /*#__PURE__*/React.createElement(ThemeContext.Consumer, null, function () {\n    var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';\n    var themeClasses = classNames(_defineProperty({}, \"pf-m-\".concat(theme, \"-200\"), theme === 'dark'), _defineProperty({}, \"pf-m-light\", theme === 'light'));\n    return /*#__PURE__*/React.createElement(\"section\", _extends({}, props, {\n      className: \"\".concat(pageHeaderClasses, \" \").concat(themeClasses),\n      \"widget-type\": \"InsightsPageHeader\"\n    }), children);\n  });\n};\n\nexport default PageHeader;\nPageHeader.propTypes = {\n  children: propTypes.any.isRequired,\n  className: propTypes.string\n};","import React from 'react';\nimport propTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Title } from \"@patternfly/react-core/dist/esm/components/Title/Title.js\";\n/**\n * This is the title section of the pageHeader\n */\n\nvar PageHeaderTitle = function PageHeaderTitle(_ref) {\n  var className = _ref.className,\n      title = _ref.title;\n  var pageHeaderTitleClasses = classNames(className);\n  return /*#__PURE__*/React.createElement(Title, {\n    headingLevel: \"h1\",\n    size: \"2xl\",\n    className: pageHeaderTitleClasses,\n    \"widget-type\": \"InsightsPageHeaderTitle\"\n  }, \" \", title, \" \");\n};\n\nexport default PageHeaderTitle;\nPageHeaderTitle.propTypes = {\n  title: propTypes.node.isRequired,\n  className: propTypes.string\n};","import { parse, stringify } from 'qs';\nexport function getProvidersQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseProvidersQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","// Layout\nconst LAYOUT_PROPS = {\n    padding: 8,\n};\n// Victory theme properties only\nexport default {\n    area: Object.assign({}, LAYOUT_PROPS),\n    axis: Object.assign({}, LAYOUT_PROPS),\n    bar: Object.assign({}, LAYOUT_PROPS),\n    boxplot: Object.assign({}, LAYOUT_PROPS),\n    candlestick: Object.assign({}, LAYOUT_PROPS),\n    chart: Object.assign({}, LAYOUT_PROPS),\n    errorbar: Object.assign({}, LAYOUT_PROPS),\n    group: Object.assign({}, LAYOUT_PROPS),\n    legend: {},\n    line: Object.assign({}, LAYOUT_PROPS),\n    pie: Object.assign({}, LAYOUT_PROPS),\n    scatter: Object.assign({}, LAYOUT_PROPS),\n    stack: Object.assign({}, LAYOUT_PROPS),\n    tooltip: {},\n    voronoi: Object.assign({}, LAYOUT_PROPS),\n};\n","import getTheme from './theme-utils';\nconst ChartTheme = getTheme();\nexport default ChartTheme;\n","import { ChartThemeColor, ChartThemeVariant, getCustomTheme } from '@patternfly/react-charts';\nimport { default as ChartTheme } from './theme-koku';\n// Applies theme color and variant to base theme\nconst getTheme = () => getCustomTheme(ChartThemeColor.default, ChartThemeVariant.default, ChartTheme);\nexport default getTheme;\n","import { sort } from 'utils/sort';\nexport function getComputedForecastItems({ forecast, sortDirection = 0 /* asc */, sortKey = 'date', }) {\n    return sort(getUnsortedComputedForecastItems({\n        forecast,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nfunction getCostData(val, key, item) {\n    return {\n        confidence_max: {\n            value: item\n                ? item[key].confidence_max.value\n                : 0 + val[key] && val[key].confidence_max\n                    ? val[key].confidence_max.value\n                    : 0,\n            units: val[key] && val[key].confidence_max ? val[key].confidence_max.units : 'USD',\n        },\n        confidence_min: {\n            value: item\n                ? item[key].confidence_min.value\n                : 0 + val[key] && val[key].confidence_min\n                    ? val[key].confidence_min.value\n                    : 0,\n            units: val[key] && val[key].confidence_min ? val[key].confidence_min.units : 'USD',\n        },\n        pvalues: {\n            value: val[key] && val[key].pvalues ? Number(val[key].pvalues.value) : 0,\n            units: val[key] && val[key].pvalues ? val[key].pvalues.units : null,\n        },\n        rsquared: {\n            value: val[key] && val[key].rsquared ? Number(val[key].rsquared.value) : 0,\n            units: val[key] && val[key].rsquared ? val[key].rsquared.units : null,\n        },\n        total: {\n            value: item ? item[key].total.value : 0 + val[key] && val[key].total ? val[key].total.value : 0,\n            units: val[key] && val[key].total ? val[key].total.units : 'USD',\n        },\n    };\n}\nexport function getUnsortedComputedForecastItems({ forecast, }) {\n    if (!forecast) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint && dataPoint.values) {\n            dataPoint.values.forEach((val) => {\n                const date = val.date;\n                const item = itemMap.get(date);\n                if (item) {\n                    // This code block is typically entered with filter[resolution]=monthly\n                    itemMap.set(date, Object.assign(Object.assign({}, item), { date, cost: getCostData(val, 'cost', item), infrastructure: getCostData(val, 'infrastructure', item), supplementary: getCostData(val, 'supplementary', item) }));\n                }\n                else {\n                    // This code block is typically entered with filter[resolution]=daily\n                    itemMap.set(date, {\n                        date,\n                        cost: getCostData(val, 'cost'),\n                        infrastructure: getCostData(val, 'infrastructure'),\n                        supplementary: getCostData(val, 'supplementary'),\n                    });\n                }\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (forecast && forecast.data) {\n        forecast.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\n","import { endOfMonth, format, getDate, getYear, startOfMonth } from 'date-fns';\nimport i18next from 'i18next';\nimport { getComputedForecastItems } from 'utils/computedForecast/getComputedForecastItems';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { unitLookupKey } from 'utils/formatValue';\nexport function transformForecast(forecast, type = 1 /* daily */, forecastItem = 'cost', forecastItemValue = 'total') {\n    if (!forecast) {\n        return [];\n    }\n    const items = {\n        forecast,\n        sortKey: 'date',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedForecastItems(items);\n    let chartDatums;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        chartDatums = computedItems.map(i => createForecastDatum(i[forecastItem][forecastItemValue].value, i));\n    }\n    else {\n        chartDatums = computedItems.reduce((acc, d) => {\n            const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n            return [...acc, createForecastDatum(prevValue + d[forecastItem][forecastItemValue].value, d)];\n        }, []);\n    }\n    return padChartDatums(chartDatums, type);\n}\nexport function transformForecastCone(forecast, type = 1 /* daily */, forecastItem = 'cost', forecastItemValue = 'total') {\n    if (!forecast) {\n        return [];\n    }\n    const items = {\n        forecast,\n        sortKey: 'date',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedForecastItems(items);\n    let chartDatums;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        chartDatums = computedItems.map(i => createForecastConeDatum(i[forecastItem].confidence_max.value, i[forecastItem].confidence_min.value, i));\n    }\n    else {\n        chartDatums = computedItems.reduce((acc, d) => {\n            const prevMaxValue = acc.length ? acc[acc.length - 1].y : d[forecastItem][forecastItemValue].value;\n            const prevMinValue = acc.length ? acc[acc.length - 1].y0 : d[forecastItem][forecastItemValue].value;\n            return [\n                ...acc,\n                createForecastConeDatum(prevMaxValue + d[forecastItem].confidence_max.value, prevMinValue + d[forecastItem].confidence_min.value, d),\n            ];\n        }, []);\n    }\n    return padChartDatums(chartDatums, type);\n}\nexport function transformReport(report, type = 1 /* daily */, idKey = 'date', reportItem = 'cost', reportItemValue = 'total' // useful for infrastructure.usage values\n) {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        idKey,\n        report,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedReportItems(items);\n    let chartDatums;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        chartDatums = computedItems.map(i => {\n            const val = i[reportItem][reportItemValue] ? i[reportItem][reportItemValue].value : i[reportItem].value;\n            return createReportDatum(val, i, idKey, reportItem, reportItemValue);\n        });\n    }\n    else {\n        chartDatums = computedItems.reduce((acc, d) => {\n            const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n            const val = d[reportItem][reportItemValue] ? d[reportItem][reportItemValue].value : d[reportItem].value;\n            return [...acc, createReportDatum(prevValue + val, d, idKey, reportItem, reportItemValue)];\n        }, []);\n    }\n    return idKey === 'date' ? padChartDatums(chartDatums, type) : chartDatums;\n}\nexport function createForecastDatum(value, computedItem, forecastItem = 'cost', forecastItemValue = 'total') {\n    const xVal = getDate(new Date(computedItem.date + 'T00:00:00'));\n    const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n    return {\n        x: xVal,\n        y: value === null ? null : yVal,\n        key: computedItem.date,\n        units: computedItem[forecastItem] && computedItem[forecastItem][forecastItemValue]\n            ? computedItem[forecastItem][forecastItemValue].units\n            : undefined,\n    };\n}\nexport function createForecastConeDatum(maxValue, minValue, computedItem, forecastItem = 'cost', forecastItemValue = 'total') {\n    const xVal = getDate(new Date(computedItem.date + 'T00:00:00'));\n    const yVal = isFloat(maxValue) ? parseFloat(maxValue.toFixed(2)) : isInt(maxValue) ? maxValue : 0;\n    const y0Val = isFloat(minValue) ? parseFloat(minValue.toFixed(2)) : isInt(minValue) ? minValue : 0;\n    return {\n        x: xVal,\n        y: maxValue === null ? null : yVal,\n        y0: minValue === null ? null : y0Val,\n        key: computedItem.date,\n        units: computedItem[forecastItem] && computedItem[forecastItem][forecastItemValue]\n            ? computedItem[forecastItem][forecastItemValue].units\n            : undefined,\n    };\n}\nexport function createReportDatum(value, computedItem, idKey = 'date', reportItem = 'cost', reportItemValue = 'total' // useful for infrastructure.usage values\n) {\n    const xVal = idKey === 'date' ? getDate(new Date(computedItem.id + 'T00:00:00')) : computedItem.label;\n    const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n    return {\n        x: xVal,\n        y: value === null ? null : yVal,\n        key: computedItem.id,\n        name: computedItem.label ? computedItem.label : computedItem.id,\n        units: computedItem[reportItem]\n            ? computedItem[reportItem][reportItemValue]\n                ? computedItem[reportItem][reportItemValue].units // cost, infrastructure, supplementary\n                : computedItem[reportItem].units // capacity, limit, request, usage\n            : undefined,\n    };\n}\n// Fill in missing data with previous value to represent cumulative daily cost\nexport function fillChartDatums(datums, type = 1 /* daily */) {\n    const result = [];\n    if (!datums || datums.length === 0) {\n        return result;\n    }\n    const firstDate = new Date(datums[0].key + 'T00:00:00');\n    const lastDate = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    const padDate = startOfMonth(firstDate);\n    let prevChartDatum;\n    for (let i = padDate.getDate(); i <= endOfMonth(lastDate).getDate(); i++) {\n        padDate.setDate(i);\n        const id = format(padDate, 'yyyy-MM-dd');\n        const chartDatum = datums.find(val => val.key === id);\n        if (chartDatum) {\n            result.push(chartDatum);\n        }\n        else if (prevChartDatum) {\n            result.push(Object.assign(Object.assign({}, prevChartDatum), { key: id, x: getDate(new Date(id + 'T00:00:00')) }));\n        }\n        if (chartDatum) {\n            // Note: We want to identify missing data, but charts won't extrapolate (connect data points) if we return null here\n            // for missing daily values. For example, if there is only data for the first and last day of the month, charts would\n            // typically draw a line between two points by default. However, showing \"no data\" is more obvious there was a problem.\n            if (type === 1 /* daily */) {\n                prevChartDatum = {\n                    key: id,\n                    x: getDate(new Date(id + 'T00:00:00')),\n                    y: null,\n                };\n            }\n            else {\n                prevChartDatum = chartDatum;\n            }\n        }\n    }\n    return result;\n}\n// This pads chart datums with null datum objects, representing missing data at the beginning and end of the\n// data series. The remaining data is left as is to allow for extrapolation. This allows us to display a \"no data\"\n// message in the tooltip, which helps distinguish between zero values and when there is no data available.\nexport function padChartDatums(datums, type = 1 /* daily */) {\n    const result = [];\n    if (!datums || datums.length === 0) {\n        return result;\n    }\n    const firstDate = new Date(datums[0].key + 'T00:00:00');\n    const lastDate = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    // Pad start for missing data\n    let padDate = startOfMonth(firstDate);\n    for (let i = padDate.getDate(); i < firstDate.getDate(); i++) {\n        padDate.setDate(i);\n        const id = format(padDate, 'yyyy-MM-dd');\n        result.push(createReportDatum(null, { id }, 'date', null));\n    }\n    // Fill middle with existing data\n    result.push(...datums);\n    // Pad end for missing data\n    padDate = new Date(lastDate);\n    for (let i = padDate.getDate() + 1; i <= endOfMonth(lastDate).getDate(); i++) {\n        padDate.setDate(i);\n        const id = format(padDate, 'yyyy-MM-dd');\n        result.push(createReportDatum(null, { id }, 'date', null));\n    }\n    return fillChartDatums(result, type);\n}\nexport function getDatumDateRange(datums, offset = 0) {\n    if (!(datums && datums.length)) {\n        const today = new Date();\n        // If datums is empty, obtain the month based on offset (e.g., to show previous month in chart legends)\n        if (offset) {\n            today.setMonth(today.getMonth() - offset);\n        }\n        const firstOfMonth = startOfMonth(today);\n        return [firstOfMonth, today];\n    }\n    // Find the first populated (non-null) day\n    let firstDay = 0;\n    for (let i = firstDay; i < datums.length; i++) {\n        if (datums[i].y && datums[i].y !== null) {\n            firstDay = i;\n            break;\n        }\n    }\n    // Find the last populated (non-null) day\n    let lastDay = datums.length - 1;\n    for (let i = lastDay; i >= 0; i--) {\n        if (datums[i].y && datums[i].y !== null) {\n            lastDay = i;\n            break;\n        }\n    }\n    const start = new Date(datums[firstDay].key + 'T00:00:00');\n    const end = new Date(datums[lastDay].key + 'T00:00:00');\n    return [start, end];\n}\nexport function getDateRange(datums, firstOfMonth = true, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDatumDateRange(datums, offset);\n    // Show the date range we are trying to cover (i.e., days 1-30/31)\n    if (firstOfMonth && start.setDate) {\n        start.setDate(1);\n    }\n    if (lastOfMonth && start.setDate) {\n        const lastDate = endOfMonth(start).getDate();\n        end.setDate(lastDate);\n    }\n    return [start, end];\n}\nexport function getDateRangeString(datums, firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    const count = getDate(end);\n    const endDate = format(end, 'dd');\n    const month = Number(format(start, 'M')) - 1;\n    const month_abbr = Number(format(start, 'MMM')) - 1;\n    const startDate = format(start, 'dd');\n    const year = getYear(end);\n    if (i18next && i18next.t) {\n        return i18next.t(`chart.date_range`, {\n            count,\n            endDate,\n            month,\n            startDate,\n            year,\n        });\n    }\n    // Federated modules may not have access to the i18next package\n    if (count > 1) {\n        return `${startDate}-${endDate} ${month_abbr} ${year}`;\n    }\n    return `${startDate} ${month_abbr} ${year}`;\n}\nexport function getMonthRangeString(datums, key = 'chart.month_legend_label', offset = 0) {\n    const [start, end] = getDateRange(datums, true, false, offset);\n    const startMonth = Number(format(start, 'MMM')) - 1;\n    const endMonth = Number(format(end, 'M')) - 1;\n    if (i18next && i18next.t) {\n        return [\n            i18next.t(key, {\n                month: startMonth,\n            }),\n            i18next.t(key, {\n                month: endMonth,\n            }),\n        ];\n    }\n    // Federated modules may not have access to the i18next package\n    return [`${startMonth}`, `${endMonth}`];\n}\nexport function getMaxValue(datums) {\n    let max = 0;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            if (datum.y > max) {\n                max = datum.y;\n            }\n        });\n    }\n    return max;\n}\nexport function getMaxMinValues(datums) {\n    let max = -1;\n    let min = -1;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            const maxY = datum.y0 !== undefined ? Math.max(datum.y, datum.y0) : datum.y;\n            const minY = datum.y0 !== undefined ? Math.min(datum.y, datum.y0) : datum.y;\n            if (maxY > max) {\n                max = maxY;\n            }\n            if ((min === -1 || minY < min) && minY !== null) {\n                min = minY;\n            }\n        });\n    }\n    return { max, min };\n}\nexport function getTooltipContent(formatValue) {\n    return function labelFormatter(value, unit = null, options = {}) {\n        const lookup = unitLookupKey(unit);\n        switch (lookup) {\n            case 'core-hours':\n            case 'hour':\n            case 'hrs':\n            case 'gb':\n            case 'gb-hours':\n            case 'gb-mo':\n            case 'gibibyte month':\n            case 'vm-hours':\n                return i18next.t(`unit_tooltips.${lookup}`, {\n                    value: `${formatValue(value, unit, options)}`,\n                });\n            default:\n                return `${formatValue(value, unit, options)}`;\n        }\n    };\n}\nexport function getTooltipLabel(datum, formatValue, formatOptions, idKey = 'date', units) {\n    if (!datum.key) {\n        return '';\n    }\n    if (idKey === 'date') {\n        const date = format(new Date(datum.key), 'dd MMM yyyy');\n        return `${date} ${formatValue(datum.y, units ? units : datum.units, formatOptions)}`;\n    }\n    return datum.key.toString();\n}\nexport function getCostRangeString(datums, key = 'chart.cost_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    if (!(datums && datums.length)) {\n        return i18next.t(`${key}_no_data`);\n    }\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(key, {\n        count: getDate(end),\n        endDate: format(end, 'd'),\n        month: Number(format(start, 'M')) - 1,\n        startDate: format(start, 'd'),\n        year: getYear(end),\n    });\n}\nexport function getUsageRangeString(datums, key = 'chart.usage_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    return getCostRangeString(datums, key, firstOfMonth, lastOfMonth, offset);\n}\n// Returns true if non negative integer\nexport function isInt(n) {\n    const result = Number(n) === n && n % 1 === 0;\n    return result && n >= 0;\n}\n// Returns true if non negative float\nexport function isFloat(n) {\n    const result = Number(n) === n && n % 1 !== 0;\n    return result && n >= 0;\n}\n","import { getInteractiveLegendItemStyles } from '@patternfly/react-charts';\nimport i18next from 'i18next';\nimport { getMaxMinValues, getTooltipContent } from './chartDatumUtils';\n// Returns groups of chart names associated with each data series\nexport const getChartNames = (series) => {\n    const result = [];\n    if (series) {\n        series.map(serie => {\n            // Each group of chart names are hidden / shown together\n            result.push(serie.childName);\n        });\n    }\n    return result;\n};\nexport const getDomain = (series, hiddenSeries) => {\n    const domain = { x: [1, 31] };\n    let maxValue = -1;\n    let minValue = -1;\n    if (series) {\n        series.forEach((s, index) => {\n            if (!isSeriesHidden(hiddenSeries, index) && s.data && s.data.length !== 0) {\n                const { max, min } = getMaxMinValues(s.data);\n                maxValue = Math.max(maxValue, max);\n                if (minValue === -1) {\n                    minValue = min;\n                }\n                else {\n                    minValue = Math.min(minValue, min);\n                }\n            }\n        });\n    }\n    const threshold = maxValue * 0.1;\n    const max = maxValue > 0 ? Math.ceil(maxValue + threshold) : 0;\n    const _min = minValue > 0 ? Math.max(0, Math.floor(minValue - threshold)) : 0;\n    const min = _min > 0 ? _min : 0;\n    if (max > 0) {\n        domain.y = [min, max];\n    }\n    return domain;\n};\n// Returns legend data styled per hiddenSeries\nexport const getLegendData = (series, hiddenSeries, tooltip = false) => {\n    if (!series) {\n        return undefined;\n    }\n    const result = series.map((s, index) => {\n        const data = Object.assign(Object.assign(Object.assign({ childName: s.childName }, s.legendItem), (tooltip && { name: s.legendItem.tooltip })), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n        return data;\n    });\n    return tooltip ? result : result.filter(d => d.childName.indexOf('Cone') === -1);\n};\n// Note: Forecast is expected to use both datum.y and datum.y0\nexport const getTooltipLabel = (datum, formatDatumValue, formatDatumOptions) => {\n    const formatter = getTooltipContent(formatDatumValue);\n    const dy = datum.y !== undefined && datum.y !== null ? formatter(datum.y, datum.units, formatDatumOptions) : undefined;\n    const dy0 = datum.y0 !== undefined && datum.y0 !== null ? formatter(datum.y0, datum.units, formatDatumOptions) : undefined;\n    if (dy !== undefined && dy0 !== undefined) {\n        return i18next.t('chart.cost_forecast_cone_tooltip', { value0: dy0, value1: dy });\n    }\n    return dy !== undefined ? dy : i18next.t('chart.no_data');\n};\nexport const getResizeObserver = (containerRef, handleResize) => {\n    const containerElement = containerRef;\n    const { ResizeObserver } = window;\n    let _navToggle;\n    let _resizeObserver;\n    if (containerElement && ResizeObserver) {\n        const resizeObserver = new ResizeObserver(entries => {\n            // We wrap it in requestAnimationFrame to avoid this error - ResizeObserver loop limit exceeded\n            window.requestAnimationFrame(() => {\n                if (!Array.isArray(entries) || !entries.length) {\n                    return;\n                }\n                handleResize();\n            });\n        });\n        resizeObserver.observe(containerElement);\n        _resizeObserver = () => resizeObserver.unobserve(containerElement);\n    }\n    else {\n        handleResize();\n        window.addEventListener('resize', handleResize);\n        _resizeObserver = () => window.removeEventListener('resize', handleResize);\n        _navToggle = insights.chrome.on('NAVIGATION_TOGGLE', setTimeout(handleResize, 500));\n    }\n    return () => {\n        if (_resizeObserver) {\n            _resizeObserver();\n        }\n        if (_navToggle) {\n            _navToggle();\n        }\n    };\n};\nexport const initHiddenSeries = (series, hiddenSeries, index) => {\n    const result = new Set(hiddenSeries);\n    if (!result.delete(index)) {\n        result.add(index);\n    }\n    // Toggle forecast confidence\n    const childName = series[index].childName;\n    if (childName.indexOf('forecast') !== -1) {\n        let _index;\n        for (let i = 0; i < series.length; i++) {\n            if (series[i].childName === `${childName}Cone`) {\n                _index = i;\n                break;\n            }\n        }\n        if (index !== undefined && !result.delete(_index)) {\n            result.add(_index);\n        }\n    }\n    return result;\n};\n// Returns true if at least one data series is available\nexport const isDataAvailable = (series, hiddenSeries) => {\n    const unavailable = []; // API data may not be available (e.g., on 1st of month)\n    if (series) {\n        series.forEach((s, index) => {\n            if (isSeriesHidden(hiddenSeries, index) || (s.data && s.data.length === 0)) {\n                unavailable.push(index);\n            }\n        });\n    }\n    return unavailable.length !== (series ? series.length : 0);\n};\n// Returns true if data series is hidden\nexport const isDataHidden = (series, hiddenSeries, data) => {\n    if (data && data.length) {\n        for (let keys = hiddenSeries.keys(), key; !(key = keys.next()).done;) {\n            let dataChildName;\n            let serieChildName;\n            for (const item of data) {\n                if (item.childName) {\n                    dataChildName = item.childName;\n                    break;\n                }\n            }\n            for (const item of series[key.value].data) {\n                if (item.childName) {\n                    serieChildName = item.childName;\n                    break;\n                }\n            }\n            if (serieChildName && dataChildName && serieChildName === dataChildName) {\n                return true;\n            }\n        }\n    }\n    return false;\n};\n// Returns true if data series is hidden\nexport const isSeriesHidden = (hiddenSeries, index) => {\n    return hiddenSeries.has(index);\n};\n","import './reportSummary.scss';\nimport { Card, CardBody, CardFooter, CardTitle, Skeleton, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { skeletonWidth } from 'utils/skeleton';\nconst ReportSummaryBase = ({ children, detailsLink, title, subTitle, status }) => (React.createElement(Card, { className: \"reportSummary\" },\n    React.createElement(CardTitle, null,\n        React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: \"subtitle\" }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { width: \"16%\" }),\n        React.createElement(Skeleton, { className: \"chartSkeleton\", width: skeletonWidth.md }),\n        React.createElement(Skeleton, { width: \"33%\" }),\n        React.createElement(Skeleton, { className: \"legendSkeleton\", width: skeletonWidth.xs }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst ReportSummary = withTranslation()(ReportSummaryBase);\nexport { ReportSummary };\n","import './reportSummaryAlt.scss';\nimport { Card, CardBody, CardFooter, CardTitle, Grid, GridItem, Skeleton, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { skeletonWidth } from 'utils/skeleton';\nconst OcpCloudReportSummaryAltBase = ({ children, detailsLink, status, subTitle, tabs, title, }) => (React.createElement(Card, { className: \"reportSummary\" },\n    React.createElement(Grid, { hasGutter: true },\n        React.createElement(GridItem, { xl: 8 },\n            React.createElement(\"div\", { className: \"cost\" },\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, title),\n                    Boolean(subTitle) && React.createElement(\"p\", { className: \"subtitle\" }, subTitle)),\n                React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { width: \"16%\" }),\n                    React.createElement(Skeleton, { className: \"chartSkeleton\", width: skeletonWidth.md }),\n                    React.createElement(Skeleton, { width: \"33%\" }),\n                    React.createElement(Skeleton, { className: \"legendSkeleton\", width: skeletonWidth.xs }))) : (children)))),\n        React.createElement(GridItem, { xl: 4 },\n            React.createElement(\"div\", { className: \"tops\" }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink))))))));\nconst ReportSummaryAlt = withTranslation()(OcpCloudReportSummaryAltBase);\nexport { ReportSummaryAlt };\n","import './reportSummaryDetails.scss';\nimport { Tooltip } from '@patternfly/react-core';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nconst ReportSummaryDetailsBase = ({ chartType, computedReportItem = 'cost', computedReportItemValue = 'total', costLabel, formatValue, formatOptions, report, requestFormatOptions, requestLabel, reportType, showTooltip = false, showUnits = false, showUsageFirst = false, t, units, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let supplementaryCost = React.createElement(EmptyValueState, null);\n    let infrastructureCost = React.createElement(EmptyValueState, null);\n    let request = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    const hasTotal = report && report.meta && report.meta.total;\n    const hasCost = hasTotal && report.meta.total.cost && report.meta.total.cost.total;\n    const hasCount = hasTotal && report.meta.total.count;\n    const hasSupplementaryCost = hasTotal &&\n        report.meta.total.supplementary &&\n        report.meta.total.supplementary.total &&\n        report.meta.total.supplementary.total.value;\n    const hasInfrastructureCost = hasTotal &&\n        report.meta.total.infrastructure &&\n        report.meta.total.infrastructure[computedReportItemValue] &&\n        report.meta.total.infrastructure[computedReportItemValue].value;\n    const hasRequest = hasTotal && report.meta.total.request;\n    const hasUsage = hasTotal && report.meta.total.usage;\n    if (hasTotal) {\n        cost = formatValue(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD', formatOptions);\n        supplementaryCost = formatValue(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost ? report.meta.total.supplementary.total.units : 'USD', formatOptions);\n        infrastructureCost = formatValue(hasInfrastructureCost ? report.meta.total.infrastructure[computedReportItemValue].value : 0, hasInfrastructureCost ? report.meta.total.infrastructure[computedReportItemValue].units : 'USD', formatOptions);\n        request = formatValue(hasRequest ? report.meta.total.request.value : 0, hasRequest ? report.meta.total.request.units : '', requestFormatOptions ? usageFormatOptions : formatOptions);\n        if (hasUsage && report.meta.total.usage.value >= 0) {\n            usage = formatValue(hasUsage ? report.meta.total.usage.value : 0, hasUsage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n        else {\n            // Workaround for https://github.com/project-koku/koku-ui/issues/1058\n            usage = formatValue(hasUsage ? report.meta.total.usage : 0, hasCount ? report.meta.total.count.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n    }\n    const getCostLayout = (showAltHeroFont = false) => {\n        let value = cost;\n        if (computedReportItem === \"infrastructure\" /* infrastructure */) {\n            value = infrastructureCost;\n        }\n        else if (computedReportItem === \"supplementary\" /* supplementary */) {\n            value = supplementaryCost;\n        }\n        const altHeroFont = showAltHeroFont ? 'Alt' : '';\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            showTooltip ? (React.createElement(Tooltip, { content: t('dashboard.total_cost_tooltip', {\n                    infrastructureCost,\n                    supplementaryCost,\n                }), enableFlip: true },\n                React.createElement(\"div\", { className: `value${altHeroFont}` }, value))) : (React.createElement(\"div\", { className: `value${altHeroFont}` }, value)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, costLabel))));\n    };\n    const getRequestLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasRequest ? report.meta.total.request.units : '';\n        const _units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            React.createElement(\"span\", { className: \"value\" }, request),\n            Boolean(showUnits && (units || (hasRequest && report.meta.total.request.value >= 0))) && (React.createElement(\"span\", { className: \"units\" }, unitsLabel)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, requestLabel))));\n    };\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasUsage ? report.meta.total.usage.units : '';\n        // added as a work-around for azure #1079\n        const _units = unitLookupKey(units ? units : usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            React.createElement(\"span\", { className: \"value\" }, usage),\n            Boolean(showUnits && (units || (hasUsage && report.meta.total.usage.value >= 0))) && (React.createElement(\"span\", { className: \"units\" }, unitsLabel)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (chartType === \"dailyCost\" /* dailyCost */ ||\n        chartType === \"dailyTrend\" /* dailyTrend */ ||\n        chartType === \"cost\" /* cost */) {\n        return React.createElement(React.Fragment, null, getCostLayout(reportType === \"cost\" /* cost */));\n    }\n    else if (chartType === \"trend\" /* trend */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getCostLayout(reportType === \"cost\" /* cost */)));\n        }\n        return (React.createElement(React.Fragment, null,\n            getCostLayout(reportType === \"cost\" /* cost */),\n            getUsageLayout()));\n    }\n    else if (chartType === \"usage\" /* usage */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getRequestLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getRequestLayout(),\n            getUsageLayout()));\n    }\n    else {\n        return null;\n    }\n};\nconst ReportSummaryDetails = withTranslation()(ReportSummaryDetailsBase);\nexport { ReportSummaryDetails };\n","import './reportSummaryItem.scss';\nimport { Progress, ProgressSize } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nconst ReportSummaryItemBase = ({ label, formatOptions, formatValue, t, totalValue, units, value, }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: \"reportSummaryItem\" },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst ReportSummaryItem = withTranslation()(ReportSummaryItemBase);\nexport { ReportSummaryItem };\n","import './reportSummaryItems.scss';\nimport { Skeleton } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { getComputedReportItems, } from 'utils/computedReport/getComputedReportItems';\nimport { skeletonWidth } from 'utils/skeleton';\nclass ReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { idKey, report } = this.props;\n        const computedItems = getComputedReportItems({\n            report,\n            idKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id === 'Other' || id === 'Others';\n            }\n        });\n        if (otherIndex !== -1) {\n            return [...computedItems.slice(0, otherIndex), ...computedItems.slice(otherIndex + 1), computedItems[otherIndex]];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { width: skeletonWidth.md }),\n                React.createElement(Skeleton, { className: \"skeleton\", width: skeletonWidth.md }),\n                React.createElement(Skeleton, { className: \"skeleton\", width: skeletonWidth.md }),\n                React.createElement(Skeleton, { className: \"skeleton\", width: skeletonWidth.md })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst ReportSummaryItems = withTranslation()(ReportSummaryItemsBase);\nexport { ReportSummaryItems };\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentCostData: {\n        fill: 'none',\n    },\n    currentInfrastructureColorScale: [\n        chart_color_blue_400.value,\n        chart_color_blue_300.value,\n        chart_color_blue_200.value,\n        chart_color_blue_100.value,\n        chart_color_blue_500.value,\n    ],\n    currentInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    forecastConeData: {\n        fill: chart_color_green_100.value,\n        strokeWidth: 0,\n    },\n    forecastConeDataColorScale: [chart_color_green_100.value],\n    forecastData: {\n        fill: 'none',\n    },\n    forecastDataColorScale: [chart_color_green_200.value],\n    forecastInfrastructureConeData: {\n        fill: chart_color_blue_100.value,\n        strokeWidth: 0,\n    },\n    forecastInfrastructureConeDataColorScale: [chart_color_blue_100.value],\n    forecastInfrastructureData: {\n        fill: 'none',\n    },\n    forecastInfrastructureDataColorScale: [chart_color_blue_200.value],\n    previousCostData: {\n        fill: 'none',\n    },\n    previousInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { noop } from 'utils/noop';\nimport { chartStyles } from './costChart.styles';\nclass CostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentInfrastructureCostData, currentCostData, forecastConeData, forecastData, forecastInfrastructureConeData, forecastInfrastructureData, previousInfrastructureCostData, previousCostData, showForecast, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            const costInfrastructureTooltipKey = 'chart.cost_infrastructure_legend_tooltip';\n            const costTooltipKey = 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousCostData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentCostData, costTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentCostData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'previousInfrastructureCost',\n                    data: previousInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(previousInfrastructureCostData, costInfrastructureTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousInfrastructureCostData), { stroke: chartStyles.previousColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'currentInfrastructureCost',\n                    data: currentInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentInfrastructureColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(currentInfrastructureCostData, costInfrastructureTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentInfrastructureCostData), { stroke: chartStyles.currentInfrastructureColorScale[1] }),\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: forecastData,\n                    legendItem: {\n                        name: getCostRangeString(forecastData, 'chart.cost_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, 'chart.cost_forecast_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastData), { stroke: chartStyles.forecastDataColorScale[0] }),\n                    },\n                });\n                series.push({\n                    childName: 'forecastInfrastructure',\n                    data: forecastInfrastructureData,\n                    legendItem: {\n                        name: getCostRangeString(forecastInfrastructureData, 'chart.cost_infrastructure_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastInfrastructureDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastInfrastructureData, 'chart.cost_infrastructure_forecast_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastInfrastructureData), { stroke: chartStyles.forecastInfrastructureDataColorScale[0] }),\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: forecastConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastConeData), { stroke: chartStyles.forecastConeDataColorScale[0] }),\n                    },\n                });\n                series.push({\n                    childName: 'forecastInfrastructureCone',\n                    data: forecastInfrastructureConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastInfrastructureConeData, 'chart.cost_infrastructure_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastInfrastructureConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastInfrastructureConeData, 'chart.cost_infrastructure_forecast_cone_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastInfrastructureConeData), { stroke: chartStyles.forecastInfrastructureConeDataColorScale[0] }),\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    if (width > 675 && width < 1175) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width > 450 && width < 675) {\n                        adjustedContainerHeight += 50;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 75;\n                    }\n                }\n                else {\n                    if (width > 450 && width < 725) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 50;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, name: \"legend\", responsive: false }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentInfrastructureCostData !== this.props.currentInfrastructureCostData ||\n            prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastInfrastructureConeData !== this.props.forecastInfrastructureConeData ||\n            prevProps.forecastInfrastructureData !== this.props.forecastInfrastructureData ||\n            prevProps.previousInfrastructureCostData !== this.props.previousInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, currentCostData, forecastData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const currentInfrastructureDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const currentCostDate = currentCostData ? getDate(getDateRange(currentCostData, true, true)[1]) : 0;\n        const forecastCostDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        const previousInfrastructureDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousCostData ? getDate(getDateRange(previousCostData, true, true)[1]) : 0;\n        return currentInfrastructureDate > 0 ||\n            currentCostDate > 0 ||\n            previousInfrastructureDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentInfrastructureDate, currentCostDate, forecastCostDate, previousInfrastructureDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const lastDate = this.getEndDate();\n        const half = Math.floor(lastDate / 2);\n        const _1stDay = 1;\n        const _2ndDay = _1stDay + Math.floor(half / 2);\n        const _3rdDay = _1stDay + half;\n        const _4thDay = lastDate - Math.floor(half / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            title && (React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [_1stDay, _2ndDay, _3rdDay, _4thDay, lastDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { CostChart };\n","import './reportSummaryCost.scss';\nimport { CostChart } from 'components/charts/costChart';\nimport React from 'react';\nconst ReportSummaryCost = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(CostChart, Object.assign({}, props))));\nexport { ReportSummaryCost };\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { chart_color_orange_300 } from '@patternfly/react-tokens/dist/js/chart_color_orange_300';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentInfrastructureColorScale: [\n        chart_color_blue_400.value,\n        chart_color_blue_300.value,\n        chart_color_blue_200.value,\n        chart_color_blue_100.value,\n        chart_color_blue_500.value,\n    ],\n    currentInfrastructureCostData: {\n        strokeDasharray: '3,3',\n    },\n    forecastConeDataColorScale: [chart_color_orange_300.value],\n    forecastDataColorScale: [chart_color_green_200.value],\n    forecastInfrastructureConeDataColorScale: [chart_color_orange_300.value],\n    forecastInfrastructureDataColorScale: [chart_color_blue_200.value],\n    previousInfrastructureCostData: {\n        strokeDasharray: '3,3',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartAxis, ChartBar, ChartGroup, ChartLegend, ChartLegendTooltip, ChartLine, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isDataHidden, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { noop } from 'utils/noop';\nimport { chartStyles } from './dailyCostChart.styles';\nclass DailyCostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentInfrastructureCostData, currentCostData, forecastConeData, forecastData, forecastInfrastructureConeData, forecastInfrastructureData, previousInfrastructureCostData, previousCostData, showForecast, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            const costInfrastructureTooltipKey = 'chart.cost_infrastructure_legend_tooltip';\n            const costTooltipKey = 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: this.initDatumChildName(previousCostData, 'previousCost'),\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    isLine: true,\n                    style: {\n                        data: {\n                            stroke: chartStyles.previousColorScale[0],\n                        },\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: this.initDatumChildName(currentCostData, 'currentCost'),\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentCostData, costTooltipKey, false, false),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.currentColorScale[0],\n                        },\n                    },\n                },\n                {\n                    childName: 'previousInfrastructureCost',\n                    data: this.initDatumChildName(previousInfrastructureCostData, 'previousInfrastructureCost'),\n                    legendItem: {\n                        name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(previousInfrastructureCostData, costInfrastructureTooltipKey, false, false, 1),\n                    },\n                    isLine: true,\n                    style: {\n                        data: {\n                            stroke: chartStyles.previousColorScale[1],\n                        },\n                    },\n                },\n                {\n                    childName: 'currentInfrastructureCost',\n                    data: this.initDatumChildName(currentInfrastructureCostData, 'currentInfrastructureCost'),\n                    legendItem: {\n                        name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentInfrastructureColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(currentInfrastructureCostData, costInfrastructureTooltipKey, false, false),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.currentInfrastructureColorScale[1],\n                        },\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: this.initDatumChildName(forecastData, 'forecast'),\n                    legendItem: {\n                        name: getCostRangeString(forecastData, 'chart.cost_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, 'chart.cost_forecast_legend_tooltip', false, false),\n                    },\n                    isBar: true,\n                    isForecast: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                        },\n                    },\n                });\n                series.push({\n                    childName: 'forecastInfrastructure',\n                    data: this.initDatumChildName(forecastInfrastructureData, 'forecastInfrastructure'),\n                    legendItem: {\n                        name: getCostRangeString(forecastInfrastructureData, 'chart.cost_infrastructure_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastInfrastructureDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastInfrastructureData, 'chart.cost_infrastructure_forecast_legend_tooltip', false, false),\n                    },\n                    isBar: true,\n                    isForecast: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastInfrastructureDataColorScale[0],\n                        },\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: this.initDatumChildName(forecastConeData, 'forecastCone'),\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_tooltip', false, false),\n                    },\n                    isForecast: true,\n                    isLine: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                        },\n                    },\n                });\n                series.push({\n                    childName: 'forecastInfrastructureCone',\n                    data: this.initDatumChildName(forecastInfrastructureConeData, 'forecastInfrastructureCone'),\n                    legendItem: {\n                        name: getCostRangeString(forecastInfrastructureConeData, 'chart.cost_infrastructure_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastInfrastructureConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastInfrastructureConeData, 'chart.cost_infrastructure_forecast_cone_legend_tooltip', false, false),\n                    },\n                    isForecast: true,\n                    isLine: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastInfrastructureConeDataColorScale[0],\n                        },\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        // Adds a child name to help identify hidden data series\n        this.initDatumChildName = (data, childName) => {\n            data.map(datum => (datum.childName = childName));\n            return data;\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    if (width > 675 && width < 1175) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width > 450 && width < 675) {\n                        adjustedContainerHeight += 50;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 75;\n                    }\n                }\n                else {\n                    if (width > 450 && width < 725) {\n                        adjustedContainerHeight += 25;\n                    }\n                    else if (width <= 450) {\n                        adjustedContainerHeight += 50;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (!series.isForecast) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                if (series.isBar) {\n                    return (React.createElement(ChartBar, { alignment: \"middle\", data: data, key: series.childName, name: series.childName, style: series.style }));\n                }\n                else if (series.isLine) {\n                    return React.createElement(ChartLine, { data: data, key: series.childName, name: series.childName, style: series.style });\n                }\n            }\n            return null;\n        };\n        this.getForecastBarChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (series.isForecast && series.isBar) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                return (React.createElement(ChartBar, { alignment: \"middle\", data: data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        this.getForecastLineChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (series.isForecast && series.isLine) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                return (React.createElement(ChartBar, { alignment: \"middle\", barWidth: 1, data: data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, name: \"legend\", responsive: false }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentInfrastructureCostData !== this.props.currentInfrastructureCostData ||\n            prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastInfrastructureConeData !== this.props.forecastInfrastructureConeData ||\n            prevProps.forecastInfrastructureData !== this.props.forecastInfrastructureData ||\n            prevProps.previousInfrastructureCostData !== this.props.previousInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, currentCostData, forecastData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const currentInfrastructureDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const currentCostDate = currentCostData ? getDate(getDateRange(currentCostData, true, true)[1]) : 0;\n        const forecastCostDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        const previousInfrastructureDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousCostData ? getDate(getDateRange(previousCostData, true, true)[1]) : 0;\n        return currentInfrastructureDate > 0 ||\n            currentCostDate > 0 ||\n            previousInfrastructureDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentInfrastructureDate, currentCostDate, forecastCostDate, previousInfrastructureDate, previousUsageDate)\n            : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isDataHidden: data => isDataHidden(series, hiddenSeries, data),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const lastDate = this.getEndDate();\n        const half = Math.floor(lastDate / 2);\n        const _1stDay = 1;\n        const _2ndDay = _1stDay + Math.floor(half / 2);\n        const _3rdDay = _1stDay + half;\n        const _4thDay = lastDate - Math.floor(half / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        // Note: For tooltip values to match properly, chart groups must be rendered in the order given as legend data\n        return (React.createElement(React.Fragment, null,\n            title && (React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 5.5 }, series.map((s, index) => this.getChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 5.5 }, series.map((s, index) => this.getForecastBarChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 5.5 }, series.map((s, index) => this.getForecastLineChart(s, index)))),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [_1stDay, _2ndDay, _3rdDay, _4thDay, lastDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { DailyCostChart };\n","import './reportSummaryDailyCost.scss';\nimport { DailyCostChart } from 'components/charts/dailyCostChart';\nimport React from 'react';\nconst ReportSummaryDailyCost = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(DailyCostChart, Object.assign({}, props))));\nexport { ReportSummaryDailyCost };\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { chart_color_orange_300 } from '@patternfly/react-tokens/dist/js/chart_color_orange_300';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    forecastConeDataColorScale: [chart_color_orange_300.value],\n    forecastDataColorScale: [chart_color_green_200.value],\n    itemsPerRow: 4,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartAxis, ChartBar, ChartGroup, ChartLegend, ChartLegendTooltip, ChartLine, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isDataHidden, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { noop } from 'utils/noop';\nimport { chartStyles } from './dailyTrendChart.styles';\nclass DailyTrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, forecastData, forecastConeData, previousData, showForecast, showSupplementaryLabel = false, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? 'chart.usage_legend_label'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_label'\n                    : 'chart.cost_legend_label';\n            const tooltipKey = showUsageLegendLabel\n                ? 'chart.usage_legend_tooltip'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_tooltip'\n                    : 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: this.initDatumChildName(previousData, 'previousCost'),\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousData, tooltipKey, false, false, 1),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.previousColorScale[0],\n                        },\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: this.initDatumChildName(currentData, 'currentCost'),\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentData, tooltipKey, false, false),\n                    },\n                    isBar: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.currentColorScale[0],\n                        },\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: this.initDatumChildName(forecastData, 'forecast'),\n                    legendItem: {\n                        name: getCostRangeString(forecastData, 'chart.cost_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, 'chart.cost_forecast_legend_tooltip', false, false),\n                    },\n                    isBar: true,\n                    isForecast: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                        },\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: this.initDatumChildName(forecastConeData, 'forecastCone'),\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_tooltip', false, false),\n                    },\n                    isForecast: true,\n                    isLine: true,\n                    style: {\n                        data: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                        },\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        // Adds a child name to help identify hidden data series\n        this.initDatumChildName = (data, childName) => {\n            data.map(datum => (datum.childName = childName));\n            return data;\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    if (width < 700) {\n                        adjustedContainerHeight += 25;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (!series.isForecast) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                if (series.isBar) {\n                    return (React.createElement(ChartBar, { alignment: \"middle\", data: data, key: series.childName, name: series.childName, style: series.style }));\n                }\n                else if (series.isLine) {\n                    return React.createElement(ChartLine, { data: data, key: series.childName, name: series.childName, style: series.style });\n                }\n            }\n            return null;\n        };\n        this.getForecastBarChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (series.isForecast && series.isBar) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                return (React.createElement(ChartBar, { alignment: \"middle\", data: data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        this.getForecastLineChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (series.isForecast && series.isLine) {\n                const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n                return (React.createElement(ChartBar, { alignment: \"middle\", barWidth: 1, data: data, key: series.childName, name: series.childName, style: series.style }));\n            }\n            return null;\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 50,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), gutter: 20, height: 25, itemsPerRow: legendItemsPerRow, name: \"legend\", orientation: width > 150 ? 'horizontal' : 'vertical' }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentData, forecastData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        const forecastDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0 ? Math.max(currentDate, forecastDate, previousDate) : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isDataHidden: data => isDataHidden(series, hiddenSeries, data),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const lastDate = this.getEndDate();\n        const half = Math.floor(lastDate / 2);\n        const _1stDay = 1;\n        const _2ndDay = _1stDay + Math.floor(half / 2);\n        const _3rdDay = _1stDay + half;\n        const _4thDay = lastDate - Math.floor(half / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        // Note: For tooltip values to match properly, chart groups must be rendered in the order given as legend data\n        return (React.createElement(React.Fragment, null,\n            title && (React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title)),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 11 }, series.map((s, index) => this.getChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 11 },\n                            React.createElement(ChartBar, { data: [{ y: null }], name: \"forcast_spacer\" }),\n                            series.map((s, index) => this.getForecastBarChart(s, index)))),\n                        series && series.length > 0 && (React.createElement(ChartGroup, { offset: 11 },\n                            React.createElement(ChartBar, { data: [{ y: null }], name: \"forcast_cone_spacer\" }),\n                            series.map((s, index) => this.getForecastLineChart(s, index)))),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [_1stDay, _2ndDay, _3rdDay, _4thDay, lastDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { DailyTrendChart };\n","import './reportSummaryDailyTrend.scss';\nimport { DailyTrendChart } from 'components/charts/dailyTrendChart';\nimport React from 'react';\nconst ReportSummaryDailyTrend = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(DailyTrendChart, Object.assign({}, props))));\nexport { ReportSummaryDailyTrend };\n","import chart_color_black_200 from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport chart_color_green_100 from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport chart_color_green_200 from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport chart_color_green_300 from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_green_500 from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentMonthData: {\n        fill: 'none',\n    },\n    forecastConeData: {\n        fill: chart_color_green_100.value,\n        strokeWidth: 0,\n    },\n    forecastConeDataColorScale: [chart_color_green_100.value],\n    forecastData: {\n        fill: 'none',\n    },\n    forecastDataColorScale: [chart_color_green_200.value],\n    itemsPerRow: 4,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    previousMonthData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { noop } from 'utils/noop';\nimport { chartStyles } from './trendChart.styles';\nclass TrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, forecastData, forecastConeData, previousData, showForecast, showSupplementaryLabel = false, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? 'chart.usage_legend_label'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_label'\n                    : 'chart.cost_legend_label';\n            const tooltipKey = showUsageLegendLabel\n                ? 'chart.usage_legend_tooltip'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_tooltip'\n                    : 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousData,\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousData, tooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousMonthData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentData,\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentData, tooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentMonthData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n            ];\n            if (showForecast) {\n                series.push({\n                    childName: 'forecast',\n                    data: forecastData,\n                    legendItem: {\n                        name: getCostRangeString(forecastData, 'chart.cost_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastDataColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, 'chart.cost_forecast_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastData), { stroke: chartStyles.forecastDataColorScale[0] }),\n                    },\n                });\n                series.push({\n                    childName: 'forecastCone',\n                    data: forecastConeData,\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastConeDataColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastConeData), { stroke: chartStyles.forecastConeDataColorScale[0] }),\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height, showForecast } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (showForecast) {\n                    if (width < 700) {\n                        adjustedContainerHeight += 25;\n                    }\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 50,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), gutter: 20, height: 25, itemsPerRow: legendItemsPerRow, name: \"legend\", orientation: width > 150 ? 'horizontal' : 'vertical' }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentData, forecastData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        const forecastDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0 ? Math.max(currentDate, forecastDate, previousDate) : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Federated modules may not have access to the i18next package\n        let tooltipTitle;\n        if (i18next && i18next.t) {\n            tooltipTitle = datum => i18next.t('chart.day_of_month_title', { day: datum.x });\n        }\n        else {\n            tooltipTitle = datum => `Day ${datum.x}`;\n        }\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: tooltipTitle })),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { TrendChart };\n","import './reportSummaryTrend.scss';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nconst ReportSummaryTrend = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { ReportSummaryTrend };\n","import chart_color_black_200 from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport chart_color_green_100 from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport chart_color_green_200 from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport chart_color_green_300 from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_green_500 from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const chartStyles = {\n    chartContainer: {\n        marginTop: global_spacer_lg.value,\n    },\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_green_300.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_green_400.value,\n        },\n    },\n    itemsPerRow: 2,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        chart_color_black_200.value,\n        chart_color_green_400.value,\n        chart_color_black_200.value,\n        chart_color_green_300.value,\n    ],\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_black_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_black_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    // TBD: No grey scale, yet\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getDateRange, getUsageRangeString } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { noop } from 'utils/noop';\nimport { chartStyles } from './usageChart.styles';\nclass UsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n            const usageKey = 'chart.usage_legend_label';\n            const usageTooltipKey = 'chart.usage_legend_tooltip';\n            const requestKey = 'chart.requests_legend_label';\n            const requestTooltipKey = 'chart.requests_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousUsage',\n                    data: previousUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(previousUsageData, usageKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(previousUsageData, usageTooltipKey, false, false, 1),\n                    },\n                    style: chartStyles.previousUsageData,\n                },\n                {\n                    childName: 'currentUsage',\n                    data: currentUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(currentUsageData, usageKey, true, false),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[1],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(currentUsageData, usageTooltipKey, false, false),\n                    },\n                    style: chartStyles.currentUsageData,\n                },\n                {\n                    childName: 'previousRequest',\n                    data: previousRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(previousRequestData, requestKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[2],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(previousRequestData, requestTooltipKey, false, false, 1),\n                    },\n                    style: chartStyles.previousRequestData,\n                },\n                {\n                    childName: 'currentRequest',\n                    data: currentRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(currentRequestData, requestKey, true, false),\n                        symbol: {\n                            fill: chartStyles.legendColorScale[3],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(currentRequestData, requestTooltipKey, false, false),\n                    },\n                    style: chartStyles.currentRequestData,\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (width < 480) {\n                    adjustedContainerHeight += 20;\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 300 ? chartStyles.itemsPerRow : 1;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\" }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n        const currentRequestDate = currentRequestData ? getDate(getDateRange(currentRequestData, true, true)[1]) : 0;\n        const currentUsageDate = currentUsageData ? getDate(getDateRange(currentUsageData, true, true)[1]) : 0;\n        const previousRequestDate = previousRequestData ? getDate(getDateRange(previousRequestData, true, true)[1]) : 0;\n        const previousUsageDate = previousUsageData ? getDate(getDateRange(previousUsageData, true, true)[1]) : 0;\n        return currentRequestDate > 0 || currentUsageDate > 0 || previousRequestDate > 0 || previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, padding = {\n            bottom: 75,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { UsageChart };\n","import './reportSummaryUsage.scss';\nimport { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nconst ReportSummaryUsage = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { ReportSummaryUsage };\n","import './emptyValueState.scss';\nimport { MinusIcon } from '@patternfly/react-icons/dist/js/icons/minus-icon';\nimport React from 'react';\nexport const EmptyValueState = () => {\n    return (React.createElement(\"span\", { className: \"emptyValueContainer\" },\n        React.createElement(MinusIcon, null)));\n};\n","import Main from '@redhat-cloud-services/frontend-components/Main';\nimport PageHeader, { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nconst Loading = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(LoadingState, null))));\n};\nexport default withRouter(Loading);\n","import Loading from './loading';\nexport default Loading;\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { FileInvoiceDollarIcon } from '@patternfly/react-icons/dist/js/icons/file-invoice-dollar-icon';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { withRouter } from 'react-router-dom';\nclass NoDataStateBase extends React.Component {\n    render() {\n        const { showReload = true, t } = this.props;\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: FileInvoiceDollarIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, t('no_data_state.title')),\n            React.createElement(EmptyStateBody, null, t('no_data_state.desc')),\n            showReload && (React.createElement(Button, { variant: \"primary\", onClick: () => window.location.reload() }, t('no_data_state.refresh')))));\n    }\n}\nconst NoDataState = withRouter(withTranslation()(NoDataStateBase));\nexport { NoDataState };\n","import Main from '@redhat-cloud-services/frontend-components/Main';\nimport PageHeader, { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { NoDataState } from './noDataState';\nconst NoData = ({ showReload, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(NoDataState, { showReload: showReload }))));\n};\nexport default withRouter(NoData);\n","import './costIcon.scss';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst icon = require('./Cost-icon.svg');\nconst CostIcon = ({ className, t }) => {\n    return React.createElement(\"img\", { className: `cost-icon ${className}`, src: icon, alt: t('cost_management'), \"aria-hidden\": \"true\" });\n};\nexport default withTranslation()(CostIcon);\n","import CostIcon from './costIcon';\nexport default CostIcon;\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    iconSpacer: {\n        marginLeft: global_spacer_xs.value,\n    },\n    viewSources: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/js/icons/plus-circle-icon';\nimport CostIcon from 'components/icons/costIcon';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { withRouter } from 'react-router-dom';\nimport { getReleasePath } from 'utils/pathname';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDocLink = (textKey, urlKey) => {\n            const { t } = this.props;\n            return (React.createElement(\"a\", { href: t(urlKey), rel: \"noreferrer\", target: \"_blank\" },\n                t(textKey),\n                React.createElement(\"span\", { style: styles.iconSpacer },\n                    React.createElement(ExternalLinkAltIcon, null))));\n        };\n        this.getRouteToSources = () => {\n            const release = getReleasePath();\n            return `${release}/settings/sources`;\n        };\n    }\n    render() {\n        const { providerType, t } = this.props;\n        let descKey = 'no_providers_state.overview_desc';\n        let titleKey = 'no_providers_state.overview_title';\n        let docUrlKey;\n        let icon;\n        let textKey;\n        switch (providerType) {\n            case \"aws\" /* aws */:\n                descKey = 'no_providers_state.aws_desc';\n                titleKey = 'no_providers_state.aws_title';\n                break;\n            case \"azure\" /* azure */:\n                descKey = 'no_providers_state.azure_desc';\n                titleKey = 'no_providers_state.azure_title';\n                break;\n            case \"gcp\" /* gcp */:\n                descKey = 'no_providers_state.gcp_desc';\n                titleKey = 'no_providers_state.gcp_title';\n                break;\n            case \"ibm\" /* ibm */:\n                descKey = 'no_providers_state.ibm_desc';\n                titleKey = 'no_providers_state.ibm_title';\n                break;\n            case \"ocp\" /* ocp */:\n                descKey = 'no_providers_state.ocp_desc';\n                docUrlKey = 'docs.add_ocp_sources';\n                textKey = 'no_providers_state.ocp_add_sources';\n                titleKey = 'no_providers_state.ocp_title';\n                break;\n            default:\n                icon = CostIcon;\n        }\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: icon ? icon : PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, t(titleKey)),\n            React.createElement(EmptyStateBody, null, t(descKey)),\n            docUrlKey && textKey ? (React.createElement(\"div\", { style: styles.viewSources }, this.getDocLink(textKey, docUrlKey))) : (React.createElement(Button, { variant: \"primary\", component: \"a\", href: this.getRouteToSources() }, t('no_providers_state.get_started')))));\n    }\n}\nconst NoProvidersState = withRouter(withTranslation()(NoProvidersStateBase));\nexport { NoProvidersState };\n","import NoProviders from './noProviders';\nexport default NoProviders;\n","import Main from '@redhat-cloud-services/frontend-components/Main';\nimport PageHeader, { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { NoProvidersState } from './noProvidersState';\nconst NoProviders = ({ providerType, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(NoProvidersState, { providerType: providerType }))));\n};\nexport default withRouter(NoProviders);\n","// Ensure at least one source provider has data available for the current month\nexport const hasCurrentMonthData = (providers) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            if (provider.current_month_data) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one source provider has data available\nexport const hasData = (providers) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            if (provider.has_data) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n// Ensure at least one source provider has data available for the previous month\nexport const hasPreviousMonthData = (providers) => {\n    let result = false;\n    if (providers && providers.data) {\n        for (const provider of providers.data) {\n            if (provider.previous_month_data) {\n                result = true;\n                break;\n            }\n        }\n    }\n    return result;\n};\n","import i18next from 'i18next';\nimport { sort } from 'utils/sort';\nimport { getItemLabel } from './getItemLabel';\nexport function getComputedReportItems({ daily, idKey, report, sortDirection = 0 /* asc */, sortKey = 'date', }) {\n    return sort(getUnsortedComputedReportItems({\n        daily,\n        idKey,\n        report,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nfunction getCostData(val, key, item) {\n    return {\n        markup: {\n            value: (item && item[key] && item[key].markup ? item[key].markup.value : 0) +\n                (val[key] && val[key].markup ? val[key].markup.value : 0),\n            units: val && val[key] && val[key].markup ? val[key].markup.units : 'USD',\n        },\n        raw: {\n            value: (item && item[key] && item[key].raw ? item[key].raw.value : 0) +\n                (val[key] && val[key].raw ? val[key].raw.value : 0),\n            units: val && val[key] && val[key].raw ? val[key].raw.units : 'USD',\n        },\n        total: {\n            value: (item && item[key] && item[key].total ? item[key].total.value : 0) +\n                (val[key] && val[key].total ? Number(val[key].total.value) : 0),\n            units: val && val[key] && val[key].total ? val[key].total.units : null,\n        },\n        usage: {\n            value: (item && item[key] && item[key].usage ? item[key].usage.value : 0) +\n                (val[key] && val[key].usage ? Number(val[key].usage.value) : 0),\n            units: val && val[key] && val[key].usage ? val[key].usage.units : null,\n        },\n    };\n}\nfunction getUsageData(val, item) {\n    return {\n        capacity: {\n            value: (item && item.capacity ? item.capacity.value : 0) + (val.capacity ? val.capacity.value : 0),\n            units: val && val.capacity ? val.capacity.units : 'Core-Hours',\n        },\n        limit: {\n            value: (item && item.limit ? item.limit.value : 0) + (val.limit ? val.limit.value : 0),\n            units: val && val.limit ? val.limit.units : 'Core-Hours',\n        },\n        request: {\n            value: (item && item.request ? item.request.value : 0) + (val.request ? val.request.value : 0),\n            units: val && val.request ? val.request.units : 'Core-Hours',\n        },\n        usage: {\n            value: (item && item.usage ? item.usage.value : 0) + (val.usage ? val.usage.value : 0),\n            units: val && val.usage ? val.usage.units : 'Core-Hours',\n        },\n    };\n}\n// Details pages typically use this function with filter[resolution]=monthly\nexport function getUnsortedComputedReportItems({ daily = false, report, idKey, }) {\n    if (!report) {\n        return [];\n    }\n    // Map<string | number, ComputedReportItem | Map<string | number, ComputedReportItem>\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        const type = dataPoint.type; // Org unit type\n        if (dataPoint && dataPoint.values) {\n            dataPoint.values.forEach((val) => {\n                let id = val.id ? val.id : val[idKey];\n                if (!id) {\n                    id = val.date;\n                }\n                // Ensure unique map IDs -- https://github.com/project-koku/koku-ui/issues/706\n                const idSuffix = idKey !== 'date' && idKey !== 'cluster' && val.cluster ? `-${val.cluster}` : '';\n                const mapId = `${id}${idSuffix}`;\n                // 'clusters' will contain either the cluster alias or default cluster ID\n                const cluster_alias = val.clusters && val.clusters.length > 0 ? val.clusters[0] : undefined;\n                const cluster = cluster_alias || val.cluster;\n                const clusters = val.clusters ? val.clusters : [];\n                const date = val.date;\n                const delta_percent = val.delta_percent ? val.delta_percent : 0;\n                const delta_value = val.delta_value ? val.delta_value : 0;\n                const source_uuid = val.source_uuid ? val.source_uuid : [];\n                let label;\n                if (report.meta && report.meta.others && (id === 'Other' || id === 'Others')) {\n                    // Add count to \"Others\" label\n                    label = i18next.t('chart.others', { count: report.meta.others });\n                }\n                else {\n                    const itemLabelKey = getItemLabel({ report, idKey, value: val });\n                    if (itemLabelKey === 'org_entities' && val.alias) {\n                        label = val.alias;\n                    }\n                    else if (itemLabelKey === 'account' && val.account_alias) {\n                        label = val.account_alias;\n                    }\n                    else if (itemLabelKey === 'cluster' && cluster_alias) {\n                        label = cluster_alias;\n                    }\n                    else if (val[itemLabelKey] instanceof Object) {\n                        label = val[itemLabelKey].value;\n                    }\n                    else {\n                        label = val[itemLabelKey];\n                    }\n                    if (label === undefined || label.trim().length === 0) {\n                        label = val.alias && val.alias.trim().length > 0 ? val.alias : val[idKey];\n                    }\n                }\n                if (daily) {\n                    const data = Object.assign(Object.assign({}, getUsageData(val)), { // capacity, limit, request, & usage\n                        cluster,\n                        clusters, cost: getCostData(val, 'cost'), date,\n                        delta_percent,\n                        delta_value,\n                        id, infrastructure: getCostData(val, 'infrastructure'), label,\n                        source_uuid, supplementary: getCostData(val, 'supplementary'), type });\n                    const item = itemMap.get(mapId);\n                    if (item) {\n                        item.set(date, data);\n                    }\n                    else {\n                        const dateMap = new Map();\n                        dateMap.set(date, data);\n                        itemMap.set(mapId, dateMap);\n                    }\n                }\n                else {\n                    const item = itemMap.get(mapId);\n                    if (item) {\n                        // When applying multiple group_by params, costs may be split between regions. We need to sum those costs\n                        // See https://issues.redhat.com/browse/COST-1131\n                        itemMap.set(mapId, Object.assign(Object.assign(Object.assign({}, item), getUsageData(val, item)), { // capacity, limit, request, & usage\n                            cluster,\n                            clusters,\n                            date,\n                            delta_percent,\n                            delta_value, cost: getCostData(val, 'cost', item), id, infrastructure: getCostData(val, 'infrastructure', item), label,\n                            source_uuid, supplementary: getCostData(val, 'supplementary', item), type }));\n                    }\n                    else {\n                        itemMap.set(mapId, Object.assign(Object.assign({}, getUsageData(val)), { // capacity, limit, request, & usage\n                            cluster,\n                            clusters, cost: getCostData(val, 'cost'), date,\n                            delta_percent,\n                            delta_value,\n                            id, infrastructure: getCostData(val, 'infrastructure'), label,\n                            source_uuid, supplementary: getCostData(val, 'supplementary'), type }));\n                    }\n                }\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\n","import { tagPrefix } from 'api/queries/query';\nexport function getItemLabel({ idKey, report, value }) {\n    let itemLabelKey = String(idKey);\n    if (report.meta && report.meta.group_by) {\n        const group_by = report.meta.group_by;\n        for (const key of Object.keys(group_by)) {\n            if (key.indexOf(tagPrefix)) {\n                const tagPrefixKey = tagPrefix + idKey;\n                if (value.hasOwnProperty(tagPrefixKey)) {\n                    itemLabelKey = tagPrefixKey;\n                }\n            }\n        }\n    }\n    return itemLabelKey;\n}\n","export const noop = () => { }; // tslint:disable-line no-empty\n","export const getReleasePath = () => {\n    const pathName = window.location.pathname.split('/');\n    pathName.shift();\n    let release = '';\n    if (pathName[0] === 'beta') {\n        release = `/beta`;\n    }\n    return release;\n};\n","export const skeletonWidth = {\n    xs: '16%',\n    sm: '33%',\n    md: '66%',\n    lg: '100%',\n};\n","function getValueForItem(item, options) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    const sortKey = options.key;\n    return item[sortKey];\n}\nexport function sort(array, options) {\n    const { direction = 0 /* asc */ } = options || {};\n    return [...array].sort((a, b) => {\n        const aVal = direction === 0 /* asc */ ? getValueForItem(a, options) : getValueForItem(b, options);\n        const bVal = direction === 0 /* asc */ ? getValueForItem(b, options) : getValueForItem(a, options);\n        if (aVal > bVal) {\n            return -1;\n        }\n        if (aVal < bVal) {\n            return 1;\n        }\n        return 0;\n    });\n}\n"],"sourceRoot":""}