{"version":3,"sources":["webpack:///./src/pages/onboardingModal/index.ts","webpack:///./src/components/copyClipboard/copyFunc.ts","webpack:///./src/components/copyClipboard/copyClipboard.tsx","webpack:///./src/pages/onboardingModal/configure/instructions.tsx","webpack:///./src/pages/onboardingModal/configure/index.ts","webpack:///./src/pages/onboardingModal/final/loader.tsx","webpack:///./src/pages/onboardingModal/final/index.tsx","webpack:///./src/pages/onboardingModal/obtainLogin/instructions.tsx","webpack:///./src/pages/onboardingModal/obtainLogin/index.ts","webpack:///./src/utils/validators.ts","webpack:///./src/pages/onboardingModal/sourceKind/checkList.tsx","webpack:///./src/pages/onboardingModal/sourceKind/form.tsx","webpack:///./src/pages/onboardingModal/sourceKind/instructions.tsx","webpack:///./src/pages/onboardingModal/sourceKind/sourceKind.tsx","webpack:///./src/pages/onboardingModal/sourceKind/index.tsx","webpack:///./src/pages/onboardingModal/usageCollector/form.tsx","webpack:///./src/pages/onboardingModal/usageCollector/instructions.tsx","webpack:///./src/pages/onboardingModal/usageCollector/usageCollector.tsx","webpack:///./src/pages/onboardingModal/usageCollector/index.ts","webpack:///./src/pages/onboardingModal/wizard/wizard.tsx","webpack:///./src/pages/onboardingModal/wizard/index.ts"],"names":["__webpack_exports__","Object","react_hot_loader__WEBPACK_IMPORTED_MODULE_0__","module","_wizard__WEBPACK_IMPORTED_MODULE_1__","copyFunc","event","text","clipboard","currentTarget","parentElement","el","document","createElement","value","appendChild","select","execCommand","removeChild","CopyClipboardStateless","isCopied","aria-label","ariaLabel","onCopy","react_default","a","style","position","TextInput","onChange","isReadOnly","Button","onClick","variant","right","ok_icon","paste_icon","copyClipboard_CopyClipboard","Component","[object Object]","props","super","this","state","wasClicked","setState","timer","setTimeout","clearTimeout","instructions","t","Fragment","Title","size","configure","es","loader","addSource","type","name","authentication","provider_resource_name","clusterId","mH","display","verticalAlign","Number","parseFloat","margin","apiStatus","in_progress_icon","width","height","apiErrors","times_circle_icon","color","check_circle_icon","Grid","gutter","GridItem","span","renderIcon","react_redux_es","common","onboarding","selectOnboardingName","selectOnboardingType","selectOnboardingClusterID","selectApiErrors","selectApiStatus","obtainLogin_instructions","List","ListItem","obtainLogin","sourceTypeValidator","sourceNameValidator","RegExp","test","ocpClusterIdValidator","actionItems","id","label","i18nKey","operator","target","href","insights","ansible","epel","oc","SourceKindCheckList","checkedItems","updateCheckItem","checkAll","map","actionItem","Checkbox","key","isChecked","keys","every","k","defaultProps","checkList","sourceKind_form","updateName","nameValid","updateType","typeValid","Form","FormGroup","isValid","fieldId","Select","SelectOption","isDisabled","helperTextInvalid","helperText","sourceKind_instructions","sourceKind","checked","updateCheck","_name","Boolean","item","onboardingModal_sourceKind","assign","selectOnboardingSourceKindChecked","selectOnboardingValidation","updateSourceKindCheckList","checkSourceKindCheckList","usageCollector_form","usageCollector_instructions","korekuta","usageCollector","updateClusterId","clusterIdValid","selectOnboardingKorekutaChecked","updateKorekutaCheckList","checkKorekutaCheckList","updateClusterID","steps","onboardingModal_usageCollector","onboardingModal_final","isModalOpen","selectOnboardingModal","isInvalid","selectOnboardingIsInvalid","dirtyMap","selectOnboardingDirty","sourceKindChecked","closeModal","cancelOnboarding","src","index","setIndex","isDirty","actions","length","Modal","isLarge","title","isOpen","onClose"],"mappings":"kIAEAA,EAAA,QAAAC,OAAAC,EAAA,IAAAD,CAAAE,EAAA,CAAAC,EAAA,6KCOA,IAAAC,EATA,CAAAC,EAAAC,KACA,MAAAC,EAAAF,EAAAG,cAAAC,cACAC,EAAAC,SAAAC,cAAA,SACAF,EAAAG,MAAAP,EACAC,EAAAO,YAAAJ,GACAA,EAAAK,SACAJ,SAAAK,YAAA,QACAT,EAAAU,YAAAP,ICHA,MAAAQ,EAAA,EAAwCZ,OAAAa,WAAAC,aAAAC,EAAAC,YAAmDC,EAAAC,EAAAZ,cAAA,OAAkCa,OAASC,SAAA,aACtIH,EAAAC,EAAAZ,cAAAe,EAAA,GAAoCC,SAAA,SAAAC,YAAA,EAAAhB,MAAAP,EAAAc,aAAAC,IACpCE,EAAAC,EAAAZ,cAAAkB,EAAA,GAAiCC,QAAAT,EAAAU,QAAA,UAAAP,OAA8CC,SAAA,WAAAO,MAAA,QAAuCd,EAAAI,EAAAC,EAAAZ,cAAAsB,EAAA,QAAAX,EAAAC,EAAAZ,cAAAuB,EAAA,gBACtHC,UAAAb,EAAAC,EAAAa,UACAC,YAAAC,GACAC,MAAAD,GACAE,KAAAC,OAAsBC,YAAA,GAEtBL,SACA,OAAAf,EAAAC,EAAAZ,cAAAM,GAA6DZ,KAAAmC,KAAAF,MAAAjC,KAAAa,SAAAsB,KAAAC,MAAAC,WAAAvB,aAAAqB,KAAAF,MAAA,cAAAjB,OAAAjB,IAC7DD,EAAAC,EAAAoC,KAAAF,MAAAjC,MACAmC,KAAAG,UAA+BD,YAAA,GAAmB,KAClD,MAAAE,EAAAC,WAAA,KACAL,KAAAG,UAAuCD,YAAA,GAAoB,KAC3DI,aAAAF,MAEqB,WCCrB,IAAAG,EAlBA,EAAgCC,OAChC1B,EAAAC,EAAAZ,cAAAW,EAAAC,EAAA0B,SAAA,KACA3B,EAAAC,EAAAZ,cAAAuC,EAAA,GAAoCC,KAAA,MAAaH,EAAA,4CACjD1B,EAAAC,EAAAZ,cAAA,WAAAqC,EAAA,2CACA1B,EAAAC,EAAAZ,cAAA,WACAW,EAAAC,EAAAZ,cAAAuC,EAAA,GAAoCC,KAAA,MAAaH,EAAA,4CACjD1B,EAAAC,EAAAZ,cAAA,WAAAqC,EAAA,sCACA1B,EAAAC,EAAAZ,cAAAwB,GAA4C9B,KAAA,6BAAAc,aAAA,iCAC5CG,EAAAC,EAAAZ,cAAA,WACAW,EAAAC,EAAAZ,cAAAuC,EAAA,GAAoCC,KAAA,MAAaH,EAAA,4CACjD1B,EAAAC,EAAAZ,cAAA,WAAAqC,EAAA,sCACA1B,EAAAC,EAAAZ,cAAAwB,GAA4C9B,KAAA,+CAAAc,aAAA,sDAC5CG,EAAAC,EAAAZ,cAAA,WACAW,EAAAC,EAAAZ,cAAAuC,EAAA,GAAoCC,KAAA,MAAaH,EAAA,oCACjD1B,EAAAC,EAAAZ,cAAA,WAAAqC,EAAA,8BACA1B,EAAAC,EAAAZ,cAAAwB,GAA4C9B,KAAA,uCAAAc,aAAA,gEAC5CG,EAAAC,EAAAZ,cAAA,YCjBAyC,EAAArD,OAAAsD,EAAA,EAAAtD,EAAA,CAAAgD,gDCuCA,IAAAO,gBAtCAhC,EAAAC,EAAAa,UACAC,YAAAC,GACAC,MAAAD,GAEAD,oBACAG,KAAAF,MAAAiB,WACAC,KAAAhB,KAAAF,MAAAkB,KACAC,KAAAjB,KAAAF,MAAAmB,KACAC,gBACAC,uBAAAnB,KAAAF,MAAAsB,aAIAvB,aACA,MAAAwB,EAAA,MACArC,GACAsC,QAAA,QACAC,kBAA8B,KAAAC,OAAAC,WAAAJ,OAC9BK,OAAA,QAEA,WAAA1B,KAAAF,MAAA6B,UACA7C,EAAAC,EAAAZ,cAAAyD,EAAA,GAAwD5C,QAAA6C,MAAAR,EAAAS,OAAAT,IAExDrB,KAAAF,MAAAiC,UACAjD,EAAAC,EAAAZ,cAAA6D,EAAA,GAA0DC,MAAA,MAAAjD,QAAA6C,MAAAR,EAAAS,OAAAT,IAE1DvC,EAAAC,EAAAZ,cAAA+D,EAAA,GAAsDD,MAAA,QAAAjD,QAAA6C,MAAAR,EAAAS,OAAAT,IAEtDxB,SACA,OAAAf,EAAAC,EAAAZ,cAAAW,EAAAC,EAAA0B,SAAA,KACA3B,EAAAC,EAAAZ,cAAAuC,EAAA,GAAwCC,KAAA,MAAaX,KAAAF,MAAAU,EAAA,2BACrD1B,EAAAC,EAAAZ,cAAA,WACAW,EAAAC,EAAAZ,cAAAgE,EAAA,GAAuCC,OAAA,MACvCtD,EAAAC,EAAAZ,cAAAkE,EAAA,GAA+CC,KAAA,IAC/CxD,EAAAC,EAAAZ,cAAAkE,EAAA,GAA+CC,KAAA,GAAUtC,KAAAuC,cACzDzD,EAAAC,EAAAZ,cAAAkE,EAAA,GAA+CC,KAAA,UChC/C/E,OAAAiF,EAAA,EAAAjF,QAAAkF,EAAA,EAAAlF,CAAA0C,KACAgB,KAAAyB,EAAA,EAAAC,qBAAA1C,GACAe,KAAA0B,EAAA,EAAAE,qBAAA3C,GACAmB,UAAAsB,EAAA,EAAAG,0BAAA5C,GACA8B,UAAAW,EAAA,EAAAI,gBAAA7C,GACA0B,UAAAe,EAAA,EAAAK,gBAAA9C,OAEAc,UAAA2B,EAAA,EAAA3B,YACCxD,OAAAsD,EAAA,EAAAtD,GAAAuD,sBCED,IAAAkC,EAbA,EAAkCxC,OAClC1B,EAAAC,EAAAZ,cAAAW,EAAAC,EAAA0B,SAAA,KACA3B,EAAAC,EAAAZ,cAAAuC,EAAA,GAAoCC,KAAA,MAAaH,EAAA,+CACjD1B,EAAAC,EAAAZ,cAAA,WAAAqC,EAAA,kCACA1B,EAAAC,EAAAZ,cAAA,WACAW,EAAAC,EAAAZ,cAAA8E,EAAA,OACAnE,EAAAC,EAAAZ,cAAA+E,EAAA,OAAA1C,EAAA,yCACA1B,EAAAC,EAAAZ,cAAA+E,EAAA,OACA1C,EAAA,uCACA1B,EAAAC,EAAAZ,cAAA,WACAW,EAAAC,EAAAZ,cAAAwB,GAAoD9B,KAAA,qEAAAc,aAAA,sCACpDG,EAAAC,EAAAZ,cAAA+E,EAAA,OAAA1C,EAAA,uCCZA2C,EAAA5F,OAAAsD,EAAA,EAAAtD,EAAA,CAAAyF,GCFA,MAAAI,EAAAhF,GAAA,KAAAA,EACAiF,EAAAjF,GAAA,IAAAkF,OAAA,MAAAC,KAAAnF,GACAoF,EAAApF,GAAA,IAAAkF,OAAA,MAAAC,KAAAnF,gBCCA,MAAAqF,IAEAC,GAAA,oBACAC,MAAA7E,EAAAC,EAAAZ,cAAA0C,EAAA,GAAiD+C,QAAA,sCACjDhF,UAAA,8BAGA8E,GAAA,0BACAC,MAAA7E,EAAAC,EAAAZ,cAAA0C,EAAA,GAAkD+C,QAAA,oCAAAC,SAAA/E,EAAAC,EAAAZ,cAAA,KAAmF2F,OAAA,SAAAC,KAAA,yGAAkI,uBACvQnF,UAAA,8BAGA8E,GAAA,wBACAC,MAAA7E,EAAAC,EAAAZ,cAAA0C,EAAA,GAAkD+C,QAAA,oCAAAI,SAAAlF,EAAAC,EAAAZ,cAAA,KAAmF2F,OAAA,SAAAC,KAAA,mEAA4F,6BACjOnF,UAAA,kCAGA8E,GAAA,qBACAC,MAAA7E,EAAAC,EAAAZ,cAAA0C,EAAA,GAAkD+C,QAAA,oCAAAK,QAAAnF,EAAAC,EAAAZ,cAAA,KAAkF2F,OAAA,SAAAC,KAAA,mFAA4G,WAAAG,KAAApF,EAAAC,EAAAZ,cAAA,KAA8C2F,OAAA,SAAAC,KAAA,kDAA2E,qBACzWnF,UAAA,6BAGA8E,GAAA,WACAC,MAAA7E,EAAAC,EAAAZ,cAAA0C,EAAA,GAAkD+C,QAAA,oCAAAO,GAAArF,EAAAC,EAAAZ,cAAA,KAA6E2F,OAAA,SAAAC,KAAA,kGAA2H,2BAC1PnF,UAAA,6BAGAwF,EAAA,EAA8B5D,IAAA6D,eAAAC,kBAAAC,cAC9BzF,EAAAC,EAAAZ,cAAAW,EAAAC,EAAA0B,SAAA,KACAD,EAAA,0CACAiD,EAAAe,IAAAC,GAAA3F,EAAAC,EAAAZ,cAAAuG,EAAA,GAAsEC,oBAAsBF,EAAAf,KAAckB,UAAAP,EAAAI,EAAAf,MAAA,EAAAvE,SAAAmF,EAAAX,MAAAc,EAAAd,MAAAhF,aAAA8F,EAAA7F,UAAA8E,GAAAe,EAAAf,MAC1G5E,EAAAC,EAAAZ,cAAAuG,EAAA,GAAuCC,IAAA,0BAAAxF,SAAAoF,EAAAK,UAAArH,OAAAsH,KAAAR,GAAAS,MAAAC,GAAAV,EAAAU,IAAApB,MAAAnD,EAAA,qCAAA7B,aAAA6B,EAAA,yCAAAkD,GAAA,oBAEvCU,EAAAY,cACAV,gBAAA,SACAC,SAAA,UAEA,IAAAU,EAAA,sCC5BA,IAAAC,EAVA,EAAyB1E,IAAAS,OAAAkE,aAAAC,YAAApE,OAAAqE,aAAAC,eACzBxG,EAAAC,EAAAZ,cAAAoH,EAAA,OACAzG,EAAAC,EAAAZ,cAAAqH,EAAA,GAAwCC,QAAAH,EAAAI,QAAA,cAAA/B,MAAAnD,EAAA,0BACxC1B,EAAAC,EAAAZ,cAAAwH,EAAA,GAAyCF,QAAAH,EAAAlH,MAAA4C,EAAA0C,GAAA,cAAAvE,SAAAkG,GACzCvG,EAAAC,EAAAZ,cAAAyH,EAAA,GAAmDjC,MAAAnD,EAAA,gCAAApC,MAAA,KACnDU,EAAAC,EAAAZ,cAAAyH,EAAA,GAAmDC,YAAA,EAAAlC,MAAA,4BAAAvF,MAAA,QACnDU,EAAAC,EAAAZ,cAAAyH,EAAA,GAAmDjC,MAAA,6BAAAvF,MAAA,UACnDU,EAAAC,EAAAZ,cAAAqH,EAAA,GAAwCC,QAAAL,EAAAU,kBAAAtF,EAAA,uCAAAuF,WAAAvF,EAAA,+BAAAkF,QAAA,cAAA/B,MAAAnD,EAAA,0BACxC1B,EAAAC,EAAAZ,cAAAe,EAAA,GAA4CuG,QAAAL,EAAA1B,GAAA,cAAAtF,MAAA6C,EAAA9B,SAAAgG,MCF5C,IAAAa,EANA,EAAiCxF,OACjC1B,EAAAC,EAAAZ,cAAAW,EAAAC,EAAA0B,SAAA,KACA3B,EAAAC,EAAAZ,cAAAuC,EAAA,GAAoCC,KAAA,MAAaH,EAAA,8CACjD1B,EAAAC,EAAAZ,cAAA,WAAAqC,EAAA,6CACA1B,EAAAC,EAAAZ,cAAA,YCiBA,IAAA8H,EAlBA,EAAqBzF,IAAAS,OAAAkE,aAAAC,YAAApE,OAAAqE,aAAAC,YAAAY,UAAAC,cAAA5B,eAUrB,OAAAzF,EAAAC,EAAAZ,cAAAW,EAAAC,EAAA0B,SAAA,KACA3B,EAAAC,EAAAZ,cAAA6H,GAAqDxF,MACrD1B,EAAAC,EAAAZ,cAAA+G,GAA6CC,WAX7C,CAAAiB,EAAAxI,KACAuH,EAAAvH,EAAAG,cAAAK,MAAAiF,IAU6CgC,WAR7CzH,IACAyH,EAAAzH,EAAAwF,IAO6CnC,OAAAmE,YAAApE,OAAAsE,YAAA9E,MAC7C1B,EAAAC,EAAAZ,cAAA,WACAkI,QAAA,KAAArF,IAAAlC,EAAAC,EAAAZ,cAAA8G,GAA2EzE,IAAA6D,aAAA6B,EAAA5B,gBAP3E,CAAAlG,EAAAR,KACAuI,GAAqBG,KAAA1I,EAAAG,cAAA2F,GAAAtF,WAMsDmG,SAAA,KAC3EA,SCfAgC,EAAAhJ,OAAAiF,EAAA,EAAAjF,QAAAkF,EAAA,EAAAlF,CAAA0C,GAAA1C,OAAAiJ,QAAsEvF,KAAAyB,EAAA,EAAAC,qBAAA1C,GAAAe,KAAA0B,EAAA,EAAAE,qBAAA3C,GAAAiG,QAAAxD,EAAA,EAAA+D,kCAAAxG,IAAsLyC,EAAA,EAAAgE,2BAAAzG,MAC5PkF,WAAAzC,EAAA,EAAAyC,WACAE,WAAA3C,EAAA,EAAA2C,WACAc,YAAAzD,EAAA,EAAAiE,0BACApC,SAAA7B,EAAA,EAAAkE,0BAJA,CAKCrJ,OAAAsD,EAAA,EAAAtD,GAAA0I,ICHD,IAAAY,EALA,EAAsBrG,IAAAiF,UAAArH,QAAAe,cACtBL,EAAAC,EAAAZ,cAAAoH,EAAA,OACAzG,EAAAC,EAAAZ,cAAAqH,EAAA,GAAwCC,UAAAC,QAAA,aAAA/B,MAAAnD,EAAA,yCACxC1B,EAAAC,EAAAZ,cAAAe,EAAA,GAA4CuG,UAAA/B,GAAA,aAAAtF,QAAAe,eCqB5C,IAAA2H,EAvBA,EAAqCtG,OACrC1B,EAAAC,EAAAZ,cAAAW,EAAAC,EAAA0B,SAAA,KACA3B,EAAAC,EAAAZ,cAAAuC,EAAA,GAAoCC,KAAA,MAAaH,EAAA,2CACjD1B,EAAAC,EAAAZ,cAAA,WAAAqC,EAAA,0CACA1B,EAAAC,EAAAZ,cAAA,WACAqC,EAAA,uCACA1B,EAAAC,EAAAZ,cAAA8E,EAAA,OACAnE,EAAAC,EAAAZ,cAAA+E,EAAA,OACApE,EAAAC,EAAAZ,cAAAW,EAAAC,EAAA0B,SAAA,KACA3B,EAAAC,EAAAZ,cAAA0C,EAAA,GAAsD+C,QAAA,2CAAAmD,SAAAjI,EAAAC,EAAAZ,cAAA,KAA0F4F,KAAA,2GAAAD,OAAA,UAAqI,yBACrRhF,EAAAC,EAAAZ,cAAA,WACAqC,EAAA,uCACA1B,EAAAC,EAAAZ,cAAA,WACAW,EAAAC,EAAAZ,cAAA8E,EAAA,OACAnE,EAAAC,EAAAZ,cAAA+E,EAAA,OAAA1C,EAAA,mCACA1B,EAAAC,EAAAZ,cAAA+E,EAAA,OAAA1C,EAAA,mCACA1B,EAAAC,EAAAZ,cAAA+E,EAAA,OAAA1C,EAAA,mCACA1B,EAAAC,EAAAZ,cAAA+E,EAAA,OAAA1C,EAAA,oCACA1B,EAAAC,EAAAZ,cAAA,WAAAqC,EAAA,oCACA1B,EAAAC,EAAAZ,cAAA,WACAW,EAAAC,EAAAZ,cAAA,iLACAW,EAAAC,EAAAZ,cAAA+E,EAAA,OAAA1C,EAAA,4CCTA,IAAAwG,EAVA,EAAyBxG,IAAAY,YAAA6F,kBAAAC,qBAIzB,OAAApI,EAAAC,EAAAZ,cAAAW,EAAAC,EAAA0B,SAAA,KACA3B,EAAAC,EAAAZ,cAAA2I,GAA2CtG,MAC3C1B,EAAAC,EAAAZ,cAAA,WACAW,EAAAC,EAAAZ,cAAA,WACAW,EAAAC,EAAAZ,cAAA0I,GAA4CrG,IAAArB,SAP5C,CAAAiH,EAAAxI,KACAqJ,EAAArJ,EAAAG,cAAAK,MAAAoF,IAM4CiC,QAAAyB,EAAA9I,MAAAgD,QCR5C7D,OAAAiF,EAAA,EAAAjF,QAAAkF,EAAA,EAAAlF,CAAA0C,KACAiG,QAAAxD,EAAA,EAAAyE,gCAAAlH,GACAmB,UAAAsB,EAAA,EAAAG,0BAAA5C,GACAiH,eAAAxE,EAAA,EAAAgE,2BAAAzG,GACAiH,mBAEAf,YAAAzD,EAAA,EAAA0E,wBACA7C,SAAA7B,EAAA,EAAA2E,uBACAJ,gBAAAvE,EAAA,EAAA4E,kBACC/J,OAAAsD,EAAA,EAAAtD,GAAAyJ,ICND,MAAAO,GACAzI,EAAAC,EAAAZ,cAAAoI,GAAqC5B,IAAA,gBACrC7F,EAAAC,EAAAZ,cAAAgF,GAAsCwB,IAAA,iBACtC7F,EAAAC,EAAAZ,cAAAqJ,GAAyC7C,IAAA,oBACzC7F,EAAAC,EAAAZ,cAAAyC,GAAoC+D,IAAA,cACpC7F,EAAAC,EAAAZ,cAAAsJ,GAAgC9C,IAAA,eCRhCpH,OAAAiF,EAAA,EAAAjF,QAAAkF,EAAA,EAAAlF,CAAA0C,KACAyH,YAAAhF,EAAA,EAAAiF,sBAAA1H,GACA2H,UAAAlF,EAAA,EAAAmF,0BAAA5H,GACA6H,SAAApF,EAAA,EAAAqF,sBAAA9H,GACA+H,kBAAAtF,EAAA,EAAA+D,kCAAAxG,OAEAgI,WAAAvF,EAAA,EAAAuF,WACAC,iBAAAxF,EAAA,EAAAwF,mBACC3K,OAAAsD,EAAA,EAAAtD,GDED,EAA4BiD,IAAAyH,aAAAC,mBAAAR,cAAAE,YAAAE,WAAAE,uBAC5BlJ,EAAAC,EAAAZ,cAAAgK,EAAA,SAAgDC,QAAAC,eAChD,MAAAC,GACAR,EAAA7G,MACA6G,EAAA9G,MACAzD,OAAAsH,KAAAmD,GAAAlD,MAAAC,GAAAiD,EAAAjD,KACA,EACA+C,EAAA1G,WACA,GACA,GAEAmH,GACAH,EAAAb,EAAAiB,OAAA,GAAA1J,EAAAC,EAAAZ,cAAAkB,EAAA,GAAsEsF,IAAA,gBAAApF,QAAA,YAAAmE,GAAA,uBAAApE,QAAA,KACtE+I,EAAA,GACAH,MACmB,UACnBE,EAAA,GAAAA,EAAAb,EAAAiB,OAAA,GAAA1J,EAAAC,EAAAZ,cAAAkB,EAAA,GAAmFsF,IAAA,cAAApF,QAAA,YAAAmE,GAAA,uBAAApE,QAAA,IAAA+I,EAAAD,EAAA,IAA2G,QAC9LA,EAAAb,EAAAiB,OAAA,GAAA1J,EAAAC,EAAAZ,cAAAkB,EAAA,GAAsEwG,YAAAyC,EAAAF,IAAAR,EAAAjD,IAAA,kBAAApF,QAAA,UAAAmE,GAAA,yBAAApE,QAAA,KACtE+I,EAAAD,EAAA,KACmB,YACnBA,EAAA,IAAAb,EAAAiB,QAAA1J,EAAAC,EAAAZ,cAAAkB,EAAA,GAAwEsF,IAAA,eAAApF,QAAA,UAAAmE,GAAA,sBAAApE,QAAA,KACxE+I,EAAA,GACAH,MACmB,UAEnB,OAAApJ,EAAAC,EAAAZ,cAAAsK,EAAA,GAA4CzJ,OAC5C8C,OAAA,QACAD,MAAA,SACa6G,SAAA,EAAAC,MAAAnI,EAAA,2BAAAoI,OAAAlB,EAAAa,UAAAM,QAAAZ,GAAkHV,EAAAa","file":"febdc0ca2d5fe79ede03.bundle.js","sourcesContent":["import { hot } from 'react-hot-loader';\nimport Wizard from './wizard';\nexport default hot(module)(Wizard);\n","const copy = (event, text) => {\n    const clipboard = event.currentTarget.parentElement;\n    const el = document.createElement('input');\n    el.value = text;\n    clipboard.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    clipboard.removeChild(el);\n};\nexport default copy;\n","import { Button, TextInput } from '@patternfly/react-core';\nimport { OkIcon, PasteIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport copyfnc from './copyFunc';\nexport const CopyClipboardStateless = ({ text, isCopied, 'aria-label': ariaLabel, onCopy, }) => (React.createElement(\"div\", { style: { position: 'relative' } },\n    React.createElement(TextInput, { onChange: () => null, isReadOnly: true, value: text, \"aria-label\": ariaLabel }),\n    React.createElement(Button, { onClick: onCopy, variant: \"primary\", style: { position: 'absolute', right: '1px' } }, isCopied ? React.createElement(OkIcon, null) : React.createElement(PasteIcon, null))));\nexport class CopyClipboard extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { wasClicked: false };\n    }\n    render() {\n        return (React.createElement(CopyClipboardStateless, { text: this.props.text, isCopied: this.state.wasClicked, \"aria-label\": this.props['aria-label'], onCopy: (event) => {\n                copyfnc(event, this.props.text);\n                this.setState({ wasClicked: true }, () => {\n                    const timer = setTimeout(() => {\n                        this.setState({ wasClicked: false }, () => {\n                            clearTimeout(timer);\n                        });\n                    }, 2000);\n                });\n            } }));\n    }\n}\n","import { Title } from '@patternfly/react-core';\nimport React from 'react';\nimport CopyClipboard from '../../../components/copyClipboard';\nconst ConfigureInstructions = ({ t }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.configure.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.configure.instructions_text')),\n        React.createElement(\"br\", null),\n        React.createElement(Title, { size: \"md\" }, t('onboarding.configure.edit_contrab_title')),\n        React.createElement(\"div\", null, t('onboarding.configure.edit_contrab')),\n        React.createElement(CopyClipboard, { text: \"# contrab -u <username> -e\", \"aria-label\": \"command line to edit contrab\" }),\n        React.createElement(\"br\", null),\n        React.createElement(Title, { size: \"md\" }, t('onboarding.configure.create_entry_title')),\n        React.createElement(\"div\", null, t('onboarding.configure.create_entry')),\n        React.createElement(CopyClipboard, { text: \"*/45 * * * * /path/to/ocp_usage.sh --collect\", \"aria-label\": \"entry to run OCP Usage collector every 45 minutes\" }),\n        React.createElement(\"br\", null),\n        React.createElement(Title, { size: \"md\" }, t('onboarding.configure.note_title')),\n        React.createElement(\"div\", null, t('onboarding.configure.note')),\n        React.createElement(CopyClipboard, { text: \"ocpcollector ALL=(ALL) NOPASSWD: ALL\", \"aria-label\": \"set sudo authority to interact with Red Hat Insights Client\" }),\n        React.createElement(\"br\", null)));\n};\nexport default ConfigureInstructions;\n","import { translate } from 'react-i18next';\nimport ConfigureInstructions from './instructions';\nexport default translate()(ConfigureInstructions);\n","import { Grid, GridItem, Title } from '@patternfly/react-core';\nimport { CheckCircleIcon, InProgressIcon, TimesCircleIcon, } from '@patternfly/react-icons';\nimport React from 'react';\nclass Loader extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        this.props.addSource({\n            type: this.props.type,\n            name: this.props.name,\n            authentication: {\n                provider_resource_name: this.props.clusterId,\n            },\n        });\n    }\n    renderIcon() {\n        const mH = '7em';\n        const style = {\n            display: 'block',\n            verticalAlign: `${-0.125 * Number.parseFloat(mH)}em`,\n            margin: 'auto',\n        };\n        if (this.props.apiStatus === 1 /* inProgress */) {\n            return React.createElement(InProgressIcon, { style: style, width: mH, height: mH });\n        }\n        if (this.props.apiErrors) {\n            return (React.createElement(TimesCircleIcon, { color: \"red\", style: style, width: mH, height: mH }));\n        }\n        return (React.createElement(CheckCircleIcon, { color: \"green\", style: style, width: mH, height: mH }));\n    }\n    render() {\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { size: \"xl\" }, this.props.t('onboarding.final.title')),\n            React.createElement(\"br\", null),\n            React.createElement(Grid, { gutter: \"lg\" },\n                React.createElement(GridItem, { span: 2 }),\n                React.createElement(GridItem, { span: 8 }, this.renderIcon()),\n                React.createElement(GridItem, { span: 2 }))));\n    }\n}\nexport default Loader;\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\n// MAKE SURE IT WORKS\nimport { onboardingActions, onboardingSelectors } from 'store/onboarding';\nimport Loader from './loader';\nexport default connect(createMapStateToProps(state => ({\n    name: onboardingSelectors.selectOnboardingName(state),\n    type: onboardingSelectors.selectOnboardingType(state),\n    clusterId: onboardingSelectors.selectOnboardingClusterID(state),\n    apiErrors: onboardingSelectors.selectApiErrors(state),\n    apiStatus: onboardingSelectors.selectApiStatus(state),\n})), {\n    addSource: onboardingActions.addSource,\n})(translate()(Loader));\n","import { List, ListItem, Title } from '@patternfly/react-core';\nimport CopyClipboard from 'components/copyClipboard';\nimport React from 'react';\nconst ObtainLoginInstructions = ({ t }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.obtain_login.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.obtain_login.intro')),\n        React.createElement(\"br\", null),\n        React.createElement(List, null,\n            React.createElement(ListItem, null, t('onboarding.obtain_login.obtain_token')),\n            React.createElement(ListItem, null,\n                t('onboarding.obtain_login.run_command'),\n                React.createElement(\"br\", null),\n                React.createElement(CopyClipboard, { text: \"# oc serviceaccounts get-token metering-operator > ocp_usage_token\", \"aria-label\": \"command line to obtain the token\" })),\n            React.createElement(ListItem, null, t('onboarding.obtain_login.security')))));\n};\nexport default ObtainLoginInstructions;\n","import { translate } from 'react-i18next';\nimport ObtainLogin from './instructions';\nexport default translate()(ObtainLogin);\n","export const sourceTypeValidator = (value) => value !== '';\nexport const sourceNameValidator = (value) => new RegExp('^.').test(value);\nexport const ocpClusterIdValidator = (value) => new RegExp('^.').test(value);\n","import { Checkbox } from '@patternfly/react-core';\nimport React from 'react';\nimport { Interpolate } from 'react-i18next';\nconst actionItems = [\n    {\n        id: 'check-ocp-version',\n        label: React.createElement(Interpolate, { i18nKey: \"onboarding.source_kind.checkbox_1\" }),\n        ariaLabel: 'OCP version 3.11 or newer',\n    },\n    {\n        id: 'check-operator-metering',\n        label: (React.createElement(Interpolate, { i18nKey: \"onboarding.source_kind.checkbox_2\", operator: React.createElement(\"a\", { target: \"_blank\", href: \"https://github.com/operator-framework/operator-metering/blob/master/Documentation/install-metering.md\" }, \"Operator Metering\") })),\n        ariaLabel: 'Install operator metering',\n    },\n    {\n        id: 'check-insights-client',\n        label: (React.createElement(Interpolate, { i18nKey: \"onboarding.source_kind.checkbox_3\", insights: React.createElement(\"a\", { target: \"_blank\", href: \"https://access.redhat.com/products/red-hat-insights/#getstarted\" }, \"Red Hat Insights Client\") })),\n        ariaLabel: 'Setup Red Hat Insights Client',\n    },\n    {\n        id: 'check-ansible-epel',\n        label: (React.createElement(Interpolate, { i18nKey: \"onboarding.source_kind.checkbox_4\", ansible: React.createElement(\"a\", { target: \"_blank\", href: \"https://docs.ansible.com/ansible/2.7/installation_guide/intro_installation.html\" }, \"Ansible\"), epel: React.createElement(\"a\", { target: \"_blank\", href: \"https://fedoraproject.org/wiki/EPEL#Quickstart\" }, \"EPEL repository\") })),\n        ariaLabel: 'Install Ansible and EPEL',\n    },\n    {\n        id: 'check-oc',\n        label: (React.createElement(Interpolate, { i18nKey: \"onboarding.source_kind.checkbox_5\", oc: React.createElement(\"a\", { target: \"_blank\", href: \"https://docs.openshift.com/container-platform/3.3/cli_reference/get_started_cli.html#cli-linux\" }, \"OCP command-line (oc)\") })),\n        ariaLabel: 'Install OCP command line',\n    },\n];\nconst SourceKindCheckList = ({ t, checkedItems, updateCheckItem, checkAll, }) => {\n    return (React.createElement(React.Fragment, null,\n        t('onboarding.source_kind.checklist_title'),\n        actionItems.map(actionItem => (React.createElement(Checkbox, { key: `checkbox-key-${actionItem.id}`, isChecked: checkedItems[actionItem.id] || false, onChange: updateCheckItem, label: actionItem.label, \"aria-label\": actionItem.ariaLabel, id: actionItem.id }))),\n        React.createElement(Checkbox, { key: 'checkbox-all-sourcekind', onChange: checkAll, isChecked: Object.keys(checkedItems).every(k => checkedItems[k]), label: t('onboarding.source_kind.checkbox_6'), \"aria-label\": t('onboarding.source_kind.check them all'), id: \"check-them-all\" })));\n};\nSourceKindCheckList.defaultProps = {\n    updateCheckItem: () => null,\n    checkAll: () => null,\n};\nexport default SourceKindCheckList;\n","import { Form, FormGroup, Select, SelectOption, TextInput, } from '@patternfly/react-core';\nimport React from 'react';\nconst SourceKindForm = ({ t, name, updateName, nameValid, type, updateType, typeValid, }) => {\n    return (React.createElement(Form, null,\n        React.createElement(FormGroup, { isValid: typeValid, fieldId: \"source_type\", label: t('onboarding.type_label') },\n            React.createElement(Select, { isValid: typeValid, value: type, id: \"source_type\", onChange: updateType },\n                React.createElement(SelectOption, { label: t('onboarding.select_type_label'), value: \"\" }),\n                React.createElement(SelectOption, { isDisabled: true, label: \"Amazon Web Services (AWS)\", value: \"AWS\" }),\n                React.createElement(SelectOption, { label: \"Red Hat OpenShift (RH OCP)\", value: \"OCP\" }))),\n        React.createElement(FormGroup, { isValid: nameValid, helperTextInvalid: t('onboarding.name_helper_invalid_text'), helperText: t('onboarding.name_helper_text'), fieldId: \"source_name\", label: t('onboarding.name_label') },\n            React.createElement(TextInput, { isValid: nameValid, id: \"source_name\", value: name, onChange: updateName }))));\n};\nexport default SourceKindForm;\n","import { Title } from '@patternfly/react-core';\nimport React from 'react';\nconst SourceKindInstructions = ({ t }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.source_kind.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.source_kind.instructions_text')),\n        React.createElement(\"br\", null)));\n};\nexport default SourceKindInstructions;\n","import React from 'react';\nimport { sourceNameValidator, sourceTypeValidator } from 'utils/validators';\nimport SourceKindCheckList from './checkList';\nimport SourceKindForm from './form';\nimport SourceKindInstructions from './instructions';\nconst SourceKind = ({ t, name, updateName, nameValid, type, updateType, typeValid, checked, updateCheck, checkAll, }) => {\n    const updateNameText = (_name, event) => {\n        updateName(event.currentTarget.value, sourceNameValidator);\n    };\n    const updateTypeOption = (event) => {\n        updateType(event, sourceTypeValidator);\n    };\n    const updateCheckItem = (value, event) => {\n        updateCheck({ item: event.currentTarget.id, value });\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(SourceKindInstructions, { t: t }),\n        React.createElement(SourceKindForm, { updateName: updateNameText, updateType: updateTypeOption, name: name, nameValid: nameValid, type: type, typeValid: typeValid, t: t }),\n        React.createElement(\"br\", null),\n        Boolean(type !== '') && (React.createElement(SourceKindCheckList, { t: t, checkedItems: checked, updateCheckItem: updateCheckItem, checkAll: () => {\n                checkAll();\n            } }))));\n};\nexport default SourceKind;\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions, onboardingSelectors } from 'store/onboarding';\nimport SourceKind from './sourceKind';\nexport default connect(createMapStateToProps(state => (Object.assign({ name: onboardingSelectors.selectOnboardingName(state), type: onboardingSelectors.selectOnboardingType(state), checked: onboardingSelectors.selectOnboardingSourceKindChecked(state) }, onboardingSelectors.selectOnboardingValidation(state)))), {\n    updateName: onboardingActions.updateName,\n    updateType: onboardingActions.updateType,\n    updateCheck: onboardingActions.updateSourceKindCheckList,\n    checkAll: onboardingActions.checkSourceKindCheckList,\n})(translate()(SourceKind));\n","import { Form, FormGroup, TextInput } from '@patternfly/react-core';\nimport React from 'react';\nconst ClusterForm = ({ t, isValid, value, onChange }) => {\n    return (React.createElement(Form, null,\n        React.createElement(FormGroup, { isValid: isValid, fieldId: \"cluster_id\", label: t('onboarding.korekuta.cluster_id_label') },\n            React.createElement(TextInput, { isValid: isValid, id: \"cluster_id\", value: value, onChange: onChange }))));\n};\nexport default ClusterForm;\n","import { List, ListItem, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport { Interpolate } from 'react-i18next';\nconst UsageCollectorInstructions = ({ t, }) => {\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Title, { size: \"xl\" }, t('onboarding.korekuta.instructions_title')),\n        React.createElement(\"div\", null, t('onboarding.korekuta.instructions_text')),\n        React.createElement(\"br\", null),\n        t('onboarding.korekuta.checklist_title'),\n        React.createElement(List, null,\n            React.createElement(ListItem, null,\n                React.createElement(React.Fragment, null,\n                    React.createElement(Interpolate, { i18nKey: \"onboarding.korekuta.download_and_install\", korekuta: React.createElement(\"a\", { href: \"https://koku.readthedocs.io/en/latest/providers.html#download-and-configure-ocp-usage-collector-korekuta\", target: \"_blank\" }, \"OCP Usage Collector\") }),\n                    React.createElement(\"br\", null),\n                    t('onboarding.korekuta.checklist_title'),\n                    React.createElement(\"br\", null),\n                    React.createElement(List, null,\n                        React.createElement(ListItem, null, t('onboarding.korekuta.checkbox_1')),\n                        React.createElement(ListItem, null, t('onboarding.korekuta.checkbox_2')),\n                        React.createElement(ListItem, null, t('onboarding.korekuta.checkbox_3')),\n                        React.createElement(ListItem, null, t('onboarding.korekuta.checkbox_4'))),\n                    React.createElement(\"div\", null, t('onboarding.korekuta.for_example')),\n                    React.createElement(\"br\", null),\n                    React.createElement(\"div\", null, \"# ./ocp_usage.sh --setup -e OCP_API=\\\"https://api.openshift-prod.mycompany.com\\\" -e OCP_METERING_NAMESPACE=\\\"metering\\\" -e OCP_TOKEN_PATH=\\\"/path/to/ocp_usage_token\\\"\"))),\n            React.createElement(ListItem, null, t('onboarding.korekuta.post_installation')))));\n};\nexport default UsageCollectorInstructions;\n","import React from 'react';\n/// '../../../../utils/validators'\nimport { ocpClusterIdValidator } from 'utils/validators';\nimport ClusterIdForm from './form';\nimport Instructions from './instructions';\nconst UsageCollector = ({ t, clusterId, updateClusterId, clusterIdValid, }) => {\n    const onChange = (_name, event) => {\n        updateClusterId(event.currentTarget.value, ocpClusterIdValidator);\n    };\n    return (React.createElement(React.Fragment, null,\n        React.createElement(Instructions, { t: t }),\n        React.createElement(\"br\", null),\n        React.createElement(\"br\", null),\n        React.createElement(ClusterIdForm, { t: t, onChange: onChange, isValid: clusterIdValid, value: clusterId })));\n};\nexport default UsageCollector;\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions, onboardingSelectors } from 'store/onboarding';\nimport UsageCollector from './usageCollector';\nexport default connect(createMapStateToProps(state => ({\n    checked: onboardingSelectors.selectOnboardingKorekutaChecked(state),\n    clusterId: onboardingSelectors.selectOnboardingClusterID(state),\n    clusterIdValid: onboardingSelectors.selectOnboardingValidation(state)\n        .clusterIdValid,\n})), {\n    updateCheck: onboardingActions.updateKorekutaCheckList,\n    checkAll: onboardingActions.checkKorekutaCheckList,\n    updateClusterId: onboardingActions.updateClusterID,\n})(translate()(UsageCollector));\n","import { Button, Modal } from '@patternfly/react-core';\nimport React from 'react';\nimport Merlin from 'react-merlin';\nimport Configure from '../configure';\nimport Final from '../final';\nimport ObtainLogin from '../obtainLogin';\nimport SourceKind from '../sourceKind';\nimport UsageCollector from '../usageCollector';\nconst steps = [\n    React.createElement(SourceKind, { key: \"source_kind\" }),\n    React.createElement(ObtainLogin, { key: \"obtain_login\" }),\n    React.createElement(UsageCollector, { key: \"usage_collector\" }),\n    React.createElement(Configure, { key: \"configure\" }),\n    React.createElement(Final, { key: \"final\" }),\n];\nexport const WizardBase = ({ t, closeModal, cancelOnboarding, isModalOpen, isInvalid, dirtyMap, sourceKindChecked, }) => {\n    return (React.createElement(Merlin, null, ({ index, setIndex }) => {\n        const isDirty = [\n            dirtyMap.name &&\n                dirtyMap.type &&\n                Object.keys(sourceKindChecked).every(k => sourceKindChecked[k]),\n            true,\n            dirtyMap.clusterId,\n            true,\n            true,\n        ];\n        const actions = [\n            index < steps.length - 1 && (React.createElement(Button, { key: \"wizard_cancel\", variant: \"secondary\", id: \"wizard_cancel_button\", onClick: () => {\n                    setIndex(0);\n                    cancelOnboarding();\n                } }, \"Cancel\")),\n            index > 0 && index < steps.length - 1 && (React.createElement(Button, { key: \"wizard_back\", variant: \"secondary\", id: \"wizard_cancel_button\", onClick: () => setIndex(index - 1) }, \"Back\")),\n            index < steps.length - 1 && (React.createElement(Button, { isDisabled: !isDirty[index] || isInvalid, key: \"wizard_continue\", variant: \"primary\", id: \"wizard_continue_button\", onClick: () => {\n                    setIndex(index + 1);\n                } }, 'Continue')),\n            index + 1 === steps.length && (React.createElement(Button, { key: \"wizard_close\", variant: \"primary\", id: \"wizard_close_button\", onClick: () => {\n                    setIndex(0);\n                    cancelOnboarding();\n                } }, \"Close\")),\n        ];\n        return (React.createElement(Modal, { style: {\n                height: '700px',\n                width: '800px',\n            }, isLarge: true, title: t('onboarding.wizard.title'), isOpen: isModalOpen, actions: actions, onClose: closeModal }, steps[index]));\n    }));\n};\n","import { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions, onboardingSelectors } from 'store/onboarding';\nimport { WizardBase } from './wizard';\nexport default connect(createMapStateToProps(state => ({\n    isModalOpen: onboardingSelectors.selectOnboardingModal(state),\n    isInvalid: onboardingSelectors.selectOnboardingIsInvalid(state),\n    dirtyMap: onboardingSelectors.selectOnboardingDirty(state),\n    sourceKindChecked: onboardingSelectors.selectOnboardingSourceKindChecked(state),\n})), {\n    closeModal: onboardingActions.closeModal,\n    cancelOnboarding: onboardingActions.cancelOnboarding,\n})(translate()(WizardBase));\n"],"sourceRoot":""}