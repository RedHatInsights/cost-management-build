{"version":3,"sources":["webpack://koku-ui/./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeader.js","webpack://koku-ui/./node_modules/@redhat-cloud-services/frontend-components/esm/PageHeader/PageHeaderTitle.js","webpack://koku-ui/./src/pages/costModels/costModel/updateDistributionDialog.tsx","webpack://koku-ui/./src/pages/costModels/costModel/distribution.tsx","webpack://koku-ui/./src/pages/costModels/costModel/updateMarkupDialog.tsx","webpack://koku-ui/./src/pages/costModels/costModel/markup.tsx","webpack://koku-ui/./src/pages/costModels/costModel/addRateModal.tsx","webpack://koku-ui/./src/pages/costModels/costModel/dialog.tsx","webpack://koku-ui/./src/pages/costModels/costModel/updateRateModel.tsx","webpack://koku-ui/./src/pages/costModels/costModel/priceListTable.tsx","webpack://koku-ui/./src/pages/costModels/costModel/assignSourcesModalToolbar.tsx","webpack://koku-ui/./src/pages/costModels/costModel/addSourceStep.tsx","webpack://koku-ui/./src/pages/costModels/costModel/addSourceWizard.tsx","webpack://koku-ui/./src/pages/costModels/costModel/sourcesTable.tsx","webpack://koku-ui/./src/pages/costModels/costModel/sourcesToolbar.tsx","webpack://koku-ui/./src/pages/costModels/costModel/table.styles.ts","webpack://koku-ui/./src/pages/costModels/costModel/table.tsx","webpack://koku-ui/./src/pages/costModels/costModel/sourceTable.tsx","webpack://koku-ui/./src/pages/costModels/costModel/costModelInfo.styles.ts","webpack://koku-ui/./src/pages/costModels/costModel/costModelsDetails.styles.ts","webpack://koku-ui/./src/pages/costModels/costModel/updateCostModel.tsx","webpack://koku-ui/./src/pages/costModels/costModel/header.tsx","webpack://koku-ui/./src/pages/costModels/costModel/index.tsx","webpack://koku-ui/./src/pages/state/loading/loading.tsx","webpack://koku-ui/./src/pages/state/loading/index.ts","webpack://koku-ui/./src/pages/state/notAvailable/notAvailable.tsx","webpack://koku-ui/./src/pages/state/notAvailable/index.ts"],"names":["PageHeader","_ref","className","children","props","pageHeaderClasses","theme","arguments","length","undefined","themeClasses","concat","propTypes","PageHeaderTitle","title","pageHeaderTitleClasses","headingLevel","size","UpdateDistributionModelBase","constructor","super","this","handleDistributionChange","_","event","value","currentTarget","setState","distribution","state","current","render","error","intl","isLoading","onClose","updateCostModel","Modal","formatMessage","messages","isOpen","name","variant","ModalVariant","actions","Button","key","onClick","newState","Object","assign","source_uuids","sources","map","provider","uuid","source_type","isDisabled","Stack","hasGutter","StackItem","Alert","TextContent","Text","style","Form","FormGroup","isInline","fieldId","isRequired","Radio","isChecked","label","id","onChange","injectIntl","connect","stateProps","dispatchProps","ownProps","updateDistribution","isUpdateDialogOpen","costModelDialog","isWritePermission","rbac","setCostModelDialog","dropdownIsOpen","setDropdownIsOpen","distributionLabel","Card","CardHeader","CardHeaderMain","Title","TitleSizes","CardActions","Dropdown","toggle","KebabToggle","onToggle","onSelect","position","DropdownPosition","isPlain","dropdownItems","DropdownItem","component","CardBody","isFilled","UpdateMarkupModelBase","handleSignChange","isDiscount","handleMarkupDiscountChange","markup","format","handleOnKeyDown","keyCode","preventDefault","markupValidator","isNaN","Number","initialMarkup","isNegative","toString","substring","helpText","validated","unit","Flex","direction","default","alignSelf","FlexItem","helperTextInvalid","InputGroup","InputGroupText","TextInput","type","onKeyDown","List","ListItem","updateMarkup","markupValue","minimumFractionDigits","maximumFractionDigits","costModels","costModel","addRate","updateError","isProcessing","metricsHash","metrics","dispatch","request","rateFormData","canSubmit","errors","rateKind","reset","otherTiers","rates","ButtonVariant","costModelReq","onProceed","body","actionText","isSmall","CancelButtonSecondary","ProceedButton","CloseButtonPrimary","header","color","updateRate","index","rate","gotDiffs","tag_rates","filter","orate","metric","cost_type","tag_key","PriceListTable","deleteRate","pagination","perPage","page","fetchStatus","fetchError","isDialogOpen","getMetricLabel","m","replace","toLowerCase","getMeasurementLabel","count","metricOpts","keys","measurementOpts","reduce","acc","curr","measurs","i","includes","showAssignees","assignees","cm","label_metric","label_measurement","label_measurement_unit","setDialogOpen","slice","p","initialFilters","primary","measurements","search","setSearch","onRemove","onClearAll","from","to","res","filtered","setPrimary","options","selected","secondaries","placeholderText","selections","setSelections","selection","filters","button","onClear","Pagination","isCompact","itemCount","onSetPage","_evt","onPerPageSelect","Boolean","Unavailable","Bullseye","EmptyState","EmptyStateIcon","icon","EmptyStateBody","tiers","pointerEvents","tooltip","_rowIndex","rowData","data","rowIndex","Toolbar","ToolbarContent","ToolbarItem","ToolbarItemVariant","costTypes","FilterInput","placeholder","onSearch","onKeyPress","evt","borderLeft","AssignSourcesToolbar","filterInputProps","paginationProps","clearAllFilters","ToolbarFilter","deleteChip","chips","query","categoryName","AddSourcesStep","isLoadingSources","fetchingSourcesError","providers","providerData","isSelected","checked","provCostModels","cost_models","join","warningIcon","find","text","cells","disableSelection","fetch","category","chip","newQuery","split","updateFilter","currentFilterType","currentFilterValue","currentFilter","curQuery","newPerPage","newPage","Table","rows","rowId","meta","cur","disabled","TableHeader","TableBody","subTitle","flexDirection","sourceTypeMap","AddSourceWizardBase","hasSelections","result","item","componentDidMount","componentDidUpdate","prevProps","initChecked","some","isUpdateInProgress","onSave","updateApiError","Grid","GridItem","span","TextVariants","canWrite","showDeleteDialog","source","gridBreakPoint","TableGridBreakpoint","SourcesToolbar","actionButtonProps","categoryNames","styles","emptyState","display","justifyContent","sourceTypeTitle","marginLeft","marginTop","marginBottom","TableBase","onAdd","filteredRows","every","fName","_category","onDelete","SourceTableBase","dialogSource","addSource","deleteSource","onDeleteText","headerDescription","width","wordWrap","content","paddingTop","global_spacer_lg","height","costCalculation","marginRight","costmodelsContainer","backgroundColor","global_BackgroundColor_light_100","paddingBottom","global_spacer_md","headerCostModel","padding","global_spacer_sm","paddingLeft","paddingRight","tableContainer","paginationContainer","toolbarContainer","breadcrumb","UpdateCostModelBase","description","previous","s","e","t","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","propertyIsEnumerable","__rest","TextArea","isDeleteProcessing","deleteError","deleteCostModel","tabRefs","tabIndex","onSelectTab","historyObject","baseName","getBaseName","window","location","pathname","Breadcrumb","BreadcrumbItem","isActive","Split","SplitItem","Tabs","activeKey","Tab","eventKey","TabTitleText","tabContentId","tabContentRef","CostModelInformation","fetchRbac","fetchMetrics","fetchCostModels","match","params","costModelError","costModelStatus","metricsError","metricsStatus","rbacError","rbacStatus","Main","history","TabContent","ref","hidden","lg","store","maxRate","status","withRouter"],"mappings":"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","file":"95bf8e5644fdc853e82c.bundle.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport React from 'react';\nimport propTypes from 'prop-types';\nimport classNames from 'classnames';\nimport ThemeContext from '../Dark/configContext';\nimport \"../../PageHeader/./page-header.css\";\n/**\n * This is a page header that mimics the patternfly layout for a header section\n */\n\nvar PageHeader = function PageHeader(_ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      props = _objectWithoutProperties(_ref, [\"className\", \"children\"]);\n\n  var pageHeaderClasses = classNames(className, 'pf-l-page-header', 'pf-c-page-header', 'pf-l-page__main-section', 'pf-c-page__main-section');\n  return /*#__PURE__*/React.createElement(ThemeContext.Consumer, null, function () {\n    var theme = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'light';\n    var themeClasses = classNames(_defineProperty({}, \"pf-m-\".concat(theme, \"-200\"), theme === 'dark'), _defineProperty({}, \"pf-m-light\", theme === 'light'));\n    return /*#__PURE__*/React.createElement(\"section\", _extends({}, props, {\n      className: \"\".concat(pageHeaderClasses, \" \").concat(themeClasses),\n      \"widget-type\": \"InsightsPageHeader\"\n    }), children);\n  });\n};\n\nexport default PageHeader;\nPageHeader.propTypes = {\n  children: propTypes.any.isRequired,\n  className: propTypes.string\n};","import React from 'react';\nimport propTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { Title } from \"@patternfly/react-core/dist/esm/components/Title/Title.js\";\n/**\n * This is the title section of the pageHeader\n */\n\nvar PageHeaderTitle = function PageHeaderTitle(_ref) {\n  var className = _ref.className,\n      title = _ref.title;\n  var pageHeaderTitleClasses = classNames(className);\n  return /*#__PURE__*/React.createElement(Title, {\n    headingLevel: \"h1\",\n    size: \"2xl\",\n    className: pageHeaderTitleClasses,\n    \"widget-type\": \"InsightsPageHeaderTitle\"\n  }, \" \", title, \" \");\n};\n\nexport default PageHeaderTitle;\nPageHeaderTitle.propTypes = {\n  title: propTypes.node.isRequired,\n  className: propTypes.string\n};","import { Alert, Button, Form, FormGroup, Modal, ModalVariant, Radio, Stack, StackItem, Text, TextContent, } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { styles } from './costCalc.styles';\nclass UpdateDistributionModelBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleDistributionChange = (_, event) => {\n            const { value } = event.currentTarget;\n            this.setState({ distribution: value });\n        };\n        this.state = {\n            distribution: this.props.current.distribution,\n        };\n    }\n    render() {\n        const { error, current, intl, isLoading, onClose, updateCostModel } = this.props;\n        return (React.createElement(Modal, { title: intl.formatMessage(messages.DistributionType), isOpen: true, onClose: () => onClose({ name: 'updateDistribution', isOpen: false }), variant: ModalVariant.small, actions: [\n                React.createElement(Button, { key: \"proceed\", variant: \"primary\", onClick: () => {\n                        const newState = Object.assign(Object.assign({}, current), { source_uuids: current.sources.map(provider => provider.uuid), \n                            // will always be OCP\n                            source_type: 'OCP', distribution: this.state.distribution });\n                        updateCostModel(current.uuid, newState, 'updateDistribution');\n                    } }, intl.formatMessage(messages.Save)),\n                React.createElement(Button, { key: \"cancel\", variant: \"link\", onClick: () => onClose({ name: 'updateDistribution', isOpen: false }), isDisabled: isLoading }, intl.formatMessage(messages.Cancel)),\n            ] },\n            React.createElement(Stack, { hasGutter: true },\n                React.createElement(StackItem, null, error && React.createElement(Alert, { variant: \"danger\", title: `${error}` })),\n                React.createElement(StackItem, null,\n                    React.createElement(TextContent, null,\n                        React.createElement(Text, { style: styles.cardDescription }, intl.formatMessage(messages.DistributionModelDesc)))),\n                React.createElement(StackItem, null,\n                    React.createElement(Form, null,\n                        React.createElement(FormGroup, { isInline: true, fieldId: \"cost-distribution\", isRequired: true },\n                            React.createElement(Radio, { isChecked: this.state.distribution === 'cpu', name: \"distribution\", label: intl.formatMessage(messages.CpuTitle), \"aria-label\": intl.formatMessage(messages.CpuTitle), id: \"cpuDistribution\", value: \"cpu\", onChange: this.handleDistributionChange }),\n                            React.createElement(Radio, { isChecked: this.state.distribution === 'memory', name: \"distribution\", label: intl.formatMessage(messages.MemoryTitle), \"aria-label\": intl.formatMessage(messages.MemoryTitle), id: \"memoryDistribution\", value: \"memory\", onChange: this.handleDistributionChange })))))));\n    }\n}\n// Fixes issue with Typescript:\n// https://github.com/microsoft/TypeScript/issues/25103#issuecomment-412806226\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    return Object.assign(Object.assign(Object.assign({}, stateProps), dispatchProps), ownProps);\n};\nexport default injectIntl(connect(createMapStateToProps(state => {\n    return {\n        isLoading: costModelsSelectors.updateProcessing(state),\n        error: costModelsSelectors.updateError(state),\n    };\n}), {\n    onClose: costModelsActions.setCostModelDialog,\n    updateCostModel: costModelsActions.updateCostModel,\n}, mergeProps)(UpdateDistributionModelBase));\n","import { Card, CardActions, CardBody, CardHeader, CardHeaderMain, Dropdown, DropdownItem, DropdownPosition, KebabToggle, Title, TitleSizes, } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport { ReadOnlyTooltip } from 'pages/costModels/components/readOnlyTooltip';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { rbacSelectors } from 'store/rbac';\nimport { styles } from './costCalc.styles';\nimport UpdateDistributionDialog from './updateDistributionDialog';\nconst DistributionCardBase = ({ intl, isWritePermission, setCostModelDialog, current, isUpdateDialogOpen, }) => {\n    const [dropdownIsOpen, setDropdownIsOpen] = React.useState(false);\n    const distributionLabel = current.distribution === 'cpu' ? intl.formatMessage(messages.CpuTitle) : intl.formatMessage(messages.MemoryTitle);\n    return (React.createElement(React.Fragment, null,\n        isUpdateDialogOpen && React.createElement(UpdateDistributionDialog, { current: current }),\n        React.createElement(Card, { style: styles.card },\n            React.createElement(CardHeader, null,\n                React.createElement(CardHeaderMain, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.md }, intl.formatMessage(messages.DistributionType))),\n                React.createElement(CardActions, null,\n                    React.createElement(Dropdown, { toggle: React.createElement(KebabToggle, { onToggle: setDropdownIsOpen }), isOpen: dropdownIsOpen, onSelect: () => setDropdownIsOpen(false), position: DropdownPosition.right, isPlain: true, dropdownItems: [\n                            React.createElement(ReadOnlyTooltip, { key: \"edit\", isDisabled: !isWritePermission },\n                                React.createElement(DropdownItem, { isDisabled: !isWritePermission, onClick: () => setCostModelDialog({ isOpen: true, name: 'updateDistribution' }), component: \"button\" }, intl.formatMessage(messages.CostModelsDistributionEdit))),\n                        ] }))),\n            React.createElement(CardBody, { style: styles.cardDescription }, intl.formatMessage(messages.CostModelsDistributionDesc)),\n            React.createElement(CardBody, { isFilled: true }),\n            React.createElement(CardBody, { style: styles.cardBody }, distributionLabel),\n            React.createElement(CardBody, { isFilled: true }))));\n};\nexport default injectIntl(connect(createMapStateToProps(state => {\n    const { updateDistribution } = costModelsSelectors.isDialogOpen(state)('distribution');\n    return {\n        isUpdateDialogOpen: updateDistribution,\n        costModelDialog: costModelsSelectors.isDialogOpen(state)('distribution'),\n        isWritePermission: rbacSelectors.isCostModelWritePermission(state),\n    };\n}), {\n    setCostModelDialog: costModelsActions.setCostModelDialog,\n})(DistributionCardBase));\n","import { Alert, Button, Flex, FlexItem, Form, FormGroup, InputGroup, InputGroupText, List, ListItem, Modal, ModalVariant, Radio, Stack, StackItem, Text, TextContent, TextInput, Title, } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { countDecimals, formatRaw } from 'utils/format';\nimport { styles } from './costCalc.styles';\nclass UpdateMarkupModelBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleSignChange = (_, event) => {\n            const { value } = event.currentTarget;\n            this.setState({ isDiscount: value === 'true' });\n        };\n        this.handleMarkupDiscountChange = (_, event) => {\n            const { value } = event.currentTarget;\n            this.setState({ markup: formatRaw(value, 'en') });\n        };\n        this.handleOnKeyDown = event => {\n            // Prevent 'enter', '+', and '-'\n            if (event.keyCode === 13 || event.keyCode === 187 || event.keyCode === 189) {\n                event.preventDefault();\n            }\n        };\n        this.markupValidator = () => {\n            const { markup } = this.state;\n            if (isNaN(Number(markup))) {\n                return messages.MarkupOrDiscountNumber;\n            }\n            // Test number of decimals\n            const decimals = countDecimals(markup);\n            if (decimals > 10) {\n                return messages.MarkupOrDiscountTooLong;\n            }\n            return undefined;\n        };\n        const initialMarkup = Number(this.props.current.markup.value || 0); // Drop trailing zeros from API value\n        const isNegative = initialMarkup < 0;\n        this.state = {\n            isDiscount: isNegative,\n            markup: isNegative ? initialMarkup.toString().substring(1) : initialMarkup.toString(),\n        };\n    }\n    render() {\n        const { error, current, intl, isLoading, onClose, updateCostModel } = this.props;\n        const { isDiscount } = this.state;\n        const helpText = this.markupValidator();\n        const validated = helpText ? 'error' : 'default';\n        const markup = `${isDiscount ? '-' : ''}${this.state.markup}`;\n        return (React.createElement(Modal, { title: intl.formatMessage(messages.EditMarkupOrDiscount), isOpen: true, onClose: () => onClose({ name: 'updateMarkup', isOpen: false }), variant: ModalVariant.medium, actions: [\n                React.createElement(Button, { key: \"proceed\", variant: \"primary\", onClick: () => {\n                        const newState = Object.assign(Object.assign({}, current), { source_uuids: current.sources.map(provider => provider.uuid), source_type: current.source_type === 'OpenShift Container Platform' ? 'OCP' : 'AWS', markup: {\n                                value: markup,\n                                unit: 'percent',\n                            } });\n                        updateCostModel(current.uuid, newState, 'updateMarkup');\n                    }, isDisabled: isLoading || validated === 'error' || Number(markup) === Number(current.markup.value) }, intl.formatMessage(messages.Save)),\n                React.createElement(Button, { key: \"cancel\", variant: \"link\", onClick: () => onClose({ name: 'updateMarkup', isOpen: false }), isDisabled: isLoading }, intl.formatMessage(messages.Cancel)),\n            ] },\n            React.createElement(Stack, { hasGutter: true },\n                React.createElement(StackItem, null, error && React.createElement(Alert, { variant: \"danger\", title: `${error}` })),\n                React.createElement(StackItem, null,\n                    React.createElement(TextContent, null,\n                        React.createElement(Text, { style: styles.cardDescription }, intl.formatMessage(messages.MarkupOrDiscountModalDesc)))),\n                React.createElement(StackItem, null,\n                    React.createElement(TextContent, null,\n                        React.createElement(Title, { headingLevel: \"h2\", size: \"md\" }, intl.formatMessage(messages.MarkupOrDiscount))),\n                    React.createElement(Flex, { style: styles.markupRadioContainer },\n                        React.createElement(Flex, { direction: { default: 'column' }, alignSelf: { default: 'alignSelfCenter' } },\n                            React.createElement(FlexItem, null,\n                                React.createElement(Radio, { isChecked: !isDiscount, name: \"discount\", label: intl.formatMessage(messages.MarkupPlus), \"aria-label\": intl.formatMessage(messages.MarkupPlus), id: \"markup\", value: \"false\" // \"+\"\n                                    , onChange: this.handleSignChange, style: styles.markupRadio }),\n                                React.createElement(Radio, { isChecked: isDiscount, name: \"discount\", label: intl.formatMessage(messages.DiscountMinus), \"aria-label\": intl.formatMessage(messages.DiscountMinus), id: \"discount\", value: \"true\" // '-'\n                                    , onChange: this.handleSignChange }))),\n                        React.createElement(Flex, { direction: { default: 'column' }, alignSelf: { default: 'alignSelfCenter' } },\n                            React.createElement(FlexItem, null,\n                                React.createElement(Form, null,\n                                    React.createElement(FormGroup, { fieldId: \"markup-input-box\", helperTextInvalid: helpText ? intl.formatMessage(helpText) : undefined, style: styles.rateContainer, validated: validated },\n                                        React.createElement(InputGroup, null,\n                                            React.createElement(InputGroupText, { style: styles.sign }, isDiscount\n                                                ? intl.formatMessage(messages.DiscountMinus)\n                                                : intl.formatMessage(messages.MarkupPlus)),\n                                            React.createElement(TextInput, { style: styles.inputField, type: \"text\", \"aria-label\": intl.formatMessage(messages.Rate), id: \"markup-input-box\", value: formatRaw(this.state.markup), onKeyDown: this.handleOnKeyDown, onChange: this.handleMarkupDiscountChange, validated: validated }),\n                                            React.createElement(InputGroupText, { style: styles.percent }, intl.formatMessage(messages.PercentSymbol))))))))),\n                React.createElement(StackItem, null),\n                React.createElement(StackItem, null,\n                    React.createElement(TextContent, null,\n                        React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, intl.formatMessage(messages.ExamplesTitle))),\n                    React.createElement(List, null,\n                        React.createElement(ListItem, null, intl.formatMessage(messages.CostModelsExamplesNoAdjust)),\n                        React.createElement(ListItem, null, intl.formatMessage(messages.CostModelsExamplesDoubleMarkup)),\n                        React.createElement(ListItem, null, intl.formatMessage(messages.CostModelsExamplesReduceZero)),\n                        React.createElement(ListItem, null, intl.formatMessage(messages.CostModelsExamplesReduceSeventyfive)))))));\n    }\n}\n// Fixes issue with Typescript:\n// https://github.com/microsoft/TypeScript/issues/25103#issuecomment-412806226\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    return Object.assign(Object.assign(Object.assign({}, stateProps), dispatchProps), ownProps);\n};\nexport default injectIntl(connect(createMapStateToProps(state => {\n    return {\n        isLoading: costModelsSelectors.updateProcessing(state),\n        error: costModelsSelectors.updateError(state),\n    };\n}), {\n    onClose: costModelsActions.setCostModelDialog,\n    updateCostModel: costModelsActions.updateCostModel,\n}, mergeProps)(UpdateMarkupModelBase));\n","import { Card, CardActions, CardBody, CardHeader, CardHeaderMain, Dropdown, DropdownItem, DropdownPosition, KebabToggle, Title, TitleSizes, } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport { ReadOnlyTooltip } from 'pages/costModels/components/readOnlyTooltip';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { rbacSelectors } from 'store/rbac';\nimport { formatPercentage } from 'utils/format';\nimport { styles } from './costCalc.styles';\nimport UpdateMarkupDialog from './updateMarkupDialog';\nconst MarkupCardBase = ({ intl, isWritePermission, setCostModelDialog, current, isUpdateDialogOpen, }) => {\n    const [dropdownIsOpen, setDropdownIsOpen] = React.useState(false);\n    const markupValue = formatPercentage(current && current.markup && current.markup.value ? Number(current.markup.value) : 0, {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 10,\n    });\n    return (React.createElement(React.Fragment, null,\n        isUpdateDialogOpen && React.createElement(UpdateMarkupDialog, { current: current }),\n        React.createElement(Card, { style: styles.card },\n            React.createElement(CardHeader, null,\n                React.createElement(CardHeaderMain, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.md }, intl.formatMessage(messages.MarkupOrDiscount))),\n                React.createElement(CardActions, null,\n                    React.createElement(Dropdown, { toggle: React.createElement(KebabToggle, { onToggle: setDropdownIsOpen }), isOpen: dropdownIsOpen, onSelect: () => setDropdownIsOpen(false), position: DropdownPosition.right, isPlain: true, dropdownItems: [\n                            React.createElement(ReadOnlyTooltip, { key: \"edit\", isDisabled: !isWritePermission },\n                                React.createElement(DropdownItem, { isDisabled: !isWritePermission, onClick: () => setCostModelDialog({ isOpen: true, name: 'updateMarkup' }), component: \"button\" }, intl.formatMessage(messages.EditMarkup))),\n                        ] }))),\n            React.createElement(CardBody, { style: styles.cardDescription }, intl.formatMessage(messages.MarkupOrDiscountDesc)),\n            React.createElement(CardBody, { isFilled: true }),\n            React.createElement(CardBody, { style: styles.cardBody }, intl.formatMessage(messages.Percent, { value: markupValue })),\n            React.createElement(CardBody, { isFilled: true }))));\n};\nexport default injectIntl(connect(createMapStateToProps(state => {\n    const { updateMarkup } = costModelsSelectors.isDialogOpen(state)('markup');\n    return {\n        isUpdateDialogOpen: updateMarkup,\n        costModelDialog: costModelsSelectors.isDialogOpen(state)('markup'),\n        isWritePermission: rbacSelectors.isCostModelWritePermission(state),\n    };\n}), {\n    setCostModelDialog: costModelsActions.setCostModelDialog,\n})(MarkupCardBase));\n","import { Alert, Button, ButtonVariant, Form, Modal } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport { canSubmit as isReadyForSubmit, mergeToRequest, RateForm, useRateData, } from 'pages/costModels/components/rateForm';\nimport { initialRateFormData } from 'pages/costModels/components/rateForm/utils';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { metricsSelectors } from 'store/metrics';\nexport const AddRateModalBase = ({ costModel, intl, isOpen, isProcessing, metricsHash, onClose, updateCostModel, updateError, }) => {\n    const rateFormData = useRateData(metricsHash);\n    const canSubmit = React.useMemo(() => isReadyForSubmit(rateFormData), [rateFormData.errors, rateFormData.rateKind]);\n    const onProceed = () => {\n        const costModelReq = mergeToRequest(metricsHash, costModel, rateFormData);\n        updateCostModel(costModel.uuid, costModelReq);\n    };\n    React.useEffect(() => {\n        rateFormData.reset(Object.assign(Object.assign({}, initialRateFormData), { otherTiers: costModel.rates }));\n    }, [isOpen]);\n    return (React.createElement(Modal, { title: intl.formatMessage(messages.PriceListAddRate), isOpen: isOpen, onClose: onClose, variant: \"large\", actions: [\n            React.createElement(Button, { key: \"add-rate\", variant: ButtonVariant.primary, isDisabled: !canSubmit || isProcessing, onClick: onProceed }, intl.formatMessage(messages.PriceListAddRate)),\n            React.createElement(Button, { key: \"cancel\", variant: ButtonVariant.link, isDisabled: isProcessing, onClick: onClose }, intl.formatMessage(messages.Cancel)),\n        ] },\n        React.createElement(Form, null,\n            updateError && React.createElement(Alert, { variant: \"danger\", title: `${updateError}` }),\n            React.createElement(RateForm, { metricsHash: metricsHash, rateFormData: rateFormData }))));\n};\nexport default injectIntl(connect(createMapStateToProps(state => {\n    const costModels = costModelsSelectors.costModels(state);\n    let costModel = null;\n    if (costModels.length > 0) {\n        costModel = costModels[0];\n    }\n    return {\n        costModel,\n        isOpen: costModelsSelectors.isDialogOpen(state)('rate').addRate,\n        updateError: costModelsSelectors.updateError(state),\n        isProcessing: costModelsSelectors.updateProcessing(state),\n        metricsHash: metricsSelectors.metrics(state),\n    };\n}), dispatch => {\n    return {\n        onClose: () => {\n            dispatch(costModelsActions.setCostModelDialog({\n                name: 'addRate',\n                isOpen: false,\n            }));\n        },\n        updateCostModel: (uuid, request) => costModelsActions.updateCostModel(uuid, request, 'addRate')(dispatch),\n    };\n})(AddRateModalBase));\n","import { Alert, Button, Modal, Title, TitleSizes } from '@patternfly/react-core';\nimport { ExclamationTriangleIcon } from '@patternfly/react-icons/dist/esm/icons/exclamation-triangle-icon';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nconst DialogBase = ({ intl = defaultIntl, // Default required for testing\nonClose, onProceed, title, body, actionText, isProcessing = false, isOpen = false, isSmall = false, error = '', }) => {\n    const CancelButtonSecondary = (React.createElement(Button, { key: \"cancel\", variant: \"link\", onClick: onClose, isDisabled: isProcessing }, intl.formatMessage(messages.Cancel)));\n    const ProceedButton = (React.createElement(Button, { key: \"proceed\", variant: \"danger\", onClick: onProceed, isDisabled: isProcessing }, actionText));\n    const CloseButtonPrimary = (React.createElement(Button, { key: \"close\", variant: \"primary\", onClick: onClose, isDisabled: isProcessing }, intl.formatMessage(messages.Close)));\n    const actions = actionText !== '' ? [ProceedButton, CancelButtonSecondary] : [CloseButtonPrimary];\n    return (React.createElement(Modal, { \"aria-label\": title, header: React.createElement(Title, { headingLevel: \"h1\", size: TitleSizes['2xl'] },\n            React.createElement(ExclamationTriangleIcon, { color: \"orange\" }),\n            \" \",\n            title), isOpen: isOpen, onClose: onClose, actions: actions, variant: isSmall ? 'small' : 'default' },\n        error && React.createElement(Alert, { variant: \"danger\", title: `${error}` }),\n        body));\n};\nexport default injectIntl(DialogBase);\n","import { Alert, Button, Modal, Stack, StackItem } from '@patternfly/react-core';\nimport { Form } from 'components/forms/form';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport { canSubmit as isReadyForSubmit, genFormDataFromRate, hasDiff, mergeToRequest, RateForm, useRateData, } from 'pages/costModels/components/rateForm';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { metricsSelectors } from 'store/metrics';\nconst UpdateRateModalBase = ({ costModel, index, intl = defaultIntl, // Default required for testing\nisOpen, isProcessing, metricsHash, onClose, updateCostModel, updateError, }) => {\n    const rate = costModel && costModel.rates && costModel.rates[index] ? costModel.rates[index] : null;\n    const rateFormData = useRateData(metricsHash, rate, costModel.rates);\n    const canSubmit = React.useMemo(() => isReadyForSubmit(rateFormData), [rateFormData]);\n    const gotDiffs = React.useMemo(() => hasDiff(rate, rateFormData), [rateFormData]);\n    const onProceed = () => {\n        const costModelReq = mergeToRequest(metricsHash, costModel, rateFormData, index);\n        updateCostModel(costModel.uuid, costModelReq);\n    };\n    React.useEffect(() => {\n        rateFormData.reset(genFormDataFromRate(rate, undefined, rate && rate.tag_rates\n            ? costModel.rates.filter(orate => orate.metric.name !== rate.metric.name ||\n                orate.cost_type !== rate.cost_type ||\n                orate.tag_rates.tag_key !== rate.tag_rates.tag_key)\n            : costModel.rates));\n    }, [isOpen]);\n    return (React.createElement(Modal, { title: intl.formatMessage(messages.PriceListEditRate), isOpen: isOpen, onClose: onClose, variant: \"large\", actions: [\n            React.createElement(Button, { key: \"proceed\", variant: \"primary\", onClick: onProceed, isDisabled: !canSubmit || isProcessing || !gotDiffs }, intl.formatMessage(messages.Save)),\n            React.createElement(Button, { key: \"cancel\", variant: \"link\", onClick: onClose, isDisabled: isProcessing }, intl.formatMessage(messages.Cancel)),\n        ] },\n        React.createElement(Stack, { hasGutter: true },\n            updateError && (React.createElement(StackItem, null,\n                React.createElement(Alert, { variant: \"danger\", title: `${updateError}` }))),\n            React.createElement(StackItem, null,\n                React.createElement(Form, null,\n                    React.createElement(RateForm, { metricsHash: metricsHash, rateFormData: rateFormData }))))));\n};\nexport default injectIntl(connect(createMapStateToProps(state => {\n    const costModels = costModelsSelectors.costModels(state);\n    let costModel = null;\n    if (costModels.length > 0) {\n        costModel = costModels[0];\n    }\n    return {\n        costModel,\n        isOpen: costModelsSelectors.isDialogOpen(state)('rate').updateRate,\n        updateError: costModelsSelectors.updateError(state),\n        isProcessing: costModelsSelectors.updateProcessing(state),\n        metricsHash: metricsSelectors.metrics(state),\n    };\n}), dispatch => {\n    return {\n        onClose: () => {\n            dispatch(costModelsActions.setCostModelDialog({\n                name: 'updateRate',\n                isOpen: false,\n            }));\n        },\n        updateCostModel: (uuid, request) => costModelsActions.updateCostModel(uuid, request, 'updateRate')(dispatch),\n    };\n})(UpdateRateModalBase));\n","import { Bullseye, Button, EmptyState, EmptyStateBody, EmptyStateIcon, List, ListItem, Pagination, Title, TitleSizes, Toolbar, ToolbarContent, ToolbarItem, ToolbarItemVariant, } from '@patternfly/react-core';\nimport { FileInvoiceDollarIcon } from '@patternfly/react-icons/dist/esm/icons/file-invoice-dollar-icon';\nimport { Unavailable } from '@redhat-cloud-services/frontend-components/Unavailable';\nimport { EmptyFilterState } from 'components/state/emptyFilterState/emptyFilterState';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport messages from 'locales/messages';\nimport { WithPriceListSearch } from 'pages/costModels/components/hoc/withPriceListSearch';\nimport { PriceListToolbar } from 'pages/costModels/components/priceListToolbar';\nimport { RateTable } from 'pages/costModels/components/rateTable';\nimport { CheckboxSelector } from 'pages/costModels/components/toolbar/checkboxSelector';\nimport { PrimarySelector } from 'pages/costModels/components/toolbar/primarySelector';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { metricsSelectors } from 'store/metrics';\nimport { rbacSelectors } from 'store/rbac';\nimport AddRateModal from './addRateModal';\nimport Dialog from './dialog';\nimport UpdateRateModal from './updateRateModel';\nclass PriceListTable extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            deleteRate: null,\n            index: -1,\n            pagination: {\n                perPage: 10,\n                page: 1,\n            },\n        };\n    }\n    render() {\n        const { intl, fetchStatus, fetchError, isDialogOpen, isWritePermission, metricsHash } = this.props;\n        const getMetricLabel = m => {\n            // Match message descriptor or default to API string\n            const value = m.replace(/ /g, '_').toLowerCase();\n            const label = intl.formatMessage(messages.MetricValues, { value });\n            return label ? label : m;\n        };\n        const getMeasurementLabel = m => {\n            // Match message descriptor or default to API string\n            const label = intl.formatMessage(messages.MeasurementValues, { value: m.toLowerCase(), count: 1 });\n            return label ? label : m;\n        };\n        const metricOpts = Object.keys(metricsHash).map(m => ({\n            label: getMetricLabel(m),\n            value: m,\n        }));\n        const measurementOpts = metricOpts.reduce((acc, curr) => {\n            const measurs = Object.keys(metricsHash[curr.value])\n                .filter(m => !acc.map(i => i.value).includes(m))\n                .map(m => ({ label: getMeasurementLabel(m), value: m }));\n            return [...acc, ...measurs];\n        }, []);\n        const showAssignees = this.props.assignees && this.props.assignees.length > 0;\n        const cm = this.props.costModel;\n        const metric = this.state.deleteRate\n            ? `${this.state.deleteRate.metric.label_metric}-${this.state.deleteRate.metric.label_measurement} (${this.state.deleteRate.metric.label_measurement_unit})`\n            : '';\n        return (React.createElement(React.Fragment, null,\n            React.createElement(AddRateModal, null),\n            React.createElement(UpdateRateModal, { index: this.state.index }),\n            React.createElement(Dialog, { isSmall: true, isOpen: isDialogOpen.deleteRate, title: intl.formatMessage(messages.PriceListDeleteRate), onClose: () => {\n                    this.props.setDialogOpen({ name: 'deleteRate', isOpen: false });\n                    this.setState({ deleteRate: null });\n                }, isProcessing: this.props.isLoading, onProceed: () => {\n                    const { index } = this.state;\n                    const { current } = this.props;\n                    const newState = Object.assign(Object.assign({}, current), { source_uuids: current.sources.map(provider => provider.uuid), source_type: 'OCP', rates: [...current.rates.slice(0, index), ...current.rates.slice(index + 1)] });\n                    this.props.updateCostModel(current.uuid, newState, 'deleteRate');\n                }, body: React.createElement(React.Fragment, null,\n                    intl.formatMessage(messages.PriceListDeleteRateDesc, {\n                        metric: React.createElement(\"b\", null, metric),\n                        costModel: React.createElement(\"b\", null, cm),\n                        count: showAssignees ? 2 : 1,\n                    }),\n                    showAssignees && (React.createElement(List, null, this.props.assignees.map(p => (React.createElement(ListItem, { key: p }, p)))))), actionText: intl.formatMessage(messages.PriceListDeleteRate) }),\n            React.createElement(WithPriceListSearch, { initialFilters: { primary: 'metrics', metrics: [], measurements: [] } }, ({ search, setSearch, onRemove, onSelect, onClearAll }) => {\n                const from = (this.state.pagination.page - 1) * this.state.pagination.perPage;\n                const to = this.state.pagination.page * this.state.pagination.perPage;\n                const res = this.props.current.rates\n                    .filter(rate => search.metrics.length === 0 || search.metrics.includes(rate.metric.label_metric))\n                    .filter(rate => search.measurements.length === 0 || search.measurements.includes(rate.metric.label_measurement));\n                const filtered = res.slice(from, to);\n                return (React.createElement(React.Fragment, null,\n                    React.createElement(PriceListToolbar, { primary: React.createElement(PrimarySelector, { isDisabled: this.props.current.rates.length === 0, primary: search.primary, setPrimary: (primary) => setSearch({ primary }), options: [\n                                {\n                                    label: intl.formatMessage(messages.Metric),\n                                    value: 'metrics',\n                                },\n                                {\n                                    label: intl.formatMessage(messages.Measurement),\n                                    value: 'measurements',\n                                },\n                            ] }), selected: search.primary, secondaries: [\n                            {\n                                component: (React.createElement(CheckboxSelector, { isDisabled: this.props.current.rates.length === 0, placeholderText: intl.formatMessage(messages.MeasurementPlaceholder), selections: search.measurements, setSelections: (selection) => onSelect('measurements', selection), options: measurementOpts })),\n                                name: 'measurements',\n                                onRemove,\n                                filters: search.measurements,\n                            },\n                            {\n                                component: (React.createElement(CheckboxSelector, { isDisabled: this.props.current.rates.length === 0, placeholderText: intl.formatMessage(messages.MetricPlaceholder), selections: search.metrics, setSelections: (selection) => onSelect('metrics', selection), options: metricOpts })),\n                                name: 'metrics',\n                                onRemove,\n                                filters: search.metrics,\n                            },\n                        ], button: React.createElement(Button, { isDisabled: !isWritePermission, onClick: () => this.props.setDialogOpen({\n                                name: 'addRate',\n                                isOpen: true,\n                            }) }, intl.formatMessage(messages.PriceListAddRate)), onClear: onClearAll, pagination: React.createElement(Pagination, { isCompact: true, itemCount: res.length, perPage: this.state.pagination.perPage, page: this.state.pagination.page, onSetPage: (_evt, page) => this.setState({\n                                pagination: Object.assign(Object.assign({}, this.state.pagination), { page }),\n                            }), onPerPageSelect: (_evt, perPage) => this.setState({ pagination: { page: 1, perPage } }) }) }),\n                    fetchStatus !== 2 /* complete */ && React.createElement(LoadingState, null),\n                    fetchStatus === 2 /* complete */ && Boolean(fetchError) && React.createElement(Unavailable, null),\n                    fetchStatus === 2 /* complete */ &&\n                        filtered.length === 0 &&\n                        (search.metrics.length !== 0 || search.measurements.length !== 0) && React.createElement(EmptyFilterState, null),\n                    fetchStatus === 2 /* complete */ &&\n                        filtered.length === 0 &&\n                        search.measurements.length === 0 &&\n                        search.metrics.length === 0 && (React.createElement(Bullseye, null,\n                        React.createElement(EmptyState, null,\n                            React.createElement(EmptyStateIcon, { icon: FileInvoiceDollarIcon }),\n                            React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, intl.formatMessage(messages.PriceListEmptyRate)),\n                            React.createElement(EmptyStateBody, null, intl.formatMessage(messages.PriceListEmptyRateDesc))))),\n                    fetchStatus === 2 /* complete */ && filtered.length > 0 && (React.createElement(React.Fragment, null,\n                        React.createElement(RateTable, { tiers: filtered, actions: [\n                                {\n                                    title: intl.formatMessage(messages.PriceListEditRate),\n                                    isDisabled: !isWritePermission,\n                                    // HACK: to display tooltip on disable\n                                    style: !isWritePermission ? { pointerEvents: 'auto' } : undefined,\n                                    tooltip: !isWritePermission ? (React.createElement(\"div\", null, intl.formatMessage(messages.CostModelsReadOnly))) : undefined,\n                                    onClick: (_evt, _rowIndex, rowData) => {\n                                        this.setState({\n                                            deleteRate: null,\n                                            index: rowData.data.index + from,\n                                        });\n                                        this.props.setDialogOpen({\n                                            name: 'updateRate',\n                                            isOpen: true,\n                                        });\n                                    },\n                                },\n                                {\n                                    title: intl.formatMessage(messages.Delete),\n                                    isDisabled: !isWritePermission,\n                                    // HACK: to display tooltip on disable\n                                    style: !isWritePermission ? { pointerEvents: 'auto' } : {},\n                                    tooltip: !isWritePermission ? (React.createElement(\"div\", null, intl.formatMessage(messages.CostModelsReadOnly))) : undefined,\n                                    onClick: (_evt, _rowIndex, rowData) => {\n                                        const rowIndex = rowData.data.index;\n                                        this.setState({\n                                            deleteRate: filtered[rowIndex],\n                                            index: rowIndex + from,\n                                        });\n                                        this.props.setDialogOpen({\n                                            name: 'deleteRate',\n                                            isOpen: true,\n                                        });\n                                    },\n                                },\n                            ] }),\n                        React.createElement(Toolbar, { id: \"price-list-toolbar-bottom\" },\n                            React.createElement(ToolbarContent, null,\n                                React.createElement(ToolbarItem, { variant: ToolbarItemVariant.pagination },\n                                    React.createElement(Pagination, { itemCount: res.length, perPage: this.state.pagination.perPage, page: this.state.pagination.page, onSetPage: (_evt, page) => this.setState({\n                                            pagination: Object.assign(Object.assign({}, this.state.pagination), { page }),\n                                        }), onPerPageSelect: (_evt, perPage) => this.setState({\n                                            pagination: { page: 1, perPage },\n                                        }), variant: \"bottom\" }))))))));\n            })));\n    }\n}\nexport default injectIntl(connect(createMapStateToProps(state => ({\n    isLoading: costModelsSelectors.updateProcessing(state),\n    error: costModelsSelectors.updateError(state),\n    isDialogOpen: costModelsSelectors.isDialogOpen(state)('rate'),\n    fetchError: costModelsSelectors.error(state),\n    fetchStatus: costModelsSelectors.status(state),\n    metricsHash: metricsSelectors.metrics(state),\n    costTypes: metricsSelectors.costTypes(state),\n    isWritePermission: rbacSelectors.isCostModelWritePermission(state),\n})), {\n    updateCostModel: costModelsActions.updateCostModel,\n    setDialogOpen: costModelsActions.setCostModelDialog,\n})(PriceListTable));\n","import { InputGroup, InputGroupText, Pagination, TextInput, Toolbar, ToolbarContent, ToolbarFilter, ToolbarItem, } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nconst FilterInput = ({ id, placeholder = '', value, onChange, onSearch }) => {\n    return (React.createElement(InputGroup, null,\n        React.createElement(TextInput, { value: value, placeholder: placeholder, id: id, onChange: onChange, onKeyPress: (evt) => {\n                if (evt.key !== 'Enter' || value === '') {\n                    return;\n                }\n                onSearch(evt);\n            } }),\n        React.createElement(InputGroupText, { style: { borderLeft: '0' } },\n            React.createElement(SearchIcon, null))));\n};\nexport const AssignSourcesToolbarBase = ({ filterInputProps, intl, paginationProps, filter, }) => {\n    return (React.createElement(Toolbar, { id: \"assign-sources-toolbar\", clearAllFilters: filter.onClearAll },\n        React.createElement(ToolbarContent, null,\n            React.createElement(ToolbarItem, { variant: \"search-filter\" },\n                React.createElement(ToolbarFilter, { deleteChip: filter.onRemove, chips: filter.query.name, categoryName: \"name\" },\n                    React.createElement(FilterInput, Object.assign({ placeholder: intl.formatMessage(messages.CostModelsFilterPlaceholder) }, filterInputProps)))),\n            React.createElement(ToolbarItem, { variant: \"pagination\" },\n                React.createElement(Pagination, { isCompact: paginationProps.isCompact, itemCount: paginationProps.itemCount, page: paginationProps.page, perPage: paginationProps.perPage, onSetPage: paginationProps.onSetPage, onPerPageSelect: paginationProps.onPerPageSelect })))));\n};\nexport const AssignSourcesToolbar = injectIntl(AssignSourcesToolbarBase);\n","import { Pagination, Toolbar, ToolbarContent, ToolbarItem } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { EmptyFilterState } from 'components/state/emptyFilterState/emptyFilterState';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport messages from 'locales/messages';\nimport { SourcesModalErrorState } from 'pages/costModels/components/errorState';\nimport { addMultiValueQuery, removeMultiValueQuery } from 'pages/costModels/components/filterLogic';\nimport { WarningIcon } from 'pages/costModels/components/warningIcon';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { sourcesActions, sourcesSelectors } from 'store/sourceSettings';\nimport { AssignSourcesToolbar } from './assignSourcesModalToolbar';\nclass AddSourcesStep extends React.Component {\n    render() {\n        const { costModel, intl } = this.props;\n        if (this.props.isLoadingSources) {\n            return React.createElement(LoadingState, null);\n        }\n        if (this.props.fetchingSourcesError) {\n            return React.createElement(SourcesModalErrorState, null);\n        }\n        const onSelect = (_evt, isSelected, rowId) => {\n            if (rowId === -1) {\n                const newState = this.props.providers.reduce((acc, cur) => {\n                    const selected = this.props.checked[cur.uuid] ? this.props.checked[cur.uuid].selected : false;\n                    const disabled = cur.cost_models.length > 0;\n                    return Object.assign(Object.assign({}, acc), { [cur.uuid]: { selected: disabled ? selected : isSelected, meta: cur, disabled } });\n                }, {});\n                this.props.setState(newState);\n                return;\n            }\n            this.props.setState(Object.assign(Object.assign({}, this.props.checked), { [this.props.providers[rowId].uuid]: {\n                    selected: isSelected,\n                    meta: this.props.providers[rowId],\n                } }));\n        };\n        const sources = this.props.providers.map(providerData => {\n            const isSelected = this.props.checked[providerData.uuid] ? this.props.checked[providerData.uuid].selected : false;\n            const provCostModels = providerData.cost_models === undefined\n                ? intl.formatMessage(messages.CostModelsWizardSourceTableDefaultCostModel)\n                : providerData.cost_models.map(cm => cm.name).join(',');\n            const warningIcon = providerData.cost_models.length &&\n                providerData.cost_models.find(cm => cm.name === costModel.name) === undefined ? (React.createElement(WarningIcon, { key: providerData.uuid, text: intl.formatMessage(messages.CostModelsWizardSourceWarning, { costModel: provCostModels }) })) : null;\n            const cellName = (React.createElement(\"div\", { key: providerData.uuid },\n                providerData.name,\n                \" \",\n                warningIcon));\n            return {\n                cells: [cellName, provCostModels || ''],\n                selected: isSelected,\n                disableSelection: providerData.cost_models.length > 0,\n            };\n        });\n        const sourceTypeMap = {\n            'OpenShift Container Platform': 'OCP',\n            'Microsoft Azure': 'AZURE',\n            'Amazon Web Services': 'AWS',\n        };\n        const source_type = sourceTypeMap[costModel.source_type];\n        return (React.createElement(React.Fragment, null,\n            React.createElement(AssignSourcesToolbar, { filter: {\n                    onClearAll: () => this.props.fetch(`source_type=${source_type}&limit=${this.props.pagination.perPage}`),\n                    onRemove: (category, chip) => {\n                        const newQuery = removeMultiValueQuery({\n                            name: this.props.query.name ? this.props.query.name.split(',') : [],\n                        })(category, chip);\n                        this.props.fetch(`source_type=${source_type}${newQuery.name ? `&name=${newQuery.name.join(',')}` : ''}&offset=0&limit=${this.props.pagination.perPage}`);\n                    },\n                    query: {\n                        name: this.props.query.name ? this.props.query.name.split(',') : [],\n                    },\n                }, filterInputProps: {\n                    id: 'assign-sources-modal-toolbar',\n                    onChange: value => this.props.updateFilter({\n                        currentFilterType: 'name',\n                        currentFilterValue: value,\n                    }),\n                    value: this.props.currentFilter.value,\n                    onSearch: () => {\n                        const curQuery = this.props.query.name ? this.props.query.name.split(',') : [];\n                        const newQuery = addMultiValueQuery({ name: curQuery })('name', this.props.currentFilter.value);\n                        this.props.fetch(`source_type=${source_type}&name=${newQuery.name.join(',')}&limit=${this.props.pagination.perPage}&offset=0`);\n                    },\n                }, paginationProps: {\n                    isCompact: true,\n                    itemCount: this.props.pagination.count,\n                    perPage: this.props.pagination.perPage,\n                    page: this.props.pagination.page,\n                    onPerPageSelect: (_evt, newPerPage) => {\n                        this.props.fetch(`source_type=${source_type}&limit=${newPerPage}&offset=0&${this.props.query.name ? `name=${this.props.query.name}` : ''}`);\n                    },\n                    onSetPage: (_evt, newPage) => {\n                        this.props.fetch(`source_type=${source_type}&limit=${this.props.pagination.perPage}&offset=${this.props.pagination.perPage * (newPage - 1)}&${this.props.query.name ? `name=${this.props.query.name}` : ''}`);\n                    },\n                } }),\n            sources.length > 0 && (React.createElement(Table, { \"aria-label\": intl.formatMessage(messages.CostModelsAssignSources, { count: 1 }), cells: [\n                    intl.formatMessage(messages.Names, { count: 1 }),\n                    intl.formatMessage(messages.CostModelsWizardSourceTableCostModel),\n                ], rows: sources, onSelect: onSelect },\n                React.createElement(TableHeader, null),\n                React.createElement(TableBody, null))),\n            sources.length === 0 && (React.createElement(EmptyFilterState, { filter: this.props.filter, subTitle: messages.EmptyFilterSourceStateSubtitle })),\n            React.createElement(Toolbar, { id: \"costmodels_details.sources_pagination_datatoolbar\" },\n                React.createElement(ToolbarContent, { style: { flexDirection: 'row-reverse' } },\n                    React.createElement(ToolbarItem, { variant: \"pagination\" },\n                        React.createElement(Pagination, { itemCount: this.props.pagination.count, isDisabled: this.props.isLoadingSources, perPage: this.props.pagination.perPage, page: this.props.pagination.page, onPerPageSelect: (_evt, newPerPage) => {\n                                this.props.fetch(`limit=${newPerPage}&offset=0&${this.props.query.name ? `name=${this.props.query.name}` : ''}`);\n                            }, onSetPage: (_evt, newPage) => {\n                                this.props.fetch(`limit=${this.props.pagination.perPage}&offset=${this.props.pagination.perPage * (newPage - 1)}&${this.props.query.name ? `name=${this.props.query.name}` : ''}`);\n                            } }))))));\n    }\n}\nexport default injectIntl(connect(createMapStateToProps(state => {\n    return {\n        currentFilter: {\n            name: sourcesSelectors.currentFilterType(state),\n            value: sourcesSelectors.currentFilterValue(state),\n        },\n        filter: sourcesSelectors.filter(state),\n    };\n}), {\n    updateFilter: sourcesActions.updateFilterToolbar,\n})(AddSourcesStep));\n","import { Alert, Button, Grid, GridItem, Modal, Stack, StackItem, Text, TextContent, TextVariants, } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport { parseApiError } from 'pages/costModels/createCostModelWizard/parseError';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsSelectors } from 'store/costModels';\nimport { sourcesActions, sourcesSelectors } from 'store/sourceSettings';\nimport AddSourceStep from './addSourceStep';\nconst sourceTypeMap = {\n    'OpenShift Container Platform': 'OCP',\n    'Microsoft Azure': 'AZURE',\n    'Amazon Web Services': 'AWS',\n};\nclass AddSourceWizardBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = { checked: {} };\n        this.hasSelections = () => {\n            const { checked } = this.state;\n            let result = false;\n            for (const item of Object.keys(checked)) {\n                if (checked[item].selected && !checked[item].disabled) {\n                    result = true;\n                    break;\n                }\n            }\n            return result;\n        };\n    }\n    componentDidMount() {\n        const { costModel: { source_type }, fetch, } = this.props;\n        const sourceType = sourceTypeMap[source_type];\n        fetch(`type=${sourceType}&limit=10&offset=0`);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.isLoadingSources === true && this.props.isLoadingSources === false) {\n            const initChecked = this.props.providers.reduce((acc, curr) => {\n                const selected = this.props.costModel.sources.some(p => p.uuid === curr.uuid);\n                return Object.assign(Object.assign({}, acc), { [curr.uuid]: {\n                        disabled: selected,\n                        selected,\n                        meta: curr,\n                    } });\n            }, {});\n            this.setState({ checked: initChecked });\n        }\n    }\n    render() {\n        const { intl, isUpdateInProgress, onClose, isOpen, onSave, costModel, updateApiError } = this.props;\n        return (React.createElement(Modal, { isOpen: isOpen, title: intl.formatMessage(messages.CostModelsAssignSources, { count: 2 }), onClose: onClose, variant: \"large\", actions: [\n                React.createElement(Button, { key: \"save\", isDisabled: !this.hasSelections() ||\n                        isUpdateInProgress ||\n                        this.props.isLoadingSources ||\n                        this.props.fetchingSourcesError !== null, onClick: () => {\n                        onSave(Object.keys(this.state.checked).filter(uuid => this.state.checked[uuid].selected));\n                    } }, intl.formatMessage(messages.CostModelsAssignSourcesParen)),\n                React.createElement(Button, { key: \"cancel\", variant: \"link\", isDisabled: isUpdateInProgress, onClick: onClose }, intl.formatMessage(messages.Cancel)),\n            ] },\n            React.createElement(Stack, null,\n                React.createElement(StackItem, null, Boolean(updateApiError) && React.createElement(Alert, { variant: \"danger\", title: `${updateApiError}` })),\n                React.createElement(StackItem, null,\n                    React.createElement(Grid, null,\n                        React.createElement(GridItem, { span: 2 },\n                            React.createElement(TextContent, null,\n                                React.createElement(Text, { component: TextVariants.h6 }, intl.formatMessage(messages.Names, { count: 1 })))),\n                        React.createElement(GridItem, { span: 10 },\n                            React.createElement(TextContent, null,\n                                React.createElement(Text, { component: TextVariants.p }, this.props.costModel.name))),\n                        React.createElement(GridItem, { span: 2 },\n                            React.createElement(TextContent, null,\n                                React.createElement(Text, { component: TextVariants.h6 }, intl.formatMessage(messages.CostModelsSourceType)))),\n                        React.createElement(GridItem, { span: 10 },\n                            React.createElement(TextContent, null,\n                                React.createElement(Text, { component: TextVariants.p }, this.props.costModel.source_type))))),\n                React.createElement(StackItem, null,\n                    React.createElement(AddSourceStep, { fetch: this.props.fetch, fetchingSourcesError: this.props.fetchingSourcesError, isLoadingSources: this.props.isLoadingSources, providers: this.props.providers, pagination: this.props.pagination, query: this.props.query, costModel: costModel, checked: this.state.checked, setState: newState => {\n                            this.setState({ checked: newState });\n                        } })))));\n    }\n}\nexport default injectIntl(connect(createMapStateToProps(state => {\n    return {\n        pagination: sourcesSelectors.pagination(state),\n        query: sourcesSelectors.query(state),\n        providers: sourcesSelectors.sources(state),\n        isLoadingSources: sourcesSelectors.status(state) === 1 /* inProgress */,\n        isUpdateInProgress: costModelsSelectors.updateProcessing(state),\n        updateApiError: costModelsSelectors.updateError(state),\n        fetchingSourcesError: sourcesSelectors.error(state) ? parseApiError(sourcesSelectors.error(state)) : null,\n    };\n}), {\n    fetch: sourcesActions.fetchSources,\n})(AddSourceWizardBase));\n","import { Table, TableBody, TableGridBreakpoint, TableHeader } from '@patternfly/react-table';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsSelectors } from 'store/costModels';\nimport { rbacSelectors } from 'store/rbac';\nconst SourcesTable = ({ canWrite, costModels, intl, showDeleteDialog }) => {\n    const getActions = () => {\n        if (canWrite) {\n            return [\n                {\n                    title: intl.formatMessage(messages.CostModelsSourceDelete),\n                    onClick: (_evt, rowIndex) => showDeleteDialog(rowIndex),\n                },\n            ];\n        }\n        return [\n            {\n                style: { pointerEvents: 'auto' },\n                tooltip: intl.formatMessage(messages.CostModelsReadOnly),\n                isDisabled: true,\n                title: intl.formatMessage(messages.CostModelsSourceDelete),\n            },\n        ];\n    };\n    const actions = getActions();\n    const cells = [intl.formatMessage(messages.Names, { count: 1 })];\n    const rows = costModels.length > 0 ? costModels[0].sources.map(source => [source.name]) : [];\n    return (React.createElement(Table, { actions: actions, \"aria-label\": intl.formatMessage(messages.CostModelsSourceTableAriaLabel), cells: cells, gridBreakPoint: TableGridBreakpoint.grid2xl, rows: rows },\n        React.createElement(TableHeader, null),\n        React.createElement(TableBody, null)));\n};\nexport default injectIntl(connect(createMapStateToProps(state => {\n    return {\n        canWrite: rbacSelectors.isCostModelWritePermission(state),\n        costModels: costModelsSelectors.costModels(state),\n    };\n}))(SourcesTable));\n","import { Button, InputGroup, InputGroupText, Pagination, TextInput, Toolbar, ToolbarContent, ToolbarFilter, ToolbarItem, } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons/dist/esm/icons/search-icon';\nimport { ReadOnlyTooltip } from 'pages/costModels/components/readOnlyTooltip';\nimport React from 'react';\nconst FilterInput = ({ id, placeholder = '', value, onChange, onSearch }) => {\n    return (React.createElement(InputGroup, null,\n        React.createElement(TextInput, { value: value, placeholder: placeholder, id: id, onChange: onChange, onKeyPress: (evt) => {\n                if (evt.key !== 'Enter' || value === '') {\n                    return;\n                }\n                onSearch(evt);\n            } }),\n        React.createElement(InputGroupText, { style: { borderLeft: '0' } },\n            React.createElement(SearchIcon, null))));\n};\nexport const SourcesToolbar = ({ filterInputProps, paginationProps, filter, actionButtonProps, }) => {\n    return (React.createElement(Toolbar, { id: \"assign-sources-toolbar\", clearAllFilters: filter.onClearAll },\n        React.createElement(ToolbarContent, null,\n            React.createElement(ToolbarItem, { variant: \"search-filter\" },\n                React.createElement(ToolbarFilter, { deleteChip: filter.onRemove, chips: filter.query.name, categoryName: filter.categoryNames.name },\n                    React.createElement(FilterInput, Object.assign({}, filterInputProps)))),\n            React.createElement(ToolbarItem, null,\n                React.createElement(ReadOnlyTooltip, { isDisabled: actionButtonProps.isDisabled },\n                    React.createElement(Button, Object.assign({}, actionButtonProps)))),\n            React.createElement(ToolbarItem, { variant: \"pagination\" },\n                React.createElement(Pagination, { isCompact: paginationProps.isCompact, itemCount: paginationProps.itemCount, page: paginationProps.page, perPage: paginationProps.perPage, onSetPage: paginationProps.onSetPage, onPerPageSelect: paginationProps.onPerPageSelect })))));\n};\n","export const styles = {\n    emptyState: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n    },\n    sourceTypeTitle: {\n        marginLeft: 20,\n        marginTop: 8,\n        marginBottom: 8,\n    },\n};\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, Title, TitleSizes } from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons/dist/esm/icons/dollar-sign-icon';\nimport { EmptyFilterState } from 'components/state/emptyFilterState/emptyFilterState';\nimport messages from 'locales/messages';\nimport { addMultiValueQuery, removeMultiValueQuery } from 'pages/costModels/components/filterLogic';\nimport { PaginationToolbarTemplate } from 'pages/costModels/components/paginationToolbarTemplate';\nimport SourcesTable from 'pages/costModels/costModel/sourcesTable';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { rbacSelectors } from 'store/rbac';\nimport { SourcesToolbar } from './sourcesToolbar';\nimport { styles } from './table.styles';\nclass TableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            query: { name: [] },\n            currentFilter: '',\n            filter: '',\n            pagination: { page: 1, perPage: 10 },\n        };\n    }\n    render() {\n        const { pagination: { page, perPage }, } = this.state;\n        const { current, intl, isWritePermission, onAdd, rows } = this.props;\n        const filteredRows = rows\n            .filter(uuid => {\n            if (!this.state.query.name) {\n                return true;\n            }\n            return this.state.query.name.every(fName => uuid.includes(fName));\n        })\n            .map(uuid => [uuid]);\n        const res = filteredRows.slice((page - 1) * perPage, page * perPage);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.md, style: styles.sourceTypeTitle },\n                intl.formatMessage(messages.CostModelsSourceType),\n                \": \",\n                current.source_type),\n            React.createElement(SourcesToolbar, { actionButtonProps: {\n                    isDisabled: !isWritePermission,\n                    onClick: onAdd,\n                    children: intl.formatMessage(messages.CostModelsAssignSources, { count: 1 }),\n                }, filter: {\n                    onClearAll: () => this.setState({\n                        pagination: Object.assign(Object.assign({}, this.state.pagination), { page: 1 }),\n                        query: { name: [] },\n                    }),\n                    onRemove: (_category, chip) => {\n                        this.setState({\n                            pagination: Object.assign(Object.assign({}, this.state.pagination), { page: 1 }),\n                            query: removeMultiValueQuery(this.state.query)('name', chip),\n                        });\n                    },\n                    query: this.state.query,\n                    categoryNames: { name: intl.formatMessage(messages.Names, { count: 1 }) },\n                }, paginationProps: {\n                    isCompact: true,\n                    itemCount: filteredRows.length,\n                    perPage,\n                    page,\n                    onSetPage: (_evt, newPage) => this.setState({\n                        pagination: Object.assign(Object.assign({}, this.state.pagination), { page: newPage }),\n                    }),\n                    onPerPageSelect: (_evt, newPerPage) => this.setState({\n                        pagination: { page: 1, perPage: newPerPage },\n                    }),\n                }, filterInputProps: {\n                    id: 'sources-tab-toolbar',\n                    onChange: (value) => this.setState({\n                        currentFilter: value,\n                    }),\n                    onSearch: () => {\n                        this.setState({\n                            query: addMultiValueQuery(this.state.query)('name', this.state.currentFilter),\n                            currentFilter: '',\n                            filter: this.state.currentFilter,\n                            pagination: Object.assign(Object.assign({}, this.state.pagination), { page: 1 }),\n                        });\n                    },\n                    value: this.state.currentFilter,\n                    placeholder: intl.formatMessage(messages.CostModelsFilterPlaceholder),\n                } }),\n            res.length > 0 && (React.createElement(SourcesTable, { showDeleteDialog: (rowId) => {\n                    this.props.onDelete(res[rowId]);\n                } })),\n            rows.length === 0 && (React.createElement(\"div\", { style: styles.emptyState },\n                React.createElement(EmptyState, null,\n                    React.createElement(EmptyStateIcon, { icon: DollarSignIcon }),\n                    React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, intl.formatMessage(messages.CostModelsSourceEmptyStateDesc)),\n                    React.createElement(EmptyStateBody, null, intl.formatMessage(messages.CostModelsSourceEmptyStateTitle))))),\n            filteredRows.length === 0 && rows.length > 0 && (React.createElement(EmptyFilterState, { filter: this.state.filter, subTitle: messages.EmptyFilterSourceStateSubtitle })),\n            React.createElement(PaginationToolbarTemplate, { id: \"costmodels_details_filter_datatoolbar\", \"aria-label\": intl.formatMessage(messages.CostModelsSourceTablePaginationAriaLabel), variant: \"bottom\", itemCount: filteredRows.length, perPage: perPage, page: page, onSetPage: (_evt, newPage) => this.setState({\n                    pagination: Object.assign(Object.assign({}, this.state.pagination), { page: newPage }),\n                }), onPerPageSelect: (_evt, newPerPage) => this.setState({\n                    pagination: { page: 1, perPage: newPerPage },\n                }) })));\n    }\n}\nexport default injectIntl(connect(createMapStateToProps(state => ({\n    isWritePermission: rbacSelectors.isCostModelWritePermission(state),\n})))(TableBase));\n","import messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport AddSourceWizard from './addSourceWizard';\nimport Dialog from './dialog';\nimport Table from './table';\nclass SourceTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = { dialogSource: null };\n    }\n    render() {\n        const { intl, isDialogOpen, isLoading, setDialogOpen, sources, costModel } = this.props;\n        return (React.createElement(React.Fragment, null,\n            isDialogOpen.addSource && (React.createElement(AddSourceWizard, { costModel: costModel, isOpen: true, onClose: () => setDialogOpen({ name: 'addSource', isOpen: false }), onSave: (source_uuids) => {\n                    this.props.updateCostModel(costModel.uuid, Object.assign(Object.assign({}, costModel), { source_type: costModel.source_type === 'OpenShift Container Platform' ? 'OCP' : 'AWS', source_uuids }), 'addSource');\n                } })),\n            React.createElement(Dialog, { isSmall: true, isOpen: isDialogOpen.deleteSource, title: intl.formatMessage(messages.CostModelsSourceDeleteSource), onClose: () => {\n                    setDialogOpen({ name: 'deleteSource', isOpen: false });\n                    this.setState({ dialogSource: null });\n                }, isProcessing: isLoading, onProceed: () => {\n                    const newState = Object.assign(Object.assign({}, costModel), { source_type: costModel.source_type === 'OpenShift Container Platform' ? 'OCP' : 'AWS', source_uuids: sources\n                            .filter(provider => provider.name !== this.state.dialogSource)\n                            .map(provider => provider.uuid) });\n                    this.props.updateCostModel(costModel.uuid, newState, 'deleteSource');\n                }, body: React.createElement(React.Fragment, null, intl.formatMessage(messages.CostModelsSourceDeleteSourceDesc, {\n                    source: this.state.dialogSource,\n                    costModel: costModel.name,\n                })), actionText: intl.formatMessage(messages.CostModelsSourceDeleteSource) }),\n            React.createElement(Table, { onDeleteText: intl.formatMessage(messages.CostModelsSourceDelete), onDelete: item => {\n                    this.setState({ dialogSource: item[0] });\n                    setDialogOpen({ name: 'deleteSource', isOpen: true });\n                }, onAdd: () => setDialogOpen({ name: 'addSource', isOpen: true }), rows: sources.map(p => p.name), current: costModel })));\n    }\n}\nexport default injectIntl(connect(createMapStateToProps(state => ({\n    isLoading: costModelsSelectors.updateProcessing(state),\n    isDialogOpen: costModelsSelectors.isDialogOpen(state)('sources'),\n})), {\n    setDialogOpen: costModelsActions.setCostModelDialog,\n    updateCostModel: costModelsActions.updateCostModel,\n})(SourceTableBase));\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    headerDescription: {\n        width: '97%',\n        wordWrap: 'break-word',\n    },\n    content: {\n        paddingTop: global_spacer_lg.value,\n        height: '182vh',\n    },\n    costCalculation: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    costmodelsContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    headerCostModel: {\n        padding: global_spacer_lg.var,\n        paddingBottom: 0,\n        backgroundColor: global_BackgroundColor_light_100.value,\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    headerDescription: {\n        width: '97%',\n        wordWrap: 'break-word',\n    },\n    content: {\n        paddingTop: global_spacer_lg.value,\n        height: '182vh',\n    },\n    costmodelsContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n        paddingLeft: global_spacer_lg.value,\n        paddingRight: global_spacer_lg.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    paginationContainer: {\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n        paddingLeft: global_spacer_lg.value,\n        paddingRight: global_spacer_lg.value,\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n        marginBottom: global_spacer_lg.value,\n        backgroundColor: global_BackgroundColor_light_100.value,\n    },\n    toolbarContainer: {\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n        backgroundColor: global_BackgroundColor_light_100.value,\n    },\n    header: {\n        padding: global_spacer_lg.var,\n        backgroundColor: global_BackgroundColor_light_100.var,\n    },\n    headerCostModel: {\n        padding: global_spacer_lg.value,\n        paddingBottom: 0,\n        backgroundColor: global_BackgroundColor_light_100.var,\n    },\n    breadcrumb: {\n        paddingBottom: global_spacer_md.var,\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n    sourceTypeTitle: {\n        paddingBottom: global_spacer_md.var,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Alert, Button, Form, FormGroup, Modal, TextArea, TextInput } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nclass UpdateCostModelBase extends React.Component {\n    constructor(props) {\n        super(props);\n        const current = this.props.costModel[0];\n        this.state = {\n            name: current.name,\n            description: current.description,\n        };\n    }\n    render() {\n        const { costModel, intl, isProcessing, setDialogOpen, updateCostModel, updateError } = this.props;\n        const current = costModel[0];\n        return (React.createElement(Modal, { title: intl.formatMessage(messages.EditCostModel), isOpen: true, onClose: () => setDialogOpen({ name: 'updateCostModel', isOpen: false }), variant: \"small\", actions: [\n                React.createElement(Button, { key: \"proceed\", variant: \"primary\", onClick: () => {\n                        const { uuid, sources } = current, previous = __rest(current, [\"uuid\", \"sources\"]);\n                        updateCostModel(uuid, Object.assign(Object.assign({}, previous), { source_uuids: sources.map(provider => provider.uuid), name: this.state.name, description: this.state.description, source_type: current.source_type === 'OpenShift Container Platform' ? 'OCP' : 'AWS' }), 'updateCostModel');\n                    }, isDisabled: isProcessing || (this.state.name === current.name && this.state.description === current.description) }, intl.formatMessage(messages.Save)),\n                React.createElement(Button, { key: \"cancel\", variant: \"secondary\", onClick: () => setDialogOpen({ name: 'updateCostModel', isOpen: false }), isDisabled: isProcessing }, intl.formatMessage(messages.Cancel)),\n            ] },\n            React.createElement(React.Fragment, null,\n                updateError && React.createElement(Alert, { variant: \"danger\", title: `${updateError}` }),\n                React.createElement(Form, null,\n                    React.createElement(FormGroup, { label: intl.formatMessage(messages.Names, { count: 1 }), isRequired: true, fieldId: \"name\" },\n                        React.createElement(TextInput, { isRequired: true, type: \"text\", id: \"name\", name: \"name\", value: this.state.name, onChange: value => this.setState({ name: value }) })),\n                    React.createElement(FormGroup, { label: intl.formatMessage(messages.Description), fieldId: \"description\" },\n                        React.createElement(TextArea, { type: \"text\", id: \"description\", name: \"description\", value: this.state.description, onChange: value => this.setState({ description: value }) }))))));\n    }\n}\nconst UpdateCostModelModal = injectIntl(connect(createMapStateToProps(state => ({\n    costModel: costModelsSelectors.costModels(state),\n    isProcessing: costModelsSelectors.updateProcessing(state),\n    updateError: costModelsSelectors.updateError(state),\n})), {\n    setDialogOpen: costModelsActions.setCostModelDialog,\n    updateCostModel: costModelsActions.updateCostModel,\n})(UpdateCostModelBase));\nexport default UpdateCostModelModal;\n","import { Breadcrumb, BreadcrumbItem, Dropdown, DropdownItem, KebabToggle, List, ListItem, Split, SplitItem, Tab, Tabs, TabTitleText, Title, TitleSizes, } from '@patternfly/react-core';\nimport messages from 'locales/messages';\nimport { ReadOnlyTooltip } from 'pages/costModels/components/readOnlyTooltip';\nimport { styles } from 'pages/costModels/costModel/costModelsDetails.styles';\nimport Dialog from 'pages/costModels/costModel/dialog';\nimport UpdateCostModelModal from 'pages/costModels/costModel/updateCostModel';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { paths } from 'routes';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { rbacSelectors } from 'store/rbac';\nimport { getBaseName } from 'utils/getBaseName';\nconst Header = ({ intl, tabRefs, tabIndex, onSelectTab, setDialogOpen, isDialogOpen, deleteError, isDeleteProcessing, deleteCostModel, current, isWritePermission, historyObject, }) => {\n    const [dropdownIsOpen, setDropdownIsOpen] = React.useState(false);\n    const baseName = getBaseName(window.location.pathname);\n    return (React.createElement(React.Fragment, null,\n        isDialogOpen.updateCostModel && React.createElement(UpdateCostModelModal, null),\n        React.createElement(Dialog, { isSmall: true, isOpen: isDialogOpen.deleteCostModel, title: intl.formatMessage(messages.CostModelsDelete), onClose: () => setDialogOpen({ name: 'deleteCostModel', isOpen: false }), error: deleteError, isProcessing: isDeleteProcessing, onProceed: () => {\n                deleteCostModel(current.uuid, 'deleteCostModel', historyObject);\n            }, body: React.createElement(React.Fragment, null,\n                current.sources.length === 0 &&\n                    intl.formatMessage(messages.CostModelsDeleteDesc, {\n                        costModel: current.name,\n                    }),\n                current.sources.length > 0 && (React.createElement(React.Fragment, null,\n                    intl.formatMessage(messages.CostModelsDeleteSource),\n                    React.createElement(\"br\", null),\n                    React.createElement(\"br\", null),\n                    intl.formatMessage(messages.CostModelsAvailableSources),\n                    React.createElement(\"br\", null),\n                    React.createElement(List, null, current.sources.map(provider => (React.createElement(ListItem, { key: `${provider.uuid}` }, provider.name))))))), actionText: current.sources.length === 0 ? intl.formatMessage(messages.CostModelsDelete) : '' }),\n        React.createElement(\"header\", { style: styles.headerCostModel },\n            React.createElement(Breadcrumb, { style: styles.breadcrumb },\n                React.createElement(BreadcrumbItem, { to: `${baseName}${paths.costModels}` }, intl.formatMessage(messages.CostModels)),\n                React.createElement(BreadcrumbItem, { isActive: true }, current.name)),\n            React.createElement(Split, null,\n                React.createElement(SplitItem, { style: styles.headerDescription },\n                    React.createElement(Title, { headingLevel: \"h1\", style: styles.title, size: TitleSizes['2xl'] }, current.name),\n                    current.description),\n                React.createElement(SplitItem, null,\n                    React.createElement(Dropdown, { toggle: React.createElement(KebabToggle, { onToggle: setDropdownIsOpen }), isOpen: dropdownIsOpen, onSelect: () => setDropdownIsOpen(false), isPlain: true, position: \"right\", dropdownItems: [\n                            React.createElement(ReadOnlyTooltip, { key: \"edit\", isDisabled: !isWritePermission },\n                                React.createElement(DropdownItem, { isDisabled: !isWritePermission, onClick: () => setDialogOpen({\n                                        isOpen: true,\n                                        name: 'updateCostModel',\n                                    }) }, intl.formatMessage(messages.Edit))),\n                            React.createElement(ReadOnlyTooltip, { key: \"delete\", isDisabled: !isWritePermission },\n                                React.createElement(DropdownItem, { isDisabled: !isWritePermission, onClick: () => setDialogOpen({\n                                        isOpen: true,\n                                        name: 'deleteCostModel',\n                                    }) }, intl.formatMessage(messages.Delete))),\n                        ] }))),\n            current.source_type === 'OpenShift Container Platform' ? (React.createElement(Tabs, { activeKey: tabIndex, onSelect: (_evt, index) => onSelectTab(index) },\n                React.createElement(Tab, { eventKey: 0, title: React.createElement(TabTitleText, null, intl.formatMessage(messages.PriceList)), tabContentId: \"refPriceList\", tabContentRef: tabRefs[0] }),\n                React.createElement(Tab, { eventKey: 1, title: React.createElement(TabTitleText, null, intl.formatMessage(messages.CostCalculations)), tabContentId: \"refMarkup\", tabContentRef: tabRefs[1] }),\n                React.createElement(Tab, { eventKey: 2, title: React.createElement(TabTitleText, null, intl.formatMessage(messages.Sources)), tabContentId: \"refSources\", tabContentRef: tabRefs[2] }))) : (React.createElement(Tabs, { activeKey: tabIndex, onSelect: (_evt, index) => onSelectTab(index) },\n                React.createElement(Tab, { eventKey: 0, title: React.createElement(TabTitleText, null, intl.formatMessage(messages.CostCalculations)), tabContentId: \"refMarkup\", tabContentRef: tabRefs[0] }),\n                React.createElement(Tab, { eventKey: 1, title: React.createElement(TabTitleText, null, intl.formatMessage(messages.Sources)), tabContentId: \"refSources\", tabContentRef: tabRefs[1] }))))));\n};\nexport default injectIntl(connect(createMapStateToProps(state => ({\n    isDialogOpen: costModelsSelectors.isDialogOpen(state)('costmodel'),\n    isDeleteProcessing: costModelsSelectors.deleteProcessing(state),\n    deleteError: costModelsSelectors.deleteError(state),\n    isWritePermission: rbacSelectors.isCostModelWritePermission(state),\n})), {\n    setDialogOpen: costModelsActions.setCostModelDialog,\n    deleteCostModel: costModelsActions.deleteCostModel,\n})(Header));\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, Grid, GridItem, TabContent, Title, TitleSizes, } from '@patternfly/react-core';\nimport { ErrorCircleOIcon } from '@patternfly/react-icons/dist/esm/icons/error-circle-o-icon';\nimport Main from '@redhat-cloud-services/frontend-components/Main';\nimport PageHeader, { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport messages from 'locales/messages';\nimport DistributionCard from 'pages/costModels/costModel/distribution';\nimport MarkupCard from 'pages/costModels/costModel/markup';\nimport PriceListTable from 'pages/costModels/costModel/priceListTable';\nimport SourceTable from 'pages/costModels/costModel/sourceTable';\nimport { parseApiError } from 'pages/costModels/createCostModelWizard/parseError';\nimport Loading from 'pages/state/loading';\nimport NotAvailable from 'pages/state/notAvailable';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { metricsActions, metricsSelectors } from 'store/metrics';\nimport { rbacActions, rbacSelectors } from 'store/rbac';\nimport { styles } from './costModelInfo.styles';\nimport Header from './header';\nclass CostModelInformation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.tabRefs = [React.createRef(), React.createRef(), React.createRef()];\n        this.state = { tabIndex: 0 };\n    }\n    componentDidMount() {\n        this.props.fetchRbac();\n        this.props.fetchMetrics();\n        this.props.fetchCostModels(`uuid=${this.props.match.params.uuid}`);\n    }\n    render() {\n        const { costModels, costModelError, costModelStatus, intl, metricsError, metricsStatus, rbacError, rbacStatus } = this.props;\n        if (metricsStatus !== 2 /* complete */ ||\n            rbacStatus !== 2 /* complete */ ||\n            costModelStatus !== 2 /* complete */) {\n            return React.createElement(Loading, { title: intl.formatMessage(messages.CostModels) });\n        }\n        const fetchError = metricsError || rbacError || costModelError;\n        if (fetchError) {\n            if (costModelError !== null) {\n                const costModelErrMessage = parseApiError(costModelError);\n                if (costModelErrMessage === 'detail: Invalid provider uuid') {\n                    return (React.createElement(React.Fragment, null,\n                        React.createElement(PageHeader, null,\n                            React.createElement(PageHeaderTitle, { title: intl.formatMessage(messages.CostModels) })),\n                        React.createElement(Main, null,\n                            React.createElement(EmptyState, null,\n                                React.createElement(EmptyStateIcon, { icon: ErrorCircleOIcon }),\n                                React.createElement(Title, { headingLevel: \"h2\", size: TitleSizes.lg }, intl.formatMessage(messages.CostModelsUUIDEmptyState)),\n                                React.createElement(EmptyStateBody, null, intl.formatMessage(messages.CostModelsUUIDEmptyStateDesc, {\n                                    uuid: this.props.match.params.uuid,\n                                }))))));\n                }\n            }\n            return React.createElement(NotAvailable, { title: intl.formatMessage(messages.CostModels) });\n        }\n        const current = costModels[0];\n        const sources = current.sources;\n        return (React.createElement(\"div\", null,\n            React.createElement(Header, { historyObject: this.props.history, current: current, tabRefs: this.tabRefs, tabIndex: this.state.tabIndex, onSelectTab: tabIndex => this.setState({ tabIndex }) }),\n            React.createElement(\"div\", { style: styles.content }, current.source_type === 'OpenShift Container Platform' ? (React.createElement(React.Fragment, null,\n                React.createElement(TabContent, { eventKey: 0, id: \"refPriceList\", ref: this.tabRefs[0], hidden: this.state.tabIndex !== 0 },\n                    React.createElement(\"div\", { style: styles.costmodelsContainer },\n                        React.createElement(PriceListTable, { costModel: current.name, assignees: sources.map(p => p.name), current: current }))),\n                React.createElement(TabContent, { eventKey: 1, id: \"refCostCalculations\", ref: this.tabRefs[1], hidden: this.state.tabIndex !== 1 },\n                    React.createElement(\"div\", { style: styles.costCalculation },\n                        React.createElement(Grid, { hasGutter: true },\n                            React.createElement(GridItem, { lg: 6, id: \"refMarkup\" },\n                                React.createElement(MarkupCard, { current: current })),\n                            React.createElement(GridItem, { lg: 6, id: \"refDistribution\" },\n                                React.createElement(DistributionCard, { current: current }))))),\n                React.createElement(TabContent, { eventKey: 3, id: \"refSources\", ref: this.tabRefs[2], hidden: this.state.tabIndex !== 2 },\n                    React.createElement(\"div\", { style: styles.costmodelsContainer },\n                        React.createElement(SourceTable, { costModel: current, sources: sources }))))) : (React.createElement(React.Fragment, null,\n                React.createElement(TabContent, { eventKey: 0, id: \"refMarkup\", ref: this.tabRefs[0], hidden: this.state.tabIndex !== 0 },\n                    React.createElement(\"div\", { style: styles.costCalculation },\n                        React.createElement(MarkupCard, { current: current }))),\n                React.createElement(TabContent, { eventKey: 1, id: \"refSources\", ref: this.tabRefs[1], hidden: this.state.tabIndex !== 1 },\n                    React.createElement(\"div\", { style: styles.costmodelsContainer },\n                        React.createElement(SourceTable, { costModel: current, sources: sources }))))))));\n    }\n}\nexport default injectIntl(connect(createMapStateToProps(store => {\n    return {\n        costModels: costModelsSelectors.costModels(store),\n        costModelError: costModelsSelectors.error(store),\n        costModelStatus: costModelsSelectors.status(store),\n        metricsHash: metricsSelectors.metrics(store),\n        maxRate: metricsSelectors.maxRate(store),\n        costTypes: metricsSelectors.costTypes(store),\n        metricsError: metricsSelectors.metricsState(store).error,\n        metricsStatus: metricsSelectors.status(store),\n        rbacError: rbacSelectors.selectRbacState(store).error,\n        rbacStatus: rbacSelectors.selectRbacState(store).status,\n    };\n}), {\n    fetchMetrics: metricsActions.fetchMetrics,\n    fetchRbac: rbacActions.fetchRbac,\n    fetchCostModels: costModelsActions.fetchCostModels,\n})(CostModelInformation));\n","import Main from '@redhat-cloud-services/frontend-components/Main';\nimport PageHeader, { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nconst Loading = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(LoadingState, null))));\n};\nexport default withRouter(Loading);\n","import Loading from './loading';\nexport default Loading;\n","import Main from '@redhat-cloud-services/frontend-components/Main';\nimport PageHeader, { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Unavailable from '@redhat-cloud-services/frontend-components/Unavailable';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nconst NotAvailable = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(Unavailable, null))));\n};\nexport default withRouter(NotAvailable);\n","import NotAvailable from './notAvailable';\nexport default NotAvailable;\n"],"sourceRoot":""}