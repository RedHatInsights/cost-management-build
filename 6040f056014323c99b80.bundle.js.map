{"version":3,"sources":["webpack:///./src/utils/formatValue.ts","webpack:///./src/testIds.ts","webpack:///./src/components/charts/commonChart/chartUtils.ts","webpack:///./src/utils/sort.ts","webpack:///./src/utils/getComputedOcpOnAwsReportItems.ts","webpack:///./src/utils/getComputedAwsReportItems.ts","webpack:///./src/utils/getComputedOcpReportItems.ts","webpack:///./src/components/charts/chartLabelTooltip/chartLabelTooltip.tsx","webpack:///./src/components/charts/trendChart/trendChart.styles.ts","webpack:///./src/components/charts/trendChart/trendChart.tsx","webpack:///./src/components/state/loadingState/loadingState.styles.ts","webpack:///./src/components/state/loadingState/loadingState.tsx","webpack:///./src/components/state/noProvidersState/noProvidersState.styles.ts","webpack:///./src/components/state/noProvidersState/noProvidersState.tsx","webpack:///./src/components/state/errorState/errorState.styles.ts","webpack:///./src/components/state/errorState/errorState.tsx","webpack:///./src/components/charts/usageChart/usageChart.styles.ts","webpack:///./src/components/charts/usageChart/usageChart.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummary.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummary.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryAlt.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryAlt.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryDetails.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryDetails.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryItem.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryItem.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryItems.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryTrend.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryTrend.tsx","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummary.styles.ts","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummary.tsx","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryAlt.styles.ts","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryAlt.tsx","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryDetails.styles.ts","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryDetails.tsx","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryItem.styles.ts","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryItem.tsx","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryItems.tsx","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryTrend.styles.ts","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryTrend.tsx","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryUsage.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummary.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummary.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryAlt.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryAlt.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryDetails.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryDetails.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryItem.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryItem.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryItems.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryTrend.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryTrend.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryUsage.tsx","webpack:///./node_modules/date-fns/get_month/index.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/@patternfly/patternfly/components/Tabs/tabs.css.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Tabs/TabContent.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Tabs/Tabs.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Tabs/Tab.js","webpack:///./node_modules/react-router-dom/es/Link.js","webpack:///./src/components/link/link.tsx","webpack:///./src/pages/awsDashboard/awsDashboardWidget.styles.ts","webpack:///./src/pages/awsDashboard/awsDashboardWidget.tsx","webpack:///./src/pages/awsDashboard/awsDashboard.tsx","webpack:///./src/pages/ocpDashboard/ocpDashboardWidget.styles.ts","webpack:///./src/pages/ocpDashboard/ocpDashboardWidget.tsx","webpack:///./src/pages/ocpDashboard/ocpDashboard.tsx","webpack:///./src/pages/ocpOnAwsDashboard/ocpOnAwsDashboardWidget.styles.ts","webpack:///./src/pages/ocpOnAwsDashboard/ocpOnAwsDashboardWidget.tsx","webpack:///./src/pages/ocpOnAwsDashboard/ocpOnAwsDashboard.tsx","webpack:///./src/pages/overview/overview.tsx","webpack:///./src/pages/overview/index.ts"],"names":["unitLookupKey","unit","lookup","toLowerCase","includes","split","formatValue","value","options","fValue","formatCurrency","formatUsageGb","formatUsageHrs","unknownTypeFormatter","_unit","fractionDigits","toFixed","toLocaleString","style","currency","minimumFractionDigits","maximumFractionDigits","getTestProps","id","data-testid","testIds","details","historical_data_btn","tag_lnk","show_more_btn","view_all_btn","export","cancel_btn","submit_btn","login","alert","form","username_input","password_input","submit","masthead","username","sidebarToggle","logout","onboarding","btn_cancel","btn_back","btn_continue","btn_close","type_selector","type_opt_aws","type_opt_ocp","type_opt_non","name_input","check_box_1","check_box_2","check_box_3","check_box_4","check_box_5","check_box_all","s3_input","clusterid_input","arn_input","providers","add_btn","bucket_input","empty_state_add_btn","resource_name_input","cluster_id_input","type_input","sidebar","nav","link","backdrop","transformAwsReport","report","type","key","reportItem","items","idKey","sortKey","sortDirection","computedItems","Object","utils_getComputedAwsReportItems__WEBPACK_IMPORTED_MODULE_7__","map","i","createDatum","reduce","acc","d","prevValue","length","y","transformOcpReport","utils_getComputedOcpReportItems__WEBPACK_IMPORTED_MODULE_9__","transformOcpOnAwsReport","utils_getComputedOcpOnAwsReportItems__WEBPACK_IMPORTED_MODULE_8__","computedItem","n","x","date_fns_get_date__WEBPACK_IMPORTED_MODULE_2___default","label","Number","parseFloat","isInt","name","units","getDateRange","datums","firstOfMonth","lastOfMonth","start","end","today","Date","date_fns_start_of_month__WEBPACK_IMPORTED_MODULE_4___default","getDatumDateRange","setDate","lastDate","date_fns_end_of_month__WEBPACK_IMPORTED_MODULE_0___default","getDate","getDateRangeString","i18next__WEBPACK_IMPORTED_MODULE_5__","t","count","endDate","date_fns_format__WEBPACK_IMPORTED_MODULE_1___default","month","startDate","year","date_fns_get_year__WEBPACK_IMPORTED_MODULE_3___default","getMonthRangeString","getMaxValue","max","forEach","datum","getTooltipContent","utils_formatValue__WEBPACK_IMPORTED_MODULE_6__","getTooltipLabel","formatOptions","toString","getValueForItem","item","sort","array","direction","a","b","aVal","bVal","__webpack_require__","__webpack_exports__","getComputedOcpOnAwsReportItems","labelKey","_sort__WEBPACK_IMPORTED_MODULE_0__","getUnsortedComputedOcpOnAwsReportItems","itemMap","Map","visitDataPoint","dataPoint","values","capacity","cluster","cluster_alias","cost","derivedCost","derived_cost","infrastructureCost","infrastructure_cost","idSuffix","account_alias","limit","request","usage","get","set","assign","deltaPercent","delta_percent","deltaValue","delta_value","Array","data","from","getIdKeyForGroupBy","groupBy","project","node","getComputedAwsReportItems","getUnsortedComputedAwsReportItems","account","instance_type","region","service","getComputedOcpReportItems","getUnsortedComputedOcpReportItems","__rest","s","e","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","ChartLabelTooltip","_a","content","props","react_default","createElement","Tooltip","enableFlip","ChartLabel","chartStyles","colorScale","esm","legend","labels","fontFamily","fontSize","minWidth","previousMonth","fill","stroke","currentMonth","yAxis","axisLabel","padding","grid","ticks","tickLabels","xAxis","styles","StyleSheet","create","chartContainer",":not(foo) svg","overflow","display","marginTop","trendChart_TrendChart","Component","[object Object]","super","arguments","this","containerRef","createRef","state","width","initDatum","currentData","previousData","title","legendData","chartUtils","push","symbol","tooltip","charts","show","onClick","handleCostLegendClick","setState","newDatum","index","handleResize","current","clientWidth","getChart","ChartArea","getLegend","ChartLegend","containerComponent","ChartContainer","responsive","events","target","eventHandlers","mutation","gutter","height","labelComponent","chartLabelTooltip","getLegendTooltip","orientation","theme","ChartTheme","light","blue","formatDatumValue","formatDatumOptions","setTimeout","window","addEventListener","prevProps","removeEventListener","domain","maxCurrent","maxPrevious","maxValue","Math","ceil","previousDate","get_date_default","currentDate","result","trim","container","ChartVoronoiContainer","voronoiDimension","legendWidth","getDomain","getEndDate","midDate","floor","className","ref","Chart","Boolean","chart","ChartAxis","tickValues","dependentAxis","isLegendVisible","justifyContent","LoadingState","es","icon","binoculars_icon","subTitle","EmptyState","EmptyStateIcon","Title","size","EmptyStateBody","mapStateToProps","common","NoProvidersState","react_redux_es","openProvidersModal","openModal","getAddSourceButton","Button","variant","primary","dollar_sign_icon","ErrorState","error","error_circle_o_icon","response","status","ban_icon","currentRequestData","strokeDasharray","currentUsageData","previousRequestData","previousUsageData","currentColorScale","previousColorScale","chartTitle","minHeight","usageChart_UsageChart","previousLegendData","previous","handlePreviousLegendClick","currentLegendData","handleCurrentLegendClick","itemsPerRow","maxCurrentRequest","maxCurrentUsage","maxPreviousRequest","maxPreviousUsage","currentRequestDate","currentUsageDate","previousRequestDate","previousUsageDate","isPreviousLegendVisible","isCurrentLegendVisible","reportSummary","subtitle","color","var","marginBottom","AwsReportSummary","children","detailsLink","subTitleTooltip","Card","CardHeader","CardBody","CardFooter","awsReportSummaryAlt_styles_styles","flexGrow","tops","AwsReportSummaryAlt","tabs","Grid","GridItem","lg","xl","Fragment","awsReportSummaryDetails_styles_styles","reportSummaryDetails","alignItems","text","paddingBottom","lineHeight","marginRight","valueContainer","AwsReportSummaryDetails","costLabel","reportType","showUnits","usageLabel","hasTotal","meta","total","costUnits","usageUnits","unitsLabel","utils_formatValue","awsReportSummaryItem_styles_styles","reportSummaryItem",":not(:last-child)","test","AwsReportSummaryItemBase","totalValue","undefined","percentVal","percentLabel","percent","Progress","sm","defaultProps","v","AwsReportSummaryItem","AwsReportSummaryItems","nextProps","otherIndex","findIndex","slice","getItems","awsReportSummaryTrend_styles_styles","AwsReportSummaryTrend","trendChart","OcpOnAwsReportSummary","ocpOnAwsReportSummaryAlt_styles_styles","OcpOnAwsReportSummaryAlt","ocpOnAwsReportSummaryDetails_styles_styles","marginLeft","titleContainer","usageText","usageValue","OcpOnAwsReportSummaryDetails","requestLabel","awsReportType","ocpOnAwsReportSummaryItem_styles_styles","OcpOnAwsReportSummaryItemBase","OcpOnAwsReportSummaryItem","OcpOnAwsReportSummaryItems","ocpOnAwsReportSummaryTrend_styles_styles","OcpOnAwsReportSummaryTrend","OcpOnAwsReportSummaryUsage","usageChart","OcpReportSummary","ocpReportSummaryAlt_styles_styles","OcpReportSummaryAlt","ocpReportSummaryDetails_styles_styles","OcpReportSummaryDetails","requestValue","ocpReportSummaryItem_styles_styles","OcpReportSummaryItemBase","OcpReportSummaryItem","OcpReportSummaryItems","ocpReportSummaryTrend_styles_styles","OcpReportSummaryTrend","OcpReportSummaryUsage","parse","module","exports","dirtyDate","getMonth","tabs_css","_extends","source","apply","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","propTypes","activeKey","prop_types_default","number","child","string","isRequired","TabContent_TabContent","_ref","hidden","eventKey","concat","aria-labelledby","role","tabIndex","Tabs_TabContent","_typeof","obj","Symbol","iterator","constructor","Tabs_extends","Tabs_objectWithoutProperties","Tabs_objectWithoutPropertiesLoose","_defineProperties","descriptor","enumerable","configurable","writable","defineProperty","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","_defineProperty","Tabs_propTypes","onSelect","func","isFilled","bool","isSecondary","leftScrollAriaLabel","rightScrollAriaLabel","Tabs_defaultProps","Tabs_Tabs","_React$Component","Tabs","_getPrototypeOf2","_this","instance","Constructor","TypeError","_classCallCheck","_len","args","_key","showLeftScrollButton","showRightScrollButton","highlightLeftScrollButton","highlightRightScrollButton","util","tabList","selectedTab","firstChild","lastChild","search","sideOutOfView","constants","LEFT","BOTH","RIGHT","firstElementInView","lastElementOutOfView","childrenArr","scrollLeft","scrollWidth","lastElementInView","firstElementOutOfView","protoProps","staticProps","subClass","superClass","_inherits","event","handleScrollButtons","document","_this2","_this$props","_this$state","modifiers","tabsSecondary","startCurrent","endCurrent","tabsScrollButton","aria-label","angle_left_icon","tabsList","onScroll","tabsItem","tabsButton","handleTabClick","aria-controls","scrollRight","angle_right_icon","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","Tab","react__WEBPACK_IMPORTED_MODULE_0___default","_possibleConstructorReturn","isModifiedEvent","metaKey","altKey","ctrlKey","shiftKey","Link_Link","Link","_temp","handleClick","defaultPrevented","button","preventDefault","history","context","router","replace","to","render","_props","innerRef","browser_default","location","history_es","href","createHref","oneOfType","object","contextTypes","shape","es_Link","CastedButton","link_Link","component","tabItems","getIdKeyForTab","tab","widgetId","widget","awsDashboard","selectWidget","queries","selectWidgetQueries","currentQuery","previousQuery","tabsQuery","currentReport","awsReports","selectReport","currentReportFetchStatus","selectReportFetchStatus","previousReport","tabsReport","mapDispatchToProps","fetchReports","fetchWidgetReports","updateTab","changeWidgetTab","AwsDashboardWidget","activeTabKey","buildDetailsLink","awsQuery","group_by","order_by","availableTabs","trend","awsReportSummary","titleKey","getDetails","getDetailsLabel","costKey","usageKey","getDetailsLink","currentTab","isDetailsLink","getDetailsLinkTitle","getHorizontalLayout","getSubTitle","getSubTitleTooltip","getTabs","getTitle","get_month_default","format_default","start_of_month_default","get_year_default","getTab","getTabTitle","getTabItem","topItems","activeTab","isCostReport","getVerticalLayout","isHorizontal","awsDashboard_mapStateToProps","selectWidgets","widgets","selectCurrentWidgets","awsDashboard_awsDashboard","ocpDashboardWidget_styles_styles","ocpDashboardWidget_getIdKeyForTab","ocpDashboardWidget_mapStateToProps","ocpDashboard","ocpReports","ocpDashboardWidget_mapDispatchToProps","OcpDashboardWidget","ocpQuery","ocpReportSummary","requestKey","ocpDashboard_mapStateToProps","ocpDashboard_ocpDashboard","ocpOnAwsDashboardWidget_styles_styles","ocpOnAwsDashboardWidget_getIdKeyForTab","ocpOnAwsDashboardWidget_mapStateToProps","ocpOnAwsDashboard","ocpOnAwsReports","ocpOnAwsDashboardWidget_mapDispatchToProps","OcpOnAwsDashboardWidget","ocpOnAwsQuery","ocpOnAwsReportSummary","ocpOnAwsDashboard_mapStateToProps","ocpOnAwsDashboard_ocpOnAwsDashboard","overview_getIdKeyForTab","overview_mapStateToProps","awsProvidersQueryString","providersQuery","awsProviders","selectProviders","awsProvidersError","selectProvidersError","awsProvidersFetchStatus","selectProvidersFetchStatus","ocpProvidersQueryString","ocpProviders","ocpProvidersError","ocpProvidersFetchStatus","Overview","secondary","isLoading","noAwsProviders","noOcpProviders","noProviders","page-type","errorState","noProvidersState","loadingState","react_hot_loader__WEBPACK_IMPORTED_MODULE_0__","_overview__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"6040f056014323c99b80.bundle.js","sourcesContent":["export const unitLookupKey = unit => {\n    const lookup = unit ? unit.toLowerCase() : '';\n    if (lookup.includes('core-hours')) {\n        return 'hrs';\n    }\n    return lookup.split('-')[0];\n};\nexport const formatValue = (value, unit, options = {}) => {\n    const lookup = unitLookupKey(unit);\n    const fValue = value || 0;\n    switch (lookup) {\n        case 'usd':\n            return formatCurrency(fValue, lookup, options);\n        case 'gb':\n            return formatUsageGb(fValue, lookup, options);\n        case 'hrs':\n            return formatUsageHrs(fValue, lookup, options);\n        default:\n            return unknownTypeFormatter(fValue, lookup, options);\n    }\n};\nconst unknownTypeFormatter = (value, _unit, { fractionDigits } = {}) => {\n    return value.toFixed(fractionDigits);\n};\nexport const formatCurrency = (value, _unit, { fractionDigits = 2 } = {}) => {\n    let fValue = value;\n    if (!value) {\n        fValue = 0;\n    }\n    return fValue.toLocaleString('en', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatUsageGb = (value, _unit, { fractionDigits = 2 } = {}) => {\n    return value.toFixed(fractionDigits);\n};\nexport const formatUsageHrs = (value, _unit, { fractionDigits } = {}) => {\n    return value.toFixed(fractionDigits);\n};\n","export const testIdProp = 'data-testid';\nexport const getTestProps = (id) => ({ [testIdProp]: id });\nexport const testIds = {\n    details: {\n        historical_data_btn: 'historical-data-btn',\n        tag_lnk: 'tag-lnk',\n        show_more_btn: 'show-more-btn',\n        view_all_btn: 'view-all-btn',\n    },\n    export: {\n        cancel_btn: 'cancel-btn',\n        submit_btn: 'submit-btn',\n    },\n    login: {\n        alert: 'alert',\n        form: 'login-form',\n        username_input: 'username-input',\n        password_input: 'password-input',\n        submit: 'submit',\n    },\n    masthead: {\n        masthead: 'masthead',\n        username: 'username',\n        sidebarToggle: 'sidebar-toggle',\n        logout: 'logout',\n    },\n    onboarding: {\n        btn_cancel: 'btn-cancel',\n        btn_back: 'btn-back',\n        btn_continue: 'btn-continue',\n        btn_close: 'btn-close',\n        type_selector: 'type-selector',\n        type_opt_aws: 'type-option-aws',\n        type_opt_ocp: 'type-option-ocp',\n        type_opt_non: 'type-option-non',\n        name_input: 'name-input',\n        check_box_1: 'check-box-1',\n        check_box_2: 'check-box-2',\n        check_box_3: 'check-box-3',\n        check_box_4: 'check-box-4',\n        check_box_5: 'check-box-5',\n        check_box_all: 'check-box-all',\n        s3_input: 's3-input',\n        clusterid_input: 'clusterid-input',\n        arn_input: 'arn-input',\n    },\n    providers: {\n        add_btn: 'add-btn',\n        bucket_input: 'bucket-input',\n        cancel_btn: 'cancel-btn',\n        empty_state_add_btn: 'empty_state_add-btn',\n        name_input: 'provider-name-input',\n        resource_name_input: 'provider-resource-name-input',\n        cluster_id_input: 'provider-cluster-id-input',\n        submit_btn: 'submit-btn',\n        type_input: 'provider-type-input',\n    },\n    sidebar: {\n        nav: 'vertical-nav',\n        link: 'vertical-nav-link',\n        backdrop: 'sidebar-backdrop',\n    },\n};\n","import endOfMonth from 'date-fns/end_of_month';\nimport format from 'date-fns/format';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getYear from 'date-fns/get_year';\nimport startOfMonth from 'date-fns/start_of_month';\nimport i18next from 'i18next';\nimport { unitLookupKey, } from 'utils/formatValue';\nimport { getComputedAwsReportItems, } from 'utils/getComputedAwsReportItems';\nimport { getComputedOcpOnAwsReportItems, } from 'utils/getComputedOcpOnAwsReportItems';\nimport { getComputedOcpReportItems, } from 'utils/getComputedOcpReportItems';\nexport function transformAwsReport(report, type = 1 /* daily */, key = 'date', reportItem = 'cost') {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        report,\n        idKey: key,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedAwsReportItems(items);\n    if (type === 1 /* daily */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    if (type === 2 /* monthly */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    return computedItems.reduce((acc, d) => {\n        const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n        return [...acc, createDatum(prevValue + d[reportItem], d, key)];\n    }, []);\n}\nexport function transformOcpReport(report, type = 1 /* daily */, key = 'date', reportItem = 'cost') {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        report,\n        idKey: key,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedOcpReportItems(items);\n    if (type === 1 /* daily */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    if (type === 2 /* monthly */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    return computedItems.reduce((acc, d) => {\n        const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n        return [...acc, createDatum(prevValue + d[reportItem], d, key)];\n    }, []);\n}\nexport function transformOcpOnAwsReport(report, type = 1 /* daily */, key = 'date', reportItem = 'cost') {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        report,\n        idKey: key,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedOcpOnAwsReportItems(items);\n    if (type === 1 /* daily */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    if (type === 2 /* monthly */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    return computedItems.reduce((acc, d) => {\n        const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n        return [...acc, createDatum(prevValue + d[reportItem], d, key)];\n    }, []);\n}\nexport function createDatum(value, computedItem, idKey = 'date') {\n    const xVal = idKey === 'date' ? getDate(computedItem.id) : computedItem.label;\n    const yVal = isFloat(value)\n        ? parseFloat(value.toFixed(2))\n        : isInt(value)\n            ? value\n            : 0;\n    return {\n        x: xVal,\n        y: yVal,\n        key: computedItem.id,\n        name: computedItem.id,\n        units: computedItem.units,\n    };\n}\nexport function getDatumDateRange(datums) {\n    if (!(datums && datums.length)) {\n        const today = new Date();\n        const firstOfMonth = startOfMonth(today);\n        return [firstOfMonth, today];\n    }\n    const start = new Date(datums[0].key + 'T00:00:00');\n    const end = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    return [start, end];\n}\nexport function getDateRange(datums, firstOfMonth = true, lastOfMonth = false) {\n    const [start, end] = getDatumDateRange(datums);\n    // Show the date range we are trying to cover (i.e., days 1-30/31)\n    if (firstOfMonth && start.setDate) {\n        start.setDate(1);\n    }\n    if (lastOfMonth && start.setDate) {\n        const lastDate = endOfMonth(start).getDate();\n        end.setDate(lastDate);\n    }\n    return [start, end];\n}\nexport function getDateRangeString(datums, firstOfMonth = false, lastOfMonth = false) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth);\n    const test = i18next.t(`chart.date_range`, {\n        count: getDate(end),\n        endDate: formatDate(end, 'DD'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'DD'),\n        year: getYear(end),\n    });\n    return test;\n}\nexport function getMonthRangeString(datums, key = 'chart.month') {\n    const [start, end] = getDateRange(datums);\n    return [\n        i18next.t(key, {\n            month: Number(formatDate(start, 'M')) - 1,\n        }),\n        i18next.t(key, {\n            month: Number(formatDate(end, 'M')) - 1,\n        }),\n    ];\n}\nexport function getMaxValue(datums) {\n    let max = 0;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            if (datum.y > max) {\n                max = datum.y;\n            }\n        });\n    }\n    return max;\n}\nexport function getTooltipContent(formatValue) {\n    return function labelFormatter(value, unit = null, options = {}) {\n        const lookup = unitLookupKey(unit);\n        switch (lookup) {\n            case 'hrs':\n            case 'gb':\n                return i18next.t(`units.${lookup}`, {\n                    value: `${formatValue(value, unit, options)}`,\n                });\n            default:\n                return `${formatValue(value, unit, options)}`;\n        }\n    };\n}\nexport function getTooltipLabel(datum, formatValue, formatOptions, idKey = 'date') {\n    if (!datum.key) {\n        return '';\n    }\n    if (idKey === 'date') {\n        const date = format(datum.key, 'DD MMM YYYY');\n        return `${date}: ${formatValue(datum.y, datum.units, formatOptions)}`;\n    }\n    return datum.key.toString();\n}\nfunction isInt(n) {\n    return Number(n) === n && n % 1 === 0;\n}\nfunction isFloat(n) {\n    return Number(n) === n && n % 1 !== 0;\n}\n","function getValueForItem(item, options) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    const sortKey = options.key;\n    return item[sortKey];\n}\nexport function sort(array, options) {\n    const { direction = 0 /* asc */ } = options || {};\n    return [...array].sort((a, b) => {\n        const aVal = direction === 0 /* asc */\n            ? getValueForItem(a, options)\n            : getValueForItem(b, options);\n        const bVal = direction === 0 /* asc */\n            ? getValueForItem(b, options)\n            : getValueForItem(a, options);\n        if (aVal > bVal) {\n            return -1;\n        }\n        if (aVal < bVal) {\n            return 1;\n        }\n        return 0;\n    });\n}\n","import { sort } from './sort';\nexport function getComputedOcpOnAwsReportItems({ report, idKey, labelKey = idKey, sortKey = 'cost', sortDirection = 0 /* asc */, }) {\n    return sort(getUnsortedComputedOcpOnAwsReportItems({\n        report,\n        idKey,\n        labelKey,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nexport function getUnsortedComputedOcpOnAwsReportItems({ report, idKey, labelKey = idKey, }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint.values) {\n            dataPoint.values.forEach(value => {\n                const capacity = value.capacity ? value.capacity.value : 0;\n                const cluster = value.cluster_alias\n                    ? value.cluster_alias\n                    : value.cluster;\n                const cost = value.cost ? value.cost.value : 0;\n                const derivedCost = value.derived_cost ? value.derived_cost.value : 0;\n                const infrastructureCost = value.infrastructure_cost\n                    ? value.infrastructure_cost.value\n                    : 0;\n                // Ensure unique IDs -- https://github.com/project-koku/koku-ui/issues/706\n                const idSuffix = idKey !== 'date' && idKey !== 'cluster' && value.cluster\n                    ? `-${value.cluster}`\n                    : '';\n                const id = `${value[idKey]}${idSuffix}`;\n                let label;\n                if (labelKey === 'cluster' && value.cluster_alias) {\n                    label = value.cluster_alias;\n                }\n                else if (value[labelKey] instanceof Object) {\n                    label = value[labelKey].value;\n                }\n                else {\n                    label = value[labelKey];\n                }\n                if (labelKey === 'account' && value.account_alias) {\n                    label = value.account_alias;\n                }\n                const limit = value.limit ? value.limit.value : 0;\n                const request = value.request ? value.request.value : 0;\n                const usage = value.usage ? value.usage.value : 0;\n                const units = value.usage ? value.usage.units : value.cost.units;\n                if (!itemMap.get(id)) {\n                    itemMap.set(id, {\n                        capacity,\n                        cluster,\n                        cost,\n                        deltaPercent: value.delta_percent,\n                        deltaValue: value.delta_value,\n                        derivedCost,\n                        id,\n                        infrastructureCost,\n                        label,\n                        limit,\n                        request,\n                        units,\n                        usage,\n                    });\n                    return;\n                }\n                itemMap.set(id, Object.assign({}, itemMap.get(id), { capacity: itemMap.get(id).capacity + capacity, cost: itemMap.get(id).cost + cost, derivedCost: itemMap.get(id).derivedCost + derivedCost, infrastructureCost: itemMap.get(id).infrastructureCost + infrastructureCost, limit: itemMap.get(id).limit + limit, request: itemMap.get(id).request + request, usage: itemMap.get(id).usage + usage }));\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\nexport function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    return 'date';\n}\n","import { sort } from './sort';\nexport function getComputedAwsReportItems({ report, idKey, labelKey = idKey, sortKey = 'cost', sortDirection = 0 /* asc */, }) {\n    return sort(getUnsortedComputedAwsReportItems({\n        report,\n        idKey,\n        labelKey,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nexport function getUnsortedComputedAwsReportItems({ report, idKey, labelKey = idKey, }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint.values) {\n            dataPoint.values.forEach(value => {\n                const cost = value.usage ? value.usage.value : value.cost.value;\n                const derivedCost = value.derived_cost ? value.derived_cost.value : 0;\n                const infrastructureCost = value.infrastructure_cost\n                    ? value.infrastructure_cost.value\n                    : 0;\n                const id = value[idKey];\n                let label;\n                if (value[labelKey] instanceof Object) {\n                    label = value[labelKey].value;\n                }\n                else {\n                    label = value[labelKey];\n                }\n                if (labelKey === 'account' && value.account_alias) {\n                    label = value.account_alias;\n                }\n                if (!itemMap.get(id)) {\n                    itemMap.set(id, {\n                        cost,\n                        deltaPercent: value.delta_percent,\n                        deltaValue: value.delta_value,\n                        derivedCost,\n                        id,\n                        infrastructureCost,\n                        label,\n                        units: value.usage ? value.usage.units : value.cost.units,\n                    });\n                    return;\n                }\n                itemMap.set(id, Object.assign({}, itemMap.get(id), { cost: itemMap.get(id).cost + cost, derivedCost: itemMap.get(id).derivedCost + derivedCost, infrastructureCost: itemMap.get(id).infrastructureCost + infrastructureCost }));\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\nexport function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.account) {\n        return 'account';\n    }\n    if (groupBy.instance_type) {\n        return 'instance_type';\n    }\n    if (groupBy.region) {\n        return 'region';\n    }\n    if (groupBy.service) {\n        return 'service';\n    }\n    return 'date';\n}\n","import { sort } from './sort';\nexport function getComputedOcpReportItems({ report, idKey, labelKey = idKey, sortKey = 'cost', sortDirection = 0 /* asc */, }) {\n    return sort(getUnsortedComputedOcpReportItems({\n        report,\n        idKey,\n        labelKey,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nexport function getUnsortedComputedOcpReportItems({ report, idKey, labelKey = idKey, }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint.values) {\n            dataPoint.values.forEach(value => {\n                const capacity = value.capacity ? value.capacity.value : 0;\n                const cluster = value.cluster_alias\n                    ? value.cluster_alias\n                    : value.cluster;\n                const cost = value.cost ? value.cost.value : 0;\n                const derivedCost = value.derived_cost ? value.derived_cost.value : 0;\n                const infrastructureCost = value.infrastructure_cost\n                    ? value.infrastructure_cost.value\n                    : 0;\n                // Ensure unique IDs -- https://github.com/project-koku/koku-ui/issues/706\n                const idSuffix = idKey !== 'date' && idKey !== 'cluster' && value.cluster\n                    ? `-${value.cluster}`\n                    : '';\n                const id = `${value[idKey]}${idSuffix}`;\n                let label;\n                if (labelKey === 'cluster' && value.cluster_alias) {\n                    label = value.cluster_alias;\n                }\n                else if (value[labelKey] instanceof Object) {\n                    label = value[labelKey].value;\n                }\n                else {\n                    label = value[labelKey];\n                }\n                const limit = value.limit ? value.limit.value : 0;\n                const request = value.request ? value.request.value : 0;\n                const usage = value.usage ? value.usage.value : 0;\n                const units = value.usage ? value.usage.units : value.cost.units;\n                if (!itemMap.get(id)) {\n                    itemMap.set(id, {\n                        capacity,\n                        cluster,\n                        cost,\n                        deltaPercent: value.delta_percent,\n                        deltaValue: value.delta_value,\n                        derivedCost,\n                        id,\n                        infrastructureCost,\n                        label,\n                        limit,\n                        request,\n                        units,\n                        usage,\n                    });\n                    return;\n                }\n                itemMap.set(id, Object.assign({}, itemMap.get(id), { capacity: itemMap.get(id).capacity + capacity, cost: itemMap.get(id).cost + cost, derivedCost: itemMap.get(id).derivedCost + derivedCost, infrastructureCost: itemMap.get(id).infrastructureCost + infrastructureCost, limit: itemMap.get(id).limit + limit, request: itemMap.get(id).request + request, usage: itemMap.get(id).usage + usage }));\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\nexport function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    return 'date';\n}\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { ChartLabel } from '@patternfly/react-charts';\nimport { Tooltip } from '@patternfly/react-core';\nimport React from 'react';\nconst ChartLabelTooltip = (_a) => {\n    var { content } = _a, props = __rest(_a, [\"content\"]);\n    return (React.createElement(Tooltip, { content: content(props.datum), enableFlip: true },\n        React.createElement(ChartLabel, Object.assign({}, props))));\n};\nexport { ChartLabelTooltip };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_disabled_color_200, global_FontFamily_sans_serif, global_FontSize_md, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    colorScale: [\n        global_disabled_color_200.value,\n        '#A2DA9C',\n        '#88D080',\n        '#6EC664',\n        '#519149',\n        '#3C6C37',\n    ],\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 14,\n        },\n        minWidth: 175,\n    },\n    previousMonth: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    currentMonth: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = StyleSheet.create({\n    chartContainer: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n    legend: {\n        display: 'inline-block',\n        fontSize: global_FontSize_md.value,\n        marginTop: global_spacer_lg.value,\n        minWidth: '175px',\n    },\n});\n","import { Chart, ChartArea, ChartAxis, ChartContainer, ChartLegend, ChartTheme, ChartVoronoiContainer, } from '@patternfly/react-charts';\nimport { css } from '@patternfly/react-styles';\nimport { ChartLabelTooltip } from 'components/charts/chartLabelTooltip';\nimport { getDateRange, getDateRangeString, getMaxValue, getMonthRangeString, getTooltipContent, getTooltipLabel, } from 'components/charts/commonChart/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport React from 'react';\nimport { chartStyles, styles } from './trendChart.styles';\nclass TrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, previousData, title } = this.props;\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const legendData = [];\n            if (previousData) {\n                const [start] = getMonthRangeString(previousData);\n                legendData.push({\n                    name: start,\n                    symbol: {\n                        type: 'minus',\n                    },\n                    tooltip: getDateRangeString(previousData, true, true),\n                });\n            }\n            if (currentData) {\n                const [start] = getMonthRangeString(currentData);\n                legendData.push({\n                    name: start,\n                    symbol: {\n                        type: 'minus',\n                    },\n                    tooltip: getDateRangeString(currentData, true, false),\n                });\n            }\n            const cost = {\n                charts: [\n                    {\n                        data: previousData,\n                        show: true,\n                        style: chartStyles.previousMonth,\n                    },\n                    {\n                        data: currentData,\n                        show: true,\n                        style: chartStyles.currentMonth,\n                    },\n                ],\n                legend: {\n                    colorScale: chartStyles.colorScale,\n                    data: legendData,\n                    onClick: this.handleCostLegendClick,\n                    title,\n                },\n            };\n            this.setState({\n                datum: {\n                    cost,\n                },\n            });\n        };\n        this.handleCostLegendClick = props => {\n            const { datum } = this.state;\n            const newDatum = Object.assign({}, datum);\n            if (props.index >= 0 && newDatum.cost.charts.length) {\n                newDatum.cost.charts[props.index].show = !newDatum.cost.charts[props.index].show;\n                this.setState({ datum: newDatum });\n            }\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (datum, index) => {\n            if (datum.data && datum.data.length && datum.show) {\n                return (React.createElement(ChartArea, { data: datum.data, key: `trend-chart-${index}`, style: datum.style }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getLegend = (datum, width) => {\n            if (datum && datum.data && datum.data.length) {\n                return (React.createElement(ChartLegend, { colorScale: datum.colorScale, containerComponent: React.createElement(ChartContainer, { responsive: false }), data: datum.data, events: [\n                        {\n                            target: 'data',\n                            eventHandlers: {\n                                onClick: () => {\n                                    return [\n                                        {\n                                            target: 'data',\n                                            mutation: props => {\n                                                datum.onClick(props);\n                                                return null;\n                                            },\n                                        },\n                                    ];\n                                },\n                            },\n                        },\n                    ], gutter: 20, height: 25, labelComponent: React.createElement(ChartLabelTooltip, { content: this.getLegendTooltip }), orientation: width > 150 ? 'horizontal' : 'vertical', style: chartStyles.legend, theme: ChartTheme.light.blue, width: width }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getLegendTooltip = (datum) => {\n            return datum.tooltip ? datum.tooltip : '';\n        };\n        this.getTooltipLabel = (datum) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            return getTooltipLabel(datum, getTooltipContent(formatDatumValue), formatDatumOptions, 'date');\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentData, previousData } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrent = currentData ? getMaxValue(currentData) : 0;\n        const maxPrevious = previousData ? getMaxValue(previousData) : 0;\n        const maxValue = Math.max(maxCurrent, maxPrevious);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentData, previousData } = this.props;\n        const previousDate = previousData\n            ? getDate(getDateRange(previousData, true, true)[1])\n            : 0;\n        const currentDate = currentData\n            ? getDate(getDateRange(currentData, true, true)[1])\n            : 0;\n        return currentDate > 0 || previousDate > 0\n            ? Math.max(currentDate, previousDate)\n            : 31;\n    }\n    isLegendVisible() {\n        const { datum } = this.state;\n        let result = false;\n        if (datum && datum.cost.legend && datum.cost.legend.data) {\n            datum.cost.legend.data.forEach(item => {\n                if (item.name && item.name.trim() !== '') {\n                    result = true;\n                    return;\n                }\n            });\n        }\n        return result;\n    }\n    render() {\n        const { height } = this.props;\n        const { datum, width } = this.state;\n        const container = (React.createElement(ChartVoronoiContainer, { labels: this.getTooltipLabel, voronoiDimension: \"x\" }));\n        const legendWidth = chartStyles.legend.minWidth > width / 2\n            ? chartStyles.legend.minWidth\n            : width / 2;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        return (React.createElement(\"div\", { className: css(styles.chartContainer), ref: this.containerRef },\n            React.createElement(Chart, { containerComponent: container, domain: domain, height: height, width: width },\n                Boolean(datum && datum.cost) &&\n                    datum.cost.charts.map((chart, index) => {\n                        return this.getChart(chart, index);\n                    }),\n                React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis })),\n            Boolean(this.isLegendVisible()) && (React.createElement(\"div\", { className: css(styles.legend) },\n                Boolean(datum.cost.legend.title) && (React.createElement(\"div\", null, datum.cost.legend.title)),\n                this.getLegend(datum.cost.legend, legendWidth)))));\n    }\n}\nexport { TrendChart };\n","import { StyleSheet } from '@patternfly/react-styles';\nexport const styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100vh',\n        marginTop: '150px',\n    },\n});\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, Title, } from '@patternfly/react-core';\nimport { BinocularsIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './loadingState.styles';\nconst LoadingStateBase = ({ icon = BinocularsIcon, t, }) => {\n    const title = t('loading_state.sources_title');\n    const subTitle = t('loading_state.sources_desc');\n    return (React.createElement(\"div\", { className: css(styles.container) },\n        React.createElement(EmptyState, null,\n            React.createElement(EmptyStateIcon, { icon: icon }),\n            React.createElement(Title, { size: \"lg\" }, title),\n            React.createElement(EmptyStateBody, null, subTitle))));\n};\nconst LoadingState = translate()(LoadingStateBase);\nexport { LoadingState };\n","import { StyleSheet } from '@patternfly/react-styles';\nexport const styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100vh',\n        marginTop: '150px',\n    },\n});\n","import { Button, ButtonType, ButtonVariant, EmptyState, EmptyStateBody, EmptyStateIcon, Title, } from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions } from 'store/onboarding';\nimport { getTestProps, testIds } from 'testIds';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getAddSourceButton = () => {\n            const { openProvidersModal, t } = this.props;\n            return (React.createElement(Button, Object.assign({}, getTestProps(testIds.providers.add_btn), { onClick: openProvidersModal, type: ButtonType.submit, variant: ButtonVariant.primary }), t('providers.add_source')));\n        };\n    }\n    render() {\n        const { t } = this.props;\n        return (React.createElement(\"div\", { className: css(styles.container) },\n            React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: DollarSignIcon }),\n                React.createElement(Title, { size: \"lg\" }, t('providers.empty_state_title')),\n                React.createElement(EmptyStateBody, null, t('providers.empty_state_desc')),\n                this.getAddSourceButton())));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, {}) => {\n    return {};\n});\nconst NoProvidersState = translate()(connect(mapStateToProps, {\n    openProvidersModal: onboardingActions.openModal,\n})(NoProvidersStateBase));\nexport { NoProvidersState };\n","import { StyleSheet } from '@patternfly/react-styles';\nexport const styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100vh',\n        marginTop: '150px',\n    },\n});\n","import { EmptyState as PfEmptyState, EmptyStateBody, EmptyStateIcon, Title, } from '@patternfly/react-core';\nimport { BanIcon, ErrorCircleOIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './errorState.styles';\nconst ErrorStateBase = ({ error, icon = ErrorCircleOIcon, t, }) => {\n    let title = t('error_state.unexpected_title');\n    let subTitle = t('error_state.unexpected_desc');\n    if (error && error.response && error.response.status === 401) {\n        icon = BanIcon;\n        title = t('error_state.unauthorized_title');\n        subTitle = t('error_state.unauthorized_desc');\n    }\n    return (React.createElement(\"div\", { className: css(styles.container) },\n        React.createElement(PfEmptyState, null,\n            React.createElement(EmptyStateIcon, { icon: icon }),\n            React.createElement(Title, { size: \"lg\" }, title),\n            React.createElement(EmptyStateBody, null, subTitle))));\n};\nconst ErrorState = translate()(ErrorStateBase);\nexport { ErrorState };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_disabled_color_100, global_disabled_color_200, global_FontFamily_sans_serif, global_FontSize_md, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: '#88D080',\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 14,\n        },\n        minWidth: 175,\n    },\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: ['#A2DA9C', '#88D080', '#6EC664', '#519149', '#3C6C37'],\n    // TBD: No grey scale, yet\n    previousColorScale: [\n        global_disabled_color_200.value,\n        global_disabled_color_100.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = StyleSheet.create({\n    chartContainer: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n        marginTop: global_spacer_lg.value,\n    },\n    chartTitle: {\n        fontSize: global_FontSize_md.value,\n        marginTop: global_spacer_lg.value,\n    },\n    legend: {\n        display: 'inline-block',\n        fontSize: global_FontSize_md.value,\n        minHeight: '60px',\n        minWidth: '175px',\n        width: '50%',\n    },\n});\n","import { Chart, ChartArea, ChartAxis, ChartContainer, ChartLegend, ChartTheme, ChartVoronoiContainer, } from '@patternfly/react-charts';\nimport { css } from '@patternfly/react-styles';\nimport { ChartLabelTooltip } from 'components/charts/chartLabelTooltip';\nimport { getDateRange, getDateRangeString, getMaxValue, getMonthRangeString, getTooltipContent, getTooltipLabel, } from 'components/charts/commonChart/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport React from 'react';\nimport { chartStyles, styles } from './usageChart.styles';\nclass UsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, title, } = this.props;\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const previousLegendData = [];\n            if (previousUsageData) {\n                const [start] = getMonthRangeString(previousUsageData, 'chart.usage');\n                previousLegendData.push({\n                    name: start,\n                    symbol: {\n                        type: 'minus',\n                    },\n                    tooltip: getDateRangeString(previousUsageData, true, true),\n                });\n            }\n            if (previousRequestData) {\n                const [start] = getMonthRangeString(previousRequestData, 'chart.requests');\n                previousLegendData.push({\n                    name: start,\n                    symbol: {\n                        type: 'dash',\n                    },\n                    tooltip: getDateRangeString(previousRequestData, true, true),\n                });\n            }\n            const previous = {\n                charts: [\n                    {\n                        data: previousUsageData,\n                        show: true,\n                        style: chartStyles.previousUsageData,\n                    },\n                    {\n                        data: previousRequestData,\n                        show: true,\n                        style: chartStyles.previousRequestData,\n                    },\n                ],\n                legend: {\n                    colorScale: chartStyles.previousColorScale,\n                    data: previousLegendData,\n                    onClick: this.handlePreviousLegendClick,\n                    title,\n                },\n            };\n            const currentLegendData = [];\n            if (currentUsageData) {\n                const [start] = getMonthRangeString(currentUsageData, 'chart.usage');\n                currentLegendData.push({\n                    name: start,\n                    symbol: {\n                        type: 'minus',\n                    },\n                    tooltip: getDateRangeString(currentUsageData, true, false),\n                });\n            }\n            if (currentRequestData) {\n                const [start] = getMonthRangeString(currentRequestData, 'chart.requests');\n                currentLegendData.push({\n                    name: start,\n                    symbol: {\n                        type: 'dash',\n                    },\n                    tooltip: getDateRangeString(currentRequestData, true, false),\n                });\n            }\n            const current = {\n                charts: [\n                    {\n                        data: currentUsageData,\n                        show: true,\n                        style: chartStyles.currentUsageData,\n                    },\n                    {\n                        data: currentRequestData,\n                        show: true,\n                        style: chartStyles.currentRequestData,\n                    },\n                ],\n                legend: {\n                    colorScale: chartStyles.currentColorScale,\n                    data: currentLegendData,\n                    gutter: 55,\n                    onClick: this.handleCurrentLegendClick,\n                    title,\n                },\n            };\n            this.setState({\n                datum: {\n                    previous,\n                    current,\n                },\n            });\n        };\n        this.handleCurrentLegendClick = props => {\n            const { datum } = this.state;\n            const newDatum = Object.assign({}, datum);\n            if (props.index >= 0 && newDatum.current.charts.length) {\n                newDatum.current.charts[props.index].show = !newDatum.current.charts[props.index].show;\n                this.setState({ datum: newDatum });\n            }\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.handlePreviousLegendClick = props => {\n            const { datum } = this.state;\n            const newDatum = Object.assign({}, datum);\n            if (props.index >= 0 && newDatum.previous.charts.length) {\n                newDatum.previous.charts[props.index].show = !newDatum.previous.charts[props.index].show;\n                this.setState({ datum: newDatum });\n            }\n        };\n        this.getChart = (datum, index) => {\n            if (datum.data && datum.data.length && datum.show) {\n                return (React.createElement(ChartArea, { data: datum.data, key: `usage-chart-${index}`, style: datum.style }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getLegend = (datum, width) => {\n            if (datum && datum.data && datum.data.length) {\n                return (React.createElement(ChartLegend, { colorScale: datum.colorScale, containerComponent: React.createElement(ChartContainer, { responsive: false }), data: datum.data, events: [\n                        {\n                            target: 'data',\n                            eventHandlers: {\n                                onClick: () => {\n                                    return [\n                                        {\n                                            target: 'data',\n                                            mutation: props => {\n                                                datum.onClick(props);\n                                                return null;\n                                            },\n                                        },\n                                    ];\n                                },\n                            },\n                        },\n                    ], height: 25, itemsPerRow: 1, labelComponent: React.createElement(ChartLabelTooltip, { content: this.getLegendTooltip }), orientation: \"horizontal\", style: chartStyles.legend, theme: ChartTheme.light.blue }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getLegendTooltip = (datum) => {\n            return datum.tooltip ? datum.tooltip : '';\n        };\n        this.getTooltipLabel = (datum) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            return getTooltipLabel(datum, getTooltipContent(formatDatumValue), formatDatumOptions, 'date');\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentRequest = currentRequestData\n            ? getMaxValue(currentRequestData)\n            : 0;\n        const maxCurrentUsage = currentUsageData\n            ? getMaxValue(currentUsageData)\n            : 0;\n        const maxPreviousRequest = previousRequestData\n            ? getMaxValue(previousRequestData)\n            : 0;\n        const maxPreviousUsage = previousUsageData\n            ? getMaxValue(previousUsageData)\n            : 0;\n        const maxValue = Math.max(maxCurrentRequest, maxCurrentUsage, maxPreviousRequest, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const currentRequestDate = currentRequestData\n            ? getDate(getDateRange(currentRequestData, true, true)[1])\n            : 0;\n        const currentUsageDate = currentUsageData\n            ? getDate(getDateRange(currentUsageData, true, true)[1])\n            : 0;\n        const previousRequestDate = previousRequestData\n            ? getDate(getDateRange(previousRequestData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousUsageData\n            ? getDate(getDateRange(previousUsageData, true, true)[1])\n            : 0;\n        return currentRequestDate > 0 ||\n            currentUsageDate > 0 ||\n            previousRequestDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    isCurrentLegendVisible() {\n        const { datum } = this.state;\n        let result = false;\n        if (datum && datum.current.legend && datum.current.legend.data) {\n            datum.current.legend.data.forEach(data => {\n                if (data.name && data.name.trim() !== '') {\n                    result = true;\n                    return;\n                }\n            });\n        }\n        return result;\n    }\n    isPreviousLegendVisible() {\n        const { datum } = this.state;\n        let result = false;\n        if (datum && datum.previous.legend && datum.previous.legend.data) {\n            datum.previous.legend.data.forEach(data => {\n                if (data.name && data.name.trim() !== '') {\n                    result = true;\n                    return;\n                }\n            });\n        }\n        return result;\n    }\n    render() {\n        const { height } = this.props;\n        const { datum, width } = this.state;\n        const container = (React.createElement(ChartVoronoiContainer, { labels: this.getTooltipLabel, voronoiDimension: \"x\" }));\n        const legendWidth = chartStyles.legend.minWidth > width / 2\n            ? chartStyles.legend.minWidth\n            : width / 2;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        return (React.createElement(\"div\", { className: css(styles.chartContainer), ref: this.containerRef },\n            React.createElement(Chart, { containerComponent: container, domain: domain, height: height, width: width },\n                Boolean(datum && datum.previous) &&\n                    datum.previous.charts.map((chart, index) => {\n                        return this.getChart(chart, index);\n                    }),\n                Boolean(datum && datum.current) &&\n                    datum.current.charts.map((chart, index) => {\n                        return this.getChart(chart, index);\n                    }),\n                React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis })),\n            Boolean(this.isPreviousLegendVisible()) && (React.createElement(\"div\", { className: css(styles.chartTitle) }, datum.previous.legend.title)),\n            Boolean(this.isCurrentLegendVisible() && !this.isPreviousLegendVisible()) && (React.createElement(\"div\", { className: css(styles.chartTitle) }, datum.current.legend.title)),\n            Boolean(this.isPreviousLegendVisible()) && (React.createElement(\"div\", { className: css(styles.legend) }, this.getLegend(datum.previous.legend, legendWidth))),\n            Boolean(this.isCurrentLegendVisible()) && (React.createElement(\"div\", { className: css(styles.legend) }, this.getLegend(datum.current.legend, legendWidth)))));\n    }\n}\nexport { UsageChart };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, Tooltip, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './awsReportSummary.styles';\nconst AwsReportSummaryBase = ({ children, detailsLink, title, subTitle, subTitleTooltip = subTitle, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && (React.createElement(Tooltip, { content: subTitleTooltip, enableFlip: true },\n            React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)))),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? `${t('loading')}...` : children),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst AwsReportSummary = translate()(AwsReportSummaryBase);\nexport { AwsReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '440px',\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Grid, GridItem, Title, Tooltip, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './awsReportSummaryAlt.styles';\nconst AwsReportSummaryAltBase = ({ children, detailsLink, status, subTitle, subTitleTooltip = subTitle, t, tabs, title, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(Grid, { gutter: \"md\" },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.cost) },\n                    React.createElement(CardHeader, null,\n                        React.createElement(Title, { size: \"lg\" }, title),\n                        Boolean(subTitle) && (React.createElement(Tooltip, { content: subTitleTooltip, enableFlip: true },\n                            React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)))),\n                    React.createElement(CardBody, null, status === 1 /* inProgress */\n                        ? `${t('loading')}...`\n                        : children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.tops) }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst AwsReportSummaryAlt = translate()(AwsReportSummaryAltBase);\nexport { AwsReportSummaryAlt };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryDetails: {\n        marginBottom: global_spacer_md.value,\n        display: 'flex',\n        alignItems: 'flex-end',\n    },\n    text: {\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    value: {\n        color: global_Color_100.var,\n        marginRight: global_spacer_sm.value,\n        fontSize: global_FontSize_4xl.value,\n    },\n    valueContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        width: '50%',\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { styles } from './awsReportSummaryDetails.styles';\nconst AwsReportSummaryDetailsBase = ({ costLabel, formatValue, formatOptions, report, reportType = \"cost\" /* cost */, showUnits = false, usageLabel, t, }) => {\n    let cost = '----';\n    let usage = '----';\n    const hasTotal = report && report.meta && report.meta.total;\n    const costUnits = hasTotal && report.meta.total.cost ? report.meta.total.cost.units : 'USD';\n    const usageUnits = hasTotal && report.meta.total.usage ? report.meta.total.usage.units : 'USD';\n    if (hasTotal) {\n        cost = formatValue(report.meta.total.cost ? report.meta.total.cost.value : 0, costUnits, formatOptions);\n        usage = formatValue(report.meta.total.usage ? report.meta.total.usage.value : 0, usageUnits, formatOptions);\n    }\n    const units = unitLookupKey(usageUnits);\n    const unitsLabel = t(`units.${units}`);\n    if (reportType === \"cost\" /* cost */) {\n        return (React.createElement(\"div\", { className: css(styles.reportSummaryDetails) },\n            React.createElement(\"div\", { className: css(styles.value) }, cost)));\n    }\n    else {\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { className: css(styles.valueContainer) },\n                React.createElement(\"div\", { className: css(styles.value) }, cost),\n                React.createElement(\"div\", { className: css(styles.text) },\n                    React.createElement(\"div\", null, costLabel))),\n            Boolean(usageLabel) && (React.createElement(\"div\", { className: css(styles.valueContainer) },\n                React.createElement(\"div\", { className: css(styles.value) },\n                    usage,\n                    Boolean(showUnits) && (React.createElement(\"span\", { className: css(styles.text) }, unitsLabel))),\n                React.createElement(\"div\", { className: css(styles.text) },\n                    React.createElement(\"div\", null, usageLabel))))));\n    }\n};\nconst AwsReportSummaryDetails = translate()(AwsReportSummaryDetailsBase);\nexport { AwsReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { styles } from './awsReportSummaryItem.styles';\nconst AwsReportSummaryItemBase = ({ label, formatOptions, formatValue, t, totalValue, units, value, }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nAwsReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst AwsReportSummaryItem = translate()(AwsReportSummaryItemBase);\nexport { AwsReportSummaryItem };\n","import React from 'react';\nimport { translate } from 'react-i18next';\nimport { getComputedAwsReportItems, } from 'utils/getComputedAwsReportItems';\nclass AwsReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedAwsReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { report, children, t } = this.props;\n        if (!report) {\n            return `${t('loading')}...`;\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst AwsReportSummaryItems = translate()(AwsReportSummaryItemsBase);\nexport { AwsReportSummaryItems, };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nimport { styles } from './awsReportSummaryTrend.styles';\nconst AwsReportSummaryTrend = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { AwsReportSummaryTrend };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, Tooltip, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpOnAwsReportSummary.styles';\nconst OcpOnAwsReportSummaryBase = ({ children, detailsLink, title, subTitle, subTitleTooltip = subTitle, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && (React.createElement(Tooltip, { content: subTitleTooltip, enableFlip: true },\n            React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)))),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? `${t('loading')}...` : children),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst OcpOnAwsReportSummary = translate()(OcpOnAwsReportSummaryBase);\nexport { OcpOnAwsReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '440px',\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Grid, GridItem, Title, Tooltip, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpOnAwsReportSummaryAlt.styles';\nconst OcpOnAwsReportSummaryAltBase = ({ children, detailsLink, status, subTitle, subTitleTooltip = subTitle, t, tabs, title, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(Grid, { gutter: \"md\" },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.cost) },\n                    React.createElement(CardHeader, null,\n                        React.createElement(Title, { size: \"lg\" }, title),\n                        Boolean(subTitle) && (React.createElement(Tooltip, { content: subTitleTooltip, enableFlip: true },\n                            React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)))),\n                    React.createElement(CardBody, null, status === 1 /* inProgress */\n                        ? `${t('loading')}...`\n                        : children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.tops) }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst OcpOnAwsReportSummaryAlt = translate()(OcpOnAwsReportSummaryAltBase);\nexport { OcpOnAwsReportSummaryAlt };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    text: {\n        display: 'flex',\n        alignItems: 'flex-end',\n        marginLeft: global_spacer_sm.value,\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    titleContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        minWidth: '175px',\n        width: '50%',\n    },\n    usageText: {\n        marginRight: global_spacer_sm.value,\n    },\n    usageValue: {\n        marginRight: global_spacer_sm.value,\n    },\n    value: {\n        display: 'flex',\n        color: global_Color_100.var,\n        fontSize: global_FontSize_4xl.value,\n    },\n    valueContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        width: '50%',\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { styles } from './ocpOnAwsReportSummaryDetails.styles';\nconst OcpOnAwsReportSummaryDetailsBase = ({ costLabel, formatValue, formatOptions, report, reportType = \"cost\" /* cost */, requestLabel, showUnits = false, usageLabel, t, }) => {\n    let cost = '----';\n    let request = '----';\n    let usage = '----';\n    const awsReportType = reportType === \"database\" /* database */ ||\n        reportType === \"instance_type\" /* instanceType */ ||\n        reportType === \"network\" /* network */ ||\n        reportType === \"storage\" /* storage */;\n    const hasTotal = report && report.meta && report.meta.total;\n    const costUnits = hasTotal && report.meta.total.cost ? report.meta.total.cost.units : 'USD';\n    const usageUnits = hasTotal && report.meta.total.usage\n        ? report.meta.total.usage.units\n        : awsReportType\n            ? 'GB'\n            : 'USD';\n    if (hasTotal) {\n        cost = formatValue(report.meta.total.cost ? report.meta.total.cost.value : 0, costUnits, formatOptions);\n        if (awsReportType) {\n            usage = formatValue(report.meta.total.usage ? report.meta.total.usage.value : 0, usageUnits, formatOptions);\n        }\n        else {\n            usage = formatValue(report.meta.total.usage ? report.meta.total.usage.value : 0, usageUnits, formatOptions);\n            request = formatValue(report.meta.total.request ? report.meta.total.request.value : 0, usageUnits, formatOptions);\n        }\n    }\n    if (reportType === \"cost\" /* cost */) {\n        return (React.createElement(\"div\", { className: css(styles.titleContainer) },\n            React.createElement(\"div\", { className: css(styles.value) }, cost)));\n    }\n    else if (!awsReportType) {\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { className: css(styles.titleContainer) },\n                React.createElement(\"div\", { className: css(styles.value, styles.usageValue) },\n                    usage,\n                    React.createElement(\"div\", { className: css(styles.text) },\n                        React.createElement(\"div\", null, usageLabel)))),\n            React.createElement(\"div\", { className: css(styles.titleContainer) },\n                React.createElement(\"div\", { className: css(styles.value) },\n                    request,\n                    React.createElement(\"div\", { className: css(styles.text) }, requestLabel)))));\n    }\n    else {\n        const units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${units}`);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { className: css(styles.valueContainer) },\n                React.createElement(\"div\", { className: css(styles.value) }, cost),\n                React.createElement(\"div\", { className: css(styles.text) },\n                    React.createElement(\"div\", null, costLabel))),\n            Boolean(usageLabel) && (React.createElement(\"div\", { className: css(styles.valueContainer) },\n                React.createElement(\"div\", { className: css(styles.value) },\n                    usage,\n                    Boolean(showUnits) && (React.createElement(\"span\", { className: css(styles.text) }, unitsLabel))),\n                React.createElement(\"div\", { className: css(styles.text) },\n                    React.createElement(\"div\", null, usageLabel))))));\n    }\n};\nconst OcpOnAwsReportSummaryDetails = translate()(OcpOnAwsReportSummaryDetailsBase);\nexport { OcpOnAwsReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { styles } from './ocpOnAwsReportSummaryItem.styles';\nconst OcpOnAwsReportSummaryItemBase = ({ label, formatOptions, formatValue, t, totalValue, units, value }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nOcpOnAwsReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst OcpOnAwsReportSummaryItem = translate()(OcpOnAwsReportSummaryItemBase);\nexport { OcpOnAwsReportSummaryItem };\n","import React from 'react';\nimport { translate } from 'react-i18next';\nimport { getComputedOcpOnAwsReportItems, } from 'utils/getComputedOcpOnAwsReportItems';\nclass OcpOnAwsReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedOcpOnAwsReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { report, children, t } = this.props;\n        if (!report) {\n            return `${t('loading')}...`;\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst OcpOnAwsReportSummaryItems = translate()(OcpOnAwsReportSummaryItemsBase);\nexport { OcpOnAwsReportSummaryItems, };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nimport { styles } from './ocpOnAwsReportSummaryTrend.styles';\nconst OcpOnAwsReportSummaryTrend = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { OcpOnAwsReportSummaryTrend };\n","import { css } from '@patternfly/react-styles';\nimport { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nimport { styles } from './ocpOnAwsReportSummaryTrend.styles';\nconst OcpOnAwsReportSummaryUsage = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { OcpOnAwsReportSummaryUsage };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, Tooltip, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpReportSummary.styles';\nconst OcpReportSummaryBase = ({ children, detailsLink, title, subTitle, subTitleTooltip = subTitle, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && (React.createElement(Tooltip, { content: subTitleTooltip, enableFlip: true },\n            React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)))),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? `${t('loading')}...` : children),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst OcpReportSummary = translate()(OcpReportSummaryBase);\nexport { OcpReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '440px',\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Grid, GridItem, Title, Tooltip, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpReportSummaryAlt.styles';\nconst OcpReportSummaryAltBase = ({ children, detailsLink, status, subTitle, subTitleTooltip = subTitle, t, tabs, title, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(Grid, { gutter: \"md\" },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.cost) },\n                    React.createElement(CardHeader, null,\n                        React.createElement(Title, { size: \"lg\" }, title),\n                        Boolean(subTitle) && (React.createElement(Tooltip, { content: subTitleTooltip, enableFlip: true },\n                            React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)))),\n                    React.createElement(CardBody, null, status === 1 /* inProgress */\n                        ? `${t('loading')}...`\n                        : children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.tops) }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst OcpReportSummaryAlt = translate()(OcpReportSummaryAltBase);\nexport { OcpReportSummaryAlt };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    text: {\n        display: 'flex',\n        alignItems: 'flex-end',\n        marginLeft: global_spacer_sm.value,\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    titleContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        minWidth: '175px',\n        width: '50%',\n    },\n    usageText: {\n        marginRight: global_spacer_sm.value,\n    },\n    usageValue: {\n        marginRight: global_spacer_sm.value,\n    },\n    value: {\n        display: 'flex',\n        color: global_Color_100.var,\n        fontSize: global_FontSize_4xl.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpReportSummaryDetails.styles';\nconst OcpReportSummaryDetailsBase = ({ formatValue, formatOptions, report, reportType = \"cost\" /* cost */, requestLabel, usageLabel, }) => {\n    let value = '----';\n    let requestValue = '----';\n    const hasTotal = report && report.meta && report.meta.total;\n    const units = hasTotal && report.meta.total.cost\n        ? report.meta.total.cost.units\n        : reportType === \"cost\" /* cost */\n            ? 'USD'\n            : 'GB';\n    if (hasTotal) {\n        value = formatValue(report.meta.total.cost ? report.meta.total.cost.value : 0, units, formatOptions);\n        if (reportType !== \"cost\" /* cost */) {\n            requestValue = formatValue(report.meta.total.request ? report.meta.total.request.value : 0, units, formatOptions);\n        }\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: css(styles.titleContainer) },\n            React.createElement(\"div\", { className: css(styles.value, styles.usageValue) },\n                value,\n                React.createElement(\"div\", { className: css(styles.text) },\n                    React.createElement(\"div\", null, usageLabel)))),\n        React.createElement(\"div\", { className: css(styles.titleContainer) }, Boolean(reportType !== \"cost\" /* cost */) && (React.createElement(\"div\", { className: css(styles.value) },\n            requestValue,\n            React.createElement(\"div\", { className: css(styles.text) }, requestLabel))))));\n};\nconst OcpReportSummaryDetails = translate()(OcpReportSummaryDetailsBase);\nexport { OcpReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { styles } from './ocpReportSummaryItem.styles';\nconst OcpReportSummaryItemBase = ({ formatOptions, formatValue, label, t, totalValue, units, value, }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nOcpReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst OcpReportSummaryItem = translate()(OcpReportSummaryItemBase);\nexport { OcpReportSummaryItem };\n","import React from 'react';\nimport { translate } from 'react-i18next';\nimport { getComputedOcpReportItems, } from 'utils/getComputedOcpReportItems';\nclass OcpReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedOcpReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { report, children, t } = this.props;\n        if (!report) {\n            return `${t('loading')}...`;\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst OcpReportSummaryItems = translate()(OcpReportSummaryItemsBase);\nexport { OcpReportSummaryItems, };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nimport { styles } from './ocpReportSummaryTrend.styles';\nconst OcpReportSummaryTrend = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { OcpReportSummaryTrend };\n","import { css } from '@patternfly/react-styles';\nimport { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nimport { styles } from './ocpReportSummaryTrend.styles';\nconst OcpReportSummaryUsage = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { OcpReportSummaryUsage };\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the month\n *\n * @example\n * // Which month is 29 February 2012?\n * var result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\nfunction getMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var month = date.getMonth()\n  return month\n}\n\nmodule.exports = getMonth\n","import { StyleSheet } from '@patternfly/react-styles';\nexport default StyleSheet.parse(`.pf-c-tabs{--pf-c-tabs__item--BackgroundColor:var(--pf-global--BackgroundColor--100);--pf-c-tabs__item--BorderColor:var(--pf-global--BorderColor--light-200);--pf-c-tabs__item--BorderWidth:var(--pf-global--BorderWidth--sm);--pf-c-tabs__item--m-current--ZIndex:var(--pf-global--ZIndex--sm);--pf-c-tabs__item--m-current--Color:var(--pf-global--active-color--100);--pf-c-tabs__item--m-current--BorderTopWidth:var(--pf-global--BorderWidth--md);--pf-c-tabs__item--hover--Color:var(--pf-global--Color--dark-200);--pf-c-tabs__button--Background:transparent;--pf-c-tabs__button--PaddingTop:var(--pf-global--spacer--sm);--pf-c-tabs__button--PaddingRight:var(--pf-global--spacer--sm);--pf-c-tabs__button--PaddingBottom:var(--pf-global--spacer--sm);--pf-c-tabs__button--PaddingLeft:var(--pf-global--spacer--sm);--pf-c-tabs__scroll-button--Width:var(--pf-global--spacer--xl);--pf-c-tabs__scroll-button--ZIndex:var(--pf-global--ZIndex--md);position:relative;display:flex;flex-direction:column;align-items:flex-start;}.pf-c-tabs .pf-c-tabs__scroll-button{display:none;visibility:hidden;}.pf-c-tabs.pf-m-start .pf-c-tabs__scroll-button:nth-of-type(1),.pf-c-tabs.pf-m-end .pf-c-tabs__scroll-button:nth-of-type(2){display:block;visibility:visible;}.pf-c-tabs.pf-m-start-current .pf-c-tabs__scroll-button:nth-of-type(1)::after,.pf-c-tabs.pf-m-end-current .pf-c-tabs__scroll-button:nth-of-type(2)::after{position:absolute;top:0;right:0;bottom:0;left:0;margin-left:var(--pf-c-tabs__item--BorderWidth);content:\"\";border-top:var(--pf-c-tabs__item--m-current--BorderTopWidth) solid var(--pf-c-tabs__item--m-current--Color);}+ .pf-c-tabs.pf-m-tabs-secondary{margin-top:calc(-1 * var(--pf-c-tabs__item--BorderWidth));border-top:var(--pf-c-tabs__item--BorderWidth) solid var(--pf-c-tabs__item--BorderColor);}+ .pf-c-tabs.pf-m-tabs-secondary .pf-c-tabs__scroll-button{margin-top:calc(-1 * var(--pf-c-tabs__item--BorderWidth));}.pf-c-tabs.pf-m-fill .pf-c-tabs__list{width:100%;}.pf-c-tabs.pf-m-fill .pf-c-tabs__item{flex:1;white-space:nowrap;}.pf-c-tabs.pf-m-fill .pf-c-tabs__item:first-of-type .pf-c-tabs__button::before{border-left:none;}.pf-c-tabs.pf-m-fill .pf-c-tabs__item:last-of-type .pf-c-tabs__button::before{border-right:none;}.pf-c-tabs.pf-m-fill .pf-c-tabs__item .pf-c-tabs__button{width:100%;}.pf-c-tabs__list{position:relative;display:flex;max-width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch;}.pf-c-tabs__list .pf-c-tabs__item:last-of-type .pf-c-tabs__button::before{border-right-width:var(--pf-c-tabs__item--BorderWidth);}.pf-c-tabs__item{flex:none;}.pf-c-tabs__item:not(.pf-m-current):hover .pf-c-tabs__button::after{position:absolute;top:0;right:0;bottom:0;left:0;margin-left:var(--pf-c-tabs__item--BorderWidth);content:\"\";border-top:var(--pf-c-tabs__item--m-current--BorderTopWidth) solid var(--pf-c-tabs__item--hover--Color);}.pf-c-tabs__item.pf-m-current .pf-c-tabs__button{z-index:var(--pf-c-tabs__item--m-current--ZIndex);color:var(--pf-c-tabs__item--m-current--Color);}.pf-c-tabs__item.pf-m-current .pf-c-tabs__button::before{border-bottom-color:var(--pf-c-tabs__item--BackgroundColor);}.pf-c-tabs__item.pf-m-current .pf-c-tabs__button::after{position:absolute;top:0;right:0;bottom:0;left:0;margin-left:var(--pf-c-tabs__item--BorderWidth);content:\"\";border-top:var(--pf-c-tabs__item--m-current--BorderTopWidth) solid var(--pf-c-tabs__item--m-current--Color);}.pf-m-tabs-secondary .pf-c-tabs__item .pf-c-tabs__button::before,.pf-m-tabs-secondary .pf-c-tabs__item .pf-c-tabs__button::after,.pf-m-tabs-secondary .pf-c-tabs__item .pf-c-tabs__button:hover::after{content:none;}.pf-m-tabs-secondary .pf-c-tabs__item:not(.pf-m-current) .pf-c-tabs__button:hover{color:var(--pf-c-tabs__item--hover--Color);}.pf-c-tabs__button{position:relative;padding:var(--pf-c-tabs__button--PaddingTop) var(--pf-c-tabs__button--PaddingRight) var(--pf-c-tabs__button--PaddingBottom) var(--pf-c-tabs__button--PaddingLeft);user-select:none;background:var(--pf-c-tabs__button--Background);border:0;}.pf-c-tabs__button::before{position:absolute;top:0;right:0;bottom:0;left:0;content:\"\";border:solid var(--pf-c-tabs__item--BorderColor);border-width:var(--pf-c-tabs__item--BorderWidth) 0 var(--pf-c-tabs__item--BorderWidth) var(--pf-c-tabs__item--BorderWidth);}.pf-c-tabs__scroll-item{position:absolute;top:0;bottom:0;width:var(--pf-c-tabs__scroll-button--Width);}.pf-c-tabs__scroll-item:first-of-type{left:0;}.pf-c-tabs__scroll-item:last-of-type{right:0;}.pf-c-tabs__scroll-button{position:absolute;top:0;bottom:0;z-index:var(--pf-c-tabs__scroll-button--ZIndex);width:var(--pf-c-tabs__scroll-button--Width);line-height:1;background-color:var(--pf-c-tabs__item--BackgroundColor);border:initial;}.pf-c-tabs__scroll-button:nth-of-type(2){right:0;}.pf-c-tabs__scroll-button::before{position:absolute;top:0;right:0;bottom:0;left:0;content:\"\";border:var(--pf-c-tabs__item--BorderWidth) solid var(--pf-c-tabs__item--BorderColor);}.pf-c-tabs__scroll-button:hover::after{position:absolute;top:0;right:0;bottom:0;left:0;content:\"\";border-top:var(--pf-c-tabs__item--m-current--BorderTopWidth) solid var(--pf-c-tabs__item--hover--Color);}`);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from '@patternfly/react-styles';\nvar propTypes = {\n  /** the index of the active tab */\n  activeKey: PropTypes.number,\n\n  /** content rendered inside the tab content area. */\n  child: PropTypes.node,\n\n  /** id passed from parent to identify the content section */\n  id: PropTypes.string.isRequired\n};\nvar defaultProps = {\n  activeKey: 0,\n  child: null\n};\n\nvar TabContent = function TabContent(_ref) {\n  var id = _ref.id,\n      activeKey = _ref.activeKey,\n      child = _ref.child,\n      props = _objectWithoutProperties(_ref, [\"id\", \"activeKey\", \"child\"]);\n\n  return React.createElement(\"section\", _extends({\n    hidden: child.props.eventKey !== activeKey,\n    className: css('pf-c-tab-content', child.props.className),\n    id: \"pf-tab-section-\".concat(child.props.eventKey, \"-\").concat(id),\n    \"aria-labelledby\": \"pf-tab-\".concat(child.props.eventKey, \"-\").concat(id),\n    role: \"tabpanel\",\n    tabIndex: \"0\"\n  }, props), child.props.children);\n};\n\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;\nexport default TabContent;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport styles from \"../../@patternfly/patternfly/components/Tabs/tabs.css.js\";\nimport { css } from '@patternfly/react-styles';\nimport PropTypes from 'prop-types';\nimport { AngleLeftIcon, AngleRightIcon } from '@patternfly/react-icons';\nimport { getUniqueId, isElementInView, sideElementIsOutOfView } from '../../helpers/util';\nimport { SIDE } from '../../helpers/constants';\nimport TabContent from './TabContent';\nvar propTypes = {\n  /** content rendered inside the Tabs Component. */\n  children: PropTypes.node.isRequired,\n\n  /** additional classes added to the Tabs */\n  className: PropTypes.string,\n\n  /** the index of the active tab */\n  activeKey: PropTypes.number,\n\n  /** handel tab selection */\n  onSelect: PropTypes.func,\n\n  /** Enables the filled tab list layout */\n  isFilled: PropTypes.bool,\n\n  /** Enables Secondary Tab styling */\n  isSecondary: PropTypes.bool,\n\n  /** Aria Label for the left Scroll Button */\n  leftScrollAriaLabel: PropTypes.string,\n\n  /** Aria Label for the right Scroll Button */\n  rightScrollAriaLabel: PropTypes.string\n};\nvar defaultProps = {\n  className: '',\n  activeKey: 0,\n  onSelect: function onSelect() {\n    return undefined;\n  },\n  isFilled: false,\n  isSecondary: false,\n  leftScrollAriaLabel: 'Scroll left',\n  rightScrollAriaLabel: 'Scroll Right'\n};\n\nvar Tabs =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tabs, _React$Component);\n\n  function Tabs() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Tabs);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Tabs)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      showLeftScrollButton: false,\n      showRightScrollButton: false,\n      highlightLeftScrollButton: false,\n      highlightRightScrollButton: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"id\", getUniqueId());\n\n    _defineProperty(_assertThisInitialized(_this), \"tabList\", React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleScrollButtons\", function () {\n      if (_this.tabList.current) {\n        var container = _this.tabList.current; // get first element and check if it is in view\n\n        var showLeftScrollButton = !isElementInView(container, container.firstChild, false); // get lase element and check if it is in view\n\n        var showRightScrollButton = !isElementInView(container, container.lastChild, false); // determine if selected tab is out of view and apply styles\n\n        var selectedTab;\n        var childrenArr = Array.from(container.children);\n        childrenArr.forEach(function (child) {\n          var className = child.className;\n\n          if (className.search('pf-m-current') > 0) {\n            selectedTab = child;\n          }\n        });\n        var sideOutOfView = sideElementIsOutOfView(container, selectedTab);\n\n        _this.setState({\n          showLeftScrollButton: showLeftScrollButton,\n          showRightScrollButton: showRightScrollButton,\n          highlightLeftScrollButton: (sideOutOfView === SIDE.LEFT || sideOutOfView === SIDE.BOTH) && showLeftScrollButton,\n          highlightRightScrollButton: (sideOutOfView === SIDE.RIGHT || sideOutOfView === SIDE.BOTH) && showRightScrollButton\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"scrollLeft\", function () {\n      // find first Element that is fully in view on the left, then scroll to the element before it\n      if (_this.tabList.current) {\n        var container = _this.tabList.current;\n        var childrenArr = Array.from(container.children);\n        var firstElementInView;\n        var lastElementOutOfView;\n        var i;\n\n        for (i = 0; i < childrenArr.length && !firstElementInView; i++) {\n          if (isElementInView(container, childrenArr[i], false)) {\n            firstElementInView = childrenArr[i];\n            lastElementOutOfView = childrenArr[i - 1];\n          }\n        }\n\n        lastElementOutOfView && (container.scrollLeft -= lastElementOutOfView.scrollWidth);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"scrollRight\", function () {\n      // find last Element that is fully in view on the right, then scroll to the element after it\n      if (_this.tabList.current) {\n        var container = _this.tabList.current;\n        var childrenArr = Array.from(container.children);\n        var lastElementInView;\n        var firstElementOutOfView;\n        var i;\n\n        for (i = childrenArr.length - 1; i >= 0 && !lastElementInView; i--) {\n          if (isElementInView(container, childrenArr[i], false)) {\n            lastElementInView = childrenArr[i];\n            firstElementOutOfView = childrenArr[i + 1];\n          }\n        }\n\n        firstElementOutOfView && (container.scrollLeft += firstElementOutOfView.scrollWidth);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Tabs, [{\n    key: \"handleTabClick\",\n    value: function handleTabClick(event, eventKey) {\n      this.props.onSelect(event, eventKey);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('resize', this.handleScrollButtons, false); // call the handle resize function to check if scroll buttons should be shown\n\n      this.handleScrollButtons();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener('resize', this.handleScrollButtons, false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          className = _this$props.className,\n          children = _this$props.children,\n          activeKey = _this$props.activeKey,\n          isFilled = _this$props.isFilled,\n          isSecondary = _this$props.isSecondary,\n          leftScrollAriaLabel = _this$props.leftScrollAriaLabel,\n          rightScrollAriaLabel = _this$props.rightScrollAriaLabel,\n          props = _objectWithoutProperties(_this$props, [\"className\", \"children\", \"activeKey\", \"isFilled\", \"isSecondary\", \"leftScrollAriaLabel\", \"rightScrollAriaLabel\"]);\n\n      var _this$state = this.state,\n          showLeftScrollButton = _this$state.showLeftScrollButton,\n          showRightScrollButton = _this$state.showRightScrollButton,\n          highlightLeftScrollButton = _this$state.highlightLeftScrollButton,\n          highlightRightScrollButton = _this$state.highlightRightScrollButton;\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", _extends({}, props, {\n        className: css(styles.tabs, isFilled && styles.modifiers.fill, isSecondary && styles.modifiers.tabsSecondary, showLeftScrollButton && styles.modifiers.start, showRightScrollButton && styles.modifiers.end, highlightLeftScrollButton && styles.modifiers.startCurrent, highlightRightScrollButton && styles.modifiers.endCurrent, className)\n      }), !isSecondary && React.createElement(\"button\", {\n        className: css(styles.tabsScrollButton),\n        variant: \"plain\",\n        \"aria-label\": leftScrollAriaLabel,\n        onClick: this.scrollLeft\n      }, React.createElement(AngleLeftIcon, null)), React.createElement(\"ul\", {\n        className: css(styles.tabsList),\n        ref: this.tabList,\n        onScroll: this.handleScrollButtons\n      }, children.map(function (child, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          className: css(styles.tabsItem, child.props.eventKey === activeKey && styles.modifiers.current, className)\n        }, React.createElement(\"button\", {\n          className: css(styles.tabsButton),\n          onClick: function onClick(event) {\n            return _this2.handleTabClick(event, child.props.eventKey);\n          },\n          id: \"pf-tab-\".concat(child.props.eventKey, \"-\").concat(child.props.id || _this2.id),\n          \"aria-controls\": \"pf-tab-section-\".concat(child.props.eventKey, \"-\").concat(child.props.id || _this2.id)\n        }, child.props.title));\n      })), !isSecondary && React.createElement(\"button\", {\n        className: css(styles.tabsScrollButton),\n        variant: \"plain\",\n        \"aria-label\": rightScrollAriaLabel,\n        onClick: this.scrollRight\n      }, React.createElement(AngleRightIcon, null))), children.map(function (child, index) {\n        return React.createElement(TabContent, {\n          key: index,\n          activeKey: activeKey,\n          child: child,\n          index: index,\n          id: child.props.id || _this2.id\n        });\n      }));\n    }\n  }]);\n\n  return Tabs;\n}(React.Component);\n\n_defineProperty(Tabs, \"propTypes\", propTypes);\n\n_defineProperty(Tabs, \"defaultProps\", defaultProps);\n\nexport default Tabs;","function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar propTypes = {\n  /** content rendered inside the Tab content area. */\n  children: PropTypes.node,\n\n  /** additional classes added to the Modal */\n  className: PropTypes.string,\n\n  /** Tab title */\n  title: PropTypes.string.isRequired,\n\n  /** uniquely identifies the tab */\n  eventKey: PropTypes.number.isRequired\n};\nvar defaultProps = {\n  children: null,\n  className: ''\n};\n\nvar Tab = function Tab(_ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      title = _ref.title,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutProperties(_ref, [\"className\", \"children\", \"title\", \"eventKey\"]);\n\n  return React.createElement(React.Fragment, null, children);\n};\n\nTab.propTypes = propTypes;\nTab.defaultProps = defaultProps;\nexport default Tab;","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"invariant\";\nimport { createLocation } from \"history\";\n\nvar isModifiedEvent = function isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n};\n\n/**\n * The public API for rendering a history-aware <a>.\n */\n\nvar Link = function (_React$Component) {\n  _inherits(Link, _React$Component);\n\n  function Link() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Link);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (event) {\n      if (_this.props.onClick) _this.props.onClick(event);\n\n      if (!event.defaultPrevented && // onClick prevented default\n      event.button === 0 && // ignore everything but left clicks\n      !_this.props.target && // let browser handle \"target=_blank\" etc.\n      !isModifiedEvent(event) // ignore clicks with modifier keys\n      ) {\n          event.preventDefault();\n\n          var history = _this.context.router.history;\n          var _this$props = _this.props,\n              replace = _this$props.replace,\n              to = _this$props.to;\n\n\n          if (replace) {\n            history.replace(to);\n          } else {\n            history.push(to);\n          }\n        }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Link.prototype.render = function render() {\n    var _props = this.props,\n        replace = _props.replace,\n        to = _props.to,\n        innerRef = _props.innerRef,\n        props = _objectWithoutProperties(_props, [\"replace\", \"to\", \"innerRef\"]); // eslint-disable-line no-unused-vars\n\n    invariant(this.context.router, \"You should not use <Link> outside a <Router>\");\n\n    invariant(to !== undefined, 'You must specify the \"to\" property');\n\n    var history = this.context.router.history;\n\n    var location = typeof to === \"string\" ? createLocation(to, null, null, history.location) : to;\n\n    var href = history.createHref(location);\n    return React.createElement(\"a\", _extends({}, props, { onClick: this.handleClick, href: href, ref: innerRef }));\n  };\n\n  return Link;\n}(React.Component);\n\nLink.propTypes = {\n  onClick: PropTypes.func,\n  target: PropTypes.string,\n  replace: PropTypes.bool,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  innerRef: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n};\nLink.defaultProps = {\n  replace: false\n};\nLink.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n      replace: PropTypes.func.isRequired,\n      createHref: PropTypes.func.isRequired\n    }).isRequired\n  }).isRequired\n};\n\n\nexport default Link;","import { Button } from '@patternfly/react-core';\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nconst CastedButton = Button;\nconst Link = props => (React.createElement(CastedButton, Object.assign({ component: RouterLink, variant: \"link\" }, props)));\nexport { Link };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_xl } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    tabs: {\n        marginTop: global_spacer_xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n});\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { getQuery, parseQuery } from 'api/awsQuery';\nimport { transformAwsReport } from 'components/charts/commonChart/chartUtils';\nimport { Link } from 'components/link';\nimport { AwsReportSummary, AwsReportSummaryAlt, AwsReportSummaryDetails, AwsReportSummaryItem, AwsReportSummaryItems, AwsReportSummaryTrend, } from 'components/reports/awsReportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport getYear from 'date-fns/get_year';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { awsDashboardActions, awsDashboardSelectors, } from 'store/awsDashboard';\nimport { awsReportsSelectors } from 'store/awsReports';\nimport { createMapStateToProps } from 'store/common';\nimport { formatValue } from 'utils/formatValue';\nimport { styles } from './awsDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nclass AwsDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = () => {\n            const { currentQuery } = this.props;\n            const groupBy = parseQuery(currentQuery).group_by;\n            return `/aws?${getQuery({\n                group_by: groupBy,\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n        this.getChart = (height) => {\n            const { currentReport, previousReport, t, trend } = this.props;\n            const currentData = transformAwsReport(currentReport, trend.type);\n            const previousData = transformAwsReport(previousReport, trend.type);\n            return (React.createElement(AwsReportSummaryTrend, { currentData: currentData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousData, title: t(trend.titleKey) }));\n        };\n        this.getDetails = () => {\n            const { currentReport, details, reportType } = this.props;\n            return (React.createElement(AwsReportSummaryDetails, { costLabel: this.getDetailsLabel(details.costKey), formatOptions: details.formatOptions, formatValue: formatValue, report: currentReport, reportType: reportType, showUnits: details.showUnits, usageLabel: this.getDetailsLabel(details.usageKey) }));\n        };\n        this.getDetailsLabel = (key) => {\n            const { t } = this.props;\n            return key ? t(key) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, isDetailsLink } = this.props;\n            return (isDetailsLink && (React.createElement(Link, { to: this.buildDetailsLink() }, this.getDetailsLinkTitle(currentTab))));\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(AwsReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), subTitleTooltip: this.getSubTitleTooltip(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(180)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            return t('aws_dashboard.widget_subtitle', { month });\n        };\n        this.getSubTitleTooltip = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'DD');\n            const startDate = formatDate(startOfMonth(today), 'DD');\n            const year = getYear(today);\n            return t('aws_dashboard.widget_subtitle_tooltip', {\n                count: getDate(today),\n                endDate,\n                month,\n                startDate,\n                year,\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { tabsReport } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) },\n                React.createElement(\"div\", { className: css(styles.tabItems) },\n                    React.createElement(AwsReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, reportType, tabsReport, topItems } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            const isCostReport = reportType === \"cost\" /* cost */ ||\n                reportType === \"database\" /* database */ ||\n                reportType === \"network\" /* network */;\n            if (activeTab === currentTab) {\n                return (React.createElement(AwsReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: isCostReport\n                        ? tabsReport.meta.total.cost.value\n                        : tabsReport.meta.total.usage.value, units: reportItem.units, value: reportItem.cost }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getVerticalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(AwsReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), subTitleTooltip: this.getSubTitleTooltip(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(75),\n                React.createElement(\"div\", { className: css(styles.tabs) }, this.getTabs())));\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, updateTab, widgetId } = this.props;\n        updateTab(id, availableTabs[0]);\n        fetchReports(widgetId);\n    }\n    render() {\n        const { isHorizontal = false } = this.props;\n        return Boolean(isHorizontal)\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: awsReportsSelectors.selectReport(state, widget.reportType, queries.current), currentReportFetchStatus: awsReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current), previousReport: awsReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabsReport: awsReportsSelectors.selectReport(state, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: awsDashboardActions.fetchWidgetReports,\n    updateTab: awsDashboardActions.changeWidgetTab,\n};\nconst AwsDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(AwsDashboardWidgetBase));\nexport { AwsDashboardWidget, AwsDashboardWidgetBase };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { awsDashboardSelectors } from 'store/awsDashboard';\nimport { createMapStateToProps } from 'store/common';\nimport { AwsDashboardWidget } from './awsDashboardWidget';\nconst AwsDashboardBase = ({ selectWidgets, t, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.isHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(AwsDashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { xl: 4, lg: 6, key: widgetId },\n            React.createElement(AwsDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: awsDashboardSelectors.selectWidgets(state),\n        widgets: awsDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsDashboard = translate()(connect(mapStateToProps, {})(AwsDashboardBase));\nexport default AwsDashboard;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_xl } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    tabs: {\n        marginTop: global_spacer_xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n});\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { getQuery, parseQuery } from 'api/ocpQuery';\nimport { transformOcpReport } from 'components/charts/commonChart/chartUtils';\nimport { Link } from 'components/link';\nimport { OcpReportSummary, OcpReportSummaryAlt, OcpReportSummaryDetails, OcpReportSummaryItem, OcpReportSummaryItems, OcpReportSummaryTrend, OcpReportSummaryUsage, } from 'components/reports/ocpReportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport getYear from 'date-fns/get_year';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardActions, ocpDashboardSelectors, } from 'store/ocpDashboard';\nimport { ocpReportsSelectors } from 'store/ocpReports';\nimport { formatValue } from 'utils/formatValue';\nimport { styles } from './ocpDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nclass OcpDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = () => {\n            const { currentQuery } = this.props;\n            const groupBy = parseQuery(currentQuery).group_by;\n            return `/ocp?${getQuery({\n                group_by: groupBy,\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id } = this.props;\n            const tab = availableTabs[tabIndex];\n            this.props.updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n        this.getChart = (height) => {\n            const { currentReport, previousReport, reportType, t, trend } = this.props;\n            const reportItem = reportType === \"cost\" /* cost */ ? 'cost' : 'usage';\n            const currentUsageData = transformOcpReport(currentReport, trend.type, 'date', reportItem);\n            const previousUsageData = transformOcpReport(previousReport, trend.type, 'date', reportItem);\n            const currentRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpReport(currentReport, trend.type, 'date', 'request')\n                : undefined;\n            const previousRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpReport(previousReport, trend.type, 'date', 'request')\n                : undefined;\n            return (React.createElement(React.Fragment, null, Boolean(reportType === \"cost\" /* cost */) ? (React.createElement(OcpReportSummaryTrend, { currentData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousUsageData, title: t(trend.titleKey) })) : (React.createElement(OcpReportSummaryUsage, { currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousRequestData: previousRequestData, previousUsageData: previousUsageData, title: t(trend.titleKey) }))));\n        };\n        this.getDetails = () => {\n            const { currentReport, details, reportType } = this.props;\n            return (React.createElement(OcpReportSummaryDetails, { formatOptions: details.formatOptions, formatValue: formatValue, report: currentReport, reportType: reportType, requestLabel: this.getDetailsLabel(details.requestKey), usageLabel: this.getDetailsLabel(details.usageKey) }));\n        };\n        this.getDetailsLabel = (key) => {\n            const { t } = this.props;\n            return key ? t(key) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, isDetailsLink } = this.props;\n            return (isDetailsLink && (React.createElement(Link, { to: this.buildDetailsLink() }, this.getDetailsLinkTitle(currentTab))));\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), subTitleTooltip: this.getSubTitleTooltip(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(180)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            return t('ocp_dashboard.widget_subtitle', { month });\n        };\n        this.getSubTitleTooltip = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'DD');\n            const startDate = formatDate(startOfMonth(today), 'DD');\n            const year = getYear(today);\n            return t('ocp_dashboard.widget_subtitle_tooltip', {\n                count: getDate(today),\n                endDate,\n                month,\n                startDate,\n                year,\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { tabsReport } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) },\n                React.createElement(\"div\", { className: css(styles.tabItems) },\n                    React.createElement(OcpReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, reportType, tabsReport, topItems } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            if (activeTab === currentTab) {\n                return (React.createElement(OcpReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: reportType === \"cost\" /* cost */\n                        ? tabsReport.meta.total.cost.value\n                        : tabsReport.meta.total.usage.value, units: reportItem.units, value: reportType === \"cost\" /* cost */\n                        ? reportItem.cost\n                        : reportItem.usage }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getVerticalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), subTitleTooltip: this.getSubTitleTooltip(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(75),\n                React.createElement(\"div\", { className: css(styles.tabs) }, this.getTabs())));\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, widgetId } = this.props;\n        this.props.updateTab(id, availableTabs[0]);\n        fetchReports(widgetId);\n    }\n    render() {\n        const { isHorizontal = false } = this.props;\n        return Boolean(isHorizontal)\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: ocpReportsSelectors.selectReport(state, widget.reportType, queries.current), currentReportFetchStatus: ocpReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current), previousReport: ocpReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabsReport: ocpReportsSelectors.selectReport(state, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpDashboardActions.fetchWidgetReports,\n    updateTab: ocpDashboardActions.changeWidgetTab,\n};\nconst OcpDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(OcpDashboardWidgetBase));\nexport { OcpDashboardWidget, OcpDashboardWidgetBase };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardSelectors } from 'store/ocpDashboard';\nimport { OcpDashboardWidget } from './ocpDashboardWidget';\nconst OcpDashboardBase = ({ selectWidgets, t, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.isHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(OcpDashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { xl: 4, lg: 6, key: widgetId },\n            React.createElement(OcpDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: ocpDashboardSelectors.selectWidgets(state),\n        widgets: ocpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpDashboard = translate()(connect(mapStateToProps, {})(OcpDashboardBase));\nexport default OcpDashboard;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_xl } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n});\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { getQuery, parseQuery } from 'api/ocpOnAwsQuery';\nimport { transformOcpOnAwsReport } from 'components/charts/commonChart/chartUtils';\nimport { Link } from 'components/link';\nimport { OcpOnAwsReportSummary, OcpOnAwsReportSummaryAlt, OcpOnAwsReportSummaryDetails, OcpOnAwsReportSummaryItem, OcpOnAwsReportSummaryItems, OcpOnAwsReportSummaryTrend, OcpOnAwsReportSummaryUsage, } from 'components/reports/ocpOnAwsReportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport getYear from 'date-fns/get_year';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpOnAwsDashboardActions, ocpOnAwsDashboardSelectors, } from 'store/ocpOnAwsDashboard';\nimport { ocpOnAwsReportsSelectors } from 'store/ocpOnAwsReports';\nimport { formatValue } from 'utils/formatValue';\nimport { styles } from './ocpOnAwsDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nclass OcpOnAwsDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = () => {\n            const { currentQuery } = this.props;\n            const groupBy = parseQuery(currentQuery).group_by;\n            return `/ocp?${getQuery({\n                group_by: groupBy,\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n        this.getChart = (height) => {\n            const { currentReport, previousReport, reportType, t, trend } = this.props;\n            const reportItem = reportType === \"cost\" /* cost */ ? 'infrastructure_cost' : 'usage';\n            const currentUsageData = transformOcpOnAwsReport(currentReport, trend.type, 'date', reportItem);\n            const previousUsageData = transformOcpOnAwsReport(previousReport, trend.type, 'date', reportItem);\n            const currentRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpOnAwsReport(currentReport, trend.type, 'date', 'request')\n                : undefined;\n            const previousRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpOnAwsReport(previousReport, trend.type, 'date', 'request')\n                : undefined;\n            return (React.createElement(React.Fragment, null, Boolean(reportType === \"cost\" /* cost */ ||\n                reportType === \"instance_type\" /* instanceType */ ||\n                reportType === \"storage\" /* storage */) ? (React.createElement(OcpOnAwsReportSummaryTrend, { currentData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousUsageData, title: t(trend.titleKey) })) : (React.createElement(OcpOnAwsReportSummaryUsage, { currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousRequestData: previousRequestData, previousUsageData: previousUsageData, title: t(trend.titleKey) }))));\n        };\n        this.getDetails = () => {\n            const { currentReport, details, reportType } = this.props;\n            return (React.createElement(OcpOnAwsReportSummaryDetails, { costLabel: this.getDetailsLabel(details.costKey), formatOptions: details.formatOptions, formatValue: formatValue, report: currentReport, reportType: reportType, requestLabel: this.getDetailsLabel(details.requestKey), showUnits: details.showUnits, usageLabel: this.getDetailsLabel(details.usageKey) }));\n        };\n        this.getDetailsLabel = (key) => {\n            const { t } = this.props;\n            return key ? t(key) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, isDetailsLink } = this.props;\n            return (isDetailsLink && (React.createElement(Link, { to: this.buildDetailsLink() }, this.getDetailsLinkTitle(currentTab))));\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpOnAwsReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), subTitleTooltip: this.getSubTitleTooltip(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(180)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            return t('ocp_on_aws_dashboard.widget_subtitle', { month });\n        };\n        this.getSubTitleTooltip = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'DD');\n            const startDate = formatDate(startOfMonth(today), 'DD');\n            const year = getYear(today);\n            return t('ocp_on_aws_dashboard.widget_subtitle_tooltip', {\n                count: getDate(today),\n                endDate,\n                month,\n                startDate,\n                year,\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { tabsReport } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) },\n                React.createElement(\"div\", { className: css(styles.tabItems) },\n                    React.createElement(OcpOnAwsReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, reportType, tabsReport, topItems } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            const isCostReport = reportType === \"cost\" /* cost */ ||\n                reportType === \"database\" /* database */ ||\n                reportType === \"network\" /* network */;\n            if (activeTab === currentTab) {\n                return (React.createElement(OcpOnAwsReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: isCostReport\n                        ? tabsReport.meta.total.cost.value\n                        : tabsReport.meta.total.usage.value, units: reportItem.units, value: isCostReport ? reportItem.cost : reportItem.usage }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            if (availableTabs) {\n                return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getVerticalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpOnAwsReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), subTitleTooltip: this.getSubTitleTooltip(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(75),\n                this.getTabs()));\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, updateTab, widgetId } = this.props;\n        if (availableTabs) {\n            updateTab(id, availableTabs[0]);\n        }\n        fetchReports(widgetId);\n    }\n    render() {\n        const { isHorizontal = false } = this.props;\n        return Boolean(isHorizontal)\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpOnAwsDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpOnAwsDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: ocpOnAwsReportsSelectors.selectReport(state, widget.reportType, queries.current), currentReportFetchStatus: ocpOnAwsReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current), previousReport: ocpOnAwsReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabsReport: ocpOnAwsReportsSelectors.selectReport(state, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpOnAwsDashboardActions.fetchWidgetReports,\n    updateTab: ocpOnAwsDashboardActions.changeWidgetTab,\n};\nconst OcpOnAwsDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(OcpOnAwsDashboardWidgetBase));\nexport { OcpOnAwsDashboardWidget, OcpOnAwsDashboardWidgetBase, };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpOnAwsDashboardSelectors } from 'store/ocpOnAwsDashboard';\nimport { OcpOnAwsDashboardWidget } from './ocpOnAwsDashboardWidget';\nconst OcpOnAwsDashboardBase = ({ selectWidgets, t, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.isHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(OcpOnAwsDashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { xl: 4, lg: 6, key: widgetId },\n            React.createElement(OcpOnAwsDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: ocpOnAwsDashboardSelectors.selectWidgets(state),\n        widgets: ocpOnAwsDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpOnAwsDashboard = translate()(connect(mapStateToProps, {})(OcpOnAwsDashboardBase));\nexport default OcpOnAwsDashboard;\n","import { Button, ButtonType, ButtonVariant, Tab, Tabs, Title, TitleSize, } from '@patternfly/react-core';\nimport { getProvidersQuery } from 'api/providersQuery';\nimport { ErrorState } from 'components/state/errorState/errorState';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport { NoProvidersState } from 'components/state/noProvidersState/noProvidersState';\nimport AwsDashboard from 'pages/awsDashboard/awsDashboard';\nimport OcpDashboard from 'pages/ocpDashboard/ocpDashboard';\nimport OcpOnAwsDashboard from 'pages/ocpOnAwsDashboard/ocpOnAwsDashboard';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions } from 'store/onboarding';\nimport { awsProvidersQuery, ocpProvidersQuery, providersSelectors, } from 'store/providers';\nimport { getTestProps, testIds } from 'testIds';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"aws\" /* aws */:\n            return 'aws';\n        case \"ocp\" /* ocp */:\n            return 'ocp';\n        case \"ocpOnAws\" /* ocpOnAws */:\n            return 'ocpOnAws';\n    }\n};\nclass OverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.getAddSourceButton = () => {\n            const { t } = this.props;\n            return (React.createElement(Link, { to: \"/sources\" },\n                React.createElement(Button, Object.assign({}, getTestProps(testIds.providers.add_btn), { type: ButtonType.submit, variant: ButtonVariant.secondary }), t('providers.add_source'))));\n        };\n        this.getTab = (tab, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) }, this.getTabItem(tab, index)));\n        };\n        this.getTabItem = (tab, index) => {\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === \"ocpOnAws\" /* ocpOnAws */) {\n                return activeTabKey === index ? React.createElement(OcpOnAwsDashboard, null) : null;\n            }\n            else if (currentTab === \"ocp\" /* ocp */) {\n                return activeTabKey === index ? React.createElement(OcpDashboard, null) : null;\n            }\n            else if (currentTab === \"aws\" /* aws */) {\n                return activeTabKey === index ? React.createElement(AwsDashboard, null) : null;\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { awsProviders, ocpProviders } = this.props;\n            const { activeTabKey } = this.state;\n            const availableTabs = [];\n            if (awsProviders &&\n                awsProviders.meta &&\n                awsProviders.meta.count &&\n                (ocpProviders && ocpProviders.meta && ocpProviders.meta.count)) {\n                availableTabs.push(\"ocpOnAws\" /* ocpOnAws */);\n            }\n            if (ocpProviders && ocpProviders.meta && ocpProviders.meta.count) {\n                availableTabs.push(\"ocp\" /* ocp */);\n            }\n            if (awsProviders && awsProviders.meta && awsProviders.meta.count) {\n                availableTabs.push(\"aws\" /* aws */);\n            }\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            if (tab === \"aws\" /* aws */) {\n                return t('overview.aws');\n            }\n            else if (tab === \"ocp\" /* ocp */) {\n                return t('overview.ocp');\n            }\n            else if (tab === \"ocpOnAws\" /* ocpOnAws */) {\n                return t('overview.ocp_on_aws');\n            }\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    render() {\n        const { awsProviders, awsProvidersError, awsProvidersFetchStatus, ocpProviders, ocpProvidersError, ocpProvidersFetchStatus, t, } = this.props;\n        const error = awsProvidersError || ocpProvidersError;\n        const isLoading = awsProvidersFetchStatus === 1 /* inProgress */ ||\n            ocpProvidersFetchStatus === 1 /* inProgress */;\n        const noAwsProviders = awsProviders !== undefined &&\n            awsProviders.meta !== undefined &&\n            awsProviders.meta.count === 0 &&\n            awsProvidersFetchStatus === 2 /* complete */;\n        const noOcpProviders = ocpProviders !== undefined &&\n            ocpProviders.meta !== undefined &&\n            ocpProviders.meta.count === 0 &&\n            ocpProvidersFetchStatus === 2 /* complete */;\n        const noProviders = noAwsProviders && noOcpProviders;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"section\", { className: \"pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light\" },\n                React.createElement(\"header\", { className: \"pf-u-display-flex pf-u-justify-content-space-between pf-u-align-items-center\" },\n                    React.createElement(Title, { size: TitleSize.lg }, t('overview.title')),\n                    this.getAddSourceButton())),\n            React.createElement(\"section\", { className: \"pf-l-page__main-section pf-c-page__main-section\", \"page-type\": \"cost-management-overview\" }, Boolean(error) ? (React.createElement(ErrorState, { error: error })) : Boolean(noProviders) ? (React.createElement(NoProvidersState, null)) : Boolean(isLoading) ? (React.createElement(LoadingState, null)) : (this.getTabs()))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(state => {\n    const awsProvidersQueryString = getProvidersQuery(awsProvidersQuery);\n    const awsProviders = providersSelectors.selectProviders(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const awsProvidersError = providersSelectors.selectProvidersError(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const awsProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const ocpProvidersQueryString = getProvidersQuery(ocpProvidersQuery);\n    const ocpProviders = providersSelectors.selectProviders(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    const ocpProvidersError = providersSelectors.selectProvidersError(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    const ocpProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    return {\n        awsProviders,\n        awsProvidersError,\n        awsProvidersFetchStatus,\n        awsProvidersQueryString,\n        ocpProviders,\n        ocpProvidersError,\n        ocpProvidersFetchStatus,\n        ocpProvidersQueryString,\n    };\n});\nconst Overview = translate()(connect(mapStateToProps, {\n    openProvidersModal: onboardingActions.openModal,\n})(OverviewBase));\nexport default Overview;\n","import { hot } from 'react-hot-loader';\nimport Overview from './overview';\nexport default hot(module)(Overview);\n"],"sourceRoot":""}