{"version":3,"sources":["webpack://koku-ui/./src/pages/details/common/detailsUtils.ts","webpack://koku-ui/./src/pages/details/components/actions/actions.tsx","webpack://koku-ui/./src/pages/details/components/breakdown/breakdown.styles.ts","webpack://koku-ui/./src/pages/details/components/tag/tag.styles.ts","webpack://koku-ui/./src/pages/details/components/tag/tagView.tsx","webpack://koku-ui/./src/pages/details/components/tag/tagModal.tsx","webpack://koku-ui/./src/pages/details/components/tag/tagLink.tsx","webpack://koku-ui/./src/pages/details/components/breakdown/breakdownHeader.styles.ts","webpack://koku-ui/./src/pages/details/components/breakdown/breakdownHeader.tsx","webpack://koku-ui/./src/pages/details/components/breakdown/breakdownBase.tsx","webpack://koku-ui/./src/pages/details/components/cluster/cluster.styles.ts","webpack://koku-ui/./src/pages/details/components/cluster/clusterModal.styles.ts","webpack://koku-ui/./src/pages/details/components/cluster/clusterView.tsx","webpack://koku-ui/./src/pages/details/components/cluster/clusterModal.tsx","webpack://koku-ui/./src/pages/details/components/cluster/cluster.tsx","webpack://koku-ui/./src/pages/details/components/costChart/costChart.styles.ts","webpack://koku-ui/./src/pages/details/components/costChart/costChart.tsx","webpack://koku-ui/./src/pages/details/components/summary/summaryModal.styles.ts","webpack://koku-ui/./src/pages/details/components/summary/summaryModalView.tsx","webpack://koku-ui/./src/pages/details/components/summary/summaryModal.tsx","webpack://koku-ui/./src/pages/details/components/summary/summaryCard.styles.ts","webpack://koku-ui/./src/pages/details/components/summary/summaryCard.tsx","webpack://koku-ui/./src/pages/details/components/usageChart/usageChart.styles.ts","webpack://koku-ui/./src/pages/details/components/usageChart/usageChart.tsx","webpack://koku-ui/./src/pages/details/components/costOverview/costOverviewBase.tsx","webpack://koku-ui/./src/pages/details/components/dataToolbar/dataToolbar.styles.ts","webpack://koku-ui/./src/pages/details/components/dataToolbar/dataToolbar.tsx","webpack://koku-ui/./src/pages/details/components/export/exportModal.styles.ts","webpack://koku-ui/./src/pages/details/components/export/exportSubmit.tsx","webpack://koku-ui/./src/pages/details/components/export/exportModal.tsx","webpack://koku-ui/./src/pages/details/components/groupBy/groupBy.styles.ts","webpack://koku-ui/./src/pages/details/components/groupBy/groupByOrg.tsx","webpack://koku-ui/./src/pages/details/components/groupBy/groupByTag.tsx","webpack://koku-ui/./src/pages/details/components/groupBy/groupBy.tsx","webpack://koku-ui/./src/components/charts/historicalCostChart/historicalCostChart.styles.ts","webpack://koku-ui/./src/components/charts/historicalCostChart/historicalCostChart.tsx","webpack://koku-ui/./src/pages/details/components/historicalData/historicalChart.styles.ts","webpack://koku-ui/./src/pages/details/components/historicalData/historicalDataCostChart.tsx","webpack://koku-ui/./src/components/charts/historicalTrendChart/historicalTrendChart.styles.ts","webpack://koku-ui/./src/components/charts/historicalTrendChart/historicalTrendChart.tsx","webpack://koku-ui/./src/pages/details/components/historicalData/historicalDataTrendChart.tsx","webpack://koku-ui/./src/components/charts/historicalUsageChart/historicalUsageChart.styles.ts","webpack://koku-ui/./src/components/charts/historicalUsageChart/historicalUsageChart.tsx","webpack://koku-ui/./src/pages/details/components/historicalData/historicalDataUsageChart.tsx","webpack://koku-ui/./src/pages/details/components/historicalData/historicalDataBase.tsx","webpack://koku-ui/./src/pages/details/components/utils/groupBy.tsx","webpack://koku-ui/./src/pages/details/ocpDetails/detailsHeader.styles.ts","webpack://koku-ui/./src/pages/state/noData/index.ts","webpack://koku-ui/./src/pages/state/notAvailable/notAvailable.tsx","webpack://koku-ui/./src/pages/state/notAvailable/index.ts","webpack://koku-ui/./src/testIds.ts","webpack://koku-ui/./src/utils/dateRange.ts","webpack://koku-ui/./src/utils/equal.ts"],"names":["getGroupByOrg","query","groupByOrg","groupBy","Object","keys","group_by","getGroupByTagKey","groupByTagKey","tagIndex","indexOf","substring","addQueryFilter","filterType","filterValue","newQuery","assign","JSON","parse","stringify","filter_by","found","filters","Array","isArray","filter","removeQueryFilter","undefined","index","slice","DetailsActionsBase","stateProps","dispatchProps","super","this","defaultState","isDropdownOpen","isExportModalOpen","state","getExportModal","item","reportPathsType","props","isOpen","items","onClose","handleExportModalClose","showAggregate","setState","handleExportModalOpen","handleOnSelect","handleOnToggle","bind","isDisabled","showPriceListOption","t","redirectToCostModel","history","source_uuid","DropdownItem","component","key","onClick","unshift","includes","length","Dropdown","onSelect","toggle","KebabToggle","onToggle","isPlain","position","dropdownItems","mapStateToProps","mapDispatchToProps","DetailsActionsConnect","connect","Actions","withRouter","withTranslation","styles","content","paddingBottom","global_spacer_lg","paddingLeft","paddingRight","paddingTop","dataListHeading","fontWeight","global_FontWeight_bold","groupByHeading","marginBottom","tagLink","marginLeft","global_spacer_sm","tagsContainer","marginRight","global_spacer_3xl","marginTop","TagViewBase","arguments","getDataListItems","tagReport","result","data","val","values","id","push","DataListItem","DataListItemRow","DataListItemCells","dataListCells","DataListCell","filterBy","dataListItems","style","DataList","isCompact","map","TagView","tagReportType","TagModalBase","getTagValueCount","count","handleClose","fetchTag","queryString","tagReportPathsType","prevProps","nextProps","Modal","title","value","width","queryFromRoute","location","search","resolution","time_scope_units","time_scope_value","account","tagReportFetchStatus","TagModal","TagLinkBase","handleOpen","event","preventDefault","Boolean","testIds","href","TagLink","cost","global_spacer_xl","costLabel","global_spacer_xs","costValue","textAlign","costLabelDate","fontSize","global_FontSize_sm","color","global_Color_200","header","display","justifyContent","backgroundColor","global_BackgroundColor_100","infoDescription","global_disabled_color_100","global_FontSize_xs","tabs","tag","global_spacer_md","BreakdownHeaderBase","buildDetailsLink","detailsURL","groupByKey","getTotalCost","report","hasCost","meta","total","formatValue","units","description","filterByAccount","showTags","className","Link","to","Title","headingLevel","size","BreakdownHeader","getIdKeyForTab","tab","BreakdownBase","activeTabKey","getAvailableTabs","contentRef","getTab","Tab","eventKey","tabContentId","tabContentRef","TabTitleText","getTabTitle","getTabContent","availableTabs","TabContent","ref","getTabItem","costOverviewComponent","historicalDataComponent","emptyTab","currentTab","getTabs","Tabs","activeKey","handleTabClick","tabIndex","hasCurrentMonthData","providers","provider","current_month_data","updateReport","fetchReport","reportType","reportError","noReport","noLocation","emptyStateTitle","providersFetchStatus","providerType","reportFetchStatus","clustersContainer","modal","height","subTitle","ClusterViewBase","clusters","cluster","ClusterView","ClusterModalBase","name","label","ClusterModal","ClusterBase","showAll","charCount","someClusters","allClusters","computedItems","getComputedReportItems","idKey","clusterString","trim","concat","Cluster","chartStyles","chartHeight","chartSkeleton","CostChartBase","containerRef","getLegendLabel","_a","s","e","p","prototype","hasOwnProperty","call","getOwnPropertySymbols","i","propertyIsEnumerable","__rest","ChartLabel","text","getSkeleton","Skeleton","handleResize","current","clientWidth","setTimeout","window","addEventListener","removeEventListener","hasMarkup","markup","hasRaw","raw","hasUsage","usage","markupUnits","rawUnits","usageUnits","markupValue","rawValue","usageValue","markupLabel","rawLabel","usageLabel","LegendLabel","Legend","ChartLegend","gutter","itemsPerRow","labelComponent","dy","lineHeight","rowGutter","ChartPie","ariaDesc","ariaTitle","constrainToVisibleArea","x","y","labels","datum","legendComponent","legendData","legendOrientation","legendPosition","padding","bottom","left","right","top","themeColor","ChartThemeColor","CostChart","mainContent","SummaryModalViewBase","status","_item","formatOptions","toString","totalValue","parentGroupBy","SummaryModalView","SummaryModalBase","variant","SummaryModal","card","skeleton","viewAllContainer","SummaryBase","isBulletChartModalOpen","getItems","getSummary","reportItem","getViewAll","findIndex","Button","handleBulletChartModalOpen","type","ButtonType","ButtonVariant","handleBulletChartModalClose","Card","CardTitle","CardBody","CardFooter","limit","SummaryCard","capacity","legendSkeleton","UsageChartBase","getCpuChart","chartDatum","getChartDatumWithCapacity","getChartDatum","getFreeSpace","ChartBullet","comparativeErrorMeasureData","tooltip","comparativeErrorMeasureLegendData","legend","getChartHeight","legendItemsPerRow","getItemsPerRow","maxDomain","isDatumEmpty","minDomain","primarySegmentedMeasureData","primarySegmentedMeasureLegendData","qualitativeRangeData","ranges","qualitativeRangeLegendData","hasRange","range","hasTotal","hasLimit","Math","trunc","limitUnits","hasRequest","request","requestUnits","hasCapacity","capacityUnits","unusedRequestCapacity","unusedUsageCapacity","unusedRequestCapacityPercentage","unusedUsageCapacityPercentage","Grid","hasGutter","GridItem","md","lg","percentage","UsageChart","PLACEHOLDER","CostOverviewBase","getClusterChart","widget","showWidget","groupById","showWidgetOnGroupBy","reportGroupBy","getCostChart","Popover","enableFlip","bodyContent","target","OutlinedQuestionCircleIcon","getCpuUsageChart","getMemoryUsageChart","getSummaryCard","reportSummary","usePlaceholder","getWidgetsColumns","selectWidgets","widgets","visibleWidgets","widgetId","renderedWidget","renderWidget","rows","floor","leftColumnWidgets","rightColumnWidgets","xl","export","toolbarContainer","global_BackgroundColor_light_100","defaultFilters","DataToolbarBase","categoryInput","cloneDeep","isBulkSelectOpen","isCategoryDropdownOpen","isOrgUnitSelectExpanded","isTagValueDropdownOpen","isTagKeySelectExpanded","isTagValueSelectExpanded","tagKeyValueInput","getDefaultCategory","categoryOptions","option","getActiveFilters","forEach","onDelete","chip","prevState","_filterType","onFilterRemoved","getBulkSelect","isAllSelected","isBulkSelectDisabled","itemsPerPage","itemsTotal","selectedItems","numSelected","anySelected","isChecked","onBulkSelectClicked","onBulkSelect","DropdownPosition","DropdownToggle","splitButtonItems","DropdownToggleCheckbox","onBulkSelectToggle","action","onBulkSelected","getCurrentCategoryOption","currentCategory","onCategoryClick","onCategorySelect","currentTagKey","onCategoryToggle","getCategoryInput","categoryOption","ToolbarFilter","categoryName","chips","deleteChip","showToolbarItem","InputGroup","TextInput","onChange","onCategoryInputChange","placeholder","onKeyDown","evt","onCategoryInput","getDefaultCategoryOptions","prevFilters","onFilterAdded","getOrgUnitSelect","options","getOrgUnitOptions","compareTo","find","selections","node","Select","SelectVariant","onOrgUnitToggle","onOrgUnitSelect","placeholderText","SelectOption","selection","checked","prevSelections","getTagKeySelect","selectOptions","getTagKeyOptions","selectOption","ToolbarItem","onClear","onTagKeyClear","onTagKeyToggle","onTagKeySelect","getTagValueSelect","tagKeyOption","getTagValueOptions","onTagValueToggle","onTagValueSelect","onTagValueInputChange","onTagValueInput","getExportButton","isExportDisabled","handleExportClicked","onExportClicked","orgReport","currentOrgUnit","sortedData","sort","a","b","roots","org","level","filteredOrgs","root","hasTagKeys","keepData","uniqBy","uniq","Set","dateRange","pagination","showBulkSelect","showExport","showFilter","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarContent","ToolbarToggleGroup","breakpoint","toggleIcon","ToolbarGroup","getCategoryDropdown","alignment","default","DataToolbar","form","input","ul","ExportSubmitBase","fetchReportClicked","getExport","getFileName","date","format","Date","handleFetchReport","exportReport","handleResolutionChange","_","currentTarget","isAllItems","timeScope","offset","order_by","perspective","getQueryString","ExportSubmitConnect","ExportSubmit","resolutionOptions","timeScopeOptions","ExportModalBase","handleMonthChange","Number","sortedItems","orderBy","selectedLabel","thisMonth","lastMonth","setMonth","getMonth","currentMonth","previousMonth","actions","Form","FormGroup","fieldId","Radio","isValid","groupItem","ExportModalConnect","ExportModal","groupBySelector","alignItems","groupBySelectorLabel","GroupByOrgBase","defaultItem","isGroupByOpen","getCurrentGroupBy","getIdKeyForGroupBy","groupByKeys","getGroupByItems","handleGroupByClear","currentItem","handleGroupBySelect","onItemClicked","handleGroupByToggle","groupByItems","GroupByOrg","GroupByTagBase","tagKey","GroupByTag","groupByOrgOptions","groupByTagOptions","orgReportType","GroupByBase","isGroupByOrgVisible","isGroupByTagVisible","handleGroupByClick","allOptions","fetchOrg","orgReportPathsType","showOrgs","orgReportFetchStatus","GroupByConnect","GroupBy","currentCapacityData","fill","currentColorScale","chart_color_green_400","chart_color_green_300","chart_color_green_200","chart_color_green_100","chart_color_green_500","currentInfrastructureCostData","strokeDasharray","currentCostData","previousCapacityData","previousColorScale","chart_color_blue_100","chart_color_blue_200","chart_color_blue_300","chart_color_blue_400","chart_color_blue_500","previousInfrastructureCostData","previousCostData","yAxis","axisLabel","grid","stroke","ticks","tickLabels","xAxis","chart","HistoricalCostChart","resizeObserver","noop","navToggle","hiddenSeries","initDatum","costKey","costInfrastructureKey","costInfrastructureTooltipKey","costTooltipKey","series","childName","legendItem","symbol","cursorVoronoiContainer","getCursorVoronoiContainer","initResizeObserve","containerElement","ResizeObserver","observe","unobserve","insights","chrome","on","handleNavToggle","getChart","ChartArea","has","interpolation","formatDatumValue","formatDatumOptions","CursorVoronoiContainer","createContainer","cursorDimension","mouseFollowTooltips","voronoiDimension","voronoiPadding","getLegend","handleLegendClick","currentRequestDate","getDate","previousRequestDate","max","getInteractiveLegendEvents","chartNames","isHidden","legendName","onLegendClick","adjustContainerHeight","containerHeight","xAxisLabel","yAxisLabel","domain","ge","endDate","getEndDate","midDate","adjustedContainerHeight","container","disable","ChartLegendTooltip","day","Chart","containerComponent","events","getEvents","theme","ChartAxis","tickValues","dependentAxis","chartContainer","costChart","trendChart","usageChart","HistoricalDataCostChartBase","currentQueryString","previousQueryString","currentReport","currentReportFetchStatus","previousReport","previousReportFetchStatus","currentData","previousData","costUnits","currentQuery","previousQuery","HistoricalDataCostChart","currentMonthData","previousMonthData","HistoricalTrendChart","showUsageLegendLabel","toolTipKey","previousDate","currentDate","HistoricalDataTrendChartBase","isCostChart","isNaN","useFilter","HistoricalDataTrendChart","currentLimitData","currentRequestData","currentUsageData","previousLimitData","previousRequestData","previousUsageData","HistoricalUsageChart","limitKey","limitTooltipKey","requestKey","requestTooltipKey","usageKey","usageTooltipKey","currentUsageDate","previousUsageDate","HistoricalDataUsageChartBase","HistoricalDataUsageChart","HistoricalDataBase","getTrendChart","getUsageChart","getGroupById","getGroupByValue","costLabelUnit","info","verticalAlign","infoIcon","infoTitle","PageHeader","PageHeaderTitle","Main","Unavailable","getTestProps","details","cluster_lnk","historical_data_btn","show_more_btn","tag_lnk","view_all_btn","cancel_btn","submit_btn","login","alert","username_input","password_input","submit","masthead","username","sidebarToggle","logout","onboarding","btn_cancel","btn_back","btn_continue","btn_close","type_selector","type_opt_aws","type_opt_ocp","type_opt_non","name_input","check_box_1","check_box_2","s3_input","clusterid_input","arn_input","add_btn","bucket_input","empty_state_add_btn","resource_name_input","cluster_id_input","type_input","sidebar","nav","link","backdrop","getNoDataForDateRangeString","today","month","startDate","startOfMonth","getForDateRangeString","getSinceDateRangeString","isEqual","obj1","obj2","split","join"],"mappings":"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","file":"2937c24f324f56cec9c2.bundle.js","sourcesContent":["import { orgUnitIdKey, tagPrefix } from 'api/queries/query';\nexport const getGroupByOrg = (query) => {\n    let groupByOrg;\n    for (const groupBy of Object.keys(query.group_by)) {\n        if (groupBy === orgUnitIdKey) {\n            groupByOrg = query.group_by[orgUnitIdKey];\n            break;\n        }\n    }\n    return groupByOrg;\n};\nexport const getGroupByTagKey = (query) => {\n    let groupByTagKey;\n    for (const groupBy of Object.keys(query.group_by)) {\n        const tagIndex = groupBy.indexOf(tagPrefix);\n        if (tagIndex !== -1) {\n            groupByTagKey = groupBy.substring(tagIndex + tagPrefix.length);\n            break;\n        }\n    }\n    return groupByTagKey;\n};\nexport const addQueryFilter = (query, filterType, filterValue) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    // Filter by * won't generate a new request if group_by * already exists\n    if (filterValue === '*' && newQuery.group_by[filterType] === '*') {\n        return;\n    }\n    if (newQuery.filter_by[filterType]) {\n        let found = false;\n        const filters = newQuery.filter_by[filterType];\n        if (!Array.isArray(filters)) {\n            found = filterValue === newQuery.filter_by[filterType];\n        }\n        else {\n            for (const filter of filters) {\n                if (filter === filterValue) {\n                    found = true;\n                    break;\n                }\n            }\n        }\n        if (!found) {\n            newQuery.filter_by[filterType] = [newQuery.filter_by[filterType], filterValue];\n        }\n    }\n    else {\n        newQuery.filter_by[filterType] = [filterValue];\n    }\n    return newQuery;\n};\nexport const removeQueryFilter = (query, filterType, filterValue) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    if (filterType === null) {\n        newQuery.filter_by = undefined; // Clear all\n    }\n    else if (filterValue === null) {\n        newQuery.filter_by[filterType] = undefined; // Clear all values\n    }\n    else if (Array.isArray(newQuery.filter_by[filterType])) {\n        const index = newQuery.filter_by[filterType].indexOf(filterValue);\n        if (index > -1) {\n            newQuery.filter_by[filterType] = [\n                ...query.filter_by[filterType].slice(0, index),\n                ...query.filter_by[filterType].slice(index + 1),\n            ];\n        }\n    }\n    else {\n        newQuery.filter_by[filterType] = undefined;\n    }\n    return newQuery;\n};\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport { tagPrefix } from 'api/queries/query';\nimport { ExportModal } from 'pages/details/components/export/exportModal';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, query, reportPathsType } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, query: query, reportPathsType: reportPathsType, showAggregate: true }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, t, redirectToCostModel, history, item: { source_uuid }, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, t('details.actions.export')),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], history) }, t('details.actions.price_list')));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = withRouter(withTranslation()(DetailsActionsConnect));\nexport { Actions };\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const styles = {\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingLeft: global_spacer_lg.value,\n        paddingRight: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n};\n","import global_FontWeight_bold from '@patternfly/react-tokens/dist/js/global_FontWeight_bold';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    dataListHeading: {\n        fontWeight: global_FontWeight_bold.value,\n    },\n    groupByHeading: {\n        marginBottom: global_spacer_lg.value,\n    },\n    tagLink: {\n        marginLeft: global_spacer_sm.value,\n    },\n    tagsContainer: {\n        marginRight: global_spacer_3xl.value,\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import { DataList, DataListCell, DataListItem, DataListItemCells, DataListItemRow } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { styles } from './tag.styles';\nclass TagViewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDataListItems = () => {\n            const { tagReport } = this.props;\n            const result = [];\n            if (tagReport) {\n                for (const item of tagReport.data) {\n                    for (const val of item.values) {\n                        const id = `${item.key}:${val}`;\n                        result.push(React.createElement(DataListItem, { \"aria-labelledby\": id, key: `${id}-item` },\n                            React.createElement(DataListItemRow, null,\n                                React.createElement(DataListItemCells, { dataListCells: [\n                                        React.createElement(DataListCell, { key: `${id}-cell1` },\n                                            React.createElement(\"span\", { id: id }, item.key)),\n                                        React.createElement(DataListCell, { key: `${id}-cell2` }, val),\n                                    ] }))));\n                    }\n                }\n            }\n            return result;\n        };\n    }\n    render() {\n        const { filterBy, groupBy, t } = this.props;\n        const dataListItems = this.getDataListItems();\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", null,\n                React.createElement(\"span\", { style: styles.dataListHeading }, t(`group_by.values.${groupBy}`))),\n            React.createElement(\"div\", { style: styles.groupByHeading },\n                React.createElement(\"span\", null, filterBy)),\n            React.createElement(DataList, { \"aria-label\": \"Simple data list example\", isCompact: true },\n                React.createElement(DataListItem, { \"aria-labelledby\": \"heading1\" },\n                    React.createElement(DataListItemRow, null,\n                        React.createElement(DataListItemCells, { dataListCells: [\n                                React.createElement(DataListCell, { key: \"primary content\" },\n                                    React.createElement(\"span\", { id: \"heading1\", style: styles.dataListHeading }, t('tag.heading_key'))),\n                                React.createElement(DataListCell, { key: \"secondary content\" },\n                                    React.createElement(\"span\", { id: \"heading2\", style: styles.dataListHeading }, t('tag.heading_value'))),\n                            ] }))),\n                dataListItems.map(item => item))));\n    }\n}\nconst TagView = withTranslation()(connect()(TagViewBase));\nexport { TagView };\n","import { Modal } from '@patternfly/react-core';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { TagView } from './tagView';\nconst tagReportType = \"tag\" /* tag */;\nclass TagModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getTagValueCount = () => {\n            const { tagReport } = this.props;\n            let count = 0;\n            if (tagReport) {\n                for (const item of tagReport.data) {\n                    if (item.values) {\n                        count += item.values.length;\n                    }\n                }\n            }\n            return count;\n        };\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    componentDidMount() {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        fetchTag(tagReportPathsType, tagReportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchTag(tagReportPathsType, tagReportType, queryString);\n        }\n    }\n    shouldComponentUpdate(nextProps) {\n        const { filterBy, isOpen } = this.props;\n        return nextProps.filterBy !== filterBy || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { filterBy, groupBy, isOpen, tagReport, t } = this.props;\n        return (React.createElement(Modal, { isOpen: isOpen, onClose: this.handleClose, title: t('tag.title', {\n                value: this.getTagValueCount(),\n            }), width: '50%' },\n            React.createElement(TagView, { filterBy: filterBy, groupBy: groupBy, tagReport: tagReport })));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, tagReportPathsType }) => {\n    const queryFromRoute = parseQuery(location.search);\n    const queryString = getQuery({\n        filter: Object.assign({ [groupBy]: filterBy, resolution: 'monthly', time_scope_units: 'month', time_scope_value: -1 }, (queryFromRoute.filter.account && {\n            account: queryFromRoute.filter.account,\n        })),\n    });\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, queryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, queryString);\n    return {\n        queryString,\n        tagReport,\n        tagReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst TagModal = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(TagModalBase));\nexport { TagModal };\n","import { TagIcon } from '@patternfly/react-icons/dist/js/icons/tag-icon';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { getTestProps, testIds } from 'testIds';\nimport { styles } from './tag.styles';\nimport { TagModal } from './tagModal';\nconst tagReportType = \"tag\" /* tag */;\nclass TagLinkBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleClose = (isOpen) => {\n            this.setState({ isOpen });\n        };\n        this.handleOpen = event => {\n            this.setState({ isOpen: true });\n            event.preventDefault();\n            return false;\n        };\n        this.handleClose = this.handleClose.bind(this);\n        this.handleOpen = this.handleOpen.bind(this);\n    }\n    componentDidMount() {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        fetchTag(tagReportPathsType, tagReportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchTag(tagReportPathsType, tagReportType, queryString);\n        }\n    }\n    render() {\n        const { filterBy, groupBy, id, tagReport, tagReportPathsType } = this.props;\n        const { isOpen } = this.state;\n        let count = 0;\n        if (tagReport) {\n            for (const item of tagReport.data) {\n                if (item.values) {\n                    count += item.values.length;\n                }\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.tagsContainer, id: id },\n            Boolean(count > 0) && (React.createElement(React.Fragment, null,\n                React.createElement(TagIcon, null),\n                React.createElement(\"a\", Object.assign({}, getTestProps(testIds.details.tag_lnk), { href: \"#/\", onClick: this.handleOpen, style: styles.tagLink }), count))),\n            React.createElement(TagModal, { filterBy: filterBy, groupBy: groupBy, isOpen: isOpen, onClose: this.handleClose, tagReportPathsType: tagReportPathsType })));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, tagReportPathsType }) => {\n    const queryFromRoute = parseQuery(location.search);\n    const queryString = getQuery({\n        filter: Object.assign({ [groupBy]: filterBy, resolution: 'monthly', time_scope_units: 'month', time_scope_value: -1 }, (queryFromRoute.filter.account && {\n            account: queryFromRoute.filter.account,\n        })),\n    });\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, queryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, queryString);\n    return {\n        filterBy,\n        queryString,\n        tagReport,\n        tagReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst TagLink = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(TagLinkBase));\nexport { TagLink };\n","import global_BackgroundColor_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_100';\nimport global_Color_200 from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_xl from '@patternfly/react-tokens/dist/js/global_spacer_xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    cost: {\n        marginTop: global_spacer_xl.var,\n    },\n    costLabel: {\n        marginTop: global_spacer_xs.var,\n    },\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n        textAlign: 'right',\n    },\n    costLabelDate: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_200.var,\n        textAlign: 'right',\n    },\n    header: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        paddingLeft: global_spacer_lg.var,\n        paddingRight: global_spacer_lg.var,\n        paddingTop: global_spacer_lg.var,\n        backgroundColor: global_BackgroundColor_100.var,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    tabs: {\n        display: 'flex',\n    },\n    tag: {\n        marginLeft: global_spacer_lg.var,\n    },\n    title: {\n        paddingBottom: global_spacer_lg.var,\n        paddingTop: global_spacer_md.var,\n    },\n};\n","import './breakdownHeader.scss';\nimport { Title } from '@patternfly/react-core';\nimport { AngleLeftIcon } from '@patternfly/react-icons/dist/js/icons/angle-left-icon';\nimport { breakdownDescKey, breakdownTitleKey, getQueryRoute, orgUnitIdKey } from 'api/queries/query';\nimport { TagLink } from 'pages/details/components/tag/tagLink';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { getForDateRangeString } from 'utils/dateRange';\nimport { formatValue } from 'utils/formatValue';\nimport { styles } from './breakdownHeader.styles';\nclass BreakdownHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.buildDetailsLink = () => {\n            const { detailsURL, groupBy, query } = this.props;\n            let groupByKey = groupBy;\n            let value = '*';\n            // Retrieve org unit used by the details page\n            if (query[orgUnitIdKey]) {\n                groupByKey = orgUnitIdKey;\n                value = query[orgUnitIdKey];\n            }\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { group_by: {\n                    [groupByKey]: value,\n                } });\n            // Don't want these params when returning to the details page\n            if (newQuery.filter) {\n                newQuery.filter.account = undefined;\n                newQuery[breakdownDescKey] = undefined;\n                newQuery[orgUnitIdKey] = undefined;\n                newQuery[breakdownTitleKey] = undefined;\n            }\n            return `${detailsURL}?${getQueryRoute(newQuery)}`;\n        };\n        this.getGroupByOrg = () => {\n            const { query } = this.props;\n            let groupByOrg;\n            for (const groupBy of Object.keys(query.group_by)) {\n                if (groupBy === orgUnitIdKey) {\n                    groupByOrg = query.group_by[orgUnitIdKey];\n                    break;\n                }\n            }\n            return groupByOrg;\n        };\n        this.getTotalCost = () => {\n            const { report } = this.props;\n            const hasCost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total;\n            const cost = formatValue(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD');\n            return cost;\n        };\n    }\n    render() {\n        const { description, filterBy, groupBy, query, t, tabs, tagReportPathsType, title } = this.props;\n        const filterByAccount = query && query.filter ? query.filter.account : undefined;\n        const groupByOrg = this.getGroupByOrg();\n        const showTags = filterByAccount || groupBy === 'account' || groupBy === 'project' || groupBy === 'subscription_guid';\n        // i18n groupBy key\n        const groupByKey = groupBy ? groupBy : filterByAccount ? 'account' : groupByOrg ? orgUnitIdKey : undefined;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", null,\n                React.createElement(\"nav\", { \"aria-label\": \"breadcrumb\", className: \"breadcrumbOverride\" },\n                    React.createElement(\"ol\", { className: \"pf-c-breadcrumb__list\" },\n                        React.createElement(\"li\", { className: \"pf-c-breadcrumb__item\" },\n                            React.createElement(\"span\", { className: \"pf-c-breadcrumb__item-divider\" },\n                                React.createElement(AngleLeftIcon, null)),\n                            React.createElement(Link, { to: this.buildDetailsLink() }, t('breakdown.back_to_details', {\n                                groupBy: groupByKey,\n                                value: tagReportPathsType,\n                            }))))),\n                React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"2xl\" },\n                    t('breakdown.title', { value: title }),\n                    description && React.createElement(\"div\", { style: styles.infoDescription }, description)),\n                React.createElement(\"div\", { style: styles.tabs },\n                    tabs,\n                    React.createElement(\"div\", { style: styles.tag }, Boolean(showTags) && (React.createElement(TagLink, { filterBy: filterBy, groupBy: groupByKey, id: \"tags\", tagReportPathsType: tagReportPathsType }))))),\n            React.createElement(\"div\", { style: styles.cost },\n                React.createElement(\"div\", { style: styles.costLabel },\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: \"4xl\" },\n                        React.createElement(\"span\", null, this.getTotalCost()))),\n                React.createElement(\"div\", { style: styles.costLabelDate }, getForDateRangeString(groupByKey, 'breakdown.total_cost_date', 0)))));\n    }\n}\nconst BreakdownHeader = withTranslation()(BreakdownHeaderBase);\nexport { BreakdownHeader };\n","import { Tab, TabContent, Tabs, TabTitleText } from '@patternfly/react-core';\nimport Loading from 'pages/state/loading';\nimport NoProviders from 'pages/state/noProviders';\nimport NotAvailable from 'pages/state/notAvailable';\nimport React from 'react';\nimport NoData from '../../../state/noData';\nimport { styles } from './breakdown.styles';\nimport { BreakdownHeader } from './breakdownHeader';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"cost-overview\" /* costOverview */:\n            return 'cost-overview';\n        case \"historical-data\" /* historicalData */:\n            return 'historical-data';\n    }\n};\nclass BreakdownBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            activeTabKey: 0,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getAvailableTabs = () => {\n            const availableTabs = [\n                {\n                    contentRef: React.createRef(),\n                    tab: \"cost-overview\" /* costOverview */,\n                },\n                {\n                    contentRef: React.createRef(),\n                    tab: \"historical-data\" /* historicalData */,\n                },\n            ];\n            return availableTabs;\n        };\n        this.getTab = (tab, contentRef, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, tabContentId: `tab-${index}`, tabContentRef: contentRef, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) }));\n        };\n        this.getTabContent = (availableTabs) => {\n            return availableTabs.map((val, index) => {\n                return (React.createElement(TabContent, { eventKey: index, key: `${getIdKeyForTab(val.tab)}-tabContent`, id: `tab-${index}`, ref: val.contentRef }, this.getTabItem(val.tab, index)));\n            });\n        };\n        this.getTabItem = (tab, index) => {\n            const { costOverviewComponent, historicalDataComponent } = this.props;\n            const { activeTabKey } = this.state;\n            const emptyTab = React.createElement(React.Fragment, null); // Lazily load tabs\n            if (activeTabKey !== index) {\n                return emptyTab;\n            }\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === \"cost-overview\" /* costOverview */) {\n                return costOverviewComponent;\n            }\n            else if (currentTab === \"historical-data\" /* historicalData */) {\n                return historicalDataComponent;\n            }\n            else {\n                return emptyTab;\n            }\n        };\n        this.getTabs = (availableTabs) => {\n            const { activeTabKey } = this.state;\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((val, index) => this.getTab(val.tab, val.contentRef, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            if (tab === \"cost-overview\" /* costOverview */) {\n                return t('breakdown.cost_overview_title');\n            }\n            else if (tab === \"historical-data\" /* historicalData */) {\n                return t('breakdown.historical_data_title');\n            }\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { activeTabKey } = this.state;\n            if (activeTabKey !== tabIndex) {\n                this.setState({\n                    activeTabKey: tabIndex,\n                });\n            }\n        };\n        // Ensure at least one source provider has data available\n        this.hasCurrentMonthData = () => {\n            const { providers } = this.props;\n            let result = false;\n            if (providers && providers.data) {\n                for (const provider of providers.data) {\n                    if (provider.current_month_data) {\n                        result = true;\n                        break;\n                    }\n                }\n            }\n            return result;\n        };\n        this.updateReport = () => {\n            const { location, fetchReport, queryString, reportPathsType, reportType } = this.props;\n            if (location.search) {\n                fetchReport(reportPathsType, reportType, queryString);\n            }\n        };\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps) {\n        const { location, report, reportError, queryString } = this.props;\n        const newQuery = prevProps.queryString !== queryString;\n        const noReport = !report && !reportError;\n        const noLocation = !location.search;\n        if (newQuery || noReport || noLocation) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { description, detailsURL, emptyStateTitle, filterBy, groupBy, providers, providersFetchStatus, providerType, query, report, reportError, reportFetchStatus, tagReportPathsType, title, } = this.props;\n        const availableTabs = this.getAvailableTabs();\n        // Note: Providers are fetched via the InactiveSources component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: emptyStateTitle });\n        }\n        else if (providersFetchStatus === 1 /* inProgress */ && reportFetchStatus === 1 /* inProgress */) {\n            return React.createElement(Loading, { title: emptyStateTitle });\n        }\n        else if (providersFetchStatus === 2 /* complete */ && reportFetchStatus === 2 /* complete */) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0 && providersFetchStatus === 2 /* complete */;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: providerType, title: emptyStateTitle });\n            }\n            if (!this.hasCurrentMonthData()) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(BreakdownHeader, { description: description, detailsURL: detailsURL, filterBy: filterBy, groupBy: groupBy, query: query, report: report, tabs: this.getTabs(availableTabs), tagReportPathsType: tagReportPathsType, title: title }),\n            React.createElement(\"div\", { style: styles.content }, this.getTabContent(availableTabs))));\n    }\n}\nexport default BreakdownBase;\n","import global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    clustersContainer: {\n        marginRight: global_spacer_3xl.value,\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import global_spacer_2xl from '@patternfly/react-tokens/dist/js/global_spacer_2xl';\nexport const styles = {\n    modal: {\n        // Workaround for isLarge not working properly\n        height: '700px',\n        width: '600px',\n    },\n    subTitle: {\n        marginTop: global_spacer_2xl.value,\n        textAlign: 'right',\n    },\n};\n","import React from 'react';\nimport { withTranslation } from 'react-i18next';\nclass ClusterViewBase extends React.Component {\n    render() {\n        const { item } = this.props;\n        if (!item.clusters) {\n            return null;\n        }\n        return item.clusters.map((cluster, index) => React.createElement(\"div\", { key: `cluster-${index}` }, cluster));\n    }\n}\nconst ClusterView = withTranslation()(ClusterViewBase);\nexport { ClusterView, ClusterViewBase };\n","import './clusterModal.scss';\nimport { Modal } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './clusterModal.styles';\nimport { ClusterView } from './clusterView';\nclass ClusterModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    shouldComponentUpdate(nextProps) {\n        const { isOpen, item } = this.props;\n        return nextProps.item !== item || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { groupBy, isOpen, item, t } = this.props;\n        return (React.createElement(Modal, { className: \"modalOverride\", style: styles.modal, isOpen: isOpen, onClose: this.handleClose, title: t('details.clusters_modal_title', {\n                groupBy,\n                name: item.label,\n            }), width: '50%' },\n            React.createElement(ClusterView, { item: item })));\n    }\n}\nconst ClusterModal = withTranslation()(ClusterModalBase);\nexport { ClusterModal };\n","import React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { getTestProps, testIds } from 'testIds';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { styles } from './cluster.styles';\nimport { ClusterModal } from './clusterModal';\nclass ClusterBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isOpen: false,\n            showAll: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleClose = (isOpen) => {\n            this.setState({ isOpen });\n        };\n        this.handleOpen = event => {\n            this.setState({ isOpen: true });\n            event.preventDefault();\n            return false;\n        };\n        this.handleClose = this.handleClose.bind(this);\n        this.handleOpen = this.handleOpen.bind(this);\n    }\n    render() {\n        const { groupBy, report, t } = this.props;\n        const { isOpen, showAll } = this.state;\n        let charCount = 0;\n        const maxChars = 50;\n        const someClusters = [];\n        const allClusters = [];\n        const computedItems = getComputedReportItems({\n            report,\n            idKey: groupBy,\n        });\n        const item = computedItems && computedItems.length ? computedItems[0] : undefined;\n        if (!item) {\n            return null;\n        }\n        for (const cluster of item.clusters) {\n            const prefix = someClusters.length > 0 ? ', ' : '';\n            const clusterString = `${prefix}${cluster}`;\n            if (showAll) {\n                someClusters.push(clusterString);\n            }\n            else if (charCount <= maxChars) {\n                if (charCount + clusterString.length > maxChars) {\n                    someClusters.push(clusterString\n                        .slice(0, maxChars - charCount)\n                        .trim()\n                        .concat('...'));\n                }\n                else {\n                    someClusters.push(clusterString);\n                }\n            }\n            charCount += clusterString.length;\n            allClusters.push(cluster);\n        }\n        return (React.createElement(\"div\", { style: styles.clustersContainer },\n            Boolean(someClusters) && someClusters.map((cluster, index) => React.createElement(\"span\", { key: index }, cluster)),\n            Boolean(someClusters.length < allClusters.length) && (React.createElement(\"a\", Object.assign({}, getTestProps(testIds.details.cluster_lnk), { href: \"#/\", onClick: this.handleOpen }), t('details.more_clusters', {\n                value: allClusters.length - someClusters.length,\n            }))),\n            React.createElement(ClusterModal, { groupBy: groupBy, isOpen: isOpen, item: item, onClose: this.handleClose })));\n    }\n}\nconst Cluster = withTranslation()(ClusterBase);\nexport { Cluster };\n","import global_FontWeight_bold from '@patternfly/react-tokens/dist/js/global_FontWeight_bold';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const chartStyles = {\n    chartHeight: 150,\n    subTitle: {\n        fontWeight: global_FontWeight_bold.value,\n    },\n};\nexport const styles = {\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { ChartLabel, ChartLegend, ChartPie, ChartThemeColor } from '@patternfly/react-charts';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { formatValue } from 'utils/formatValue';\nimport { chartStyles, styles } from './costChart.styles';\nclass CostChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            width: 0,\n        };\n        // Override legend layout\n        this.getLegendLabel = () => {\n            return (_a) => {\n                var { values } = _a, props = __rest(_a, [\"values\"]);\n                return (React.createElement(ChartLabel, Object.assign({}, props, { style: [{ fontWeight: chartStyles.subTitle.fontWeight }, {}], text: [values[props.index], props.text] })));\n            };\n        };\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, size: \"md\" })));\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    render() {\n        const { report, reportFetchStatus, t } = this.props;\n        const { width } = this.state;\n        const hasCost = report && report.meta && report.meta.total && report.meta.total.cost;\n        const hasMarkup = hasCost && report.meta.total.cost.markup;\n        const hasRaw = hasCost && report.meta.total.cost.raw;\n        const hasUsage = hasCost && report.meta.total.cost.usage;\n        const markupUnits = hasMarkup ? report.meta.total.cost.markup.units : 'USD';\n        const rawUnits = hasRaw ? report.meta.total.cost.raw.units : 'USD';\n        const usageUnits = hasUsage ? report.meta.total.cost.usage.units : 'USD';\n        const markupValue = hasMarkup ? report.meta.total.cost.markup.value : 0;\n        const rawValue = hasRaw ? report.meta.total.cost.raw.value : 0;\n        const usageValue = hasUsage ? report.meta.total.cost.usage.value : 0;\n        const markup = formatValue(hasMarkup ? report.meta.total.cost.markup.value : 0, markupUnits);\n        const raw = formatValue(hasRaw ? report.meta.total.cost.raw.value : 0, rawUnits);\n        const usage = formatValue(hasUsage ? report.meta.total.cost.usage.value : 0, usageUnits);\n        const markupLabel = t('breakdown.cost_chart.markup_label');\n        const rawLabel = t('breakdown.cost_chart.raw_label');\n        const usageLabel = t('breakdown.cost_chart.usage_label');\n        // Override legend label layout\n        const LegendLabel = this.getLegendLabel();\n        const Legend = (React.createElement(ChartLegend, { gutter: 25, itemsPerRow: 2, labelComponent: React.createElement(LegendLabel, { dy: 10, lineHeight: 1.5, values: [raw, markup, usage] }), rowGutter: 20 }));\n        return (React.createElement(\"div\", { ref: this.containerRef, style: { height: chartStyles.chartHeight } }, reportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(ChartPie, { ariaDesc: t('breakdown.cost_chart.aria_desc'), ariaTitle: t('breakdown.cost_chart.aria_title'), constrainToVisibleArea: true, data: [\n                { x: rawLabel, y: rawValue, units: rawUnits },\n                { x: markupLabel, y: markupValue, units: markupUnits },\n                { x: usageLabel, y: usageValue, units: usageUnits },\n            ], height: chartStyles.chartHeight, labels: ({ datum }) => t('breakdown.cost_chart.tooltip', {\n                name: datum.x,\n                value: formatValue(datum.y, datum.units),\n            }), legendComponent: Legend, legendData: [\n                {\n                    name: rawLabel,\n                },\n                {\n                    name: markupLabel,\n                },\n                {\n                    name: usageLabel,\n                },\n            ], legendOrientation: \"vertical\", legendPosition: \"right\", padding: {\n                bottom: 20,\n                left: 0,\n                right: width - chartStyles.chartHeight,\n                top: 20,\n            }, themeColor: ChartThemeColor.green, width: width }))));\n    }\n}\nconst CostChart = withTranslation()(CostChartBase);\nexport { CostChart };\n","import global_spacer_xl from '@patternfly/react-tokens/dist/js/global_spacer_xl';\nexport const styles = {\n    mainContent: {\n        marginTop: global_spacer_xl.value,\n    },\n    subTitle: {\n        textAlign: 'right',\n    },\n};\n","import { Title } from '@patternfly/react-core';\nimport { getQuery, orgUnitIdKey } from 'api/queries/query';\nimport { ReportSummaryItem, ReportSummaryItems } from 'components/reports/reportSummary';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue } from 'utils/formatValue';\nimport { formatCurrency } from 'utils/formatValue';\nimport { styles } from './summaryModal.styles';\nconst reportType = \"cost\" /* cost */;\nclass SummaryModalViewBase extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    render() {\n        const { groupBy, report, reportFetchStatus, t } = this.props;\n        const cost = formatCurrency(report && report.meta && report.meta.total ? report.meta.total.cost.total.value : 0);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { style: styles.subTitle },\n                React.createElement(Title, { headingLevel: \"h2\", size: \"xl\" }, t('details.cost_value', { value: cost }))),\n            React.createElement(\"div\", { style: styles.mainContent },\n                React.createElement(ReportSummaryItems, { idKey: groupBy, report: report, status: reportFetchStatus }, ({ items }) => items.map(_item => (React.createElement(ReportSummaryItem, { key: _item.id, formatOptions: {}, formatValue: formatValue, label: _item.label ? _item.label.toString() : '', totalValue: report.meta.total.cost.total.value, units: report.meta.total.cost.total.units, value: _item.cost.total.value })))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, parentGroupBy, query, reportPathsType }) => {\n    const groupByOrg = query && query.group_by[orgUnitIdKey] ? query.group_by[orgUnitIdKey] : undefined;\n    const newQuery = {\n        filter: Object.assign({ time_scope_units: 'month', time_scope_value: -1, resolution: 'monthly', [parentGroupBy]: filterBy }, (query && query.filter && query.filter.account && { account: query.filter.account })),\n        filter_by: query ? query.filter_by : undefined,\n        group_by: Object.assign(Object.assign({}, (groupByOrg && { [orgUnitIdKey]: groupByOrg })), (groupBy && { [groupBy]: '*' })),\n    };\n    const queryString = getQuery(newQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst SummaryModalView = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(SummaryModalViewBase));\nexport { SummaryModalView };\n","import './summaryModal.scss';\nimport { Modal } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { SummaryModalView } from './summaryModalView';\nclass SummaryModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    shouldComponentUpdate(nextProps) {\n        const { filterBy, isOpen } = this.props;\n        return nextProps.filterBy !== filterBy || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { filterBy, groupBy, isOpen, parentGroupBy, query, reportPathsType, t } = this.props;\n        return (React.createElement(Modal, { className: \"modalOverride\", isOpen: isOpen, onClose: this.handleClose, title: t('details.summary_modal_title', {\n                groupBy,\n                name: filterBy,\n            }), variant: \"large\" },\n            React.createElement(SummaryModalView, { filterBy: filterBy, groupBy: groupBy, parentGroupBy: parentGroupBy, query: query, reportPathsType: reportPathsType })));\n    }\n}\nconst SummaryModal = withTranslation()(SummaryModalBase);\nexport { SummaryModal };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    card: {},\n    skeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    viewAllContainer: {\n        marginLeft: '-15px',\n    },\n};\n","import { Button, ButtonType, ButtonVariant, Card, CardBody, CardFooter, CardTitle, Title, } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport { getQuery, orgUnitIdKey } from 'api/queries/query';\nimport { ReportSummaryItem, ReportSummaryItems } from 'components/reports/reportSummary';\nimport { SummaryModal } from 'pages/details/components/summary/summaryModal';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getTestProps, testIds } from 'testIds';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { formatValue } from 'utils/formatValue';\nimport { styles } from './summaryCard.styles';\nclass SummaryBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            isBulletChartModalOpen: false,\n        };\n        this.getItems = () => {\n            const { groupBy, report } = this.props;\n            const computedItems = getComputedReportItems({\n                report,\n                idKey: groupBy,\n            });\n            return computedItems;\n        };\n        this.getSummary = () => {\n            const { groupBy, report, reportFetchStatus } = this.props;\n            return (React.createElement(ReportSummaryItems, { idKey: groupBy, report: report, status: reportFetchStatus }, ({ items }) => items.map(reportItem => (React.createElement(ReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: {}, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : undefined, totalValue: report.meta.total.cost.total.value, units: report.meta.total.cost.total.units, value: reportItem.cost.total.value })))));\n        };\n        this.getViewAll = () => {\n            const { filterBy, groupBy, parentGroupBy, query, reportPathsType, t } = this.props;\n            const { isBulletChartModalOpen } = this.state;\n            const computedItems = this.getItems();\n            const otherIndex = computedItems.findIndex(i => {\n                const id = i.id;\n                if (id && id !== null) {\n                    return id.toString().includes('Other');\n                }\n            });\n            if (otherIndex !== -1) {\n                return (React.createElement(\"div\", { style: styles.viewAllContainer },\n                    React.createElement(Button, Object.assign({}, getTestProps(testIds.details.view_all_btn), { onClick: this.handleBulletChartModalOpen, type: ButtonType.button, variant: ButtonVariant.link }), t('details.view_all', { groupBy })),\n                    React.createElement(SummaryModal, { filterBy: filterBy, groupBy: groupBy, isOpen: isBulletChartModalOpen, onClose: this.handleBulletChartModalClose, parentGroupBy: parentGroupBy, query: query, reportPathsType: reportPathsType })));\n            }\n            else {\n                return null;\n            }\n        };\n        this.handleBulletChartModalClose = (isOpen) => {\n            this.setState({ isBulletChartModalOpen: isOpen });\n        };\n        this.handleBulletChartModalOpen = event => {\n            this.setState({ isBulletChartModalOpen: true });\n            event.preventDefault();\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    render() {\n        const { groupBy, reportFetchStatus, t } = this.props;\n        return (React.createElement(Card, { style: styles.card },\n            React.createElement(CardTitle, null,\n                React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('breakdown.summary_title', { groupBy }))),\n            React.createElement(CardBody, null, reportFetchStatus === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: \"md\" }),\n                React.createElement(Skeleton, { size: \"md\", style: styles.skeleton }),\n                React.createElement(Skeleton, { size: \"md\", style: styles.skeleton }),\n                React.createElement(Skeleton, { size: \"md\", style: styles.skeleton }))) : (this.getSummary())),\n            React.createElement(CardFooter, null, this.getViewAll())));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, parentGroupBy, query, reportPathsType, reportType }) => {\n    const groupByOrg = query && query.group_by[orgUnitIdKey] ? query.group_by[orgUnitIdKey] : undefined;\n    const newQuery = {\n        filter: Object.assign({ limit: 3, time_scope_units: 'month', time_scope_value: -1, resolution: 'monthly', [parentGroupBy]: filterBy }, (query && query.filter && query.filter.account && { account: query.filter.account })),\n        filter_by: query ? query.filter_by : undefined,\n        group_by: Object.assign(Object.assign({}, (groupByOrg && { [orgUnitIdKey]: groupByOrg })), (groupBy && { [groupBy]: '*' })),\n    };\n    const queryString = getQuery(newQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportFetchStatus,\n        reportPathsType,\n        reportType,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst SummaryCard = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(SummaryBase));\nexport { SummaryCard };\n","import global_FontWeight_bold from '@patternfly/react-tokens/dist/js/global_FontWeight_bold';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    chartSkeleton: {\n        marginBottom: global_spacer_md.value,\n    },\n    capacity: {\n        fontWeight: global_FontWeight_bold.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { ChartBullet } from '@patternfly/react-charts';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport { getQuery } from 'api/queries/query';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { styles } from './usageChart.styles';\nclass UsageChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            width: 0,\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current && this.containerRef.current.clientWidth) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getCpuChart = () => {\n            const { parentGroupBy, reportFetchStatus, report } = this.props;\n            const { width } = this.state;\n            const chartDatum = parentGroupBy === 'cluster' ? this.getChartDatumWithCapacity() : this.getChartDatum();\n            if (!report || chartDatum.usage.length === 0) {\n                return null;\n            }\n            return (React.createElement(\"div\", { className: \"chartOverride\" }, reportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(React.Fragment, null,\n                Boolean(parentGroupBy === 'cluster') && this.getFreeSpace(),\n                React.createElement(ChartBullet, { comparativeErrorMeasureData: chartDatum.limit.value\n                        ? [\n                            {\n                                tooltip: chartDatum.limit.tooltip,\n                                y: chartDatum.limit.value,\n                            },\n                        ]\n                        : [], comparativeErrorMeasureLegendData: chartDatum.limit.value ? [{ name: chartDatum.limit.legend }] : [], height: this.getChartHeight(), labels: ({ datum }) => `${datum.tooltip}`, legendPosition: \"bottom-left\", legendItemsPerRow: this.getItemsPerRow(), maxDomain: this.isDatumEmpty(chartDatum) ? 100 : undefined, minDomain: 0, padding: {\n                        bottom: 75,\n                        left: 10,\n                        right: 50,\n                        top: 0,\n                    }, primarySegmentedMeasureData: chartDatum.usage.length\n                        ? chartDatum.usage.map(datum => {\n                            return {\n                                tooltip: datum.tooltip,\n                                y: datum.value,\n                            };\n                        })\n                        : [], primarySegmentedMeasureLegendData: chartDatum.usage.length\n                        ? chartDatum.usage.map(datum => {\n                            return {\n                                name: datum.legend,\n                            };\n                        })\n                        : [], qualitativeRangeData: chartDatum.ranges.length\n                        ? [\n                            {\n                                tooltip: chartDatum.ranges[0].tooltip,\n                                y: chartDatum.ranges[0].value,\n                            },\n                        ]\n                        : [], qualitativeRangeLegendData: chartDatum.ranges.length ? [{ name: chartDatum.ranges[0].legend }] : [], width: width })))));\n        };\n        this.getChartHeight = () => {\n            const { parentGroupBy } = this.props;\n            const { width } = this.state;\n            if (parentGroupBy === 'cluster') {\n                return width > 950 ? 115 : width > 450 ? 150 : 210;\n            }\n            else {\n                return width > 700 ? 115 : width > 450 ? 150 : 180;\n            }\n        };\n        this.getItemsPerRow = () => {\n            const { width } = this.state;\n            return width > 950 ? 4 : width > 700 ? 3 : width > 450 ? 2 : 1;\n        };\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, size: \"md\" }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, size: \"xs\" })));\n        };\n        this.isDatumEmpty = (datum) => {\n            let hasRange = false;\n            for (const range of datum.ranges) {\n                if (range.value) {\n                    hasRange = true;\n                    break;\n                }\n            }\n            let hasUsage = false;\n            for (const usage of datum.usage) {\n                if (usage.value) {\n                    hasUsage = true;\n                    break;\n                }\n            }\n            return !(datum.limit.value || hasRange || hasUsage);\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n        window.addEventListener('resize', this.handleResize);\n        this.handleResize();\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        if (prevProps.queryString !== this.props.queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getChartDatum() {\n        const { report, reportType, t } = this.props;\n        const datum = {\n            limit: {},\n            ranges: [],\n            usage: [],\n        };\n        // Always show bullet chart legends https://github.com/project-koku/koku-ui/issues/963\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasLimit = hasTotal && report.meta.total.limit && report.meta.total.limit !== null;\n        const limit = Math.trunc(hasLimit ? report.meta.total.limit.value : 0);\n        const limitUnits = t(`units.${unitLookupKey(hasLimit ? report.meta.total.limit.units : '')}`);\n        datum.limit = {\n            legend: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            tooltip: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            value: Math.trunc(limit),\n        };\n        const hasRequest = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = t(`units.${unitLookupKey(hasRequest ? report.meta.total.request.units : '')}`);\n        datum.ranges = [\n            {\n                legend: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                value: Math.trunc(request),\n            },\n        ];\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = t(`units.${unitLookupKey(hasUsage ? report.meta.total.usage.units : '')}`);\n        datum.usage = [\n            {\n                legend: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                value: Math.trunc(usage),\n            },\n        ];\n        return datum;\n    }\n    getChartDatumWithCapacity() {\n        const { report, reportType, t } = this.props;\n        const datum = {\n            limit: {},\n            ranges: [],\n            usage: [],\n        };\n        // Always show bullet chart legends https://github.com/project-koku/koku-ui/issues/963\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasLimit = hasTotal && report.meta.total.limit && report.meta.total.limit !== null;\n        const limit = Math.trunc(hasLimit ? report.meta.total.limit.value : 0);\n        const limitUnits = t(`units.${unitLookupKey(hasLimit ? report.meta.total.limit.units : '')}`);\n        datum.limit = {\n            legend: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            tooltip: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            value: Math.trunc(limit),\n        };\n        const hasCapacity = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const capacity = Math.trunc(hasCapacity ? report.meta.total.capacity.value : 0);\n        const capacityUnits = t(`units.${unitLookupKey(hasCapacity ? report.meta.total.capacity.units : '')}`);\n        datum.ranges = [\n            {\n                legend: t(`details.usage.${reportType}_capacity`, {\n                    value: capacity,\n                    units: capacityUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_capacity`, {\n                    value: capacity,\n                    units: capacityUnits,\n                }),\n                value: Math.trunc(capacity),\n            },\n        ];\n        const hasRequest = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = t(`units.${unitLookupKey(hasRequest ? report.meta.total.request.units : '')}`);\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = t(`units.${unitLookupKey(hasUsage ? report.meta.total.usage.units : '')}`);\n        datum.usage = [\n            {\n                legend: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                value: Math.trunc(usage),\n            },\n            {\n                legend: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                value: Math.trunc(request),\n            },\n        ];\n        return datum;\n    }\n    getFreeSpace() {\n        const { report, reportType, t } = this.props;\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasCapacity = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const hasRequest = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const capacity = Math.trunc(hasCapacity ? report.meta.total.capacity.value : 0);\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = t(`units.${unitLookupKey(hasRequest ? report.meta.total.request.units : '')}`);\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = t(`units.${unitLookupKey(hasUsage ? report.meta.total.usage.units : '')}`);\n        // Show negative values https://github.com/project-koku/koku-ui/issues/1214\n        const unusedRequestCapacity = capacity - request;\n        const unusedUsageCapacity = capacity - usage;\n        let unusedRequestCapacityPercentage = request > 0 ? (request / capacity) * 100 : 0;\n        if (unusedRequestCapacityPercentage > 100) {\n            unusedRequestCapacityPercentage = 100 - unusedRequestCapacityPercentage;\n        }\n        let unusedUsageCapacityPercentage = capacity > usage ? (usage / capacity) * 100 : 0;\n        if (unusedUsageCapacityPercentage > 100) {\n            unusedUsageCapacityPercentage = 100 - unusedUsageCapacityPercentage;\n        }\n        return (React.createElement(Grid, { hasGutter: true },\n            React.createElement(GridItem, { md: 12, lg: 6 },\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_usage_unused_label`)),\n                React.createElement(\"div\", { style: styles.capacity }, formatValue(unusedUsageCapacity)),\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_usage_unused_units`, {\n                    percentage: formatValue(unusedUsageCapacityPercentage, usageUnits),\n                    units: usageUnits,\n                }))),\n            React.createElement(GridItem, { md: 12, lg: 6 },\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_requests_unused_label`)),\n                React.createElement(\"div\", { style: styles.capacity }, formatValue(unusedRequestCapacity)),\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_requests_unused_units`, {\n                    percentage: formatValue(unusedRequestCapacityPercentage, requestUnits),\n                    units: requestUnits,\n                })))));\n    }\n    render() {\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef }, this.getCpuChart()));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { groupBy, parentGroupBy, reportPathsType, reportType }) => {\n    const query = {\n        filter: {\n            time_scope_units: 'month',\n            time_scope_value: -1,\n            resolution: 'monthly',\n            limit: 3,\n        },\n        group_by: {\n            [parentGroupBy]: groupBy,\n        },\n    };\n    const queryString = getQuery(query);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        report,\n        reportFetchStatus,\n        queryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst UsageChart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(UsageChartBase));\nexport { UsageChart };\n","import { Button, ButtonVariant, Card, CardBody, CardTitle, Grid, GridItem, Popover, Title, } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { orgUnitIdKey, tagPrefix } from 'api/queries/query';\nimport { Cluster } from 'pages/details/components/cluster/cluster';\nimport { CostChart } from 'pages/details/components/costChart/costChart';\nimport { SummaryCard } from 'pages/details/components/summary/summaryCard';\nimport { UsageChart } from 'pages/details/components/usageChart/usageChart';\nimport { styles } from 'pages/details/ocpDetails/detailsHeader.styles';\nimport React from 'react';\nconst PLACEHOLDER = 'placeholder';\nclass CostOverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        // Returns cluster chart\n        this.getClusterChart = (widget) => {\n            const { groupBy, report, t } = this.props;\n            let showWidget = false;\n            for (const groupById of widget.cluster.showWidgetOnGroupBy) {\n                if (groupById === groupBy || (groupById === tagPrefix && groupBy.indexOf(tagPrefix) !== -1)) {\n                    showWidget = true;\n                    break;\n                }\n            }\n            if (showWidget) {\n                return (React.createElement(Card, null,\n                    React.createElement(CardTitle, null,\n                        React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('breakdown.cluster_title'))),\n                    React.createElement(CardBody, null,\n                        React.createElement(Cluster, { groupBy: widget.cluster.reportGroupBy, report: report }))));\n            }\n            return null;\n        };\n        // Returns cost breakdown chart\n        this.getCostChart = () => {\n            const { report, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" },\n                        t('breakdown.cost_breakdown_title'),\n                        React.createElement(Popover, { \"aria-label\": t('breakdown.cost_breakdown_aria_label'), enableFlip: true, bodyContent: React.createElement(React.Fragment, null,\n                                React.createElement(\"p\", { style: styles.infoTitle }, t('breakdown.raw_cost_title')),\n                                React.createElement(\"p\", null, t('breakdown.raw_cost_desc')),\n                                React.createElement(\"br\", null),\n                                React.createElement(\"p\", { style: styles.infoTitle }, t('breakdown.usage_cost_title')),\n                                React.createElement(\"p\", null, t('breakdown.usage_cost_desc')),\n                                React.createElement(\"br\", null),\n                                React.createElement(\"p\", { style: styles.infoTitle }, t('breakdown.markup_title')),\n                                React.createElement(\"p\", null, t('breakdown.markup_desc')),\n                                React.createElement(\"br\", null),\n                                React.createElement(\"a\", { href: t('docs.using_cost_model'), target: \"blank\" }, t('cost_models_wizard.general_info.learn_more'))) },\n                            React.createElement(Button, { variant: ButtonVariant.plain },\n                                React.createElement(OutlinedQuestionCircleIcon, { style: styles.info }))))),\n                React.createElement(CardBody, null,\n                    React.createElement(CostChart, { report: report }))));\n        };\n        // Returns CPU usage chart\n        this.getCpuUsageChart = (widget) => {\n            const { filterBy, groupBy, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.cpu_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(UsageChart, { groupBy: filterBy, parentGroupBy: groupBy, reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns memory usage chart\n        this.getMemoryUsageChart = (widget) => {\n            const { filterBy, groupBy, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.memory_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(UsageChart, { groupBy: filterBy, parentGroupBy: groupBy, reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns summary card widget\n        this.getSummaryCard = (widget) => {\n            const { filterBy, groupBy, query } = this.props;\n            let showWidget = false;\n            for (const groupById of widget.reportSummary.showWidgetOnGroupBy) {\n                if (groupById === groupBy ||\n                    (query && query.group_by && query.group_by[orgUnitIdKey]) ||\n                    (groupById === tagPrefix && groupBy && groupBy.indexOf(tagPrefix) !== -1)) {\n                    showWidget = true;\n                    break;\n                }\n            }\n            if (showWidget) {\n                return (React.createElement(SummaryCard, { filterBy: filterBy, groupBy: widget.reportSummary.reportGroupBy, parentGroupBy: groupBy, query: query, reportPathsType: widget.reportPathsType, reportType: widget.reportType }));\n            }\n            else if (widget.reportSummary.usePlaceholder) {\n                return PLACEHOLDER;\n            }\n            return null;\n        };\n        // Helper to fill grid columns instead of rows, based on the order defined by the reducer\n        this.getWidgetsColumns = () => {\n            const { selectWidgets, widgets } = this.props;\n            const visibleWidgets = [];\n            widgets.map(widgetId => {\n                const widget = selectWidgets[widgetId];\n                const renderedWidget = this.renderWidget(widget);\n                if (renderedWidget !== null) {\n                    visibleWidgets.push(renderedWidget);\n                }\n            });\n            const rows = Math.floor(visibleWidgets.length / 2) + (visibleWidgets.length % 2);\n            const leftColumnWidgets = [];\n            const rightColumnWidgets = [];\n            for (let i = 0; i < rows; i++) {\n                if (visibleWidgets[i] !== PLACEHOLDER) {\n                    leftColumnWidgets.push(visibleWidgets[i]);\n                }\n                if (i + rows < visibleWidgets.length) {\n                    if (visibleWidgets[i + rows] !== PLACEHOLDER) {\n                        rightColumnWidgets.push(visibleWidgets[i + rows]);\n                    }\n                }\n            }\n            return { leftColumnWidgets, rightColumnWidgets };\n        };\n    }\n    // Returns rendered widget based on type\n    renderWidget(widget) {\n        switch (widget.type) {\n            case \"cluster\" /* cluster */:\n                return this.getClusterChart(widget);\n            case \"cost\" /* cost */:\n                return this.getCostChart();\n            case \"cpuUsage\" /* cpuUsage */:\n                return this.getCpuUsageChart(widget);\n            case \"memoryUsage\" /* memoryUsage */:\n                return this.getMemoryUsageChart(widget);\n            case \"summary\" /* reportSummary */:\n                return this.getSummaryCard(widget);\n            default:\n                return null;\n        }\n    }\n    render() {\n        // Sort widgets vertically\n        const { leftColumnWidgets, rightColumnWidgets } = this.getWidgetsColumns();\n        return (React.createElement(Grid, { hasGutter: true },\n            React.createElement(GridItem, { lg: 12, xl: 6 },\n                React.createElement(Grid, { hasGutter: true }, leftColumnWidgets.map((widget, index) => {\n                    return React.createElement(GridItem, { key: `widget-${index}` }, widget);\n                }))),\n            React.createElement(GridItem, { lg: 12, xl: 6 },\n                React.createElement(Grid, { hasGutter: true }, rightColumnWidgets.map((widget, index) => {\n                    return React.createElement(GridItem, { key: `widget-${index}` }, widget);\n                })))));\n    }\n}\nexport { CostOverviewBase };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    export: {\n        marginRight: global_spacer_md.value,\n    },\n    toolbarContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport './dataToolbar.scss';\nimport { Button, ButtonVariant, Dropdown, DropdownItem, DropdownPosition, DropdownToggle, DropdownToggleCheckbox, InputGroup, Select, SelectOption, SelectVariant, TextInput, Toolbar, ToolbarContent, ToolbarFilter, ToolbarGroup, ToolbarItem, ToolbarToggleGroup, } from '@patternfly/react-core';\nimport { ExportIcon } from '@patternfly/react-icons/dist/js/icons/export-icon';\nimport { FilterIcon } from '@patternfly/react-icons/dist/js/icons/filter-icon';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport { orgUnitIdKey, orgUnitNameKey, tagKey, tagPrefix } from 'api/queries/query';\nimport { cloneDeep } from 'lodash';\nimport { uniq, uniqBy } from 'lodash';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { isEqual } from 'utils/equal';\nimport { styles } from './dataToolbar.styles';\nconst defaultFilters = {\n    tag: {},\n};\n// If the number of tag keys are greater or equal, then show text input Vs select\n// See https://github.com/project-koku/koku/pull/2069\nconst tagKeyValueLimit = 50;\nexport class DataToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            categoryInput: '',\n            filters: cloneDeep(defaultFilters),\n            isBulkSelectOpen: false,\n            isCategoryDropdownOpen: false,\n            isOrgUnitSelectExpanded: false,\n            isTagValueDropdownOpen: false,\n            isTagKeySelectExpanded: false,\n            isTagValueSelectExpanded: false,\n            tagKeyValueInput: '',\n        };\n        this.state = Object.assign({}, this.defaultState);\n        // Initialize\n        this.getDefaultCategory = () => {\n            const { categoryOptions, groupBy, query } = this.props;\n            if (!categoryOptions) {\n                return 'name';\n            }\n            if (query && query.group_by && query.group_by[orgUnitIdKey]) {\n                return orgUnitIdKey;\n            }\n            for (const option of categoryOptions) {\n                if (groupBy === option.key || (groupBy && groupBy.indexOf(tagPrefix) !== -1 && option.key === tagKey)) {\n                    return option.key;\n                }\n            }\n            return categoryOptions[0].key;\n        };\n        this.getActiveFilters = query => {\n            const filters = cloneDeep(defaultFilters);\n            if (query && query.filter_by) {\n                Object.keys(query.filter_by).forEach(key => {\n                    const values = Array.isArray(query.filter_by[key]) ? [...query.filter_by[key]] : [query.filter_by[key]];\n                    if (key.indexOf(tagPrefix) !== -1) {\n                        filters.tag[key.substring(tagPrefix.length)] = values;\n                    }\n                    else {\n                        filters[key] = values;\n                    }\n                });\n            }\n            return filters;\n        };\n        this.onDelete = (type, chip) => {\n            // Todo: workaround for https://github.com/patternfly/patternfly-react/issues/3552\n            // This prevents us from using a localized string, if necessary\n            const filterType = type && type.key ? type.key : type;\n            const id = chip && chip.key ? chip.key : chip;\n            if (filterType) {\n                this.setState((prevState) => {\n                    if (prevState.filters.tag[filterType]) {\n                        // Todo: use ID\n                        prevState.filters.tag[filterType] = prevState.filters.tag[filterType].filter(s => s !== id);\n                    }\n                    else if (prevState.filters[filterType]) {\n                        prevState.filters[filterType] = prevState.filters[filterType].filter(s => s !== id);\n                    }\n                    return {\n                        filters: prevState.filters,\n                    };\n                }, () => {\n                    const { filters } = this.state;\n                    const _filterType = filters.tag[filterType] ? `${tagPrefix}${filterType}` : filterType; // Todo: use ID\n                    this.props.onFilterRemoved(_filterType, id);\n                });\n            }\n            else {\n                this.setState({\n                    filters: cloneDeep(defaultFilters),\n                }, () => {\n                    this.props.onFilterRemoved(null); // Clear all\n                });\n            }\n        };\n        // Bulk select\n        this.getBulkSelect = () => {\n            const { isAllSelected, isBulkSelectDisabled, isDisabled, itemsPerPage, itemsTotal, selectedItems, t } = this.props;\n            const { isBulkSelectOpen } = this.state;\n            const numSelected = isAllSelected ? itemsTotal : selectedItems ? selectedItems.length : 0;\n            const allSelected = (isAllSelected || numSelected === itemsTotal) && itemsTotal > 0;\n            const anySelected = numSelected > 0;\n            const someChecked = anySelected ? null : false;\n            const isChecked = allSelected ? true : someChecked;\n            const dropdownItems = [\n                React.createElement(DropdownItem, { key: \"item-1\", onClick: () => this.onBulkSelectClicked('none') }, t('toolbar.bulk_select.select_none')),\n                React.createElement(DropdownItem, { key: \"item-2\", onClick: () => this.onBulkSelectClicked('page') }, t('toolbar.bulk_select.select_page', {\n                    value: itemsPerPage,\n                })),\n                React.createElement(DropdownItem, { key: \"item-3\", onClick: () => this.onBulkSelectClicked('all') }, t('toolbar.bulk_select.select_all', { value: itemsTotal })),\n            ];\n            return (React.createElement(Dropdown, { onSelect: this.onBulkSelect, position: DropdownPosition.left, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled || isBulkSelectDisabled, splitButtonItems: [\n                        React.createElement(DropdownToggleCheckbox, { id: \"bulk-select\", key: \"bulk-select\", \"aria-label\": anySelected ? t('toolbar.bulk_select.aria_deselect') : t('toolbar.bulk_select.aria_select'), isChecked: isChecked, onClick: () => {\n                                anySelected ? this.onBulkSelectClicked('none') : this.onBulkSelectClicked('all');\n                            } }),\n                    ], onToggle: this.onBulkSelectToggle }, numSelected !== 0 && React.createElement(React.Fragment, null,\n                    numSelected,\n                    \" selected\")), isOpen: isBulkSelectOpen, dropdownItems: dropdownItems }));\n        };\n        this.onBulkSelectClicked = (action) => {\n            const { onBulkSelected } = this.props;\n            if (onBulkSelected) {\n                onBulkSelected(action);\n            }\n        };\n        this.onBulkSelect = () => {\n            this.setState({\n                isBulkSelectOpen: !this.state.isBulkSelectOpen,\n            });\n        };\n        this.onBulkSelectToggle = isOpen => {\n            this.setState({\n                isBulkSelectOpen: isOpen,\n            });\n        };\n        this.getCurrentCategoryOption = () => {\n            const { categoryOptions } = this.props;\n            const { currentCategory } = this.state;\n            if (!categoryOptions) {\n                return undefined;\n            }\n            for (const option of categoryOptions) {\n                if (currentCategory === option.key) {\n                    return option;\n                }\n            }\n            return categoryOptions[0];\n        };\n        this.onCategoryClick = value => {\n            this.setState({\n                currentCategory: value,\n            });\n        };\n        this.onCategorySelect = () => {\n            this.setState({\n                categoryInput: '',\n                currentTagKey: undefined,\n                isCategoryDropdownOpen: !this.state.isCategoryDropdownOpen,\n            });\n        };\n        this.onCategoryToggle = isOpen => {\n            this.setState({\n                isCategoryDropdownOpen: isOpen,\n            });\n        };\n        // Category input\n        this.getCategoryInput = categoryOption => {\n            const { isDisabled, t } = this.props;\n            const { currentCategory, filters, categoryInput } = this.state;\n            return (React.createElement(ToolbarFilter, { categoryName: categoryOption, chips: filters[categoryOption.key], deleteChip: this.onDelete, key: categoryOption.key, showToolbarItem: currentCategory === categoryOption.key },\n                React.createElement(InputGroup, null,\n                    React.createElement(TextInput, { isDisabled: isDisabled, name: `${categoryOption.key}-input`, id: `${categoryOption.key}-input`, type: \"search\", \"aria-label\": t(`filter_by.${categoryOption.key}.input_aria_label`), onChange: this.onCategoryInputChange, value: categoryInput, placeholder: t(`filter_by.${categoryOption.key}.placeholder`), onKeyDown: evt => this.onCategoryInput(evt, categoryOption.key) }),\n                    React.createElement(Button, { isDisabled: isDisabled, variant: ButtonVariant.control, \"aria-label\": t(`filter_by.${categoryOption.key}.button_aria_label`), onClick: evt => this.onCategoryInput(evt, categoryOption.key) },\n                        React.createElement(SearchIcon, null)))));\n        };\n        this.getDefaultCategoryOptions = () => {\n            const { t } = this.props;\n            return [{ name: t('filter_by.values.name'), key: 'name' }];\n        };\n        this.onCategoryInputChange = value => {\n            this.setState({ categoryInput: value });\n        };\n        this.onCategoryInput = (event, key) => {\n            const { categoryInput, currentCategory } = this.state;\n            if ((event.key && event.key !== 'Enter') || categoryInput.trim() === '') {\n                return;\n            }\n            this.setState((prevState) => {\n                const prevFilters = prevState.filters[key];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { [currentCategory]: prevFilters && prevFilters.includes(categoryInput)\n                            ? prevFilters\n                            : prevFilters\n                                ? [...prevFilters, categoryInput]\n                                : [categoryInput] }),\n                    categoryInput: '',\n                };\n            }, () => {\n                this.props.onFilterAdded(currentCategory, categoryInput);\n            });\n        };\n        // Org unit select\n        this.getOrgUnitSelect = () => {\n            const { isDisabled, t } = this.props;\n            const { currentCategory, filters, isOrgUnitSelectExpanded } = this.state;\n            const options = this.getOrgUnitOptions().map(option => ({\n                id: option.key,\n                toString: () => option.name,\n                compareTo: value => filters[orgUnitIdKey] ? filters[orgUnitIdKey].find(val => val === value.id) : false,\n            }));\n            const chips = []; // Get selected items as PatternFly's ToolbarChip type\n            const selections = []; // Select options and selections must be same type\n            if (filters[orgUnitIdKey] && Array.isArray(filters[orgUnitIdKey])) {\n                filters[orgUnitIdKey].map(id => {\n                    const option = options.find(val => val.id === id);\n                    if (option) {\n                        selections.push(option);\n                        chips.push({\n                            key: option.id,\n                            node: option.toString(),\n                        });\n                    }\n                });\n            }\n            // Todo: selectOverride is a workaround for https://github.com/patternfly/patternfly-react/issues/4477\n            return (React.createElement(ToolbarFilter, { categoryName: {\n                    key: orgUnitIdKey,\n                    name: t('filter_by.values.org_unit_id'),\n                }, chips: chips, deleteChip: this.onDelete, key: orgUnitIdKey, showToolbarItem: currentCategory === orgUnitIdKey },\n                React.createElement(Select, { isDisabled: isDisabled, className: \"selectOverride\", variant: SelectVariant.checkbox, \"aria-label\": t('filter_by.org_unit.aria_label'), onToggle: this.onOrgUnitToggle, onSelect: this.onOrgUnitSelect, selections: selections, isOpen: isOrgUnitSelectExpanded, placeholderText: t('filter_by.org_unit.placeholder') }, options.map(option => (React.createElement(SelectOption, { description: option.id, key: option.id, value: option }))))));\n        };\n        this.onOrgUnitSelect = (event, selection) => {\n            const checked = event.target.checked;\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters[orgUnitIdKey] ? prevState.filters[orgUnitIdKey] : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign({}, prevState.filters.tag), [orgUnitIdKey]: checked\n                            ? [...prevSelections, selection.id]\n                            : prevSelections.filter(value => value !== selection.id) }),\n                };\n            }, () => {\n                if (checked) {\n                    this.props.onFilterAdded(orgUnitIdKey, selection.id);\n                }\n                else {\n                    this.onDelete(orgUnitIdKey, selection.id);\n                }\n            });\n        };\n        this.onOrgUnitToggle = isOpen => {\n            this.setState({\n                isOrgUnitSelectExpanded: isOpen,\n            });\n        };\n        // Tag key select\n        this.getTagKeySelect = () => {\n            const { isDisabled, t } = this.props;\n            const { currentCategory, currentTagKey, isTagKeySelectExpanded } = this.state;\n            if (currentCategory !== tagKey) {\n                return null;\n            }\n            const selectOptions = this.getTagKeyOptions().map(selectOption => {\n                return React.createElement(SelectOption, { key: selectOption.key, value: selectOption.key });\n            });\n            return (React.createElement(ToolbarItem, null,\n                React.createElement(Select, { isDisabled: isDisabled, variant: SelectVariant.typeahead, \"aria-label\": t('filter_by.tag_key.aria_label'), onClear: this.onTagKeyClear, onToggle: this.onTagKeyToggle, onSelect: this.onTagKeySelect, isOpen: isTagKeySelectExpanded, placeholderText: t('filter_by.tag_key.placeholder'), selections: currentTagKey }, selectOptions)));\n        };\n        this.onTagKeyClear = () => {\n            this.setState({\n                currentTagKey: undefined,\n                isTagKeySelectExpanded: false,\n            });\n        };\n        this.onTagKeySelect = (event, selection) => {\n            this.setState({\n                currentTagKey: selection,\n                isTagKeySelectExpanded: !this.state.isTagKeySelectExpanded,\n            });\n        };\n        this.onTagKeyToggle = isOpen => {\n            this.setState({\n                isTagKeySelectExpanded: isOpen,\n            });\n        };\n        // Tag value select\n        this.getTagValueSelect = tagKeyOption => {\n            const { isDisabled, t } = this.props;\n            const { currentCategory, currentTagKey, filters, isTagValueSelectExpanded, tagKeyValueInput } = this.state;\n            const selectOptions = this.getTagValueOptions().map(selectOption => {\n                return React.createElement(SelectOption, { key: selectOption.key, value: selectOption.key });\n            });\n            return (React.createElement(ToolbarFilter, { categoryName: tagKeyOption, chips: filters.tag[tagKeyOption.key], deleteChip: this.onDelete, key: tagKeyOption.key, showToolbarItem: currentCategory === tagKey && currentTagKey === tagKeyOption.key }, selectOptions.length < tagKeyValueLimit ? (React.createElement(Select, { isDisabled: isDisabled, variant: SelectVariant.checkbox, \"aria-label\": t('filter_by.tag_value.aria_label'), onToggle: this.onTagValueToggle, onSelect: this.onTagValueSelect, selections: filters.tag[tagKeyOption.key] ? filters.tag[tagKeyOption.key] : [], isOpen: isTagValueSelectExpanded, placeholderText: t('filter_by.tag_value.placeholder') }, selectOptions)) : (React.createElement(InputGroup, null,\n                React.createElement(TextInput, { isDisabled: isDisabled, name: \"tagkeyvalue-input\", id: \"tagkeyvalue-input\", type: \"search\", \"aria-label\": t('filter_by.tag_value.aria_label'), onChange: this.onTagValueInputChange, value: tagKeyValueInput, placeholder: t('filter_by.tag_value.input_placeholder'), onKeyDown: evt => this.onTagValueInput(evt) }),\n                React.createElement(Button, { isDisabled: isDisabled, variant: ButtonVariant.control, \"aria-label\": t('filter_by.tag_value.button_aria_label'), onClick: evt => this.onTagValueInput(evt) },\n                    React.createElement(SearchIcon, null))))));\n        };\n        this.onTagValueInputChange = value => {\n            this.setState({ tagKeyValueInput: value });\n        };\n        this.onTagValueInput = event => {\n            const { currentTagKey, tagKeyValueInput } = this.state;\n            if ((event.key && event.key !== 'Enter') || tagKeyValueInput.trim() === '') {\n                return;\n            }\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters.tag[currentTagKey] ? prevState.filters.tag[currentTagKey] : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign(Object.assign({}, prevState.filters.tag), { [currentTagKey]: [...prevSelections, tagKeyValueInput] }) }),\n                    tagKeyValueInput: '',\n                };\n            }, () => {\n                this.props.onFilterAdded(`${tagPrefix}${currentTagKey}`, tagKeyValueInput);\n            });\n        };\n        this.onTagValueSelect = (event, selection) => {\n            const { currentTagKey } = this.state;\n            const checked = event.target.checked;\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters.tag[currentTagKey] ? prevState.filters.tag[currentTagKey] : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign(Object.assign({}, prevState.filters.tag), { [currentTagKey]: checked\n                                ? [...prevSelections, selection]\n                                : prevSelections.filter(value => value !== selection) }) }),\n                };\n            }, () => {\n                if (checked) {\n                    this.props.onFilterAdded(`${tagPrefix}${currentTagKey}`, selection);\n                }\n                else {\n                    this.onDelete(currentTagKey, selection);\n                }\n            });\n        };\n        this.onTagValueToggle = isOpen => {\n            this.setState({\n                isTagValueSelectExpanded: isOpen,\n            });\n        };\n        // Export button\n        this.getExportButton = () => {\n            const { isDisabled, isExportDisabled } = this.props;\n            return (React.createElement(ToolbarItem, null,\n                React.createElement(Button, { isDisabled: isDisabled || isExportDisabled, onClick: this.handleExportClicked, variant: ButtonVariant.plain },\n                    React.createElement(ExportIcon, null))));\n        };\n        this.handleExportClicked = () => {\n            this.props.onExportClicked();\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            currentCategory: this.getDefaultCategory(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { categoryOptions, groupBy, orgReport, query, tagReport } = this.props;\n        if (categoryOptions !== prevProps.categoryOptions ||\n            groupBy !== prevProps.groupBy ||\n            (query && !isEqual(query, prevProps.query)) ||\n            (orgReport && !isEqual(orgReport, prevProps.orgReport)) ||\n            (tagReport && !isEqual(tagReport, prevProps.tagReport))) {\n            this.setState(() => {\n                const filters = this.getActiveFilters(query);\n                return categoryOptions !== prevProps.categoryOptions || prevProps.groupBy !== groupBy\n                    ? {\n                        categoryInput: '',\n                        currentCategory: this.getDefaultCategory(),\n                        currentOrgUnit: '',\n                        currentTagKey: '',\n                        tagKeyValueInput: '',\n                        filters,\n                    }\n                    : {\n                        filters,\n                    };\n            });\n        }\n    }\n    // Category dropdown\n    getCategoryDropdown() {\n        const { categoryOptions, isDisabled } = this.props;\n        const { isCategoryDropdownOpen } = this.state;\n        if (!categoryOptions) {\n            return null;\n        }\n        return (React.createElement(ToolbarItem, null,\n            React.createElement(Dropdown, { onSelect: this.onCategorySelect, position: DropdownPosition.left, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled, onToggle: this.onCategoryToggle, style: { width: '100%' } },\n                    React.createElement(FilterIcon, null),\n                    \" \",\n                    this.getCurrentCategoryOption().name), isOpen: isCategoryDropdownOpen, dropdownItems: categoryOptions &&\n                    categoryOptions.map(option => (React.createElement(DropdownItem, { key: option.key, onClick: () => this.onCategoryClick(option.key) }, option.name))), style: { width: '100%' } })));\n    }\n    getOrgUnitOptions() {\n        const { orgReport } = this.props;\n        let options = [];\n        if (!(orgReport && orgReport.data)) {\n            return options;\n        }\n        // Sort all names first\n        const sortedData = orgReport.data.sort((a, b) => {\n            if (a[orgUnitNameKey] < b[orgUnitNameKey]) {\n                return -1;\n            }\n            if (a[orgUnitNameKey] > b[orgUnitNameKey]) {\n                return 1;\n            }\n            return 0;\n        });\n        // Move roots first\n        const roots = sortedData.filter(org => org.level === 0);\n        const filteredOrgs = sortedData.filter(org => org.level !== 0);\n        roots.map(root => {\n            const item = sortedData.find(org => org[orgUnitIdKey] === root[orgUnitIdKey]);\n            filteredOrgs.unshift(item);\n        });\n        if (filteredOrgs.length > 0) {\n            options = filteredOrgs.map(org => {\n                return {\n                    key: org[orgUnitIdKey],\n                    name: org[orgUnitNameKey],\n                };\n            });\n        }\n        return options;\n    }\n    getTagKeyOptions() {\n        const { tagReport } = this.props;\n        let data = [];\n        let options = [];\n        if (!(tagReport && tagReport.data)) {\n            return options;\n        }\n        // If the key_only param is used, we have an array of strings\n        let hasTagKeys = false;\n        for (const item of tagReport.data) {\n            if (item.hasOwnProperty('key')) {\n                hasTagKeys = true;\n                break;\n            }\n        }\n        // Workaround for https://github.com/project-koku/koku/issues/1797\n        if (hasTagKeys) {\n            const keepData = tagReport.data.map(\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            (_a) => {\n                var { type } = _a, keepProps = __rest(_a, [\"type\"]);\n                return keepProps;\n            });\n            data = uniqBy(keepData, 'key');\n        }\n        else {\n            data = uniq(tagReport.data);\n        }\n        if (data.length > 0) {\n            options = data.map(item => {\n                const key = hasTagKeys ? item.key : item;\n                return {\n                    key,\n                    name: key,\n                };\n            });\n        }\n        return options;\n    }\n    getTagValueOptions() {\n        const { tagReport } = this.props;\n        const { currentTagKey } = this.state;\n        let data = [];\n        if (tagReport && tagReport.data) {\n            data = [...new Set([...tagReport.data])]; // prune duplicates\n        }\n        let options = [];\n        if (data.length > 0) {\n            for (const tag of data) {\n                if (currentTagKey === tag.key && tag.values) {\n                    options = tag.values.map(val => {\n                        return {\n                            key: val,\n                            name: val,\n                        };\n                    });\n                    break;\n                }\n            }\n        }\n        return options;\n    }\n    render() {\n        const { categoryOptions, dateRange, pagination, showBulkSelect, showExport, showFilter, style } = this.props;\n        const options = categoryOptions ? categoryOptions : this.getDefaultCategoryOptions();\n        // Todo: clearAllFilters workaround https://github.com/patternfly/patternfly-react/issues/4222\n        return (React.createElement(\"div\", { style: style ? style : styles.toolbarContainer },\n            React.createElement(Toolbar, { id: \"details-toolbar\", clearAllFilters: this.onDelete, collapseListedFiltersBreakpoint: \"xl\" },\n                React.createElement(ToolbarContent, null,\n                    React.createElement(ToolbarToggleGroup, { breakpoint: \"xl\", toggleIcon: React.createElement(FilterIcon, null) },\n                        showBulkSelect && React.createElement(ToolbarItem, { variant: \"bulk-select\" }, this.getBulkSelect()),\n                        showFilter && (React.createElement(ToolbarGroup, { variant: \"filter-group\" },\n                            this.getCategoryDropdown(),\n                            this.getTagKeySelect(),\n                            this.getTagKeyOptions().map(option => this.getTagValueSelect(option)),\n                            this.getOrgUnitSelect(),\n                            options &&\n                                options\n                                    .filter(option => option.key !== tagKey && option.key !== orgUnitIdKey)\n                                    .map(option => this.getCategoryInput(option)))),\n                        Boolean(showExport) && React.createElement(ToolbarGroup, null, this.getExportButton()),\n                        dateRange && React.createElement(ToolbarGroup, null, dateRange)),\n                    React.createElement(ToolbarItem, { alignment: { default: 'alignRight' }, variant: \"pagination\" }, pagination)))));\n    }\n}\nconst DataToolbar = withTranslation()(DataToolbarBase);\nexport { DataToolbar };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    form: {\n        marginLeft: global_spacer_sm.var,\n    },\n    modal: {\n        input: {\n            marginRight: global_spacer_xs.var,\n        },\n        ul: {\n            marginLeft: global_spacer_sm.var,\n        },\n    },\n    title: {\n        marginBottom: global_spacer_md.var,\n    },\n};\n","import { Button, ButtonVariant } from '@patternfly/react-core';\nimport { getQuery, orgUnitIdKey } from 'api/queries/query';\nimport { format } from 'date-fns';\nimport fileDownload from 'js-file-download';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { exportActions, exportSelectors } from 'store/exports';\nimport { getTestProps, testIds } from 'testIds';\nconst reportType = \"cost\" /* cost */;\nexport class ExportSubmitBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            fetchReportClicked: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExport = () => {\n            const { report, reportFetchStatus } = this.props;\n            if (report && reportFetchStatus === 2 /* complete */) {\n                fileDownload(report.data, this.getFileName(), 'text/csv');\n                this.handleClose();\n            }\n        };\n        this.getFileName = () => {\n            const { groupBy, reportPathsType, t } = this.props;\n            const fileName = t('export.file_name', {\n                provider: reportPathsType,\n                groupBy,\n                date: format(new Date(), 'yyyy-MM-dd'),\n            });\n            return `${fileName}.csv`;\n        };\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleFetchReport = () => {\n            const { exportReport, queryString, reportPathsType } = this.props;\n            exportReport(reportPathsType, reportType, queryString);\n            this.setState({\n                fetchReportClicked: true,\n            }, () => {\n                this.getExport();\n            });\n        };\n        this.handleResolutionChange = (_, event) => {\n            this.setState({ resolution: event.currentTarget.value });\n        };\n        this.handleResolutionChange = this.handleResolutionChange.bind(this);\n    }\n    componentDidUpdate(prevProps) {\n        const { report } = this.props;\n        const { fetchReportClicked } = this.state;\n        if (prevProps.report !== report && fetchReportClicked) {\n            this.getExport();\n        }\n    }\n    render() {\n        const { reportFetchStatus, t } = this.props;\n        return (React.createElement(Button, Object.assign({}, getTestProps(testIds.export.submit_btn), { isDisabled: reportFetchStatus === 1 /* inProgress */, key: \"confirm\", onClick: this.handleFetchReport, variant: ButtonVariant.primary }), t('export.confirm')));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const { groupBy, isAllItems, items, query, reportPathsType, resolution, timeScope } = props;\n    const getQueryString = () => {\n        const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { filter: {\n                limit: undefined,\n                offset: undefined,\n                resolution: resolution ? resolution : undefined,\n                time_scope_value: timeScope ? timeScope : undefined,\n            }, filter_by: {}, order_by: undefined, perspective: undefined, dateRange: undefined });\n        // Store filter_by as an array so we can add to it below\n        if (query.filter_by) {\n            for (const key of Object.keys(query.filter_by)) {\n                if (newQuery.filter_by[key] === undefined) {\n                    newQuery.filter_by[key] = [];\n                }\n                newQuery.filter_by[key].push(query.filter_by[key]);\n            }\n        }\n        if (isAllItems) {\n            // Ensure group_by isn't overridden -- org_unit_id is not unique\n            if (groupBy === orgUnitIdKey) {\n                if (newQuery.filter_by[orgUnitIdKey] === undefined) {\n                    newQuery.filter_by[orgUnitIdKey] = [];\n                }\n                newQuery.filter_by[orgUnitIdKey].push(query.group_by[orgUnitIdKey]);\n            }\n        }\n        else {\n            if (groupBy === orgUnitIdKey) {\n                for (const item of items) {\n                    // Note that type only exists when grouping by org units\n                    const type = item.type === 'organizational_unit' ? orgUnitIdKey : item.type;\n                    if (newQuery.filter_by[type] === undefined) {\n                        newQuery.filter_by[type] = [];\n                    }\n                    newQuery.filter_by[type].push(item.id);\n                }\n            }\n            else {\n                for (const item of items) {\n                    if (newQuery.filter_by[groupBy] === undefined) {\n                        newQuery.filter_by[groupBy] = [];\n                    }\n                    newQuery.filter_by[groupBy].push(item.id);\n                }\n            }\n        }\n        return getQuery(newQuery);\n    };\n    const queryString = getQueryString();\n    const report = exportSelectors.selectExport(state, reportPathsType, reportType, queryString);\n    const reportError = exportSelectors.selectExportError(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = exportSelectors.selectExportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportError,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    exportReport: exportActions.exportReport,\n};\nconst ExportSubmitConnect = connect(mapStateToProps, mapDispatchToProps)(ExportSubmitBase);\nconst ExportSubmit = withTranslation()(ExportSubmitConnect);\nexport { ExportSubmit };\n","import { Button, ButtonVariant, Form, FormGroup, Modal, Radio } from '@patternfly/react-core';\nimport { tagPrefix } from 'api/queries/query';\nimport { format } from 'date-fns';\nimport { orderBy } from 'lodash';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { exportActions } from 'store/exports';\nimport { getTestProps, testIds } from 'testIds';\nimport { styles } from './exportModal.styles';\nimport { ExportSubmit } from './exportSubmit';\nconst resolutionOptions = [\n    { label: 'export.resolution_daily', value: 'daily' },\n    { label: 'export.resolution_monthly', value: 'monthly' },\n];\nconst timeScopeOptions = [\n    { label: 'export.time_scope_current', value: -1 },\n    { label: 'export.time_scope_previous', value: -2 },\n];\nexport class ExportModalBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            timeScope: -1,\n            resolution: 'monthly',\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleMonthChange = (_, event) => {\n            this.setState({ timeScope: Number(event.currentTarget.value) });\n        };\n        this.handleResolutionChange = (_, event) => {\n            this.setState({ resolution: event.currentTarget.value });\n        };\n        this.handleResolutionChange = this.handleResolutionChange.bind(this);\n    }\n    componentDidUpdate(prevProps) {\n        const { isOpen } = this.props;\n        if (isOpen && !prevProps.isOpen) {\n            this.setState(Object.assign({}, this.defaultState));\n        }\n    }\n    render() {\n        const { groupBy, isAllItems, items, query, reportPathsType, showAggregate, t } = this.props;\n        const { resolution, timeScope } = this.state;\n        let sortedItems = [...items];\n        if (this.props.isOpen) {\n            if (items && items.length === 0 && isAllItems) {\n                sortedItems = [\n                    {\n                        label: t('export.all'),\n                    },\n                ];\n            }\n            else {\n                sortedItems = orderBy(sortedItems, ['label'], ['asc']);\n            }\n        }\n        let selectedLabel = t('export.selected', { groupBy });\n        if (groupBy.indexOf(tagPrefix) !== -1) {\n            selectedLabel = t('export.selected_tags');\n        }\n        const thisMonth = new Date();\n        const lastMonth = new Date().setMonth(thisMonth.getMonth() - 1);\n        const currentMonth = format(thisMonth, 'MMMM yyyy');\n        const previousMonth = format(lastMonth - 1, 'MMMM yyyy');\n        return (React.createElement(Modal, { style: styles.modal, isOpen: this.props.isOpen, onClose: this.handleClose, title: t('export.title'), variant: \"small\", actions: [\n                React.createElement(ExportSubmit, { groupBy: groupBy, isAllItems: isAllItems, items: items, key: \"confirm\", timeScope: showAggregate ? timeScope : undefined, onClose: this.handleClose, query: query, reportPathsType: reportPathsType, resolution: showAggregate ? resolution : undefined }),\n                React.createElement(Button, Object.assign({}, getTestProps(testIds.export.cancel_btn), { key: \"cancel\", onClick: this.handleClose, variant: ButtonVariant.link }), t('export.cancel')),\n            ] },\n            React.createElement(\"div\", { style: styles.title },\n                React.createElement(\"span\", null, t('export.heading', { groupBy }))),\n            React.createElement(Form, { style: styles.form },\n                showAggregate && (React.createElement(React.Fragment, null,\n                    React.createElement(FormGroup, { label: t('export.aggregate_type'), fieldId: \"aggregate-type\" },\n                        React.createElement(React.Fragment, null, resolutionOptions.map((option, index) => (React.createElement(Radio, { key: index, id: `resolution-${index}`, isValid: option.value !== undefined, label: t(option.label), value: option.value, checked: resolution === option.value, name: \"resolution\", onChange: this.handleResolutionChange, \"aria-label\": t(option.label) }))))),\n                    React.createElement(FormGroup, { label: t('export.time_scope_title'), fieldId: \"timeScope\" },\n                        React.createElement(React.Fragment, null, timeScopeOptions.map((option, index) => (React.createElement(Radio, { key: index, id: `timeScope-${index}`, isValid: option.value !== undefined, label: t(option.label, { date: option.value === -2 ? previousMonth : currentMonth }), value: option.value, checked: timeScope === option.value, name: \"timeScope\", onChange: this.handleMonthChange, \"aria-label\": t(option.label) }))))))),\n                React.createElement(FormGroup, { label: selectedLabel, fieldId: \"selected-labels\" },\n                    React.createElement(\"ul\", null, sortedItems.map((groupItem, index) => {\n                        return React.createElement(\"li\", { key: index }, groupItem.label);\n                    }))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {};\n});\nconst mapDispatchToProps = {\n    exportReport: exportActions.exportReport,\n};\nconst ExportModalConnect = connect(mapStateToProps, mapDispatchToProps)(ExportModalBase);\nconst ExportModal = withTranslation()(ExportModalConnect);\nexport { ExportModal };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    groupBySelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    groupBySelectorLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n};\n","import { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { orgUnitIdKey, orgUnitNameKey, parseQuery } from 'api/queries/query';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './groupBy.styles';\nclass GroupByOrgBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            defaultItem: this.props.groupBy || this.props.options[0].value,\n            isGroupByOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getCurrentGroupBy = () => {\n            const { getIdKeyForGroupBy } = this.props;\n            const queryFromRoute = parseQuery(location.search);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by ? Object.keys(queryFromRoute.group_by) : [];\n            let groupBy = getIdKeyForGroupBy(queryFromRoute.group_by);\n            for (const key of groupByKeys) {\n                const index = key.indexOf(orgUnitIdKey);\n                if (index !== -1) {\n                    groupBy = queryFromRoute.group_by[orgUnitIdKey];\n                    break;\n                }\n            }\n            return groupBy;\n        };\n        this.getGroupByItems = () => {\n            const { orgReport } = this.props;\n            if (!(orgReport && orgReport.data)) {\n                return [];\n            }\n            // Sort all names first\n            const sortedData = orgReport.data.sort((a, b) => {\n                if (a[orgUnitNameKey] < b[orgUnitNameKey]) {\n                    return -1;\n                }\n                if (a[orgUnitNameKey] > b[orgUnitNameKey]) {\n                    return 1;\n                }\n                return 0;\n            });\n            // Move roots first\n            const roots = sortedData.filter(org => org.level === 0);\n            const filteredOrgs = sortedData.filter(org => org.level !== 0);\n            roots.map(root => {\n                const item = sortedData.find(org => org[orgUnitIdKey] === root[orgUnitIdKey]);\n                filteredOrgs.unshift(item);\n            });\n            return filteredOrgs.map(org => ({\n                id: org[orgUnitIdKey],\n                toString: () => org[orgUnitNameKey],\n            }));\n        };\n        this.handleGroupByClear = () => {\n            this.setState({\n                currentItem: undefined,\n            });\n        };\n        this.handleGroupBySelect = (event, selection) => {\n            const { onItemClicked } = this.props;\n            this.setState({\n                currentItem: selection.id,\n                isGroupByOpen: false,\n            });\n            if (onItemClicked) {\n                onItemClicked(`${orgUnitIdKey}${selection.id}`);\n            }\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({ isGroupByOpen });\n        };\n        this.handleGroupByClear = this.handleGroupByClear.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { groupBy } = this.props;\n        if (prevProps.groupBy !== groupBy) {\n            this.setState({ currentItem: this.getCurrentGroupBy() });\n        }\n    }\n    render() {\n        const { isDisabled = false, t } = this.props;\n        const { currentItem, isGroupByOpen } = this.state;\n        const groupByItems = this.getGroupByItems();\n        const selection = groupByItems.find((item) => item.id === currentItem);\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(Select, { \"aria-label\": t('group_by.org_unit_aria_label'), isDisabled: isDisabled, onClear: this.handleGroupByClear, onToggle: this.handleGroupByToggle, onSelect: this.handleGroupBySelect, isOpen: isGroupByOpen, placeholderText: t('group_by.org_unit_placeholder'), selections: selection, variant: SelectVariant.typeahead }, groupByItems.map(item => (React.createElement(SelectOption, { description: item.id, key: item.id, value: item }))))));\n    }\n}\nconst GroupByOrg = withTranslation()(GroupByOrgBase);\nexport { GroupByOrg };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { parseQuery, tagPrefix } from 'api/queries/query';\nimport { uniq, uniqBy } from 'lodash';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './groupBy.styles';\nclass GroupByTagBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isGroupByOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getGroupByItems = () => {\n            const { tagReport } = this.props;\n            if (!(tagReport && tagReport.data)) {\n                return [];\n            }\n            // If the key_only param is used, we have an array of strings\n            let hasTagKeys = false;\n            for (const item of tagReport.data) {\n                if (item.hasOwnProperty('key')) {\n                    hasTagKeys = true;\n                    break;\n                }\n            }\n            // Workaround for https://github.com/project-koku/koku/issues/1797\n            let data = [];\n            if (hasTagKeys) {\n                const keepData = tagReport.data.map(\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                (_a) => {\n                    var { type } = _a, keepProps = __rest(_a, [\"type\"]);\n                    return keepProps;\n                });\n                data = uniqBy(keepData, 'key');\n            }\n            else {\n                data = uniq(tagReport.data);\n            }\n            return data.map(item => {\n                const tagKey = hasTagKeys ? item.key : item;\n                return React.createElement(SelectOption, { key: item.key, value: tagKey });\n            });\n        };\n        this.getCurrentGroupBy = () => {\n            const queryFromRoute = parseQuery(location.search);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by ? Object.keys(queryFromRoute.group_by) : [];\n            let groupBy;\n            for (const key of groupByKeys) {\n                const index = key.indexOf(tagPrefix);\n                if (index !== -1) {\n                    groupBy = key.slice(tagPrefix.length);\n                    break;\n                }\n            }\n            return groupBy;\n        };\n        this.handleGroupByClear = () => {\n            this.setState({\n                currentItem: undefined,\n            });\n        };\n        this.handleGroupBySelect = (event, selection) => {\n            const { onItemClicked } = this.props;\n            this.setState({\n                currentItem: selection,\n                isGroupByOpen: false,\n            });\n            if (onItemClicked) {\n                onItemClicked(`${tagPrefix}${selection}`);\n            }\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({ isGroupByOpen });\n        };\n        this.handleGroupByClear = this.handleGroupByClear.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { groupBy } = this.props;\n        if (prevProps.groupBy !== groupBy) {\n            this.setState({ currentItem: this.getCurrentGroupBy() });\n        }\n    }\n    render() {\n        const { isDisabled, t } = this.props;\n        const { currentItem, isGroupByOpen } = this.state;\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(Select, { \"aria-label\": t('group_by.tag_key_aria_label'), isDisabled: isDisabled, onClear: this.handleGroupByClear, onToggle: this.handleGroupByToggle, onSelect: this.handleGroupBySelect, isOpen: isGroupByOpen, placeholderText: t('group_by.tag_key_placeholder'), selections: currentItem, variant: SelectVariant.typeahead }, this.getGroupByItems())));\n    }\n}\nconst GroupByTag = withTranslation()(GroupByTagBase);\nexport { GroupByTag };\n","import { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport { getQuery, orgUnitIdKey, parseQuery, tagKey, tagPrefix } from 'api/queries/query';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { orgActions, orgSelectors } from 'store/orgs';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { styles } from './groupBy.styles';\nimport { GroupByOrg } from './groupByOrg';\nimport { GroupByTag } from './groupByTag';\nconst groupByOrgOptions = [{ label: orgUnitIdKey, value: orgUnitIdKey }];\nconst groupByTagOptions = [{ label: tagKey, value: tagKey }];\nconst orgReportType = \"org\" /* org */;\nconst tagReportType = \"tag\" /* tag */;\nclass GroupByBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            defaultItem: this.props.groupBy || this.props.options[0].value,\n            isGroupByOpen: false,\n            isGroupByOrgVisible: false,\n            isGroupByTagVisible: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleGroupByClick = value => {\n            const { onItemClicked } = this.props;\n            if (value === orgUnitIdKey || value === tagKey) {\n                this.setState({\n                    currentItem: value,\n                    isGroupByOrgVisible: value === orgUnitIdKey,\n                    isGroupByTagVisible: value === tagKey,\n                });\n            }\n            else {\n                this.setState({\n                    currentItem: value,\n                    isGroupByOrgVisible: false,\n                    isGroupByTagVisible: false,\n                });\n                if (onItemClicked) {\n                    onItemClicked(value);\n                }\n            }\n        };\n        this.getGroupByItems = () => {\n            const { options, orgReport, tagReport, t } = this.props;\n            const allOptions = [...options];\n            if (orgReport && orgReport.data && orgReport.data.length > 0) {\n                allOptions.push(...groupByOrgOptions);\n            }\n            if (tagReport && tagReport.data && tagReport.data.length > 0) {\n                allOptions.push(...groupByTagOptions);\n            }\n            return allOptions.map(option => (React.createElement(DropdownItem, { component: \"button\", key: option.value, onClick: () => this.handleGroupByClick(option.value) }, t(`group_by.values.${option.label}`))));\n        };\n        this.getCurrentGroupBy = () => {\n            const { getIdKeyForGroupBy } = this.props;\n            const { defaultItem } = this.state;\n            const queryFromRoute = parseQuery(location.search);\n            if (!(queryFromRoute && queryFromRoute.group_by)) {\n                return defaultItem;\n            }\n            let groupBy = getIdKeyForGroupBy(queryFromRoute.group_by);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by ? Object.keys(queryFromRoute.group_by) : [];\n            for (const key of groupByKeys) {\n                let index = key.indexOf(tagPrefix);\n                if (index !== -1) {\n                    groupBy = tagKey;\n                    this.setState({\n                        isGroupByTagVisible: true,\n                    });\n                    break;\n                }\n                index = key.indexOf(orgUnitIdKey);\n                if (index !== -1) {\n                    groupBy = orgUnitIdKey;\n                    this.setState({\n                        isGroupByOrgVisible: true,\n                    });\n                    break;\n                }\n            }\n            return groupBy !== 'date' ? groupBy : defaultItem;\n        };\n        this.handleGroupBySelect = () => {\n            this.setState({\n                isGroupByOpen: !this.state.isGroupByOpen,\n            });\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({\n                isGroupByOpen,\n            });\n        };\n        this.handleGroupByClick = this.handleGroupByClick.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        const { fetchOrg, fetchTag, queryString, orgReportPathsType, showOrgs, showTags, tagReportPathsType } = this.props;\n        if (showOrgs) {\n            fetchOrg(orgReportPathsType, orgReportType, queryString);\n        }\n        if (showTags) {\n            fetchTag(tagReportPathsType, tagReportType, queryString);\n        }\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchOrg, fetchTag, groupBy, orgReportPathsType, perspective, queryString, showOrgs, showTags, tagReportPathsType, } = this.props;\n        if (prevProps.groupBy !== groupBy || prevProps.perspective !== perspective) {\n            if (showOrgs) {\n                fetchOrg(orgReportPathsType, orgReportType, queryString);\n            }\n            if (showTags) {\n                fetchTag(tagReportPathsType, tagReportType, queryString);\n            }\n            let options;\n            if (prevProps.perspective !== perspective) {\n                options = {\n                    isGroupByOrgVisible: false,\n                    isGroupByTagVisible: false,\n                };\n            }\n            this.setState(Object.assign({ currentItem: this.getCurrentGroupBy() }, (options ? options : {})));\n        }\n    }\n    render() {\n        const { getIdKeyForGroupBy, groupBy, isDisabled = false, onItemClicked, orgReport, t, tagReport } = this.props;\n        const { currentItem, isGroupByOpen, isGroupByOrgVisible, isGroupByTagVisible } = this.state;\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(\"label\", { style: styles.groupBySelectorLabel },\n                t('group_by.view'),\n                \":\"),\n            React.createElement(Dropdown, { onSelect: this.handleGroupBySelect, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled, onToggle: this.handleGroupByToggle }, t(`group_by.values.${currentItem}`)), isOpen: isGroupByOpen, dropdownItems: [this.getGroupByItems()] }),\n            Boolean(isGroupByOrgVisible) && (React.createElement(GroupByOrg, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: isDisabled, onItemClicked: onItemClicked, options: groupByOrgOptions, orgReport: orgReport })),\n            Boolean(isGroupByTagVisible) && (React.createElement(GroupByTag, { groupBy: groupBy, isDisabled: isDisabled, onItemClicked: onItemClicked, options: groupByTagOptions, tagReport: tagReport }))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { orgReportPathsType, tagReportPathsType }) => {\n    const queryString = getQuery({\n    // key_only: true\n    });\n    const orgReport = orgSelectors.selectOrg(state, orgReportPathsType, orgReportType, queryString);\n    const orgReportFetchStatus = orgSelectors.selectOrgFetchStatus(state, orgReportPathsType, orgReportType, queryString);\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, queryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, queryString);\n    return {\n        queryString,\n        orgReport,\n        orgReportFetchStatus,\n        tagReport,\n        tagReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchOrg: orgActions.fetchOrg,\n    fetchTag: tagActions.fetchTag,\n};\nconst GroupByConnect = connect(mapStateToProps, mapDispatchToProps)(GroupByBase);\nconst GroupBy = withTranslation()(GroupByConnect);\nexport { GroupBy };\n","import { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { global_spacer_lg } from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport { global_spacer_sm } from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    currentCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    currentCostData: {\n        fill: 'none',\n    },\n    itemsPerRow: 0,\n    previousCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    previousCostData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString } from 'components/charts/common/chartDatumUtils';\nimport { getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { noop } from 'utils/noop';\nimport { chartStyles, styles } from './historicalCostChart.styles';\nclass HistoricalCostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.resizeObserver = noop;\n        this.navToggle = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentCostData, currentInfrastructureCostData, previousCostData, previousInfrastructureCostData, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            const costInfrastructureTooltipKey = 'chart.cost_infrastructure_legend_tooltip';\n            const costTooltipKey = 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousCostData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentCostData, costTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentCostData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'previousInfrastructureCost',\n                    data: previousInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(previousInfrastructureCostData, costInfrastructureTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousInfrastructureCostData), { stroke: chartStyles.previousColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'currentInfrastructureCost',\n                    data: currentInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(currentInfrastructureCostData, costInfrastructureTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentInfrastructureCostData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.initResizeObserve = () => {\n            const containerElement = this.containerRef.current;\n            const { ResizeObserver } = window;\n            if (containerElement && ResizeObserver) {\n                const resizeObserver = new ResizeObserver(this.handleResize);\n                resizeObserver.observe(containerElement);\n                this.resizeObserver = () => resizeObserver.unobserve(containerElement);\n            }\n            else {\n                this.handleResize();\n                window.addEventListener('resize', this.handleResize);\n                this.resizeObserver = () => window.removeEventListener('resize', this.handleResize);\n                this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 120,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 700 ? chartStyles.itemsPerRow : 2;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\" }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.initResizeObserve();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.currentInfrastructureCostData !== this.props.currentInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData ||\n            prevProps.previousInfrastructureCostData !== this.props.previousInfrastructureCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.resizeObserver) {\n            this.resizeObserver();\n        }\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, previousInfrastructureCostData } = this.props;\n        const currentRequestDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousRequestDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        return currentRequestDate > 0 || previousRequestDate > 0 ? Math.max(currentRequestDate, previousRequestDate) : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 120,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 700\n                ? containerHeight - 25\n                : containerHeight\n            : containerHeight;\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: adjustedContainerHeight }) },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis }))))));\n    }\n}\nexport { HistoricalCostChart };\n","import global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    chartHeight: 300,\n    chartContainerHeight: 300,\n};\nexport const styles = {\n    chartContainer: {\n        marginLeft: global_spacer_lg.value,\n    },\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n    costChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    trendChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    usageChart: {\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport { getQuery } from 'api/queries/query';\nimport { transformReport } from 'components/charts/common/chartDatumUtils';\nimport { HistoricalCostChart } from 'components/charts/historicalCostChart';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataCostChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, size: \"md\" }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, size: \"xs\" })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, reportType, t, } = this.props;\n        // Current data\n        const currentData = transformReport(currentReport, 0 /* rolling */, 'date', 'cost');\n        const currentInfrastructureCostData = transformReport(currentReport, 0 /* rolling */, 'date', 'infrastructure');\n        // Previous data\n        const previousData = transformReport(previousReport, 0 /* rolling */, 'date', 'cost');\n        const previousInfrastructureCostData = transformReport(previousReport, 0 /* rolling */, 'date', 'infrastructure');\n        const costUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.cost\n            ? currentReport.meta.total.cost.total.units\n            : 'USD';\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.costChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalCostChart, { adjustContainerHeight: true, containerHeight: chartStyles.chartContainerHeight - 25, currentCostData: currentData, currentInfrastructureCostData: currentInfrastructureCostData, formatDatumValue: formatValue, formatDatumOptions: {}, height: chartStyles.chartHeight, previousCostData: previousData, previousInfrastructureCostData: previousInfrastructureCostData, xAxisLabel: t(`breakdown.historical_chart.day_of_month_label`), yAxisLabel: t(`breakdown.historical_chart.${reportType}_label`, {\n                    units: t(`units.${unitLookupKey(costUnits)}`),\n                }) })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, reportPathsType, reportType }) => {\n    const currentQuery = {\n        filter: {\n            time_scope_units: 'month',\n            time_scope_value: -1,\n            resolution: 'daily',\n            limit: 3,\n        },\n        group_by: {\n            [groupBy]: filterBy,\n        },\n    };\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = {\n        filter: {\n            time_scope_units: 'month',\n            time_scope_value: -2,\n            resolution: 'daily',\n            limit: 3,\n        },\n        group_by: {\n            [groupBy]: filterBy,\n        },\n    };\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataCostChart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataCostChartBase));\nexport { HistoricalDataCostChart };\n","import { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { global_spacer_lg } from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport { global_spacer_sm } from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentMonthData: {\n        fill: 'none',\n    },\n    itemsPerRow: 0,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousMonthData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { noop } from 'utils/noop';\nimport { chartStyles, styles } from './historicalTrendChart.styles';\nclass HistoricalTrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.resizeObserver = noop;\n        this.navToggle = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, previousData, showUsageLegendLabel = false } = this.props;\n            const key = showUsageLegendLabel ? 'chart.usage_legend_label' : 'chart.cost_legend_label';\n            const toolTipKey = showUsageLegendLabel ? 'chart.usage_legend_tooltip' : 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousData,\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousData, toolTipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousMonthData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentData,\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentData, toolTipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentMonthData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.initResizeObserve = () => {\n            const containerElement = this.containerRef.current;\n            const { ResizeObserver } = window;\n            if (containerElement && ResizeObserver) {\n                const resizeObserver = new ResizeObserver(this.handleResize);\n                resizeObserver.observe(containerElement);\n                this.resizeObserver = () => resizeObserver.unobserve(containerElement);\n            }\n            else {\n                this.handleResize();\n                window.addEventListener('resize', this.handleResize);\n                this.resizeObserver = () => window.removeEventListener('resize', this.handleResize);\n                this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 120,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: legendItemsPerRow, name: \"legend\" }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.initResizeObserve();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData || prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.resizeObserver) {\n            this.resizeObserver();\n        }\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getEndDate() {\n        const { currentData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0 ? Math.max(currentDate, previousDate) : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, containerHeight = height, padding = {\n            bottom: 120,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: containerHeight }) },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis }))))));\n    }\n}\nexport { HistoricalTrendChart };\n","import { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport { getQuery, orgUnitIdKey } from 'api/queries/query';\nimport { transformReport } from 'components/charts/common/chartDatumUtils';\nimport { HistoricalTrendChart } from 'components/charts/historicalTrendChart';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataTrendChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, size: \"md\" }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, size: \"xs\" })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, reportType, t, } = this.props;\n        const isCostChart = reportType === \"cost\" /* cost */;\n        // Current data\n        const currentData = transformReport(currentReport, isCostChart ? 0 /* rolling */ : 1 /* daily */, 'date', isCostChart ? 'cost' : 'usage');\n        const previousData = transformReport(previousReport, isCostChart ? 0 /* rolling */ : 1 /* daily */, 'date', isCostChart ? 'cost' : 'usage');\n        const costUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.cost\n            ? currentReport.meta.total.cost.total.units\n            : 'USD';\n        let usageUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.usage\n            ? currentReport.meta.total.usage.units\n            : undefined;\n        let yAxisLabel;\n        if (isCostChart) {\n            yAxisLabel = t(`breakdown.historical_chart.${reportType}_label`, {\n                units: t(`units.${unitLookupKey(costUnits)}`),\n            });\n        }\n        else if (usageUnits && Number.isNaN(Number(currentReport.meta.total.usage.units))) {\n            yAxisLabel = t(`breakdown.historical_chart.units_label`, {\n                units: t(`units.${unitLookupKey(usageUnits)}`),\n            });\n        }\n        else {\n            usageUnits = t(`breakdown.historical_chart.${reportType}_label`);\n            yAxisLabel = t(`breakdown.historical_chart.units_label`, {\n                units: t(`units.${unitLookupKey(usageUnits)}`),\n            });\n        }\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.trendChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalTrendChart, { containerHeight: chartStyles.chartContainerHeight - 50, currentData: currentData, formatDatumValue: formatValue, formatDatumOptions: {}, height: chartStyles.chartHeight, previousData: previousData, units: isCostChart ? costUnits : usageUnits, xAxisLabel: t(`breakdown.historical_chart.day_of_month_label`), yAxisLabel: yAxisLabel })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, query, reportPathsType, reportType }) => {\n    const groupByOrg = query && query.group_by[orgUnitIdKey] ? query.group_by[orgUnitIdKey] : undefined;\n    // instance-types and storage APIs must filter org units\n    const useFilter = reportType === \"instance_type\" /* instanceType */ || reportType === \"storage\" /* storage */;\n    const currentQuery = {\n        filter: Object.assign(Object.assign({ time_scope_units: 'month', time_scope_value: -1, resolution: 'daily', limit: 3 }, (query && query.filter && query.filter.account && { account: query.filter.account })), (groupByOrg && useFilter && { [orgUnitIdKey]: groupByOrg })),\n        filter_by: query ? query.filter_by : undefined,\n        group_by: Object.assign(Object.assign({}, (groupByOrg && !useFilter && { [orgUnitIdKey]: groupByOrg })), { [groupBy]: filterBy }),\n    };\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = {\n        filter: Object.assign(Object.assign({ time_scope_units: 'month', time_scope_value: -2, resolution: 'daily', limit: 3 }, (query && query.filter && query.filter.account && { account: query.filter.account })), (groupByOrg && useFilter && { [orgUnitIdKey]: groupByOrg })),\n        filter_by: query ? query.filter_by : undefined,\n        group_by: Object.assign(Object.assign({}, (groupByOrg && !useFilter && { [orgUnitIdKey]: groupByOrg })), { [groupBy]: filterBy }),\n    };\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataTrendChart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataTrendChartBase));\nexport { HistoricalDataTrendChart };\n","import { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { global_spacer_lg } from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport { global_spacer_sm } from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    currentCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentLimitData: {\n        fill: 'none',\n    },\n    currentRequestData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    currentUsageData: {\n        fill: 'none',\n    },\n    itemsPerRow: 0,\n    previousCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousLimitData: {\n        fill: 'none',\n    },\n    previousRequestData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    previousUsageData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getUsageRangeString } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { noop } from 'utils/noop';\nimport { chartStyles, styles } from './historicalUsageChart.styles';\nclass HistoricalUsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.resizeObserver = noop;\n        this.navToggle = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentLimitData, currentRequestData, currentUsageData, previousLimitData, previousRequestData, previousUsageData, } = this.props;\n            const limitKey = 'chart.limit_legend_label';\n            const limitTooltipKey = 'chart.limit_legend_tooltip';\n            const requestKey = 'chart.requests_legend_label';\n            const requestTooltipKey = 'chart.requests_legend_tooltip';\n            const usageKey = 'chart.usage_legend_label';\n            const usageTooltipKey = 'chart.usage_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousUsage',\n                    data: previousUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(previousUsageData, usageKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(previousUsageData, usageTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousUsageData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentUsage',\n                    data: currentUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(currentUsageData, usageKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(currentUsageData, usageTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentUsageData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'previousRequest',\n                    data: previousRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(previousRequestData, requestKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(previousRequestData, requestTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousRequestData), { stroke: chartStyles.previousColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'currentRequest',\n                    data: currentRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(currentRequestData, requestKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(currentRequestData, requestTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentRequestData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'previousLimit',\n                    data: previousLimitData,\n                    legendItem: {\n                        name: getUsageRangeString(previousLimitData, limitKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[2],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(previousLimitData, limitTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousLimitData), { stroke: chartStyles.previousColorScale[2] }),\n                    },\n                },\n                {\n                    childName: 'currentLimit',\n                    data: currentLimitData,\n                    legendItem: {\n                        name: getUsageRangeString(currentLimitData, limitKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[2],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(currentLimitData, limitTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentLimitData), { stroke: chartStyles.currentColorScale[2] }),\n                    },\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.initResizeObserve = () => {\n            const containerElement = this.containerRef.current;\n            const { ResizeObserver } = window;\n            if (containerElement && ResizeObserver) {\n                const resizeObserver = new ResizeObserver(this.handleResize);\n                resizeObserver.observe(containerElement);\n                this.resizeObserver = () => resizeObserver.unobserve(containerElement);\n            }\n            else {\n                this.handleResize();\n                window.addEventListener('resize', this.handleResize);\n                this.resizeObserver = () => window.removeEventListener('resize', this.handleResize);\n                this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 130,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 900 ? chartStyles.itemsPerRow : 2;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\" }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.initResizeObserve();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentLimitData !== this.props.currentLimitData ||\n            prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousLimitData !== this.props.previousLimitData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.resizeObserver) {\n            this.resizeObserver();\n        }\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n        const currentRequestDate = currentRequestData ? getDate(getDateRange(currentRequestData, true, true)[1]) : 0;\n        const currentUsageDate = currentUsageData ? getDate(getDateRange(currentUsageData, true, true)[1]) : 0;\n        const previousRequestDate = previousRequestData ? getDate(getDateRange(previousRequestData, true, true)[1]) : 0;\n        const previousUsageDate = previousUsageData ? getDate(getDateRange(previousUsageData, true, true)[1]) : 0;\n        return currentRequestDate > 0 || currentUsageDate > 0 || previousRequestDate > 0 || previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 130,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 900\n                ? containerHeight - 50\n                : containerHeight\n            : containerHeight;\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: adjustedContainerHeight }) },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis }))))));\n    }\n}\nexport { HistoricalUsageChart };\n","import { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport { getQuery } from 'api/queries/query';\nimport { transformReport } from 'components/charts/common/chartDatumUtils';\nimport { HistoricalUsageChart } from 'components/charts/historicalUsageChart';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataUsageChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, size: \"md\" }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, size: \"xs\" })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, t } = this.props;\n        // Current data\n        const currentLimitData = transformReport(currentReport, 1 /* daily */, 'date', 'limit');\n        const currentRequestData = transformReport(currentReport, 1 /* daily */, 'date', 'request');\n        const currentUsageData = transformReport(currentReport, 1 /* daily */, 'date', 'usage');\n        // Previous data\n        const previousLimitData = transformReport(previousReport, 1 /* daily */, 'date', 'limit');\n        const previousRequestData = transformReport(previousReport, 1 /* daily */, 'date', 'request');\n        const previousUsageData = transformReport(previousReport, 1 /* daily */, 'date', 'usage');\n        const usageUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.usage\n            ? currentReport.meta.total.usage.units\n            : '';\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.usageChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalUsageChart, { adjustContainerHeight: true, containerHeight: chartStyles.chartContainerHeight, currentLimitData: currentLimitData, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: {}, height: chartStyles.chartHeight, previousLimitData: previousLimitData, previousRequestData: previousRequestData, previousUsageData: previousUsageData, xAxisLabel: t(`breakdown.historical_chart.day_of_month_label`), yAxisLabel: t(`breakdown.historical_chart.units_label`, {\n                    units: t(`units.${unitLookupKey(usageUnits)}`),\n                }) })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, reportPathsType, reportType }) => {\n    const currentQuery = {\n        filter: {\n            time_scope_units: 'month',\n            time_scope_value: -1,\n            resolution: 'daily',\n            limit: 3,\n        },\n        group_by: {\n            [groupBy]: filterBy,\n        },\n    };\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = {\n        filter: {\n            time_scope_units: 'month',\n            time_scope_value: -2,\n            resolution: 'daily',\n            limit: 3,\n        },\n        group_by: {\n            [groupBy]: filterBy,\n        },\n    };\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataUsageChart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataUsageChartBase));\nexport { HistoricalDataUsageChart };\n","import { Card, CardBody, CardTitle, Grid, GridItem, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport { HistoricalDataCostChart } from './historicalDataCostChart';\nimport { HistoricalDataTrendChart } from './historicalDataTrendChart';\nimport { HistoricalDataUsageChart } from './historicalDataUsageChart';\nclass HistoricalDataBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        // Returns cost chart\n        this.getCostChart = (widget) => {\n            const { filterBy, groupBy, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.historical_chart.${widget.reportType}_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataCostChart, { filterBy: filterBy, groupBy: groupBy, reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns trend chart\n        this.getTrendChart = (widget) => {\n            const { filterBy, groupBy, query, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.historical_chart.${widget.reportType}_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataTrendChart, { filterBy: filterBy, groupBy: groupBy, query: query, reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns usage chart\n        this.getUsageChart = (widget) => {\n            const { filterBy, groupBy, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.historical_chart.${widget.reportType}_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataUsageChart, { filterBy: filterBy, groupBy: groupBy, reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n    }\n    // Returns rendered widget based on type\n    renderWidget(widget) {\n        switch (widget.type) {\n            case \"cost\" /* cost */:\n                return this.getCostChart(widget);\n            case \"trend\" /* trend */:\n                return this.getTrendChart(widget);\n            case \"usage\" /* usage */:\n                return this.getUsageChart(widget);\n            default:\n                return null;\n        }\n    }\n    render() {\n        const { selectWidgets, widgets } = this.props;\n        return (React.createElement(Grid, { hasGutter: true }, widgets.map(widgetId => {\n            const widget = selectWidgets[widgetId];\n            return React.createElement(GridItem, { key: `widget-${widgetId}` }, this.renderWidget(widget));\n        })));\n    }\n}\nexport { HistoricalDataBase };\n","import { orgUnitIdKey } from 'api/queries/query';\nexport const getGroupById = (query) => {\n    const groupBys = query && query.group_by ? Object.keys(query.group_by) : [];\n    return groupBys.find(key => key !== orgUnitIdKey);\n};\nexport const getGroupByValue = (query) => {\n    const groupById = getGroupById(query);\n    return groupById ? query.group_by[groupById] : undefined;\n};\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_Color_200 from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    cost: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    costLabel: {},\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    costLabelDate: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_200.var,\n    },\n    header: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: global_spacer_lg.var,\n        backgroundColor: global_BackgroundColor_light_100.var,\n    },\n    info: {\n        verticalAlign: 'middle',\n    },\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import NoData from './noData';\nexport default NoData;\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport { Unavailable } from '@redhat-cloud-services/frontend-components/components/Unavailable';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nconst NotAvailable = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(Unavailable, null))));\n};\nexport default withRouter(NotAvailable);\n","import NotAvailable from './notAvailable';\nexport default NotAvailable;\n","export const testIdProp = 'data-testid';\nexport const getTestProps = (id) => ({ [testIdProp]: id });\nexport const testIds = {\n    details: {\n        cluster_lnk: 'cluster-lnk',\n        historical_data_btn: 'historical-data-btn',\n        show_more_btn: 'show-more-btn',\n        tag_lnk: 'tag-lnk',\n        view_all_btn: 'view-all-btn',\n    },\n    export: {\n        cancel_btn: 'cancel-btn',\n        submit_btn: 'submit-btn',\n    },\n    login: {\n        alert: 'alert',\n        form: 'login-form',\n        username_input: 'username-input',\n        password_input: 'password-input',\n        submit: 'submit',\n    },\n    masthead: {\n        masthead: 'masthead',\n        username: 'username',\n        sidebarToggle: 'sidebar-toggle',\n        logout: 'logout',\n    },\n    onboarding: {\n        btn_cancel: 'btn-cancel',\n        btn_back: 'btn-back',\n        btn_continue: 'btn-continue',\n        btn_close: 'btn-close',\n        type_selector: 'type-selector',\n        type_opt_aws: 'type-option-aws',\n        type_opt_ocp: 'type-option-ocp',\n        type_opt_non: 'type-option-non',\n        name_input: 'name-input',\n        check_box_1: 'check-box-1',\n        check_box_2: 'check-box-2',\n        s3_input: 's3-input',\n        clusterid_input: 'clusterid-input',\n        arn_input: 'arn-input',\n    },\n    providers: {\n        add_btn: 'add-btn',\n        bucket_input: 'bucket-input',\n        cancel_btn: 'cancel-btn',\n        empty_state_add_btn: 'empty_state_add-btn',\n        name_input: 'provider-name-input',\n        resource_name_input: 'provider-resource-name-input',\n        cluster_id_input: 'provider-cluster-id-input',\n        submit_btn: 'submit-btn',\n        type_input: 'provider-type-input',\n    },\n    sidebar: {\n        nav: 'vertical-nav',\n        link: 'vertical-nav-link',\n        backdrop: 'sidebar-backdrop',\n    },\n};\n","import { format, getDate, getMonth, startOfMonth } from 'date-fns';\nimport i18next from 'i18next';\nexport function getNoDataForDateRangeString(key = 'no_data_for_date', offset = 1) {\n    const today = new Date();\n    if (offset) {\n        today.setMonth(today.getMonth() - offset);\n    }\n    const month = getMonth(today);\n    const endDate = format(today, 'd');\n    const startDate = format(startOfMonth(today), 'd');\n    return i18next.t(key, {\n        count: getDate(today),\n        endDate,\n        month,\n        startDate,\n    });\n}\nexport function getForDateRangeString(value, key = 'for_date', offset = 1) {\n    const today = new Date();\n    if (offset) {\n        today.setMonth(today.getMonth() - offset);\n    }\n    const month = getMonth(today);\n    const endDate = format(today, 'd');\n    const startDate = format(startOfMonth(today), 'd');\n    return i18next.t(key, {\n        count: getDate(today),\n        endDate,\n        month,\n        startDate,\n        value,\n    });\n}\nexport function getSinceDateRangeString(key = 'since_date') {\n    const today = new Date();\n    const month = getMonth(today);\n    const endDate = format(today, 'd');\n    const startDate = format(startOfMonth(today), 'd');\n    return i18next.t(key, {\n        count: getDate(today),\n        endDate,\n        month,\n        startDate,\n    });\n}\n","export function isEqual(obj1, obj2) {\n    let a = JSON.stringify(obj1);\n    let b = JSON.stringify(obj2);\n    if (!a) {\n        a = '';\n    }\n    if (!b) {\n        b = '';\n    }\n    return a.split('').sort().join('') === b.split('').sort().join('');\n}\n"],"sourceRoot":""}