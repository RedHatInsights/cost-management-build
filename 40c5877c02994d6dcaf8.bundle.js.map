{"version":3,"sources":["webpack:///./node_modules/xstate/es/environment.js","webpack:///./node_modules/xstate/es/types.js","webpack:///./node_modules/xstate/es/constants.js","webpack:///./node_modules/xstate/es/actionTypes.js","webpack:///./node_modules/xstate/es/actions.js","webpack:///./node_modules/xstate/es/stateUtils.js","webpack:///./node_modules/xstate/es/Actor.js","webpack:///./node_modules/xstate/es/State.js","webpack:///./node_modules/xstate/es/scheduler.js","webpack:///./node_modules/xstate/es/registry.js","webpack:///./node_modules/xstate/es/devTools.js","webpack:///./node_modules/xstate/es/interpreter.js","webpack:///./node_modules/xstate/es/StateNode.js","webpack:///./node_modules/xstate/es/Machine.js","webpack:///./node_modules/xstate/es/_virtual/_tslib.js","webpack:///./node_modules/xstate/es/utils.js"],"names":["IS_PRODUCTION","ActionTypes","SpecialTargets","STATE_DELIMITER","EMPTY_ACTIVITY_MAP","DEFAULT_GUARD_TYPE","TARGETLESS_KEY","start","Start","stop","Stop","raise","Raise","send","Send","cancel","Cancel","nullEvent","NullEvent","assign","Assign","log","After","DoneState","Log","init","Init","invoke","Invoke","errorPlatform","ErrorExecution","ErrorPlatform","error","ErrorCustom","update","Update","choose","Choose","pure","Pure","initEvent","type","getActionFunction","actionType","actionFunctionMap","undefined","toActionObject","action","actionObject","exec","name","toString","other","Object","defineProperty","value","enumerable","configurable","toActionObjects","map","subAction","toActivityDefinition","id","event","to","Internal","options","delay","sendId","activity","activityDef","after","delayRef","idSuffix","done","data","eventObject","doneInvoke","DoneInvoke","resolveActions","machine","currentState","currentContext","_event","actions","_a","assignActions","otherActions","updatedContext","length","sendAction","ctx","delaysMap","resolvedDelay","meta","resolvedEvent","configDelay","resolvedTarget","resolveSend","delays","expr","resolveLog","matchedActions","conds","find","condition","guard","cond","guards","resolved","get","isLeafNode","stateNode","getChildren","states","key","getAllStateNodes","stateNodes","concat","getConfiguration","prevStateNodes","e_1","e_2","_b","e_3","_c","e_4","_d","prevAdjList","getAdjList","Set","configuration","configuration_1","configuration_1_1","next","m","s","parent","has","add","e_1_1","return","call","adjList","configuration_2","configuration_2_1","_e","_f","child","forEach","sn","initialStateNodes","e_3_1","e_2_1","configuration_3","configuration_3_1","e_4_1","e_5","Map","configuration_4","configuration_4_1","set","push","e_5_1","getValue","rootNode","getValueFromAdj","baseNode","childStateNodes","childStateNode","stateValue","csn","iterable","item","Array","isArray","some","member","nextEvents","ownEvents","isInFinalState","every","createInvocableActor","invokeDefinition","tempActor","subscribe","unsubscribe","toJSON","serviceCreator","services","src","deferred","state","initialState","isActor","e","stateValuesEqual","a","b","aKeys","bKeys","isState","bindActionToState","context","State","config","_this","this","activities","events","_sessionid","historyValue","history","matches","bind","toStrings","transitions","children","from","create","inert","prototype","delimiter","valueKeys","apply","parentStateValue","defaultOptions","deferEvents","Scheduler","processingEvent","queue","initialized","initialize","callback","schedule","process","flushEvents","task","Error","clear","nextCallback","shift","sessionIdIndex","registry","bookId","register","actor","free","delete","registerService","service","window","devTools","w","__xstate__","getDevTools","InterpreterStatus","DEFAULT_SPAWN_OPTIONS","sync","autoForward","withServiceScope","serviceStack","fn","result","pop","Interpreter","scheduler","delayedEventsMap","listeners","contextListeners","stopListeners","doneListeners","eventListeners","sendListeners","_status","NotStarted","forwardTo","payload","batch","Stopped","JSON","stringify","Running","forward","nextState","_state","sendTo","isParent","Parent","target","origin","sessionId","resolvedOptions","clock","logger","resolvedId","_initialState","execute","actionsConfig","listener","_g","_h","_j","_k","contextListener","isDone","finalChildStateNode","doneData","_l","_m","onTransition","nextListenerOrObserver","errorListener","completeListener","resolvedCompleteListener","complete","onDone","onEvent","onSend","onChange","onStop","off","resolvedState","resolveState","attachDev","e_6","e_7","e_8","e_9","e_10","e_6_1","e_7_1","e_8_1","_o","e_9_1","_p","_q","clearTimeout","e_10_1","e_11","batchChanged","batchedActions","_loop_1","event_1","transition","changed","events_1","events_1_1","e_11_1","sender","indexOf","nextEvent","e_12","e_12_1","defer","setTimeout","actionOrExec","err","resolvedData","source","spawnPromise","Promise","resolve","spawnCallback","spawnObservable","spawnMachine","withContext","spawnActivity","stopChild","label","removeChild","childId","spawn","entity","spawnActor","childService","doneEvent","promise","canceled","then","response","errorData","errorEvent","strict","handleError","unsubscribed","callbackStop","receivers","newListener","receiver","subscription","implementation","dispose","spawnEffect","__REDUX_DEVTOOLS_EXTENSION__","devToolsOptions","connect","autoPause","stateSanitizer","features","jump","skip","global","ms","console","interpret","EMPTY_OBJECT","isStateId","str","StateNode","order","__xstatenode","__cache","relativeValue","initialStateValue","on","candidates","delayedTransitions","idMap","_parent","_key","path","join","version","parallel","initial","stateConfig","dfs","_transient","always","onEntry","entry","onExit","exit","invokeConfig","i","invokeSrc","_init","withConfig","definition","reduce","eventType","getDelayedTransitions","formatTransitions","getCandidates","eventName","transient","filter","sameEventType","afterConfig","mutateEntryExit","configTransition","resolvedTransition","isNaN","delayedTransition","formatTransition","getStateNodes","getStateNode","subStateKeys","subStateKey","allSubStateNodes","subStateNode","handles","includes","transitionLeafNode","transitionCompoundNode","_transition","transitionParallelNode","transitionMap","subStateValue","stateTransitions","enabledTransitions","st","entryNodes","t","entrySet","exitSet","selectedTransition","nextStateNodes","candidate","stateIn","in","resolvedContext","isInState","getStateNodeById","slice","guardPassed","message","allNextStateNodes","getRelativeStateNodes","isInternal","internal","n","nodesFromChild","escapes","nodes","marker","getActions","prevState","prevConfig","resolvedConfig","resolvedConfig_1","resolvedConfig_1_1","prevConfig_1","prevConfig_1_1","doneEvents","grandparent","parentNode","sort","entryStates","exitStates","entryActions","exitActions","resolvedStateValue","getResolvedPath","stateTransition","resolveTransition","resolveRaisedTransition","originalEvent","currentActions","unshift","actions_1","actions_1_1","resolvedActions","raisedEvents","nonRaisedActions","acc","resolvedConfiguration","didUpdateContext","maybeNextState","raisedEvent","stateKey","stateId","resolvedStateId","getStateNodeByPath","statePath","arrayStatePath","currentStateNode","stateIdentifier","getInitialState","historyConfig","relativeStateId","resolveHistory","initialStateNodePaths","initialPath","getFromRelativePath","relativePath","childStatePath","relativeStateValue","current","historyTarget","relativeChildPath","subHistoryValue","subStatePath","childStateIds","stateIds","resolveTarget","_target","isInternalTarget","transitionConfig","normalizedTarget","onConfig","wildcardConfigs","strictTransitionConfigs_1","transitionConfigArray","hasNonLastUnguardedTarget","eventText","validateArrayifiedTransitions","eventlessConfig","doneConfig","String","invokeDef","settleTransitions","onError","formattedTransitions","delayedTransitions_1","delayedTransitions_1_1","Machine","initialContext","resolvedInitialContext","__assign","arguments","p","hasOwnProperty","__rest","getOwnPropertySymbols","propertyIsEnumerable","__values","o","Symbol","iterator","__read","r","ar","__spread","keys","matchesState","parentStateId","childStateId","toStateValue","childStateValue","isString","getEventType","toStatePath","split","pathToStateValue","mapValues","collection","iteratee","collectionKeys","mapFilterValues","predicate","props","object","props_1","props_1_1","nestedPath","accessorProp","props_2","props_2_1","prop","toStatePaths","flatten","subPath","array","toArrayStrict","toArray","mapContext","mapper","isFunction","subMapper","isBuiltInEvent","test","isPromiseLike","partition","items","truthy","falsy","items_1","items_1_1","updateHistoryStates","hist","subHist","updateHistoryValue","updateContext","warn","assignAction","assignment","partialUpdate","propAssignment","toGuard","guardMap","isObservable","args","symbolObservable","observable","isMachine","uniqueId","currentId","toEventObject","toSCXMLEvent","scxmlEvent","$$type","toTransitionConfigArray","configLike","transitionLike","normalizeTarget","reportUnhandledExceptionOnInvocation","originalError","currentError","originalStackTrace","stack","stackTrace","evaluateGuard","guardMeta","condFn"],"mappings":"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","file":"40c5877c02994d6dcaf8.bundle.js","sourcesContent":["var IS_PRODUCTION = process.env.NODE_ENV === 'production';\nexport { IS_PRODUCTION };","var ActionTypes;\n\n(function (ActionTypes) {\n  ActionTypes[\"Start\"] = \"xstate.start\";\n  ActionTypes[\"Stop\"] = \"xstate.stop\";\n  ActionTypes[\"Raise\"] = \"xstate.raise\";\n  ActionTypes[\"Send\"] = \"xstate.send\";\n  ActionTypes[\"Cancel\"] = \"xstate.cancel\";\n  ActionTypes[\"NullEvent\"] = \"\";\n  ActionTypes[\"Assign\"] = \"xstate.assign\";\n  ActionTypes[\"After\"] = \"xstate.after\";\n  ActionTypes[\"DoneState\"] = \"done.state\";\n  ActionTypes[\"DoneInvoke\"] = \"done.invoke\";\n  ActionTypes[\"Log\"] = \"xstate.log\";\n  ActionTypes[\"Init\"] = \"xstate.init\";\n  ActionTypes[\"Invoke\"] = \"xstate.invoke\";\n  ActionTypes[\"ErrorExecution\"] = \"error.execution\";\n  ActionTypes[\"ErrorCommunication\"] = \"error.communication\";\n  ActionTypes[\"ErrorPlatform\"] = \"error.platform\";\n  ActionTypes[\"ErrorCustom\"] = \"xstate.error\";\n  ActionTypes[\"Update\"] = \"xstate.update\";\n  ActionTypes[\"Pure\"] = \"xstate.pure\";\n  ActionTypes[\"Choose\"] = \"xstate.choose\";\n})(ActionTypes || (ActionTypes = {}));\n\nvar SpecialTargets;\n\n(function (SpecialTargets) {\n  SpecialTargets[\"Parent\"] = \"#_parent\";\n  SpecialTargets[\"Internal\"] = \"#_internal\";\n})(SpecialTargets || (SpecialTargets = {}));\n\nexport { ActionTypes, SpecialTargets };","var STATE_DELIMITER = '.';\nvar EMPTY_ACTIVITY_MAP = {};\nvar DEFAULT_GUARD_TYPE = 'xstate.guard';\nvar TARGETLESS_KEY = '';\nexport { DEFAULT_GUARD_TYPE, EMPTY_ACTIVITY_MAP, STATE_DELIMITER, TARGETLESS_KEY };","import { ActionTypes } from './types.js'; // xstate-specific action types\n\nvar start = ActionTypes.Start;\nvar stop = ActionTypes.Stop;\nvar raise = ActionTypes.Raise;\nvar send = ActionTypes.Send;\nvar cancel = ActionTypes.Cancel;\nvar nullEvent = ActionTypes.NullEvent;\nvar assign = ActionTypes.Assign;\nvar after = ActionTypes.After;\nvar doneState = ActionTypes.DoneState;\nvar log = ActionTypes.Log;\nvar init = ActionTypes.Init;\nvar invoke = ActionTypes.Invoke;\nvar errorExecution = ActionTypes.ErrorExecution;\nvar errorPlatform = ActionTypes.ErrorPlatform;\nvar error = ActionTypes.ErrorCustom;\nvar update = ActionTypes.Update;\nvar choose = ActionTypes.Choose;\nvar pure = ActionTypes.Pure;\nexport { after, assign, cancel, choose, doneState, error, errorExecution, errorPlatform, init, invoke, log, nullEvent, pure, raise, send, start, stop, update };","import { __assign, __read, __rest } from './_virtual/_tslib.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { toSCXMLEvent, isFunction, toEventObject, getEventType, isString, partition, updateContext, flatten, toArray, toGuard, evaluateGuard, warn, isArray } from './utils.js';\nimport { SpecialTargets, ActionTypes } from './types.js';\nimport { send as send$1, update, assign as assign$1, init, raise as raise$1, log as log$1, cancel as cancel$1, error as error$1, pure as pure$1, choose as choose$1 } from './actionTypes.js';\nvar initEvent = /*#__PURE__*/toSCXMLEvent({\n  type: init\n});\n\nfunction getActionFunction(actionType, actionFunctionMap) {\n  return actionFunctionMap ? actionFunctionMap[actionType] || undefined : undefined;\n}\n\nfunction toActionObject(action, actionFunctionMap) {\n  var actionObject;\n\n  if (isString(action) || typeof action === 'number') {\n    var exec = getActionFunction(action, actionFunctionMap);\n\n    if (isFunction(exec)) {\n      actionObject = {\n        type: action,\n        exec: exec\n      };\n    } else if (exec) {\n      actionObject = exec;\n    } else {\n      actionObject = {\n        type: action,\n        exec: undefined\n      };\n    }\n  } else if (isFunction(action)) {\n    actionObject = {\n      // Convert action to string if unnamed\n      type: action.name || action.toString(),\n      exec: action\n    };\n  } else {\n    var exec = getActionFunction(action.type, actionFunctionMap);\n\n    if (isFunction(exec)) {\n      actionObject = __assign(__assign({}, action), {\n        exec: exec\n      });\n    } else if (exec) {\n      var type = action.type,\n          other = __rest(action, [\"type\"]);\n\n      actionObject = __assign(__assign({\n        type: type\n      }, exec), other);\n    } else {\n      actionObject = action;\n    }\n  }\n\n  Object.defineProperty(actionObject, 'toString', {\n    value: function () {\n      return actionObject.type;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return actionObject;\n}\n\nvar toActionObjects = function (action, actionFunctionMap) {\n  if (!action) {\n    return [];\n  }\n\n  var actions = isArray(action) ? action : [action];\n  return actions.map(function (subAction) {\n    return toActionObject(subAction, actionFunctionMap);\n  });\n};\n\nfunction toActivityDefinition(action) {\n  var actionObject = toActionObject(action);\n  return __assign(__assign({\n    id: isString(action) ? action : actionObject.id\n  }, actionObject), {\n    type: actionObject.type\n  });\n}\n/**\r\n * Raises an event. This places the event in the internal event queue, so that\r\n * the event is immediately consumed by the machine in the current step.\r\n *\r\n * @param eventType The event to raise.\r\n */\n\n\nfunction raise(event) {\n  if (!isString(event)) {\n    return send(event, {\n      to: SpecialTargets.Internal\n    });\n  }\n\n  return {\n    type: raise$1,\n    event: event\n  };\n}\n\nfunction resolveRaise(action) {\n  return {\n    type: raise$1,\n    _event: toSCXMLEvent(action.event)\n  };\n}\n/**\r\n * Sends an event. This returns an action that will be read by an interpreter to\r\n * send the event in the next step, after the current step is finished executing.\r\n *\r\n * @param event The event to send.\r\n * @param options Options to pass into the send event:\r\n *  - `id` - The unique send event identifier (used with `cancel()`).\r\n *  - `delay` - The number of milliseconds to delay the sending of the event.\r\n *  - `to` - The target of this event (by default, the machine the event was sent from).\r\n */\n\n\nfunction send(event, options) {\n  return {\n    to: options ? options.to : undefined,\n    type: send$1,\n    event: isFunction(event) ? event : toEventObject(event),\n    delay: options ? options.delay : undefined,\n    id: options && options.id !== undefined ? options.id : isFunction(event) ? event.name : getEventType(event)\n  };\n}\n\nfunction resolveSend(action, ctx, _event, delaysMap) {\n  var meta = {\n    _event: _event\n  }; // TODO: helper function for resolving Expr\n\n  var resolvedEvent = toSCXMLEvent(isFunction(action.event) ? action.event(ctx, _event.data, meta) : action.event);\n  var resolvedDelay;\n\n  if (isString(action.delay)) {\n    var configDelay = delaysMap && delaysMap[action.delay];\n    resolvedDelay = isFunction(configDelay) ? configDelay(ctx, _event.data, meta) : configDelay;\n  } else {\n    resolvedDelay = isFunction(action.delay) ? action.delay(ctx, _event.data, meta) : action.delay;\n  }\n\n  var resolvedTarget = isFunction(action.to) ? action.to(ctx, _event.data, meta) : action.to;\n  return __assign(__assign({}, action), {\n    to: resolvedTarget,\n    _event: resolvedEvent,\n    event: resolvedEvent.data,\n    delay: resolvedDelay\n  });\n}\n/**\r\n * Sends an event to this machine's parent.\r\n *\r\n * @param event The event to send to the parent machine.\r\n * @param options Options to pass into the send event.\r\n */\n\n\nfunction sendParent(event, options) {\n  return send(event, __assign(__assign({}, options), {\n    to: SpecialTargets.Parent\n  }));\n}\n/**\r\n * Sends an update event to this machine's parent.\r\n */\n\n\nfunction sendUpdate() {\n  return sendParent(update);\n}\n/**\r\n * Sends an event back to the sender of the original event.\r\n *\r\n * @param event The event to send back to the sender\r\n * @param options Options to pass into the send event\r\n */\n\n\nfunction respond(event, options) {\n  return send(event, __assign(__assign({}, options), {\n    to: function (_, __, _a) {\n      var _event = _a._event;\n      return _event.origin; // TODO: handle when _event.origin is undefined\n    }\n  }));\n}\n\nvar defaultLogExpr = function (context, event) {\n  return {\n    context: context,\n    event: event\n  };\n};\n/**\r\n *\r\n * @param expr The expression function to evaluate which will be logged.\r\n *  Takes in 2 arguments:\r\n *  - `ctx` - the current state context\r\n *  - `event` - the event that caused this action to be executed.\r\n * @param label The label to give to the logged expression.\r\n */\n\n\nfunction log(expr, label) {\n  if (expr === void 0) {\n    expr = defaultLogExpr;\n  }\n\n  return {\n    type: log$1,\n    label: label,\n    expr: expr\n  };\n}\n\nvar resolveLog = function (action, ctx, _event) {\n  return __assign(__assign({}, action), {\n    value: isString(action.expr) ? action.expr : action.expr(ctx, _event.data, {\n      _event: _event\n    })\n  });\n};\n/**\r\n * Cancels an in-flight `send(...)` action. A canceled sent action will not\r\n * be executed, nor will its event be sent, unless it has already been sent\r\n * (e.g., if `cancel(...)` is called after the `send(...)` action's `delay`).\r\n *\r\n * @param sendId The `id` of the `send(...)` action to cancel.\r\n */\n\n\nvar cancel = function (sendId) {\n  return {\n    type: cancel$1,\n    sendId: sendId\n  };\n};\n/**\r\n * Starts an activity.\r\n *\r\n * @param activity The activity to start.\r\n */\n\n\nfunction start(activity) {\n  var activityDef = toActivityDefinition(activity);\n  return {\n    type: ActionTypes.Start,\n    activity: activityDef,\n    exec: undefined\n  };\n}\n/**\r\n * Stops an activity.\r\n *\r\n * @param activity The activity to stop.\r\n */\n\n\nfunction stop(activity) {\n  var activityDef = toActivityDefinition(activity);\n  return {\n    type: ActionTypes.Stop,\n    activity: activityDef,\n    exec: undefined\n  };\n}\n/**\r\n * Updates the current context of the machine.\r\n *\r\n * @param assignment An object that represents the partial context to update.\r\n */\n\n\nvar assign = function (assignment) {\n  return {\n    type: assign$1,\n    assignment: assignment\n  };\n};\n/**\r\n * Returns an event type that represents an implicit event that\r\n * is sent after the specified `delay`.\r\n *\r\n * @param delayRef The delay in milliseconds\r\n * @param id The state node ID where this event is handled\r\n */\n\n\nfunction after(delayRef, id) {\n  var idSuffix = id ? \"#\" + id : '';\n  return ActionTypes.After + \"(\" + delayRef + \")\" + idSuffix;\n}\n/**\r\n * Returns an event that represents that a final state node\r\n * has been reached in the parent state node.\r\n *\r\n * @param id The final state node's parent state node `id`\r\n * @param data The data to pass into the event\r\n */\n\n\nfunction done(id, data) {\n  var type = ActionTypes.DoneState + \".\" + id;\n  var eventObject = {\n    type: type,\n    data: data\n  };\n\n  eventObject.toString = function () {\n    return type;\n  };\n\n  return eventObject;\n}\n/**\r\n * Returns an event that represents that an invoked service has terminated.\r\n *\r\n * An invoked service is terminated when it has reached a top-level final state node,\r\n * but not when it is canceled.\r\n *\r\n * @param id The final state node ID\r\n * @param data The data to pass into the event\r\n */\n\n\nfunction doneInvoke(id, data) {\n  var type = ActionTypes.DoneInvoke + \".\" + id;\n  var eventObject = {\n    type: type,\n    data: data\n  };\n\n  eventObject.toString = function () {\n    return type;\n  };\n\n  return eventObject;\n}\n\nfunction error(id, data) {\n  var type = ActionTypes.ErrorPlatform + \".\" + id;\n  var eventObject = {\n    type: type,\n    data: data\n  };\n\n  eventObject.toString = function () {\n    return type;\n  };\n\n  return eventObject;\n}\n\nfunction pure(getActions) {\n  return {\n    type: ActionTypes.Pure,\n    get: getActions\n  };\n}\n/**\r\n * Forwards (sends) an event to a specified service.\r\n *\r\n * @param target The target service to forward the event to.\r\n * @param options Options to pass into the send action creator.\r\n */\n\n\nfunction forwardTo(target, options) {\n  return send(function (_, event) {\n    return event;\n  }, __assign(__assign({}, options), {\n    to: target\n  }));\n}\n/**\r\n * Escalates an error by sending it as an event to this machine's parent.\r\n *\r\n * @param errorData The error data to send, or the expression function that\r\n * takes in the `context`, `event`, and `meta`, and returns the error data to send.\r\n * @param options Options to pass into the send action creator.\r\n */\n\n\nfunction escalate(errorData, options) {\n  return sendParent(function (context, event, meta) {\n    return {\n      type: error$1,\n      data: isFunction(errorData) ? errorData(context, event, meta) : errorData\n    };\n  }, __assign(__assign({}, options), {\n    to: SpecialTargets.Parent\n  }));\n}\n\nfunction choose(conds) {\n  return {\n    type: ActionTypes.Choose,\n    conds: conds\n  };\n}\n\nfunction resolveActions(machine, currentState, currentContext, _event, actions) {\n  var _a = __read(partition(actions, function (action) {\n    return action.type === assign$1;\n  }), 2),\n      assignActions = _a[0],\n      otherActions = _a[1];\n\n  var updatedContext = assignActions.length ? updateContext(currentContext, _event, assignActions, currentState) : currentContext;\n  var resolvedActions = flatten(otherActions.map(function (actionObject) {\n    var _a;\n\n    switch (actionObject.type) {\n      case raise$1:\n        return resolveRaise(actionObject);\n\n      case send$1:\n        var sendAction = resolveSend(actionObject, updatedContext, _event, machine.options.delays); // TODO: fix ActionTypes.Init\n\n        if (!IS_PRODUCTION) {\n          // warn after resolving as we can create better contextual message here\n          warn(!isString(actionObject.delay) || typeof sendAction.delay === 'number', // tslint:disable-next-line:max-line-length\n          \"No delay reference for delay expression '\" + actionObject.delay + \"' was found on machine '\" + machine.id + \"'\");\n        }\n\n        return sendAction;\n\n      case log$1:\n        return resolveLog(actionObject, updatedContext, _event);\n\n      case choose$1:\n        {\n          var chooseAction = actionObject;\n          var matchedActions = (_a = chooseAction.conds.find(function (condition) {\n            var guard = toGuard(condition.cond, machine.options.guards);\n            return !guard || evaluateGuard(machine, guard, updatedContext, _event, currentState);\n          })) === null || _a === void 0 ? void 0 : _a.actions;\n\n          if (!matchedActions) {\n            return [];\n          }\n\n          var resolved = resolveActions(machine, currentState, updatedContext, _event, toActionObjects(toArray(matchedActions), machine.options.actions));\n          updatedContext = resolved[1];\n          return resolved[0];\n        }\n\n      case pure$1:\n        {\n          var matchedActions = actionObject.get(updatedContext, _event.data);\n\n          if (!matchedActions) {\n            return [];\n          }\n\n          var resolved = resolveActions(machine, currentState, updatedContext, _event, toActionObjects(toArray(matchedActions), machine.options.actions));\n          updatedContext = resolved[1];\n          return resolved[0];\n        }\n\n      default:\n        return toActionObject(actionObject, machine.options.actions);\n    }\n  }));\n  return [resolvedActions, updatedContext];\n}\n\nexport { after, assign, cancel, choose, done, doneInvoke, error, escalate, forwardTo, getActionFunction, initEvent, log, pure, raise, resolveActions, resolveLog, resolveRaise, resolveSend, respond, send, sendParent, sendUpdate, start, stop, toActionObject, toActionObjects, toActivityDefinition };","import { __values, __spread } from './_virtual/_tslib.js';\nimport { keys, flatten } from './utils.js';\n\nvar isLeafNode = function (stateNode) {\n  return stateNode.type === 'atomic' || stateNode.type === 'final';\n};\n\nfunction getChildren(stateNode) {\n  return keys(stateNode.states).map(function (key) {\n    return stateNode.states[key];\n  });\n}\n\nfunction getAllStateNodes(stateNode) {\n  var stateNodes = [stateNode];\n\n  if (isLeafNode(stateNode)) {\n    return stateNodes;\n  }\n\n  return stateNodes.concat(flatten(getChildren(stateNode).map(getAllStateNodes)));\n}\n\nfunction getConfiguration(prevStateNodes, stateNodes) {\n  var e_1, _a, e_2, _b, e_3, _c, e_4, _d;\n\n  var prevConfiguration = new Set(prevStateNodes);\n  var prevAdjList = getAdjList(prevConfiguration);\n  var configuration = new Set(stateNodes);\n\n  try {\n    // add all ancestors\n    for (var configuration_1 = __values(configuration), configuration_1_1 = configuration_1.next(); !configuration_1_1.done; configuration_1_1 = configuration_1.next()) {\n      var s = configuration_1_1.value;\n      var m = s.parent;\n\n      while (m && !configuration.has(m)) {\n        configuration.add(m);\n        m = m.parent;\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (configuration_1_1 && !configuration_1_1.done && (_a = configuration_1.return)) _a.call(configuration_1);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  var adjList = getAdjList(configuration);\n\n  try {\n    // add descendants\n    for (var configuration_2 = __values(configuration), configuration_2_1 = configuration_2.next(); !configuration_2_1.done; configuration_2_1 = configuration_2.next()) {\n      var s = configuration_2_1.value; // if previously active, add existing child nodes\n\n      if (s.type === 'compound' && (!adjList.get(s) || !adjList.get(s).length)) {\n        if (prevAdjList.get(s)) {\n          prevAdjList.get(s).forEach(function (sn) {\n            return configuration.add(sn);\n          });\n        } else {\n          s.initialStateNodes.forEach(function (sn) {\n            return configuration.add(sn);\n          });\n        }\n      } else {\n        if (s.type === 'parallel') {\n          try {\n            for (var _e = (e_3 = void 0, __values(getChildren(s))), _f = _e.next(); !_f.done; _f = _e.next()) {\n              var child = _f.value;\n\n              if (child.type === 'history') {\n                continue;\n              }\n\n              if (!configuration.has(child)) {\n                configuration.add(child);\n\n                if (prevAdjList.get(child)) {\n                  prevAdjList.get(child).forEach(function (sn) {\n                    return configuration.add(sn);\n                  });\n                } else {\n                  child.initialStateNodes.forEach(function (sn) {\n                    return configuration.add(sn);\n                  });\n                }\n              }\n            }\n          } catch (e_3_1) {\n            e_3 = {\n              error: e_3_1\n            };\n          } finally {\n            try {\n              if (_f && !_f.done && (_c = _e.return)) _c.call(_e);\n            } finally {\n              if (e_3) throw e_3.error;\n            }\n          }\n        }\n      }\n    }\n  } catch (e_2_1) {\n    e_2 = {\n      error: e_2_1\n    };\n  } finally {\n    try {\n      if (configuration_2_1 && !configuration_2_1.done && (_b = configuration_2.return)) _b.call(configuration_2);\n    } finally {\n      if (e_2) throw e_2.error;\n    }\n  }\n\n  try {\n    // add all ancestors\n    for (var configuration_3 = __values(configuration), configuration_3_1 = configuration_3.next(); !configuration_3_1.done; configuration_3_1 = configuration_3.next()) {\n      var s = configuration_3_1.value;\n      var m = s.parent;\n\n      while (m && !configuration.has(m)) {\n        configuration.add(m);\n        m = m.parent;\n      }\n    }\n  } catch (e_4_1) {\n    e_4 = {\n      error: e_4_1\n    };\n  } finally {\n    try {\n      if (configuration_3_1 && !configuration_3_1.done && (_d = configuration_3.return)) _d.call(configuration_3);\n    } finally {\n      if (e_4) throw e_4.error;\n    }\n  }\n\n  return configuration;\n}\n\nfunction getValueFromAdj(baseNode, adjList) {\n  var childStateNodes = adjList.get(baseNode);\n\n  if (!childStateNodes) {\n    return {}; // todo: fix?\n  }\n\n  if (baseNode.type === 'compound') {\n    var childStateNode = childStateNodes[0];\n\n    if (childStateNode) {\n      if (isLeafNode(childStateNode)) {\n        return childStateNode.key;\n      }\n    } else {\n      return {};\n    }\n  }\n\n  var stateValue = {};\n  childStateNodes.forEach(function (csn) {\n    stateValue[csn.key] = getValueFromAdj(csn, adjList);\n  });\n  return stateValue;\n}\n\nfunction getAdjList(configuration) {\n  var e_5, _a;\n\n  var adjList = new Map();\n\n  try {\n    for (var configuration_4 = __values(configuration), configuration_4_1 = configuration_4.next(); !configuration_4_1.done; configuration_4_1 = configuration_4.next()) {\n      var s = configuration_4_1.value;\n\n      if (!adjList.has(s)) {\n        adjList.set(s, []);\n      }\n\n      if (s.parent) {\n        if (!adjList.has(s.parent)) {\n          adjList.set(s.parent, []);\n        }\n\n        adjList.get(s.parent).push(s);\n      }\n    }\n  } catch (e_5_1) {\n    e_5 = {\n      error: e_5_1\n    };\n  } finally {\n    try {\n      if (configuration_4_1 && !configuration_4_1.done && (_a = configuration_4.return)) _a.call(configuration_4);\n    } finally {\n      if (e_5) throw e_5.error;\n    }\n  }\n\n  return adjList;\n}\n\nfunction getValue(rootNode, configuration) {\n  var config = getConfiguration([rootNode], configuration);\n  return getValueFromAdj(rootNode, getAdjList(config));\n}\n\nfunction has(iterable, item) {\n  if (Array.isArray(iterable)) {\n    return iterable.some(function (member) {\n      return member === item;\n    });\n  }\n\n  if (iterable instanceof Set) {\n    return iterable.has(item);\n  }\n\n  return false; // TODO: fix\n}\n\nfunction nextEvents(configuration) {\n  return flatten(__spread(new Set(configuration.map(function (sn) {\n    return sn.ownEvents;\n  }))));\n}\n\nfunction isInFinalState(configuration, stateNode) {\n  if (stateNode.type === 'compound') {\n    return getChildren(stateNode).some(function (s) {\n      return s.type === 'final' && has(configuration, s);\n    });\n  }\n\n  if (stateNode.type === 'parallel') {\n    return getChildren(stateNode).every(function (sn) {\n      return isInFinalState(configuration, sn);\n    });\n  }\n\n  return false;\n}\n\nexport { getAdjList, getAllStateNodes, getChildren, getConfiguration, getValue, has, isInFinalState, isLeafNode, nextEvents };","import { isMachine } from './utils.js';\n\nfunction createNullActor(id) {\n  return {\n    id: id,\n    send: function () {\n      return void 0;\n    },\n    subscribe: function () {\n      return {\n        unsubscribe: function () {\n          return void 0;\n        }\n      };\n    },\n    toJSON: function () {\n      return {\n        id: id\n      };\n    }\n  };\n}\n/**\r\n * Creates a deferred actor that is able to be invoked given the provided\r\n * invocation information in its `.meta` value.\r\n *\r\n * @param invokeDefinition The meta information needed to invoke the actor.\r\n */\n\n\nfunction createInvocableActor(invokeDefinition, machine) {\n  var _a;\n\n  var tempActor = createNullActor(invokeDefinition.id);\n  var serviceCreator = (_a = machine.options.services) === null || _a === void 0 ? void 0 : _a[invokeDefinition.src];\n  tempActor.deferred = true;\n\n  if (isMachine(serviceCreator)) {\n    tempActor.state = serviceCreator.initialState;\n  }\n\n  tempActor.meta = invokeDefinition;\n  return tempActor;\n}\n\nfunction isActor(item) {\n  try {\n    return typeof item.send === 'function';\n  } catch (e) {\n    return false;\n  }\n}\n\nexport { createInvocableActor, createNullActor, isActor };","import { __spread, __rest, __assign } from './_virtual/_tslib.js';\nimport { EMPTY_ACTIVITY_MAP } from './constants.js';\nimport { isString, matchesState, keys } from './utils.js';\nimport { nextEvents } from './stateUtils.js';\nimport { initEvent } from './actions.js';\n\nfunction stateValuesEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a === undefined || b === undefined) {\n    return false;\n  }\n\n  if (isString(a) || isString(b)) {\n    return a === b;\n  }\n\n  var aKeys = keys(a);\n  var bKeys = keys(b);\n  return aKeys.length === bKeys.length && aKeys.every(function (key) {\n    return stateValuesEqual(a[key], b[key]);\n  });\n}\n\nfunction isState(state) {\n  if (isString(state)) {\n    return false;\n  }\n\n  return 'value' in state && 'history' in state;\n}\n\nfunction bindActionToState(action, state) {\n  var exec = action.exec;\n\n  var boundAction = __assign(__assign({}, action), {\n    exec: exec !== undefined ? function () {\n      return exec(state.context, state.event, {\n        action: action,\n        state: state,\n        _event: state._event\n      });\n    } : undefined\n  });\n\n  return boundAction;\n}\n\nvar State =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new State instance.\r\n   * @param value The state value\r\n   * @param context The extended state\r\n   * @param historyValue The tree representing historical values of the state nodes\r\n   * @param history The previous state\r\n   * @param actions An array of action objects to execute as side-effects\r\n   * @param activities A mapping of activities and whether they are started (`true`) or stopped (`false`).\r\n   * @param meta\r\n   * @param events Internal event queue. Should be empty with run-to-completion semantics.\r\n   * @param configuration\r\n   */\n  function State(config) {\n    var _this = this;\n\n    this.actions = [];\n    this.activities = EMPTY_ACTIVITY_MAP;\n    this.meta = {};\n    this.events = [];\n    this.value = config.value;\n    this.context = config.context;\n    this._event = config._event;\n    this._sessionid = config._sessionid;\n    this.event = this._event.data;\n    this.historyValue = config.historyValue;\n    this.history = config.history;\n    this.actions = config.actions || [];\n    this.activities = config.activities || EMPTY_ACTIVITY_MAP;\n    this.meta = config.meta || {};\n    this.events = config.events || [];\n    this.matches = this.matches.bind(this);\n    this.toStrings = this.toStrings.bind(this);\n    this.configuration = config.configuration;\n    this.transitions = config.transitions;\n    this.children = config.children;\n    this.done = !!config.done;\n    Object.defineProperty(this, 'nextEvents', {\n      get: function () {\n        return nextEvents(_this.configuration);\n      }\n    });\n  }\n  /**\r\n   * Creates a new State instance for the given `stateValue` and `context`.\r\n   * @param stateValue\r\n   * @param context\r\n   */\n\n\n  State.from = function (stateValue, context) {\n    if (stateValue instanceof State) {\n      if (stateValue.context !== context) {\n        return new State({\n          value: stateValue.value,\n          context: context,\n          _event: stateValue._event,\n          _sessionid: null,\n          historyValue: stateValue.historyValue,\n          history: stateValue.history,\n          actions: [],\n          activities: stateValue.activities,\n          meta: {},\n          events: [],\n          configuration: [],\n          transitions: [],\n          children: {}\n        });\n      }\n\n      return stateValue;\n    }\n\n    var _event = initEvent;\n    return new State({\n      value: stateValue,\n      context: context,\n      _event: _event,\n      _sessionid: null,\n      historyValue: undefined,\n      history: undefined,\n      actions: [],\n      activities: undefined,\n      meta: undefined,\n      events: [],\n      configuration: [],\n      transitions: [],\n      children: {}\n    });\n  };\n  /**\r\n   * Creates a new State instance for the given `config`.\r\n   * @param config The state config\r\n   */\n\n\n  State.create = function (config) {\n    return new State(config);\n  };\n  /**\r\n   * Creates a new `State` instance for the given `stateValue` and `context` with no actions (side-effects).\r\n   * @param stateValue\r\n   * @param context\r\n   */\n\n\n  State.inert = function (stateValue, context) {\n    if (stateValue instanceof State) {\n      if (!stateValue.actions.length) {\n        return stateValue;\n      }\n\n      var _event = initEvent;\n      return new State({\n        value: stateValue.value,\n        context: context,\n        _event: _event,\n        _sessionid: null,\n        historyValue: stateValue.historyValue,\n        history: stateValue.history,\n        activities: stateValue.activities,\n        configuration: stateValue.configuration,\n        transitions: [],\n        children: {}\n      });\n    }\n\n    return State.from(stateValue, context);\n  };\n  /**\r\n   * Returns an array of all the string leaf state node paths.\r\n   * @param stateValue\r\n   * @param delimiter The character(s) that separate each subpath in the string state node path.\r\n   */\n\n\n  State.prototype.toStrings = function (stateValue, delimiter) {\n    var _this = this;\n\n    if (stateValue === void 0) {\n      stateValue = this.value;\n    }\n\n    if (delimiter === void 0) {\n      delimiter = '.';\n    }\n\n    if (isString(stateValue)) {\n      return [stateValue];\n    }\n\n    var valueKeys = keys(stateValue);\n    return valueKeys.concat.apply(valueKeys, __spread(valueKeys.map(function (key) {\n      return _this.toStrings(stateValue[key], delimiter).map(function (s) {\n        return key + delimiter + s;\n      });\n    })));\n  };\n\n  State.prototype.toJSON = function () {\n    var _a = this,\n        configuration = _a.configuration,\n        transitions = _a.transitions,\n        jsonValues = __rest(_a, [\"configuration\", \"transitions\"]);\n\n    return jsonValues;\n  };\n  /**\r\n   * Whether the current state value is a subset of the given parent state value.\r\n   * @param parentStateValue\r\n   */\n\n\n  State.prototype.matches = function (parentStateValue) {\n    return matchesState(parentStateValue, this.value);\n  };\n\n  return State;\n}();\n\nexport { State, bindActionToState, isState, stateValuesEqual };","import { __assign } from './_virtual/_tslib.js';\nvar defaultOptions = {\n  deferEvents: false\n};\n\nvar Scheduler =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  function Scheduler(options) {\n    this.processingEvent = false;\n    this.queue = [];\n    this.initialized = false;\n    this.options = __assign(__assign({}, defaultOptions), options);\n  }\n\n  Scheduler.prototype.initialize = function (callback) {\n    this.initialized = true;\n\n    if (callback) {\n      if (!this.options.deferEvents) {\n        this.schedule(callback);\n        return;\n      }\n\n      this.process(callback);\n    }\n\n    this.flushEvents();\n  };\n\n  Scheduler.prototype.schedule = function (task) {\n    if (!this.initialized || this.processingEvent) {\n      this.queue.push(task);\n      return;\n    }\n\n    if (this.queue.length !== 0) {\n      throw new Error('Event queue should be empty when it is not processing events');\n    }\n\n    this.process(task);\n    this.flushEvents();\n  };\n\n  Scheduler.prototype.clear = function () {\n    this.queue = [];\n  };\n\n  Scheduler.prototype.flushEvents = function () {\n    var nextCallback = this.queue.shift();\n\n    while (nextCallback) {\n      this.process(nextCallback);\n      nextCallback = this.queue.shift();\n    }\n  };\n\n  Scheduler.prototype.process = function (callback) {\n    this.processingEvent = true;\n\n    try {\n      callback();\n    } catch (e) {\n      // there is no use to keep the future events\n      // as the situation is not anymore the same\n      this.clear();\n      throw e;\n    } finally {\n      this.processingEvent = false;\n    }\n  };\n\n  return Scheduler;\n}();\n\nexport { Scheduler };","var children = /*#__PURE__*/new Map();\nvar sessionIdIndex = 0;\nvar registry = {\n  bookId: function () {\n    return \"x:\" + sessionIdIndex++;\n  },\n  register: function (id, actor) {\n    children.set(id, actor);\n    return id;\n  },\n  get: function (id) {\n    return children.get(id);\n  },\n  free: function (id) {\n    children.delete(id);\n  }\n};\nexport { registry };","import { IS_PRODUCTION } from './environment.js';\n\nfunction getDevTools() {\n  var w = window;\n\n  if (!!w.__xstate__) {\n    return w.__xstate__;\n  }\n\n  return undefined;\n}\n\nfunction registerService(service) {\n  if (IS_PRODUCTION || typeof window === 'undefined') {\n    return;\n  }\n\n  var devTools = getDevTools();\n\n  if (devTools) {\n    devTools.register(service);\n  }\n}\n\nexport { registerService };","import { __values, __assign, __spread } from './_virtual/_tslib.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { warn, mapContext, isFunction, keys, toSCXMLEvent, isPromiseLike, isObservable, isMachine, reportUnhandledExceptionOnInvocation, symbolObservable, isArray, toEventObject, isString, uniqueId } from './utils.js';\nimport { ActionTypes, SpecialTargets } from './types.js';\nimport { isInFinalState } from './stateUtils.js';\nimport { errorPlatform, log, stop, start, cancel, send, update, error as error$1 } from './actionTypes.js';\nimport { doneInvoke, initEvent, getActionFunction, error } from './actions.js';\nimport { isState, State, bindActionToState } from './State.js';\nimport { isActor } from './Actor.js';\nimport { Scheduler } from './scheduler.js';\nimport { registry } from './registry.js';\nimport { registerService } from './devTools.js';\nvar DEFAULT_SPAWN_OPTIONS = {\n  sync: false,\n  autoForward: false\n};\n/**\r\n * Maintains a stack of the current service in scope.\r\n * This is used to provide the correct service to spawn().\r\n *\r\n * @private\r\n */\n\nvar withServiceScope = /*#__PURE__*/function () {\n  var serviceStack = [];\n  return function (service, fn) {\n    service && serviceStack.push(service);\n    var result = fn(service || serviceStack[serviceStack.length - 1]);\n    service && serviceStack.pop();\n    return result;\n  };\n}();\n\nvar InterpreterStatus;\n\n(function (InterpreterStatus) {\n  InterpreterStatus[InterpreterStatus[\"NotStarted\"] = 0] = \"NotStarted\";\n  InterpreterStatus[InterpreterStatus[\"Running\"] = 1] = \"Running\";\n  InterpreterStatus[InterpreterStatus[\"Stopped\"] = 2] = \"Stopped\";\n})(InterpreterStatus || (InterpreterStatus = {}));\n\nvar Interpreter =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  /**\r\n   * Creates a new Interpreter instance (i.e., service) for the given machine with the provided options, if any.\r\n   *\r\n   * @param machine The machine to be interpreted\r\n   * @param options Interpreter options\r\n   */\n  function Interpreter(machine, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = Interpreter.defaultOptions;\n    }\n\n    this.machine = machine;\n    this.scheduler = new Scheduler();\n    this.delayedEventsMap = {};\n    this.listeners = new Set();\n    this.contextListeners = new Set();\n    this.stopListeners = new Set();\n    this.doneListeners = new Set();\n    this.eventListeners = new Set();\n    this.sendListeners = new Set();\n    /**\r\n     * Whether the service is started.\r\n     */\n\n    this.initialized = false;\n    this._status = InterpreterStatus.NotStarted;\n    this.children = new Map();\n    this.forwardTo = new Set();\n    /**\r\n     * Alias for Interpreter.prototype.start\r\n     */\n\n    this.init = this.start;\n    /**\r\n     * Sends an event to the running interpreter to trigger a transition.\r\n     *\r\n     * An array of events (batched) can be sent as well, which will send all\r\n     * batched events to the running interpreter. The listeners will be\r\n     * notified only **once** when all events are processed.\r\n     *\r\n     * @param event The event(s) to send\r\n     */\n\n    this.send = function (event, payload) {\n      if (isArray(event)) {\n        _this.batch(event);\n\n        return _this.state;\n      }\n\n      var _event = toSCXMLEvent(toEventObject(event, payload));\n\n      if (_this._status === InterpreterStatus.Stopped) {\n        // do nothing\n        if (!IS_PRODUCTION) {\n          warn(false, \"Event \\\"\" + _event.name + \"\\\" was sent to stopped service \\\"\" + _this.machine.id + \"\\\". This service has already reached its final state, and will not transition.\\nEvent: \" + JSON.stringify(_event.data));\n        }\n\n        return _this.state;\n      }\n\n      if (_this._status === InterpreterStatus.NotStarted && _this.options.deferEvents) {\n        // tslint:disable-next-line:no-console\n        if (!IS_PRODUCTION) {\n          warn(false, \"Event \\\"\" + _event.name + \"\\\" was sent to uninitialized service \\\"\" + _this.machine.id + \"\\\" and is deferred. Make sure .start() is called for this service.\\nEvent: \" + JSON.stringify(_event.data));\n        }\n      } else if (_this._status !== InterpreterStatus.Running) {\n        throw new Error(\"Event \\\"\" + _event.name + \"\\\" was sent to uninitialized service \\\"\" + _this.machine.id + \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\\nEvent: \" + JSON.stringify(_event.data));\n      }\n\n      _this.scheduler.schedule(function () {\n        // Forward copy of event to child actors\n        _this.forward(_event);\n\n        var nextState = _this.nextState(_event);\n\n        _this.update(nextState, _event);\n      });\n\n      return _this._state; // TODO: deprecate (should return void)\n      // tslint:disable-next-line:semicolon\n    };\n\n    this.sendTo = function (event, to) {\n      var isParent = _this.parent && (to === SpecialTargets.Parent || _this.parent.id === to);\n      var target = isParent ? _this.parent : isActor(to) ? to : _this.children.get(to) || registry.get(to);\n\n      if (!target) {\n        if (!isParent) {\n          throw new Error(\"Unable to send event to child '\" + to + \"' from service '\" + _this.id + \"'.\");\n        } // tslint:disable-next-line:no-console\n\n\n        if (!IS_PRODUCTION) {\n          warn(false, \"Service '\" + _this.id + \"' has no parent: unable to send event \" + event.type);\n        }\n\n        return;\n      }\n\n      if ('machine' in target) {\n        // Send SCXML events to machines\n        target.send(__assign(__assign({}, event), {\n          name: event.name === error$1 ? \"\" + error(_this.id) : event.name,\n          origin: _this.sessionId\n        }));\n      } else {\n        // Send normal events to other targets\n        target.send(event.data);\n      }\n    };\n\n    var resolvedOptions = __assign(__assign({}, Interpreter.defaultOptions), options);\n\n    var clock = resolvedOptions.clock,\n        logger = resolvedOptions.logger,\n        parent = resolvedOptions.parent,\n        id = resolvedOptions.id;\n    var resolvedId = id !== undefined ? id : machine.id;\n    this.id = resolvedId;\n    this.logger = logger;\n    this.clock = clock;\n    this.parent = parent;\n    this.options = resolvedOptions;\n    this.scheduler = new Scheduler({\n      deferEvents: this.options.deferEvents\n    });\n    this.sessionId = registry.bookId();\n  }\n\n  Object.defineProperty(Interpreter.prototype, \"initialState\", {\n    get: function () {\n      var _this = this;\n\n      if (this._initialState) {\n        return this._initialState;\n      }\n\n      return withServiceScope(this, function () {\n        _this._initialState = _this.machine.initialState;\n        return _this._initialState;\n      });\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(Interpreter.prototype, \"state\", {\n    get: function () {\n      if (!IS_PRODUCTION) {\n        warn(this._status !== InterpreterStatus.NotStarted, \"Attempted to read state from uninitialized service '\" + this.id + \"'. Make sure the service is started first.\");\n      }\n\n      return this._state;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Executes the actions of the given state, with that state's `context` and `event`.\r\n   *\r\n   * @param state The state whose actions will be executed\r\n   * @param actionsConfig The action implementations to use\r\n   */\n\n  Interpreter.prototype.execute = function (state, actionsConfig) {\n    var e_1, _a;\n\n    try {\n      for (var _b = __values(state.actions), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var action = _c.value;\n        this.exec(action, state, actionsConfig);\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  Interpreter.prototype.update = function (state, _event) {\n    var e_2, _a, e_3, _b, e_4, _c, e_5, _d;\n\n    var _this = this; // Attach session ID to state\n\n\n    state._sessionid = this.sessionId; // Update state\n\n    this._state = state; // Execute actions\n\n    if (this.options.execute) {\n      this.execute(this.state);\n    } // Dev tools\n\n\n    if (this.devTools) {\n      this.devTools.send(_event.data, state);\n    } // Execute listeners\n\n\n    if (state.event) {\n      try {\n        for (var _e = __values(this.eventListeners), _f = _e.next(); !_f.done; _f = _e.next()) {\n          var listener = _f.value;\n          listener(state.event);\n        }\n      } catch (e_2_1) {\n        e_2 = {\n          error: e_2_1\n        };\n      } finally {\n        try {\n          if (_f && !_f.done && (_a = _e.return)) _a.call(_e);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n      }\n    }\n\n    try {\n      for (var _g = __values(this.listeners), _h = _g.next(); !_h.done; _h = _g.next()) {\n        var listener = _h.value;\n        listener(state, state.event);\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_h && !_h.done && (_b = _g.return)) _b.call(_g);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    try {\n      for (var _j = __values(this.contextListeners), _k = _j.next(); !_k.done; _k = _j.next()) {\n        var contextListener = _k.value;\n        contextListener(this.state.context, this.state.history ? this.state.history.context : undefined);\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (_k && !_k.done && (_c = _j.return)) _c.call(_j);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    var isDone = isInFinalState(state.configuration || [], this.machine);\n\n    if (this.state.configuration && isDone) {\n      // get final child state node\n      var finalChildStateNode = state.configuration.find(function (sn) {\n        return sn.type === 'final' && sn.parent === _this.machine;\n      });\n      var doneData = finalChildStateNode && finalChildStateNode.doneData ? mapContext(finalChildStateNode.doneData, state.context, _event) : undefined;\n\n      try {\n        for (var _l = __values(this.doneListeners), _m = _l.next(); !_m.done; _m = _l.next()) {\n          var listener = _m.value;\n          listener(doneInvoke(this.id, doneData));\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (_m && !_m.done && (_d = _l.return)) _d.call(_l);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n\n      this.stop();\n    }\n  };\n  /*\r\n   * Adds a listener that is notified whenever a state transition happens. The listener is called with\r\n   * the next state and the event object that caused the state transition.\r\n   *\r\n   * @param listener The state listener\r\n   */\n\n\n  Interpreter.prototype.onTransition = function (listener) {\n    this.listeners.add(listener); // Send current state to listener\n\n    if (this._status === InterpreterStatus.Running) {\n      listener(this.state, this.state.event);\n    }\n\n    return this;\n  };\n\n  Interpreter.prototype.subscribe = function (nextListenerOrObserver, // @ts-ignore\n  errorListener, completeListener) {\n    var _this = this;\n\n    if (!nextListenerOrObserver) {\n      return {\n        unsubscribe: function () {\n          return void 0;\n        }\n      };\n    }\n\n    var listener;\n    var resolvedCompleteListener = completeListener;\n\n    if (typeof nextListenerOrObserver === 'function') {\n      listener = nextListenerOrObserver;\n    } else {\n      listener = nextListenerOrObserver.next.bind(nextListenerOrObserver);\n      resolvedCompleteListener = nextListenerOrObserver.complete.bind(nextListenerOrObserver);\n    }\n\n    this.listeners.add(listener); // Send current state to listener\n\n    if (this._status === InterpreterStatus.Running) {\n      listener(this.state);\n    }\n\n    if (resolvedCompleteListener) {\n      this.onDone(resolvedCompleteListener);\n    }\n\n    return {\n      unsubscribe: function () {\n        listener && _this.listeners.delete(listener);\n        resolvedCompleteListener && _this.doneListeners.delete(resolvedCompleteListener);\n      }\n    };\n  };\n  /**\r\n   * Adds an event listener that is notified whenever an event is sent to the running interpreter.\r\n   * @param listener The event listener\r\n   */\n\n\n  Interpreter.prototype.onEvent = function (listener) {\n    this.eventListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds an event listener that is notified whenever a `send` event occurs.\r\n   * @param listener The event listener\r\n   */\n\n\n  Interpreter.prototype.onSend = function (listener) {\n    this.sendListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a context listener that is notified whenever the state context changes.\r\n   * @param listener The context listener\r\n   */\n\n\n  Interpreter.prototype.onChange = function (listener) {\n    this.contextListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a listener that is notified when the machine is stopped.\r\n   * @param listener The listener\r\n   */\n\n\n  Interpreter.prototype.onStop = function (listener) {\n    this.stopListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Adds a state listener that is notified when the statechart has reached its final state.\r\n   * @param listener The state listener\r\n   */\n\n\n  Interpreter.prototype.onDone = function (listener) {\n    this.doneListeners.add(listener);\n    return this;\n  };\n  /**\r\n   * Removes a listener.\r\n   * @param listener The listener to remove\r\n   */\n\n\n  Interpreter.prototype.off = function (listener) {\n    this.listeners.delete(listener);\n    this.eventListeners.delete(listener);\n    this.sendListeners.delete(listener);\n    this.stopListeners.delete(listener);\n    this.doneListeners.delete(listener);\n    this.contextListeners.delete(listener);\n    return this;\n  };\n  /**\r\n   * Starts the interpreter from the given state, or the initial state.\r\n   * @param initialState The state to start the statechart from\r\n   */\n\n\n  Interpreter.prototype.start = function (initialState) {\n    var _this = this;\n\n    if (this._status === InterpreterStatus.Running) {\n      // Do not restart the service if it is already started\n      return this;\n    }\n\n    registry.register(this.sessionId, this);\n    this.initialized = true;\n    this._status = InterpreterStatus.Running;\n    var resolvedState = initialState === undefined ? this.initialState : withServiceScope(this, function () {\n      return isState(initialState) ? _this.machine.resolveState(initialState) : _this.machine.resolveState(State.from(initialState, _this.machine.context));\n    });\n\n    if (this.options.devTools) {\n      this.attachDev();\n    }\n\n    this.scheduler.initialize(function () {\n      _this.update(resolvedState, initEvent);\n    });\n    return this;\n  };\n  /**\r\n   * Stops the interpreter and unsubscribe all listeners.\r\n   *\r\n   * This will also notify the `onStop` listeners.\r\n   */\n\n\n  Interpreter.prototype.stop = function () {\n    var e_6, _a, e_7, _b, e_8, _c, e_9, _d, e_10, _e;\n\n    try {\n      for (var _f = __values(this.listeners), _g = _f.next(); !_g.done; _g = _f.next()) {\n        var listener = _g.value;\n        this.listeners.delete(listener);\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (_g && !_g.done && (_a = _f.return)) _a.call(_f);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    try {\n      for (var _h = __values(this.stopListeners), _j = _h.next(); !_j.done; _j = _h.next()) {\n        var listener = _j.value; // call listener, then remove\n\n        listener();\n        this.stopListeners.delete(listener);\n      }\n    } catch (e_7_1) {\n      e_7 = {\n        error: e_7_1\n      };\n    } finally {\n      try {\n        if (_j && !_j.done && (_b = _h.return)) _b.call(_h);\n      } finally {\n        if (e_7) throw e_7.error;\n      }\n    }\n\n    try {\n      for (var _k = __values(this.contextListeners), _l = _k.next(); !_l.done; _l = _k.next()) {\n        var listener = _l.value;\n        this.contextListeners.delete(listener);\n      }\n    } catch (e_8_1) {\n      e_8 = {\n        error: e_8_1\n      };\n    } finally {\n      try {\n        if (_l && !_l.done && (_c = _k.return)) _c.call(_k);\n      } finally {\n        if (e_8) throw e_8.error;\n      }\n    }\n\n    try {\n      for (var _m = __values(this.doneListeners), _o = _m.next(); !_o.done; _o = _m.next()) {\n        var listener = _o.value;\n        this.doneListeners.delete(listener);\n      }\n    } catch (e_9_1) {\n      e_9 = {\n        error: e_9_1\n      };\n    } finally {\n      try {\n        if (_o && !_o.done && (_d = _m.return)) _d.call(_m);\n      } finally {\n        if (e_9) throw e_9.error;\n      }\n    } // Stop all children\n\n\n    this.children.forEach(function (child) {\n      if (isFunction(child.stop)) {\n        child.stop();\n      }\n    });\n\n    try {\n      // Cancel all delayed events\n      for (var _p = __values(keys(this.delayedEventsMap)), _q = _p.next(); !_q.done; _q = _p.next()) {\n        var key = _q.value;\n        this.clock.clearTimeout(this.delayedEventsMap[key]);\n      }\n    } catch (e_10_1) {\n      e_10 = {\n        error: e_10_1\n      };\n    } finally {\n      try {\n        if (_q && !_q.done && (_e = _p.return)) _e.call(_p);\n      } finally {\n        if (e_10) throw e_10.error;\n      }\n    }\n\n    this.scheduler.clear();\n    this.initialized = false;\n    this._status = InterpreterStatus.Stopped;\n    registry.free(this.sessionId);\n    return this;\n  };\n\n  Interpreter.prototype.batch = function (events) {\n    var _this = this;\n\n    if (this._status === InterpreterStatus.NotStarted && this.options.deferEvents) {\n      // tslint:disable-next-line:no-console\n      if (!IS_PRODUCTION) {\n        warn(false, events.length + \" event(s) were sent to uninitialized service \\\"\" + this.machine.id + \"\\\" and are deferred. Make sure .start() is called for this service.\\nEvent: \" + JSON.stringify(event));\n      }\n    } else if (this._status !== InterpreterStatus.Running) {\n      throw new Error( // tslint:disable-next-line:max-line-length\n      events.length + \" event(s) were sent to uninitialized service \\\"\" + this.machine.id + \"\\\". Make sure .start() is called for this service, or set { deferEvents: true } in the service options.\");\n    }\n\n    this.scheduler.schedule(function () {\n      var e_11, _a;\n\n      var nextState = _this.state;\n      var batchChanged = false;\n      var batchedActions = [];\n\n      var _loop_1 = function (event_1) {\n        var _event = toSCXMLEvent(event_1);\n\n        _this.forward(_event);\n\n        nextState = withServiceScope(_this, function () {\n          return _this.machine.transition(nextState, _event);\n        });\n        batchedActions.push.apply(batchedActions, __spread(nextState.actions.map(function (a) {\n          return bindActionToState(a, nextState);\n        })));\n        batchChanged = batchChanged || !!nextState.changed;\n      };\n\n      try {\n        for (var events_1 = __values(events), events_1_1 = events_1.next(); !events_1_1.done; events_1_1 = events_1.next()) {\n          var event_1 = events_1_1.value;\n\n          _loop_1(event_1);\n        }\n      } catch (e_11_1) {\n        e_11 = {\n          error: e_11_1\n        };\n      } finally {\n        try {\n          if (events_1_1 && !events_1_1.done && (_a = events_1.return)) _a.call(events_1);\n        } finally {\n          if (e_11) throw e_11.error;\n        }\n      }\n\n      nextState.changed = batchChanged;\n      nextState.actions = batchedActions;\n\n      _this.update(nextState, toSCXMLEvent(events[events.length - 1]));\n    });\n  };\n  /**\r\n   * Returns a send function bound to this interpreter instance.\r\n   *\r\n   * @param event The event to be sent by the sender.\r\n   */\n\n\n  Interpreter.prototype.sender = function (event) {\n    return this.send.bind(this, event);\n  };\n  /**\r\n   * Returns the next state given the interpreter's current state and the event.\r\n   *\r\n   * This is a pure method that does _not_ update the interpreter's state.\r\n   *\r\n   * @param event The event to determine the next state\r\n   */\n\n\n  Interpreter.prototype.nextState = function (event) {\n    var _this = this;\n\n    var _event = toSCXMLEvent(event);\n\n    if (_event.name.indexOf(errorPlatform) === 0 && !this.state.nextEvents.some(function (nextEvent) {\n      return nextEvent.indexOf(errorPlatform) === 0;\n    })) {\n      throw _event.data.data;\n    }\n\n    var nextState = withServiceScope(this, function () {\n      return _this.machine.transition(_this.state, _event);\n    });\n    return nextState;\n  };\n\n  Interpreter.prototype.forward = function (event) {\n    var e_12, _a;\n\n    try {\n      for (var _b = __values(this.forwardTo), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var id = _c.value;\n        var child = this.children.get(id);\n\n        if (!child) {\n          throw new Error(\"Unable to forward event '\" + event + \"' from interpreter '\" + this.id + \"' to nonexistant child '\" + id + \"'.\");\n        }\n\n        child.send(event);\n      }\n    } catch (e_12_1) {\n      e_12 = {\n        error: e_12_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_12) throw e_12.error;\n      }\n    }\n  };\n\n  Interpreter.prototype.defer = function (sendAction) {\n    var _this = this;\n\n    this.delayedEventsMap[sendAction.id] = this.clock.setTimeout(function () {\n      if (sendAction.to) {\n        _this.sendTo(sendAction._event, sendAction.to);\n      } else {\n        _this.send(sendAction._event);\n      }\n    }, sendAction.delay);\n  };\n\n  Interpreter.prototype.cancel = function (sendId) {\n    this.clock.clearTimeout(this.delayedEventsMap[sendId]);\n    delete this.delayedEventsMap[sendId];\n  };\n\n  Interpreter.prototype.exec = function (action, state, actionFunctionMap) {\n    if (actionFunctionMap === void 0) {\n      actionFunctionMap = this.machine.options.actions;\n    }\n\n    var context = state.context,\n        _event = state._event;\n    var actionOrExec = action.exec || getActionFunction(action.type, actionFunctionMap);\n    var exec = isFunction(actionOrExec) ? actionOrExec : actionOrExec ? actionOrExec.exec : action.exec;\n\n    if (exec) {\n      try {\n        return exec(context, _event.data, {\n          action: action,\n          state: this.state,\n          _event: _event\n        });\n      } catch (err) {\n        if (this.parent) {\n          this.parent.send({\n            type: 'xstate.error',\n            data: err\n          });\n        }\n\n        throw err;\n      }\n    }\n\n    switch (action.type) {\n      case send:\n        var sendAction = action;\n\n        if (typeof sendAction.delay === 'number') {\n          this.defer(sendAction);\n          return;\n        } else {\n          if (sendAction.to) {\n            this.sendTo(sendAction._event, sendAction.to);\n          } else {\n            this.send(sendAction._event);\n          }\n        }\n\n        break;\n\n      case cancel:\n        this.cancel(action.sendId);\n        break;\n\n      case start:\n        {\n          var activity = action.activity; // If the activity will be stopped right after it's started\n          // (such as in transient states)\n          // don't bother starting the activity.\n\n          if (!this.state.activities[activity.id || activity.type]) {\n            break;\n          } // Invoked services\n\n\n          if (activity.type === ActionTypes.Invoke) {\n            var serviceCreator = this.machine.options.services ? this.machine.options.services[activity.src] : undefined;\n            var id = activity.id,\n                data = activity.data;\n\n            if (!IS_PRODUCTION) {\n              warn(!('forward' in activity), // tslint:disable-next-line:max-line-length\n              \"`forward` property is deprecated (found in invocation of '\" + activity.src + \"' in in machine '\" + this.machine.id + \"'). \" + \"Please use `autoForward` instead.\");\n            }\n\n            var autoForward = 'autoForward' in activity ? activity.autoForward : !!activity.forward;\n\n            if (!serviceCreator) {\n              // tslint:disable-next-line:no-console\n              if (!IS_PRODUCTION) {\n                warn(false, \"No service found for invocation '\" + activity.src + \"' in machine '\" + this.machine.id + \"'.\");\n              }\n\n              return;\n            }\n\n            var resolvedData = data ? mapContext(data, context, _event) : undefined;\n            var source = isFunction(serviceCreator) ? serviceCreator(context, _event.data, {\n              data: resolvedData\n            }) : serviceCreator;\n\n            if (isPromiseLike(source)) {\n              this.state.children[id] = this.spawnPromise(Promise.resolve(source), id);\n            } else if (isFunction(source)) {\n              this.state.children[id] = this.spawnCallback(source, id);\n            } else if (isObservable(source)) {\n              this.state.children[id] = this.spawnObservable(source, id);\n            } else if (isMachine(source)) {\n              // TODO: try/catch here\n              this.state.children[id] = this.spawnMachine(resolvedData ? source.withContext(resolvedData) : source, {\n                id: id,\n                autoForward: autoForward\n              });\n            }\n          } else {\n            this.spawnActivity(activity);\n          }\n\n          break;\n        }\n\n      case stop:\n        {\n          this.stopChild(action.activity.id);\n          break;\n        }\n\n      case log:\n        var label = action.label,\n            value = action.value;\n\n        if (label) {\n          this.logger(label, value);\n        } else {\n          this.logger(value);\n        }\n\n        break;\n\n      default:\n        if (!IS_PRODUCTION) {\n          warn(false, \"No implementation found for action type '\" + action.type + \"'\");\n        }\n\n        break;\n    }\n\n    return undefined;\n  };\n\n  Interpreter.prototype.removeChild = function (childId) {\n    this.children.delete(childId);\n    this.forwardTo.delete(childId);\n    delete this.state.children[childId];\n  };\n\n  Interpreter.prototype.stopChild = function (childId) {\n    var child = this.children.get(childId);\n\n    if (!child) {\n      return;\n    }\n\n    this.removeChild(childId);\n\n    if (isFunction(child.stop)) {\n      child.stop();\n    }\n  };\n\n  Interpreter.prototype.spawn = function (entity, name, options) {\n    if (isPromiseLike(entity)) {\n      return this.spawnPromise(Promise.resolve(entity), name);\n    } else if (isFunction(entity)) {\n      return this.spawnCallback(entity, name);\n    } else if (isActor(entity)) {\n      return this.spawnActor(entity);\n    } else if (isObservable(entity)) {\n      return this.spawnObservable(entity, name);\n    } else if (isMachine(entity)) {\n      return this.spawnMachine(entity, __assign(__assign({}, options), {\n        id: name\n      }));\n    } else {\n      throw new Error(\"Unable to spawn entity \\\"\" + name + \"\\\" of type \\\"\" + typeof entity + \"\\\".\");\n    }\n  };\n\n  Interpreter.prototype.spawnMachine = function (machine, options) {\n    var _this = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var childService = new Interpreter(machine, __assign(__assign({}, this.options), {\n      parent: this,\n      id: options.id || machine.id\n    }));\n\n    var resolvedOptions = __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), options);\n\n    if (resolvedOptions.sync) {\n      childService.onTransition(function (state) {\n        _this.send(update, {\n          state: state,\n          id: childService.id\n        });\n      });\n    }\n\n    var actor = childService;\n    this.children.set(childService.id, actor);\n\n    if (resolvedOptions.autoForward) {\n      this.forwardTo.add(childService.id);\n    }\n\n    childService.onDone(function (doneEvent) {\n      _this.removeChild(childService.id);\n\n      _this.send(toSCXMLEvent(doneEvent, {\n        origin: childService.id\n      }));\n    }).start();\n    return actor;\n  };\n\n  Interpreter.prototype.spawnPromise = function (promise, id) {\n    var _this = this;\n\n    var canceled = false;\n    promise.then(function (response) {\n      if (!canceled) {\n        _this.removeChild(id);\n\n        _this.send(toSCXMLEvent(doneInvoke(id, response), {\n          origin: id\n        }));\n      }\n    }, function (errorData) {\n      if (!canceled) {\n        _this.removeChild(id);\n\n        var errorEvent = error(id, errorData);\n\n        try {\n          // Send \"error.platform.id\" to this (parent).\n          _this.send(toSCXMLEvent(errorEvent, {\n            origin: id\n          }));\n        } catch (error) {\n          reportUnhandledExceptionOnInvocation(errorData, error, id);\n\n          if (_this.devTools) {\n            _this.devTools.send(errorEvent, _this.state);\n          }\n\n          if (_this.machine.strict) {\n            // it would be better to always stop the state machine if unhandled\n            // exception/promise rejection happens but because we don't want to\n            // break existing code so enforce it on strict mode only especially so\n            // because documentation says that onError is optional\n            _this.stop();\n          }\n        }\n      }\n    });\n    var actor = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function (next, handleError, complete) {\n        var unsubscribed = false;\n        promise.then(function (response) {\n          if (unsubscribed) {\n            return;\n          }\n\n          next && next(response);\n\n          if (unsubscribed) {\n            return;\n          }\n\n          complete && complete();\n        }, function (err) {\n          if (unsubscribed) {\n            return;\n          }\n\n          handleError(err);\n        });\n        return {\n          unsubscribe: function () {\n            return unsubscribed = true;\n          }\n        };\n      },\n      stop: function () {\n        canceled = true;\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    };\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnCallback = function (callback, id) {\n    var _this = this;\n\n    var canceled = false;\n    var receivers = new Set();\n    var listeners = new Set();\n\n    var receive = function (e) {\n      listeners.forEach(function (listener) {\n        return listener(e);\n      });\n\n      if (canceled) {\n        return;\n      }\n\n      _this.send(e);\n    };\n\n    var callbackStop;\n\n    try {\n      callbackStop = callback(receive, function (newListener) {\n        receivers.add(newListener);\n      });\n    } catch (err) {\n      this.send(error(id, err));\n    }\n\n    if (isPromiseLike(callbackStop)) {\n      // it turned out to be an async function, can't reliably check this before calling `callback`\n      // because transpiled async functions are not recognizable\n      return this.spawnPromise(callbackStop, id);\n    }\n\n    var actor = {\n      id: id,\n      send: function (event) {\n        return receivers.forEach(function (receiver) {\n          return receiver(event);\n        });\n      },\n      subscribe: function (next) {\n        listeners.add(next);\n        return {\n          unsubscribe: function () {\n            listeners.delete(next);\n          }\n        };\n      },\n      stop: function () {\n        canceled = true;\n\n        if (isFunction(callbackStop)) {\n          callbackStop();\n        }\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    };\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnObservable = function (source, id) {\n    var _this = this;\n\n    var subscription = source.subscribe(function (value) {\n      _this.send(toSCXMLEvent(value, {\n        origin: id\n      }));\n    }, function (err) {\n      _this.removeChild(id);\n\n      _this.send(toSCXMLEvent(error(id, err), {\n        origin: id\n      }));\n    }, function () {\n      _this.removeChild(id);\n\n      _this.send(toSCXMLEvent(doneInvoke(id), {\n        origin: id\n      }));\n    });\n    var actor = {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function (next, handleError, complete) {\n        return source.subscribe(next, handleError, complete);\n      },\n      stop: function () {\n        return subscription.unsubscribe();\n      },\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    };\n    this.children.set(id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnActor = function (actor) {\n    this.children.set(actor.id, actor);\n    return actor;\n  };\n\n  Interpreter.prototype.spawnActivity = function (activity) {\n    var implementation = this.machine.options && this.machine.options.activities ? this.machine.options.activities[activity.type] : undefined;\n\n    if (!implementation) {\n      if (!IS_PRODUCTION) {\n        warn(false, \"No implementation found for activity '\" + activity.type + \"'\");\n      } // tslint:disable-next-line:no-console\n\n\n      return;\n    } // Start implementation\n\n\n    var dispose = implementation(this.state.context, activity);\n    this.spawnEffect(activity.id, dispose);\n  };\n\n  Interpreter.prototype.spawnEffect = function (id, dispose) {\n    this.children.set(id, {\n      id: id,\n      send: function () {\n        return void 0;\n      },\n      subscribe: function () {\n        return {\n          unsubscribe: function () {\n            return void 0;\n          }\n        };\n      },\n      stop: dispose || undefined,\n      toJSON: function () {\n        return {\n          id: id\n        };\n      }\n    });\n  };\n\n  Interpreter.prototype.attachDev = function () {\n    if (this.options.devTools && typeof window !== 'undefined') {\n      if (window.__REDUX_DEVTOOLS_EXTENSION__) {\n        var devToolsOptions = typeof this.options.devTools === 'object' ? this.options.devTools : undefined;\n        this.devTools = window.__REDUX_DEVTOOLS_EXTENSION__.connect(__assign(__assign({\n          name: this.id,\n          autoPause: true,\n          stateSanitizer: function (state) {\n            return {\n              value: state.value,\n              context: state.context,\n              actions: state.actions\n            };\n          }\n        }, devToolsOptions), {\n          features: __assign({\n            jump: false,\n            skip: false\n          }, devToolsOptions ? devToolsOptions.features : undefined)\n        }), this.machine);\n        this.devTools.init(this.state);\n      } // add XState-specific dev tooling hook\n\n\n      registerService(this);\n    }\n  };\n\n  Interpreter.prototype.toJSON = function () {\n    return {\n      id: this.id\n    };\n  };\n\n  Interpreter.prototype[symbolObservable] = function () {\n    return this;\n  };\n  /**\r\n   * The default interpreter options:\r\n   *\r\n   * - `clock` uses the global `setTimeout` and `clearTimeout` functions\r\n   * - `logger` uses the global `console.log()` method\r\n   */\n\n\n  Interpreter.defaultOptions = /*#__PURE__*/function (global) {\n    return {\n      execute: true,\n      deferEvents: true,\n      clock: {\n        setTimeout: function (fn, ms) {\n          return global.setTimeout.call(null, fn, ms);\n        },\n        clearTimeout: function (id) {\n          return global.clearTimeout.call(null, id);\n        }\n      },\n      logger: global.console.log.bind(console),\n      devTools: false\n    };\n  }(typeof window === 'undefined' ? global : window);\n\n  Interpreter.interpret = interpret;\n  return Interpreter;\n}();\n\nvar createNullActor = function (name) {\n  if (name === void 0) {\n    name = 'null';\n  }\n\n  return {\n    id: name,\n    send: function () {\n      return void 0;\n    },\n    subscribe: function () {\n      // tslint:disable-next-line:no-empty\n      return {\n        unsubscribe: function () {}\n      };\n    },\n    toJSON: function () {\n      return {\n        id: name\n      };\n    }\n  };\n};\n\nvar resolveSpawnOptions = function (nameOrOptions) {\n  if (isString(nameOrOptions)) {\n    return __assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n      name: nameOrOptions\n    });\n  }\n\n  return __assign(__assign(__assign({}, DEFAULT_SPAWN_OPTIONS), {\n    name: uniqueId()\n  }), nameOrOptions);\n};\n\nfunction spawn(entity, nameOrOptions) {\n  var resolvedOptions = resolveSpawnOptions(nameOrOptions);\n  return withServiceScope(undefined, function (service) {\n    if (!IS_PRODUCTION) {\n      warn(!!service, \"Attempted to spawn an Actor (ID: \\\"\" + (isMachine(entity) ? entity.id : 'undefined') + \"\\\") outside of a service. This will have no effect.\");\n    }\n\n    if (service) {\n      return service.spawn(entity, resolvedOptions.name, resolvedOptions);\n    } else {\n      return createNullActor(resolvedOptions.name);\n    }\n  });\n}\n/**\r\n * Creates a new Interpreter instance for the given machine with the provided options, if any.\r\n *\r\n * @param machine The machine to interpret\r\n * @param options Interpreter options\r\n */\n\n\nfunction interpret(machine, options) {\n  var interpreter = new Interpreter(machine, options);\n  return interpreter;\n}\n\nexport { Interpreter, interpret, spawn };","import { __assign, __values, __spread, __read, __rest } from './_virtual/_tslib.js';\nimport { STATE_DELIMITER } from './constants.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { mapValues, isArray, flatten, keys, toArray, toStateValue, isString, getEventType, matchesState, path, evaluateGuard, mapContext, toSCXMLEvent, pathToStateValue, isBuiltInEvent, partition, updateHistoryValue, toStatePath, mapFilterValues, warn, toStatePaths, nestedPath, normalizeTarget, toGuard, toTransitionConfigArray, isMachine, isFunction } from './utils.js';\nimport { SpecialTargets } from './types.js';\nimport { getAllStateNodes, getConfiguration, has, getChildren, isInFinalState, getValue, isLeafNode } from './stateUtils.js';\nimport { start as start$1, stop as stop$1, invoke, update, nullEvent, raise as raise$1, send as send$1 } from './actionTypes.js';\nimport { done, start, raise, stop, toActionObjects, resolveActions, doneInvoke, error, toActionObject, toActivityDefinition, after, send, cancel, initEvent } from './actions.js';\nimport { State, stateValuesEqual } from './State.js';\nimport { createInvocableActor } from './Actor.js';\nvar NULL_EVENT = '';\nvar STATE_IDENTIFIER = '#';\nvar WILDCARD = '*';\nvar EMPTY_OBJECT = {};\n\nvar isStateId = function (str) {\n  return str[0] === STATE_IDENTIFIER;\n};\n\nvar createDefaultOptions = function () {\n  return {\n    actions: {},\n    guards: {},\n    services: {},\n    activities: {},\n    delays: {}\n  };\n};\n\nvar validateArrayifiedTransitions = function (stateNode, event, transitions) {\n  var hasNonLastUnguardedTarget = transitions.slice(0, -1).some(function (transition) {\n    return !('cond' in transition) && !('in' in transition) && (isString(transition.target) || isMachine(transition.target));\n  });\n  var eventText = event === NULL_EVENT ? 'the transient event' : \"event '\" + event + \"'\";\n  warn(!hasNonLastUnguardedTarget, \"One or more transitions for \" + eventText + \" on state '\" + stateNode.id + \"' are unreachable. \" + \"Make sure that the default transition is the last one defined.\");\n};\n\nvar StateNode =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  function StateNode(\n  /**\r\n   * The raw config used to create the machine.\r\n   */\n  config, options,\n  /**\r\n   * The initial extended state\r\n   */\n  context) {\n    var _this = this;\n\n    this.config = config;\n    this.context = context;\n    /**\r\n     * The order this state node appears. Corresponds to the implicit SCXML document order.\r\n     */\n\n    this.order = -1;\n    this.__xstatenode = true;\n    this.__cache = {\n      events: undefined,\n      relativeValue: new Map(),\n      initialStateValue: undefined,\n      initialState: undefined,\n      on: undefined,\n      transitions: undefined,\n      candidates: {},\n      delayedTransitions: undefined\n    };\n    this.idMap = {};\n    this.options = Object.assign(createDefaultOptions(), options);\n    this.parent = this.options._parent;\n    this.key = this.config.key || this.options._key || this.config.id || '(machine)';\n    this.machine = this.parent ? this.parent.machine : this;\n    this.path = this.parent ? this.parent.path.concat(this.key) : [];\n    this.delimiter = this.config.delimiter || (this.parent ? this.parent.delimiter : STATE_DELIMITER);\n    this.id = this.config.id || __spread([this.machine.key], this.path).join(this.delimiter);\n    this.version = this.parent ? this.parent.version : this.config.version;\n    this.type = this.config.type || (this.config.parallel ? 'parallel' : this.config.states && keys(this.config.states).length ? 'compound' : this.config.history ? 'history' : 'atomic');\n\n    if (!IS_PRODUCTION) {\n      warn(!('parallel' in this.config), \"The \\\"parallel\\\" property is deprecated and will be removed in version 4.1. \" + (this.config.parallel ? \"Replace with `type: 'parallel'`\" : \"Use `type: '\" + this.type + \"'`\") + \" in the config for state node '\" + this.id + \"' instead.\");\n    }\n\n    this.initial = this.config.initial;\n    this.states = this.config.states ? mapValues(this.config.states, function (stateConfig, key) {\n      var _a;\n\n      var stateNode = new StateNode(stateConfig, {\n        _parent: _this,\n        _key: key\n      });\n      Object.assign(_this.idMap, __assign((_a = {}, _a[stateNode.id] = stateNode, _a), stateNode.idMap));\n      return stateNode;\n    }) : EMPTY_OBJECT; // Document order\n\n    var order = 0;\n\n    function dfs(stateNode) {\n      var e_1, _a;\n\n      stateNode.order = order++;\n\n      try {\n        for (var _b = __values(getChildren(stateNode)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var child = _c.value;\n          dfs(child);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n\n    dfs(this); // History config\n\n    this.history = this.config.history === true ? 'shallow' : this.config.history || false;\n    this._transient = !!this.config.always || (!this.config.on ? false : Array.isArray(this.config.on) ? this.config.on.some(function (_a) {\n      var event = _a.event;\n      return event === NULL_EVENT;\n    }) : NULL_EVENT in this.config.on);\n    this.strict = !!this.config.strict; // TODO: deprecate (entry)\n\n    this.onEntry = toArray(this.config.entry || this.config.onEntry).map(function (action) {\n      return toActionObject(action);\n    }); // TODO: deprecate (exit)\n\n    this.onExit = toArray(this.config.exit || this.config.onExit).map(function (action) {\n      return toActionObject(action);\n    });\n    this.meta = this.config.meta;\n    this.doneData = this.type === 'final' ? this.config.data : undefined;\n    this.invoke = toArray(this.config.invoke).map(function (invokeConfig, i) {\n      var _a, _b;\n\n      if (isMachine(invokeConfig)) {\n        _this.machine.options.services = __assign((_a = {}, _a[invokeConfig.id] = invokeConfig, _a), _this.machine.options.services);\n        return {\n          type: invoke,\n          src: invokeConfig.id,\n          id: invokeConfig.id\n        };\n      } else if (typeof invokeConfig.src !== 'string') {\n        var invokeSrc = _this.id + \":invocation[\" + i + \"]\"; // TODO: util function\n\n        _this.machine.options.services = __assign((_b = {}, _b[invokeSrc] = invokeConfig.src, _b), _this.machine.options.services);\n        return __assign(__assign({\n          type: invoke,\n          id: invokeSrc\n        }, invokeConfig), {\n          src: invokeSrc\n        });\n      } else {\n        return __assign(__assign({}, invokeConfig), {\n          type: invoke,\n          id: invokeConfig.id || invokeConfig.src,\n          src: invokeConfig.src\n        });\n      }\n    });\n    this.activities = toArray(this.config.activities).concat(this.invoke).map(function (activity) {\n      return toActivityDefinition(activity);\n    });\n    this.transition = this.transition.bind(this);\n  }\n\n  StateNode.prototype._init = function () {\n    if (this.__cache.transitions) {\n      return;\n    }\n\n    getAllStateNodes(this).forEach(function (stateNode) {\n      return stateNode.on;\n    });\n  };\n  /**\r\n   * Clones this state machine with custom options and context.\r\n   *\r\n   * @param options Options (actions, guards, activities, services) to recursively merge with the existing options.\r\n   * @param context Custom context (will override predefined context)\r\n   */\n\n\n  StateNode.prototype.withConfig = function (options, context) {\n    if (context === void 0) {\n      context = this.context;\n    }\n\n    var _a = this.options,\n        actions = _a.actions,\n        activities = _a.activities,\n        guards = _a.guards,\n        services = _a.services,\n        delays = _a.delays;\n    return new StateNode(this.config, {\n      actions: __assign(__assign({}, actions), options.actions),\n      activities: __assign(__assign({}, activities), options.activities),\n      guards: __assign(__assign({}, guards), options.guards),\n      services: __assign(__assign({}, services), options.services),\n      delays: __assign(__assign({}, delays), options.delays)\n    }, context);\n  };\n  /**\r\n   * Clones this state machine with custom context.\r\n   *\r\n   * @param context Custom context (will override predefined context, not recursive)\r\n   */\n\n\n  StateNode.prototype.withContext = function (context) {\n    return new StateNode(this.config, this.options, context);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"definition\", {\n    /**\r\n     * The well-structured state node definition.\r\n     */\n    get: function () {\n      return {\n        id: this.id,\n        key: this.key,\n        version: this.version,\n        context: this.context,\n        type: this.type,\n        initial: this.initial,\n        history: this.history,\n        states: mapValues(this.states, function (state) {\n          return state.definition;\n        }),\n        on: this.on,\n        transitions: this.transitions,\n        entry: this.onEntry,\n        exit: this.onExit,\n        activities: this.activities || [],\n        meta: this.meta,\n        order: this.order || -1,\n        data: this.doneData,\n        invoke: this.invoke\n      };\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  StateNode.prototype.toJSON = function () {\n    return this.definition;\n  };\n\n  Object.defineProperty(StateNode.prototype, \"on\", {\n    /**\r\n     * The mapping of events to transitions.\r\n     */\n    get: function () {\n      if (this.__cache.on) {\n        return this.__cache.on;\n      }\n\n      var transitions = this.transitions;\n      return this.__cache.on = transitions.reduce(function (map, transition) {\n        map[transition.eventType] = map[transition.eventType] || [];\n        map[transition.eventType].push(transition);\n        return map;\n      }, {});\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"after\", {\n    get: function () {\n      return this.__cache.delayedTransitions || (this.__cache.delayedTransitions = this.getDelayedTransitions(), this.__cache.delayedTransitions);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"transitions\", {\n    /**\r\n     * All the transitions that can be taken from this state node.\r\n     */\n    get: function () {\n      return this.__cache.transitions || (this.__cache.transitions = this.formatTransitions(), this.__cache.transitions);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  StateNode.prototype.getCandidates = function (eventName) {\n    if (this.__cache.candidates[eventName]) {\n      return this.__cache.candidates[eventName];\n    }\n\n    var transient = eventName === NULL_EVENT;\n    var candidates = this.transitions.filter(function (transition) {\n      var sameEventType = transition.eventType === eventName; // null events should only match against eventless transitions\n\n      return transient ? sameEventType : sameEventType || transition.eventType === WILDCARD;\n    });\n    this.__cache.candidates[eventName] = candidates;\n    return candidates;\n  };\n  /**\r\n   * All delayed transitions from the config.\r\n   */\n\n\n  StateNode.prototype.getDelayedTransitions = function () {\n    var _this = this;\n\n    var afterConfig = this.config.after;\n\n    if (!afterConfig) {\n      return [];\n    }\n\n    var mutateEntryExit = function (delay, i) {\n      var delayRef = isFunction(delay) ? _this.id + \":delay[\" + i + \"]\" : delay;\n      var eventType = after(delayRef, _this.id);\n\n      _this.onEntry.push(send(eventType, {\n        delay: delay\n      }));\n\n      _this.onExit.push(cancel(eventType));\n\n      return eventType;\n    };\n\n    var delayedTransitions = isArray(afterConfig) ? afterConfig.map(function (transition, i) {\n      var eventType = mutateEntryExit(transition.delay, i);\n      return __assign(__assign({}, transition), {\n        event: eventType\n      });\n    }) : flatten(keys(afterConfig).map(function (delay, i) {\n      var configTransition = afterConfig[delay];\n      var resolvedTransition = isString(configTransition) ? {\n        target: configTransition\n      } : configTransition;\n      var resolvedDelay = !isNaN(+delay) ? +delay : delay;\n      var eventType = mutateEntryExit(resolvedDelay, i);\n      return toArray(resolvedTransition).map(function (transition) {\n        return __assign(__assign({}, transition), {\n          event: eventType,\n          delay: resolvedDelay\n        });\n      });\n    }));\n    return delayedTransitions.map(function (delayedTransition) {\n      var delay = delayedTransition.delay;\n      return __assign(__assign({}, _this.formatTransition(delayedTransition)), {\n        delay: delay\n      });\n    });\n  };\n  /**\r\n   * Returns the state nodes represented by the current state value.\r\n   *\r\n   * @param state The state value or State instance\r\n   */\n\n\n  StateNode.prototype.getStateNodes = function (state) {\n    var _a;\n\n    var _this = this;\n\n    if (!state) {\n      return [];\n    }\n\n    var stateValue = state instanceof State ? state.value : toStateValue(state, this.delimiter);\n\n    if (isString(stateValue)) {\n      var initialStateValue = this.getStateNode(stateValue).initial;\n      return initialStateValue !== undefined ? this.getStateNodes((_a = {}, _a[stateValue] = initialStateValue, _a)) : [this.states[stateValue]];\n    }\n\n    var subStateKeys = keys(stateValue);\n    var subStateNodes = subStateKeys.map(function (subStateKey) {\n      return _this.getStateNode(subStateKey);\n    });\n    return subStateNodes.concat(subStateKeys.reduce(function (allSubStateNodes, subStateKey) {\n      var subStateNode = _this.getStateNode(subStateKey).getStateNodes(stateValue[subStateKey]);\n\n      return allSubStateNodes.concat(subStateNode);\n    }, []));\n  };\n  /**\r\n   * Returns `true` if this state node explicitly handles the given event.\r\n   *\r\n   * @param event The event in question\r\n   */\n\n\n  StateNode.prototype.handles = function (event) {\n    var eventType = getEventType(event);\n    return this.events.includes(eventType);\n  };\n  /**\r\n   * Resolves the given `state` to a new `State` instance relative to this machine.\r\n   *\r\n   * This ensures that `.events` and `.nextEvents` represent the correct values.\r\n   *\r\n   * @param state The state to resolve\r\n   */\n\n\n  StateNode.prototype.resolveState = function (state) {\n    var configuration = Array.from(getConfiguration([], this.getStateNodes(state.value)));\n    return new State(__assign(__assign({}, state), {\n      value: this.resolve(state.value),\n      configuration: configuration\n    }));\n  };\n\n  StateNode.prototype.transitionLeafNode = function (stateValue, state, _event) {\n    var stateNode = this.getStateNode(stateValue);\n    var next = stateNode.next(state, _event);\n\n    if (!next || !next.transitions.length) {\n      return this.next(state, _event);\n    }\n\n    return next;\n  };\n\n  StateNode.prototype.transitionCompoundNode = function (stateValue, state, _event) {\n    var subStateKeys = keys(stateValue);\n    var stateNode = this.getStateNode(subStateKeys[0]);\n\n    var next = stateNode._transition(stateValue[subStateKeys[0]], state, _event);\n\n    if (!next || !next.transitions.length) {\n      return this.next(state, _event);\n    }\n\n    return next;\n  };\n\n  StateNode.prototype.transitionParallelNode = function (stateValue, state, _event) {\n    var e_2, _a;\n\n    var transitionMap = {};\n\n    try {\n      for (var _b = __values(keys(stateValue)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var subStateKey = _c.value;\n        var subStateValue = stateValue[subStateKey];\n\n        if (!subStateValue) {\n          continue;\n        }\n\n        var subStateNode = this.getStateNode(subStateKey);\n\n        var next = subStateNode._transition(subStateValue, state, _event);\n\n        if (next) {\n          transitionMap[subStateKey] = next;\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    var stateTransitions = keys(transitionMap).map(function (key) {\n      return transitionMap[key];\n    });\n    var enabledTransitions = flatten(stateTransitions.map(function (st) {\n      return st.transitions;\n    }));\n    var willTransition = stateTransitions.some(function (st) {\n      return st.transitions.length > 0;\n    });\n\n    if (!willTransition) {\n      return this.next(state, _event);\n    }\n\n    var entryNodes = flatten(stateTransitions.map(function (t) {\n      return t.entrySet;\n    }));\n    var configuration = flatten(keys(transitionMap).map(function (key) {\n      return transitionMap[key].configuration;\n    }));\n    return {\n      transitions: enabledTransitions,\n      entrySet: entryNodes,\n      exitSet: flatten(stateTransitions.map(function (t) {\n        return t.exitSet;\n      })),\n      configuration: configuration,\n      source: state,\n      actions: flatten(keys(transitionMap).map(function (key) {\n        return transitionMap[key].actions;\n      }))\n    };\n  };\n\n  StateNode.prototype._transition = function (stateValue, state, _event) {\n    // leaf node\n    if (isString(stateValue)) {\n      return this.transitionLeafNode(stateValue, state, _event);\n    } // hierarchical node\n\n\n    if (keys(stateValue).length === 1) {\n      return this.transitionCompoundNode(stateValue, state, _event);\n    } // orthogonal node\n\n\n    return this.transitionParallelNode(stateValue, state, _event);\n  };\n\n  StateNode.prototype.next = function (state, _event) {\n    var e_3, _a;\n\n    var _this = this;\n\n    var eventName = _event.name;\n    var actions = [];\n    var nextStateNodes = [];\n    var selectedTransition;\n\n    try {\n      for (var _b = __values(this.getCandidates(eventName)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var candidate = _c.value;\n        var cond = candidate.cond,\n            stateIn = candidate.in;\n        var resolvedContext = state.context;\n        var isInState = stateIn ? isString(stateIn) && isStateId(stateIn) ? // Check if in state by ID\n        state.matches(toStateValue(this.getStateNodeById(stateIn).path, this.delimiter)) : // Check if in state by relative grandparent\n        matchesState(toStateValue(stateIn, this.delimiter), path(this.path.slice(0, -2))(state.value)) : true;\n        var guardPassed = false;\n\n        try {\n          guardPassed = !cond || evaluateGuard(this.machine, cond, resolvedContext, _event, state);\n        } catch (err) {\n          throw new Error(\"Unable to evaluate guard '\" + (cond.name || cond.type) + \"' in transition for event '\" + eventName + \"' in state node '\" + this.id + \"':\\n\" + err.message);\n        }\n\n        if (guardPassed && isInState) {\n          if (candidate.target !== undefined) {\n            nextStateNodes = candidate.target;\n          }\n\n          actions.push.apply(actions, __spread(candidate.actions));\n          selectedTransition = candidate;\n          break;\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    if (!selectedTransition) {\n      return undefined;\n    }\n\n    if (!nextStateNodes.length) {\n      return {\n        transitions: [selectedTransition],\n        entrySet: [],\n        exitSet: [],\n        configuration: state.value ? [this] : [],\n        source: state,\n        actions: actions\n      };\n    }\n\n    var allNextStateNodes = flatten(nextStateNodes.map(function (stateNode) {\n      return _this.getRelativeStateNodes(stateNode, state.historyValue);\n    }));\n    var isInternal = !!selectedTransition.internal;\n    var reentryNodes = isInternal ? [] : flatten(allNextStateNodes.map(function (n) {\n      return _this.nodesFromChild(n);\n    }));\n    return {\n      transitions: [selectedTransition],\n      entrySet: reentryNodes,\n      exitSet: isInternal ? [] : [this],\n      configuration: allNextStateNodes,\n      source: state,\n      actions: actions\n    };\n  };\n\n  StateNode.prototype.nodesFromChild = function (childStateNode) {\n    if (childStateNode.escapes(this)) {\n      return [];\n    }\n\n    var nodes = [];\n    var marker = childStateNode;\n\n    while (marker && marker !== this) {\n      nodes.push(marker);\n      marker = marker.parent;\n    }\n\n    nodes.push(this); // inclusive\n\n    return nodes;\n  };\n  /**\r\n   * Whether the given state node \"escapes\" this state node. If the `stateNode` is equal to or the parent of\r\n   * this state node, it does not escape.\r\n   */\n\n\n  StateNode.prototype.escapes = function (stateNode) {\n    if (this === stateNode) {\n      return false;\n    }\n\n    var parent = this.parent;\n\n    while (parent) {\n      if (parent === stateNode) {\n        return false;\n      }\n\n      parent = parent.parent;\n    }\n\n    return true;\n  };\n\n  StateNode.prototype.getActions = function (transition, currentContext, _event, prevState) {\n    var e_4, _a, e_5, _b;\n\n    var prevConfig = getConfiguration([], prevState ? this.getStateNodes(prevState.value) : [this]);\n    var resolvedConfig = transition.configuration.length ? getConfiguration(prevConfig, transition.configuration) : prevConfig;\n\n    try {\n      for (var resolvedConfig_1 = __values(resolvedConfig), resolvedConfig_1_1 = resolvedConfig_1.next(); !resolvedConfig_1_1.done; resolvedConfig_1_1 = resolvedConfig_1.next()) {\n        var sn = resolvedConfig_1_1.value;\n\n        if (!has(prevConfig, sn)) {\n          transition.entrySet.push(sn);\n        }\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (resolvedConfig_1_1 && !resolvedConfig_1_1.done && (_a = resolvedConfig_1.return)) _a.call(resolvedConfig_1);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    try {\n      for (var prevConfig_1 = __values(prevConfig), prevConfig_1_1 = prevConfig_1.next(); !prevConfig_1_1.done; prevConfig_1_1 = prevConfig_1.next()) {\n        var sn = prevConfig_1_1.value;\n\n        if (!has(resolvedConfig, sn) || has(transition.exitSet, sn.parent)) {\n          transition.exitSet.push(sn);\n        }\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (prevConfig_1_1 && !prevConfig_1_1.done && (_b = prevConfig_1.return)) _b.call(prevConfig_1);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    if (!transition.source) {\n      transition.exitSet = []; // Ensure that root StateNode (machine) is entered\n\n      transition.entrySet.push(this);\n    }\n\n    var doneEvents = flatten(transition.entrySet.map(function (sn) {\n      var events = [];\n\n      if (sn.type !== 'final') {\n        return events;\n      }\n\n      var parent = sn.parent;\n\n      if (!parent.parent) {\n        return events;\n      }\n\n      events.push(done(sn.id, sn.doneData), // TODO: deprecate - final states should not emit done events for their own state.\n      done(parent.id, sn.doneData ? mapContext(sn.doneData, currentContext, _event) : undefined));\n      var grandparent = parent.parent;\n\n      if (grandparent.type === 'parallel') {\n        if (getChildren(grandparent).every(function (parentNode) {\n          return isInFinalState(transition.configuration, parentNode);\n        })) {\n          events.push(done(grandparent.id));\n        }\n      }\n\n      return events;\n    }));\n    transition.exitSet.sort(function (a, b) {\n      return b.order - a.order;\n    });\n    transition.entrySet.sort(function (a, b) {\n      return a.order - b.order;\n    });\n    var entryStates = new Set(transition.entrySet);\n    var exitStates = new Set(transition.exitSet);\n\n    var _c = __read([flatten(Array.from(entryStates).map(function (stateNode) {\n      return __spread(stateNode.activities.map(function (activity) {\n        return start(activity);\n      }), stateNode.onEntry);\n    })).concat(doneEvents.map(raise)), flatten(Array.from(exitStates).map(function (stateNode) {\n      return __spread(stateNode.onExit, stateNode.activities.map(function (activity) {\n        return stop(activity);\n      }));\n    }))], 2),\n        entryActions = _c[0],\n        exitActions = _c[1];\n\n    var actions = toActionObjects(exitActions.concat(transition.actions).concat(entryActions), this.machine.options.actions);\n    return actions;\n  };\n  /**\r\n   * Determines the next state given the current `state` and sent `event`.\r\n   *\r\n   * @param state The current State instance or state value\r\n   * @param event The event that was sent at the current state\r\n   * @param context The current context (extended state) of the current state\r\n   */\n\n\n  StateNode.prototype.transition = function (state, event, context) {\n    if (state === void 0) {\n      state = this.initialState;\n    }\n\n    var _event = toSCXMLEvent(event);\n\n    var currentState;\n\n    if (state instanceof State) {\n      currentState = context === undefined ? state : this.resolveState(State.from(state, context));\n    } else {\n      var resolvedStateValue = isString(state) ? this.resolve(pathToStateValue(this.getResolvedPath(state))) : this.resolve(state);\n      var resolvedContext = context ? context : this.machine.context;\n      currentState = this.resolveState(State.from(resolvedStateValue, resolvedContext));\n    }\n\n    if (!IS_PRODUCTION && _event.name === WILDCARD) {\n      throw new Error(\"An event cannot have the wildcard type ('\" + WILDCARD + \"')\");\n    }\n\n    if (this.strict) {\n      if (!this.events.includes(_event.name) && !isBuiltInEvent(_event.name)) {\n        throw new Error(\"Machine '\" + this.id + \"' does not accept event '\" + _event.name + \"'\");\n      }\n    }\n\n    var stateTransition = this._transition(currentState.value, currentState, _event) || {\n      transitions: [],\n      configuration: [],\n      entrySet: [],\n      exitSet: [],\n      source: currentState,\n      actions: []\n    };\n    var prevConfig = getConfiguration([], this.getStateNodes(currentState.value));\n    var resolvedConfig = stateTransition.configuration.length ? getConfiguration(prevConfig, stateTransition.configuration) : prevConfig;\n    stateTransition.configuration = __spread(resolvedConfig);\n    return this.resolveTransition(stateTransition, currentState, _event);\n  };\n\n  StateNode.prototype.resolveRaisedTransition = function (state, _event, // @ts-ignore\n  originalEvent) {\n    var _a;\n\n    var currentActions = state.actions;\n    state = this.transition(state, _event); // Save original event to state\n    // TODO: this should be the raised event! Delete in V5 (breaking)\n\n    state._event = originalEvent;\n    state.event = originalEvent.data;\n\n    (_a = state.actions).unshift.apply(_a, __spread(currentActions));\n\n    return state;\n  };\n\n  StateNode.prototype.resolveTransition = function (stateTransition, currentState, _event, context) {\n    var e_6, _a;\n\n    var _this = this;\n\n    if (_event === void 0) {\n      _event = initEvent;\n    }\n\n    if (context === void 0) {\n      context = this.machine.context;\n    }\n\n    var configuration = stateTransition.configuration; // Transition will \"apply\" if:\n    // - this is the initial state (there is no current state)\n    // - OR there are transitions\n\n    var willTransition = !currentState || stateTransition.transitions.length > 0;\n    var resolvedStateValue = willTransition ? getValue(this.machine, configuration) : undefined;\n    var historyValue = currentState ? currentState.historyValue ? currentState.historyValue : stateTransition.source ? this.machine.historyValue(currentState.value) : undefined : undefined;\n    var currentContext = currentState ? currentState.context : context;\n    var actions = this.getActions(stateTransition, currentContext, _event, currentState);\n    var activities = currentState ? __assign({}, currentState.activities) : {};\n\n    try {\n      for (var actions_1 = __values(actions), actions_1_1 = actions_1.next(); !actions_1_1.done; actions_1_1 = actions_1.next()) {\n        var action = actions_1_1.value;\n\n        if (action.type === start$1) {\n          activities[action.activity.id || action.activity.type] = action;\n        } else if (action.type === stop$1) {\n          activities[action.activity.id || action.activity.type] = false;\n        }\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (actions_1_1 && !actions_1_1.done && (_a = actions_1.return)) _a.call(actions_1);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    var _b = __read(resolveActions(this, currentState, currentContext, _event, actions), 2),\n        resolvedActions = _b[0],\n        updatedContext = _b[1];\n\n    var _c = __read(partition(resolvedActions, function (action) {\n      return action.type === raise$1 || action.type === send$1 && action.to === SpecialTargets.Internal;\n    }), 2),\n        raisedEvents = _c[0],\n        nonRaisedActions = _c[1];\n\n    var invokeActions = resolvedActions.filter(function (action) {\n      return action.type === start$1 && action.activity.type === invoke;\n    });\n    var children = invokeActions.reduce(function (acc, action) {\n      acc[action.activity.id] = createInvocableActor(action.activity, _this.machine);\n      return acc;\n    }, currentState ? __assign({}, currentState.children) : {});\n    var resolvedConfiguration = resolvedStateValue ? stateTransition.configuration : currentState ? currentState.configuration : [];\n    var meta = resolvedConfiguration.reduce(function (acc, stateNode) {\n      if (stateNode.meta !== undefined) {\n        acc[stateNode.id] = stateNode.meta;\n      }\n\n      return acc;\n    }, {});\n    var isDone = isInFinalState(resolvedConfiguration, this);\n    var nextState = new State({\n      value: resolvedStateValue || currentState.value,\n      context: updatedContext,\n      _event: _event,\n      // Persist _sessionid between states\n      _sessionid: currentState ? currentState._sessionid : null,\n      historyValue: resolvedStateValue ? historyValue ? updateHistoryValue(historyValue, resolvedStateValue) : undefined : currentState ? currentState.historyValue : undefined,\n      history: !resolvedStateValue || stateTransition.source ? currentState : undefined,\n      actions: resolvedStateValue ? nonRaisedActions : [],\n      activities: resolvedStateValue ? activities : currentState ? currentState.activities : {},\n      meta: resolvedStateValue ? meta : currentState ? currentState.meta : undefined,\n      events: [],\n      configuration: resolvedConfiguration,\n      transitions: stateTransition.transitions,\n      children: children,\n      done: isDone\n    });\n    var didUpdateContext = currentContext !== updatedContext;\n    nextState.changed = _event.name === update || didUpdateContext; // Dispose of penultimate histories to prevent memory leaks\n\n    var history = nextState.history;\n\n    if (history) {\n      delete history.history;\n    }\n\n    if (!resolvedStateValue) {\n      return nextState;\n    }\n\n    var maybeNextState = nextState;\n\n    if (!isDone) {\n      var isTransient = this._transient || configuration.some(function (stateNode) {\n        return stateNode._transient;\n      });\n\n      if (isTransient) {\n        maybeNextState = this.resolveRaisedTransition(maybeNextState, {\n          type: nullEvent\n        }, _event);\n      }\n\n      while (raisedEvents.length) {\n        var raisedEvent = raisedEvents.shift();\n        maybeNextState = this.resolveRaisedTransition(maybeNextState, raisedEvent._event, _event);\n      }\n    } // Detect if state changed\n\n\n    var changed = maybeNextState.changed || (history ? !!maybeNextState.actions.length || didUpdateContext || typeof history.value !== typeof maybeNextState.value || !stateValuesEqual(maybeNextState.value, history.value) : undefined);\n    maybeNextState.changed = changed; // Preserve original history after raised events\n\n    maybeNextState.historyValue = nextState.historyValue;\n    maybeNextState.history = history;\n    return maybeNextState;\n  };\n  /**\r\n   * Returns the child state node from its relative `stateKey`, or throws.\r\n   */\n\n\n  StateNode.prototype.getStateNode = function (stateKey) {\n    if (isStateId(stateKey)) {\n      return this.machine.getStateNodeById(stateKey);\n    }\n\n    if (!this.states) {\n      throw new Error(\"Unable to retrieve child state '\" + stateKey + \"' from '\" + this.id + \"'; no child states exist.\");\n    }\n\n    var result = this.states[stateKey];\n\n    if (!result) {\n      throw new Error(\"Child state '\" + stateKey + \"' does not exist on '\" + this.id + \"'\");\n    }\n\n    return result;\n  };\n  /**\r\n   * Returns the state node with the given `stateId`, or throws.\r\n   *\r\n   * @param stateId The state ID. The prefix \"#\" is removed.\r\n   */\n\n\n  StateNode.prototype.getStateNodeById = function (stateId) {\n    var resolvedStateId = isStateId(stateId) ? stateId.slice(STATE_IDENTIFIER.length) : stateId;\n\n    if (resolvedStateId === this.id) {\n      return this;\n    }\n\n    var stateNode = this.machine.idMap[resolvedStateId];\n\n    if (!stateNode) {\n      throw new Error(\"Child state node '#\" + resolvedStateId + \"' does not exist on machine '\" + this.id + \"'\");\n    }\n\n    return stateNode;\n  };\n  /**\r\n   * Returns the relative state node from the given `statePath`, or throws.\r\n   *\r\n   * @param statePath The string or string array relative path to the state node.\r\n   */\n\n\n  StateNode.prototype.getStateNodeByPath = function (statePath) {\n    if (typeof statePath === 'string' && isStateId(statePath)) {\n      try {\n        return this.getStateNodeById(statePath.slice(1));\n      } catch (e) {// try individual paths\n        // throw e;\n      }\n    }\n\n    var arrayStatePath = toStatePath(statePath, this.delimiter).slice();\n    var currentStateNode = this;\n\n    while (arrayStatePath.length) {\n      var key = arrayStatePath.shift();\n\n      if (!key.length) {\n        break;\n      }\n\n      currentStateNode = currentStateNode.getStateNode(key);\n    }\n\n    return currentStateNode;\n  };\n  /**\r\n   * Resolves a partial state value with its full representation in this machine.\r\n   *\r\n   * @param stateValue The partial state value to resolve.\r\n   */\n\n\n  StateNode.prototype.resolve = function (stateValue) {\n    var _a;\n\n    var _this = this;\n\n    if (!stateValue) {\n      return this.initialStateValue || EMPTY_OBJECT; // TODO: type-specific properties\n    }\n\n    switch (this.type) {\n      case 'parallel':\n        return mapValues(this.initialStateValue, function (subStateValue, subStateKey) {\n          return subStateValue ? _this.getStateNode(subStateKey).resolve(stateValue[subStateKey] || subStateValue) : EMPTY_OBJECT;\n        });\n\n      case 'compound':\n        if (isString(stateValue)) {\n          var subStateNode = this.getStateNode(stateValue);\n\n          if (subStateNode.type === 'parallel' || subStateNode.type === 'compound') {\n            return _a = {}, _a[stateValue] = subStateNode.initialStateValue, _a;\n          }\n\n          return stateValue;\n        }\n\n        if (!keys(stateValue).length) {\n          return this.initialStateValue || {};\n        }\n\n        return mapValues(stateValue, function (subStateValue, subStateKey) {\n          return subStateValue ? _this.getStateNode(subStateKey).resolve(subStateValue) : EMPTY_OBJECT;\n        });\n\n      default:\n        return stateValue || EMPTY_OBJECT;\n    }\n  };\n\n  StateNode.prototype.getResolvedPath = function (stateIdentifier) {\n    if (isStateId(stateIdentifier)) {\n      var stateNode = this.machine.idMap[stateIdentifier.slice(STATE_IDENTIFIER.length)];\n\n      if (!stateNode) {\n        throw new Error(\"Unable to find state node '\" + stateIdentifier + \"'\");\n      }\n\n      return stateNode.path;\n    }\n\n    return toStatePath(stateIdentifier, this.delimiter);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialStateValue\", {\n    get: function () {\n      var _a;\n\n      if (this.__cache.initialStateValue) {\n        return this.__cache.initialStateValue;\n      }\n\n      var initialStateValue;\n\n      if (this.type === 'parallel') {\n        initialStateValue = mapFilterValues(this.states, function (state) {\n          return state.initialStateValue || EMPTY_OBJECT;\n        }, function (stateNode) {\n          return !(stateNode.type === 'history');\n        });\n      } else if (this.initial !== undefined) {\n        if (!this.states[this.initial]) {\n          throw new Error(\"Initial state '\" + this.initial + \"' not found on '\" + this.key + \"'\");\n        }\n\n        initialStateValue = isLeafNode(this.states[this.initial]) ? this.initial : (_a = {}, _a[this.initial] = this.states[this.initial].initialStateValue, _a);\n      }\n\n      this.__cache.initialStateValue = initialStateValue;\n      return this.__cache.initialStateValue;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  StateNode.prototype.getInitialState = function (stateValue, context) {\n    var configuration = this.getStateNodes(stateValue);\n    return this.resolveTransition({\n      configuration: configuration,\n      entrySet: configuration,\n      exitSet: [],\n      transitions: [],\n      source: undefined,\n      actions: []\n    }, undefined, undefined, context);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialState\", {\n    /**\r\n     * The initial State instance, which includes all actions to be executed from\r\n     * entering the initial state.\r\n     */\n    get: function () {\n      this._init();\n\n      var initialStateValue = this.initialStateValue;\n\n      if (!initialStateValue) {\n        throw new Error(\"Cannot retrieve initial state from simple state '\" + this.id + \"'.\");\n      }\n\n      return this.getInitialState(initialStateValue);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"target\", {\n    /**\r\n     * The target state value of the history state node, if it exists. This represents the\r\n     * default state value to transition to if no history value exists yet.\r\n     */\n    get: function () {\n      var target;\n\n      if (this.type === 'history') {\n        var historyConfig = this.config;\n\n        if (isString(historyConfig.target)) {\n          target = isStateId(historyConfig.target) ? pathToStateValue(this.machine.getStateNodeById(historyConfig.target).path.slice(this.path.length - 1)) : historyConfig.target;\n        } else {\n          target = historyConfig.target;\n        }\n      }\n\n      return target;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Returns the leaf nodes from a state path relative to this state node.\r\n   *\r\n   * @param relativeStateId The relative state path to retrieve the state nodes\r\n   * @param history The previous state to retrieve history\r\n   * @param resolve Whether state nodes should resolve to initial child state nodes\r\n   */\n\n  StateNode.prototype.getRelativeStateNodes = function (relativeStateId, historyValue, resolve) {\n    if (resolve === void 0) {\n      resolve = true;\n    }\n\n    return resolve ? relativeStateId.type === 'history' ? relativeStateId.resolveHistory(historyValue) : relativeStateId.initialStateNodes : [relativeStateId];\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialStateNodes\", {\n    get: function () {\n      var _this = this;\n\n      if (isLeafNode(this)) {\n        return [this];\n      } // Case when state node is compound but no initial state is defined\n\n\n      if (this.type === 'compound' && !this.initial) {\n        if (!IS_PRODUCTION) {\n          warn(false, \"Compound state node '\" + this.id + \"' has no initial state.\");\n        }\n\n        return [this];\n      }\n\n      var initialStateNodePaths = toStatePaths(this.initialStateValue);\n      return flatten(initialStateNodePaths.map(function (initialPath) {\n        return _this.getFromRelativePath(initialPath);\n      }));\n    },\n    enumerable: true,\n    configurable: true\n  });\n  /**\r\n   * Retrieves state nodes from a relative path to this state node.\r\n   *\r\n   * @param relativePath The relative path from this state node\r\n   * @param historyValue\r\n   */\n\n  StateNode.prototype.getFromRelativePath = function (relativePath) {\n    if (!relativePath.length) {\n      return [this];\n    }\n\n    var _a = __read(relativePath),\n        stateKey = _a[0],\n        childStatePath = _a.slice(1);\n\n    if (!this.states) {\n      throw new Error(\"Cannot retrieve subPath '\" + stateKey + \"' from node with no states\");\n    }\n\n    var childStateNode = this.getStateNode(stateKey);\n\n    if (childStateNode.type === 'history') {\n      return childStateNode.resolveHistory();\n    }\n\n    if (!this.states[stateKey]) {\n      throw new Error(\"Child state '\" + stateKey + \"' does not exist on '\" + this.id + \"'\");\n    }\n\n    return this.states[stateKey].getFromRelativePath(childStatePath);\n  };\n\n  StateNode.prototype.historyValue = function (relativeStateValue) {\n    if (!keys(this.states).length) {\n      return undefined;\n    }\n\n    return {\n      current: relativeStateValue || this.initialStateValue,\n      states: mapFilterValues(this.states, function (stateNode, key) {\n        if (!relativeStateValue) {\n          return stateNode.historyValue();\n        }\n\n        var subStateValue = isString(relativeStateValue) ? undefined : relativeStateValue[key];\n        return stateNode.historyValue(subStateValue || stateNode.initialStateValue);\n      }, function (stateNode) {\n        return !stateNode.history;\n      })\n    };\n  };\n  /**\r\n   * Resolves to the historical value(s) of the parent state node,\r\n   * represented by state nodes.\r\n   *\r\n   * @param historyValue\r\n   */\n\n\n  StateNode.prototype.resolveHistory = function (historyValue) {\n    var _this = this;\n\n    if (this.type !== 'history') {\n      return [this];\n    }\n\n    var parent = this.parent;\n\n    if (!historyValue) {\n      var historyTarget = this.target;\n      return historyTarget ? flatten(toStatePaths(historyTarget).map(function (relativeChildPath) {\n        return parent.getFromRelativePath(relativeChildPath);\n      })) : parent.initialStateNodes;\n    }\n\n    var subHistoryValue = nestedPath(parent.path, 'states')(historyValue).current;\n\n    if (isString(subHistoryValue)) {\n      return [parent.getStateNode(subHistoryValue)];\n    }\n\n    return flatten(toStatePaths(subHistoryValue).map(function (subStatePath) {\n      return _this.history === 'deep' ? parent.getFromRelativePath(subStatePath) : [parent.states[subStatePath[0]]];\n    }));\n  };\n\n  Object.defineProperty(StateNode.prototype, \"stateIds\", {\n    /**\r\n     * All the state node IDs of this state node and its descendant state nodes.\r\n     */\n    get: function () {\n      var _this = this;\n\n      var childStateIds = flatten(keys(this.states).map(function (stateKey) {\n        return _this.states[stateKey].stateIds;\n      }));\n      return [this.id].concat(childStateIds);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"events\", {\n    /**\r\n     * All the event types accepted by this state node and its descendants.\r\n     */\n    get: function () {\n      var e_7, _a, e_8, _b;\n\n      if (this.__cache.events) {\n        return this.__cache.events;\n      }\n\n      var states = this.states;\n      var events = new Set(this.ownEvents);\n\n      if (states) {\n        try {\n          for (var _c = __values(keys(states)), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var stateId = _d.value;\n            var state = states[stateId];\n\n            if (state.states) {\n              try {\n                for (var _e = (e_8 = void 0, __values(state.events)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                  var event_1 = _f.value;\n                  events.add(\"\" + event_1);\n                }\n              } catch (e_8_1) {\n                e_8 = {\n                  error: e_8_1\n                };\n              } finally {\n                try {\n                  if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                } finally {\n                  if (e_8) throw e_8.error;\n                }\n              }\n            }\n          }\n        } catch (e_7_1) {\n          e_7 = {\n            error: e_7_1\n          };\n        } finally {\n          try {\n            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n          } finally {\n            if (e_7) throw e_7.error;\n          }\n        }\n      }\n\n      return this.__cache.events = Array.from(events);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"ownEvents\", {\n    /**\r\n     * All the events that have transitions directly from this state node.\r\n     *\r\n     * Excludes any inert events.\r\n     */\n    get: function () {\n      var events = new Set(this.transitions.filter(function (transition) {\n        return !(!transition.target && !transition.actions.length && transition.internal);\n      }).map(function (transition) {\n        return transition.eventType;\n      }));\n      return Array.from(events);\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  StateNode.prototype.resolveTarget = function (_target) {\n    var _this = this;\n\n    if (_target === undefined) {\n      // an undefined target signals that the state node should not transition from that state when receiving that event\n      return undefined;\n    }\n\n    return _target.map(function (target) {\n      if (!isString(target)) {\n        return target;\n      }\n\n      var isInternalTarget = target[0] === _this.delimiter; // If internal target is defined on machine,\n      // do not include machine key on target\n\n      if (isInternalTarget && !_this.parent) {\n        return _this.getStateNodeByPath(target.slice(1));\n      }\n\n      var resolvedTarget = isInternalTarget ? _this.key + target : target;\n\n      if (_this.parent) {\n        try {\n          var targetStateNode = _this.parent.getStateNodeByPath(resolvedTarget);\n\n          return targetStateNode;\n        } catch (err) {\n          throw new Error(\"Invalid transition definition for state node '\" + _this.id + \"':\\n\" + err.message);\n        }\n      } else {\n        return _this.getStateNodeByPath(resolvedTarget);\n      }\n    });\n  };\n\n  StateNode.prototype.formatTransition = function (transitionConfig) {\n    var _this = this;\n\n    var normalizedTarget = normalizeTarget(transitionConfig.target);\n    var internal = 'internal' in transitionConfig ? transitionConfig.internal : normalizedTarget ? normalizedTarget.some(function (_target) {\n      return isString(_target) && _target[0] === _this.delimiter;\n    }) : true;\n    var guards = this.machine.options.guards;\n    var target = this.resolveTarget(normalizedTarget);\n\n    var transition = __assign(__assign({}, transitionConfig), {\n      actions: toActionObjects(toArray(transitionConfig.actions)),\n      cond: toGuard(transitionConfig.cond, guards),\n      target: target,\n      source: this,\n      internal: internal,\n      eventType: transitionConfig.event,\n      toJSON: function () {\n        return __assign(__assign({}, transition), {\n          target: transition.target ? transition.target.map(function (t) {\n            return \"#\" + t.id;\n          }) : undefined,\n          source: \"#\" + _this.id\n        });\n      }\n    });\n\n    return transition;\n  };\n\n  StateNode.prototype.formatTransitions = function () {\n    var e_9, _a;\n\n    var _this = this;\n\n    var onConfig;\n\n    if (!this.config.on) {\n      onConfig = [];\n    } else if (Array.isArray(this.config.on)) {\n      onConfig = this.config.on;\n    } else {\n      var _b = this.config.on,\n          _c = WILDCARD,\n          _d = _b[_c],\n          wildcardConfigs = _d === void 0 ? [] : _d,\n          strictTransitionConfigs_1 = __rest(_b, [typeof _c === \"symbol\" ? _c : _c + \"\"]);\n\n      onConfig = flatten(keys(strictTransitionConfigs_1).map(function (key) {\n        if (!IS_PRODUCTION && key === NULL_EVENT) {\n          warn(false, \"Empty string transition configs (e.g., `{ on: { '': ... }}`) for transient transitions are deprecated. Specify the transition in the `{ always: ... }` property instead. \" + (\"Please check the `on` configuration for \\\"#\" + _this.id + \"\\\".\"));\n        }\n\n        var transitionConfigArray = toTransitionConfigArray(key, strictTransitionConfigs_1[key]);\n\n        if (!IS_PRODUCTION) {\n          validateArrayifiedTransitions(_this, key, transitionConfigArray);\n        }\n\n        return transitionConfigArray;\n      }).concat(toTransitionConfigArray(WILDCARD, wildcardConfigs)));\n    }\n\n    var eventlessConfig = this.config.always ? toTransitionConfigArray('', this.config.always) : [];\n    var doneConfig = this.config.onDone ? toTransitionConfigArray(String(done(this.id)), this.config.onDone) : [];\n\n    if (!IS_PRODUCTION) {\n      warn(!(this.config.onDone && !this.parent), \"Root nodes cannot have an \\\".onDone\\\" transition. Please check the config of \\\"\" + this.id + \"\\\".\");\n    }\n\n    var invokeConfig = flatten(this.invoke.map(function (invokeDef) {\n      var settleTransitions = [];\n\n      if (invokeDef.onDone) {\n        settleTransitions.push.apply(settleTransitions, __spread(toTransitionConfigArray(String(doneInvoke(invokeDef.id)), invokeDef.onDone)));\n      }\n\n      if (invokeDef.onError) {\n        settleTransitions.push.apply(settleTransitions, __spread(toTransitionConfigArray(String(error(invokeDef.id)), invokeDef.onError)));\n      }\n\n      return settleTransitions;\n    }));\n    var delayedTransitions = this.after;\n    var formattedTransitions = flatten(__spread(doneConfig, invokeConfig, onConfig, eventlessConfig).map(function (transitionConfig) {\n      return toArray(transitionConfig).map(function (transition) {\n        return _this.formatTransition(transition);\n      });\n    }));\n\n    try {\n      for (var delayedTransitions_1 = __values(delayedTransitions), delayedTransitions_1_1 = delayedTransitions_1.next(); !delayedTransitions_1_1.done; delayedTransitions_1_1 = delayedTransitions_1.next()) {\n        var delayedTransition = delayedTransitions_1_1.value;\n        formattedTransitions.push(delayedTransition);\n      }\n    } catch (e_9_1) {\n      e_9 = {\n        error: e_9_1\n      };\n    } finally {\n      try {\n        if (delayedTransitions_1_1 && !delayedTransitions_1_1.done && (_a = delayedTransitions_1.return)) _a.call(delayedTransitions_1);\n      } finally {\n        if (e_9) throw e_9.error;\n      }\n    }\n\n    return formattedTransitions;\n  };\n\n  return StateNode;\n}();\n\nexport { StateNode };","import { StateNode } from './StateNode.js';\n\nfunction Machine(config, options, initialContext) {\n  if (initialContext === void 0) {\n    initialContext = config.context;\n  }\n\n  var resolvedInitialContext = typeof initialContext === 'function' ? initialContext() : initialContext;\n  return new StateNode(config, options, resolvedInitialContext);\n}\n\nfunction createMachine(config, options) {\n  var resolvedInitialContext = typeof config.context === 'function' ? config.context() : config.context;\n  return new StateNode(config, options, resolvedInitialContext);\n}\n\nexport { Machine, createMachine };","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\nvar __assign = function () {\n  __assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n}\n\nfunction __values(o) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator],\n      i = 0;\n  if (m) return m.call(o);\n  return {\n    next: function () {\n      if (o && i >= o.length) o = void 0;\n      return {\n        value: o && o[i++],\n        done: !o\n      };\n    }\n  };\n}\n\nfunction __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o),\n      r,\n      ar = [],\n      e;\n\n  try {\n    while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  } catch (error) {\n    e = {\n      error: error\n    };\n  } finally {\n    try {\n      if (r && !r.done && (m = i[\"return\"])) m.call(i);\n    } finally {\n      if (e) throw e.error;\n    }\n  }\n\n  return ar;\n}\n\nfunction __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++) ar = ar.concat(__read(arguments[i]));\n\n  return ar;\n}\n\nexport { __assign, __read, __rest, __spread, __values };","import { __spread, __values, __read, __assign } from './_virtual/_tslib.js';\nimport { DEFAULT_GUARD_TYPE, TARGETLESS_KEY, STATE_DELIMITER } from './constants.js';\nimport { IS_PRODUCTION } from './environment.js';\n\nfunction keys(value) {\n  return Object.keys(value);\n}\n\nfunction matchesState(parentStateId, childStateId, delimiter) {\n  if (delimiter === void 0) {\n    delimiter = STATE_DELIMITER;\n  }\n\n  var parentStateValue = toStateValue(parentStateId, delimiter);\n  var childStateValue = toStateValue(childStateId, delimiter);\n\n  if (isString(childStateValue)) {\n    if (isString(parentStateValue)) {\n      return childStateValue === parentStateValue;\n    } // Parent more specific than child\n\n\n    return false;\n  }\n\n  if (isString(parentStateValue)) {\n    return parentStateValue in childStateValue;\n  }\n\n  return keys(parentStateValue).every(function (key) {\n    if (!(key in childStateValue)) {\n      return false;\n    }\n\n    return matchesState(parentStateValue[key], childStateValue[key]);\n  });\n}\n\nfunction getEventType(event) {\n  try {\n    return isString(event) || typeof event === 'number' ? \"\" + event : event.type;\n  } catch (e) {\n    throw new Error('Events must be strings or objects with a string event.type property.');\n  }\n}\n\nfunction toStatePath(stateId, delimiter) {\n  try {\n    if (isArray(stateId)) {\n      return stateId;\n    }\n\n    return stateId.toString().split(delimiter);\n  } catch (e) {\n    throw new Error(\"'\" + stateId + \"' is not a valid state path.\");\n  }\n}\n\nfunction isStateLike(state) {\n  return typeof state === 'object' && 'value' in state && 'context' in state && 'event' in state && '_event' in state;\n}\n\nfunction toStateValue(stateValue, delimiter) {\n  if (isStateLike(stateValue)) {\n    return stateValue.value;\n  }\n\n  if (isArray(stateValue)) {\n    return pathToStateValue(stateValue);\n  }\n\n  if (typeof stateValue !== 'string') {\n    return stateValue;\n  }\n\n  var statePath = toStatePath(stateValue, delimiter);\n  return pathToStateValue(statePath);\n}\n\nfunction pathToStateValue(statePath) {\n  if (statePath.length === 1) {\n    return statePath[0];\n  }\n\n  var value = {};\n  var marker = value;\n\n  for (var i = 0; i < statePath.length - 1; i++) {\n    if (i === statePath.length - 2) {\n      marker[statePath[i]] = statePath[i + 1];\n    } else {\n      marker[statePath[i]] = {};\n      marker = marker[statePath[i]];\n    }\n  }\n\n  return value;\n}\n\nfunction mapValues(collection, iteratee) {\n  var result = {};\n  var collectionKeys = keys(collection);\n\n  for (var i = 0; i < collectionKeys.length; i++) {\n    var key = collectionKeys[i];\n    result[key] = iteratee(collection[key], key, collection, i);\n  }\n\n  return result;\n}\n\nfunction mapFilterValues(collection, iteratee, predicate) {\n  var e_1, _a;\n\n  var result = {};\n\n  try {\n    for (var _b = __values(keys(collection)), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var key = _c.value;\n      var item = collection[key];\n\n      if (!predicate(item)) {\n        continue;\n      }\n\n      result[key] = iteratee(item, key, collection);\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n\n  return result;\n}\n/**\r\n * Retrieves a value at the given path.\r\n * @param props The deep path to the prop of the desired value\r\n */\n\n\nvar path = function (props) {\n  return function (object) {\n    var e_2, _a;\n\n    var result = object;\n\n    try {\n      for (var props_1 = __values(props), props_1_1 = props_1.next(); !props_1_1.done; props_1_1 = props_1.next()) {\n        var prop = props_1_1.value;\n        result = result[prop];\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (props_1_1 && !props_1_1.done && (_a = props_1.return)) _a.call(props_1);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    return result;\n  };\n};\n/**\r\n * Retrieves a value at the given path via the nested accessor prop.\r\n * @param props The deep path to the prop of the desired value\r\n */\n\n\nfunction nestedPath(props, accessorProp) {\n  return function (object) {\n    var e_3, _a;\n\n    var result = object;\n\n    try {\n      for (var props_2 = __values(props), props_2_1 = props_2.next(); !props_2_1.done; props_2_1 = props_2.next()) {\n        var prop = props_2_1.value;\n        result = result[accessorProp][prop];\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (props_2_1 && !props_2_1.done && (_a = props_2.return)) _a.call(props_2);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    return result;\n  };\n}\n\nfunction toStatePaths(stateValue) {\n  if (!stateValue) {\n    return [[]];\n  }\n\n  if (isString(stateValue)) {\n    return [[stateValue]];\n  }\n\n  var result = flatten(keys(stateValue).map(function (key) {\n    var subStateValue = stateValue[key];\n\n    if (typeof subStateValue !== 'string' && (!subStateValue || !Object.keys(subStateValue).length)) {\n      return [[key]];\n    }\n\n    return toStatePaths(stateValue[key]).map(function (subPath) {\n      return [key].concat(subPath);\n    });\n  }));\n  return result;\n}\n\nfunction flatten(array) {\n  var _a;\n\n  return (_a = []).concat.apply(_a, __spread(array));\n}\n\nfunction toArrayStrict(value) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return [value];\n}\n\nfunction toArray(value) {\n  if (value === undefined) {\n    return [];\n  }\n\n  return toArrayStrict(value);\n}\n\nfunction mapContext(mapper, context, _event) {\n  var e_5, _a;\n\n  if (isFunction(mapper)) {\n    return mapper(context, _event.data);\n  }\n\n  var result = {};\n\n  try {\n    for (var _b = __values(Object.keys(mapper)), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var key = _c.value;\n      var subMapper = mapper[key];\n\n      if (isFunction(subMapper)) {\n        result[key] = subMapper(context, _event.data);\n      } else {\n        result[key] = subMapper;\n      }\n    }\n  } catch (e_5_1) {\n    e_5 = {\n      error: e_5_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_5) throw e_5.error;\n    }\n  }\n\n  return result;\n}\n\nfunction isBuiltInEvent(eventType) {\n  return /^(done|error)\\./.test(eventType);\n}\n\nfunction isPromiseLike(value) {\n  if (value instanceof Promise) {\n    return true;\n  } // Check if shape matches the Promise/A+ specification for a \"thenable\".\n\n\n  if (value !== null && (isFunction(value) || typeof value === 'object') && isFunction(value.then)) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction partition(items, predicate) {\n  var e_6, _a;\n\n  var _b = __read([[], []], 2),\n      truthy = _b[0],\n      falsy = _b[1];\n\n  try {\n    for (var items_1 = __values(items), items_1_1 = items_1.next(); !items_1_1.done; items_1_1 = items_1.next()) {\n      var item = items_1_1.value;\n\n      if (predicate(item)) {\n        truthy.push(item);\n      } else {\n        falsy.push(item);\n      }\n    }\n  } catch (e_6_1) {\n    e_6 = {\n      error: e_6_1\n    };\n  } finally {\n    try {\n      if (items_1_1 && !items_1_1.done && (_a = items_1.return)) _a.call(items_1);\n    } finally {\n      if (e_6) throw e_6.error;\n    }\n  }\n\n  return [truthy, falsy];\n}\n\nfunction updateHistoryStates(hist, stateValue) {\n  return mapValues(hist.states, function (subHist, key) {\n    if (!subHist) {\n      return undefined;\n    }\n\n    var subStateValue = (isString(stateValue) ? undefined : stateValue[key]) || (subHist ? subHist.current : undefined);\n\n    if (!subStateValue) {\n      return undefined;\n    }\n\n    return {\n      current: subStateValue,\n      states: updateHistoryStates(subHist, subStateValue)\n    };\n  });\n}\n\nfunction updateHistoryValue(hist, stateValue) {\n  return {\n    current: stateValue,\n    states: updateHistoryStates(hist, stateValue)\n  };\n}\n\nfunction updateContext(context, _event, assignActions, state) {\n  if (!IS_PRODUCTION) {\n    warn(!!context, 'Attempting to update undefined context');\n  }\n\n  var updatedContext = context ? assignActions.reduce(function (acc, assignAction) {\n    var e_7, _a;\n\n    var assignment = assignAction.assignment;\n    var meta = {\n      state: state,\n      action: assignAction,\n      _event: _event\n    };\n    var partialUpdate = {};\n\n    if (isFunction(assignment)) {\n      partialUpdate = assignment(acc, _event.data, meta);\n    } else {\n      try {\n        for (var _b = __values(keys(assignment)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var key = _c.value;\n          var propAssignment = assignment[key];\n          partialUpdate[key] = isFunction(propAssignment) ? propAssignment(acc, _event.data, meta) : propAssignment;\n        }\n      } catch (e_7_1) {\n        e_7 = {\n          error: e_7_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_7) throw e_7.error;\n        }\n      }\n    }\n\n    return Object.assign({}, acc, partialUpdate);\n  }, context) : context;\n  return updatedContext;\n} // tslint:disable-next-line:no-empty\n\n\nvar warn = function () {};\n\nif (!IS_PRODUCTION) {\n  warn = function (condition, message) {\n    var error = condition instanceof Error ? condition : undefined;\n\n    if (!error && condition) {\n      return;\n    }\n\n    if (console !== undefined) {\n      var args = [\"Warning: \" + message];\n\n      if (error) {\n        args.push(error);\n      } // tslint:disable-next-line:no-console\n\n\n      console.warn.apply(console, args);\n    }\n  };\n}\n\nfunction isArray(value) {\n  return Array.isArray(value);\n} // tslint:disable-next-line:ban-types\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\nfunction isString(value) {\n  return typeof value === 'string';\n} // export function memoizedGetter<T, TP extends { prototype: object }>(\n//   o: TP,\n//   property: string,\n//   getter: () => T\n// ): void {\n//   Object.defineProperty(o.prototype, property, {\n//     get: getter,\n//     enumerable: false,\n//     configurable: false\n//   });\n// }\n\n\nfunction toGuard(condition, guardMap) {\n  if (!condition) {\n    return undefined;\n  }\n\n  if (isString(condition)) {\n    return {\n      type: DEFAULT_GUARD_TYPE,\n      name: condition,\n      predicate: guardMap ? guardMap[condition] : undefined\n    };\n  }\n\n  if (isFunction(condition)) {\n    return {\n      type: DEFAULT_GUARD_TYPE,\n      name: condition.name,\n      predicate: condition\n    };\n  }\n\n  return condition;\n}\n\nfunction isObservable(value) {\n  try {\n    return 'subscribe' in value && isFunction(value.subscribe);\n  } catch (e) {\n    return false;\n  }\n}\n\nvar symbolObservable = /*#__PURE__*/function () {\n  return typeof Symbol === 'function' && Symbol.observable || '@@observable';\n}();\n\nfunction isMachine(value) {\n  try {\n    return '__xstatenode' in value;\n  } catch (e) {\n    return false;\n  }\n}\n\nvar uniqueId = /*#__PURE__*/function () {\n  var currentId = 0;\n  return function () {\n    currentId++;\n    return currentId.toString(16);\n  };\n}();\n\nfunction toEventObject(event, payload // id?: TEvent['type']\n) {\n  if (isString(event) || typeof event === 'number') {\n    return __assign({\n      type: event\n    }, payload);\n  }\n\n  return event;\n}\n\nfunction toSCXMLEvent(event, scxmlEvent) {\n  if (!isString(event) && '$$type' in event && event.$$type === 'scxml') {\n    return event;\n  }\n\n  var eventObject = toEventObject(event);\n  return __assign({\n    name: eventObject.type,\n    data: eventObject,\n    $$type: 'scxml',\n    type: 'external'\n  }, scxmlEvent);\n}\n\nfunction toTransitionConfigArray(event, configLike) {\n  var transitions = toArrayStrict(configLike).map(function (transitionLike) {\n    if (typeof transitionLike === 'undefined' || typeof transitionLike === 'string' || isMachine(transitionLike)) {\n      // @ts-ignore until Type instantiation is excessively deep and possibly infinite bug is fixed\n      return {\n        target: transitionLike,\n        event: event\n      };\n    }\n\n    return __assign(__assign({}, transitionLike), {\n      event: event\n    });\n  });\n  return transitions;\n}\n\nfunction normalizeTarget(target) {\n  if (target === undefined || target === TARGETLESS_KEY) {\n    return undefined;\n  }\n\n  return toArray(target);\n}\n\nfunction reportUnhandledExceptionOnInvocation(originalError, currentError, id) {\n  if (!IS_PRODUCTION) {\n    var originalStackTrace = originalError.stack ? \" Stacktrace was '\" + originalError.stack + \"'\" : '';\n\n    if (originalError === currentError) {\n      // tslint:disable-next-line:no-console\n      console.error(\"Missing onError handler for invocation '\" + id + \"', error was '\" + originalError + \"'.\" + originalStackTrace);\n    } else {\n      var stackTrace = currentError.stack ? \" Stacktrace was '\" + currentError.stack + \"'\" : ''; // tslint:disable-next-line:no-console\n\n      console.error(\"Missing onError handler and/or unhandled exception/promise rejection for invocation '\" + id + \"'. \" + (\"Original error: '\" + originalError + \"'. \" + originalStackTrace + \" Current error is '\" + currentError + \"'.\" + stackTrace));\n    }\n  }\n}\n\nfunction evaluateGuard(machine, guard, context, _event, state) {\n  var guards = machine.options.guards;\n  var guardMeta = {\n    state: state,\n    cond: guard,\n    _event: _event\n  }; // TODO: do not hardcode!\n\n  if (guard.type === DEFAULT_GUARD_TYPE) {\n    return guard.predicate(context, _event.data, guardMeta);\n  }\n\n  var condFn = guards[guard.type];\n\n  if (!condFn) {\n    throw new Error(\"Guard '\" + guard.type + \"' is not implemented on machine '\" + machine.id + \"'.\");\n  }\n\n  return condFn(context, _event.data, guardMeta);\n}\n\nexport { evaluateGuard, flatten, getEventType, isArray, isBuiltInEvent, isFunction, isMachine, isObservable, isPromiseLike, isStateLike, isString, keys, mapContext, mapFilterValues, mapValues, matchesState, nestedPath, normalizeTarget, partition, path, pathToStateValue, reportUnhandledExceptionOnInvocation, symbolObservable, toArray, toArrayStrict, toEventObject, toGuard, toSCXMLEvent, toStatePath, toStatePaths, toStateValue, toTransitionConfigArray, uniqueId, updateContext, updateHistoryStates, updateHistoryValue, warn };"],"sourceRoot":""}