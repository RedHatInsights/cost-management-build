{"version":3,"sources":["webpack:///./src/pages/overview/overview.scss?a989","webpack:///./src/pages/overview/overview.scss","webpack:///./src/pages/dashboard/components/dashboardBase.tsx","webpack:///./src/pages/dashboard/components/dashboardWidget.styles.ts","webpack:///./src/pages/dashboard/components/dashboardWidgetBase.tsx","webpack:///./src/pages/dashboard/awsCloudDashboard/awsCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/awsCloudDashboard/awsCloudDashboard.tsx","webpack:///./src/pages/dashboard/awsDashboard/awsDashboardWidget.tsx","webpack:///./src/pages/dashboard/awsDashboard/awsDashboard.tsx","webpack:///./src/pages/dashboard/azureCloudDashboard/azureCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/azureCloudDashboard/azureCloudDashboard.tsx","webpack:///./src/pages/dashboard/azureDashboard/azureDashboardWidget.tsx","webpack:///./src/pages/dashboard/azureDashboard/azureDashboard.tsx","webpack:///./src/pages/dashboard/gcpDashboard/gcpDashboardWidget.tsx","webpack:///./src/pages/dashboard/gcpDashboard/gcpDashboard.tsx","webpack:///./src/pages/dashboard/ocpCloudDashboard/ocpCloudDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpCloudDashboard/ocpCloudDashboard.tsx","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboardWidget.styles.ts","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpDashboard/ocpDashboard.tsx","webpack:///./src/pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboard.tsx","webpack:///./src/pages/dashboard/ocpUsageDashboard/ocpUsageDashboardWidget.tsx","webpack:///./src/pages/dashboard/ocpUsageDashboard/ocpUsageDashboard.tsx","webpack:///./src/pages/overview/overview.styles.ts","webpack:///./src/pages/overview/perspective.styles.ts","webpack:///./src/pages/overview/perspective.tsx","webpack:///./src/pages/overview/overview.tsx","webpack:///./src/pages/overview/index.ts","webpack:///./src/utils/formatValue.ts","webpack:///./src/utils/computedForecast/getComputedForecastItems.ts","webpack:///./src/components/charts/common/chartUtils.ts","webpack:///./src/components/charts/common/charts-common.scss?2cec","webpack:///./src/components/charts/chartTheme/theme-koku.ts","webpack:///./src/components/charts/chartTheme/index.ts","webpack:///./src/components/charts/chartTheme/theme-utils.ts","webpack:///./src/utils/computedReport/getComputedReportItems.ts","webpack:///./src/utils/computedReport/getItemLabel.ts","webpack:///./src/components/state/loadingState/loadingState.tsx","webpack:///./src/api/queries/providersQuery.ts","webpack:///./src/utils/sort.ts","webpack:///./src/components/state/emptyValueState/emptyValueState.tsx","webpack:///./src/components/reports/reportSummary/reportSummary.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryAlt.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryDetails.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryItem.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryItems.tsx","webpack:///./src/components/charts/costChart/costChart.styles.ts","webpack:///./src/components/charts/costChart/costChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryCost.tsx","webpack:///./src/components/charts/trendChart/trendChart.styles.ts","webpack:///./src/components/charts/trendChart/trendChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryTrend.tsx","webpack:///./src/components/charts/usageChart/usageChart.styles.ts","webpack:///./src/components/charts/usageChart/usageChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryUsage.tsx","webpack:///./src/utils/pathname.ts","webpack:///./src/pages/state/loading/loading.tsx","webpack:///./src/pages/state/loading/index.ts","webpack:///./src/components/reports/reportSummary/reportSummary.scss?97f8","webpack:///./src/components/reports/reportSummary/reportSummary.scss","webpack:///./src/components/reports/reportSummary/reportSummaryAlt.scss?964b","webpack:///./src/components/reports/reportSummary/reportSummaryAlt.scss","webpack:///./src/components/reports/reportSummary/reportSummaryDetails.scss?0d10","webpack:///./src/components/reports/reportSummary/reportSummaryDetails.scss","webpack:///./src/components/state/emptyValueState/emptyValueState.scss?e614","webpack:///./src/components/state/emptyValueState/emptyValueState.scss","webpack:///./src/components/reports/reportSummary/reportSummaryItem.scss?0e2c","webpack:///./src/components/reports/reportSummary/reportSummaryItem.scss","webpack:///./src/components/reports/reportSummary/reportSummaryItems.scss?00c0","webpack:///./src/components/reports/reportSummary/reportSummaryItems.scss","webpack:///./src/components/reports/reportSummary/reportSummaryCost.scss?4e01","webpack:///./src/components/reports/reportSummary/reportSummaryCost.scss","webpack:///./src/components/charts/common/charts-common.scss","webpack:///./src/components/reports/reportSummary/reportSummaryTrend.scss?6066","webpack:///./src/components/reports/reportSummary/reportSummaryTrend.scss","webpack:///./src/components/reports/reportSummary/reportSummaryUsage.scss?37e6","webpack:///./src/components/reports/reportSummary/reportSummaryUsage.scss","webpack:///./src/components/icons/costIcon/costIcon.scss?e2d0","webpack:///./src/components/icons/costIcon/costIcon.scss","webpack:///./src/components/icons/costIcon/Cost-icon.svg","webpack:///./src/components/icons/costIcon/costIcon.tsx","webpack:///./src/components/icons/costIcon/index.ts","webpack:///./src/pages/state/noProviders/noProvidersState.styles.ts","webpack:///./src/pages/state/noProviders/noProvidersState.tsx","webpack:///./src/pages/state/noProviders/noProviders.tsx","webpack:///./src/pages/state/noProviders/index.ts"],"names":["content","module","i","options","transform","undefined","locals","exports","___CSS_LOADER_API_IMPORT___","push","DashboardBase","DashboardWidget","selectWidgets","widgets","createElement","Grid","hasGutter","map","widgetId","details","showHorizontal","GridItem","sm","key","lg","xl","xl2","chartStyles","chartAltHeight","chartHeight","containerAltHeight","containerTrendHeight","containerUsageHeight","styles","tabs","marginTop","value","tabItems","Component","super","arguments","this","state","activeTabKey","buildDetailsLink","tab","getIdKeyForTab","props","currentTab","viewAllPath","group_by","order_by","cost","getChart","containerHeight","height","adjustContainerHeight","chartType","getCostChart","getTrendChart","getUsageChart","currentReport","previousReport","t","trend","units","getUnits","title","titleKey","computedReportItem","computedReportItemValue","currentInfrastructureData","type","previousInfrastructureData","currentCostData","previousCostData","currentInfrastructureCostData","formatDatumValue","formatValue","formatDatumOptions","formatOptions","previousInfrastructureCostData","showSupplementaryLabel","forecast","computedForecastItem","currentData","previousData","forecastData","forecastConeData","newForecast","data","total","meta","populatedValues","filter","val","values","length","date","item","Date","shift","unshift","confidence_max","confidence_min","showUsageLegendLabel","currentRequestData","previousRequestData","currentUsageData","previousUsageData","getDetails","costLabel","getDetailsLabel","costKey","report","requestLabel","requestKey","showTooltip","showUnits","showUsageFirst","usageFormatOptions","usageLabel","usageKey","getDetailsLink","Link","to","onClick","handleInsightsNavClick","getDetailsLinkTitle","groupBy","getHorizontalLayout","currentReportFetchStatus","detailsLink","status","subTitle","getSubTitle","getTabs","getTitle","today","month","endDate","startDate","count","getTab","index","tabsReport","tabsReportFetchStatus","Tab","eventKey","TabTitleText","getTabTitle","style","idKey","items","reportItem","getTabItem","availableTabs","topItems","activeTab","totalValue","hasTotal","usage","id","label","toString","Tabs","isFilled","activeKey","onSelect","handleTabClick","getVerticalLayout","Boolean","appNavId","insights","chrome","appNavClick","secondaryNav","event","tabIndex","updateTab","setState","fetchForecasts","fetchReports","mapStateToProps","widget","awsCloudDashboard","selectWidget","queries","selectWidgetQueries","Object","assign","selectReport","reportPathsType","reportType","current","selectReportFetchStatus","previous","mapDispatchToProps","fetchWidgetReports","changeWidgetTab","AwsCloudDashboardWidget","withTranslation","selectCurrentWidgets","awsDashboard","selectForecast","forecastPathsType","forecastType","forecastFetchStatus","selectForecastFetchStatus","fetchWidgetForecasts","AwsDashboardWidget","azureCloudDashboard","AzureCloudDashboardWidget","azureDashboard","AzureDashboardWidget","gcpDashboard","GcpDashboardWidget","ocpCloudDashboard","OcpCloudDashboardWidget","ocpDashboard","currentQuery","previousQuery","tabsQuery","OcpDashboardWidget","ocpSupplementaryDashboard","OcpSupplementaryDashboardWidget","ocpUsageDashboard","OcpUsageDashboardWidget","infoIcon","fontSize","infoTitle","fontWeight","perspective","perspectiveSelector","display","alignItems","perspectiveLabel","marginBottom","marginRight","var","defaultState","isPerspectiveOpen","getDropDownItems","option","DropdownItem","component","handleClick","getCurrentLabel","currentItem","onItemClicked","handleSelect","handleToggle","dropdownItems","Dropdown","toggle","DropdownToggle","onToggle","isOpen","Perspective","ocpOptions","infrastructureAllCloudOptions","infrastructureAwsOptions","infrastructureAwsCloudOptions","infrastructureAzureOptions","infrastructureAzureCloudOptions","infrastructureGcpOptions","infrastructureOcpOptions","isAwsAccessAllowed","isAzureAccessAllowed","isGcpAccessAllowed","isOcpAccessAllowed","getAvailableTabs","isAwsAvailable","isAzureAvailable","isGcpAvailable","isOcpAvailable","isOcpCloudAvailable","contentRef","createRef","getCurrentTab","getDefaultInfrastructurePerspective","getDefaultOcpPerspective","getPerspective","currentInfrastructurePerspective","currentOcpPerspective","handlePerspectiveClick","tabContentId","tabContentRef","getTabContent","TabContent","ref","emptyTab","Fragment","awsProviders","azureProviders","gcpProviders","ocpProviders","async","isEntitled","isOrgAdmin","getPermissions","then","prevProps","awsProvidersFetchStatus","azureProvidersFetchStatus","gcpProvidersFetchStatus","ocpProvidersFetchStatus","isLoading","noAwsProviders","noAzureProviders","noGcpProviders","noOcpProviders","noProviders","className","Title","headingLevel","size","Popover","enableFlip","bodyContent","Button","variant","plain","awsProvidersQueryString","providers","selectProviders","selectProvidersFetchStatus","azureProvidersQueryString","gcpProvidersQueryString","ocpProvidersQueryString","unitLookupKey","unit","lookup","toLowerCase","fValue","formatCurrency","formatUsageGb","formatUsageHrs","unknownTypeFormatter","_unit","fractionDigits","toLocaleString","minimumFractionDigits","maximumFractionDigits","currency","getComputedForecastItems","sortDirection","sortKey","sort","itemMap","Map","visitDataPoint","dataPoint","forEach","_val","rsquared","Number","pvalues","get","set","Array","from","getUnsortedComputedForecastItems","direction","transformForecast","computedItems","result","createForecastDatum","reduce","acc","d","prevValue","y","transformForecastCone","createForecastConeDatum","prevMaxValue","prevMinValue","y0","transformReport","reportItemValue","getComputedReportItems","createReportDatum","datums","firstDate","lastDate","padDate","getDate","setDate","padComputedReportItems","computedItem","xVal","yVal","isFloat","parseFloat","toFixed","isInt","x","maxValue","minValue","y0Val","getDateRange","firstOfMonth","lastOfMonth","offset","start","end","setMonth","getMonth","getDatumDateRange","getMaxValue","max","datum","getTooltipContent","i18next","getCostRangeString","year","getUsageRangeString","n","LAYOUT_PROPS","padding","area","axis","bar","boxplot","candlestick","chart","errorbar","group","legend","line","pie","scatter","stack","tooltip","voronoi","ChartTheme","default","labelKey","getUnsortedComputedReportItems","idSuffix","cluster","org_unit_id","mapId","cluster_alias","clusters","capacity","deltaPercent","delta_percent","deltaValue","delta_value","source_uuid","supplementary","infrastructure","itemLabelKey","String","keys","indexOf","tagPrefixKey","hasOwnProperty","getItemLabel","alias","account_alias","limit","request","LoadingState","large","getProvidersQuery","query","encode","indices","getValueForItem","array","a","b","aVal","bVal","EmptyValueState","ReportSummary","children","Card","CardTitle","CardBody","Skeleton","CardFooter","ReportSummaryAlt","ReportSummaryDetails","requestFormatOptions","supplementaryCost","infrastructureCost","hasCost","hasCount","hasSupplementaryCost","hasInfrastructureCost","hasRequest","hasUsage","getCostLayout","showAltHeroFont","altHeroFont","Tooltip","getRequestLayout","usageUnits","_units","unitsLabel","getUsageLayout","ReportSummaryItemBase","percentVal","percentLabel","percent","Progress","defaultProps","v","ReportSummaryItem","nextProps","otherIndex","findIndex","includes","slice","getItems","ReportSummaryItems","currentColorScale","chart_color_green_400","chart_color_green_300","chart_color_green_200","chart_color_green_100","chart_color_green_500","fill","strokeDasharray","forecastCostData","itemsPerRow","previousColorScale","chart_color_black_200","yAxis","axisLabel","grid","stroke","ticks","tickLabels","xAxis","containerRef","hiddenSeries","Set","width","initDatum","series","childName","legendItem","name","symbol","isForecast","handleNavToggle","setTimeout","handleResize","clientWidth","ChartArea","has","interpolation","getContainer","CursorVoronoiContainer","cursorDimension","labels","isDataAvailable","getTooltipLabel","labelComponent","ChartLegendTooltip","legendData","getLegendData","day","mouseFollowTooltips","voronoiDimension","voronoiPadding","bottom","left","right","top","getLegend","legendItemsPerRow","ChartLegend","gutter","responsive","formatter","handleLegendClick","delete","add","unavailable","s","isSeriesHidden","getChartNames","serie","getEvents","chartNames","isHidden","legendName","onLegendClick","window","addEventListener","navToggle","on","removeEventListener","domain","maxCurrentInfrastructure","maxCurrentCost","maxForecastCost","maxPreviousInfrastructure","maxPreviousUsage","Math","ceil","currentInfrastructureDate","currentCostDate","forecastCostDate","previousInfrastructureDate","previousUsageDate","getDomain","getEndDate","midDate","floor","adjustedContainerHeight","Chart","containerComponent","events","legendComponent","legendPosition","theme","ChartAxis","tickValues","dependentAxis","ReportSummaryCost","currentMonthData","forecastColorScale","forecastConeColorScale","strokeWidth","previousMonthData","tooltipKey","orientation","dy","dy0","value0","value1","maxCurrent","maxPrevious","previousDate","currentDate","forecastDate","ReportSummaryTrend","chartContainer","legendColorScale","maxCurrentRequest","maxCurrentUsage","maxPreviousRequest","currentRequestDate","currentUsageDate","previousRequestDate","ReportSummaryUsage","getReleasePath","pathName","location","pathname","split","release","withRouter","PageHeader","Main","___CSS_LOADER_AT_RULE_IMPORT_0___","src","alt","iconSpacer","marginLeft","viewSources","getDocLink","textKey","urlKey","href","rel","target","getRouteToSources","providerType","docUrlKey","icon","descKey","EmptyState","EmptyStateIcon","EmptyStateBody","NoProvidersState"],"mappings":"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","file":"d3654b059e35649d6e39.bundle.js","sourcesContent":["\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./overview.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./overview.scss\", function() {\n\t\tvar newContent = require(\"!!../../../node_modules/css-loader/dist/cjs.js!../../../node_modules/sass-loader/dist/cjs.js!./overview.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../node_modules/css-loader/dist/runtime/api.js\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\n// Module\nexports.push([module.id, \".headerOverride.pf-c-page__main-section{--pf-c-page__main-section--PaddingBottom: 0}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nconst DashboardBase = ({ DashboardWidget, selectWidgets, widgets }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { hasGutter: true }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return widget.details.showHorizontal ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(DashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { lg: 12, xl: 6, xl2: 4, key: widgetId },\n            React.createElement(DashboardWidget, { widgetId: widgetId })));\n    }))));\nexport { DashboardBase };\n","import global_spacer_2xl from '@patternfly/react-tokens/dist/js/global_spacer_2xl';\nimport global_spacer_xl from '@patternfly/react-tokens/dist/js/global_spacer_xl';\nexport const chartStyles = {\n    chartAltHeight: 250,\n    chartHeight: 180,\n    containerAltHeight: 250,\n    containerTrendHeight: 180,\n    containerUsageHeight: 180,\n};\nexport const styles = {\n    tabs: {\n        marginTop: global_spacer_2xl.value,\n    },\n    tabItems: {\n        marginTop: global_spacer_xl.value,\n    },\n};\n","import { Tab, Tabs, TabTitleText } from '@patternfly/react-core';\nimport { getQuery } from 'api/queries/awsQuery';\nimport { transformForecast, transformForecastCone, transformReport, } from 'components/charts/common/chartUtils';\nimport { ReportSummary, ReportSummaryAlt, ReportSummaryCost, ReportSummaryDetails, ReportSummaryItem, ReportSummaryItems, ReportSummaryTrend, ReportSummaryUsage, } from 'components/reports/reportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport { cloneDeep } from 'lodash';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './dashboardWidget.styles';\nclass DashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = (tab) => {\n            const { details, getIdKeyForTab } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return `${details.viewAllPath}?${getQuery({\n                group_by: {\n                    [currentTab]: '*',\n                },\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.getChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { chartType } = this.props;\n            if (chartType === \"cost\" /* cost */) {\n                return this.getCostChart(containerHeight, height, adjustContainerHeight);\n            }\n            else if (chartType === \"supplementary\" /* supplementary */) {\n                return this.getTrendChart(containerHeight, height, adjustContainerHeight, true);\n            }\n            else if (chartType === \"trend\" /* trend */) {\n                return this.getTrendChart(containerHeight, height, adjustContainerHeight);\n            }\n            else if (chartType === \"usage\" /* usage */) {\n                return this.getUsageChart(height, adjustContainerHeight);\n            }\n            else {\n                return null;\n            }\n        };\n        // This chart displays cost and infrastructure cost\n        this.getCostChart = (containerHeight, height, adjustContainerHeight = false) => {\n            const { currentReport, previousReport, t, trend } = this.props;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            const computedReportItem = trend.computedReportItem || 'cost'; // cost, supplementaryCost, etc.\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            // Infrastructure data\n            const currentInfrastructureData = transformReport(currentReport, trend.type, 'date', 'infrastructure', computedReportItemValue);\n            const previousInfrastructureData = transformReport(previousReport, trend.type, 'date', 'infrastructure', computedReportItemValue);\n            // Cost data\n            const currentCostData = transformReport(currentReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            const previousCostData = transformReport(previousReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            return (React.createElement(ReportSummaryCost, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentCostData: currentCostData, currentInfrastructureCostData: currentInfrastructureData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousCostData: previousCostData, previousInfrastructureCostData: previousInfrastructureData, title: title }));\n        };\n        // This chart displays cost only\n        this.getTrendChart = (containerHeight, height, adjustContainerHeight = false, showSupplementaryLabel = false) => {\n            const { currentReport, details, forecast, previousReport, t, trend } = this.props;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            const computedForecastItem = trend.computedForecastItem;\n            const computedReportItem = trend.computedReportItem || 'cost'; // cost, supplementaryCost, etc.\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            // Data\n            const currentData = transformReport(currentReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            const previousData = transformReport(previousReport, trend.type, 'date', computedReportItem, computedReportItemValue);\n            // Join forecast\n            let forecastData;\n            let forecastConeData;\n            if (computedForecastItem) {\n                const newForecast = cloneDeep(forecast);\n                if (forecast && currentReport && currentReport.data) {\n                    const total = currentReport.meta && currentReport.meta.total && currentReport.meta.total.cost\n                        ? currentReport.meta.total.cost.total.value\n                        : 0;\n                    // Find last currentData date with values\n                    const populatedValues = currentReport.data.filter(val => val.values.length);\n                    const date = populatedValues[populatedValues.length - 1].date;\n                    // Remove overlapping forecast dates, if any\n                    for (const item of forecast.data) {\n                        if (new Date(date) >= new Date(item.date)) {\n                            newForecast.data.shift();\n                        }\n                    }\n                    // Show continuous line from current report to forecast\n                    newForecast.data.unshift({\n                        date,\n                        values: [\n                            {\n                                date,\n                                cost: {\n                                    confidence_max: {\n                                        value: 0,\n                                    },\n                                    confidence_min: {\n                                        value: 0,\n                                    },\n                                    total: {\n                                        value: total,\n                                        units: 'USD',\n                                    },\n                                },\n                            },\n                        ],\n                    });\n                }\n                forecastData = transformForecast(newForecast, trend.type, computedForecastItem);\n                forecastConeData = transformForecastCone(newForecast, trend.type, computedForecastItem);\n            }\n            return (React.createElement(ReportSummaryTrend, { adjustContainerHeight: adjustContainerHeight, containerHeight: containerHeight, currentData: currentData, forecastData: forecastData, forecastConeData: forecastConeData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousData, showSupplementaryLabel: showSupplementaryLabel, showUsageLegendLabel: details.showUsageLegendLabel, title: title, units: units }));\n        };\n        // This chart displays usage and requests\n        this.getUsageChart = (height, adjustContainerHeight = false) => {\n            const { currentReport, previousReport, t, trend } = this.props;\n            const units = this.getUnits();\n            const title = t(trend.titleKey, { units: t(`units.${units}`) });\n            // Request data\n            const currentRequestData = transformReport(currentReport, trend.type, 'date', 'request');\n            const previousRequestData = transformReport(previousReport, trend.type, 'date', 'request');\n            // Usage data\n            const currentUsageData = transformReport(currentReport, trend.type, 'date', 'usage');\n            const previousUsageData = transformReport(previousReport, trend.type, 'date', 'usage');\n            return (React.createElement(ReportSummaryUsage, { adjustContainerHeight: adjustContainerHeight, containerHeight: chartStyles.containerUsageHeight, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousRequestData: previousRequestData, previousUsageData: previousUsageData, title: title }));\n        };\n        this.getDetails = () => {\n            const { chartType, currentReport, details, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            const units = this.getUnits();\n            return (React.createElement(ReportSummaryDetails, { chartType: chartType, computedReportItem: computedReportItem, computedReportItemValue: computedReportItemValue, costLabel: this.getDetailsLabel(details.costKey, units), formatOptions: details.formatOptions, formatValue: formatValue, report: currentReport, requestLabel: this.getDetailsLabel(details.requestKey, units), showTooltip: details.showTooltip, showUnits: details.showUnits, showUsageFirst: details.showUsageFirst, units: details.units, usageFormatOptions: details.usageFormatOptions, usageLabel: this.getDetailsLabel(details.usageKey, units) }));\n        };\n        this.getDetailsLabel = (key, units) => {\n            const { t } = this.props;\n            return key ? t(key, { units: t(`units.${units}`) }) : undefined;\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, details } = this.props;\n            if (details.viewAllPath) {\n                return (React.createElement(Link, { to: this.buildDetailsLink(currentTab), onClick: this.handleInsightsNavClick }, this.getDetailsLinkTitle(currentTab)));\n            }\n            return null;\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { getIdKeyForTab, t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { containerAltHeight = chartStyles.containerAltHeight, chartAltHeight = chartStyles.chartAltHeight, currentReportFetchStatus, details, } = this.props;\n            return (React.createElement(ReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(containerAltHeight, chartAltHeight, details.adjustContainerHeight)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'D');\n            const startDate = formatDate(startOfMonth(today), 'D');\n            return t('aws_dashboard.widget_subtitle', {\n                count: getDate(today),\n                endDate,\n                month,\n                startDate,\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { getIdKeyForTab, tabsReport, tabsReportFetchStatus, trend } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) },\n                React.createElement(\"div\", { style: styles.tabItems },\n                    React.createElement(ReportSummaryItems, { computedReportItemValue: computedReportItemValue, idKey: currentTab, key: `${currentTab}-items`, report: tabsReport, status: tabsReportFetchStatus }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, details, getIdKeyForTab, tabsReport, topItems, trend } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            let totalValue;\n            const hasTotal = tabsReport && tabsReport.meta && tabsReport.meta.total;\n            if (computedReportItem === \"usage\" /* usage */) {\n                if (hasTotal && tabsReport.meta.total.usage) {\n                    totalValue = tabsReport.meta.total.usage.value;\n                }\n            }\n            else {\n                if (hasTotal &&\n                    tabsReport.meta.total[computedReportItem] &&\n                    tabsReport.meta.total[computedReportItem][computedReportItemValue]) {\n                    totalValue = tabsReport.meta.total[computedReportItem][computedReportItemValue].value;\n                }\n            }\n            if (activeTab === currentTab) {\n                return (React.createElement(ReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: totalValue, units: details.units ? details.units : this.getUnits(), value: reportItem[computedReportItem] }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { getIdKeyForTab, t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getUnits = () => {\n            const { currentReport, details, trend } = this.props;\n            const computedReportItem = trend.computedReportItem || 'cost';\n            const computedReportItemValue = trend.computedReportItemValue || 'total';\n            if (details.units) {\n                return details.units;\n            }\n            let units;\n            const hasTotal = currentReport && currentReport.meta && currentReport.meta.total;\n            if (computedReportItem === \"usage\" /* usage */) {\n                const hasUsage = hasTotal && currentReport.meta.total.usage;\n                units = hasUsage ? unitLookupKey(currentReport.meta.total.usage.units) : '';\n            }\n            else {\n                const hasCost = hasTotal &&\n                    currentReport.meta.total[computedReportItem] &&\n                    currentReport.meta.total[computedReportItem][computedReportItemValue];\n                units = hasCost ? unitLookupKey(currentReport.meta.total[computedReportItem][computedReportItemValue].units) : '';\n            }\n            return units;\n        };\n        this.getVerticalLayout = () => {\n            const { availableTabs, currentReportFetchStatus, details } = this.props;\n            return (React.createElement(ReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(chartStyles.containerTrendHeight, chartStyles.chartHeight, details.adjustContainerHeight),\n                Boolean(availableTabs) && React.createElement(\"div\", { style: styles.tabs }, this.getTabs())));\n        };\n        this.handleInsightsNavClick = () => {\n            const { details } = this.props;\n            if (details.appNavId) {\n                insights.chrome.appNavClick({\n                    id: details.appNavId,\n                    secondaryNav: true,\n                });\n            }\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchForecasts, fetchReports, id, updateTab, widgetId } = this.props;\n        if (availableTabs) {\n            updateTab(id, availableTabs[0]);\n        }\n        if (fetchForecasts) {\n            fetchForecasts(widgetId);\n        }\n        if (fetchReports) {\n            fetchReports(widgetId);\n        }\n    }\n    render() {\n        const { details } = this.props;\n        return details.showHorizontal ? this.getHorizontalLayout() : this.getVerticalLayout();\n    }\n}\nexport { DashboardWidgetBase };\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsCloudDashboardActions, awsCloudDashboardSelectors, } from 'store/dashboard/awsCloudDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: awsCloudDashboardActions.fetchWidgetReports,\n    updateTab: awsCloudDashboardActions.changeWidgetTab,\n};\nconst AwsCloudDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AwsCloudDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsCloudDashboardSelectors } from 'store/dashboard/awsCloudDashboard';\nimport { AwsCloudDashboardWidget } from './awsCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: AwsCloudDashboardWidget,\n        selectWidgets: awsCloudDashboardSelectors.selectWidgets(state),\n        widgets: awsCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsCloudDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default AwsCloudDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsDashboardActions, awsDashboardSelectors } from 'store/dashboard/awsDashboard';\nimport { forecastSelectors } from 'store/forecasts';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, forecastQuery: queries.forecast, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), forecast: forecastSelectors.selectForecast(state, widget.forecastPathsType, widget.forecastType, queries.forecast), forecastFetchStatus: forecastSelectors.selectForecastFetchStatus(state, widget.forecastPathsType, widget.forecastType, queries.forecast), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchForecasts: awsDashboardActions.fetchWidgetForecasts,\n    fetchReports: awsDashboardActions.fetchWidgetReports,\n    updateTab: awsDashboardActions.changeWidgetTab,\n};\nconst AwsDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AwsDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsDashboardSelectors } from 'store/dashboard/awsDashboard';\nimport { AwsDashboardWidget } from './awsDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: AwsDashboardWidget,\n        selectWidgets: awsDashboardSelectors.selectWidgets(state),\n        widgets: awsDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default AwsDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureCloudDashboardActions, azureCloudDashboardSelectors, } from 'store/dashboard/azureCloudDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"service_names\" /* service_names */:\n            return 'service_name';\n        case \"subscription_guids\" /* subscription_guids */:\n            return 'subscription_guid';\n        case \"resource_locations\" /* resource_locations */:\n            return 'resource_location';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = azureCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = azureCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: azureCloudDashboardActions.fetchWidgetReports,\n    updateTab: azureCloudDashboardActions.changeWidgetTab,\n};\nconst AzureCloudDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AzureCloudDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureCloudDashboardSelectors } from 'store/dashboard/azureCloudDashboard';\nimport { AzureCloudDashboardWidget } from './azureCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: AzureCloudDashboardWidget,\n        selectWidgets: azureCloudDashboardSelectors.selectWidgets(state),\n        widgets: azureCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AzureCloudDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default AzureCloudDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureDashboardActions, azureDashboardSelectors } from 'store/dashboard/azureDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"service_names\" /* service_names */:\n            return 'service_name';\n        case \"subscription_guids\" /* subscription_guids */:\n            return 'subscription_guid';\n        case \"resource_locations\" /* resource_locations */:\n            return 'resource_location';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = azureDashboardSelectors.selectWidget(state, widgetId);\n    const queries = azureDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: azureDashboardActions.fetchWidgetReports,\n    updateTab: azureDashboardActions.changeWidgetTab,\n};\nconst AzureDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { AzureDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureDashboardSelectors } from 'store/dashboard/azureDashboard';\nimport { AzureDashboardWidget } from './azureDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: AzureDashboardWidget,\n        selectWidgets: azureDashboardSelectors.selectWidgets(state),\n        widgets: azureDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AzureDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default AzureDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { gcpDashboardActions, gcpDashboardSelectors } from 'store/dashboard/gcpDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = gcpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = gcpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: gcpDashboardActions.fetchWidgetReports,\n    updateTab: gcpDashboardActions.changeWidgetTab,\n};\nconst GcpDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { GcpDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { gcpDashboardSelectors } from 'store/dashboard/gcpDashboard';\nimport { GcpDashboardWidget } from './gcpDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: GcpDashboardWidget,\n        selectWidgets: gcpDashboardSelectors.selectWidgets(state),\n        widgets: gcpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst GcpDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default GcpDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardActions, ocpCloudDashboardSelectors, } from 'store/dashboard/ocpCloudDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"services\" /* services */:\n            return 'service';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpCloudDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpCloudDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpCloudDashboardActions.fetchWidgetReports,\n    updateTab: ocpCloudDashboardActions.changeWidgetTab,\n};\nconst OcpCloudDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpCloudDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpCloudDashboardSelectors } from 'store/dashboard/ocpCloudDashboard';\nimport { OcpCloudDashboardWidget } from './ocpCloudDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: OcpCloudDashboardWidget,\n        selectWidgets: ocpCloudDashboardSelectors.selectWidgets(state),\n        widgets: ocpCloudDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpCloudDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpCloudDashboard;\n","export const chartStyles = {\n    chartAltHeight: 250,\n    containerAltHeight: 250,\n};\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardActions, ocpDashboardSelectors } from 'store/dashboard/ocpDashboard';\nimport { reportSelectors } from 'store/reports';\nimport { chartStyles } from './ocpDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, chartAltHeight: chartStyles.chartAltHeight, containerAltHeight: chartStyles.containerAltHeight, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpDashboardActions.fetchWidgetReports,\n    updateTab: ocpDashboardActions.changeWidgetTab,\n};\nconst OcpDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardSelectors } from 'store/dashboard/ocpDashboard';\nimport { OcpDashboardWidget } from './ocpDashboardWidget';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        DashboardWidget: OcpDashboardWidget,\n        selectWidgets: ocpDashboardSelectors.selectWidgets(state),\n        widgets: ocpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpSupplementaryDashboardActions, ocpSupplementaryDashboardSelectors, } from 'store/dashboard/ocpSupplementaryDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpSupplementaryDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpSupplementaryDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpSupplementaryDashboardActions.fetchWidgetReports,\n    updateTab: ocpSupplementaryDashboardActions.changeWidgetTab,\n};\nconst OcpSupplementaryDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpSupplementaryDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpSupplementaryDashboardSelectors } from 'store/dashboard/ocpSupplementaryDashboard';\nimport { OcpSupplementaryDashboardWidget } from './ocpSupplementaryDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: OcpSupplementaryDashboardWidget,\n        selectWidgets: ocpSupplementaryDashboardSelectors.selectWidgets(state),\n        widgets: ocpSupplementaryDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpSupplementaryDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpSupplementaryDashboard;\n","import { DashboardWidgetBase, } from 'pages/dashboard/components/dashboardWidgetBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpUsageDashboardActions, ocpUsageDashboardSelectors, } from 'store/dashboard/ocpUsageDashboard';\nimport { reportSelectors } from 'store/reports';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpUsageDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpUsageDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign(Object.assign({}, widget), { getIdKeyForTab, currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.current), currentReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.current), previousReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.previous), tabsReport: reportSelectors.selectReport(state, widget.reportPathsType, widget.reportType, queries.tabs), tabsReportFetchStatus: reportSelectors.selectReportFetchStatus(state, widget.reportPathsType, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpUsageDashboardActions.fetchWidgetReports,\n    updateTab: ocpUsageDashboardActions.changeWidgetTab,\n};\nconst OcpUsageDashboardWidget = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(DashboardWidgetBase));\nexport { OcpUsageDashboardWidget };\n","import { DashboardBase } from 'pages/dashboard/components/dashboardBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpUsageDashboardSelectors } from 'store/dashboard/ocpUsageDashboard';\nimport { OcpUsageDashboardWidget } from './ocpUsageDashboardWidget';\nconst mapStateToProps = createMapStateToProps(\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\n(state, props) => {\n    return {\n        DashboardWidget: OcpUsageDashboardWidget,\n        selectWidgets: ocpUsageDashboardSelectors.selectWidgets(state),\n        widgets: ocpUsageDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpUsageDashboard = withTranslation()(connect(mapStateToProps, {})(DashboardBase));\nexport default OcpUsageDashboard;\n","import global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const styles = {\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    perspective: {\n        marginTop: global_spacer_lg.value,\n    },\n    tabs: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    perspectiveSelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    perspectiveLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n};\n","import { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './perspective.styles';\nclass PerspectiveBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isPerspectiveOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getDropDownItems = () => {\n            const { options, t } = this.props;\n            return options.map(option => (React.createElement(DropdownItem, { component: \"button\", key: option.value, onClick: () => this.handleClick(option.value) }, t(option.label))));\n        };\n        this.getCurrentLabel = () => {\n            const { currentItem, options, t } = this.props;\n            let label = '';\n            for (const option of options) {\n                if (currentItem === option.value) {\n                    label = t(option.label);\n                    break;\n                }\n            }\n            return label;\n        };\n        this.handleClick = value => {\n            const { onItemClicked } = this.props;\n            if (onItemClicked) {\n                onItemClicked(value);\n            }\n        };\n        this.handleSelect = () => {\n            this.setState({\n                isPerspectiveOpen: !this.state.isPerspectiveOpen,\n            });\n        };\n        this.handleToggle = isPerspectiveOpen => {\n            this.setState({\n                isPerspectiveOpen,\n            });\n        };\n    }\n    render() {\n        const { t } = this.props;\n        const { isPerspectiveOpen } = this.state;\n        const dropdownItems = this.getDropDownItems();\n        return (React.createElement(\"div\", { style: styles.perspectiveSelector },\n            React.createElement(\"label\", { style: styles.perspectiveLabel }, t('overview.perspective.label')),\n            React.createElement(Dropdown, { onSelect: this.handleSelect, toggle: React.createElement(DropdownToggle, { onToggle: this.handleToggle }, this.getCurrentLabel()), isOpen: isPerspectiveOpen, dropdownItems: dropdownItems })));\n    }\n}\nconst Perspective = withTranslation()(PerspectiveBase);\nexport { Perspective };\n","import './overview.scss';\nimport { Button, ButtonVariant, Popover, Tab, TabContent, Tabs, TabTitleText, Title } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons/dist/js/icons/outlined-question-circle-icon';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport AwsCloudDashboard from 'pages/dashboard/awsCloudDashboard/awsCloudDashboard';\nimport AwsDashboard from 'pages/dashboard/awsDashboard/awsDashboard';\nimport AzureCloudDashboard from 'pages/dashboard/azureCloudDashboard/azureCloudDashboard';\nimport AzureDashboard from 'pages/dashboard/azureDashboard/azureDashboard';\nimport GcpDashboard from 'pages/dashboard/gcpDashboard/gcpDashboard';\nimport OcpCloudDashboard from 'pages/dashboard/ocpCloudDashboard/ocpCloudDashboard';\nimport OcpDashboard from 'pages/dashboard/ocpDashboard/ocpDashboard';\nimport OcpSupplementaryDashboard from 'pages/dashboard/ocpSupplementaryDashboard/ocpSupplementaryDashboard';\nimport OcpUsageDashboard from 'pages/dashboard/ocpUsageDashboard/ocpUsageDashboard';\nimport Loading from 'pages/state/loading';\nimport NoProviders from 'pages/state/noProviders';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsProvidersQuery, azureProvidersQuery, gcpProvidersQuery, ocpProvidersQuery, providersSelectors, } from 'store/providers';\nimport { hasAwsPermissions, hasAzurePermissions, hasEntitledPermissions, hasGcpPermissions, hasOcpPermissions, hasOrgAdminPermissions, } from 'utils/permissions';\nimport { styles } from './overview.styles';\nimport { Perspective } from './perspective';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"infrastructure\" /* infrastructure */:\n            return 'infrastructure';\n        case \"ocp\" /* ocp */:\n            return 'ocp';\n    }\n};\n// Ocp options\nconst ocpOptions = [\n    { label: 'overview.perspective.all', value: 'all' },\n    { label: 'overview.perspective.supplementary', value: 'supplementary' },\n];\n// Infrastructure all cloud options\nconst infrastructureAllCloudOptions = [{ label: 'overview.perspective.all_cloud', value: 'all_cloud' }];\n// Infrastructure AWS options\nconst infrastructureAwsOptions = [{ label: 'overview.perspective.aws', value: 'aws' }];\n// Infrastructure AWS cloud options\nconst infrastructureAwsCloudOptions = [{ label: 'overview.perspective.aws_cloud', value: 'aws_cloud' }];\n// Infrastructure Azure options\nconst infrastructureAzureOptions = [{ label: 'overview.perspective.azure', value: 'azure' }];\n// Infrastructure Azure cloud options\nconst infrastructureAzureCloudOptions = [{ label: 'overview.perspective.azure_cloud', value: 'azure_cloud' }];\n// Infrastructure GCP options\nconst infrastructureGcpOptions = [{ label: 'overview.perspective.gcp', value: 'gcp' }];\n// Infrastructure Ocp options\nconst infrastructureOcpOptions = [{ label: 'overview.perspective.ocp_usage', value: 'ocp_usage' }];\nconst getPermissions = async () => {\n    const isEntitled = await hasEntitledPermissions();\n    const isOrgAdmin = await hasOrgAdminPermissions();\n    const isAwsAccessAllowed = isEntitled && (isOrgAdmin || (await hasAwsPermissions()));\n    const isAzureAccessAllowed = isEntitled && (isOrgAdmin || (await hasAzurePermissions()));\n    const isGcpAccessAllowed = isEntitled && (isOrgAdmin || (await hasGcpPermissions()));\n    const isOcpAccessAllowed = isEntitled && (isOrgAdmin || (await hasOcpPermissions()));\n    return {\n        isAwsAccessAllowed,\n        isAzureAccessAllowed,\n        isGcpAccessAllowed,\n        isOcpAccessAllowed,\n    };\n};\nclass OverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            activeTabKey: 0,\n            isAwsAccessAllowed: false,\n            isAzureAccessAllowed: false,\n            isGcpAccessAllowed: false,\n            isOcpAccessAllowed: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getAvailableTabs = () => {\n            const availableTabs = [];\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isGcpAvailable = this.isGcpAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            const isOcpCloudAvailable = this.isOcpCloudAvailable();\n            if (isOcpAvailable) {\n                availableTabs.push({\n                    contentRef: React.createRef(),\n                    tab: \"ocp\" /* ocp */,\n                });\n            }\n            if (isAwsAvailable || isAzureAvailable || isGcpAvailable || isOcpCloudAvailable) {\n                availableTabs.push({\n                    contentRef: React.createRef(),\n                    tab: \"infrastructure\" /* infrastructure */,\n                });\n            }\n            return availableTabs;\n        };\n        this.getCurrentTab = () => {\n            const { activeTabKey } = this.state;\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isGcpAvailable = this.isGcpAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            const isOcpCloudAvailable = this.isOcpCloudAvailable();\n            const showOcpOnly = isOcpAvailable && !(isAwsAvailable || isAzureAvailable || isGcpAvailable || isOcpCloudAvailable);\n            const showInfrastructureOnly = !isOcpAvailable && (isAwsAvailable || isAzureAvailable || isGcpAvailable || isOcpCloudAvailable);\n            if (showOcpOnly) {\n                return \"ocp\" /* ocp */;\n            }\n            else if (showInfrastructureOnly) {\n                return \"infrastructure\" /* infrastructure */;\n            }\n            else {\n                return activeTabKey === 0 ? \"ocp\" /* ocp */ : \"infrastructure\" /* infrastructure */;\n            }\n        };\n        this.getDefaultInfrastructurePerspective = () => {\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isGcpAvailable = this.isGcpAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            if (isOcpAvailable) {\n                return \"all_cloud\" /* allCloud */;\n            }\n            if (isAwsAvailable) {\n                return \"aws\" /* aws */;\n            }\n            if (isAzureAvailable) {\n                return \"azure\" /* azure */;\n            }\n            if (isGcpAvailable) {\n                return \"gcp\" /* gcp */;\n            }\n            return undefined;\n        };\n        this.getDefaultOcpPerspective = () => {\n            const isOcpAvailable = this.isOcpAvailable();\n            if (isOcpAvailable) {\n                return \"all\" /* all */;\n            }\n            return undefined;\n        };\n        this.getPerspective = () => {\n            const { currentInfrastructurePerspective, currentOcpPerspective } = this.state;\n            const isAwsAvailable = this.isAwsAvailable();\n            const isAzureAvailable = this.isAzureAvailable();\n            const isGcpAvailable = this.isGcpAvailable();\n            const isOcpAvailable = this.isOcpAvailable();\n            if (!(isAwsAvailable || isAzureAvailable || isGcpAvailable || isOcpAvailable)) {\n                return null;\n            }\n            // Dynamically show options if providers are available\n            const options = [];\n            if (this.getCurrentTab() === \"infrastructure\" /* infrastructure */) {\n                if (isOcpAvailable) {\n                    options.push(...infrastructureAllCloudOptions);\n                }\n                if (isAwsAvailable) {\n                    options.push(...infrastructureAwsOptions);\n                }\n                if (isOcpAvailable && isAwsAvailable) {\n                    options.push(...infrastructureAwsCloudOptions);\n                }\n                if (isGcpAvailable) {\n                    options.push(...infrastructureGcpOptions);\n                }\n                if (isAzureAvailable) {\n                    options.push(...infrastructureAzureOptions);\n                }\n                if (isOcpAvailable && isAzureAvailable) {\n                    options.push(...infrastructureAzureCloudOptions);\n                }\n                if (isOcpAvailable) {\n                    options.push(...infrastructureOcpOptions);\n                }\n            }\n            else {\n                options.push(...ocpOptions);\n            }\n            const currentItem = this.getCurrentTab() === \"infrastructure\" /* infrastructure */ ? currentInfrastructurePerspective : currentOcpPerspective;\n            return (React.createElement(Perspective, { currentItem: currentItem || options[0].value, onItemClicked: this.handlePerspectiveClick, options: options }));\n        };\n        this.getTab = (tab, contentRef, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, tabContentId: `tab-${index}`, tabContentRef: contentRef, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) }));\n        };\n        this.getTabContent = (availableTabs) => {\n            return availableTabs.map((val, index) => {\n                return (React.createElement(TabContent, { eventKey: index, key: `${getIdKeyForTab(val.tab)}-tabContent`, id: `tab-${index}`, ref: val.contentRef }, this.getTabItem(val.tab, index)));\n            });\n        };\n        this.getTabItem = (tab, index) => {\n            const { activeTabKey, currentInfrastructurePerspective, currentOcpPerspective } = this.state;\n            const emptyTab = React.createElement(React.Fragment, null); // Lazily load tabs\n            if (activeTabKey !== index) {\n                return emptyTab;\n            }\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === \"infrastructure\" /* infrastructure */) {\n                if (currentInfrastructurePerspective === \"all_cloud\" /* allCloud */) {\n                    return React.createElement(OcpCloudDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"aws\" /* aws */) {\n                    return React.createElement(AwsDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"aws_cloud\" /* awsFiltered */) {\n                    return React.createElement(AwsCloudDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"gcp\" /* gcp */) {\n                    return React.createElement(GcpDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"azure\" /* azure */) {\n                    return React.createElement(AzureDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"azure_cloud\" /* azureCloud */) {\n                    return React.createElement(AzureCloudDashboard, null);\n                }\n                else if (currentInfrastructurePerspective === \"ocp_usage\" /* ocpUsage */) {\n                    return React.createElement(OcpUsageDashboard, null);\n                }\n                else {\n                    return React.createElement(OcpCloudDashboard, null); // default\n                }\n            }\n            else if (currentTab === \"ocp\" /* ocp */) {\n                if (currentOcpPerspective === \"all\" /* all */) {\n                    return React.createElement(OcpDashboard, null);\n                }\n                else if (currentOcpPerspective === \"supplementary\" /* supplementary */) {\n                    return React.createElement(OcpSupplementaryDashboard, null);\n                }\n                else {\n                    return React.createElement(OcpDashboard, null); // default\n                }\n            }\n            else {\n                return emptyTab;\n            }\n        };\n        this.getTabs = (availableTabs) => {\n            const { activeTabKey } = this.state;\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((val, index) => this.getTab(val.tab, val.contentRef, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            if (tab === \"infrastructure\" /* infrastructure */) {\n                return t('overview.infrastructure');\n            }\n            else if (tab === \"ocp\" /* ocp */) {\n                return t('overview.ocp');\n            }\n        };\n        this.handlePerspectiveClick = (value) => {\n            const currentTab = this.getCurrentTab();\n            this.setState(Object.assign(Object.assign({}, (currentTab === \"infrastructure\" /* infrastructure */ && {\n                currentInfrastructurePerspective: value,\n            })), (currentTab === \"ocp\" /* ocp */ && { currentOcpPerspective: value })));\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { activeTabKey } = this.state;\n            if (activeTabKey !== tabIndex) {\n                this.setState({\n                    activeTabKey: tabIndex,\n                });\n            }\n        };\n        this.isAwsAvailable = () => {\n            const { awsProviders } = this.props;\n            const { isAwsAccessAllowed } = this.state;\n            return (\n            // API returns empty data array for no sources\n            isAwsAccessAllowed && awsProviders !== undefined && awsProviders.meta !== undefined && awsProviders.meta.count > 0);\n        };\n        this.isAzureAvailable = () => {\n            const { azureProviders } = this.props;\n            const { isAzureAccessAllowed } = this.state;\n            return (\n            // API returns empty data array for no sources\n            isAzureAccessAllowed &&\n                azureProviders !== undefined &&\n                azureProviders.meta !== undefined &&\n                azureProviders.meta.count > 0);\n        };\n        this.isGcpAvailable = () => {\n            const { gcpProviders } = this.props;\n            const { isGcpAccessAllowed } = this.state;\n            return (\n            // API returns empty data array for no sources\n            isGcpAccessAllowed && gcpProviders !== undefined && gcpProviders.meta !== undefined && gcpProviders.meta.count > 0);\n        };\n        this.isOcpAvailable = () => {\n            const { ocpProviders } = this.props;\n            const { isOcpAccessAllowed } = this.state;\n            return (\n            // API returns empty data array for no sources\n            isOcpAccessAllowed && ocpProviders !== undefined && ocpProviders.meta !== undefined && ocpProviders.meta.count > 0);\n        };\n        this.isOcpCloudAvailable = () => {\n            return this.isAwsAvailable() && this.isOcpAvailable();\n        };\n    }\n    componentDidMount() {\n        getPermissions().then(({ isAwsAccessAllowed, isAzureAccessAllowed, isGcpAccessAllowed, isOcpAccessAllowed }) => {\n            this.setState({\n                currentInfrastructurePerspective: this.getDefaultInfrastructurePerspective(),\n                currentOcpPerspective: this.getDefaultOcpPerspective(),\n                isAwsAccessAllowed,\n                isAzureAccessAllowed,\n                isGcpAccessAllowed,\n                isOcpAccessAllowed,\n            });\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { awsProviders, azureProviders, gcpProviders, ocpProviders } = this.props;\n        if (prevProps.awsProviders !== awsProviders ||\n            prevProps.azureProviders !== azureProviders ||\n            prevProps.gcpProviders !== gcpProviders ||\n            prevProps.ocpProviders !== ocpProviders) {\n            this.setState({\n                currentInfrastructurePerspective: this.getDefaultInfrastructurePerspective(),\n                currentOcpPerspective: this.getDefaultOcpPerspective(),\n            });\n        }\n    }\n    render() {\n        const { awsProvidersFetchStatus, azureProvidersFetchStatus, gcpProvidersFetchStatus, ocpProvidersFetchStatus, t, } = this.props;\n        const availableTabs = this.getAvailableTabs();\n        const isLoading = awsProvidersFetchStatus === 1 /* inProgress */ ||\n            azureProvidersFetchStatus === 1 /* inProgress */ ||\n            gcpProvidersFetchStatus === 1 /* inProgress */ ||\n            ocpProvidersFetchStatus === 1 /* inProgress */;\n        // Test for no providers\n        const noAwsProviders = !this.isAwsAvailable() && awsProvidersFetchStatus === 2 /* complete */;\n        const noAzureProviders = !this.isAzureAvailable() && azureProvidersFetchStatus === 2 /* complete */;\n        const noGcpProviders = !this.isGcpAvailable() && gcpProvidersFetchStatus === 2 /* complete */;\n        const noOcpProviders = !this.isOcpAvailable() && ocpProvidersFetchStatus === 2 /* complete */;\n        const noProviders = noAwsProviders && noAzureProviders && noGcpProviders && noOcpProviders;\n        const title = t('navigation.overview');\n        if (noProviders) {\n            return React.createElement(NoProviders, { title: title });\n        }\n        else if (isLoading) {\n            return React.createElement(Loading, { title: title });\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"section\", { className: `pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light headerOverride}` },\n                React.createElement(\"header\", { className: \"pf-u-display-flex pf-u-justify-content-space-between pf-u-align-items-center\" },\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"2xl\" },\n                        t('overview.title'),\n                        React.createElement(\"span\", { style: styles.infoIcon },\n                            React.createElement(Popover, { \"aria-label\": t('ocp_details.supplementary_aria_label'), enableFlip: true, bodyContent: React.createElement(React.Fragment, null,\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.ocp_cloud')),\n                                    React.createElement(\"p\", null, t('overview.ocp_cloud_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.ocp')),\n                                    React.createElement(\"p\", null, t('overview.ocp_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.gcp')),\n                                    React.createElement(\"p\", null, t('overview.gcp_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.aws')),\n                                    React.createElement(\"p\", null, t('overview.aws_desc')),\n                                    React.createElement(\"br\", null),\n                                    React.createElement(\"p\", { style: styles.infoTitle }, t('overview.azure')),\n                                    React.createElement(\"p\", null, t('overview.azure_desc'))) },\n                                React.createElement(Button, { variant: ButtonVariant.plain },\n                                    React.createElement(OutlinedQuestionCircleIcon, null)))))),\n                React.createElement(\"div\", { style: styles.tabs }, this.getTabs(availableTabs)),\n                React.createElement(\"div\", { style: styles.perspective }, this.getPerspective())),\n            React.createElement(\"section\", { className: \"pf-l-page__main-section pf-c-page__main-section\", \"page-type\": \"cost-management-overview\" }, this.getTabContent(availableTabs))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const awsProvidersQueryString = getProvidersQuery(awsProvidersQuery);\n    const awsProviders = providersSelectors.selectProviders(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const awsProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const azureProvidersQueryString = getProvidersQuery(azureProvidersQuery);\n    const azureProviders = providersSelectors.selectProviders(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const azureProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const gcpProvidersQueryString = getProvidersQuery(gcpProvidersQuery);\n    const gcpProviders = providersSelectors.selectProviders(state, \"gcp\" /* gcp */, gcpProvidersQueryString);\n    const gcpProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"gcp\" /* gcp */, gcpProvidersQueryString);\n    const ocpProvidersQueryString = getProvidersQuery(ocpProvidersQuery);\n    const ocpProviders = providersSelectors.selectProviders(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    const ocpProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    return {\n        awsProviders,\n        awsProvidersFetchStatus,\n        awsProvidersQueryString,\n        azureProviders,\n        azureProvidersFetchStatus,\n        azureProvidersQueryString,\n        gcpProviders,\n        gcpProvidersFetchStatus,\n        gcpProvidersQueryString,\n        ocpProviders,\n        ocpProvidersFetchStatus,\n        ocpProvidersQueryString,\n    };\n});\nconst Overview = withTranslation()(connect(mapStateToProps)(OverviewBase));\nexport default Overview;\n","import Overview from './overview';\nexport default Overview;\n","export const unitLookupKey = unit => {\n    const lookup = unit ? unit.toLowerCase() : '';\n    switch (lookup) {\n        case 'usd':\n        case 'gb':\n        case 'gb-hours':\n        case 'gb-mo':\n        case 'core-hours':\n        case 'hrs':\n        case 'tag-mo':\n        case 'vm-hours':\n            return lookup;\n        default:\n            return '';\n    }\n};\nexport const formatValue = (value, unit, options = {}) => {\n    const lookup = unitLookupKey(unit);\n    const fValue = value || 0;\n    switch (lookup) {\n        case 'usd':\n            return formatCurrency(fValue, lookup, options);\n        case 'gb':\n        case 'gb-hours':\n        case 'gb-mo':\n        case 'tag-mo':\n        case 'vm-hours':\n            return formatUsageGb(fValue, lookup, options);\n        case 'core-hours':\n        case 'hrs':\n            return formatUsageHrs(fValue, lookup, options);\n        default:\n            return unknownTypeFormatter(fValue, lookup, options);\n    }\n};\nconst unknownTypeFormatter = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatCurrency = (value, unit, { fractionDigits = 2 } = {}) => {\n    let fValue = value;\n    if (!value) {\n        fValue = 0;\n    }\n    return fValue.toLocaleString('en', {\n        style: 'currency',\n        currency: unit || 'USD',\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatUsageGb = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatUsageHrs = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\n","import { sort } from 'utils/sort';\nexport function getComputedForecastItems({ forecast, idKey, sortDirection = 0 /* asc */, sortKey = 'date', }) {\n    return sort(getUnsortedComputedForecastItems({\n        forecast,\n        idKey,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nexport function getUnsortedComputedForecastItems({ forecast, idKey, }) {\n    if (!forecast) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint && dataPoint.values) {\n            dataPoint.values.forEach((val) => {\n                const _val = val[idKey];\n                const date = val.date;\n                const confidence_max = _val.confidence_max ? _val.confidence_max.value : 0;\n                const confidence_min = _val.confidence_min ? _val.confidence_min.value : 0;\n                const rsquared = _val.rsquared ? Number(_val.rsquared.value) : undefined;\n                const pvalues = _val.pvalues ? Number(_val.pvalues.value) : undefined;\n                const total = _val.total ? _val.total.value : 0;\n                const units = _val.total ? _val.total.units : 'USD';\n                const item = itemMap.get(date);\n                if (item) {\n                    itemMap.set(date, Object.assign(Object.assign({}, item), { confidence_max: item.confidence_max + confidence_max, confidence_min: item.confidence_min + confidence_min, date,\n                        rsquared,\n                        pvalues, total: item.total + total, units }));\n                }\n                else {\n                    itemMap.set(date, {\n                        confidence_max,\n                        confidence_min,\n                        date,\n                        rsquared,\n                        pvalues,\n                        total,\n                        units,\n                    });\n                }\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (forecast && forecast.data) {\n        forecast.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\n","import endOfMonth from 'date-fns/end_of_month';\nimport format from 'date-fns/format';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getYear from 'date-fns/get_year';\nimport startOfMonth from 'date-fns/start_of_month';\nimport i18next from 'i18next';\nimport { getComputedForecastItems } from 'utils/computedForecast/getComputedForecastItems';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { unitLookupKey } from 'utils/formatValue';\nexport function transformForecast(forecast, type = 1 /* daily */, key = 'cost') {\n    if (!forecast) {\n        return [];\n    }\n    const items = {\n        idKey: key,\n        forecast,\n        sortKey: 'date',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedForecastItems(items);\n    let result;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        result = computedItems.map(i => createForecastDatum(i.total, i));\n    }\n    else {\n        result = computedItems.reduce((acc, d) => {\n            const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n            return [...acc, createForecastDatum(prevValue + d.total, d)];\n        }, []);\n    }\n    return result;\n}\nexport function transformForecastCone(forecast, type = 1 /* daily */, key = 'cost') {\n    if (!forecast) {\n        return [];\n    }\n    const items = {\n        idKey: key,\n        forecast,\n        sortKey: 'date',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedForecastItems(items);\n    let result;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        result = computedItems.map(i => createForecastConeDatum(i.confidence_max, i.confidence_min, i));\n    }\n    else {\n        result = computedItems.reduce((acc, d) => {\n            const prevMaxValue = acc.length ? acc[acc.length - 1].y : d.total;\n            const prevMinValue = acc.length ? acc[acc.length - 1].y0 : d.total;\n            return [...acc, createForecastConeDatum(prevMaxValue + d.confidence_max, prevMinValue + d.confidence_min, d)];\n        }, []);\n    }\n    return result;\n}\nexport function transformReport(report, type = 1 /* daily */, key = 'date', reportItem = 'cost', reportItemValue = 'total') {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        idKey: key,\n        report,\n        reportItemValue,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedReportItems(items);\n    let result;\n    if (type === 1 /* daily */ || type === 2 /* monthly */) {\n        result = computedItems.map(i => createReportDatum(i[reportItem], i, key, reportItem));\n    }\n    else {\n        result = computedItems.reduce((acc, d) => {\n            const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n            return [...acc, createReportDatum(prevValue + d[reportItem], d, key, reportItem)];\n        }, []);\n    }\n    return key === 'date' ? padComputedReportItems(result) : result;\n}\nexport function createForecastDatum(value, computedItem) {\n    const xVal = getDate(computedItem.date);\n    const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n    return {\n        x: xVal,\n        y: value === null ? null : yVal,\n        key: computedItem.date,\n        units: computedItem.units,\n    };\n}\nexport function createForecastConeDatum(maxValue, minValue, computedItem) {\n    const xVal = getDate(computedItem.date);\n    const yVal = isFloat(maxValue) ? parseFloat(maxValue.toFixed(2)) : isInt(maxValue) ? maxValue : 0;\n    const y0Val = isFloat(minValue) ? parseFloat(minValue.toFixed(2)) : isInt(minValue) ? minValue : 0;\n    return {\n        x: xVal,\n        y: maxValue === null ? null : yVal,\n        y0: minValue === null ? null : y0Val,\n        key: computedItem.date,\n        units: computedItem.units,\n    };\n}\nexport function createReportDatum(value, computedItem, idKey = 'date', reportItem = 'cost') {\n    const xVal = idKey === 'date' ? getDate(computedItem.id) : computedItem.label;\n    const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n    return {\n        x: xVal,\n        y: value === null ? null : yVal,\n        key: computedItem.id,\n        units: computedItem.units ? computedItem.units[reportItem] : undefined,\n    };\n}\n// This pads computed report items with null datum objects, representing missing data at the begining and end of the\n// data series. The remaining data is left as is to allow for extrapolation. This allows us to display a \"no data\"\n// message in the tooltip, which helps distinguish between zero values and when there is no data available.\nexport function padComputedReportItems(datums) {\n    const result = [];\n    if (!datums || datums.length === 0) {\n        return result;\n    }\n    const firstDate = new Date(datums[0].key + 'T00:00:00');\n    const lastDate = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    // Pad start for missing data\n    let padDate = startOfMonth(firstDate);\n    for (let i = padDate.getDate(); i < firstDate.getDate(); i++) {\n        padDate.setDate(i);\n        const id = formatDate(padDate, 'YYYY-MM-DD');\n        result.push(createReportDatum(null, { id }, 'date', null));\n    }\n    // Fill middle with existing data\n    result.push(...datums);\n    // Pad end for missing data\n    padDate = new Date(lastDate);\n    for (let i = padDate.getDate() + 1; i <= endOfMonth(lastDate).getDate(); i++) {\n        padDate.setDate(i);\n        const id = formatDate(padDate, 'YYYY-MM-DD');\n        result.push(createReportDatum(null, { id }, 'date', null));\n    }\n    return result;\n}\nexport function getDatumDateRange(datums, offset = 0) {\n    if (!(datums && datums.length)) {\n        const today = new Date();\n        // If datums is empty, obtain the month based on offset (e.g., to show previous month in chart legends)\n        if (offset) {\n            today.setMonth(today.getMonth() - offset);\n        }\n        const firstOfMonth = startOfMonth(today);\n        return [firstOfMonth, today];\n    }\n    const start = new Date(datums[0].key + 'T00:00:00');\n    const end = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    return [start, end];\n}\nexport function getDateRange(datums, firstOfMonth = true, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDatumDateRange(datums, offset);\n    // Show the date range we are trying to cover (i.e., days 1-30/31)\n    if (firstOfMonth && start.setDate) {\n        start.setDate(1);\n    }\n    if (lastOfMonth && start.setDate) {\n        const lastDate = endOfMonth(start).getDate();\n        end.setDate(lastDate);\n    }\n    return [start, end];\n}\nexport function getDateRangeString(datums, firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(`chart.date_range`, {\n        count: getDate(end),\n        endDate: formatDate(end, 'DD'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'DD'),\n        year: getYear(end),\n    });\n}\nexport function getMonthRangeString(datums, key = 'chart.month_legend_label', offset = 0) {\n    const [start, end] = getDateRange(datums, true, false, offset);\n    return [\n        i18next.t(key, {\n            month: Number(formatDate(start, 'M')) - 1,\n        }),\n        i18next.t(key, {\n            month: Number(formatDate(end, 'M')) - 1,\n        }),\n    ];\n}\nexport function getMaxValue(datums) {\n    let max = 0;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            if (datum.y > max) {\n                max = datum.y;\n            }\n        });\n    }\n    return max;\n}\nexport function getTooltipContent(formatValue) {\n    return function labelFormatter(value, unit = null, options = {}) {\n        const lookup = unitLookupKey(unit);\n        switch (lookup) {\n            case 'core-hours':\n            case 'hrs':\n            case 'gb':\n            case 'gb-hours':\n            case 'gb-mo':\n            case 'vm-hours':\n                return i18next.t(`unit_tooltips.${lookup}`, {\n                    value: `${formatValue(value, unit, options)}`,\n                });\n            default:\n                return `${formatValue(value, unit, options)}`;\n        }\n    };\n}\nexport function getTooltipLabel(datum, formatValue, formatOptions, idKey = 'date', units) {\n    if (!datum.key) {\n        return '';\n    }\n    if (idKey === 'date') {\n        const date = format(datum.key, 'DD MMM YYYY');\n        return `${date} ${formatValue(datum.y, units ? units : datum.units, formatOptions)}`;\n    }\n    return datum.key.toString();\n}\nexport function getCostRangeString(datums, key = 'chart.cost_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(key, {\n        count: getDate(end),\n        endDate: formatDate(end, 'D'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'D'),\n        year: getYear(end),\n    });\n}\nexport function getUsageRangeString(datums, key = 'chart.usage_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    return getCostRangeString(datums, key, firstOfMonth, lastOfMonth, offset);\n}\nfunction isInt(n) {\n    return Number(n) === n && n % 1 === 0;\n}\nfunction isFloat(n) {\n    return Number(n) === n && n % 1 !== 0;\n}\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./charts-common.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./charts-common.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./charts-common.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Layout\nconst LAYOUT_PROPS = {\n    padding: 8,\n};\n// Victory theme properties only\nexport default {\n    area: Object.assign({}, LAYOUT_PROPS),\n    axis: Object.assign({}, LAYOUT_PROPS),\n    bar: Object.assign({}, LAYOUT_PROPS),\n    boxplot: Object.assign({}, LAYOUT_PROPS),\n    candlestick: Object.assign({}, LAYOUT_PROPS),\n    chart: Object.assign({}, LAYOUT_PROPS),\n    errorbar: Object.assign({}, LAYOUT_PROPS),\n    group: Object.assign({}, LAYOUT_PROPS),\n    legend: {},\n    line: Object.assign({}, LAYOUT_PROPS),\n    pie: Object.assign({}, LAYOUT_PROPS),\n    scatter: Object.assign({}, LAYOUT_PROPS),\n    stack: Object.assign({}, LAYOUT_PROPS),\n    tooltip: {},\n    voronoi: Object.assign({}, LAYOUT_PROPS),\n};\n","import getTheme from './theme-utils';\nconst ChartTheme = getTheme();\nexport default ChartTheme;\n","import { ChartThemeColor, ChartThemeVariant, getCustomTheme } from '@patternfly/react-charts';\nimport { default as ChartTheme } from './theme-koku';\n// Applies theme color and variant to base theme\nconst getTheme = () => getCustomTheme(ChartThemeColor.default, ChartThemeVariant.default, ChartTheme);\nexport default getTheme;\n","import { sort } from 'utils/sort';\nimport { getItemLabel } from './getItemLabel';\nexport function getComputedReportItems({ idKey, labelKey = idKey, report, reportItemValue = 'total', sortDirection = 0 /* asc */, sortKey = 'cost', }) {\n    return sort(getUnsortedComputedReportItems({\n        idKey,\n        labelKey,\n        report,\n        reportItemValue,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nexport function getUnsortedComputedReportItems({ report, idKey, labelKey = idKey, reportItemValue = 'total', }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint && dataPoint.values) {\n            const type = dataPoint.type;\n            dataPoint.values.forEach((val) => {\n                // Ensure unique map IDs -- https://github.com/project-koku/koku-ui/issues/706\n                const idSuffix = idKey !== 'date' && idKey !== 'cluster' && val.cluster ? `-${val.cluster}` : '';\n                // org_unit_id workaround for storage and instance-type APIs\n                let id = idKey === 'org_entities' ? val.org_unit_id : val[idKey];\n                if (id === undefined) {\n                    id = val.id;\n                }\n                const mapId = `${id}${idSuffix}`;\n                // clusters will either contain the cluster alias or default to cluster ID\n                const cluster_alias = val.clusters && val.clusters.length > 0 ? val.clusters[0] : undefined;\n                const cluster = cluster_alias || val.cluster;\n                const clusters = val.clusters ? val.clusters : [];\n                const capacity = val.capacity ? val.capacity.value : 0;\n                const cost = val.cost && val.cost.total ? val.cost.total.value : 0;\n                const deltaPercent = val.delta_percent ? val.delta_percent : 0;\n                const deltaValue = val.delta_value ? val.delta_value : 0;\n                const source_uuid = val.source_uuid ? val.source_uuid : [];\n                const supplementary = val.supplementary && val.supplementary.total ? val.supplementary.total.value : 0;\n                const infrastructure = val.infrastructure && val.infrastructure[reportItemValue] ? val.infrastructure[reportItemValue].value : 0;\n                let label;\n                const itemLabelKey = getItemLabel({ report, labelKey, value: val });\n                if (itemLabelKey === 'org_entities' && val.alias) {\n                    label = val.alias;\n                }\n                else if (itemLabelKey === 'account' && val.account_alias) {\n                    label = val.account_alias;\n                }\n                else if (itemLabelKey === 'cluster' && cluster_alias) {\n                    label = cluster_alias;\n                }\n                else if (val[itemLabelKey] instanceof Object) {\n                    label = val[itemLabelKey].value;\n                }\n                else {\n                    label = val[itemLabelKey];\n                }\n                if (label === undefined) {\n                    label = val.alias ? val.alias : val.id;\n                }\n                const limit = val.limit ? val.limit.value : 0;\n                const request = val.request ? val.request.value : 0;\n                const usage = val.usage ? val.usage.value : 0;\n                const units = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, (val.capacity && { capacity: val.capacity.units })), { cost: val.cost && val.cost.total ? val.cost.total.units : 'USD' }), (val.limit && { limit: val.limit.units })), (val.infrastructure &&\n                    val.infrastructure.total && {\n                    infrastructure: val.infrastructure.total.units,\n                })), (val.request && { request: val.request.units })), (val.supplementary &&\n                    val.supplementary.total && {\n                    supplementary: val.supplementary.total.units,\n                })), (val.usage && { usage: val.usage.units }));\n                const item = itemMap.get(mapId);\n                if (item) {\n                    itemMap.set(mapId, Object.assign(Object.assign({}, item), { capacity: item.capacity + capacity, cost: item.cost + cost, supplementary: item.supplementary + supplementary, infrastructure: item.infrastructure + infrastructure, limit: item.limit + limit, request: item.request + request, usage: item.usage + usage }));\n                }\n                else {\n                    itemMap.set(mapId, {\n                        capacity,\n                        cluster,\n                        clusters,\n                        cost,\n                        deltaPercent,\n                        deltaValue,\n                        source_uuid,\n                        supplementary,\n                        id,\n                        infrastructure,\n                        label,\n                        limit,\n                        request,\n                        type,\n                        units,\n                        usage,\n                    });\n                }\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\n","import { tagPrefix } from 'api/queries/query';\nexport function getItemLabel({ report, labelKey, value }) {\n    let itemLabelKey = String(labelKey);\n    if (report.meta && report.meta.group_by) {\n        const group_by = report.meta.group_by;\n        for (const key of Object.keys(group_by)) {\n            if (key.indexOf(tagPrefix)) {\n                const tagPrefixKey = tagPrefix + labelKey;\n                if (value.hasOwnProperty(tagPrefixKey)) {\n                    itemLabelKey = tagPrefixKey;\n                }\n            }\n        }\n    }\n    return itemLabelKey;\n}\n","import { EmptyState, EmptyStateBody, EmptyStateVariant, Spinner, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst LoadingStateBase = ({ t }) => {\n    const title = t('loading_state.sources_title');\n    const subTitle = t('loading_state.sources_desc');\n    return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n        React.createElement(Spinner, { size: \"lg\" }),\n        React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, title),\n        React.createElement(EmptyStateBody, null, subTitle)));\n};\nconst LoadingState = withTranslation()(LoadingStateBase);\nexport { LoadingState };\n","import { parse, stringify } from 'qs';\nexport function getProvidersQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseProvidersQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","function getValueForItem(item, options) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    const sortKey = options.key;\n    return item[sortKey];\n}\nexport function sort(array, options) {\n    const { direction = 0 /* asc */ } = options || {};\n    return [...array].sort((a, b) => {\n        const aVal = direction === 0 /* asc */ ? getValueForItem(a, options) : getValueForItem(b, options);\n        const bVal = direction === 0 /* asc */ ? getValueForItem(b, options) : getValueForItem(a, options);\n        if (aVal > bVal) {\n            return -1;\n        }\n        if (aVal < bVal) {\n            return 1;\n        }\n        return 0;\n    });\n}\n","import './emptyValueState.scss';\nimport { MinusIcon } from '@patternfly/react-icons/dist/js/icons/minus-icon';\nimport React from 'react';\nexport const EmptyValueState = () => {\n    return (React.createElement(\"span\", { className: \"emptyValueContainer\" },\n        React.createElement(MinusIcon, null)));\n};\n","import './reportSummary.scss';\nimport { Card, CardBody, CardFooter, CardTitle, Title } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst ReportSummaryBase = ({ children, detailsLink, title, subTitle, status }) => (React.createElement(Card, { className: \"reportSummary\" },\n    React.createElement(CardTitle, null,\n        React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: \"subtitle\" }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { size: \"xs\" }),\n        React.createElement(Skeleton, { className: \"chartSkeleton\", size: \"md\" }),\n        React.createElement(Skeleton, { size: \"sm\" }),\n        React.createElement(Skeleton, { className: \"legendSkeleton\", size: \"xs\" }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst ReportSummary = withTranslation()(ReportSummaryBase);\nexport { ReportSummary };\n","import './reportSummaryAlt.scss';\nimport { Card, CardBody, CardFooter, CardTitle, Grid, GridItem, Title } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst OcpCloudReportSummaryAltBase = ({ children, detailsLink, status, subTitle, tabs, title, }) => (React.createElement(Card, { className: \"reportSummary\" },\n    React.createElement(Grid, { hasGutter: true },\n        React.createElement(GridItem, { xl: 8 },\n            React.createElement(\"div\", { className: \"cost\" },\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, title),\n                    Boolean(subTitle) && React.createElement(\"p\", { className: \"subtitle\" }, subTitle)),\n                React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { size: \"xs\" }),\n                    React.createElement(Skeleton, { className: \"chartSkeleton\", size: \"md\" }),\n                    React.createElement(Skeleton, { size: \"sm\" }),\n                    React.createElement(Skeleton, { className: \"legendSkeleton\", size: \"xs\" }))) : (children)))),\n        React.createElement(GridItem, { xl: 4 },\n            React.createElement(\"div\", { className: \"tops\" }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink))))))));\nconst ReportSummaryAlt = withTranslation()(OcpCloudReportSummaryAltBase);\nexport { ReportSummaryAlt };\n","import './reportSummaryDetails.scss';\nimport { Tooltip } from '@patternfly/react-core';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nconst ReportSummaryDetailsBase = ({ chartType, computedReportItem = 'cost', computedReportItemValue = 'total', costLabel, formatValue, formatOptions, report, requestFormatOptions, requestLabel, showTooltip = false, showUnits = false, showUsageFirst = false, t, units, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let supplementaryCost = React.createElement(EmptyValueState, null);\n    let infrastructureCost = React.createElement(EmptyValueState, null);\n    let request = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    const hasTotal = report && report.meta && report.meta.total;\n    const hasCost = hasTotal && report.meta.total.cost && report.meta.total.cost.total;\n    const hasCount = hasTotal && report.meta.total.count;\n    const hasSupplementaryCost = hasTotal &&\n        report.meta.total.supplementary &&\n        report.meta.total.supplementary.total &&\n        report.meta.total.supplementary.total.value;\n    const hasInfrastructureCost = hasTotal &&\n        report.meta.total.infrastructure &&\n        report.meta.total.infrastructure[computedReportItemValue] &&\n        report.meta.total.infrastructure[computedReportItemValue].value;\n    const hasRequest = hasTotal && report.meta.total.request;\n    const hasUsage = hasTotal && report.meta.total.usage;\n    if (hasTotal) {\n        cost = formatValue(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD', formatOptions);\n        supplementaryCost = formatValue(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost ? report.meta.total.supplementary.total.units : 'USD', formatOptions);\n        infrastructureCost = formatValue(hasInfrastructureCost ? report.meta.total.infrastructure[computedReportItemValue].value : 0, hasInfrastructureCost ? report.meta.total.infrastructure[computedReportItemValue].units : 'USD', formatOptions);\n        request = formatValue(hasRequest ? report.meta.total.request.value : 0, hasRequest ? report.meta.total.request.units : '', requestFormatOptions ? usageFormatOptions : formatOptions);\n        if (hasUsage && report.meta.total.usage.value >= 0) {\n            usage = formatValue(hasUsage ? report.meta.total.usage.value : 0, hasUsage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n        else {\n            // Workaround for https://github.com/project-koku/koku-ui/issues/1058\n            usage = formatValue(hasUsage ? report.meta.total.usage : 0, hasCount ? report.meta.total.count.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n    }\n    const getCostLayout = (showAltHeroFont = false) => {\n        let value = cost;\n        if (computedReportItem === \"infrastructure\" /* infrastructure */) {\n            value = infrastructureCost;\n        }\n        else if (computedReportItem === \"supplementary\" /* supplementary */) {\n            value = supplementaryCost;\n        }\n        const altHeroFont = showAltHeroFont ? 'Alt' : '';\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            showTooltip ? (React.createElement(Tooltip, { content: t('dashboard.total_cost_tooltip', {\n                    infrastructureCost,\n                    supplementaryCost,\n                }), enableFlip: true },\n                React.createElement(\"div\", { className: `value${altHeroFont}` }, value))) : (React.createElement(\"div\", { className: `value${altHeroFont}` }, value)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, costLabel))));\n    };\n    const getRequestLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasRequest ? report.meta.total.request.units : '';\n        const _units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            React.createElement(\"span\", { className: \"value\" }, request),\n            Boolean(showUnits && (units || (hasRequest && report.meta.total.request.value >= 0))) && (React.createElement(\"span\", { className: \"units\" }, unitsLabel)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, requestLabel))));\n    };\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasUsage ? report.meta.total.usage.units : '';\n        // added as a work-around for azure #1079\n        const _units = unitLookupKey(units ? units : usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: \"valueContainer\" },\n            React.createElement(\"span\", { className: \"value\" }, usage),\n            Boolean(showUnits && (units || (hasUsage && report.meta.total.usage.value >= 0))) && (React.createElement(\"span\", { className: \"units\" }, unitsLabel)),\n            React.createElement(\"div\", { className: \"text\" },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (chartType === \"cost\" /* cost */ || chartType === \"supplementary\" /* supplementary */) {\n        return React.createElement(React.Fragment, null, getCostLayout(true));\n    }\n    else if (chartType === \"trend\" /* trend */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getCostLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getCostLayout(),\n            getUsageLayout()));\n    }\n    else if (chartType === \"usage\" /* usage */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getRequestLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getRequestLayout(),\n            getUsageLayout()));\n    }\n    else {\n        return null;\n    }\n};\nconst ReportSummaryDetails = withTranslation()(ReportSummaryDetailsBase);\nexport { ReportSummaryDetails };\n","import './reportSummaryItem.scss';\nimport { Progress, ProgressSize } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nconst ReportSummaryItemBase = ({ label, formatOptions, formatValue, t, totalValue, units, value, }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: \"reportSummaryItem\" },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst ReportSummaryItem = withTranslation()(ReportSummaryItemBase);\nexport { ReportSummaryItem };\n","import './reportSummaryItems.scss';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { getComputedReportItems, } from 'utils/computedReport/getComputedReportItems';\nclass ReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { computedReportItemValue = 'total', idKey, labelKey, report } = this.props;\n        const computedItems = getComputedReportItems({\n            report,\n            idKey,\n            labelKey,\n            reportItemValue: computedReportItemValue,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [...computedItems.slice(0, otherIndex), ...computedItems.slice(otherIndex + 1), computedItems[otherIndex]];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: \"md\" }),\n                React.createElement(Skeleton, { size: \"md\", className: \"skeleton\" }),\n                React.createElement(Skeleton, { size: \"md\", className: \"skeleton\" }),\n                React.createElement(Skeleton, { size: \"md\", className: \"skeleton\" })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst ReportSummaryItems = withTranslation()(ReportSummaryItemsBase);\nexport { ReportSummaryItems };\n","import { chart_color_black_200 } from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentCostData: {\n        fill: 'none',\n    },\n    currentInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    forecastCostData: {\n        fill: 'orange',\n    },\n    itemsPerRow: 2,\n    previousCostData: {\n        fill: 'none',\n    },\n    previousInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange, getMaxValue, getTooltipContent } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './costChart.styles';\nclass CostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentInfrastructureCostData, currentCostData, forecastCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            const costInfrastructureTooltipKey = 'chart.cost_infrastructure_legend_tooltip';\n            const costTooltipKey = 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousCostData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentCostData, costTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentCostData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'previousInfrastructureCost',\n                    data: previousInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(previousInfrastructureCostData, costInfrastructureTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousInfrastructureCostData), { stroke: chartStyles.previousColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'currentInfrastructureCost',\n                    data: currentInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(currentInfrastructureCostData, costInfrastructureTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentInfrastructureCostData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n            ];\n            if (forecastCostData) {\n                series.push({\n                    childName: 'forecastCost',\n                    data: forecastCostData,\n                    isForecast: true,\n                    legendItem: {\n                        name: getCostRangeString(forecastCostData, costKey, true, false),\n                        symbol: {\n                            fill: chartStyles.forecastCostData[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastCostData, costTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastCostData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                });\n            }\n            this.setState({ series });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            // Todo: Return forecast and cone of confidence\n            if (series.isForecast) {\n                return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n            }\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getContainer = () => {\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.isDataAvailable() ? this.getTooltipLabel : undefined, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData(true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 450 ? chartStyles.itemsPerRow : 1;\n            return React.createElement(ChartLegend, { height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\", responsive: false });\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            return datum.y !== null ? formatter(datum.y, datum.units, formatDatumOptions) : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map(serie => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = (tooltip = false) => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    const data = Object.assign(Object.assign(Object.assign({ childName: s.childName }, s.legendItem), (tooltip && { name: s.legendItem.tooltip })), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                    return data;\n                });\n                return result;\n            }\n            return undefined;\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentInfrastructureCostData !== this.props.currentInfrastructureCostData ||\n            prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.forecastCostData !== this.props.forecastCostData ||\n            prevProps.previousInfrastructureCostData !== this.props.previousInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { currentInfrastructureCostData, currentCostData, forecastCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentInfrastructure = currentInfrastructureCostData ? getMaxValue(currentInfrastructureCostData) : 0;\n        const maxCurrentCost = currentCostData ? getMaxValue(currentCostData) : 0;\n        const maxForecastCost = forecastCostData ? getMaxValue(forecastCostData) : 0;\n        const maxPreviousInfrastructure = previousInfrastructureCostData ? getMaxValue(previousInfrastructureCostData) : 0;\n        const maxPreviousUsage = previousCostData ? getMaxValue(previousCostData) : 0;\n        const maxValue = Math.max(maxCurrentInfrastructure, maxCurrentCost, maxForecastCost, maxPreviousInfrastructure, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, currentCostData, forecastCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const currentInfrastructureDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const currentCostDate = currentCostData ? getDate(getDateRange(currentCostData, true, true)[1]) : 0;\n        const forecastCostDate = forecastCostData ? getDate(getDateRange(forecastCostData, true, true)[1]) : 0;\n        const previousInfrastructureDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousCostData ? getDate(getDateRange(previousCostData, true, true)[1]) : 0;\n        return currentInfrastructureDate > 0 ||\n            currentCostDate > 0 ||\n            previousInfrastructureDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentInfrastructureDate, currentCostDate, forecastCostDate, previousInfrastructureDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 75,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 450\n                ? containerHeight\n                : containerHeight + 75\n            : containerHeight;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: adjustedContainerHeight } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: this.getContainer(), domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { CostChart };\n","import './reportSummaryCost.scss';\nimport { CostChart } from 'components/charts/costChart';\nimport React from 'react';\nconst ReportSummaryCost = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(CostChart, Object.assign({}, props))));\nexport { ReportSummaryCost };\n","import chart_color_black_200 from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport chart_color_green_100 from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport chart_color_green_200 from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport chart_color_green_300 from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_green_500 from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentMonthData: {\n        fill: 'none',\n    },\n    forecastColorScale: [chart_color_green_200.value],\n    forecastConeColorScale: [chart_color_green_100.value],\n    forecastData: {\n        fill: 'none',\n    },\n    forecastConeData: {\n        fill: chart_color_green_100.value,\n        strokeWidth: 0,\n    },\n    itemsPerRow: 4,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    previousMonthData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange, getMaxValue, getTooltipContent } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './trendChart.styles';\nclass TrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, forecastData, forecastConeData, previousData, showSupplementaryLabel = false, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? 'chart.usage_legend_label'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_label'\n                    : 'chart.cost_legend_label';\n            const tooltipKey = showUsageLegendLabel\n                ? 'chart.usage_legend_tooltip'\n                : showSupplementaryLabel\n                    ? 'chart.cost_supplementary_legend_tooltip'\n                    : 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousData,\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousData, tooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousMonthData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentData,\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentData, tooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentMonthData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n            ];\n            if (forecastData) {\n                series.push({\n                    childName: 'forecast',\n                    data: forecastData,\n                    isForecast: true,\n                    legendItem: {\n                        name: getCostRangeString(forecastData, 'chart.cost_forecast_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(forecastData, 'chart.cost_forecast_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastData), { stroke: chartStyles.forecastColorScale[0] }),\n                    },\n                });\n            }\n            if (forecastConeData) {\n                series.push({\n                    childName: 'forecastCone',\n                    data: forecastConeData,\n                    isForecast: true,\n                    legendItem: {\n                        name: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_label', false, false),\n                        symbol: {\n                            fill: chartStyles.forecastConeColorScale[0],\n                            type: 'triangleUp',\n                        },\n                        tooltip: getCostRangeString(forecastConeData, 'chart.cost_forecast_cone_legend_tooltip', false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.forecastConeData), { stroke: chartStyles.forecastConeColorScale[0] }),\n                    },\n                });\n            }\n            this.setState({ series });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            if (series.isForecast) {\n                return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n            }\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getContainer = () => {\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.isDataAvailable() ? this.getTooltipLabel : undefined, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData(true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 50,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 700 ? chartStyles.itemsPerRow : 2;\n            // Todo: use PF legendAllowWrap feature\n            return (React.createElement(ChartLegend, { data: this.getLegendData(), gutter: 20, height: 25, itemsPerRow: itemsPerRow, name: \"legend\", orientation: width > 150 ? 'horizontal' : 'vertical' }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions, units } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            const dy = datum.y !== null ? formatter(datum.y, units || datum.units, formatDatumOptions) : undefined;\n            const dy0 = datum.y0 && datum.y0 !== null ? formatter(datum.y0, units || datum.units, formatDatumOptions) : undefined;\n            if (dy && dy0) {\n                return i18next.t('chart.cost_forecast_cone_tooltip', { value0: dy0, value1: dy });\n            }\n            return dy ? dy : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            // Todo: Leave one legend item visible at all times?\n            // const { hiddenSeries, series } = this.state;\n            // const leaveVisible = hiddenSeries.size === series.length - 1;\n            // if (leaveVisible && !this.isSeriesHidden(props.index)) {\n            //   return;\n            // }\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map(serie => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = (tooltip = false) => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign(Object.assign({ childName: s.childName }, s.legendItem), (tooltip && { name: s.legendItem.tooltip })), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.forecastData !== this.props.forecastData ||\n            prevProps.forecastConeData !== this.props.forecastConeData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { currentData, forecastData, previousData } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrent = currentData ? getMaxValue(currentData) : 0;\n        const maxForecastCost = forecastData ? getMaxValue(forecastData) : 0;\n        const maxPrevious = previousData ? getMaxValue(previousData) : 0;\n        const maxValue = Math.max(maxCurrent, maxForecastCost, maxPrevious);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentData, forecastData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        const forecastDate = forecastData ? getDate(getDateRange(forecastData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0 ? Math.max(currentDate, forecastDate, previousDate) : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 50,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 700\n                ? containerHeight\n                : containerHeight + 20\n            : containerHeight;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: adjustedContainerHeight } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: this.getContainer(), domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { TrendChart };\n","import './reportSummaryTrend.scss';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nconst ReportSummaryTrend = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { ReportSummaryTrend };\n","import chart_color_black_200 from '@patternfly/react-tokens/dist/js/chart_color_black_200';\nimport chart_color_green_100 from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport chart_color_green_200 from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport chart_color_green_300 from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport chart_color_green_400 from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport chart_color_green_500 from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const chartStyles = {\n    chartContainer: {\n        marginTop: global_spacer_lg.value,\n    },\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_green_300.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_green_400.value,\n        },\n    },\n    itemsPerRow: 2,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        chart_color_black_200.value,\n        chart_color_green_400.value,\n        chart_color_black_200.value,\n        chart_color_green_300.value,\n    ],\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_black_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: chart_color_black_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    // TBD: No grey scale, yet\n    previousColorScale: [chart_color_black_200.value, chart_color_black_200.value],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getDateRange, getMaxValue, getTooltipContent, getUsageRangeString } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './usageChart.styles';\nclass UsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n            const usageKey = 'chart.usage_legend_label';\n            const usageTooltipKey = 'chart.usage_legend_tooltip';\n            const requestKey = 'chart.requests_legend_label';\n            const requestTooltipKey = 'chart.requests_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                series: [\n                    {\n                        childName: 'previousUsage',\n                        data: previousUsageData,\n                        legendItem: {\n                            name: getUsageRangeString(previousUsageData, usageKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.legendColorScale[0],\n                                type: 'minus',\n                            },\n                            tooltip: getUsageRangeString(previousUsageData, usageTooltipKey, false, false, 1),\n                        },\n                        style: chartStyles.previousUsageData,\n                    },\n                    {\n                        childName: 'currentUsage',\n                        data: currentUsageData,\n                        legendItem: {\n                            name: getUsageRangeString(currentUsageData, usageKey, true, false),\n                            symbol: {\n                                fill: chartStyles.legendColorScale[1],\n                                type: 'minus',\n                            },\n                            tooltip: getUsageRangeString(currentUsageData, usageTooltipKey, false, false),\n                        },\n                        style: chartStyles.currentUsageData,\n                    },\n                    {\n                        childName: 'previousRequest',\n                        data: previousRequestData,\n                        legendItem: {\n                            name: getUsageRangeString(previousRequestData, requestKey, true, true, 1),\n                            symbol: {\n                                fill: chartStyles.legendColorScale[2],\n                                type: 'dash',\n                            },\n                            tooltip: getUsageRangeString(previousRequestData, requestTooltipKey, false, false, 1),\n                        },\n                        style: chartStyles.previousRequestData,\n                    },\n                    {\n                        childName: 'currentRequest',\n                        data: currentRequestData,\n                        legendItem: {\n                            name: getUsageRangeString(currentRequestData, requestKey, true, false),\n                            symbol: {\n                                fill: chartStyles.legendColorScale[3],\n                                type: 'dash',\n                            },\n                            tooltip: getUsageRangeString(currentRequestData, requestTooltipKey, false, false),\n                        },\n                        style: chartStyles.currentRequestData,\n                    },\n                ],\n            });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getContainer = () => {\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: this.isDataAvailable() ? this.getTooltipLabel : undefined, labelComponent: React.createElement(ChartLegendTooltip, { legendData: this.getLegendData(true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) }), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 300 ? chartStyles.itemsPerRow : 1;\n            return React.createElement(ChartLegend, { data: this.getLegendData(), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\" });\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const formatter = getTooltipContent(formatDatumValue);\n            return datum.y !== null ? formatter(datum.y, datum.units, formatDatumOptions) : i18next.t('chart.no_data');\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length !== (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map(serie => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = (tooltip = false) => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign(Object.assign(Object.assign({ childName: s.childName }, s.legendItem), (tooltip && { name: s.legendItem.tooltip })), getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n            this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getDomain() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentRequest = currentRequestData ? getMaxValue(currentRequestData) : 0;\n        const maxCurrentUsage = currentUsageData ? getMaxValue(currentUsageData) : 0;\n        const maxPreviousRequest = previousRequestData ? getMaxValue(previousRequestData) : 0;\n        const maxPreviousUsage = previousUsageData ? getMaxValue(previousUsageData) : 0;\n        const maxValue = Math.max(maxCurrentRequest, maxCurrentUsage, maxPreviousRequest, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n        const currentRequestDate = currentRequestData ? getDate(getDateRange(currentRequestData, true, true)[1]) : 0;\n        const currentUsageDate = currentUsageData ? getDate(getDateRange(currentUsageData, true, true)[1]) : 0;\n        const previousRequestDate = previousRequestData ? getDate(getDateRange(previousRequestData, true, true)[1]) : 0;\n        const previousUsageDate = previousUsageData ? getDate(getDateRange(previousUsageData, true, true)[1]) : 0;\n        return currentRequestDate > 0 || currentUsageDate > 0 || previousRequestDate > 0 || previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 75,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, } = this.props;\n        const { series, width } = this.state;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 480\n                ? containerHeight\n                : containerHeight + 20\n            : containerHeight;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, title),\n            React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: adjustedContainerHeight } },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: this.getContainer(), domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))))));\n    }\n}\nexport { UsageChart };\n","import './reportSummaryUsage.scss';\nimport { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nconst ReportSummaryUsage = props => (React.createElement(\"div\", { className: \"chart\" },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { ReportSummaryUsage };\n","export const getReleasePath = () => {\n    const pathName = window.location.pathname.split('/');\n    pathName.shift();\n    let release = '';\n    if (pathName[0] === 'beta') {\n        release = `/beta`;\n    }\n    return release;\n};\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nconst Loading = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(LoadingState, null))));\n};\nexport default withRouter(Loading);\n","import Loading from './loading';\nexport default Loading;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummary.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummary.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummary.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".chartSkeleton{height:125px;margin-bottom:var(--pf-global--spacer--md);margin-top:var(--pf-global--spacer--md)}.legendSkeleton{margin-top:var(--pf-global--spacer--md)}.reportSummary{height:100%}.subtitle{display:inline-block;font-size:var(--pf-global--FontSize--xs);color:var(--pf-global--Color--200);margin-bottom:0}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryAlt.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryAlt.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryAlt.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".chartSkeleton{height:175px;margin-bottom:var(--pf-global--spacer--md);margin-top:var(--pf-global--spacer--md)}.cost{flex-grow:1;min-height:470px;margin-tight:var(--pf-global--spacer--md)}.legendSkeleton{margin-top:var(--pf-global--spacer--md)}.reportSummary{height:100%}.subtitle{display:inline-block;font-size:var(--pf-global--FontSize--xs);color:var(--pf-global--Color--200);margin-bottom:0}.tops{margin-top:var(--pf-global--spacer--lg)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryDetails.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryDetails.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryDetails.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".reportSummaryDetails{margin-bottom:var(--pf-global--spacer--md);display:flex;align-Items:flex-end}.text{padding-bottom:var(--pf-global--spacer--sm);line-height:var(--pf-global--LineHeight--sm);font-size:var(--pf-global--FontSize--xs)}.units{padding-left:var(--pf-global--spacer--xs);padding-bottom:var(--pf-global--spacer--sm);line-height:var(--pf-global--LineHeight--sm);font-size:var(--pf-global--FontSize--xs);white-space:nowrap}.value{color:var(--pf-global--Color--100);margin-right:var(--pf-global--spacer--sm);font-size:var(--pf-global--FontSize--2xl)}.valueAlt{color:var(--pf-global--Color--100);margin-right:var(--pf-global--spacer--sm);font-size:var(--pf-global--FontSize--4xl)}.valueContainer{display:inline-block;margin-bottom:var(--pf-global--spacer--md);width:50%;word-Wrap:break-word}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./emptyValueState.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./emptyValueState.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./emptyValueState.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".emptyValueContainer{font-size:var(--pf-global--FontSize--sm)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryItem.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryItem.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryItem.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".reportSummaryItem:not(:last-child){margin-bottom:var(--pf-global--spacer--md)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryItems.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryItems.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryItems.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".skeleton{margin-top:var(--pf-global--spacer--md)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryCost.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryCost.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryCost.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".chart{margin-bottom:var(--pf-global--spacer--sm)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".chartOverride :not(foo) svg{overflow:visible}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryTrend.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryTrend.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryTrend.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".chart{margin-nottom:var(--pf-global--spacer--sm)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryUsage.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryUsage.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./reportSummaryUsage.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".chart{margin-bottom:var(--pf-global--spacer--sm)}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","\nvar content = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./costIcon.scss\");\n\nif(typeof content === 'string') content = [[module.id, content, '']];\n\nvar transform;\nvar insertInto;\n\n\n\nvar options = {\"hmr\":true}\n\noptions.transform = transform\noptions.insertInto = undefined;\n\nvar update = require(\"!../../../../node_modules/style-loader/lib/addStyles.js\")(content, options);\n\nif(content.locals) module.exports = content.locals;\n\nif(module.hot) {\n\tmodule.hot.accept(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./costIcon.scss\", function() {\n\t\tvar newContent = require(\"!!../../../../node_modules/css-loader/dist/cjs.js!../../../../node_modules/sass-loader/dist/cjs.js!./costIcon.scss\");\n\n\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\n\t\tvar locals = (function(a, b) {\n\t\t\tvar key, idx = 0;\n\n\t\t\tfor(key in a) {\n\t\t\t\tif(!b || a[key] !== b[key]) return false;\n\t\t\t\tidx++;\n\t\t\t}\n\n\t\t\tfor(key in b) idx--;\n\n\t\t\treturn idx === 0;\n\t\t}(content.locals, newContent.locals));\n\n\t\tif(!locals) throw new Error('Aborting CSS HMR due to changed css-modules locals.');\n\n\t\tupdate(newContent);\n\t});\n\n\tmodule.hot.dispose(function() { update(); });\n}","// Imports\nvar ___CSS_LOADER_API_IMPORT___ = require(\"../../../../node_modules/css-loader/dist/runtime/api.js\");\nvar ___CSS_LOADER_AT_RULE_IMPORT_0___ = require(\"-!../../../../node_modules/css-loader/dist/cjs.js!@patternfly/patternfly/base/patternfly-variables.css\");\nexports = ___CSS_LOADER_API_IMPORT___(false);\nexports.i(___CSS_LOADER_AT_RULE_IMPORT_0___);\n// Module\nexports.push([module.id, \".cost-icon{height:120px}.cost-icon.st0{fill:blue !important}\", \"\"]);\n// Exports\nmodule.exports = exports;\n","module.exports = __webpack_public_path__ + \"8a2acb5e9233030023f599e0f04ebd7f.svg\";","import './costIcon.scss';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nconst icon = require('./Cost-icon.svg');\nconst CostIcon = ({ className, t }) => {\n    return React.createElement(\"img\", { className: `cost-icon ${className}`, src: icon, alt: t('cost_management'), \"aria-hidden\": \"true\" });\n};\nexport default withTranslation()(CostIcon);\n","import CostIcon from './costIcon';\nexport default CostIcon;\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    iconSpacer: {\n        marginLeft: global_spacer_xs.value,\n    },\n    viewSources: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { Button, EmptyState, EmptyStateBody, EmptyStateIcon, EmptyStateVariant, Title } from '@patternfly/react-core';\nimport { ExternalLinkAltIcon } from '@patternfly/react-icons/dist/js/icons/external-link-alt-icon';\nimport { PlusCircleIcon } from '@patternfly/react-icons/dist/js/icons/plus-circle-icon';\nimport CostIcon from 'components/icons/costIcon';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { withRouter } from 'react-router';\nimport { getReleasePath } from 'utils/pathname';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDocLink = (textKey, urlKey) => {\n            const { t } = this.props;\n            return (React.createElement(\"a\", { href: t(urlKey), rel: \"noreferrer\", target: \"_blank\" },\n                t(textKey),\n                React.createElement(\"span\", { style: styles.iconSpacer },\n                    React.createElement(ExternalLinkAltIcon, null))));\n        };\n        this.getRouteToSources = () => {\n            const release = getReleasePath();\n            return `${release}/settings/sources`;\n        };\n    }\n    render() {\n        const { providerType, t } = this.props;\n        let descKey = 'no_providers_state.overview_desc';\n        let titleKey = 'no_providers_state.overview_title';\n        let docUrlKey;\n        let icon;\n        let textKey;\n        switch (providerType) {\n            case \"aws\" /* aws */:\n                descKey = 'no_providers_state.aws_desc';\n                titleKey = 'no_providers_state.aws_title';\n                break;\n            case \"azure\" /* azure */:\n                descKey = 'no_providers_state.azure_desc';\n                titleKey = 'no_providers_state.azure_title';\n                break;\n            case \"gcp\" /* gcp */:\n                descKey = 'no_providers_state.gcp_desc';\n                titleKey = 'no_providers_state.gcp_title';\n                break;\n            case \"ocp\" /* ocp */:\n                descKey = 'no_providers_state.ocp_desc';\n                docUrlKey = 'docs.add_ocp_sources';\n                textKey = 'no_providers_state.ocp_add_sources';\n                titleKey = 'no_providers_state.ocp_title';\n                break;\n            default:\n                icon = CostIcon;\n        }\n        return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n            React.createElement(EmptyStateIcon, { icon: icon ? icon : PlusCircleIcon }),\n            React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, t(titleKey)),\n            React.createElement(EmptyStateBody, null, t(descKey)),\n            docUrlKey && textKey ? (React.createElement(\"div\", { style: styles.viewSources }, this.getDocLink(textKey, docUrlKey))) : (React.createElement(Button, { variant: \"primary\", component: \"a\", href: this.getRouteToSources() }, t('no_providers_state.get_started')))));\n    }\n}\nconst NoProvidersState = withRouter(withTranslation()(NoProvidersStateBase));\nexport { NoProvidersState };\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { NoProvidersState } from './noProvidersState';\nconst NoProviders = ({ providerType, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(NoProvidersState, { providerType: providerType }))));\n};\nexport default withRouter(NoProviders);\n","import NoProviders from './noProviders';\nexport default NoProviders;\n"],"sourceRoot":""}