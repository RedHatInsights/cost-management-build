{"version":3,"sources":["webpack://koku-ui/./src/pages/details/common/detailsUtils.ts","webpack://koku-ui/./src/pages/details/components/actions/actions.tsx","webpack://koku-ui/./src/pages/details/components/breakdown/breakdown.styles.ts","webpack://koku-ui/./src/pages/details/components/tag/tag.styles.ts","webpack://koku-ui/./src/pages/details/components/tag/tagView.tsx","webpack://koku-ui/./src/pages/details/components/tag/tagModal.tsx","webpack://koku-ui/./src/pages/details/components/tag/tagLink.tsx","webpack://koku-ui/./src/pages/details/components/breakdown/breakdownHeader.styles.ts","webpack://koku-ui/./src/pages/details/components/breakdown/breakdownHeader.tsx","webpack://koku-ui/./src/pages/details/components/breakdown/breakdownBase.tsx","webpack://koku-ui/./src/pages/details/components/cluster/cluster.styles.ts","webpack://koku-ui/./src/pages/details/components/cluster/clusterModal.styles.ts","webpack://koku-ui/./src/pages/details/components/cluster/clusterView.tsx","webpack://koku-ui/./src/pages/details/components/cluster/clusterModal.tsx","webpack://koku-ui/./src/pages/details/components/cluster/cluster.tsx","webpack://koku-ui/./src/pages/details/components/costChart/costChart.styles.ts","webpack://koku-ui/./src/pages/details/components/costChart/costChart.tsx","webpack://koku-ui/./src/pages/details/components/summary/summaryModal.styles.ts","webpack://koku-ui/./src/pages/details/components/summary/summaryModalView.tsx","webpack://koku-ui/./src/pages/details/components/summary/summaryModal.tsx","webpack://koku-ui/./src/pages/details/components/summary/summaryCard.styles.ts","webpack://koku-ui/./src/pages/details/components/summary/summaryCard.tsx","webpack://koku-ui/./src/pages/details/components/usageChart/usageChart.styles.ts","webpack://koku-ui/./src/pages/details/components/usageChart/usageChart.tsx","webpack://koku-ui/./src/pages/details/components/costOverview/costOverviewBase.tsx","webpack://koku-ui/./src/pages/details/components/dataToolbar/dataToolbar.styles.ts","webpack://koku-ui/./src/pages/details/components/dataToolbar/dataToolbar.tsx","webpack://koku-ui/./src/pages/details/components/export/exportModal.styles.ts","webpack://koku-ui/./src/pages/details/components/export/exportSubmit.tsx","webpack://koku-ui/./src/pages/details/components/export/exportModal.tsx","webpack://koku-ui/./src/pages/details/components/groupBy/groupBy.styles.ts","webpack://koku-ui/./src/pages/details/components/groupBy/groupByOrg.tsx","webpack://koku-ui/./src/pages/details/components/groupBy/groupByTag.tsx","webpack://koku-ui/./src/pages/details/components/groupBy/groupBy.tsx","webpack://koku-ui/./src/components/charts/historicalCostChart/historicalCostChart.styles.ts","webpack://koku-ui/./src/components/charts/historicalCostChart/historicalCostChart.tsx","webpack://koku-ui/./src/pages/details/components/historicalData/historicalChart.styles.ts","webpack://koku-ui/./src/pages/details/components/historicalData/historicalDataCostChart.tsx","webpack://koku-ui/./src/components/charts/historicalTrendChart/historicalTrendChart.styles.ts","webpack://koku-ui/./src/components/charts/historicalTrendChart/historicalTrendChart.tsx","webpack://koku-ui/./src/pages/details/components/historicalData/historicalDataTrendChart.tsx","webpack://koku-ui/./src/components/charts/historicalUsageChart/historicalUsageChart.styles.ts","webpack://koku-ui/./src/components/charts/historicalUsageChart/historicalUsageChart.tsx","webpack://koku-ui/./src/pages/details/components/historicalData/historicalDataUsageChart.tsx","webpack://koku-ui/./src/pages/details/components/historicalData/historicalDataBase.tsx","webpack://koku-ui/./src/pages/details/components/utils/groupBy.tsx","webpack://koku-ui/./src/pages/details/ocpDetails/detailsHeader.styles.ts","webpack://koku-ui/./src/pages/state/noData/index.ts","webpack://koku-ui/./src/pages/state/notAvailable/notAvailable.tsx","webpack://koku-ui/./src/pages/state/notAvailable/index.ts","webpack://koku-ui/./src/testIds.ts","webpack://koku-ui/./src/utils/dateRange.ts","webpack://koku-ui/./src/utils/equal.ts"],"names":["getGroupByTagKey","query","groupByTagKey","groupBy","Object","keys","group_by","tagIndex","indexOf","substring","addQueryFilter","filterType","filterValue","newQuery","assign","JSON","parse","stringify","filter_by","found","filters","Array","isArray","filter","removeQueryFilter","undefined","index","slice","DetailsActionsBase","props","super","this","defaultState","isDropdownOpen","isExportModalOpen","state","getExportModal","item","reportPathsType","isOpen","items","onClose","handleExportModalClose","setState","handleExportModalOpen","handleOnSelect","handleOnToggle","bind","isDisabled","showPriceListOption","t","redirectToCostModel","history","source_uuid","DropdownItem","component","key","onClick","unshift","includes","length","Dropdown","onSelect","toggle","KebabToggle","onToggle","isPlain","position","dropdownItems","Actions","connect","withTranslation","withRouter","styles","content","paddingBottom","global_spacer_lg","paddingLeft","paddingRight","paddingTop","dataListHeading","fontWeight","global_FontWeight_bold","groupByHeading","marginBottom","tagLink","marginLeft","global_spacer_sm","tagsContainer","marginRight","global_spacer_3xl","marginTop","TagViewBase","arguments","getDataListItems","tagReport","result","data","val","values","id","push","DataListItem","DataListItemRow","DataListItemCells","dataListCells","DataListCell","filterBy","dataListItems","style","DataList","isCompact","map","TagView","tagReportType","TagModalBase","getTagValueCount","count","handleClose","fetchTag","queryString","tagReportPathsType","prevProps","nextProps","Modal","title","value","width","mapStateToProps","queryFromRoute","location","search","resolution","time_scope_units","time_scope_value","account","tagReportFetchStatus","mapDispatchToProps","TagModal","TagLinkBase","handleOpen","event","preventDefault","Boolean","testIds","href","TagLink","cost","global_spacer_xl","costLabel","global_spacer_xs","costValue","textAlign","costLabelDate","fontSize","global_FontSize_sm","color","global_Color_200","header","display","justifyContent","backgroundColor","global_BackgroundColor_100","infoDescription","global_disabled_color_100","global_FontSize_xs","tabs","tag","global_spacer_md","BreakdownHeaderBase","buildDetailsLink","detailsURL","groupByKey","getGroupByOrg","groupByOrg","getTotalCost","report","hasCost","meta","total","formatValue","units","description","filterByAccount","showTags","className","Link","to","Title","headingLevel","size","BreakdownHeader","getIdKeyForTab","tab","BreakdownBase","activeTabKey","getAvailableTabs","contentRef","getTab","Tab","eventKey","tabContentId","tabContentRef","TabTitleText","getTabTitle","getTabContent","availableTabs","TabContent","ref","getTabItem","costOverviewComponent","historicalDataComponent","emptyTab","currentTab","getTabs","Tabs","activeKey","handleTabClick","tabIndex","hasCurrentMonthData","providers","provider","current_month_data","updateReport","fetchReport","reportType","reportError","noReport","noLocation","emptyStateTitle","providersFetchStatus","providerType","reportFetchStatus","clustersContainer","modal","height","subTitle","ClusterViewBase","clusters","cluster","ClusterView","ClusterModalBase","name","label","ClusterModal","ClusterBase","showAll","charCount","someClusters","allClusters","computedItems","getComputedReportItems","idKey","clusterString","trim","concat","Cluster","chartStyles","chartHeight","chartSkeleton","CostChartBase","containerRef","getLegendLabel","_a","s","e","p","prototype","hasOwnProperty","call","getOwnPropertySymbols","i","propertyIsEnumerable","__rest","ChartLabel","text","getSkeleton","Skeleton","handleResize","current","clientWidth","setTimeout","window","addEventListener","removeEventListener","hasMarkup","markup","hasRaw","raw","hasUsage","usage","markupUnits","rawUnits","usageUnits","markupValue","rawValue","usageValue","markupLabel","rawLabel","usageLabel","LegendLabel","Legend","ChartLegend","gutter","itemsPerRow","labelComponent","dy","lineHeight","rowGutter","ChartPie","ariaDesc","ariaTitle","constrainToVisibleArea","x","y","labels","datum","legendComponent","legendData","legendOrientation","legendPosition","padding","bottom","left","right","top","themeColor","ChartThemeColor","CostChart","mainContent","SummaryModalViewBase","status","_item","formatOptions","toString","totalValue","parentGroupBy","SummaryModalView","SummaryModalBase","variant","SummaryModal","card","skeleton","viewAllContainer","SummaryBase","isBulletChartModalOpen","getItems","getSummary","reportItem","getViewAll","findIndex","Button","handleBulletChartModalOpen","type","ButtonType","ButtonVariant","handleBulletChartModalClose","Card","CardTitle","CardBody","CardFooter","limit","SummaryCard","capacity","legendSkeleton","UsageChartBase","getCpuChart","chartDatum","getChartDatumWithCapacity","getChartDatum","getFreeSpace","ChartBullet","comparativeErrorMeasureData","tooltip","comparativeErrorMeasureLegendData","legend","getChartHeight","legendItemsPerRow","getItemsPerRow","maxDomain","isDatumEmpty","minDomain","primarySegmentedMeasureData","primarySegmentedMeasureLegendData","qualitativeRangeData","ranges","qualitativeRangeLegendData","hasRange","range","hasTotal","hasLimit","Math","trunc","limitUnits","hasRequest","request","requestUnits","hasCapacity","capacityUnits","unusedRequestCapacity","unusedUsageCapacity","unusedRequestCapacityPercentage","unusedUsageCapacityPercentage","Grid","hasGutter","GridItem","md","lg","percentage","UsageChart","PLACEHOLDER","CostOverviewBase","getClusterChart","widget","showWidget","groupById","showWidgetOnGroupBy","reportGroupBy","getCostChart","Popover","enableFlip","bodyContent","target","OutlinedQuestionCircleIcon","getCpuUsageChart","getMemoryUsageChart","getSummaryCard","reportSummary","usePlaceholder","getWidgetsColumns","selectWidgets","widgets","visibleWidgets","widgetId","renderedWidget","renderWidget","rows","floor","leftColumnWidgets","rightColumnWidgets","xl","export","toolbarContainer","global_BackgroundColor_light_100","defaultFilters","DataToolbarBase","categoryInput","cloneDeep","isBulkSelectOpen","isCategoryDropdownOpen","isOrgUnitSelectExpanded","isTagValueDropdownOpen","isTagKeySelectExpanded","isTagValueSelectExpanded","tagKeyValueInput","getDefaultCategory","categoryOptions","option","getActiveFilters","forEach","onDelete","chip","prevState","_filterType","onFilterRemoved","getBulkSelect","isAllSelected","isBulkSelectDisabled","itemsPerPage","itemsTotal","selectedItems","numSelected","anySelected","isChecked","onBulkSelectClicked","onBulkSelect","DropdownPosition","DropdownToggle","splitButtonItems","DropdownToggleCheckbox","onBulkSelectToggle","action","onBulkSelected","getCurrentCategoryOption","currentCategory","onCategoryClick","onCategorySelect","currentTagKey","onCategoryToggle","getCategoryInput","categoryOption","ToolbarFilter","categoryName","chips","deleteChip","showToolbarItem","InputGroup","TextInput","onChange","onCategoryInputChange","placeholder","onKeyDown","evt","onCategoryInput","getDefaultCategoryOptions","prevFilters","onFilterAdded","getOrgUnitSelect","options","getOrgUnitOptions","compareTo","find","selections","node","Select","SelectVariant","onOrgUnitToggle","onOrgUnitSelect","placeholderText","SelectOption","selection","checked","prevSelections","getTagKeySelect","selectOptions","getTagKeyOptions","selectOption","ToolbarItem","onClear","onTagKeyClear","onTagKeyToggle","onTagKeySelect","getTagValueSelect","tagKeyOption","getTagValueOptions","onTagValueToggle","onTagValueSelect","onTagValueInputChange","onTagValueInput","getExportButton","isExportDisabled","handleExportClicked","onExportClicked","orgReport","currentOrgUnit","sortedData","sort","a","b","roots","org","level","filteredOrgs","root","hasTagKeys","keepData","uniqBy","uniq","Set","pagination","showBulkSelect","showExport","showFilter","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarContent","ToolbarToggleGroup","breakpoint","toggleIcon","ToolbarGroup","getCategoryDropdown","alignment","default","DataToolbar","form","input","ul","ExportSubmitBase","stateProps","dispatchProps","fetchReportClicked","getExport","getFileName","date","Date","handleFetchReport","exportReport","handleResolutionChange","_","currentTarget","isAllItems","timeScope","order_by","offset","getQueryString","ExportSubmit","resolutionOptions","timeScopeOptions","ExportModalBase","handleMonthChange","Number","sortedItems","orderBy","selectedLabel","thisMonth","lastMonth","setMonth","getMonth","currentMonth","previousMonth","actions","Form","FormGroup","fieldId","Radio","isValid","groupItem","ExportModal","groupBySelector","alignItems","groupBySelectorLabel","GroupByOrgBase","defaultItem","isGroupByOpen","getCurrentGroupBy","getIdKeyForGroupBy","groupByKeys","getGroupByItems","handleGroupByClear","currentItem","handleGroupBySelect","onItemClicked","handleGroupByToggle","groupByItems","GroupByOrg","GroupByTagBase","tagKey","GroupByTag","groupByOrgOptions","groupByTagOptions","orgReportType","GroupByBase","isGroupByOrgVisible","isGroupByTagVisible","handleGroupByClick","allOptions","fetchOrg","orgReportPathsType","showOrgs","perspective","orgReportFetchStatus","GroupBy","currentCapacityData","fill","currentColorScale","chart_color_green_400","chart_color_green_300","chart_color_green_200","chart_color_green_100","chart_color_green_500","currentInfrastructureCostData","strokeDasharray","currentCostData","previousCapacityData","previousColorScale","chart_color_blue_100","chart_color_blue_200","chart_color_blue_300","chart_color_blue_400","chart_color_blue_500","previousInfrastructureCostData","previousCostData","yAxis","axisLabel","grid","stroke","ticks","tickLabels","xAxis","chart","HistoricalCostChart","hiddenSeries","initDatum","costKey","costInfrastructureKey","costInfrastructureTooltipKey","costTooltipKey","series","childName","legendItem","symbol","cursorVoronoiContainer","getCursorVoronoiContainer","getChart","ChartArea","has","interpolation","formatDatumValue","formatDatumOptions","CursorVoronoiContainer","createContainer","cursorDimension","mouseFollowTooltips","voronoiDimension","voronoiPadding","getLegend","handleLegendClick","currentRequestDate","previousRequestDate","max","getInteractiveLegendEvents","chartNames","isHidden","legendName","onLegendClick","adjustContainerHeight","containerHeight","xAxisLabel","yAxisLabel","domain","ge","endDate","getEndDate","midDate","adjustedContainerHeight","container","disable","ChartLegendTooltip","day","Chart","containerComponent","events","getEvents","theme","ChartAxis","tickValues","dependentAxis","chartContainer","costChart","trendChart","usageChart","HistoricalDataCostChartBase","currentQueryString","previousQueryString","currentReport","currentReportFetchStatus","previousReport","previousReportFetchStatus","currentData","previousData","costUnits","currentQuery","previousQuery","HistoricalDataCostChart","currentMonthData","previousMonthData","HistoricalTrendChart","showUsageLegendLabel","toolTipKey","previousDate","currentDate","HistoricalDataTrendChartBase","isCostChart","isNaN","useFilter","HistoricalDataTrendChart","currentLimitData","currentRequestData","currentUsageData","previousLimitData","previousRequestData","previousUsageData","HistoricalUsageChart","limitKey","limitTooltipKey","requestKey","requestTooltipKey","usageKey","usageTooltipKey","currentUsageDate","previousUsageDate","HistoricalDataUsageChartBase","HistoricalDataUsageChart","HistoricalDataBase","getTrendChart","getUsageChart","getGroupById","getGroupByValue","costLabelUnit","info","verticalAlign","infoIcon","infoTitle","PageHeader","PageHeaderTitle","Main","Unavailable","getTestProps","details","cluster_lnk","historical_data_btn","show_more_btn","tag_lnk","view_all_btn","cancel_btn","submit_btn","login","alert","username_input","password_input","submit","masthead","username","sidebarToggle","logout","onboarding","btn_cancel","btn_back","btn_continue","btn_close","type_selector","type_opt_aws","type_opt_ocp","type_opt_non","name_input","check_box_1","check_box_2","s3_input","clusterid_input","arn_input","add_btn","bucket_input","empty_state_add_btn","resource_name_input","cluster_id_input","type_input","sidebar","nav","link","backdrop","getNoDataForDateRangeString","today","month","startDate","getForDateRangeString","getSinceDateRangeString","isEqual","obj1","obj2","split","join"],"mappings":"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","file":"25581ca47a3fc9694930.bundle.js","sourcesContent":["import { tagPrefix } from 'api/queries/query';\nexport const getGroupByTagKey = (query) => {\n    let groupByTagKey;\n    for (const groupBy of Object.keys(query.group_by)) {\n        const tagIndex = groupBy.indexOf(tagPrefix);\n        if (tagIndex !== -1) {\n            groupByTagKey = groupBy.substring(tagIndex + tagPrefix.length);\n            break;\n        }\n    }\n    return groupByTagKey;\n};\nexport const addQueryFilter = (query, filterType, filterValue) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    // Filter by * won't generate a new request if group_by * already exists\n    if (filterValue === '*' && newQuery.group_by[filterType] === '*') {\n        return;\n    }\n    if (newQuery.filter_by[filterType]) {\n        let found = false;\n        const filters = newQuery.filter_by[filterType];\n        if (!Array.isArray(filters)) {\n            found = filterValue === newQuery.filter_by[filterType];\n        }\n        else {\n            for (const filter of filters) {\n                if (filter === filterValue) {\n                    found = true;\n                    break;\n                }\n            }\n        }\n        if (!found) {\n            newQuery.filter_by[filterType] = [newQuery.filter_by[filterType], filterValue];\n        }\n    }\n    else {\n        newQuery.filter_by[filterType] = [filterValue];\n    }\n    return newQuery;\n};\nexport const removeQueryFilter = (query, filterType, filterValue) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    if (filterType === null) {\n        newQuery.filter_by = undefined; // Clear all\n    }\n    else if (filterValue === null) {\n        newQuery.filter_by[filterType] = undefined; // Clear all values\n    }\n    else if (Array.isArray(newQuery.filter_by[filterType])) {\n        const index = newQuery.filter_by[filterType].indexOf(filterValue);\n        if (index > -1) {\n            newQuery.filter_by[filterType] = [\n                ...query.filter_by[filterType].slice(0, index),\n                ...query.filter_by[filterType].slice(index + 1),\n            ];\n        }\n    }\n    else {\n        newQuery.filter_by[filterType] = undefined;\n    }\n    return newQuery;\n};\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport { tagPrefix } from 'api/queries/query';\nimport { ExportModal } from 'pages/details/components/export/exportModal';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { costModelsActions } from 'store/costModels';\nclass DetailsActionsBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, query, reportPathsType } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, query: query, reportPathsType: reportPathsType }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, t, redirectToCostModel, history, item: { source_uuid }, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, t('details.actions.export')),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], history) }, t('details.actions.price_list')));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\nconst Actions = connect(undefined, {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n})(withTranslation()(withRouter(DetailsActionsBase)));\nexport { Actions };\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const styles = {\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingLeft: global_spacer_lg.value,\n        paddingRight: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n};\n","import global_FontWeight_bold from '@patternfly/react-tokens/dist/js/global_FontWeight_bold';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    dataListHeading: {\n        fontWeight: global_FontWeight_bold.value,\n    },\n    groupByHeading: {\n        marginBottom: global_spacer_lg.value,\n    },\n    tagLink: {\n        marginLeft: global_spacer_sm.value,\n    },\n    tagsContainer: {\n        marginRight: global_spacer_3xl.value,\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import { DataList, DataListCell, DataListItem, DataListItemCells, DataListItemRow } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { styles } from './tag.styles';\nclass TagViewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDataListItems = () => {\n            const { tagReport } = this.props;\n            const result = [];\n            if (tagReport) {\n                for (const item of tagReport.data) {\n                    for (const val of item.values) {\n                        const id = `${item.key}:${val}`;\n                        result.push(React.createElement(DataListItem, { \"aria-labelledby\": id, key: `${id}-item` },\n                            React.createElement(DataListItemRow, null,\n                                React.createElement(DataListItemCells, { dataListCells: [\n                                        React.createElement(DataListCell, { key: `${id}-cell1` },\n                                            React.createElement(\"span\", { id: id }, item.key)),\n                                        React.createElement(DataListCell, { key: `${id}-cell2` }, val),\n                                    ] }))));\n                    }\n                }\n            }\n            return result;\n        };\n    }\n    render() {\n        const { filterBy, groupBy, t } = this.props;\n        const dataListItems = this.getDataListItems();\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", null,\n                React.createElement(\"span\", { style: styles.dataListHeading }, t(`group_by.values.${groupBy}`))),\n            React.createElement(\"div\", { style: styles.groupByHeading },\n                React.createElement(\"span\", null, filterBy)),\n            React.createElement(DataList, { \"aria-label\": \"Simple data list example\", isCompact: true },\n                React.createElement(DataListItem, { \"aria-labelledby\": \"heading1\" },\n                    React.createElement(DataListItemRow, null,\n                        React.createElement(DataListItemCells, { dataListCells: [\n                                React.createElement(DataListCell, { key: \"primary content\" },\n                                    React.createElement(\"span\", { id: \"heading1\", style: styles.dataListHeading }, t('tag.heading_key'))),\n                                React.createElement(DataListCell, { key: \"secondary content\" },\n                                    React.createElement(\"span\", { id: \"heading2\", style: styles.dataListHeading }, t('tag.heading_value'))),\n                            ] }))),\n                dataListItems.map(item => item))));\n    }\n}\nconst TagView = withTranslation()(connect()(TagViewBase));\nexport { TagView };\n","import { Modal } from '@patternfly/react-core';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { TagView } from './tagView';\nconst tagReportType = \"tag\" /* tag */;\nclass TagModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getTagValueCount = () => {\n            const { tagReport } = this.props;\n            let count = 0;\n            if (tagReport) {\n                for (const item of tagReport.data) {\n                    if (item.values) {\n                        count += item.values.length;\n                    }\n                }\n            }\n            return count;\n        };\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    componentDidMount() {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        fetchTag(tagReportPathsType, tagReportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchTag(tagReportPathsType, tagReportType, queryString);\n        }\n    }\n    shouldComponentUpdate(nextProps) {\n        const { filterBy, isOpen } = this.props;\n        return nextProps.filterBy !== filterBy || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { filterBy, groupBy, isOpen, tagReport, t } = this.props;\n        return (React.createElement(Modal, { isOpen: isOpen, onClose: this.handleClose, title: t('tag.title', {\n                value: this.getTagValueCount(),\n            }), width: '50%' },\n            React.createElement(TagView, { filterBy: filterBy, groupBy: groupBy, tagReport: tagReport })));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, tagReportPathsType }) => {\n    const queryFromRoute = parseQuery(location.search);\n    const queryString = getQuery({\n        filter: Object.assign({ [groupBy]: filterBy, resolution: 'monthly', time_scope_units: 'month', time_scope_value: -1 }, (queryFromRoute.filter.account && {\n            account: queryFromRoute.filter.account,\n        })),\n    });\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, queryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, queryString);\n    return {\n        queryString,\n        tagReport,\n        tagReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst TagModal = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(TagModalBase));\nexport { TagModal };\n","import { TagIcon } from '@patternfly/react-icons/dist/js/icons/tag-icon';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { getTestProps, testIds } from 'testIds';\nimport { styles } from './tag.styles';\nimport { TagModal } from './tagModal';\nconst tagReportType = \"tag\" /* tag */;\nclass TagLinkBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleClose = (isOpen) => {\n            this.setState({ isOpen });\n        };\n        this.handleOpen = event => {\n            this.setState({ isOpen: true });\n            event.preventDefault();\n            return false;\n        };\n        this.handleClose = this.handleClose.bind(this);\n        this.handleOpen = this.handleOpen.bind(this);\n    }\n    componentDidMount() {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        fetchTag(tagReportPathsType, tagReportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchTag(tagReportPathsType, tagReportType, queryString);\n        }\n    }\n    render() {\n        const { filterBy, groupBy, id, tagReport, tagReportPathsType } = this.props;\n        const { isOpen } = this.state;\n        let count = 0;\n        if (tagReport) {\n            for (const item of tagReport.data) {\n                if (item.values) {\n                    count += item.values.length;\n                }\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.tagsContainer, id: id },\n            Boolean(count > 0) && (React.createElement(React.Fragment, null,\n                React.createElement(TagIcon, null),\n                React.createElement(\"a\", Object.assign({}, getTestProps(testIds.details.tag_lnk), { href: \"#/\", onClick: this.handleOpen, style: styles.tagLink }), count))),\n            React.createElement(TagModal, { filterBy: filterBy, groupBy: groupBy, isOpen: isOpen, onClose: this.handleClose, tagReportPathsType: tagReportPathsType })));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, tagReportPathsType }) => {\n    const queryFromRoute = parseQuery(location.search);\n    const queryString = getQuery({\n        filter: Object.assign({ [groupBy]: filterBy, resolution: 'monthly', time_scope_units: 'month', time_scope_value: -1 }, (queryFromRoute.filter.account && {\n            account: queryFromRoute.filter.account,\n        })),\n    });\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, queryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, queryString);\n    return {\n        filterBy,\n        queryString,\n        tagReport,\n        tagReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst TagLink = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(TagLinkBase));\nexport { TagLink };\n","import global_BackgroundColor_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_100';\nimport global_Color_200 from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_xl from '@patternfly/react-tokens/dist/js/global_spacer_xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    cost: {\n        marginTop: global_spacer_xl.var,\n    },\n    costLabel: {\n        marginTop: global_spacer_xs.var,\n    },\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n        textAlign: 'right',\n    },\n    costLabelDate: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_200.var,\n        textAlign: 'right',\n    },\n    header: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        paddingLeft: global_spacer_lg.var,\n        paddingRight: global_spacer_lg.var,\n        paddingTop: global_spacer_lg.var,\n        backgroundColor: global_BackgroundColor_100.var,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    tabs: {\n        display: 'flex',\n    },\n    tag: {\n        marginLeft: global_spacer_lg.var,\n    },\n    title: {\n        paddingBottom: global_spacer_lg.var,\n        paddingTop: global_spacer_md.var,\n    },\n};\n","import './breakdownHeader.scss';\nimport { Title } from '@patternfly/react-core';\nimport { AngleLeftIcon } from '@patternfly/react-icons/dist/js/icons/angle-left-icon';\nimport { breakdownDescKey, breakdownTitleKey, getQueryRoute, orgUnitIdKey } from 'api/queries/query';\nimport { TagLink } from 'pages/details/components/tag/tagLink';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { getForDateRangeString } from 'utils/dateRange';\nimport { formatValue } from 'utils/formatValue';\nimport { styles } from './breakdownHeader.styles';\nclass BreakdownHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.buildDetailsLink = () => {\n            const { detailsURL, groupBy, query } = this.props;\n            let groupByKey = groupBy;\n            let value = '*';\n            // Retrieve org unit used by the details page\n            if (query[orgUnitIdKey]) {\n                groupByKey = orgUnitIdKey;\n                value = query[orgUnitIdKey];\n            }\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { group_by: {\n                    [groupByKey]: value,\n                } });\n            // Don't want these params when returning to the details page\n            if (newQuery.filter) {\n                newQuery.filter.account = undefined;\n                newQuery[breakdownDescKey] = undefined;\n                newQuery[orgUnitIdKey] = undefined;\n                newQuery[breakdownTitleKey] = undefined;\n            }\n            return `${detailsURL}?${getQueryRoute(newQuery)}`;\n        };\n        this.getGroupByOrg = () => {\n            const { query } = this.props;\n            let groupByOrg;\n            for (const groupBy of Object.keys(query.group_by)) {\n                if (groupBy === orgUnitIdKey) {\n                    groupByOrg = query.group_by[orgUnitIdKey];\n                    break;\n                }\n            }\n            return groupByOrg;\n        };\n        this.getTotalCost = () => {\n            const { report } = this.props;\n            const hasCost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total;\n            const cost = formatValue(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD');\n            return cost;\n        };\n    }\n    render() {\n        const { description, filterBy, groupBy, query, t, tabs, tagReportPathsType, title } = this.props;\n        const filterByAccount = query && query.filter ? query.filter.account : undefined;\n        const groupByOrg = this.getGroupByOrg();\n        const showTags = filterByAccount || groupBy === 'account' || groupBy === 'project' || groupBy === 'subscription_guid';\n        // i18n groupBy key\n        const groupByKey = groupBy ? groupBy : filterByAccount ? 'account' : groupByOrg ? orgUnitIdKey : undefined;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", null,\n                React.createElement(\"nav\", { \"aria-label\": \"breadcrumb\", className: \"breadcrumbOverride\" },\n                    React.createElement(\"ol\", { className: \"pf-c-breadcrumb__list\" },\n                        React.createElement(\"li\", { className: \"pf-c-breadcrumb__item\" },\n                            React.createElement(\"span\", { className: \"pf-c-breadcrumb__item-divider\" },\n                                React.createElement(AngleLeftIcon, null)),\n                            React.createElement(Link, { to: this.buildDetailsLink() }, t('breakdown.back_to_details', {\n                                groupBy: groupByKey,\n                                value: tagReportPathsType,\n                            }))))),\n                React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"2xl\" },\n                    t('breakdown.title', { value: title }),\n                    description && React.createElement(\"div\", { style: styles.infoDescription }, description)),\n                React.createElement(\"div\", { style: styles.tabs },\n                    tabs,\n                    React.createElement(\"div\", { style: styles.tag }, Boolean(showTags) && (React.createElement(TagLink, { filterBy: filterBy, groupBy: groupByKey, id: \"tags\", tagReportPathsType: tagReportPathsType }))))),\n            React.createElement(\"div\", { style: styles.cost },\n                React.createElement(\"div\", { style: styles.costLabel },\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: \"4xl\" },\n                        React.createElement(\"span\", null, this.getTotalCost()))),\n                React.createElement(\"div\", { style: styles.costLabelDate }, getForDateRangeString(groupByKey, 'breakdown.total_cost_date', 0)))));\n    }\n}\nconst BreakdownHeader = withTranslation()(BreakdownHeaderBase);\nexport { BreakdownHeader };\n","import { Tab, TabContent, Tabs, TabTitleText } from '@patternfly/react-core';\nimport Loading from 'pages/state/loading';\nimport NoProviders from 'pages/state/noProviders';\nimport NotAvailable from 'pages/state/notAvailable';\nimport React from 'react';\nimport NoData from '../../../state/noData';\nimport { styles } from './breakdown.styles';\nimport { BreakdownHeader } from './breakdownHeader';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"cost-overview\" /* costOverview */:\n            return 'cost-overview';\n        case \"historical-data\" /* historicalData */:\n            return 'historical-data';\n    }\n};\nclass BreakdownBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            activeTabKey: 0,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getAvailableTabs = () => {\n            const availableTabs = [\n                {\n                    contentRef: React.createRef(),\n                    tab: \"cost-overview\" /* costOverview */,\n                },\n                {\n                    contentRef: React.createRef(),\n                    tab: \"historical-data\" /* historicalData */,\n                },\n            ];\n            return availableTabs;\n        };\n        this.getTab = (tab, contentRef, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, tabContentId: `tab-${index}`, tabContentRef: contentRef, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) }));\n        };\n        this.getTabContent = (availableTabs) => {\n            return availableTabs.map((val, index) => {\n                return (React.createElement(TabContent, { eventKey: index, key: `${getIdKeyForTab(val.tab)}-tabContent`, id: `tab-${index}`, ref: val.contentRef }, this.getTabItem(val.tab, index)));\n            });\n        };\n        this.getTabItem = (tab, index) => {\n            const { costOverviewComponent, historicalDataComponent } = this.props;\n            const { activeTabKey } = this.state;\n            const emptyTab = React.createElement(React.Fragment, null); // Lazily load tabs\n            if (activeTabKey !== index) {\n                return emptyTab;\n            }\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === \"cost-overview\" /* costOverview */) {\n                return costOverviewComponent;\n            }\n            else if (currentTab === \"historical-data\" /* historicalData */) {\n                return historicalDataComponent;\n            }\n            else {\n                return emptyTab;\n            }\n        };\n        this.getTabs = (availableTabs) => {\n            const { activeTabKey } = this.state;\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((val, index) => this.getTab(val.tab, val.contentRef, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            if (tab === \"cost-overview\" /* costOverview */) {\n                return t('breakdown.cost_overview_title');\n            }\n            else if (tab === \"historical-data\" /* historicalData */) {\n                return t('breakdown.historical_data_title');\n            }\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { activeTabKey } = this.state;\n            if (activeTabKey !== tabIndex) {\n                this.setState({\n                    activeTabKey: tabIndex,\n                });\n            }\n        };\n        // Ensure at least one source provider has data available\n        this.hasCurrentMonthData = () => {\n            const { providers } = this.props;\n            let result = false;\n            if (providers && providers.data) {\n                for (const provider of providers.data) {\n                    if (provider.current_month_data) {\n                        result = true;\n                        break;\n                    }\n                }\n            }\n            return result;\n        };\n        this.updateReport = () => {\n            const { location, fetchReport, queryString, reportPathsType, reportType } = this.props;\n            if (location.search) {\n                fetchReport(reportPathsType, reportType, queryString);\n            }\n        };\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps) {\n        const { location, report, reportError, queryString } = this.props;\n        const newQuery = prevProps.queryString !== queryString;\n        const noReport = !report && !reportError;\n        const noLocation = !location.search;\n        if (newQuery || noReport || noLocation) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { description, detailsURL, emptyStateTitle, filterBy, groupBy, providers, providersFetchStatus, providerType, query, report, reportError, reportFetchStatus, tagReportPathsType, title, } = this.props;\n        const availableTabs = this.getAvailableTabs();\n        // Note: Providers are fetched via the InactiveSources component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: emptyStateTitle });\n        }\n        else if (providersFetchStatus === 1 /* inProgress */ && reportFetchStatus === 1 /* inProgress */) {\n            return React.createElement(Loading, { title: emptyStateTitle });\n        }\n        else if (providersFetchStatus === 2 /* complete */ && reportFetchStatus === 2 /* complete */) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0 && providersFetchStatus === 2 /* complete */;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: providerType, title: emptyStateTitle });\n            }\n            if (!this.hasCurrentMonthData()) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(BreakdownHeader, { description: description, detailsURL: detailsURL, filterBy: filterBy, groupBy: groupBy, query: query, report: report, tabs: this.getTabs(availableTabs), tagReportPathsType: tagReportPathsType, title: title }),\n            React.createElement(\"div\", { style: styles.content }, this.getTabContent(availableTabs))));\n    }\n}\nexport default BreakdownBase;\n","import global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    clustersContainer: {\n        marginRight: global_spacer_3xl.value,\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import global_spacer_2xl from '@patternfly/react-tokens/dist/js/global_spacer_2xl';\nexport const styles = {\n    modal: {\n        // Workaround for isLarge not working properly\n        height: '700px',\n        width: '600px',\n    },\n    subTitle: {\n        marginTop: global_spacer_2xl.value,\n        textAlign: 'right',\n    },\n};\n","import React from 'react';\nimport { withTranslation } from 'react-i18next';\nclass ClusterViewBase extends React.Component {\n    render() {\n        const { item } = this.props;\n        if (!item.clusters) {\n            return null;\n        }\n        return item.clusters.map((cluster, index) => React.createElement(\"div\", { key: `cluster-${index}` }, cluster));\n    }\n}\nconst ClusterView = withTranslation()(ClusterViewBase);\nexport { ClusterView, ClusterViewBase };\n","import './clusterModal.scss';\nimport { Modal } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './clusterModal.styles';\nimport { ClusterView } from './clusterView';\nclass ClusterModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    shouldComponentUpdate(nextProps) {\n        const { isOpen, item } = this.props;\n        return nextProps.item !== item || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { groupBy, isOpen, item, t } = this.props;\n        return (React.createElement(Modal, { className: \"modalOverride\", style: styles.modal, isOpen: isOpen, onClose: this.handleClose, title: t('details.clusters_modal_title', {\n                groupBy,\n                name: item.label,\n            }), width: '50%' },\n            React.createElement(ClusterView, { item: item })));\n    }\n}\nconst ClusterModal = withTranslation()(ClusterModalBase);\nexport { ClusterModal };\n","import React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { getTestProps, testIds } from 'testIds';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { styles } from './cluster.styles';\nimport { ClusterModal } from './clusterModal';\nclass ClusterBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isOpen: false,\n            showAll: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleClose = (isOpen) => {\n            this.setState({ isOpen });\n        };\n        this.handleOpen = event => {\n            this.setState({ isOpen: true });\n            event.preventDefault();\n            return false;\n        };\n        this.handleClose = this.handleClose.bind(this);\n        this.handleOpen = this.handleOpen.bind(this);\n    }\n    render() {\n        const { groupBy, report, t } = this.props;\n        const { isOpen, showAll } = this.state;\n        let charCount = 0;\n        const maxChars = 50;\n        const someClusters = [];\n        const allClusters = [];\n        const computedItems = getComputedReportItems({\n            report,\n            idKey: groupBy,\n        });\n        const item = computedItems && computedItems.length ? computedItems[0] : undefined;\n        if (!item) {\n            return null;\n        }\n        for (const cluster of item.clusters) {\n            const prefix = someClusters.length > 0 ? ', ' : '';\n            const clusterString = `${prefix}${cluster}`;\n            if (showAll) {\n                someClusters.push(clusterString);\n            }\n            else if (charCount <= maxChars) {\n                if (charCount + clusterString.length > maxChars) {\n                    someClusters.push(clusterString\n                        .slice(0, maxChars - charCount)\n                        .trim()\n                        .concat('...'));\n                }\n                else {\n                    someClusters.push(clusterString);\n                }\n            }\n            charCount += clusterString.length;\n            allClusters.push(cluster);\n        }\n        return (React.createElement(\"div\", { style: styles.clustersContainer },\n            Boolean(someClusters) && someClusters.map((cluster, index) => React.createElement(\"span\", { key: index }, cluster)),\n            Boolean(someClusters.length < allClusters.length) && (React.createElement(\"a\", Object.assign({}, getTestProps(testIds.details.cluster_lnk), { href: \"#/\", onClick: this.handleOpen }), t('details.more_clusters', {\n                value: allClusters.length - someClusters.length,\n            }))),\n            React.createElement(ClusterModal, { groupBy: groupBy, isOpen: isOpen, item: item, onClose: this.handleClose })));\n    }\n}\nconst Cluster = withTranslation()(ClusterBase);\nexport { Cluster };\n","import global_FontWeight_bold from '@patternfly/react-tokens/dist/js/global_FontWeight_bold';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const chartStyles = {\n    chartHeight: 150,\n    subTitle: {\n        fontWeight: global_FontWeight_bold.value,\n    },\n};\nexport const styles = {\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { ChartLabel, ChartLegend, ChartPie, ChartThemeColor } from '@patternfly/react-charts';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { formatValue } from 'utils/formatValue';\nimport { chartStyles, styles } from './costChart.styles';\nclass CostChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            width: 0,\n        };\n        // Override legend layout\n        this.getLegendLabel = () => {\n            return (_a) => {\n                var { values } = _a, props = __rest(_a, [\"values\"]);\n                return (React.createElement(ChartLabel, Object.assign({}, props, { style: [{ fontWeight: chartStyles.subTitle.fontWeight }, {}], text: [values[props.index], props.text] })));\n            };\n        };\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, size: \"md\" })));\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    render() {\n        const { report, reportFetchStatus, t } = this.props;\n        const { width } = this.state;\n        const hasCost = report && report.meta && report.meta.total && report.meta.total.cost;\n        const hasMarkup = hasCost && report.meta.total.cost.markup;\n        const hasRaw = hasCost && report.meta.total.cost.raw;\n        const hasUsage = hasCost && report.meta.total.cost.usage;\n        const markupUnits = hasMarkup ? report.meta.total.cost.markup.units : 'USD';\n        const rawUnits = hasRaw ? report.meta.total.cost.raw.units : 'USD';\n        const usageUnits = hasUsage ? report.meta.total.cost.usage.units : 'USD';\n        const markupValue = hasMarkup ? report.meta.total.cost.markup.value : 0;\n        const rawValue = hasRaw ? report.meta.total.cost.raw.value : 0;\n        const usageValue = hasUsage ? report.meta.total.cost.usage.value : 0;\n        const markup = formatValue(hasMarkup ? report.meta.total.cost.markup.value : 0, markupUnits);\n        const raw = formatValue(hasRaw ? report.meta.total.cost.raw.value : 0, rawUnits);\n        const usage = formatValue(hasUsage ? report.meta.total.cost.usage.value : 0, usageUnits);\n        const markupLabel = t('breakdown.cost_chart.markup_label');\n        const rawLabel = t('breakdown.cost_chart.raw_label');\n        const usageLabel = t('breakdown.cost_chart.usage_label');\n        // Override legend label layout\n        const LegendLabel = this.getLegendLabel();\n        const Legend = (React.createElement(ChartLegend, { gutter: 25, itemsPerRow: 2, labelComponent: React.createElement(LegendLabel, { dy: 10, lineHeight: 1.5, values: [raw, markup, usage] }), rowGutter: 20 }));\n        return (React.createElement(\"div\", { ref: this.containerRef, style: { height: chartStyles.chartHeight } }, reportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(ChartPie, { ariaDesc: t('breakdown.cost_chart.aria_desc'), ariaTitle: t('breakdown.cost_chart.aria_title'), constrainToVisibleArea: true, data: [\n                { x: rawLabel, y: rawValue, units: rawUnits },\n                { x: markupLabel, y: markupValue, units: markupUnits },\n                { x: usageLabel, y: usageValue, units: usageUnits },\n            ], height: chartStyles.chartHeight, labels: ({ datum }) => t('breakdown.cost_chart.tooltip', {\n                name: datum.x,\n                value: formatValue(datum.y, datum.units),\n            }), legendComponent: Legend, legendData: [\n                {\n                    name: rawLabel,\n                },\n                {\n                    name: markupLabel,\n                },\n                {\n                    name: usageLabel,\n                },\n            ], legendOrientation: \"vertical\", legendPosition: \"right\", padding: {\n                bottom: 20,\n                left: 0,\n                right: width - chartStyles.chartHeight,\n                top: 20,\n            }, themeColor: ChartThemeColor.green, width: width }))));\n    }\n}\nconst CostChart = withTranslation()(CostChartBase);\nexport { CostChart };\n","import global_spacer_xl from '@patternfly/react-tokens/dist/js/global_spacer_xl';\nexport const styles = {\n    mainContent: {\n        marginTop: global_spacer_xl.value,\n    },\n    subTitle: {\n        textAlign: 'right',\n    },\n};\n","import { Title } from '@patternfly/react-core';\nimport { getQuery, orgUnitIdKey } from 'api/queries/query';\nimport { ReportSummaryItem, ReportSummaryItems } from 'components/reports/reportSummary';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue } from 'utils/formatValue';\nimport { formatCurrency } from 'utils/formatValue';\nimport { styles } from './summaryModal.styles';\nconst reportType = \"cost\" /* cost */;\nclass SummaryModalViewBase extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    render() {\n        const { groupBy, report, reportFetchStatus, t } = this.props;\n        const cost = formatCurrency(report && report.meta && report.meta.total ? report.meta.total.cost.total.value : 0);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { style: styles.subTitle },\n                React.createElement(Title, { headingLevel: \"h2\", size: \"xl\" }, t('details.cost_value', { value: cost }))),\n            React.createElement(\"div\", { style: styles.mainContent },\n                React.createElement(ReportSummaryItems, { idKey: groupBy, report: report, status: reportFetchStatus }, ({ items }) => items.map(_item => (React.createElement(ReportSummaryItem, { key: _item.id, formatOptions: {}, formatValue: formatValue, label: _item.label ? _item.label.toString() : '', totalValue: report.meta.total.cost.total.value, units: report.meta.total.cost.total.units, value: _item.cost.total.value })))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, parentGroupBy, query, reportPathsType }) => {\n    const groupByOrg = query && query.group_by[orgUnitIdKey] ? query.group_by[orgUnitIdKey] : undefined;\n    const newQuery = {\n        filter: Object.assign({ time_scope_units: 'month', time_scope_value: -1, resolution: 'monthly', [parentGroupBy]: filterBy }, (query && query.filter && query.filter.account && { account: query.filter.account })),\n        filter_by: query ? query.filter_by : undefined,\n        group_by: Object.assign(Object.assign({}, (groupByOrg && { [orgUnitIdKey]: groupByOrg })), (groupBy && { [groupBy]: '*' })),\n    };\n    const queryString = getQuery(newQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst SummaryModalView = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(SummaryModalViewBase));\nexport { SummaryModalView };\n","import './summaryModal.scss';\nimport { Modal } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { SummaryModalView } from './summaryModalView';\nclass SummaryModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    shouldComponentUpdate(nextProps) {\n        const { filterBy, isOpen } = this.props;\n        return nextProps.filterBy !== filterBy || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { filterBy, groupBy, isOpen, parentGroupBy, query, reportPathsType, t } = this.props;\n        return (React.createElement(Modal, { className: \"modalOverride\", isOpen: isOpen, onClose: this.handleClose, title: t('details.summary_modal_title', {\n                groupBy,\n                name: filterBy,\n            }), variant: \"large\" },\n            React.createElement(SummaryModalView, { filterBy: filterBy, groupBy: groupBy, parentGroupBy: parentGroupBy, query: query, reportPathsType: reportPathsType })));\n    }\n}\nconst SummaryModal = withTranslation()(SummaryModalBase);\nexport { SummaryModal };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    card: {},\n    skeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    viewAllContainer: {\n        marginLeft: '-15px',\n    },\n};\n","import { Button, ButtonType, ButtonVariant, Card, CardBody, CardFooter, CardTitle, Title, } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport { getQuery, orgUnitIdKey } from 'api/queries/query';\nimport { ReportSummaryItem, ReportSummaryItems } from 'components/reports/reportSummary';\nimport { SummaryModal } from 'pages/details/components/summary/summaryModal';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getTestProps, testIds } from 'testIds';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { formatValue } from 'utils/formatValue';\nimport { styles } from './summaryCard.styles';\nclass SummaryBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            isBulletChartModalOpen: false,\n        };\n        this.getItems = () => {\n            const { groupBy, report } = this.props;\n            const computedItems = getComputedReportItems({\n                report,\n                idKey: groupBy,\n            });\n            return computedItems;\n        };\n        this.getSummary = () => {\n            const { groupBy, report, reportFetchStatus } = this.props;\n            return (React.createElement(ReportSummaryItems, { idKey: groupBy, report: report, status: reportFetchStatus }, ({ items }) => items.map(reportItem => (React.createElement(ReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: {}, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : undefined, totalValue: report.meta.total.cost.total.value, units: report.meta.total.cost.total.units, value: reportItem.cost.total.value })))));\n        };\n        this.getViewAll = () => {\n            const { filterBy, groupBy, parentGroupBy, query, reportPathsType, t } = this.props;\n            const { isBulletChartModalOpen } = this.state;\n            const computedItems = this.getItems();\n            const otherIndex = computedItems.findIndex(i => {\n                const id = i.id;\n                if (id && id !== null) {\n                    return id.toString().includes('Other');\n                }\n            });\n            if (otherIndex !== -1) {\n                return (React.createElement(\"div\", { style: styles.viewAllContainer },\n                    React.createElement(Button, Object.assign({}, getTestProps(testIds.details.view_all_btn), { onClick: this.handleBulletChartModalOpen, type: ButtonType.button, variant: ButtonVariant.link }), t('details.view_all', { groupBy })),\n                    React.createElement(SummaryModal, { filterBy: filterBy, groupBy: groupBy, isOpen: isBulletChartModalOpen, onClose: this.handleBulletChartModalClose, parentGroupBy: parentGroupBy, query: query, reportPathsType: reportPathsType })));\n            }\n            else {\n                return null;\n            }\n        };\n        this.handleBulletChartModalClose = (isOpen) => {\n            this.setState({ isBulletChartModalOpen: isOpen });\n        };\n        this.handleBulletChartModalOpen = event => {\n            this.setState({ isBulletChartModalOpen: true });\n            event.preventDefault();\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    render() {\n        const { groupBy, reportFetchStatus, t } = this.props;\n        return (React.createElement(Card, { style: styles.card },\n            React.createElement(CardTitle, null,\n                React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('breakdown.summary_title', { groupBy }))),\n            React.createElement(CardBody, null, reportFetchStatus === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: \"md\" }),\n                React.createElement(Skeleton, { size: \"md\", style: styles.skeleton }),\n                React.createElement(Skeleton, { size: \"md\", style: styles.skeleton }),\n                React.createElement(Skeleton, { size: \"md\", style: styles.skeleton }))) : (this.getSummary())),\n            React.createElement(CardFooter, null, this.getViewAll())));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, parentGroupBy, query, reportPathsType, reportType }) => {\n    const groupByOrg = query && query.group_by[orgUnitIdKey] ? query.group_by[orgUnitIdKey] : undefined;\n    const newQuery = {\n        filter: Object.assign({ limit: 3, time_scope_units: 'month', time_scope_value: -1, resolution: 'monthly', [parentGroupBy]: filterBy }, (query && query.filter && query.filter.account && { account: query.filter.account })),\n        filter_by: query ? query.filter_by : undefined,\n        group_by: Object.assign(Object.assign({}, (groupByOrg && { [orgUnitIdKey]: groupByOrg })), (groupBy && { [groupBy]: '*' })),\n    };\n    const queryString = getQuery(newQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportFetchStatus,\n        reportPathsType,\n        reportType,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst SummaryCard = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(SummaryBase));\nexport { SummaryCard };\n","import global_FontWeight_bold from '@patternfly/react-tokens/dist/js/global_FontWeight_bold';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    chartSkeleton: {\n        marginBottom: global_spacer_md.value,\n    },\n    capacity: {\n        fontWeight: global_FontWeight_bold.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { ChartBullet } from '@patternfly/react-charts';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport { getQuery } from 'api/queries/query';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { styles } from './usageChart.styles';\nclass UsageChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            width: 0,\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current && this.containerRef.current.clientWidth) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getCpuChart = () => {\n            const { parentGroupBy, reportFetchStatus, report } = this.props;\n            const { width } = this.state;\n            const chartDatum = parentGroupBy === 'cluster' ? this.getChartDatumWithCapacity() : this.getChartDatum();\n            if (!report || chartDatum.usage.length === 0) {\n                return null;\n            }\n            return (React.createElement(\"div\", { className: \"chartOverride\" }, reportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(React.Fragment, null,\n                Boolean(parentGroupBy === 'cluster') && this.getFreeSpace(),\n                React.createElement(ChartBullet, { comparativeErrorMeasureData: chartDatum.limit.value\n                        ? [\n                            {\n                                tooltip: chartDatum.limit.tooltip,\n                                y: chartDatum.limit.value,\n                            },\n                        ]\n                        : [], comparativeErrorMeasureLegendData: chartDatum.limit.value ? [{ name: chartDatum.limit.legend }] : [], height: this.getChartHeight(), labels: ({ datum }) => `${datum.tooltip}`, legendPosition: \"bottom-left\", legendItemsPerRow: this.getItemsPerRow(), maxDomain: this.isDatumEmpty(chartDatum) ? 100 : undefined, minDomain: 0, padding: {\n                        bottom: 75,\n                        left: 10,\n                        right: 50,\n                        top: 0,\n                    }, primarySegmentedMeasureData: chartDatum.usage.length\n                        ? chartDatum.usage.map(datum => {\n                            return {\n                                tooltip: datum.tooltip,\n                                y: datum.value,\n                            };\n                        })\n                        : [], primarySegmentedMeasureLegendData: chartDatum.usage.length\n                        ? chartDatum.usage.map(datum => {\n                            return {\n                                name: datum.legend,\n                            };\n                        })\n                        : [], qualitativeRangeData: chartDatum.ranges.length\n                        ? [\n                            {\n                                tooltip: chartDatum.ranges[0].tooltip,\n                                y: chartDatum.ranges[0].value,\n                            },\n                        ]\n                        : [], qualitativeRangeLegendData: chartDatum.ranges.length ? [{ name: chartDatum.ranges[0].legend }] : [], width: width })))));\n        };\n        this.getChartHeight = () => {\n            const { parentGroupBy } = this.props;\n            const { width } = this.state;\n            if (parentGroupBy === 'cluster') {\n                return width > 950 ? 115 : width > 450 ? 150 : 210;\n            }\n            else {\n                return width > 700 ? 115 : width > 450 ? 150 : 180;\n            }\n        };\n        this.getItemsPerRow = () => {\n            const { width } = this.state;\n            return width > 950 ? 4 : width > 700 ? 3 : width > 450 ? 2 : 1;\n        };\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, size: \"md\" }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, size: \"xs\" })));\n        };\n        this.isDatumEmpty = (datum) => {\n            let hasRange = false;\n            for (const range of datum.ranges) {\n                if (range.value) {\n                    hasRange = true;\n                    break;\n                }\n            }\n            let hasUsage = false;\n            for (const usage of datum.usage) {\n                if (usage.value) {\n                    hasUsage = true;\n                    break;\n                }\n            }\n            return !(datum.limit.value || hasRange || hasUsage);\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n        window.addEventListener('resize', this.handleResize);\n        this.handleResize();\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        if (prevProps.queryString !== this.props.queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getChartDatum() {\n        const { report, reportType, t } = this.props;\n        const datum = {\n            limit: {},\n            ranges: [],\n            usage: [],\n        };\n        // Always show bullet chart legends https://github.com/project-koku/koku-ui/issues/963\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasLimit = hasTotal && report.meta.total.limit && report.meta.total.limit !== null;\n        const limit = Math.trunc(hasLimit ? report.meta.total.limit.value : 0);\n        const limitUnits = t(`units.${unitLookupKey(hasLimit ? report.meta.total.limit.units : '')}`);\n        datum.limit = {\n            legend: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            tooltip: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            value: Math.trunc(limit),\n        };\n        const hasRequest = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = t(`units.${unitLookupKey(hasRequest ? report.meta.total.request.units : '')}`);\n        datum.ranges = [\n            {\n                legend: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                value: Math.trunc(request),\n            },\n        ];\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = t(`units.${unitLookupKey(hasUsage ? report.meta.total.usage.units : '')}`);\n        datum.usage = [\n            {\n                legend: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                value: Math.trunc(usage),\n            },\n        ];\n        return datum;\n    }\n    getChartDatumWithCapacity() {\n        const { report, reportType, t } = this.props;\n        const datum = {\n            limit: {},\n            ranges: [],\n            usage: [],\n        };\n        // Always show bullet chart legends https://github.com/project-koku/koku-ui/issues/963\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasLimit = hasTotal && report.meta.total.limit && report.meta.total.limit !== null;\n        const limit = Math.trunc(hasLimit ? report.meta.total.limit.value : 0);\n        const limitUnits = t(`units.${unitLookupKey(hasLimit ? report.meta.total.limit.units : '')}`);\n        datum.limit = {\n            legend: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            tooltip: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            value: Math.trunc(limit),\n        };\n        const hasCapacity = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const capacity = Math.trunc(hasCapacity ? report.meta.total.capacity.value : 0);\n        const capacityUnits = t(`units.${unitLookupKey(hasCapacity ? report.meta.total.capacity.units : '')}`);\n        datum.ranges = [\n            {\n                legend: t(`details.usage.${reportType}_capacity`, {\n                    value: capacity,\n                    units: capacityUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_capacity`, {\n                    value: capacity,\n                    units: capacityUnits,\n                }),\n                value: Math.trunc(capacity),\n            },\n        ];\n        const hasRequest = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = t(`units.${unitLookupKey(hasRequest ? report.meta.total.request.units : '')}`);\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = t(`units.${unitLookupKey(hasUsage ? report.meta.total.usage.units : '')}`);\n        datum.usage = [\n            {\n                legend: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                value: Math.trunc(usage),\n            },\n            {\n                legend: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                value: Math.trunc(request),\n            },\n        ];\n        return datum;\n    }\n    getFreeSpace() {\n        const { report, reportType, t } = this.props;\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasCapacity = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const hasRequest = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const capacity = Math.trunc(hasCapacity ? report.meta.total.capacity.value : 0);\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = t(`units.${unitLookupKey(hasRequest ? report.meta.total.request.units : '')}`);\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = t(`units.${unitLookupKey(hasUsage ? report.meta.total.usage.units : '')}`);\n        // Show negative values https://github.com/project-koku/koku-ui/issues/1214\n        const unusedRequestCapacity = capacity - request;\n        const unusedUsageCapacity = capacity - usage;\n        let unusedRequestCapacityPercentage = request > 0 ? (request / capacity) * 100 : 0;\n        if (unusedRequestCapacityPercentage > 100) {\n            unusedRequestCapacityPercentage = 100 - unusedRequestCapacityPercentage;\n        }\n        let unusedUsageCapacityPercentage = capacity > usage ? (usage / capacity) * 100 : 0;\n        if (unusedUsageCapacityPercentage > 100) {\n            unusedUsageCapacityPercentage = 100 - unusedUsageCapacityPercentage;\n        }\n        return (React.createElement(Grid, { hasGutter: true },\n            React.createElement(GridItem, { md: 12, lg: 6 },\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_usage_unused_label`)),\n                React.createElement(\"div\", { style: styles.capacity }, formatValue(unusedUsageCapacity)),\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_usage_unused_units`, {\n                    percentage: formatValue(unusedUsageCapacityPercentage, usageUnits),\n                    units: usageUnits,\n                }))),\n            React.createElement(GridItem, { md: 12, lg: 6 },\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_requests_unused_label`)),\n                React.createElement(\"div\", { style: styles.capacity }, formatValue(unusedRequestCapacity)),\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_requests_unused_units`, {\n                    percentage: formatValue(unusedRequestCapacityPercentage, requestUnits),\n                    units: requestUnits,\n                })))));\n    }\n    render() {\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef }, this.getCpuChart()));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { groupBy, parentGroupBy, reportPathsType, reportType }) => {\n    const query = {\n        filter: {\n            time_scope_units: 'month',\n            time_scope_value: -1,\n            resolution: 'monthly',\n            limit: 3,\n        },\n        group_by: {\n            [parentGroupBy]: groupBy,\n        },\n    };\n    const queryString = getQuery(query);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        report,\n        reportFetchStatus,\n        queryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst UsageChart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(UsageChartBase));\nexport { UsageChart };\n","import { Button, ButtonVariant, Card, CardBody, CardTitle, Grid, GridItem, Popover, Title, } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { orgUnitIdKey, tagPrefix } from 'api/queries/query';\nimport { Cluster } from 'pages/details/components/cluster/cluster';\nimport { CostChart } from 'pages/details/components/costChart/costChart';\nimport { SummaryCard } from 'pages/details/components/summary/summaryCard';\nimport { UsageChart } from 'pages/details/components/usageChart/usageChart';\nimport { styles } from 'pages/details/ocpDetails/detailsHeader.styles';\nimport React from 'react';\nconst PLACEHOLDER = 'placeholder';\nclass CostOverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        // Returns cluster chart\n        this.getClusterChart = (widget) => {\n            const { groupBy, report, t } = this.props;\n            let showWidget = false;\n            for (const groupById of widget.cluster.showWidgetOnGroupBy) {\n                if (groupById === groupBy || (groupById === tagPrefix && groupBy.indexOf(tagPrefix) !== -1)) {\n                    showWidget = true;\n                    break;\n                }\n            }\n            if (showWidget) {\n                return (React.createElement(Card, null,\n                    React.createElement(CardTitle, null,\n                        React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('breakdown.cluster_title'))),\n                    React.createElement(CardBody, null,\n                        React.createElement(Cluster, { groupBy: widget.cluster.reportGroupBy, report: report }))));\n            }\n            return null;\n        };\n        // Returns cost breakdown chart\n        this.getCostChart = () => {\n            const { report, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" },\n                        t('breakdown.cost_breakdown_title'),\n                        React.createElement(Popover, { \"aria-label\": t('breakdown.cost_breakdown_aria_label'), enableFlip: true, bodyContent: React.createElement(React.Fragment, null,\n                                React.createElement(\"p\", { style: styles.infoTitle }, t('breakdown.raw_cost_title')),\n                                React.createElement(\"p\", null, t('breakdown.raw_cost_desc')),\n                                React.createElement(\"br\", null),\n                                React.createElement(\"p\", { style: styles.infoTitle }, t('breakdown.usage_cost_title')),\n                                React.createElement(\"p\", null, t('breakdown.usage_cost_desc')),\n                                React.createElement(\"br\", null),\n                                React.createElement(\"p\", { style: styles.infoTitle }, t('breakdown.markup_title')),\n                                React.createElement(\"p\", null, t('breakdown.markup_desc')),\n                                React.createElement(\"br\", null),\n                                React.createElement(\"a\", { href: t('docs.using_cost_model'), target: \"blank\" }, t('cost_models_wizard.general_info.learn_more'))) },\n                            React.createElement(Button, { variant: ButtonVariant.plain },\n                                React.createElement(OutlinedQuestionCircleIcon, { style: styles.info }))))),\n                React.createElement(CardBody, null,\n                    React.createElement(CostChart, { report: report }))));\n        };\n        // Returns CPU usage chart\n        this.getCpuUsageChart = (widget) => {\n            const { filterBy, groupBy, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.cpu_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(UsageChart, { groupBy: filterBy, parentGroupBy: groupBy, reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns memory usage chart\n        this.getMemoryUsageChart = (widget) => {\n            const { filterBy, groupBy, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.memory_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(UsageChart, { groupBy: filterBy, parentGroupBy: groupBy, reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns summary card widget\n        this.getSummaryCard = (widget) => {\n            const { filterBy, groupBy, query } = this.props;\n            let showWidget = false;\n            for (const groupById of widget.reportSummary.showWidgetOnGroupBy) {\n                if (groupById === groupBy ||\n                    (query && query.group_by && query.group_by[orgUnitIdKey]) ||\n                    (groupById === tagPrefix && groupBy && groupBy.indexOf(tagPrefix) !== -1)) {\n                    showWidget = true;\n                    break;\n                }\n            }\n            if (showWidget) {\n                return (React.createElement(SummaryCard, { filterBy: filterBy, groupBy: widget.reportSummary.reportGroupBy, parentGroupBy: groupBy, query: query, reportPathsType: widget.reportPathsType, reportType: widget.reportType }));\n            }\n            else if (widget.reportSummary.usePlaceholder) {\n                return PLACEHOLDER;\n            }\n            return null;\n        };\n        // Helper to fill grid columns instead of rows, based on the order defined by the reducer\n        this.getWidgetsColumns = () => {\n            const { selectWidgets, widgets } = this.props;\n            const visibleWidgets = [];\n            widgets.map(widgetId => {\n                const widget = selectWidgets[widgetId];\n                const renderedWidget = this.renderWidget(widget);\n                if (renderedWidget !== null) {\n                    visibleWidgets.push(renderedWidget);\n                }\n            });\n            const rows = Math.floor(visibleWidgets.length / 2) + (visibleWidgets.length % 2);\n            const leftColumnWidgets = [];\n            const rightColumnWidgets = [];\n            for (let i = 0; i < rows; i++) {\n                if (visibleWidgets[i] !== PLACEHOLDER) {\n                    leftColumnWidgets.push(visibleWidgets[i]);\n                }\n                if (i + rows < visibleWidgets.length) {\n                    if (visibleWidgets[i + rows] !== PLACEHOLDER) {\n                        rightColumnWidgets.push(visibleWidgets[i + rows]);\n                    }\n                }\n            }\n            return { leftColumnWidgets, rightColumnWidgets };\n        };\n    }\n    // Returns rendered widget based on type\n    renderWidget(widget) {\n        switch (widget.type) {\n            case \"cluster\" /* cluster */:\n                return this.getClusterChart(widget);\n            case \"cost\" /* cost */:\n                return this.getCostChart();\n            case \"cpuUsage\" /* cpuUsage */:\n                return this.getCpuUsageChart(widget);\n            case \"memoryUsage\" /* memoryUsage */:\n                return this.getMemoryUsageChart(widget);\n            case \"summary\" /* reportSummary */:\n                return this.getSummaryCard(widget);\n            default:\n                return null;\n        }\n    }\n    render() {\n        // Sort widgets vertically\n        const { leftColumnWidgets, rightColumnWidgets } = this.getWidgetsColumns();\n        return (React.createElement(Grid, { hasGutter: true },\n            React.createElement(GridItem, { lg: 12, xl: 6 },\n                React.createElement(Grid, { hasGutter: true }, leftColumnWidgets.map((widget, index) => {\n                    return React.createElement(GridItem, { key: `widget-${index}` }, widget);\n                }))),\n            React.createElement(GridItem, { lg: 12, xl: 6 },\n                React.createElement(Grid, { hasGutter: true }, rightColumnWidgets.map((widget, index) => {\n                    return React.createElement(GridItem, { key: `widget-${index}` }, widget);\n                })))));\n    }\n}\nexport { CostOverviewBase };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    export: {\n        marginRight: global_spacer_md.value,\n    },\n    toolbarContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport './dataToolbar.scss';\nimport { Button, ButtonVariant, Dropdown, DropdownItem, DropdownPosition, DropdownToggle, DropdownToggleCheckbox, InputGroup, Select, SelectOption, SelectVariant, TextInput, Toolbar, ToolbarContent, ToolbarFilter, ToolbarGroup, ToolbarItem, ToolbarToggleGroup, } from '@patternfly/react-core';\nimport { ExportIcon } from '@patternfly/react-icons/dist/js/icons/export-icon';\nimport { FilterIcon } from '@patternfly/react-icons/dist/js/icons/filter-icon';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport { orgUnitIdKey, orgUnitNameKey, tagKey, tagPrefix } from 'api/queries/query';\nimport { cloneDeep } from 'lodash';\nimport { uniq, uniqBy } from 'lodash';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { isEqual } from 'utils/equal';\nimport { styles } from './dataToolbar.styles';\nconst defaultFilters = {\n    tag: {},\n};\n// If the number of tag keys are greater or equal, then show text input Vs select\n// See https://github.com/project-koku/koku/pull/2069\nconst tagKeyValueLimit = 50;\nexport class DataToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            categoryInput: '',\n            filters: cloneDeep(defaultFilters),\n            isBulkSelectOpen: false,\n            isCategoryDropdownOpen: false,\n            isOrgUnitSelectExpanded: false,\n            isTagValueDropdownOpen: false,\n            isTagKeySelectExpanded: false,\n            isTagValueSelectExpanded: false,\n            tagKeyValueInput: '',\n        };\n        this.state = Object.assign({}, this.defaultState);\n        // Initialize\n        this.getDefaultCategory = () => {\n            const { categoryOptions, groupBy, query } = this.props;\n            if (!categoryOptions) {\n                return 'name';\n            }\n            if (query && query.group_by && query.group_by[orgUnitIdKey]) {\n                return orgUnitIdKey;\n            }\n            for (const option of categoryOptions) {\n                if (groupBy === option.key || (groupBy && groupBy.indexOf(tagPrefix) !== -1 && option.key === tagKey)) {\n                    return option.key;\n                }\n            }\n            return categoryOptions[0].key;\n        };\n        this.getActiveFilters = query => {\n            const filters = cloneDeep(defaultFilters);\n            if (query && query.filter_by) {\n                Object.keys(query.filter_by).forEach(key => {\n                    const values = Array.isArray(query.filter_by[key]) ? [...query.filter_by[key]] : [query.filter_by[key]];\n                    if (key.indexOf(tagPrefix) !== -1) {\n                        filters.tag[key.substring(tagPrefix.length)] = values;\n                    }\n                    else {\n                        filters[key] = values;\n                    }\n                });\n            }\n            return filters;\n        };\n        this.onDelete = (type, chip) => {\n            // Todo: workaround for https://github.com/patternfly/patternfly-react/issues/3552\n            // This prevents us from using a localized string, if necessary\n            const filterType = type && type.key ? type.key : type;\n            const id = chip && chip.key ? chip.key : chip;\n            if (filterType) {\n                this.setState((prevState) => {\n                    if (prevState.filters.tag[filterType]) {\n                        // Todo: use ID\n                        prevState.filters.tag[filterType] = prevState.filters.tag[filterType].filter(s => s !== id);\n                    }\n                    else if (prevState.filters[filterType]) {\n                        prevState.filters[filterType] = prevState.filters[filterType].filter(s => s !== id);\n                    }\n                    return {\n                        filters: prevState.filters,\n                    };\n                }, () => {\n                    const { filters } = this.state;\n                    const _filterType = filters.tag[filterType] ? `${tagPrefix}${filterType}` : filterType; // Todo: use ID\n                    this.props.onFilterRemoved(_filterType, id);\n                });\n            }\n            else {\n                this.setState({\n                    filters: cloneDeep(defaultFilters),\n                }, () => {\n                    this.props.onFilterRemoved(null); // Clear all\n                });\n            }\n        };\n        // Bulk select\n        this.getBulkSelect = () => {\n            const { isAllSelected, isBulkSelectDisabled, isDisabled, itemsPerPage, itemsTotal, selectedItems, t } = this.props;\n            const { isBulkSelectOpen } = this.state;\n            const numSelected = isAllSelected ? itemsTotal : selectedItems ? selectedItems.length : 0;\n            const allSelected = (isAllSelected || numSelected === itemsTotal) && itemsTotal > 0;\n            const anySelected = numSelected > 0;\n            const someChecked = anySelected ? null : false;\n            const isChecked = allSelected ? true : someChecked;\n            const dropdownItems = [\n                React.createElement(DropdownItem, { key: \"item-1\", onClick: () => this.onBulkSelectClicked('none') }, t('toolbar.bulk_select.select_none')),\n                React.createElement(DropdownItem, { key: \"item-2\", onClick: () => this.onBulkSelectClicked('page') }, t('toolbar.bulk_select.select_page', {\n                    value: itemsPerPage,\n                })),\n                React.createElement(DropdownItem, { key: \"item-3\", onClick: () => this.onBulkSelectClicked('all') }, t('toolbar.bulk_select.select_all', { value: itemsTotal })),\n            ];\n            return (React.createElement(Dropdown, { onSelect: this.onBulkSelect, position: DropdownPosition.left, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled || isBulkSelectDisabled, splitButtonItems: [\n                        React.createElement(DropdownToggleCheckbox, { id: \"bulk-select\", key: \"bulk-select\", \"aria-label\": anySelected ? t('toolbar.bulk_select.aria_deselect') : t('toolbar.bulk_select.aria_select'), isChecked: isChecked, onClick: () => {\n                                anySelected ? this.onBulkSelectClicked('none') : this.onBulkSelectClicked('all');\n                            } }),\n                    ], onToggle: this.onBulkSelectToggle }, numSelected !== 0 && React.createElement(React.Fragment, null,\n                    numSelected,\n                    \" selected\")), isOpen: isBulkSelectOpen, dropdownItems: dropdownItems }));\n        };\n        this.onBulkSelectClicked = (action) => {\n            const { onBulkSelected } = this.props;\n            if (onBulkSelected) {\n                onBulkSelected(action);\n            }\n        };\n        this.onBulkSelect = () => {\n            this.setState({\n                isBulkSelectOpen: !this.state.isBulkSelectOpen,\n            });\n        };\n        this.onBulkSelectToggle = isOpen => {\n            this.setState({\n                isBulkSelectOpen: isOpen,\n            });\n        };\n        this.getCurrentCategoryOption = () => {\n            const { categoryOptions } = this.props;\n            const { currentCategory } = this.state;\n            if (!categoryOptions) {\n                return undefined;\n            }\n            for (const option of categoryOptions) {\n                if (currentCategory === option.key) {\n                    return option;\n                }\n            }\n            return categoryOptions[0];\n        };\n        this.onCategoryClick = value => {\n            this.setState({\n                currentCategory: value,\n            });\n        };\n        this.onCategorySelect = () => {\n            this.setState({\n                categoryInput: '',\n                currentTagKey: undefined,\n                isCategoryDropdownOpen: !this.state.isCategoryDropdownOpen,\n            });\n        };\n        this.onCategoryToggle = isOpen => {\n            this.setState({\n                isCategoryDropdownOpen: isOpen,\n            });\n        };\n        // Category input\n        this.getCategoryInput = categoryOption => {\n            const { isDisabled, t } = this.props;\n            const { currentCategory, filters, categoryInput } = this.state;\n            return (React.createElement(ToolbarFilter, { categoryName: categoryOption, chips: filters[categoryOption.key], deleteChip: this.onDelete, key: categoryOption.key, showToolbarItem: currentCategory === categoryOption.key },\n                React.createElement(InputGroup, null,\n                    React.createElement(TextInput, { isDisabled: isDisabled, name: `${categoryOption.key}-input`, id: `${categoryOption.key}-input`, type: \"search\", \"aria-label\": t(`filter_by.${categoryOption.key}.input_aria_label`), onChange: this.onCategoryInputChange, value: categoryInput, placeholder: t(`filter_by.${categoryOption.key}.placeholder`), onKeyDown: evt => this.onCategoryInput(evt, categoryOption.key) }),\n                    React.createElement(Button, { isDisabled: isDisabled, variant: ButtonVariant.control, \"aria-label\": t(`filter_by.${categoryOption.key}.button_aria_label`), onClick: evt => this.onCategoryInput(evt, categoryOption.key) },\n                        React.createElement(SearchIcon, null)))));\n        };\n        this.getDefaultCategoryOptions = () => {\n            const { t } = this.props;\n            return [{ name: t('filter_by.values.name'), key: 'name' }];\n        };\n        this.onCategoryInputChange = value => {\n            this.setState({ categoryInput: value });\n        };\n        this.onCategoryInput = (event, key) => {\n            const { categoryInput, currentCategory } = this.state;\n            if ((event.key && event.key !== 'Enter') || categoryInput.trim() === '') {\n                return;\n            }\n            this.setState((prevState) => {\n                const prevFilters = prevState.filters[key];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { [currentCategory]: prevFilters && prevFilters.includes(categoryInput)\n                            ? prevFilters\n                            : prevFilters\n                                ? [...prevFilters, categoryInput]\n                                : [categoryInput] }),\n                    categoryInput: '',\n                };\n            }, () => {\n                this.props.onFilterAdded(currentCategory, categoryInput);\n            });\n        };\n        // Org unit select\n        this.getOrgUnitSelect = () => {\n            const { isDisabled, t } = this.props;\n            const { currentCategory, filters, isOrgUnitSelectExpanded } = this.state;\n            const options = this.getOrgUnitOptions().map(option => ({\n                id: option.key,\n                toString: () => option.name,\n                compareTo: value => filters[orgUnitIdKey] ? filters[orgUnitIdKey].find(val => val === value.id) : false,\n            }));\n            const chips = []; // Get selected items as PatternFly's ToolbarChip type\n            const selections = []; // Select options and selections must be same type\n            if (filters[orgUnitIdKey] && Array.isArray(filters[orgUnitIdKey])) {\n                filters[orgUnitIdKey].map(id => {\n                    const option = options.find(val => val.id === id);\n                    if (option) {\n                        selections.push(option);\n                        chips.push({\n                            key: option.id,\n                            node: option.toString(),\n                        });\n                    }\n                });\n            }\n            // Todo: selectOverride is a workaround for https://github.com/patternfly/patternfly-react/issues/4477\n            return (React.createElement(ToolbarFilter, { categoryName: {\n                    key: orgUnitIdKey,\n                    name: t('filter_by.values.org_unit_id'),\n                }, chips: chips, deleteChip: this.onDelete, key: orgUnitIdKey, showToolbarItem: currentCategory === orgUnitIdKey },\n                React.createElement(Select, { isDisabled: isDisabled, className: \"selectOverride\", variant: SelectVariant.checkbox, \"aria-label\": t('filter_by.org_unit.aria_label'), onToggle: this.onOrgUnitToggle, onSelect: this.onOrgUnitSelect, selections: selections, isOpen: isOrgUnitSelectExpanded, placeholderText: t('filter_by.org_unit.placeholder') }, options.map(option => (React.createElement(SelectOption, { description: option.id, key: option.id, value: option }))))));\n        };\n        this.onOrgUnitSelect = (event, selection) => {\n            const checked = event.target.checked;\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters[orgUnitIdKey] ? prevState.filters[orgUnitIdKey] : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign({}, prevState.filters.tag), [orgUnitIdKey]: checked\n                            ? [...prevSelections, selection.id]\n                            : prevSelections.filter(value => value !== selection.id) }),\n                };\n            }, () => {\n                if (checked) {\n                    this.props.onFilterAdded(orgUnitIdKey, selection.id);\n                }\n                else {\n                    this.onDelete(orgUnitIdKey, selection.id);\n                }\n            });\n        };\n        this.onOrgUnitToggle = isOpen => {\n            this.setState({\n                isOrgUnitSelectExpanded: isOpen,\n            });\n        };\n        // Tag key select\n        this.getTagKeySelect = () => {\n            const { isDisabled, t } = this.props;\n            const { currentCategory, currentTagKey, isTagKeySelectExpanded } = this.state;\n            if (currentCategory !== tagKey) {\n                return null;\n            }\n            const selectOptions = this.getTagKeyOptions().map(selectOption => {\n                return React.createElement(SelectOption, { key: selectOption.key, value: selectOption.key });\n            });\n            return (React.createElement(ToolbarItem, null,\n                React.createElement(Select, { isDisabled: isDisabled, variant: SelectVariant.typeahead, \"aria-label\": t('filter_by.tag_key.aria_label'), onClear: this.onTagKeyClear, onToggle: this.onTagKeyToggle, onSelect: this.onTagKeySelect, isOpen: isTagKeySelectExpanded, placeholderText: t('filter_by.tag_key.placeholder'), selections: currentTagKey }, selectOptions)));\n        };\n        this.onTagKeyClear = () => {\n            this.setState({\n                currentTagKey: undefined,\n                isTagKeySelectExpanded: false,\n            });\n        };\n        this.onTagKeySelect = (event, selection) => {\n            this.setState({\n                currentTagKey: selection,\n                isTagKeySelectExpanded: !this.state.isTagKeySelectExpanded,\n            });\n        };\n        this.onTagKeyToggle = isOpen => {\n            this.setState({\n                isTagKeySelectExpanded: isOpen,\n            });\n        };\n        // Tag value select\n        this.getTagValueSelect = tagKeyOption => {\n            const { isDisabled, t } = this.props;\n            const { currentCategory, currentTagKey, filters, isTagValueSelectExpanded, tagKeyValueInput } = this.state;\n            const selectOptions = this.getTagValueOptions().map(selectOption => {\n                return React.createElement(SelectOption, { key: selectOption.key, value: selectOption.key });\n            });\n            return (React.createElement(ToolbarFilter, { categoryName: tagKeyOption, chips: filters.tag[tagKeyOption.key], deleteChip: this.onDelete, key: tagKeyOption.key, showToolbarItem: currentCategory === tagKey && currentTagKey === tagKeyOption.key }, selectOptions.length < tagKeyValueLimit ? (React.createElement(Select, { isDisabled: isDisabled, variant: SelectVariant.checkbox, \"aria-label\": t('filter_by.tag_value.aria_label'), onToggle: this.onTagValueToggle, onSelect: this.onTagValueSelect, selections: filters.tag[tagKeyOption.key] ? filters.tag[tagKeyOption.key] : [], isOpen: isTagValueSelectExpanded, placeholderText: t('filter_by.tag_value.placeholder') }, selectOptions)) : (React.createElement(InputGroup, null,\n                React.createElement(TextInput, { isDisabled: isDisabled, name: \"tagkeyvalue-input\", id: \"tagkeyvalue-input\", type: \"search\", \"aria-label\": t('filter_by.tag_value.aria_label'), onChange: this.onTagValueInputChange, value: tagKeyValueInput, placeholder: t('filter_by.tag_value.input_placeholder'), onKeyDown: evt => this.onTagValueInput(evt) }),\n                React.createElement(Button, { isDisabled: isDisabled, variant: ButtonVariant.control, \"aria-label\": t('filter_by.tag_value.button_aria_label'), onClick: evt => this.onTagValueInput(evt) },\n                    React.createElement(SearchIcon, null))))));\n        };\n        this.onTagValueInputChange = value => {\n            this.setState({ tagKeyValueInput: value });\n        };\n        this.onTagValueInput = event => {\n            const { currentTagKey, tagKeyValueInput } = this.state;\n            if ((event.key && event.key !== 'Enter') || tagKeyValueInput.trim() === '') {\n                return;\n            }\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters.tag[currentTagKey] ? prevState.filters.tag[currentTagKey] : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign(Object.assign({}, prevState.filters.tag), { [currentTagKey]: [...prevSelections, tagKeyValueInput] }) }),\n                    tagKeyValueInput: '',\n                };\n            }, () => {\n                this.props.onFilterAdded(`${tagPrefix}${currentTagKey}`, tagKeyValueInput);\n            });\n        };\n        this.onTagValueSelect = (event, selection) => {\n            const { currentTagKey } = this.state;\n            const checked = event.target.checked;\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters.tag[currentTagKey] ? prevState.filters.tag[currentTagKey] : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign(Object.assign({}, prevState.filters.tag), { [currentTagKey]: checked\n                                ? [...prevSelections, selection]\n                                : prevSelections.filter(value => value !== selection) }) }),\n                };\n            }, () => {\n                if (checked) {\n                    this.props.onFilterAdded(`${tagPrefix}${currentTagKey}`, selection);\n                }\n                else {\n                    this.onDelete(currentTagKey, selection);\n                }\n            });\n        };\n        this.onTagValueToggle = isOpen => {\n            this.setState({\n                isTagValueSelectExpanded: isOpen,\n            });\n        };\n        // Export button\n        this.getExportButton = () => {\n            const { isDisabled, isExportDisabled } = this.props;\n            return (React.createElement(ToolbarItem, null,\n                React.createElement(Button, { isDisabled: isDisabled || isExportDisabled, onClick: this.handleExportClicked, variant: ButtonVariant.plain },\n                    React.createElement(ExportIcon, null))));\n        };\n        this.handleExportClicked = () => {\n            this.props.onExportClicked();\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            currentCategory: this.getDefaultCategory(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { categoryOptions, groupBy, orgReport, query, tagReport } = this.props;\n        if (categoryOptions !== prevProps.categoryOptions ||\n            groupBy !== prevProps.groupBy ||\n            (query && !isEqual(query, prevProps.query)) ||\n            (orgReport && !isEqual(orgReport, prevProps.orgReport)) ||\n            (tagReport && !isEqual(tagReport, prevProps.tagReport))) {\n            this.setState(() => {\n                const filters = this.getActiveFilters(query);\n                return categoryOptions !== prevProps.categoryOptions || prevProps.groupBy !== groupBy\n                    ? {\n                        categoryInput: '',\n                        currentCategory: this.getDefaultCategory(),\n                        currentOrgUnit: '',\n                        currentTagKey: '',\n                        tagKeyValueInput: '',\n                        filters,\n                    }\n                    : {\n                        filters,\n                    };\n            });\n        }\n    }\n    // Category dropdown\n    getCategoryDropdown() {\n        const { categoryOptions, isDisabled } = this.props;\n        const { isCategoryDropdownOpen } = this.state;\n        if (!categoryOptions) {\n            return null;\n        }\n        return (React.createElement(ToolbarItem, null,\n            React.createElement(Dropdown, { onSelect: this.onCategorySelect, position: DropdownPosition.left, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled, onToggle: this.onCategoryToggle, style: { width: '100%' } },\n                    React.createElement(FilterIcon, null),\n                    \" \",\n                    this.getCurrentCategoryOption().name), isOpen: isCategoryDropdownOpen, dropdownItems: categoryOptions &&\n                    categoryOptions.map(option => (React.createElement(DropdownItem, { key: option.key, onClick: () => this.onCategoryClick(option.key) }, option.name))), style: { width: '100%' } })));\n    }\n    getOrgUnitOptions() {\n        const { orgReport } = this.props;\n        let options = [];\n        if (!(orgReport && orgReport.data)) {\n            return options;\n        }\n        // Sort all names first\n        const sortedData = orgReport.data.sort((a, b) => {\n            if (a[orgUnitNameKey] < b[orgUnitNameKey]) {\n                return -1;\n            }\n            if (a[orgUnitNameKey] > b[orgUnitNameKey]) {\n                return 1;\n            }\n            return 0;\n        });\n        // Move roots first\n        const roots = sortedData.filter(org => org.level === 0);\n        const filteredOrgs = sortedData.filter(org => org.level !== 0);\n        roots.map(root => {\n            const item = sortedData.find(org => org[orgUnitIdKey] === root[orgUnitIdKey]);\n            filteredOrgs.unshift(item);\n        });\n        if (filteredOrgs.length > 0) {\n            options = filteredOrgs.map(org => {\n                return {\n                    key: org[orgUnitIdKey],\n                    name: org[orgUnitNameKey],\n                };\n            });\n        }\n        return options;\n    }\n    getTagKeyOptions() {\n        const { tagReport } = this.props;\n        let data = [];\n        let options = [];\n        if (!(tagReport && tagReport.data)) {\n            return options;\n        }\n        // If the key_only param is used, we have an array of strings\n        let hasTagKeys = false;\n        for (const item of tagReport.data) {\n            if (item.hasOwnProperty('key')) {\n                hasTagKeys = true;\n                break;\n            }\n        }\n        // Workaround for https://github.com/project-koku/koku/issues/1797\n        if (hasTagKeys) {\n            const keepData = tagReport.data.map(\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            (_a) => {\n                var { type } = _a, keepProps = __rest(_a, [\"type\"]);\n                return keepProps;\n            });\n            data = uniqBy(keepData, 'key');\n        }\n        else {\n            data = uniq(tagReport.data);\n        }\n        if (data.length > 0) {\n            options = data.map(item => {\n                const key = hasTagKeys ? item.key : item;\n                return {\n                    key,\n                    name: key,\n                };\n            });\n        }\n        return options;\n    }\n    getTagValueOptions() {\n        const { tagReport } = this.props;\n        const { currentTagKey } = this.state;\n        let data = [];\n        if (tagReport && tagReport.data) {\n            data = [...new Set([...tagReport.data])]; // prune duplicates\n        }\n        let options = [];\n        if (data.length > 0) {\n            for (const tag of data) {\n                if (currentTagKey === tag.key && tag.values) {\n                    options = tag.values.map(val => {\n                        return {\n                            key: val,\n                            name: val,\n                        };\n                    });\n                    break;\n                }\n            }\n        }\n        return options;\n    }\n    render() {\n        const { categoryOptions, pagination, showBulkSelect, showExport, showFilter, style } = this.props;\n        const options = categoryOptions ? categoryOptions : this.getDefaultCategoryOptions();\n        // Todo: clearAllFilters workaround https://github.com/patternfly/patternfly-react/issues/4222\n        return (React.createElement(\"div\", { style: style ? style : styles.toolbarContainer },\n            React.createElement(Toolbar, { id: \"details-toolbar\", clearAllFilters: this.onDelete, collapseListedFiltersBreakpoint: \"xl\" },\n                React.createElement(ToolbarContent, null,\n                    React.createElement(ToolbarToggleGroup, { breakpoint: \"xl\", toggleIcon: React.createElement(FilterIcon, null) },\n                        showBulkSelect && React.createElement(ToolbarItem, { variant: \"bulk-select\" }, this.getBulkSelect()),\n                        showFilter && (React.createElement(ToolbarGroup, { variant: \"filter-group\" },\n                            this.getCategoryDropdown(),\n                            this.getTagKeySelect(),\n                            this.getTagKeyOptions().map(option => this.getTagValueSelect(option)),\n                            this.getOrgUnitSelect(),\n                            options &&\n                                options\n                                    .filter(option => option.key !== tagKey && option.key !== orgUnitIdKey)\n                                    .map(option => this.getCategoryInput(option)))),\n                        Boolean(showExport) && React.createElement(ToolbarGroup, null, this.getExportButton())),\n                    React.createElement(ToolbarItem, { alignment: { default: 'alignRight' }, variant: \"pagination\" }, pagination)))));\n    }\n}\nconst DataToolbar = withTranslation()(DataToolbarBase);\nexport { DataToolbar };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    form: {\n        marginLeft: global_spacer_sm.var,\n    },\n    modal: {\n        input: {\n            marginRight: global_spacer_xs.var,\n        },\n        ul: {\n            marginLeft: global_spacer_sm.var,\n        },\n    },\n    title: {\n        marginBottom: global_spacer_md.var,\n    },\n};\n","import { Button, ButtonVariant } from '@patternfly/react-core';\nimport { getQuery, orgUnitIdKey } from 'api/queries/query';\nimport formatDate from 'date-fns/format';\nimport fileDownload from 'js-file-download';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { exportActions, exportSelectors } from 'store/exports';\nimport { getTestProps, testIds } from 'testIds';\nconst reportType = \"cost\" /* cost */;\nexport class ExportSubmitBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            fetchReportClicked: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExport = () => {\n            const { report, reportFetchStatus } = this.props;\n            if (report && reportFetchStatus === 2 /* complete */) {\n                fileDownload(report.data, this.getFileName(), 'text/csv');\n                this.handleClose();\n            }\n        };\n        this.getFileName = () => {\n            const { groupBy, reportPathsType, t } = this.props;\n            const fileName = t('export.file_name', {\n                provider: reportPathsType,\n                groupBy,\n                date: formatDate(new Date(), 'YYYY-MM-DD'),\n            });\n            return `${fileName}.csv`;\n        };\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleFetchReport = () => {\n            const { exportReport, queryString, reportPathsType } = this.props;\n            exportReport(reportPathsType, reportType, queryString);\n            this.setState({\n                fetchReportClicked: true,\n            }, () => {\n                this.getExport();\n            });\n        };\n        this.handleResolutionChange = (_, event) => {\n            this.setState({ resolution: event.currentTarget.value });\n        };\n        this.handleResolutionChange = this.handleResolutionChange.bind(this);\n    }\n    componentDidUpdate(prevProps) {\n        const { report } = this.props;\n        const { fetchReportClicked } = this.state;\n        if (prevProps.report !== report && fetchReportClicked) {\n            this.getExport();\n        }\n    }\n    render() {\n        const { reportFetchStatus, t } = this.props;\n        return (React.createElement(Button, Object.assign({}, getTestProps(testIds.export.submit_btn), { isDisabled: reportFetchStatus === 1 /* inProgress */, key: \"confirm\", onClick: this.handleFetchReport, variant: ButtonVariant.primary }), t('export.confirm')));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const { groupBy, isAllItems, items, query, reportPathsType, resolution, timeScope = -1 } = props;\n    const getQueryString = () => {\n        const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { filter_by: {}, order_by: undefined });\n        newQuery.filter.limit = undefined;\n        newQuery.filter.offset = undefined;\n        newQuery.filter.resolution = resolution;\n        newQuery.filter.time_scope_value = timeScope;\n        // Store filter_by as an array so we can add to it below\n        if (query.filter_by) {\n            for (const key of Object.keys(query.filter_by)) {\n                if (newQuery.filter_by[key] === undefined) {\n                    newQuery.filter_by[key] = [];\n                }\n                newQuery.filter_by[key].push(query.filter_by[key]);\n            }\n        }\n        if (isAllItems) {\n            // Ensure group_by isn't overridden -- org_unit_id is not unique\n            if (groupBy === orgUnitIdKey) {\n                if (newQuery.filter_by[orgUnitIdKey] === undefined) {\n                    newQuery.filter_by[orgUnitIdKey] = [];\n                }\n                newQuery.filter_by[orgUnitIdKey].push(query.group_by[orgUnitIdKey]);\n            }\n        }\n        else {\n            if (groupBy === orgUnitIdKey) {\n                for (const item of items) {\n                    // Note that type only exists when grouping by org units\n                    const type = item.type === 'organizational_unit' ? orgUnitIdKey : item.type;\n                    if (newQuery.filter_by[type] === undefined) {\n                        newQuery.filter_by[type] = [];\n                    }\n                    newQuery.filter_by[type].push(item.id);\n                }\n            }\n            else {\n                for (const item of items) {\n                    if (newQuery.filter_by[groupBy] === undefined) {\n                        newQuery.filter_by[groupBy] = [];\n                    }\n                    newQuery.filter_by[groupBy].push(item.id);\n                }\n            }\n        }\n        return getQuery(newQuery);\n    };\n    const queryString = getQueryString();\n    const report = exportSelectors.selectExport(state, reportPathsType, reportType, queryString);\n    const reportError = exportSelectors.selectExportError(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = exportSelectors.selectExportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportError,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    exportReport: exportActions.exportReport,\n};\nconst ExportSubmit = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(ExportSubmitBase));\nexport { ExportSubmit };\n","import { Button, ButtonVariant, Form, FormGroup, Modal, Radio } from '@patternfly/react-core';\nimport { tagPrefix } from 'api/queries/query';\nimport formatDate from 'date-fns/format';\nimport { orderBy } from 'lodash';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { exportActions } from 'store/exports';\nimport { getTestProps, testIds } from 'testIds';\nimport { styles } from './exportModal.styles';\nimport { ExportSubmit } from './exportSubmit';\nconst resolutionOptions = [\n    { label: 'export.resolution_daily', value: 'daily' },\n    { label: 'export.resolution_monthly', value: 'monthly' },\n];\nconst timeScopeOptions = [\n    { label: 'export.time_scope_current', value: -1 },\n    { label: 'export.time_scope_previous', value: -2 },\n];\nexport class ExportModalBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            timeScope: -1,\n            resolution: 'monthly',\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleMonthChange = (_, event) => {\n            this.setState({ timeScope: Number(event.currentTarget.value) });\n        };\n        this.handleResolutionChange = (_, event) => {\n            this.setState({ resolution: event.currentTarget.value });\n        };\n        this.handleResolutionChange = this.handleResolutionChange.bind(this);\n    }\n    componentDidUpdate(prevProps) {\n        const { isOpen } = this.props;\n        if (isOpen && !prevProps.isOpen) {\n            this.setState(Object.assign({}, this.defaultState));\n        }\n    }\n    render() {\n        const { groupBy, isAllItems, items, query, reportPathsType, t } = this.props;\n        const { resolution, timeScope } = this.state;\n        let sortedItems = [...items];\n        if (this.props.isOpen) {\n            if (items && items.length === 0 && isAllItems) {\n                sortedItems = [\n                    {\n                        label: t('export.all'),\n                    },\n                ];\n            }\n            else {\n                sortedItems = orderBy(sortedItems, ['label'], ['asc']);\n            }\n        }\n        let selectedLabel = t('export.selected', { groupBy });\n        if (groupBy.indexOf(tagPrefix) !== -1) {\n            selectedLabel = t('export.selected_tags');\n        }\n        const thisMonth = new Date();\n        const lastMonth = new Date().setMonth(thisMonth.getMonth() - 1);\n        const currentMonth = formatDate(thisMonth, 'MMMM YYYY');\n        const previousMonth = formatDate(lastMonth - 1, 'MMMM YYYY');\n        return (React.createElement(Modal, { style: styles.modal, isOpen: this.props.isOpen, onClose: this.handleClose, title: t('export.title'), variant: \"small\", actions: [\n                React.createElement(ExportSubmit, { groupBy: groupBy, isAllItems: isAllItems, items: items, key: \"confirm\", timeScope: timeScope, onClose: this.handleClose, query: query, reportPathsType: reportPathsType, resolution: resolution }),\n                React.createElement(Button, Object.assign({}, getTestProps(testIds.export.cancel_btn), { key: \"cancel\", onClick: this.handleClose, variant: ButtonVariant.link }), t('export.cancel')),\n            ] },\n            React.createElement(\"div\", { style: styles.title },\n                React.createElement(\"span\", null, t('export.heading', { groupBy }))),\n            React.createElement(Form, { style: styles.form },\n                React.createElement(FormGroup, { label: t('export.aggregate_type'), fieldId: \"aggregate-type\" },\n                    React.createElement(React.Fragment, null, resolutionOptions.map((option, index) => (React.createElement(Radio, { key: index, id: `resolution-${index}`, isValid: option.value !== undefined, label: t(option.label), value: option.value, checked: resolution === option.value, name: \"resolution\", onChange: this.handleResolutionChange, \"aria-label\": t(option.label) }))))),\n                React.createElement(FormGroup, { label: t('export.time_scope_title'), fieldId: \"timeScope\" },\n                    React.createElement(React.Fragment, null, timeScopeOptions.map((option, index) => (React.createElement(Radio, { key: index, id: `timeScope-${index}`, isValid: option.value !== undefined, label: t(option.label, { date: option.value === -2 ? previousMonth : currentMonth }), value: option.value, checked: timeScope === option.value, name: \"timeScope\", onChange: this.handleMonthChange, \"aria-label\": t(option.label) }))))),\n                React.createElement(FormGroup, { label: selectedLabel, fieldId: \"selected-labels\" },\n                    React.createElement(\"ul\", null, sortedItems.map((groupItem, index) => {\n                        return React.createElement(\"li\", { key: index }, groupItem.label);\n                    }))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {};\n});\nconst mapDispatchToProps = {\n    exportReport: exportActions.exportReport,\n};\nconst ExportModal = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(ExportModalBase));\nexport { ExportModal };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    groupBySelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    groupBySelectorLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n};\n","import { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { orgUnitIdKey, orgUnitNameKey, parseQuery } from 'api/queries/query';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './groupBy.styles';\nclass GroupByOrgBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            defaultItem: this.props.groupBy || this.props.options[0].value,\n            isGroupByOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getCurrentGroupBy = () => {\n            const { getIdKeyForGroupBy } = this.props;\n            const queryFromRoute = parseQuery(location.search);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by ? Object.keys(queryFromRoute.group_by) : [];\n            let groupBy = getIdKeyForGroupBy(queryFromRoute.group_by);\n            for (const key of groupByKeys) {\n                const index = key.indexOf(orgUnitIdKey);\n                if (index !== -1) {\n                    groupBy = queryFromRoute.group_by[orgUnitIdKey];\n                    break;\n                }\n            }\n            return groupBy;\n        };\n        this.getGroupByItems = () => {\n            const { orgReport } = this.props;\n            if (!(orgReport && orgReport.data)) {\n                return [];\n            }\n            // Sort all names first\n            const sortedData = orgReport.data.sort((a, b) => {\n                if (a[orgUnitNameKey] < b[orgUnitNameKey]) {\n                    return -1;\n                }\n                if (a[orgUnitNameKey] > b[orgUnitNameKey]) {\n                    return 1;\n                }\n                return 0;\n            });\n            // Move roots first\n            const roots = sortedData.filter(org => org.level === 0);\n            const filteredOrgs = sortedData.filter(org => org.level !== 0);\n            roots.map(root => {\n                const item = sortedData.find(org => org[orgUnitIdKey] === root[orgUnitIdKey]);\n                filteredOrgs.unshift(item);\n            });\n            return filteredOrgs.map(org => ({\n                id: org[orgUnitIdKey],\n                toString: () => org[orgUnitNameKey],\n            }));\n        };\n        this.handleGroupByClear = () => {\n            this.setState({\n                currentItem: undefined,\n            });\n        };\n        this.handleGroupBySelect = (event, selection) => {\n            const { onItemClicked } = this.props;\n            this.setState({\n                currentItem: selection.id,\n                isGroupByOpen: false,\n            });\n            if (onItemClicked) {\n                onItemClicked(`${orgUnitIdKey}${selection.id}`);\n            }\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({ isGroupByOpen });\n        };\n        this.handleGroupByClear = this.handleGroupByClear.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { groupBy } = this.props;\n        if (prevProps.groupBy !== groupBy) {\n            this.setState({ currentItem: this.getCurrentGroupBy() });\n        }\n    }\n    render() {\n        const { isDisabled = false, t } = this.props;\n        const { currentItem, isGroupByOpen } = this.state;\n        const groupByItems = this.getGroupByItems();\n        const selection = groupByItems.find((item) => item.id === currentItem);\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(Select, { \"aria-label\": t('group_by.org_unit_aria_label'), isDisabled: isDisabled, onClear: this.handleGroupByClear, onToggle: this.handleGroupByToggle, onSelect: this.handleGroupBySelect, isOpen: isGroupByOpen, placeholderText: t('group_by.org_unit_placeholder'), selections: selection, variant: SelectVariant.typeahead }, groupByItems.map(item => (React.createElement(SelectOption, { description: item.id, key: item.id, value: item }))))));\n    }\n}\nconst GroupByOrg = withTranslation()(GroupByOrgBase);\nexport { GroupByOrg };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { parseQuery, tagPrefix } from 'api/queries/query';\nimport { uniq, uniqBy } from 'lodash';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './groupBy.styles';\nclass GroupByTagBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isGroupByOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getGroupByItems = () => {\n            const { tagReport } = this.props;\n            if (!(tagReport && tagReport.data)) {\n                return [];\n            }\n            // If the key_only param is used, we have an array of strings\n            let hasTagKeys = false;\n            for (const item of tagReport.data) {\n                if (item.hasOwnProperty('key')) {\n                    hasTagKeys = true;\n                    break;\n                }\n            }\n            // Workaround for https://github.com/project-koku/koku/issues/1797\n            let data = [];\n            if (hasTagKeys) {\n                const keepData = tagReport.data.map(\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                (_a) => {\n                    var { type } = _a, keepProps = __rest(_a, [\"type\"]);\n                    return keepProps;\n                });\n                data = uniqBy(keepData, 'key');\n            }\n            else {\n                data = uniq(tagReport.data);\n            }\n            return data.map(item => {\n                const tagKey = hasTagKeys ? item.key : item;\n                return React.createElement(SelectOption, { key: item.key, value: tagKey });\n            });\n        };\n        this.getCurrentGroupBy = () => {\n            const queryFromRoute = parseQuery(location.search);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by ? Object.keys(queryFromRoute.group_by) : [];\n            let groupBy;\n            for (const key of groupByKeys) {\n                const index = key.indexOf(tagPrefix);\n                if (index !== -1) {\n                    groupBy = key.slice(tagPrefix.length);\n                    break;\n                }\n            }\n            return groupBy;\n        };\n        this.handleGroupByClear = () => {\n            this.setState({\n                currentItem: undefined,\n            });\n        };\n        this.handleGroupBySelect = (event, selection) => {\n            const { onItemClicked } = this.props;\n            this.setState({\n                currentItem: selection,\n                isGroupByOpen: false,\n            });\n            if (onItemClicked) {\n                onItemClicked(`${tagPrefix}${selection}`);\n            }\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({ isGroupByOpen });\n        };\n        this.handleGroupByClear = this.handleGroupByClear.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { groupBy } = this.props;\n        if (prevProps.groupBy !== groupBy) {\n            this.setState({ currentItem: this.getCurrentGroupBy() });\n        }\n    }\n    render() {\n        const { isDisabled, t } = this.props;\n        const { currentItem, isGroupByOpen } = this.state;\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(Select, { \"aria-label\": t('group_by.tag_key_aria_label'), isDisabled: isDisabled, onClear: this.handleGroupByClear, onToggle: this.handleGroupByToggle, onSelect: this.handleGroupBySelect, isOpen: isGroupByOpen, placeholderText: t('group_by.tag_key_placeholder'), selections: currentItem, variant: SelectVariant.typeahead }, this.getGroupByItems())));\n    }\n}\nconst GroupByTag = withTranslation()(GroupByTagBase);\nexport { GroupByTag };\n","import { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport { getQuery, orgUnitIdKey, parseQuery, tagKey, tagPrefix } from 'api/queries/query';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { orgActions, orgSelectors } from 'store/orgs';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { styles } from './groupBy.styles';\nimport { GroupByOrg } from './groupByOrg';\nimport { GroupByTag } from './groupByTag';\nconst groupByOrgOptions = [{ label: orgUnitIdKey, value: orgUnitIdKey }];\nconst groupByTagOptions = [{ label: tagKey, value: tagKey }];\nconst orgReportType = \"org\" /* org */;\nconst tagReportType = \"tag\" /* tag */;\nclass GroupByBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            defaultItem: this.props.groupBy || this.props.options[0].value,\n            isGroupByOpen: false,\n            isGroupByOrgVisible: false,\n            isGroupByTagVisible: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleGroupByClick = value => {\n            const { onItemClicked } = this.props;\n            if (value === orgUnitIdKey || value === tagKey) {\n                this.setState({\n                    currentItem: value,\n                    isGroupByOrgVisible: value === orgUnitIdKey,\n                    isGroupByTagVisible: value === tagKey,\n                });\n            }\n            else {\n                this.setState({\n                    currentItem: value,\n                    isGroupByOrgVisible: false,\n                    isGroupByTagVisible: false,\n                });\n                if (onItemClicked) {\n                    onItemClicked(value);\n                }\n            }\n        };\n        this.getGroupByItems = () => {\n            const { options, orgReport, tagReport, t } = this.props;\n            const allOptions = [...options];\n            if (orgReport && orgReport.data && orgReport.data.length > 0) {\n                allOptions.push(...groupByOrgOptions);\n            }\n            if (tagReport && tagReport.data && tagReport.data.length > 0) {\n                allOptions.push(...groupByTagOptions);\n            }\n            return allOptions.map(option => (React.createElement(DropdownItem, { component: \"button\", key: option.value, onClick: () => this.handleGroupByClick(option.value) }, t(`group_by.values.${option.label}`))));\n        };\n        this.getCurrentGroupBy = () => {\n            const { getIdKeyForGroupBy } = this.props;\n            const { defaultItem } = this.state;\n            const queryFromRoute = parseQuery(location.search);\n            if (!(queryFromRoute && queryFromRoute.group_by)) {\n                return defaultItem;\n            }\n            let groupBy = getIdKeyForGroupBy(queryFromRoute.group_by);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by ? Object.keys(queryFromRoute.group_by) : [];\n            for (const key of groupByKeys) {\n                let index = key.indexOf(tagPrefix);\n                if (index !== -1) {\n                    groupBy = tagKey;\n                    this.setState({\n                        isGroupByTagVisible: true,\n                    });\n                    break;\n                }\n                index = key.indexOf(orgUnitIdKey);\n                if (index !== -1) {\n                    groupBy = orgUnitIdKey;\n                    this.setState({\n                        isGroupByOrgVisible: true,\n                    });\n                    break;\n                }\n            }\n            return groupBy !== 'date' ? groupBy : defaultItem;\n        };\n        this.handleGroupBySelect = () => {\n            this.setState({\n                isGroupByOpen: !this.state.isGroupByOpen,\n            });\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({\n                isGroupByOpen,\n            });\n        };\n        this.handleGroupByClick = this.handleGroupByClick.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        const { fetchOrg, fetchTag, queryString, orgReportPathsType, showOrgs, showTags, tagReportPathsType } = this.props;\n        if (showOrgs) {\n            fetchOrg(orgReportPathsType, orgReportType, queryString);\n        }\n        if (showTags) {\n            fetchTag(tagReportPathsType, tagReportType, queryString);\n        }\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchOrg, fetchTag, groupBy, orgReportPathsType, perspective, queryString, showOrgs, showTags, tagReportPathsType, } = this.props;\n        if (prevProps.groupBy !== groupBy || prevProps.perspective !== perspective) {\n            if (showOrgs) {\n                fetchOrg(orgReportPathsType, orgReportType, queryString);\n            }\n            if (showTags) {\n                fetchTag(tagReportPathsType, tagReportType, queryString);\n            }\n            let options;\n            if (prevProps.perspective !== perspective) {\n                options = {\n                    isGroupByOrgVisible: false,\n                    isGroupByTagVisible: false,\n                };\n            }\n            this.setState(Object.assign({ currentItem: this.getCurrentGroupBy() }, (options ? options : {})));\n        }\n    }\n    render() {\n        const { getIdKeyForGroupBy, groupBy, isDisabled = false, onItemClicked, orgReport, t, tagReport } = this.props;\n        const { currentItem, isGroupByOpen, isGroupByOrgVisible, isGroupByTagVisible } = this.state;\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(\"label\", { style: styles.groupBySelectorLabel },\n                t('group_by.view'),\n                \":\"),\n            React.createElement(Dropdown, { onSelect: this.handleGroupBySelect, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled, onToggle: this.handleGroupByToggle }, t(`group_by.values.${currentItem}`)), isOpen: isGroupByOpen, dropdownItems: [this.getGroupByItems()] }),\n            Boolean(isGroupByOrgVisible) && (React.createElement(GroupByOrg, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: isDisabled, onItemClicked: onItemClicked, options: groupByOrgOptions, orgReport: orgReport })),\n            Boolean(isGroupByTagVisible) && (React.createElement(GroupByTag, { groupBy: groupBy, isDisabled: isDisabled, onItemClicked: onItemClicked, options: groupByTagOptions, tagReport: tagReport }))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { orgReportPathsType, tagReportPathsType }) => {\n    const queryString = getQuery({\n    // key_only: true\n    });\n    const orgReport = orgSelectors.selectOrg(state, orgReportPathsType, orgReportType, queryString);\n    const orgReportFetchStatus = orgSelectors.selectOrgFetchStatus(state, orgReportPathsType, orgReportType, queryString);\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, queryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, queryString);\n    return {\n        queryString,\n        orgReport,\n        orgReportFetchStatus,\n        tagReport,\n        tagReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchOrg: orgActions.fetchOrg,\n    fetchTag: tagActions.fetchTag,\n};\nconst GroupBy = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(GroupByBase));\nexport { GroupBy };\n","import { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { global_spacer_lg } from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport { global_spacer_sm } from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    currentCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    currentCostData: {\n        fill: 'none',\n    },\n    itemsPerRow: 0,\n    previousCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    previousCostData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString } from 'components/charts/common/chartDatumUtils';\nimport { getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles, styles } from './historicalCostChart.styles';\nclass HistoricalCostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentCostData, currentInfrastructureCostData, previousCostData, previousInfrastructureCostData, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            const costInfrastructureTooltipKey = 'chart.cost_infrastructure_legend_tooltip';\n            const costTooltipKey = 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousCostData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentCostData, costTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentCostData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'previousInfrastructureCost',\n                    data: previousInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(previousInfrastructureCostData, costInfrastructureTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousInfrastructureCostData), { stroke: chartStyles.previousColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'currentInfrastructureCost',\n                    data: currentInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(currentInfrastructureCostData, costInfrastructureTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentInfrastructureCostData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 120,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 700 ? chartStyles.itemsPerRow : 2;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\" }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.currentInfrastructureCostData !== this.props.currentInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData ||\n            prevProps.previousInfrastructureCostData !== this.props.previousInfrastructureCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, previousInfrastructureCostData } = this.props;\n        const currentRequestDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousRequestDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        return currentRequestDate > 0 || previousRequestDate > 0 ? Math.max(currentRequestDate, previousRequestDate) : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 120,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 700\n                ? containerHeight - 25\n                : containerHeight\n            : containerHeight;\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: adjustedContainerHeight }) },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis }))))));\n    }\n}\nexport { HistoricalCostChart };\n","import global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    chartHeight: 300,\n    chartContainerHeight: 300,\n};\nexport const styles = {\n    chartContainer: {\n        marginLeft: global_spacer_lg.value,\n    },\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n    costChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    trendChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    usageChart: {\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport { getQuery } from 'api/queries/query';\nimport { transformReport } from 'components/charts/common/chartDatumUtils';\nimport { HistoricalCostChart } from 'components/charts/historicalCostChart';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataCostChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, size: \"md\" }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, size: \"xs\" })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, reportType, t, } = this.props;\n        // Current data\n        const currentData = transformReport(currentReport, 0 /* rolling */, 'date', 'cost');\n        const currentInfrastructureCostData = transformReport(currentReport, 0 /* rolling */, 'date', 'infrastructure');\n        // Previous data\n        const previousData = transformReport(previousReport, 0 /* rolling */, 'date', 'cost');\n        const previousInfrastructureCostData = transformReport(previousReport, 0 /* rolling */, 'date', 'infrastructure');\n        const costUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.cost\n            ? currentReport.meta.total.cost.total.units\n            : 'USD';\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.costChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalCostChart, { adjustContainerHeight: true, containerHeight: chartStyles.chartContainerHeight - 25, currentCostData: currentData, currentInfrastructureCostData: currentInfrastructureCostData, formatDatumValue: formatValue, formatDatumOptions: {}, height: chartStyles.chartHeight, previousCostData: previousData, previousInfrastructureCostData: previousInfrastructureCostData, xAxisLabel: t(`breakdown.historical_chart.day_of_month_label`), yAxisLabel: t(`breakdown.historical_chart.${reportType}_label`, {\n                    units: t(`units.${unitLookupKey(costUnits)}`),\n                }) })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, reportPathsType, reportType }) => {\n    const currentQuery = {\n        filter: {\n            time_scope_units: 'month',\n            time_scope_value: -1,\n            resolution: 'daily',\n            limit: 3,\n        },\n        group_by: {\n            [groupBy]: filterBy,\n        },\n    };\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = {\n        filter: {\n            time_scope_units: 'month',\n            time_scope_value: -2,\n            resolution: 'daily',\n            limit: 3,\n        },\n        group_by: {\n            [groupBy]: filterBy,\n        },\n    };\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataCostChart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataCostChartBase));\nexport { HistoricalDataCostChart };\n","import { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { global_spacer_lg } from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport { global_spacer_sm } from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentMonthData: {\n        fill: 'none',\n    },\n    itemsPerRow: 0,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousMonthData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles, styles } from './historicalTrendChart.styles';\nclass HistoricalTrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, previousData, showUsageLegendLabel = false } = this.props;\n            const key = showUsageLegendLabel ? 'chart.usage_legend_label' : 'chart.cost_legend_label';\n            const toolTipKey = showUsageLegendLabel ? 'chart.usage_legend_tooltip' : 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousData,\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousData, toolTipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousMonthData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentData,\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentData, toolTipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentMonthData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 120,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: legendItemsPerRow, name: \"legend\" }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData || prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getEndDate() {\n        const { currentData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0 ? Math.max(currentDate, previousDate) : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, containerHeight = height, padding = {\n            bottom: 120,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: containerHeight }) },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis }))))));\n    }\n}\nexport { HistoricalTrendChart };\n","import { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport { getQuery, orgUnitIdKey } from 'api/queries/query';\nimport { transformReport } from 'components/charts/common/chartDatumUtils';\nimport { HistoricalTrendChart } from 'components/charts/historicalTrendChart';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataTrendChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, size: \"md\" }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, size: \"xs\" })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, reportType, t, } = this.props;\n        const isCostChart = reportType === \"cost\" /* cost */;\n        // Current data\n        const currentData = transformReport(currentReport, isCostChart ? 0 /* rolling */ : 1 /* daily */, 'date', isCostChart ? 'cost' : 'usage');\n        const previousData = transformReport(previousReport, isCostChart ? 0 /* rolling */ : 1 /* daily */, 'date', isCostChart ? 'cost' : 'usage');\n        const costUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.cost\n            ? currentReport.meta.total.cost.total.units\n            : 'USD';\n        let usageUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.usage\n            ? currentReport.meta.total.usage.units\n            : undefined;\n        let yAxisLabel;\n        if (isCostChart) {\n            yAxisLabel = t(`breakdown.historical_chart.${reportType}_label`, {\n                units: t(`units.${unitLookupKey(costUnits)}`),\n            });\n        }\n        else if (usageUnits && Number.isNaN(Number(currentReport.meta.total.usage.units))) {\n            yAxisLabel = t(`breakdown.historical_chart.units_label`, {\n                units: t(`units.${unitLookupKey(usageUnits)}`),\n            });\n        }\n        else {\n            usageUnits = t(`breakdown.historical_chart.${reportType}_label`);\n            yAxisLabel = t(`breakdown.historical_chart.units_label`, {\n                units: t(`units.${unitLookupKey(usageUnits)}`),\n            });\n        }\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.trendChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalTrendChart, { containerHeight: chartStyles.chartContainerHeight - 50, currentData: currentData, formatDatumValue: formatValue, formatDatumOptions: {}, height: chartStyles.chartHeight, previousData: previousData, units: isCostChart ? costUnits : usageUnits, xAxisLabel: t(`breakdown.historical_chart.day_of_month_label`), yAxisLabel: yAxisLabel })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, query, reportPathsType, reportType }) => {\n    const groupByOrg = query && query.group_by[orgUnitIdKey] ? query.group_by[orgUnitIdKey] : undefined;\n    // instance-types and storage APIs must filter org units\n    const useFilter = reportType === \"instance_type\" /* instanceType */ || reportType === \"storage\" /* storage */;\n    const currentQuery = {\n        filter: Object.assign(Object.assign({ time_scope_units: 'month', time_scope_value: -1, resolution: 'daily', limit: 3 }, (query && query.filter && query.filter.account && { account: query.filter.account })), (groupByOrg && useFilter && { [orgUnitIdKey]: groupByOrg })),\n        filter_by: query ? query.filter_by : undefined,\n        group_by: Object.assign(Object.assign({}, (groupByOrg && !useFilter && { [orgUnitIdKey]: groupByOrg })), { [groupBy]: filterBy }),\n    };\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = {\n        filter: Object.assign(Object.assign({ time_scope_units: 'month', time_scope_value: -2, resolution: 'daily', limit: 3 }, (query && query.filter && query.filter.account && { account: query.filter.account })), (groupByOrg && useFilter && { [orgUnitIdKey]: groupByOrg })),\n        filter_by: query ? query.filter_by : undefined,\n        group_by: Object.assign(Object.assign({}, (groupByOrg && !useFilter && { [orgUnitIdKey]: groupByOrg })), { [groupBy]: filterBy }),\n    };\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataTrendChart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataTrendChartBase));\nexport { HistoricalDataTrendChart };\n","import { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { global_spacer_lg } from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport { global_spacer_sm } from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    currentCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentLimitData: {\n        fill: 'none',\n    },\n    currentRequestData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    currentUsageData: {\n        fill: 'none',\n    },\n    itemsPerRow: 0,\n    previousCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousLimitData: {\n        fill: 'none',\n    },\n    previousRequestData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    previousUsageData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getUsageRangeString } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles, styles } from './historicalUsageChart.styles';\nclass HistoricalUsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentLimitData, currentRequestData, currentUsageData, previousLimitData, previousRequestData, previousUsageData, } = this.props;\n            const limitKey = 'chart.limit_legend_label';\n            const limitTooltipKey = 'chart.limit_legend_tooltip';\n            const requestKey = 'chart.requests_legend_label';\n            const requestTooltipKey = 'chart.requests_legend_tooltip';\n            const usageKey = 'chart.usage_legend_label';\n            const usageTooltipKey = 'chart.usage_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousUsage',\n                    data: previousUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(previousUsageData, usageKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(previousUsageData, usageTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousUsageData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentUsage',\n                    data: currentUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(currentUsageData, usageKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(currentUsageData, usageTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentUsageData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'previousRequest',\n                    data: previousRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(previousRequestData, requestKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(previousRequestData, requestTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousRequestData), { stroke: chartStyles.previousColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'currentRequest',\n                    data: currentRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(currentRequestData, requestKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(currentRequestData, requestTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentRequestData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'previousLimit',\n                    data: previousLimitData,\n                    legendItem: {\n                        name: getUsageRangeString(previousLimitData, limitKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[2],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(previousLimitData, limitTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousLimitData), { stroke: chartStyles.previousColorScale[2] }),\n                    },\n                },\n                {\n                    childName: 'currentLimit',\n                    data: currentLimitData,\n                    legendItem: {\n                        name: getUsageRangeString(currentLimitData, limitKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[2],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(currentLimitData, limitTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentLimitData), { stroke: chartStyles.currentColorScale[2] }),\n                    },\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 130,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 900 ? chartStyles.itemsPerRow : 2;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\" }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentLimitData !== this.props.currentLimitData ||\n            prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousLimitData !== this.props.previousLimitData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n        const currentRequestDate = currentRequestData ? getDate(getDateRange(currentRequestData, true, true)[1]) : 0;\n        const currentUsageDate = currentUsageData ? getDate(getDateRange(currentUsageData, true, true)[1]) : 0;\n        const previousRequestDate = previousRequestData ? getDate(getDateRange(previousRequestData, true, true)[1]) : 0;\n        const previousUsageDate = previousUsageData ? getDate(getDateRange(previousUsageData, true, true)[1]) : 0;\n        return currentRequestDate > 0 || currentUsageDate > 0 || previousRequestDate > 0 || previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 130,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 900\n                ? containerHeight - 50\n                : containerHeight\n            : containerHeight;\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: adjustedContainerHeight }) },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis }))))));\n    }\n}\nexport { HistoricalUsageChart };\n","import { Skeleton } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport { getQuery } from 'api/queries/query';\nimport { transformReport } from 'components/charts/common/chartDatumUtils';\nimport { HistoricalUsageChart } from 'components/charts/historicalUsageChart';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataUsageChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, size: \"md\" }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, size: \"xs\" })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, t } = this.props;\n        // Current data\n        const currentLimitData = transformReport(currentReport, 1 /* daily */, 'date', 'limit');\n        const currentRequestData = transformReport(currentReport, 1 /* daily */, 'date', 'request');\n        const currentUsageData = transformReport(currentReport, 1 /* daily */, 'date', 'usage');\n        // Previous data\n        const previousLimitData = transformReport(previousReport, 1 /* daily */, 'date', 'limit');\n        const previousRequestData = transformReport(previousReport, 1 /* daily */, 'date', 'request');\n        const previousUsageData = transformReport(previousReport, 1 /* daily */, 'date', 'usage');\n        const usageUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.usage\n            ? currentReport.meta.total.usage.units\n            : '';\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.usageChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalUsageChart, { adjustContainerHeight: true, containerHeight: chartStyles.chartContainerHeight, currentLimitData: currentLimitData, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: {}, height: chartStyles.chartHeight, previousLimitData: previousLimitData, previousRequestData: previousRequestData, previousUsageData: previousUsageData, xAxisLabel: t(`breakdown.historical_chart.day_of_month_label`), yAxisLabel: t(`breakdown.historical_chart.units_label`, {\n                    units: t(`units.${unitLookupKey(usageUnits)}`),\n                }) })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, reportPathsType, reportType }) => {\n    const currentQuery = {\n        filter: {\n            time_scope_units: 'month',\n            time_scope_value: -1,\n            resolution: 'daily',\n            limit: 3,\n        },\n        group_by: {\n            [groupBy]: filterBy,\n        },\n    };\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = {\n        filter: {\n            time_scope_units: 'month',\n            time_scope_value: -2,\n            resolution: 'daily',\n            limit: 3,\n        },\n        group_by: {\n            [groupBy]: filterBy,\n        },\n    };\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataUsageChart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataUsageChartBase));\nexport { HistoricalDataUsageChart };\n","import { Card, CardBody, CardTitle, Grid, GridItem, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport { HistoricalDataCostChart } from './historicalDataCostChart';\nimport { HistoricalDataTrendChart } from './historicalDataTrendChart';\nimport { HistoricalDataUsageChart } from './historicalDataUsageChart';\nclass HistoricalDataBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        // Returns cost chart\n        this.getCostChart = (widget) => {\n            const { filterBy, groupBy, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.historical_chart.${widget.reportType}_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataCostChart, { filterBy: filterBy, groupBy: groupBy, reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns trend chart\n        this.getTrendChart = (widget) => {\n            const { filterBy, groupBy, query, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.historical_chart.${widget.reportType}_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataTrendChart, { filterBy: filterBy, groupBy: groupBy, query: query, reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns usage chart\n        this.getUsageChart = (widget) => {\n            const { filterBy, groupBy, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.historical_chart.${widget.reportType}_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataUsageChart, { filterBy: filterBy, groupBy: groupBy, reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n    }\n    // Returns rendered widget based on type\n    renderWidget(widget) {\n        switch (widget.type) {\n            case \"cost\" /* cost */:\n                return this.getCostChart(widget);\n            case \"trend\" /* trend */:\n                return this.getTrendChart(widget);\n            case \"usage\" /* usage */:\n                return this.getUsageChart(widget);\n            default:\n                return null;\n        }\n    }\n    render() {\n        const { selectWidgets, widgets } = this.props;\n        return (React.createElement(Grid, { hasGutter: true }, widgets.map(widgetId => {\n            const widget = selectWidgets[widgetId];\n            return React.createElement(GridItem, { key: `widget-${widgetId}` }, this.renderWidget(widget));\n        })));\n    }\n}\nexport { HistoricalDataBase };\n","import { orgUnitIdKey } from 'api/queries/query';\nexport const getGroupById = (query) => {\n    const groupBys = query && query.group_by ? Object.keys(query.group_by) : [];\n    return groupBys.find(key => key !== orgUnitIdKey);\n};\nexport const getGroupByValue = (query) => {\n    const groupById = getGroupById(query);\n    return groupById ? query.group_by[groupById] : undefined;\n};\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_Color_200 from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    cost: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    costLabel: {},\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    costLabelDate: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_200.var,\n    },\n    header: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: global_spacer_lg.var,\n        backgroundColor: global_BackgroundColor_light_100.var,\n    },\n    info: {\n        verticalAlign: 'middle',\n    },\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import NoData from './noData';\nexport default NoData;\n","import { Main } from '@redhat-cloud-services/frontend-components/components/Main';\nimport { PageHeader, PageHeaderTitle } from '@redhat-cloud-services/frontend-components/components/PageHeader';\nimport { Unavailable } from '@redhat-cloud-services/frontend-components/components/Unavailable';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nconst NotAvailable = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(Unavailable, null))));\n};\nexport default withRouter(NotAvailable);\n","import NotAvailable from './notAvailable';\nexport default NotAvailable;\n","export const testIdProp = 'data-testid';\nexport const getTestProps = (id) => ({ [testIdProp]: id });\nexport const testIds = {\n    details: {\n        cluster_lnk: 'cluster-lnk',\n        historical_data_btn: 'historical-data-btn',\n        show_more_btn: 'show-more-btn',\n        tag_lnk: 'tag-lnk',\n        view_all_btn: 'view-all-btn',\n    },\n    export: {\n        cancel_btn: 'cancel-btn',\n        submit_btn: 'submit-btn',\n    },\n    login: {\n        alert: 'alert',\n        form: 'login-form',\n        username_input: 'username-input',\n        password_input: 'password-input',\n        submit: 'submit',\n    },\n    masthead: {\n        masthead: 'masthead',\n        username: 'username',\n        sidebarToggle: 'sidebar-toggle',\n        logout: 'logout',\n    },\n    onboarding: {\n        btn_cancel: 'btn-cancel',\n        btn_back: 'btn-back',\n        btn_continue: 'btn-continue',\n        btn_close: 'btn-close',\n        type_selector: 'type-selector',\n        type_opt_aws: 'type-option-aws',\n        type_opt_ocp: 'type-option-ocp',\n        type_opt_non: 'type-option-non',\n        name_input: 'name-input',\n        check_box_1: 'check-box-1',\n        check_box_2: 'check-box-2',\n        s3_input: 's3-input',\n        clusterid_input: 'clusterid-input',\n        arn_input: 'arn-input',\n    },\n    providers: {\n        add_btn: 'add-btn',\n        bucket_input: 'bucket-input',\n        cancel_btn: 'cancel-btn',\n        empty_state_add_btn: 'empty_state_add-btn',\n        name_input: 'provider-name-input',\n        resource_name_input: 'provider-resource-name-input',\n        cluster_id_input: 'provider-cluster-id-input',\n        submit_btn: 'submit-btn',\n        type_input: 'provider-type-input',\n    },\n    sidebar: {\n        nav: 'vertical-nav',\n        link: 'vertical-nav-link',\n        backdrop: 'sidebar-backdrop',\n    },\n};\n","import formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport i18next from 'i18next';\nexport function getNoDataForDateRangeString(key = 'no_data_for_date', offset = 1) {\n    const today = new Date();\n    if (offset) {\n        today.setMonth(today.getMonth() - offset);\n    }\n    const month = getMonth(today);\n    const endDate = formatDate(today, 'D');\n    const startDate = formatDate(startOfMonth(today), 'D');\n    return i18next.t(key, {\n        count: getDate(today),\n        endDate,\n        month,\n        startDate,\n    });\n}\nexport function getForDateRangeString(value, key = 'for_date', offset = 1) {\n    const today = new Date();\n    if (offset) {\n        today.setMonth(today.getMonth() - offset);\n    }\n    const month = getMonth(today);\n    const endDate = formatDate(today, 'D');\n    const startDate = formatDate(startOfMonth(today), 'D');\n    return i18next.t(key, {\n        count: getDate(today),\n        endDate,\n        month,\n        startDate,\n        value,\n    });\n}\nexport function getSinceDateRangeString(key = 'since_date') {\n    const today = new Date();\n    const month = getMonth(today);\n    const endDate = formatDate(today, 'D');\n    const startDate = formatDate(startOfMonth(today), 'D');\n    return i18next.t(key, {\n        count: getDate(today),\n        endDate,\n        month,\n        startDate,\n    });\n}\n","export function isEqual(obj1, obj2) {\n    let a = JSON.stringify(obj1);\n    let b = JSON.stringify(obj2);\n    if (!a) {\n        a = '';\n    }\n    if (!b) {\n        b = '';\n    }\n    return (a\n        .split('')\n        .sort()\n        .join('') ===\n        b\n            .split('')\n            .sort()\n            .join(''));\n}\n"],"sourceRoot":""}