{"version":3,"sources":["webpack:///./src/utils/formatValue.ts","webpack:///./src/components/charts/common/chartUtils.ts","webpack:///./src/testIds.ts","webpack:///./src/utils/computedReport/getComputedReportItems.ts","webpack:///./src/utils/computedReport/getItemLabel.ts","webpack:///./src/components/charts/chartTheme/theme-koku.ts","webpack:///./src/components/charts/chartTheme/index.ts","webpack:///./src/components/charts/chartTheme/theme-utils.ts","webpack:///./src/components/charts/common/chart.styles.ts","webpack:///./src/components/state/errorState/errorState.styles.ts","webpack:///./src/components/state/errorState/errorState.tsx","webpack:///./src/components/state/loadingState/loadingState.styles.ts","webpack:///./src/components/state/loadingState/loadingState.tsx","webpack:///./src/components/state/emptyValueState/emptyValueState.styles.ts","webpack:///./src/components/state/emptyValueState/emptyValueState.tsx","webpack:///./src/components/reports/reportSummary/reportSummary.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummary.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryAlt.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryAlt.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryDetails.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryDetails.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryItem.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryItem.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryItems.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryItems.tsx","webpack:///./src/components/charts/costChart/costChart.styles.ts","webpack:///./src/components/charts/costChart/costChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryTrend.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryCost.tsx","webpack:///./src/components/charts/trendChart/trendChart.styles.ts","webpack:///./src/components/charts/trendChart/trendChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryTrend.tsx","webpack:///./src/components/charts/usageChart/usageChart.styles.ts","webpack:///./src/components/charts/usageChart/usageChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryUsage.tsx","webpack:///./src/components/reports/reportSummary/index.ts","webpack:///./src/utils/sort.ts","webpack:///./src/components/state/noProvidersState/noProvidersState.styles.ts","webpack:///./src/components/state/noProvidersState/noProvidersState.tsx"],"names":["__webpack_require__","d","__webpack_exports__","unitLookupKey","formatValue","formatCurrency","unit","lookup","toLowerCase","value","options","fValue","formatUsageGb","formatUsageHrs","unknownTypeFormatter","_unit","fractionDigits","toLocaleString","minimumFractionDigits","maximumFractionDigits","style","currency","transformReport","getDateRange","getMaxValue","getTooltipContent","getTooltipLabel","getCostRangeString","getUsageRangeString","date_fns_end_of_month__WEBPACK_IMPORTED_MODULE_0__","date_fns_end_of_month__WEBPACK_IMPORTED_MODULE_0___default","n","date_fns_format__WEBPACK_IMPORTED_MODULE_1__","date_fns_format__WEBPACK_IMPORTED_MODULE_1___default","date_fns_get_date__WEBPACK_IMPORTED_MODULE_2__","date_fns_get_date__WEBPACK_IMPORTED_MODULE_2___default","date_fns_get_year__WEBPACK_IMPORTED_MODULE_3__","date_fns_get_year__WEBPACK_IMPORTED_MODULE_3___default","date_fns_start_of_month__WEBPACK_IMPORTED_MODULE_4__","date_fns_start_of_month__WEBPACK_IMPORTED_MODULE_4___default","i18next__WEBPACK_IMPORTED_MODULE_5__","utils_computedReport_getComputedReportItems__WEBPACK_IMPORTED_MODULE_6__","utils_formatValue__WEBPACK_IMPORTED_MODULE_7__","report","type","key","reportItem","items","idKey","sortKey","sortDirection","computedItems","Object","map","i","createDatum","reduce","acc","prevValue","length","y","computedItem","x","id","label","Number","isFloat","parseFloat","toFixed","isInt","name","units","datums","firstOfMonth","lastOfMonth","offset","start","end","today","Date","setMonth","getMonth","getDatumDateRange","setDate","lastDate","getDate","max","forEach","datum","t","formatOptions","toString","count","endDate","month","startDate","year","getTestProps","testIds","data-testid","details","cluster_lnk","historical_data_btn","show_more_btn","tag_lnk","view_all_btn","export","cancel_btn","submit_btn","login","alert","form","username_input","password_input","submit","masthead","username","sidebarToggle","logout","onboarding","btn_cancel","btn_back","btn_continue","btn_close","type_selector","type_opt_aws","type_opt_ocp","type_opt_non","name_input","check_box_1","check_box_2","s3_input","clusterid_input","arn_input","providers","add_btn","bucket_input","empty_state_add_btn","resource_name_input","cluster_id_input","type_input","view_all_link","sidebar","nav","link","backdrop","getComputedReportItems","labelKey","sort","getUnsortedComputedReportItems","direction","itemMap","Map","visitDataPoint","dataPoint","values","cluster_alias","clusters","undefined","cluster","capacity","cost","total","supplementaryCost","supplementary","infrastructureCost","infrastructure","idSuffix","itemLabelKey","String","meta","group_by","keys","indexOf","query","tagPrefixKey","hasOwnProperty","getItemLabel","account_alias","limit","request","usage","get","set","assign","deltaPercent","delta_percent","deltaValue","delta_value","Array","data","from","LAYOUT_PROPS","padding","theme_koku","area","axis","bar","boxplot","candlestick","chart","errorbar","group","legend","line","pie","scatter","stack","tooltip","voronoi","chartTheme_ChartTheme","chart_theme","ChartTheme","default","theme_utils","chartOverride","_patternfly_react_tokens__WEBPACK_IMPORTED_MODULE_0__","emotion__WEBPACK_IMPORTED_MODULE_1__","styles","container","display","justifyContent","height","marginTop","ErrorState","es","error","icon","error_circle_o_icon","title","subTitle","response","status","lock_icon","react_default","a","createElement","EmptyState","EmptyStateIcon","Title","size","EmptyStateBody","LoadingState","binoculars_icon","Spinner","fontSize","EmptyValueState","minus_icon","chartSkeleton","marginBottom","esm","legendSkeleton","reportSummary","subtitle","color","var","ReportSummary","children","detailsLink","Card","CardHeader","Boolean","CardBody","Fragment","Skeleton","xs","md","sm","CardFooter","reportSummaryAlt_styles_styles","flexGrow","minHeight","marginRight","tops","ReportSummaryAlt","tabs","Grid","gutter","GridItem","lg","xl","reportSummaryDetails_styles_styles","reportSummaryDetails","alignItems","text","paddingBottom","lineHeight","valueContainer","width","wordWrap","ReportSummaryDetails","chartType","costLabel","requestFormatOptions","requestLabel","showTooltip","showUnits","showUsageFirst","usageFormatOptions","usageLabel","emptyValueState","hasTotal","hasCost","hasCount","hasSupplementaryCost","hasInfrastructureCost","hasRequest","hasUsage","getCostLayout","Tooltip","content","enableFlip","getRequestLayout","usageUnits","_units","utils_formatValue","unitsLabel","getUsageLayout","reportSummaryItem","index_esm","ReportSummaryItemBase","totalValue","percentVal","percentLabel","percent","className","Progress","defaultProps","v","ReportSummaryItem","reportSummaryItems_styles_styles","skeleton","ReportSummaryItems","Component","[object Object]","nextProps","this","props","otherIndex","findIndex","includes","slice","getItems","chartStyles","currentCostData","fill","stroke","currentInfrastructureCostData","strokeDasharray","itemsPerRow","labels","fontFamily","minWidth","legendColorScale","previousCostData","previousInfrastructureCostData","currentColorScale","previousColorScale","yAxis","axisLabel","grid","ticks","tickLabels","xAxis","costChart_CostChart","super","arguments","containerRef","createRef","state","hiddenSeries","Set","initDatum","costKey","setState","series","childName","legendItem","chartUtils","symbol","handleResize","current","clientWidth","getChart","index","ChartArea","has","interpolation","getLegend","legendItemsPerRow","ChartLegend","colorScale","getLegendData","responsive","formatDatumValue","formatDatumOptions","dist_es","handleLegendClick","delete","add","isDataAvailable","unavailable","s","isSeriesHidden","push","getChartNames","result","serie","getEvents","chart_interactive_legend","chartNames","isHidden","legendName","onLegendClick","setTimeout","window","addEventListener","prevProps","removeEventListener","domain","maxCurrentInfrastructure","maxCurrentUsage","maxPreviousInfrastructure","maxPreviousUsage","maxValue","Math","ceil","currentInfrastructureDate","get_date_default","currentUsageDate","previousInfrastructureDate","previousUsageDate","adjustContainerHeight","containerHeight","ChartVoronoiContainer","allowTooltip","constrainToVisibleArea","voronoiDimension","getDomain","getEndDate","midDate","floor","adjustedContainerHeight","chart_styles","ref","Chart","containerComponent","events","legendComponent","legendData","legendPosition","theme","chartTheme","ChartAxis","tickValues","dependentAxis","reportSummaryTrend_styles_styles","ReportSummaryCost","trendChart_styles_chartStyles","previousMonth","currentMonth","trendChart_TrendChart","currentData","previousData","showUsageLegendLabel","orientation","maxCurrent","maxPrevious","previousDate","currentDate","ReportSummaryTrend","usageChart_styles_chartStyles","chartContainer","currentRequestData","currentUsageData","previousRequestData","previousUsageData","usageChart_UsageChart","maxCurrentRequest","maxPreviousRequest","currentRequestDate","previousRequestDate","ReportSummaryUsage","getValueForItem","item","array","b","aVal","bVal","viewSources","NoProvidersState","react_redux_es","getViewSources","pathName","location","pathname","split","shift","release","href","dollar_sign_icon"],"mappings":"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","file":"b948c9947a3fb8f1d7e1.bundle.js","sourcesContent":["export const unitLookupKey = unit => {\n    const lookup = unit ? unit.toLowerCase() : '';\n    switch (lookup) {\n        case 'usd':\n        case 'gb':\n        case 'gb-hours':\n        case 'gb-mo':\n        case 'core-hours':\n        case 'hrs':\n        case 'tag-mo':\n        case 'vm-hours':\n            return lookup;\n        default:\n            return '';\n    }\n};\nexport const formatValue = (value, unit, options = {}) => {\n    const lookup = unitLookupKey(unit);\n    const fValue = value || 0;\n    switch (lookup) {\n        case 'usd':\n            return formatCurrency(fValue, lookup, options);\n        case 'gb':\n        case 'gb-hours':\n        case 'gb-mo':\n        case 'tag-mo':\n        case 'vm-hours':\n            return formatUsageGb(fValue, lookup, options);\n        case 'core-hours':\n        case 'hrs':\n            return formatUsageHrs(fValue, lookup, options);\n        default:\n            return unknownTypeFormatter(fValue, lookup, options);\n    }\n};\nconst unknownTypeFormatter = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatCurrency = (value, unit, { fractionDigits = 2 } = {}) => {\n    let fValue = value;\n    if (!value) {\n        fValue = 0;\n    }\n    return fValue.toLocaleString('en', {\n        style: 'currency',\n        currency: unit || 'USD',\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatUsageGb = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatUsageHrs = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\n","import endOfMonth from 'date-fns/end_of_month';\nimport format from 'date-fns/format';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getYear from 'date-fns/get_year';\nimport startOfMonth from 'date-fns/start_of_month';\nimport i18next from 'i18next';\nimport { getComputedReportItems, } from 'utils/computedReport/getComputedReportItems';\nimport { unitLookupKey, } from 'utils/formatValue';\nexport function transformReport(report, type = 1 /* daily */, key = 'date', reportItem = 'cost') {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        report,\n        idKey: key,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedReportItems(items);\n    if (type === 1 /* daily */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    if (type === 2 /* monthly */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    return computedItems.reduce((acc, d) => {\n        const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n        return [...acc, createDatum(prevValue + d[reportItem], d, key)];\n    }, []);\n}\nexport function createDatum(value, computedItem, idKey = 'date') {\n    const xVal = idKey === 'date' ? getDate(computedItem.id) : computedItem.label;\n    const yVal = isFloat(value)\n        ? parseFloat(value.toFixed(2))\n        : isInt(value)\n            ? value\n            : 0;\n    return {\n        x: xVal,\n        y: yVal,\n        key: computedItem.id,\n        name: computedItem.id,\n        units: computedItem.units,\n    };\n}\nexport function getDatumDateRange(datums, offset = 0) {\n    if (!(datums && datums.length)) {\n        const today = new Date();\n        // If datums is empty, obtain the month based on offset (e.g., to show previous month in chart legends)\n        if (offset) {\n            today.setMonth(today.getMonth() - offset);\n        }\n        const firstOfMonth = startOfMonth(today);\n        return [firstOfMonth, today];\n    }\n    const start = new Date(datums[0].key + 'T00:00:00');\n    const end = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    return [start, end];\n}\nexport function getDateRange(datums, firstOfMonth = true, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDatumDateRange(datums, offset);\n    // Show the date range we are trying to cover (i.e., days 1-30/31)\n    if (firstOfMonth && start.setDate) {\n        start.setDate(1);\n    }\n    if (lastOfMonth && start.setDate) {\n        const lastDate = endOfMonth(start).getDate();\n        end.setDate(lastDate);\n    }\n    return [start, end];\n}\nexport function getDateRangeString(datums, firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(`chart.date_range`, {\n        count: getDate(end),\n        endDate: formatDate(end, 'DD'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'DD'),\n        year: getYear(end),\n    });\n}\nexport function getMonthRangeString(datums, key = 'chart.month_legend_label', offset = 0) {\n    const [start, end] = getDateRange(datums, true, false, offset);\n    return [\n        i18next.t(key, {\n            month: Number(formatDate(start, 'M')) - 1,\n        }),\n        i18next.t(key, {\n            month: Number(formatDate(end, 'M')) - 1,\n        }),\n    ];\n}\nexport function getMaxValue(datums) {\n    let max = 0;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            if (datum.y > max) {\n                max = datum.y;\n            }\n        });\n    }\n    return max;\n}\nexport function getTooltipContent(formatValue) {\n    return function labelFormatter(value, unit = null, options = {}) {\n        const lookup = unitLookupKey(unit);\n        switch (lookup) {\n            case 'core-hours':\n            case 'hrs':\n            case 'gb':\n            case 'gb-hours':\n            case 'gb-mo':\n            case 'vm-hours':\n                return i18next.t(`unit_tooltips.${lookup}`, {\n                    value: `${formatValue(value, unit, options)}`,\n                });\n            default:\n                return `${formatValue(value, unit, options)}`;\n        }\n    };\n}\nexport function getTooltipLabel(datum, formatValue, formatOptions, idKey = 'date', units) {\n    if (!datum.key) {\n        return '';\n    }\n    if (idKey === 'date') {\n        const date = format(datum.key, 'DD MMM YYYY');\n        return `${date} ${formatValue(datum.y, units ? units : datum.units, formatOptions)}`;\n    }\n    return datum.key.toString();\n}\nexport function getCostRangeString(datums, key = 'chart.cost_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(key, {\n        count: getDate(end),\n        endDate: formatDate(end, 'D'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'D'),\n        year: getYear(end),\n    });\n}\nexport function getUsageRangeString(datums, key = 'chart.usage_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    return getCostRangeString(datums, key, firstOfMonth, lastOfMonth, offset);\n}\nfunction isInt(n) {\n    return Number(n) === n && n % 1 === 0;\n}\nfunction isFloat(n) {\n    return Number(n) === n && n % 1 !== 0;\n}\n","export const testIdProp = 'data-testid';\nexport const getTestProps = (id) => ({ [testIdProp]: id });\nexport const testIds = {\n    details: {\n        cluster_lnk: 'cluster-lnk',\n        historical_data_btn: 'historical-data-btn',\n        show_more_btn: 'show-more-btn',\n        tag_lnk: 'tag-lnk',\n        view_all_btn: 'view-all-btn',\n    },\n    export: {\n        cancel_btn: 'cancel-btn',\n        submit_btn: 'submit-btn',\n    },\n    login: {\n        alert: 'alert',\n        form: 'login-form',\n        username_input: 'username-input',\n        password_input: 'password-input',\n        submit: 'submit',\n    },\n    masthead: {\n        masthead: 'masthead',\n        username: 'username',\n        sidebarToggle: 'sidebar-toggle',\n        logout: 'logout',\n    },\n    onboarding: {\n        btn_cancel: 'btn-cancel',\n        btn_back: 'btn-back',\n        btn_continue: 'btn-continue',\n        btn_close: 'btn-close',\n        type_selector: 'type-selector',\n        type_opt_aws: 'type-option-aws',\n        type_opt_ocp: 'type-option-ocp',\n        type_opt_non: 'type-option-non',\n        name_input: 'name-input',\n        check_box_1: 'check-box-1',\n        check_box_2: 'check-box-2',\n        s3_input: 's3-input',\n        clusterid_input: 'clusterid-input',\n        arn_input: 'arn-input',\n    },\n    providers: {\n        add_btn: 'add-btn',\n        bucket_input: 'bucket-input',\n        cancel_btn: 'cancel-btn',\n        empty_state_add_btn: 'empty_state_add-btn',\n        name_input: 'provider-name-input',\n        resource_name_input: 'provider-resource-name-input',\n        cluster_id_input: 'provider-cluster-id-input',\n        submit_btn: 'submit-btn',\n        type_input: 'provider-type-input',\n        view_all_link: 'view-all-lnk',\n    },\n    sidebar: {\n        nav: 'vertical-nav',\n        link: 'vertical-nav-link',\n        backdrop: 'sidebar-backdrop',\n    },\n};\n","import { sort } from 'utils/sort';\nimport { getItemLabel } from './getItemLabel';\nexport function getComputedReportItems({ report, idKey, labelKey = idKey, sortDirection = 0 /* asc */, sortKey = 'cost', }) {\n    return sort(getUnsortedComputedReportItems({\n        report,\n        idKey,\n        labelKey,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nexport function getUnsortedComputedReportItems({ report, idKey, labelKey = idKey }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint.values) {\n            dataPoint.values.forEach((value) => {\n                // clusters will either contain the cluster alias or default to cluster ID\n                const cluster_alias = value.clusters && value.clusters.length > 0\n                    ? value.clusters[0]\n                    : undefined;\n                const cluster = cluster_alias || value.cluster;\n                const capacity = value.capacity ? value.capacity.value : 0;\n                const cost = value.cost && value.cost.total ? value.cost.total.value : 0;\n                const supplementaryCost = value.supplementary && value.supplementary.total\n                    ? value.supplementary.total.value\n                    : 0;\n                const infrastructureCost = value.infrastructure && value.infrastructure.total\n                    ? value.infrastructure.total.value\n                    : 0;\n                // Ensure unique IDs -- https://github.com/project-koku/koku-ui/issues/706\n                const idSuffix = idKey !== 'date' && idKey !== 'cluster' && value.cluster\n                    ? `-${value.cluster}`\n                    : '';\n                const id = `${value[idKey]}${idSuffix}`;\n                let label;\n                const itemLabelKey = getItemLabel({ report, labelKey, value });\n                if (itemLabelKey === 'cluster' && cluster_alias) {\n                    label = cluster_alias;\n                }\n                else if (value[itemLabelKey] instanceof Object) {\n                    label = value[itemLabelKey].value;\n                }\n                else {\n                    label = value[itemLabelKey];\n                }\n                if (itemLabelKey === 'account' && value.account_alias) {\n                    label = value.account_alias;\n                }\n                const limit = value.limit ? value.limit.value : 0;\n                const request = value.request ? value.request.value : 0;\n                const usage = value.usage ? value.usage.value : 0;\n                const units = value.usage\n                    ? value.usage.units\n                    : value.cost && value.cost.total\n                        ? value.cost.total.units\n                        : 'USD';\n                if (!itemMap.get(id)) {\n                    itemMap.set(id, {\n                        capacity,\n                        cluster,\n                        clusters: value.clusters,\n                        cost,\n                        deltaPercent: value.delta_percent,\n                        deltaValue: value.delta_value,\n                        supplementaryCost,\n                        id,\n                        infrastructureCost,\n                        label,\n                        limit,\n                        request,\n                        units,\n                        usage,\n                    });\n                    return;\n                }\n                itemMap.set(id, Object.assign({}, itemMap.get(id), { capacity: itemMap.get(id).capacity + capacity, cost: itemMap.get(id).cost + cost, supplementaryCost: itemMap.get(id).supplementaryCost + supplementaryCost, infrastructureCost: itemMap.get(id).infrastructureCost + infrastructureCost, limit: itemMap.get(id).limit + limit, request: itemMap.get(id).request + request, usage: itemMap.get(id).usage + usage }));\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\n","import { tagKeyPrefix } from 'api/queries/query';\nexport function getItemLabel({ report, labelKey, value }) {\n    let itemLabelKey = String(labelKey);\n    if (report.meta && report.meta.group_by) {\n        const group_by = report.meta.group_by;\n        for (const key of Object.keys(group_by)) {\n            if (key.indexOf(tagKeyPrefix)) {\n                const tagPrefixKey = tagKeyPrefix + labelKey;\n                if (value.hasOwnProperty(tagPrefixKey)) {\n                    itemLabelKey = tagPrefixKey;\n                }\n            }\n        }\n    }\n    return itemLabelKey;\n}\n","// Layout\nconst LAYOUT_PROPS = {\n    padding: 8,\n};\n// Victory theme properties only\nexport default {\n    area: Object.assign({}, LAYOUT_PROPS),\n    axis: Object.assign({}, LAYOUT_PROPS),\n    bar: Object.assign({}, LAYOUT_PROPS),\n    boxplot: Object.assign({}, LAYOUT_PROPS),\n    candlestick: Object.assign({}, LAYOUT_PROPS),\n    chart: Object.assign({}, LAYOUT_PROPS),\n    errorbar: Object.assign({}, LAYOUT_PROPS),\n    group: Object.assign({}, LAYOUT_PROPS),\n    legend: {},\n    line: Object.assign({}, LAYOUT_PROPS),\n    pie: Object.assign({}, LAYOUT_PROPS),\n    scatter: Object.assign({}, LAYOUT_PROPS),\n    stack: Object.assign({}, LAYOUT_PROPS),\n    tooltip: {},\n    voronoi: Object.assign({}, LAYOUT_PROPS),\n};\n","import getTheme from './theme-utils';\nconst ChartTheme = getTheme();\nexport default ChartTheme;\n","import { ChartThemeColor, ChartThemeVariant, getCustomTheme, } from '@patternfly/react-charts';\nimport { default as ChartTheme } from './theme-koku';\n// Applies theme color and variant to base theme\nconst getTheme = () => getCustomTheme(ChartThemeColor.default, ChartThemeVariant.default, ChartTheme);\nexport default getTheme;\n","import { global_Color_dark_100, global_Color_light_100, global_primary_color_100, global_primary_color_200, global_success_color_100, global_success_color_200, } from '@patternfly/react-tokens';\nimport { css } from 'emotion';\nexport const chartStyles = {\n    padding: 8,\n    group: {\n        data: { strokeWidth: 2, fillOpacity: 0.4 },\n    },\n    tooltipText: {\n        fontSize: '14px',\n        fill: global_Color_light_100.value,\n    },\n    tooltipFlyout: { fill: global_Color_dark_100.value },\n    previousMonth: {\n        data: {\n            fill: global_success_color_200.value,\n            stroke: global_success_color_100.value,\n        },\n    },\n    currentMonth: {\n        data: {\n            fill: global_primary_color_100.value,\n            stroke: global_primary_color_200.value,\n        },\n    },\n};\nexport const chartOverride = css `\n  :not(foo) svg {\n    overflow: visible;\n  }\n`;\n","export const styles = {\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100vh',\n        marginTop: '150px',\n    },\n};\n","import { EmptyState as PfEmptyState, EmptyStateBody, EmptyStateIcon, Title, } from '@patternfly/react-core';\nimport { ErrorCircleOIcon, LockIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './errorState.styles';\nconst ErrorStateBase = ({ error, icon = ErrorCircleOIcon, t, }) => {\n    let title = t('error_state.unexpected_title');\n    let subTitle = t('error_state.unexpected_desc');\n    if (error &&\n        error.response &&\n        (error.response.status === 401 || error.response.status === 403)) {\n        icon = LockIcon;\n        title = t('error_state.unauthorized_title');\n        subTitle = t('error_state.unauthorized_desc');\n    }\n    return (React.createElement(\"div\", { style: styles.container },\n        React.createElement(PfEmptyState, null,\n            React.createElement(EmptyStateIcon, { icon: icon }),\n            React.createElement(Title, { size: \"lg\" }, title),\n            React.createElement(EmptyStateBody, null, subTitle))));\n};\nconst ErrorState = translate()(ErrorStateBase);\nexport { ErrorState };\n","export const styles = {\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100vh',\n        marginTop: '150px',\n    },\n};\n","import { EmptyState, EmptyStateBody, Spinner, Title, } from '@patternfly/react-core';\nimport { BinocularsIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './loadingState.styles';\nconst LoadingStateBase = ({ icon = BinocularsIcon, t, }) => {\n    const title = t('loading_state.sources_title');\n    const subTitle = t('loading_state.sources_desc');\n    return (React.createElement(\"div\", { style: styles.container },\n        React.createElement(EmptyState, null,\n            React.createElement(Spinner, { size: \"lg\" }),\n            React.createElement(Title, { size: \"lg\" }, title),\n            React.createElement(EmptyStateBody, null, subTitle))));\n};\nconst LoadingState = translate()(LoadingStateBase);\nexport { LoadingState };\n","import { global_FontSize_sm } from '@patternfly/react-tokens';\nexport const styles = {\n    container: {\n        fontSize: global_FontSize_sm.value,\n    },\n};\n","import { MinusIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { styles } from './emptyValueState.styles';\nexport const EmptyValueState = () => {\n    return (React.createElement(\"span\", { style: styles.container },\n        React.createElement(MinusIcon, null)));\n};\n","import { global_Color_200, global_FontSize_xs, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = {\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n};\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './reportSummary.styles';\nconst ReportSummaryBase = ({ children, detailsLink, title, subTitle, status, t, }) => (React.createElement(Card, { style: styles.reportSummary },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { style: styles.subtitle }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { size: SkeletonSize.xs }),\n        React.createElement(Skeleton, { style: styles.chartSkeleton, size: SkeletonSize.md }),\n        React.createElement(Skeleton, { size: SkeletonSize.sm }),\n        React.createElement(Skeleton, { style: styles.legendSkeleton, size: SkeletonSize.xs }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst ReportSummary = translate()(ReportSummaryBase);\nexport { ReportSummary };\n","import { global_Color_200, global_FontSize_xs, global_spacer_lg, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = {\n    chartSkeleton: {\n        height: '175px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '470px',\n        marginRight: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { Card, CardBody, CardFooter, CardHeader, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './reportSummaryAlt.styles';\nconst OcpCloudReportSummaryAltBase = ({ children, detailsLink, status, subTitle, t, tabs, title, }) => (React.createElement(Card, { style: styles.reportSummary },\n    React.createElement(Grid, { gutter: \"md\" },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { style: styles.cost },\n                React.createElement(CardHeader, null,\n                    React.createElement(Title, { size: \"lg\" }, title),\n                    Boolean(subTitle) && React.createElement(\"p\", { style: styles.subtitle }, subTitle)),\n                React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { size: SkeletonSize.xs }),\n                    React.createElement(Skeleton, { style: styles.chartSkeleton, size: SkeletonSize.md }),\n                    React.createElement(Skeleton, { size: SkeletonSize.sm }),\n                    React.createElement(Skeleton, { style: styles.legendSkeleton, size: SkeletonSize.xs }))) : (children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { style: styles.container },\n                React.createElement(\"div\", { style: styles.tops }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst ReportSummaryAlt = translate()(OcpCloudReportSummaryAltBase);\nexport { ReportSummaryAlt };\n","import { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = {\n    reportSummaryDetails: {\n        marginBottom: global_spacer_md.value,\n        display: 'flex',\n        alignItems: 'flex-end',\n    },\n    text: {\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    value: {\n        color: global_Color_100.var,\n        marginRight: global_spacer_sm.value,\n        fontSize: global_FontSize_4xl.value,\n    },\n    valueContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        width: '50%',\n        wordWrap: 'break-word',\n    },\n};\n","import { Tooltip } from '@patternfly/react-core';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey, } from 'utils/formatValue';\nimport { styles } from './reportSummaryDetails.styles';\nconst ReportSummaryDetailsBase = ({ chartType, costLabel, formatValue, formatOptions, report, requestFormatOptions, requestLabel, showTooltip = false, showUnits = false, showUsageFirst = false, t, units, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let supplementaryCost = React.createElement(EmptyValueState, null);\n    let infrastructureCost = React.createElement(EmptyValueState, null);\n    let request = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    const hasTotal = report && report.meta && report.meta.total;\n    const hasCost = hasTotal && report.meta.total.cost && report.meta.total.cost.total;\n    const hasCount = hasTotal && report.meta.total.count;\n    const hasSupplementaryCost = hasTotal &&\n        report.meta.total.supplementary &&\n        report.meta.total.supplementary.total &&\n        report.meta.total.supplementary.total.value;\n    const hasInfrastructureCost = hasTotal &&\n        report.meta.total.infrastructure &&\n        report.meta.total.infrastructure.total &&\n        report.meta.total.infrastructure.total.value;\n    const hasRequest = hasTotal && report.meta.total.request;\n    const hasUsage = hasTotal && report.meta.total.usage;\n    if (hasTotal) {\n        cost = formatValue(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD', formatOptions);\n        supplementaryCost = formatValue(hasSupplementaryCost ? report.meta.total.supplementary.total.value : 0, hasSupplementaryCost\n            ? report.meta.total.supplementary.total.units\n            : 'USD', formatOptions);\n        infrastructureCost = formatValue(hasInfrastructureCost ? report.meta.total.infrastructure.total.value : 0, hasInfrastructureCost\n            ? report.meta.total.infrastructure.total.units\n            : 'USD', formatOptions);\n        request = formatValue(hasRequest ? report.meta.total.request.value : 0, hasRequest ? report.meta.total.request.units : '', requestFormatOptions ? usageFormatOptions : formatOptions);\n        if (hasUsage && report.meta.total.usage.value >= 0) {\n            usage = formatValue(hasUsage ? report.meta.total.usage.value : 0, hasUsage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n        else {\n            // Workaround for https://github.com/project-koku/koku-ui/issues/1058\n            usage = formatValue(hasUsage ? report.meta.total.usage : 0, hasCount ? report.meta.total.count.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n    }\n    const getCostLayout = () => (React.createElement(\"div\", { style: styles.valueContainer },\n        Boolean(showTooltip) ? (React.createElement(Tooltip, { content: t('dashboard.total_cost_tooltip', {\n                infrastructureCost,\n                supplementaryCost,\n            }), enableFlip: true },\n            React.createElement(\"div\", { style: styles.value }, cost))) : (React.createElement(\"div\", { style: styles.value }, cost)),\n        React.createElement(\"div\", { style: styles.text },\n            React.createElement(\"div\", null, costLabel))));\n    const getRequestLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasRequest\n            ? report.meta.total.request.units\n            : '';\n        const _units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { style: styles.valueContainer },\n            React.createElement(\"div\", { style: styles.value },\n                request,\n                Boolean(showUnits && hasRequest && report.meta.total.request.value >= 0) && React.createElement(\"span\", { style: styles.text }, unitsLabel)),\n            React.createElement(\"div\", { style: styles.text },\n                React.createElement(\"div\", null, requestLabel))));\n    };\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasUsage ? report.meta.total.usage.units : '';\n        // added as a work-around for azure #1079\n        const _units = unitLookupKey(units ? units : usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { style: styles.valueContainer },\n            React.createElement(\"div\", { style: styles.value },\n                usage,\n                Boolean(showUnits && hasUsage && report.meta.total.usage.value >= 0) && React.createElement(\"span\", { style: styles.text }, unitsLabel)),\n            React.createElement(\"div\", { style: styles.text },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (chartType === \"cost\" /* cost */) {\n        return React.createElement(React.Fragment, null, getCostLayout());\n    }\n    else if (chartType === \"trend\" /* trend */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getCostLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getCostLayout(),\n            getUsageLayout()));\n    }\n    else if (chartType === \"usage\" /* usage */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getRequestLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getRequestLayout(),\n            getUsageLayout()));\n    }\n    else {\n        return null;\n    }\n};\nconst ReportSummaryDetails = translate()(ReportSummaryDetailsBase);\nexport { ReportSummaryDetails };\n","import { global_spacer_md } from '@patternfly/react-tokens';\nimport { css } from 'emotion';\nexport const reportSummaryItem = css `\n  :not(:last-child): {\n    marginbottom: ${global_spacer_md.value};\n  }\n`;\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { reportSummaryItem } from './reportSummaryItem.styles';\nconst ReportSummaryItemBase = ({ label, formatOptions, formatValue, t, totalValue, units, value, }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: reportSummaryItem },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst ReportSummaryItem = translate()(ReportSummaryItemBase);\nexport { ReportSummaryItem };\n","import { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = {\n    skeleton: {\n        marginTop: global_spacer_md.value,\n    },\n};\n","import { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { getComputedReportItems, } from 'utils/computedReport/getComputedReportItems';\nimport { styles } from './reportSummaryItems.styles';\nclass ReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: SkeletonSize.md }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, style: styles.skeleton }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, style: styles.skeleton }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, style: styles.skeleton })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst ReportSummaryItems = translate()(ReportSummaryItemsBase);\nexport { ReportSummaryItems, };\n","import { chart_color_green_100, chart_color_green_200, chart_color_green_300, chart_color_green_400, chart_color_green_500, global_disabled_color_200, global_FontFamily_sans_serif, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    currentCostData: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    currentInfrastructureCostData: {\n        data: {\n            fill: 'none',\n            stroke: '#88D080',\n            strokeDasharray: '3,3',\n        },\n    },\n    itemsPerRow: 2,\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 14,\n        },\n        minWidth: 200,\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        global_disabled_color_200.value,\n        chart_color_green_100.value,\n        global_disabled_color_200.value,\n        chart_color_green_200.value,\n    ],\n    previousCostData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    previousInfrastructureCostData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    previousColorScale: [\n        global_disabled_color_200.value,\n        global_disabled_color_200.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartVoronoiContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { chartOverride } from 'components/charts/common/chart.styles';\nimport { getCostRangeString, getDateRange, getMaxValue, getTooltipContent, getTooltipLabel, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './costChart.styles';\nclass CostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentInfrastructureCostData, currentCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                series: [\n                    {\n                        childName: 'previousCost',\n                        data: previousCostData,\n                        legendItem: {\n                            name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                            symbol: {\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.previousCostData,\n                    },\n                    {\n                        childName: 'currentCost',\n                        data: currentCostData,\n                        legendItem: {\n                            name: getCostRangeString(currentCostData, costKey, true, false),\n                            symbol: {\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.currentCostData,\n                    },\n                    {\n                        childName: 'previousInfrastructureCost',\n                        data: previousInfrastructureCostData,\n                        legendItem: {\n                            name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                            symbol: {\n                                type: 'dash',\n                            },\n                        },\n                        style: chartStyles.previousInfrastructureCostData,\n                    },\n                    {\n                        childName: 'currentInfrastructureCost',\n                        data: currentInfrastructureCostData,\n                        legendItem: {\n                            name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                            symbol: {\n                                type: 'dash',\n                            },\n                        },\n                        style: chartStyles.currentInfrastructureCostData,\n                    },\n                ],\n            });\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow\n                ? legendItemsPerRow\n                : width > 400\n                    ? chartStyles.itemsPerRow\n                    : 1;\n            return (React.createElement(ChartLegend, { colorScale: chartStyles.legendColorScale, data: this.getLegendData(), height: 25, gutter: 10, itemsPerRow: itemsPerRow, name: \"legend\", responsive: false, style: chartStyles.legend }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const value = getTooltipLabel(datum, getTooltipContent(formatDatumValue), formatDatumOptions, 'date');\n            if (datum.childName === 'currentCost' ||\n                datum.childName === 'previousCost') {\n                return i18next.t('chart.cost_tooltip', { value });\n            }\n            else if (datum.childName === 'currentInfrastructureCost' ||\n                datum.childName === 'previousInfrastructureCost') {\n                return i18next.t('chart.cost_infrastructure_tooltip', { value });\n            }\n            return value;\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length === (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map((serie, index) => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign({}, s.legendItem, getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentInfrastructureCostData !==\n            this.props.currentInfrastructureCostData ||\n            prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.previousInfrastructureCostData !==\n                this.props.previousInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentInfrastructureCostData, currentCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentInfrastructure = currentInfrastructureCostData\n            ? getMaxValue(currentInfrastructureCostData)\n            : 0;\n        const maxCurrentUsage = currentCostData ? getMaxValue(currentCostData) : 0;\n        const maxPreviousInfrastructure = previousInfrastructureCostData\n            ? getMaxValue(previousInfrastructureCostData)\n            : 0;\n        const maxPreviousUsage = previousCostData\n            ? getMaxValue(previousCostData)\n            : 0;\n        const maxValue = Math.max(maxCurrentInfrastructure, maxCurrentUsage, maxPreviousInfrastructure, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, currentCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const currentInfrastructureDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const currentUsageDate = currentCostData\n            ? getDate(getDateRange(currentCostData, true, true)[1])\n            : 0;\n        const previousInfrastructureDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousCostData\n            ? getDate(getDateRange(previousCostData, true, true)[1])\n            : 0;\n        return currentInfrastructureDate > 0 ||\n            currentUsageDate > 0 ||\n            previousInfrastructureDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentInfrastructureDate, currentUsageDate, previousInfrastructureDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding, title, } = this.props;\n        const { series, width } = this.state;\n        const isDataAvailable = this.isDataAvailable();\n        const container = (React.createElement(ChartVoronoiContainer, { allowTooltip: !isDataAvailable, constrainToVisibleArea: true, labels: !isDataAvailable ? this.getTooltipLabel : undefined, voronoiDimension: \"x\" }));\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 400\n                ? containerHeight\n                : containerHeight + 75\n            : containerHeight;\n        return (React.createElement(\"div\", { className: chartOverride, ref: this.containerRef, style: { height: adjustedContainerHeight } },\n            React.createElement(\"div\", null, title),\n            React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                series &&\n                    series.map((s, index) => {\n                        return this.getChart(s, index);\n                    }),\n                React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))));\n    }\n}\nexport { CostChart };\n","import { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = {\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n};\n","import { CostChart } from 'components/charts/costChart';\nimport React from 'react';\nimport { styles } from './reportSummaryTrend.styles';\nconst ReportSummaryCost = props => (React.createElement(\"div\", { style: styles.chart },\n    React.createElement(CostChart, Object.assign({}, props))));\nexport { ReportSummaryCost };\n","import { chart_color_green_100, chart_color_green_200, chart_color_green_300, chart_color_green_400, chart_color_green_500, global_disabled_color_200, global_FontFamily_sans_serif, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 14,\n        },\n        minWidth: 175,\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        global_disabled_color_200.value,\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    previousMonth: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    currentMonth: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartVoronoiContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { chartOverride } from 'components/charts/common/chart.styles';\nimport { getCostRangeString, getDateRange, getMaxValue, getTooltipContent, getTooltipLabel, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport React from 'react';\nimport { chartStyles } from './trendChart.styles';\nclass TrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, previousData, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? 'chart.usage_legend_label'\n                : 'chart.cost_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                series: [\n                    {\n                        childName: 'previousCost',\n                        data: previousData,\n                        legendItem: {\n                            name: getCostRangeString(previousData, key, true, true, 1),\n                            symbol: {\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.previousMonth,\n                    },\n                    {\n                        childName: 'currentCost',\n                        data: currentData,\n                        legendItem: {\n                            name: getCostRangeString(currentData, key, true, false),\n                            symbol: {\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.currentMonth,\n                    },\n                ],\n            });\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        this.getLegend = () => {\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            return (React.createElement(ChartLegend, { colorScale: chartStyles.legendColorScale, data: this.getLegendData(), gutter: 10, height: 25, name: \"legend\", orientation: width > 150 ? 'horizontal' : 'vertical', style: chartStyles.legend }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions, units } = this.props;\n            return getTooltipLabel(datum, getTooltipContent(formatDatumValue), formatDatumOptions, 'date', units);\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            // Todo: Leave one legend item visible at all times?\n            // const { hiddenSeries, series } = this.state;\n            // const leaveVisible = hiddenSeries.size === series.length - 1;\n            // if (leaveVisible && !this.isSeriesHidden(props.index)) {\n            //   return;\n            // }\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length === (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map((serie, index) => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign({}, s.legendItem, getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentData, previousData } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrent = currentData ? getMaxValue(currentData) : 0;\n        const maxPrevious = previousData ? getMaxValue(previousData) : 0;\n        const maxValue = Math.max(maxCurrent, maxPrevious);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentData, previousData } = this.props;\n        const previousDate = previousData\n            ? getDate(getDateRange(previousData, true, true)[1])\n            : 0;\n        const currentDate = currentData\n            ? getDate(getDateRange(currentData, true, true)[1])\n            : 0;\n        return currentDate > 0 || previousDate > 0\n            ? Math.max(currentDate, previousDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding, title, } = this.props;\n        const { series, width } = this.state;\n        const isDataAvailable = this.isDataAvailable();\n        const container = (React.createElement(ChartVoronoiContainer, { allowTooltip: !isDataAvailable, constrainToVisibleArea: true, labels: !isDataAvailable ? this.getTooltipLabel : undefined, voronoiDimension: \"x\" }));\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 400\n                ? containerHeight\n                : containerHeight + 75\n            : containerHeight;\n        return (React.createElement(\"div\", { className: chartOverride, ref: this.containerRef, style: { height: adjustedContainerHeight } },\n            React.createElement(\"div\", null, title),\n            React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                series &&\n                    series.map((s, index) => {\n                        return this.getChart(s, index);\n                    }),\n                React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))));\n    }\n}\nexport { TrendChart };\n","import { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nimport { styles } from './reportSummaryTrend.styles';\nconst ReportSummaryTrend = props => (React.createElement(\"div\", { style: styles.chart },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { ReportSummaryTrend };\n","import { chart_color_green_100, chart_color_green_200, chart_color_green_300, chart_color_green_400, chart_color_green_500, global_disabled_color_200, global_FontFamily_sans_serif, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    chartContainer: {\n        marginTop: global_spacer_lg.value,\n    },\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: '#88D080',\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    itemsPerRow: 2,\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 14,\n        },\n        minWidth: 380,\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        global_disabled_color_200.value,\n        chart_color_green_100.value,\n        global_disabled_color_200.value,\n        chart_color_green_200.value,\n    ],\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    // TBD: No grey scale, yet\n    previousColorScale: [\n        global_disabled_color_200.value,\n        global_disabled_color_200.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartVoronoiContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { chartOverride } from 'components/charts/common/chart.styles';\nimport { getDateRange, getMaxValue, getTooltipContent, getTooltipLabel, getUsageRangeString, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles } from './usageChart.styles';\nclass UsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n            const usageKey = 'chart.usage_legend_label';\n            const requestKey = 'chart.requests_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                series: [\n                    {\n                        childName: 'previousUsage',\n                        data: previousUsageData,\n                        legendItem: {\n                            name: getUsageRangeString(previousUsageData, usageKey, true, true, 1),\n                            symbol: {\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.previousUsageData,\n                    },\n                    {\n                        childName: 'currentUsage',\n                        data: currentUsageData,\n                        legendItem: {\n                            name: getUsageRangeString(currentUsageData, usageKey, true, false),\n                            symbol: {\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.currentUsageData,\n                    },\n                    {\n                        childName: 'previousRequest',\n                        data: previousRequestData,\n                        legendItem: {\n                            name: getUsageRangeString(previousRequestData, requestKey, true, true, 1),\n                            symbol: {\n                                type: 'dash',\n                            },\n                        },\n                        style: chartStyles.previousRequestData,\n                    },\n                    {\n                        childName: 'currentRequest',\n                        data: currentRequestData,\n                        legendItem: {\n                            name: getUsageRangeString(currentRequestData, requestKey, true, false),\n                            symbol: {\n                                type: 'dash',\n                            },\n                        },\n                        style: chartStyles.currentRequestData,\n                    },\n                ],\n            });\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow\n                ? legendItemsPerRow\n                : width > 300\n                    ? chartStyles.itemsPerRow\n                    : 1;\n            return (React.createElement(ChartLegend, { colorScale: chartStyles.legendColorScale, data: this.getLegendData(), height: 25, gutter: 10, itemsPerRow: itemsPerRow, name: \"legend\", style: chartStyles.legend }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const value = getTooltipLabel(datum, getTooltipContent(formatDatumValue), formatDatumOptions, 'date');\n            if (datum.childName === 'currentRequest' ||\n                datum.childName === 'previousRequest') {\n                return i18next.t('chart.requests_tooltip', { value });\n            }\n            else if (datum.childName === 'currentUsage' ||\n                datum.childName === 'previousUsage') {\n                return i18next.t('chart.usage_tooltip', { value });\n            }\n            return value;\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length === (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map((serie, index) => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign({}, s.legendItem, getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentRequest = currentRequestData\n            ? getMaxValue(currentRequestData)\n            : 0;\n        const maxCurrentUsage = currentUsageData\n            ? getMaxValue(currentUsageData)\n            : 0;\n        const maxPreviousRequest = previousRequestData\n            ? getMaxValue(previousRequestData)\n            : 0;\n        const maxPreviousUsage = previousUsageData\n            ? getMaxValue(previousUsageData)\n            : 0;\n        const maxValue = Math.max(maxCurrentRequest, maxCurrentUsage, maxPreviousRequest, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const currentRequestDate = currentRequestData\n            ? getDate(getDateRange(currentRequestData, true, true)[1])\n            : 0;\n        const currentUsageDate = currentUsageData\n            ? getDate(getDateRange(currentUsageData, true, true)[1])\n            : 0;\n        const previousRequestDate = previousRequestData\n            ? getDate(getDateRange(previousRequestData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousUsageData\n            ? getDate(getDateRange(previousUsageData, true, true)[1])\n            : 0;\n        return currentRequestDate > 0 ||\n            currentUsageDate > 0 ||\n            previousRequestDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding, title, } = this.props;\n        const { series, width } = this.state;\n        const isDataAvailable = this.isDataAvailable();\n        const container = (React.createElement(ChartVoronoiContainer, { allowTooltip: !isDataAvailable, constrainToVisibleArea: true, labels: !isDataAvailable ? this.getTooltipLabel : undefined, voronoiDimension: \"x\" }));\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 400\n                ? containerHeight\n                : containerHeight + 75\n            : containerHeight;\n        return (React.createElement(\"div\", { className: chartOverride, ref: this.containerRef, style: { height: adjustedContainerHeight } },\n            React.createElement(\"div\", null, title),\n            React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                series &&\n                    series.map((s, index) => {\n                        return this.getChart(s, index);\n                    }),\n                React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))));\n    }\n}\nexport { UsageChart };\n","import { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nimport { styles } from './reportSummaryTrend.styles';\nconst ReportSummaryUsage = props => (React.createElement(\"div\", { style: styles.chart },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { ReportSummaryUsage };\n","export { ReportSummary } from './reportSummary';\nexport { ReportSummaryAlt } from './reportSummaryAlt';\nexport { ReportSummaryDetails } from './reportSummaryDetails';\nexport { ReportSummaryItem } from './reportSummaryItem';\nexport { ReportSummaryItems } from './reportSummaryItems';\nexport { ReportSummaryCost } from './reportSummaryCost';\nexport { ReportSummaryTrend } from './reportSummaryTrend';\nexport { ReportSummaryUsage } from './reportSummaryUsage';\n","function getValueForItem(item, options) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    const sortKey = options.key;\n    return item[sortKey];\n}\nexport function sort(array, options) {\n    const { direction = 0 /* asc */ } = options || {};\n    return [...array].sort((a, b) => {\n        const aVal = direction === 0 /* asc */\n            ? getValueForItem(a, options)\n            : getValueForItem(b, options);\n        const bVal = direction === 0 /* asc */\n            ? getValueForItem(b, options)\n            : getValueForItem(a, options);\n        if (aVal > bVal) {\n            return -1;\n        }\n        if (aVal < bVal) {\n            return 1;\n        }\n        return 0;\n    });\n}\n","import { global_spacer_lg } from '@patternfly/react-tokens';\nexport const styles = {\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100vh',\n        marginTop: '150px',\n    },\n    viewSources: {\n        marginTop: global_spacer_lg.value,\n    },\n};\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, Title, } from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { getTestProps, testIds } from 'testIds';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getViewSources = () => {\n            const { t } = this.props;\n            const pathName = window.location.pathname.split('/');\n            pathName.shift();\n            let release = '';\n            if (pathName[0] === 'beta') {\n                release = `/beta`;\n            }\n            return (React.createElement(\"a\", Object.assign({ href: `${release}/settings/sources` }, getTestProps(testIds.providers.view_all_link)), t('providers.view_sources')));\n        };\n    }\n    render() {\n        const { t } = this.props;\n        return (React.createElement(\"div\", { style: styles.container },\n            React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: DollarSignIcon }),\n                React.createElement(Title, { size: \"lg\" }, t('providers.empty_state_title')),\n                React.createElement(EmptyStateBody, null, t('providers.empty_state_desc')),\n                React.createElement(\"div\", { style: styles.viewSources }, this.getViewSources()))));\n    }\n}\nconst NoProvidersState = translate()(connect()(NoProvidersStateBase));\nexport { NoProvidersState };\n"],"sourceRoot":""}