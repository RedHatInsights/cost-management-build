{"version":3,"sources":["webpack:///./src/components/commonChart/chartUtils.ts","webpack:///./src/utils/formatValue.ts","webpack:///./src/utils/getComputedOcpReportItems.ts","webpack:///./src/utils/sort.ts","webpack:///./src/testIds.ts","webpack:///./src/utils/getComputedAwsReportItems.ts","webpack:///./src/components/victory/path-helpers.ts","webpack:///./src/components/victory/victoryPoint.tsx","webpack:///./src/components/trendChart/trendChart.styles.ts","webpack:///./src/components/trendChart/trendChart.tsx","webpack:///./src/components/tabs/tabContent.tsx","webpack:///./src/components/tabs/tabItem.styles.ts","webpack:///./src/components/tabs/tabItem.tsx","webpack:///./src/components/tabs/tabNavigation.styles.ts","webpack:///./src/components/tabs/tabNavigation.tsx","webpack:///./src/components/tabs/tabs.tsx","webpack:///./src/components/ocpReportSummary/ocpReportSummary.styles.ts","webpack:///./src/components/ocpReportSummary/ocpReportSummary.tsx","webpack:///./src/components/ocpReportSummary/ocpReportSummaryDetails.styles.ts","webpack:///./src/components/ocpReportSummary/ocpReportSummaryDetails.tsx","webpack:///./src/components/ocpReportSummary/ocpReportSummaryItem.styles.ts","webpack:///./src/components/ocpReportSummary/ocpReportSummaryItem.tsx","webpack:///./src/components/ocpReportSummary/ocpReportSummaryItems.tsx","webpack:///./src/components/ocpReportSummary/ocpReportSummaryTrend.tsx","webpack:///./src/components/usageChart/usageChart.styles.ts","webpack:///./src/components/usageChart/usageChart.tsx","webpack:///./src/components/ocpReportSummary/ocpReportSummaryUsage.tsx","webpack:///./src/components/link/link.tsx","webpack:///./src/pages/ocpDashboard/ocpDashboardWidget.tsx","webpack:///./src/pages/ocpDashboard/ocpDashboard.tsx","webpack:///./src/pages/overview/emptyState.styles.ts","webpack:///./src/pages/overview/emptyState.tsx","webpack:///./src/pages/overview/loadingState.styles.ts","webpack:///./src/pages/overview/errorState.tsx","webpack:///./src/pages/overview/loadingState.tsx","webpack:///./src/pages/overview/overview.tsx","webpack:///./src/components/awsReportSummary/awsReportSummary.styles.ts","webpack:///./src/components/awsReportSummary/awsReportSummary.tsx","webpack:///./src/components/awsReportSummary/awsReportSummaryDetails.styles.ts","webpack:///./src/components/awsReportSummary/awsReportSummaryDetails.tsx","webpack:///./src/components/awsReportSummary/awsReportSummaryItem.styles.ts","webpack:///./src/components/awsReportSummary/awsReportSummaryItem.tsx","webpack:///./src/components/awsReportSummary/awsReportSummaryItems.tsx","webpack:///./src/components/awsReportSummary/awsReportSummaryTrend.tsx","webpack:///./src/pages/awsDashboard/awsDashboardWidget.tsx","webpack:///./src/pages/awsDashboard/awsDashboard.tsx","webpack:///./src/pages/ocpDashboard/index.ts","webpack:///./src/pages/awsDashboard/index.ts","webpack:///./src/pages/overview/index.ts"],"names":["transformAwsReport","report","type","key","items","idKey","sortKey","sortDirection","computedItems","Object","utils_getComputedAwsReportItems__WEBPACK_IMPORTED_MODULE_6__","map","i","createDatum","total","reduce","acc","d","prevValue","length","y","transformOcpReport","reportItem","utils_getComputedOcpReportItems__WEBPACK_IMPORTED_MODULE_7__","value","computedItem","n","x","date_fns_get_date__WEBPACK_IMPORTED_MODULE_2___default","id","label","Number","parseFloat","toFixed","isInt","name","units","getDateRange","datums","firstOfMonth","lastOfMonth","start","end","today","Date","date_fns_start_of_month__WEBPACK_IMPORTED_MODULE_3___default","getDatumDateRange","setDate","lastDate","date_fns_end_of_month__WEBPACK_IMPORTED_MODULE_0___default","getDate","getDateRangeString","current","monthName","date_fns_format__WEBPACK_IMPORTED_MODULE_1___default","startDate","endDate","i18next__WEBPACK_IMPORTED_MODULE_4__","t","date","getDateString","month","getMaxValue","max","forEach","datum","getTooltipContent","formatValue","unit","options","lookup","utils_formatValue__WEBPACK_IMPORTED_MODULE_5__","getTooltipLabel","formatOptions","toString","day","unitLookupKey","split","toLowerCase","fValue","formatCurrency","formatStorage","unknownTypeFormatter","_unit","fractionDigits","toLocaleString","style","currency","minimumFractionDigits","maximumFractionDigits","getComputedOcpReportItems","labelKey","_sort__WEBPACK_IMPORTED_MODULE_0__","getUnsortedComputedOcpReportItems","direction","itemMap","visitDataPoint","dataPoint","values","capacity","charge","cluster_alias","limit","request","usage","assign","app","deltaPercent","delta_percent","deltaValue","delta_value","Array","data","getIdKeyForGroupBy","groupBy","project","cluster","node","getValueForItem","item","sort","array","a","b","aVal","bVal","__webpack_require__","__webpack_exports__","getTestProps","data-testid","testIds","details","historical_data_btn","tag_btn","export","cancel_btn","submit_btn","login","alert","form","username_input","password_input","submit","masthead","username","sidebarToggle","logout","providers","add_btn","bucket_input","empty_state_add_btn","name_input","resource_name_input","cluster_id_input","type_input","sidebar","nav","link","backdrop","groups","getComputedAwsReportItems","getUnsortedComputedAwsReportItems","account_alias","group","account","instance_type","region","service","path_helpers","[object Object]","size","baseSize","lineHeight","x0","y1","distance","padding","victoryPoint_VictoryPoint","point","props","symbol","propTypes","prop_types_default","oneOfType","oneOf","func","chartStyles","colorScale","esm","legend","labels","fontFamily","fontSize","previousMonth","fill","stroke","currentMonth","yAxis","axisLabel","grid","ticks","tickLabels","xAxis","styles","StyleSheet","create","chartContainer",":not(foo) svg","overflow","display","marginBottom","marginTop","trendChart_TrendChart","react_default","Component","super","arguments","this","containerRef","createRef","state","width","initDatum","currentData","previousData","title","legendData","push","chartUtils","cost","charts","show","onClick","handleCostLegendClick","setState","newDatum","index","handleResize","clientWidth","getChart","createElement","ChartArea","getLegend","ChartLegend","containerComponent","ChartContainer","responsive","events","target","eventHandlers","mutation","gutter","height","orientation","theme","ChartTheme","light","blue","formatDatumValue","formatDatumOptions","setTimeout","window","addEventListener","prevProps","removeEventListener","domain","maxCurrent","maxPrevious","maxValue","Math","ceil","previousDate","get_date_default","currentDate","result","trim","container","ChartVoronoiContainer","legendWidth","minWidth","legendContainer","getDomain","getEndDate","midDate","floor","className","ref","Chart","Boolean","chart","victory_axis","tickValues","dependentAxis","isLegendVisible","TabContent","content","role","tabItem","position","flexGrow","textAlign","cursor","tabItemShrink","flexShrink","marginRight","selected","backgroundImage","tabItem_TabItem","handleClick","onSelect","isSelected","isShrink","aria-selected","tabIndex","tabNavigation_styles_styles","tabNavigation","alignItems","tabNavigation_TabNavigation","handleKeyDown","event","includes","tabs","onChange","modifier","newIndex","findIndex","onKeyDown","tab","Tabs","selectedTab","find","reportSummary","subtitle","color","var","OcpReportSummary","es","subTitle","detailsLink","children","status","Card","CardHeader","Title","CardBody","CardFooter","ocpReportSummaryDetails_styles_styles","requestedValue","marginLeft","text","paddingBottom","titleContainer","usageText","OcpReportSummaryDetails","reportType","requestLabel","requestValue","Fragment","ocpReportSummaryItem_styles_styles","reportSummaryItem",":not(:last-child)","test","OcpReportSummaryItem","totalValue","percentVal","percentLabel","Progress","sm","defaultProps","v","ocpReportSummaryItems_OcpReportSummaryItems","nextProps","otherIndex","slice","getItems","OcpReportSummaryTrend","trendChart","currentRequestData","strokeDasharray","currentUsageData","previousRequestData","previousUsageData","currentColorScale","previousColorScale","usageChart_styles_styles","usageChart_UsageChart","previousLegendData","dist_es","previous","handlePreviousLegendClick","currentLegendData","handleCurrentLegendClick","dataComponent","victoryPoint","maxCurrentRequest","maxCurrentUsage","maxPreviousRequest","maxPreviousUsage","currentRequestDate","currentUsageDate","previousRequestDate","previousUsageDate","isPreviousLegendVisible","isCurrentLegendVisible","OcpReportSummaryUsage","CastedButton","Button","link_Link","component","Link","variant","getIdKeyForTab","mapStateToProps","common","widgetId","widget","ocpDashboard","selectWidget","queries","selectWidgetQueries","currentQuery","previousQuery","tabsQuery","ocpReports","selectReport","selectReportFetchStatus","mapDispatchToProps","fetchReports","fetchWidgetReports","updateTab","changeWidgetTab","OcpDashboardWidget","react_redux_es","getTabTitle","getDetailsLinkTitle","buildDetailsLink","ocpQuery","group_by","order_by","renderTab","tabData","topItems","currentTab","ocpReportSummary","handleTabChange","tabId","titleKey","trend","availableTabs","get_month_default","format_default","start_of_month_default","count","detailLabel","requestLabelKey","components_link","to","undefined","components_tabs","ocpDashboard_mapStateToProps","widgets","selectCurrentWidgets","OcpDashboard","openProvidersModal","ui","Grid","GridItem","xl","lg","card","cardBody","primaryAction","EmptyState","md","dollar_sign_icon","loadingState_styles_styles","paddingLeft","paddingRight","ErrorState","isUnauthorized","ban_icon","error_circle_o_icon","LoadingState","binoculars_icon","store_providers","selectProviders","results","showAWSTab","showOCPTab","providersError","selectProvidersError","providersFetchStatus","selectProvidersFetchStatus","Overview","getAddSourceButton","secondary","getEmptyState","getErrorState","response","getLoadingState","getTabs","awsDashboard","AwsReportSummary","awsReportSummaryDetails_styles_styles","reportSummaryDetails","AwsReportSummaryDetails","awsReportSummaryItem_styles_styles","AwsReportSummaryItem","awsReportSummaryItems_AwsReportSummaryItems","AwsReportSummaryTrend","awsReports","AwsDashboardWidget","awsQuery","utils_formatValue","context","labelKeyContext","trendTitle","awsDashboard_mapStateToProps","AwsDashboard","react_hot_loader__WEBPACK_IMPORTED_MODULE_0__","module","_ocpDashboard__WEBPACK_IMPORTED_MODULE_1__","_awsDashboard__WEBPACK_IMPORTED_MODULE_1__","_overview__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"6197815ad74b35b41657.bundle.js","sourcesContent":["import endOfMonth from 'date-fns/end_of_month';\nimport format from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport startOfMonth from 'date-fns/start_of_month';\nimport i18next from 'i18next';\nimport { unitLookupKey, } from 'utils/formatValue';\nimport { getComputedAwsReportItems, } from 'utils/getComputedAwsReportItems';\nimport { getComputedOcpReportItems, } from 'utils/getComputedOcpReportItems';\nexport function transformAwsReport(report, type = 1 /* daily */, key = 'date') {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        report,\n        idKey: key,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedAwsReportItems(items);\n    if (type === 1 /* daily */) {\n        return computedItems.map(i => createDatum(i.total, i, key));\n    }\n    if (type === 2 /* monthly */) {\n        return computedItems.map(i => createDatum(i.total, i, key));\n    }\n    return computedItems.reduce((acc, d) => {\n        const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n        return [...acc, createDatum(prevValue + d.total, d, key)];\n    }, []);\n}\nexport function transformOcpReport(report, type = 1 /* daily */, key = 'date', reportItem = 'charge') {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        report,\n        idKey: key,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedOcpReportItems(items);\n    if (type === 1 /* daily */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    if (type === 2 /* monthly */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    return computedItems.reduce((acc, d) => {\n        const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n        return [...acc, createDatum(prevValue + d[reportItem], d, key)];\n    }, []);\n}\nexport function createDatum(value, computedItem, idKey = 'date') {\n    const xVal = idKey === 'date' ? getDate(computedItem.id) : computedItem.label;\n    const yVal = isFloat(value)\n        ? parseFloat(value.toFixed(2))\n        : isInt(value)\n            ? value\n            : 0;\n    return {\n        x: xVal,\n        y: yVal,\n        key: computedItem.id,\n        name: computedItem.id,\n        units: computedItem.units,\n    };\n}\nexport function getDatumDateRange(datums) {\n    if (!(datums && datums.length)) {\n        const today = new Date();\n        const firstOfMonth = startOfMonth(today);\n        return [firstOfMonth, today];\n    }\n    const start = new Date(datums[0].key + 'T00:00:00');\n    const end = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    return [start, end];\n}\nexport function getDateRange(datums, firstOfMonth = true, lastOfMonth = false) {\n    const [start, end] = getDatumDateRange(datums);\n    // Show the date range we are trying to cover (i.e., days 1-30/31)\n    if (firstOfMonth && start.setDate) {\n        start.setDate(1);\n    }\n    if (lastOfMonth && start.setDate) {\n        const lastDate = endOfMonth(start).getDate();\n        end.setDate(lastDate);\n    }\n    return [start, end];\n}\nexport function getDateRangeString(datums, firstOfMonth = false, lastOfMonth = false, current = false) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth);\n    const monthName = format(start, 'MMM');\n    const startDate = getDate(start);\n    const endDate = getDate(end);\n    if (current) {\n        return i18next.t(`date.range_current`, {\n            date: getDateString(startDate),\n            month: startDate !== endDate ? monthName : '',\n        });\n    }\n    return i18next.t(`date.range_full`, {\n        endDate: getDateString(endDate),\n        startDate: getDateString(startDate),\n        month: startDate !== endDate ? monthName : '',\n    });\n}\nexport function getMaxValue(datums) {\n    let max = 0;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            if (datum.y > max) {\n                max = datum.y;\n            }\n        });\n    }\n    return max;\n}\nexport function getTooltipContent(formatValue) {\n    return function labelFormatter(value, unit = null, options = {}) {\n        const lookup = unitLookupKey(unit);\n        switch (lookup) {\n            case 'hrs':\n            case 'gb':\n                return i18next.t(`units.${lookup}`, {\n                    value: `${formatValue(value, unit, options)}`,\n                });\n            default:\n                return `${formatValue(value, unit, options)}`;\n        }\n    };\n}\nexport function getTooltipLabel(datum, formatValue, formatOptions, idKey = 'date') {\n    if (!datum.key) {\n        return '';\n    }\n    if (idKey === 'date') {\n        const date = format(datum.key, 'MMM D YYYY');\n        return `${date}: ${formatValue(datum.y, datum.units, formatOptions)}`;\n    }\n    return datum.key.toString();\n}\nfunction isInt(n) {\n    return Number(n) === n && n % 1 === 0;\n}\nfunction isFloat(n) {\n    return Number(n) === n && n % 1 !== 0;\n}\nfunction getDateString(date) {\n    const day = date % 10;\n    if (day === 1) {\n        return i18next.t(`date.first`, { date });\n    }\n    else if (day === 2) {\n        return i18next.t(`date.second`, { date });\n    }\n    else if (day === 3) {\n        return i18next.t(`date.third`, { date });\n    }\n    return i18next.t(`date.tenth`, { date });\n}\n","export const unitLookupKey = unit => unit ? unit.split('-')[0].toLowerCase() : '';\nexport const formatValue = (value, unit, options = {}) => {\n    const lookup = unitLookupKey(unit);\n    const fValue = value || 0;\n    switch (lookup) {\n        case 'usd':\n            return formatCurrency(fValue, lookup, options);\n        case 'gb':\n            return formatStorage(fValue, lookup, options);\n        default:\n            return unknownTypeFormatter(fValue, lookup, options);\n    }\n};\nconst unknownTypeFormatter = (value, _unit, { fractionDigits } = {}) => {\n    return value.toFixed(fractionDigits);\n};\nexport const formatCurrency = (value, _unit, { fractionDigits = 2 } = {}) => {\n    let fValue = value;\n    if (!value) {\n        fValue = 0;\n    }\n    return fValue.toLocaleString('en', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatStorage = (value, _unit, { fractionDigits = 2 } = {}) => {\n    return value.toFixed(fractionDigits);\n};\n","import { sort } from './sort';\nexport function getComputedOcpReportItems({ report, idKey, labelKey = idKey, sortKey = 'charge', sortDirection = 0 /* asc */, }) {\n    return sort(getUnsortedComputedOcpReportItems({\n        report,\n        idKey,\n        labelKey,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nexport function getUnsortedComputedOcpReportItems({ report, idKey, labelKey = idKey, }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = {};\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint.values) {\n            dataPoint.values.forEach(value => {\n                const capacity = value.capacity;\n                const charge = value.charge;\n                const id = value[idKey];\n                let label = value[labelKey];\n                if (labelKey === 'cluster' && value.cluster_alias) {\n                    label = value.cluster_alias;\n                }\n                const limit = value.limit;\n                const request = value.request;\n                const usage = value.usage;\n                if (!itemMap[id]) {\n                    itemMap[id] = {\n                        app: value.app,\n                        capacity,\n                        charge,\n                        deltaPercent: value.delta_percent,\n                        deltaValue: value.delta_value,\n                        id,\n                        label,\n                        limit,\n                        request,\n                        units: value.units || usage ? 'GB' : 'USD',\n                        usage,\n                    };\n                    return;\n                }\n                itemMap[id] = Object.assign({}, itemMap[id], { capacity: itemMap[id].capacity + capacity, charge: itemMap[id].charge + charge, limit: itemMap[id].limit + limit, request: itemMap[id].request + request, usage: itemMap[id].usage + usage });\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Object.values(itemMap);\n}\nexport function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    return 'date';\n}\n","function getValueForItem(item, options) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    const sortKey = options.key;\n    return item[sortKey];\n}\nexport function sort(array, options) {\n    const { direction = 0 /* asc */ } = options || {};\n    return [...array].sort((a, b) => {\n        const aVal = direction === 0 /* asc */\n            ? getValueForItem(a, options)\n            : getValueForItem(b, options);\n        const bVal = direction === 0 /* asc */\n            ? getValueForItem(b, options)\n            : getValueForItem(a, options);\n        if (aVal > bVal) {\n            return -1;\n        }\n        if (aVal < bVal) {\n            return 1;\n        }\n        return 0;\n    });\n}\n","export const testIdProp = 'data-testid';\nexport const getTestProps = (id) => ({ [testIdProp]: id });\nexport const testIds = {\n    details: {\n        historical_data_btn: 'historical-data-btn',\n        tag_btn: 'tag-btn',\n    },\n    export: {\n        cancel_btn: 'cancel-btn',\n        submit_btn: 'submit-btn',\n    },\n    login: {\n        alert: 'alert',\n        form: 'login-form',\n        username_input: 'username-input',\n        password_input: 'password-input',\n        submit: 'submit',\n    },\n    masthead: {\n        masthead: 'masthead',\n        username: 'username',\n        sidebarToggle: 'sidebar-toggle',\n        logout: 'logout',\n    },\n    providers: {\n        add_btn: 'add-btn',\n        bucket_input: 'bucket-input',\n        cancel_btn: 'cancel-btn',\n        empty_state_add_btn: 'empty_state_add-btn',\n        name_input: 'provider-name-input',\n        resource_name_input: 'provider-resource-name-input',\n        cluster_id_input: 'provider-cluster-id-input',\n        submit_btn: 'submit-btn',\n        type_input: 'provider-type-input',\n    },\n    sidebar: {\n        nav: 'vertical-nav',\n        link: 'vertical-nav-link',\n        backdrop: 'sidebar-backdrop',\n    },\n};\n","import { sort } from './sort';\nconst groups = ['services', 'accounts', 'instance_types', 'regions'];\nexport function getComputedAwsReportItems({ report, idKey, labelKey = idKey, sortKey = 'total', sortDirection = 0 /* asc */, }) {\n    return sort(getUnsortedComputedAwsReportItems({\n        report,\n        idKey,\n        labelKey,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nexport function getUnsortedComputedAwsReportItems({ report, idKey, labelKey = idKey, }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = {};\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint.values) {\n            dataPoint.values.forEach(value => {\n                const total = value.total;\n                const id = value[idKey];\n                let label = value[labelKey];\n                if (labelKey === 'account' && value.account_alias) {\n                    label = value.account_alias;\n                }\n                if (!itemMap[id]) {\n                    itemMap[id] = {\n                        deltaPercent: value.delta_percent,\n                        deltaValue: value.delta_value,\n                        id,\n                        total,\n                        label,\n                        units: value.units,\n                    };\n                    return;\n                }\n                itemMap[id] = Object.assign({}, itemMap[id], { total: itemMap[id].total + total });\n            });\n        }\n        groups.forEach(group => {\n            if (dataPoint[group]) {\n                return dataPoint[group].forEach(visitDataPoint);\n            }\n        });\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Object.values(itemMap);\n}\nexport function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.account) {\n        return 'account';\n    }\n    if (groupBy.instance_type) {\n        return 'instance_type';\n    }\n    if (groupBy.region) {\n        return 'region';\n    }\n    if (groupBy.service) {\n        return 'service';\n    }\n    return 'date';\n}\n","// import pathHelpers from 'victory-core/src/victory-primitives/path-helpers';\n// Todo: Move this functionality to PF4 react-charts package\nexport default {\n    // Todo: Our jest config fails to process the import in path-helpers\n    // ...pathHelpers,\n    dash(x, y, size) {\n        const baseSize = 1.1 * size;\n        const lineHeight = baseSize - baseSize * 0.3;\n        const x0 = x - baseSize;\n        const y1 = y + lineHeight / 2;\n        const distance = (x + baseSize - x0) * 0.3;\n        const padding = distance / 3;\n        return `M ${x0}, ${y1}\n      h${distance}\n      v-${lineHeight}\n      h-${distance}\n      z\n      M ${x0 + distance + padding}, ${y1}\n      h${distance}\n      v-${lineHeight}\n      h-${distance}\n      z\n      M ${x0 + distance * 2 + padding * 2}, ${y1}\n      h${distance}\n      v-${lineHeight}\n      h-${distance}\n      z`;\n    },\n    minus(x, y, size) {\n        const baseSize = 1.1 * size;\n        const lineHeight = baseSize - baseSize * 0.3;\n        const x0 = x - baseSize;\n        const y1 = y + lineHeight / 2;\n        const distance = x + baseSize - x0;\n        return `M ${x0}, ${y1}\n      h${distance}\n      v-${lineHeight}\n      h-${distance}\n      z`;\n    },\n};\n","import PropTypes from 'prop-types';\nimport { Point } from 'victory';\nimport pathHelpers from './path-helpers';\n// Todo: Move this functionality to PF4 react-charts package\nclass VictoryPoint extends Point {\n    getPath(props) {\n        return pathHelpers[`${props.symbol}`](props.x, props.y, props.size);\n    }\n}\nVictoryPoint.propTypes = Object.assign({}, Point.propTypes, { symbol: PropTypes.oneOfType([\n        PropTypes.oneOf([\n            // Todo: Not importing all due to jest issue\n            // 'circle',\n            // 'diamond',\n            // 'plus',\n            'minus',\n            // 'square',\n            // 'star',\n            // 'triangleDown',\n            // 'triangleUp',\n            'dash',\n        ]),\n        PropTypes.func,\n    ]) });\nexport default VictoryPoint;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_disabled_color_200, global_FontFamily_sans_serif, global_FontSize_md, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    colorScale: [\n        global_disabled_color_200.value,\n        '#A2DA9C',\n        '#88D080',\n        '#6EC664',\n        '#519149',\n        '#3C6C37',\n    ],\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 12,\n        },\n    },\n    previousMonth: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    currentMonth: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = StyleSheet.create({\n    chartContainer: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n    legend: {\n        display: 'inline-block',\n        fontSize: global_FontSize_md.value,\n        marginBottom: global_spacer_lg.value,\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Chart, ChartArea, ChartContainer, ChartLegend, ChartTheme, ChartVoronoiContainer, } from '@patternfly/react-charts';\nimport { css } from '@patternfly/react-styles';\nimport { getDateRangeString, getMaxValue, getTooltipContent, getTooltipLabel, } from 'components/commonChart/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport React from 'react';\nimport { VictoryAxis } from 'victory';\nimport { getDateRange } from '../commonChart/chartUtils';\nimport { chartStyles, styles } from './trendChart.styles';\nclass TrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, previousData, title } = this.props;\n            const legendData = [];\n            if (previousData && previousData.length) {\n                legendData.push({\n                    name: getDateRangeString(previousData, true, true),\n                    symbol: {\n                        type: 'minus',\n                    },\n                });\n            }\n            if (currentData && currentData.length) {\n                legendData.push({\n                    name: getDateRangeString(currentData, true, false, true),\n                    symbol: {\n                        type: 'minus',\n                    },\n                });\n            }\n            const cost = {\n                charts: [\n                    {\n                        data: previousData,\n                        show: true,\n                        style: chartStyles.previousMonth,\n                    },\n                    {\n                        data: currentData,\n                        show: true,\n                        style: chartStyles.currentMonth,\n                    },\n                ],\n                legend: {\n                    colorScale: chartStyles.colorScale,\n                    data: legendData,\n                    onClick: this.handleCostLegendClick,\n                    title,\n                },\n            };\n            this.setState({\n                datum: {\n                    cost,\n                },\n            });\n        };\n        this.handleCostLegendClick = props => {\n            const { datum } = this.state;\n            const newDatum = Object.assign({}, datum);\n            if (props.index >= 0 && newDatum.cost.charts.length) {\n                newDatum.cost.charts[props.index].show = !newDatum.cost.charts[props.index].show;\n                this.setState({ datum: newDatum });\n            }\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (datum, index) => {\n            if (datum.data && datum.data.length && datum.show) {\n                return (React.createElement(ChartArea, { data: datum.data, key: `trend-chart-${index}`, style: datum.style }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getLegend = (datum, width) => {\n            if (datum && datum.data && datum.data.length) {\n                return (React.createElement(ChartLegend, { colorScale: datum.colorScale, containerComponent: React.createElement(ChartContainer, { responsive: false }), data: datum.data, events: [\n                        {\n                            target: 'data',\n                            eventHandlers: {\n                                onClick: () => {\n                                    return [\n                                        {\n                                            target: 'data',\n                                            mutation: props => {\n                                                datum.onClick(props);\n                                                return null;\n                                            },\n                                        },\n                                    ];\n                                },\n                            },\n                        },\n                    ], gutter: 5, height: 50, orientation: width > 150 ? 'horizontal' : 'vertical', style: chartStyles.legend, theme: ChartTheme.light.blue, width: width }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTooltipLabel = (datum) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            return getTooltipLabel(datum, getTooltipContent(formatDatumValue), formatDatumOptions, 'date');\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentData, previousData } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrent = currentData ? getMaxValue(currentData) : 0;\n        const maxPrevious = previousData ? getMaxValue(previousData) : 0;\n        const maxValue = Math.max(maxCurrent, maxPrevious);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentData, previousData } = this.props;\n        const previousDate = previousData\n            ? getDate(getDateRange(previousData, true, true)[1])\n            : 0;\n        const currentDate = currentData\n            ? getDate(getDateRange(currentData, true, true)[1])\n            : 0;\n        return currentDate > 0 || previousDate > 0\n            ? Math.max(currentDate, previousDate)\n            : 31;\n    }\n    isLegendVisible() {\n        const { datum } = this.state;\n        let result = false;\n        if (datum && datum.cost.legend && datum.cost.legend.data) {\n            datum.cost.legend.data.forEach(item => {\n                if (item.name && item.name.trim() !== '') {\n                    result = true;\n                    return;\n                }\n            });\n        }\n        return result;\n    }\n    render() {\n        const { height } = this.props;\n        const { datum, width } = this.state;\n        const container = React.createElement(ChartVoronoiContainer, { labels: this.getTooltipLabel });\n        const legendWidth = styles.legend.minWidth > width / 2\n            ? styles.legendContainer.minWidth\n            : width / 2;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        return (React.createElement(\"div\", { className: css(styles.chartContainer), ref: this.containerRef },\n            React.createElement(Chart, { containerComponent: container, domain: domain, height: height, width: width },\n                Boolean(datum && datum.cost) &&\n                    datum.cost.charts.map((chart, index) => {\n                        return this.getChart(chart, index);\n                    }),\n                React.createElement(VictoryAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                React.createElement(VictoryAxis, { dependentAxis: true, style: chartStyles.yAxis })),\n            Boolean(this.isLegendVisible()) && (React.createElement(\"div\", { className: css(styles.legend) },\n                Boolean(datum.cost.legend.title) && (React.createElement(\"div\", null, datum.cost.legend.title)),\n                this.getLegend(datum.cost.legend, legendWidth)))));\n    }\n}\nexport { TrendChart };\n","import React from 'react';\nexport const TabContent = ({ data }) => {\n    const content = typeof data.content === 'function' ? data.content(data) : data.content;\n    return React.createElement(\"div\", { role: \"tabpanel\" }, content);\n};\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_FontSize_md, global_primary_color_100, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    tabItem: {\n        position: 'relative',\n        flexGrow: 1,\n        textAlign: 'center',\n        fontSize: global_FontSize_md.value,\n        padding: global_spacer_sm.value,\n        cursor: 'pointer',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    tabItemShrink: {\n        flexGrow: '0',\n        flexShrink: '2',\n        marginRight: '20px',\n    },\n    selected: {\n        backgroundImage: `linear-gradient(to top, ${global_primary_color_100.value} 2px, transparent 2px)`,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './tabItem.styles';\nclass TabItem extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.handleClick = () => {\n            const { onSelect, data } = this.props;\n            onSelect(data.id);\n        };\n    }\n    render() {\n        const { data, isSelected, isShrink } = this.props;\n        return (React.createElement(\"div\", { role: \"tab\", onClick: this.handleClick, \"aria-selected\": isSelected, tabIndex: isSelected ? 0 : -1, className: css(styles.tabItem, isSelected && styles.selected, isShrink && styles.tabItemShrink) }, data.label));\n    }\n}\nexport { TabItem };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '../../../node_modules/@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    tabNavigation: {\n        display: 'flex',\n        alignItems: 'flex-end',\n        marginBottom: global_spacer_md.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { TabItem } from './tabItem';\nimport { styles } from './tabNavigation.styles';\nclass TabNavigation extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.handleKeyDown = (event) => {\n            if (!['ArrowRight', 'ArrowLeft'].includes(event.key)) {\n                return;\n            }\n            const { selected, tabs, onChange } = this.props;\n            const modifier = event.key === 'ArrowRight' ? 1 : -1;\n            const selectedIndex = tabs.findIndex(t => t.id === selected.id);\n            const newIndex = selectedIndex + modifier;\n            if (newIndex < 0 || newIndex > tabs.length - 1) {\n                return;\n            }\n            onChange(tabs[newIndex].id);\n        };\n    }\n    render() {\n        const { isShrink, tabs, selected, onChange } = this.props;\n        return (React.createElement(\"div\", { role: \"tablist\", className: css(styles.tabNavigation), onKeyDown: this.handleKeyDown }, tabs.map(tab => (React.createElement(TabItem, { isShrink: isShrink, onSelect: onChange, key: tab.id, data: tab, isSelected: tab.id === selected.id })))));\n    }\n}\nexport { TabNavigation };\n","import React from 'react';\nimport { TabContent } from './tabContent';\nimport { TabNavigation } from './tabNavigation';\nconst Tabs = ({ isShrink, selected, tabs, onChange }) => {\n    if (tabs.length === 0) {\n        return React.createElement(\"div\", null, \"No data was found\");\n    }\n    const selectedTab = tabs.find(tab => tab.id === selected);\n    return (React.createElement(\"div\", null,\n        React.createElement(TabNavigation, { isShrink: isShrink, tabs: tabs, selected: selectedTab || tabs[0], onChange: onChange }),\n        React.createElement(TabContent, { data: selectedTab || tabs[0] })));\n};\nexport { Tabs };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpReportSummary.styles';\nconst OcpReportSummaryBase = ({ title, subTitle, detailsLink, children, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? `${t('loading')}...` : children),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst OcpReportSummary = translate()(OcpReportSummaryBase);\nexport { OcpReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    requestedValue: {\n        marginLeft: global_spacer_sm.value,\n    },\n    text: {\n        display: 'flex',\n        alignItems: 'flex-end',\n        marginLeft: global_spacer_sm.value,\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    titleContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        minWidth: '175px',\n        width: '50%',\n    },\n    usageText: {\n        marginRight: global_spacer_sm.value,\n    },\n    value: {\n        display: 'flex',\n        color: global_Color_100.var,\n        fontSize: global_FontSize_4xl.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './ocpReportSummaryDetails.styles';\nconst OcpReportSummaryDetails = ({ label, formatValue, formatOptions, report, reportType = \"charge\" /* charge */, requestLabel, }) => {\n    let value = '----';\n    let requestValue = '----';\n    if (report && report.total) {\n        if (reportType === \"charge\" /* charge */) {\n            const units = report.total.units ? report.total.units : 'USD';\n            value = formatValue(report.total.charge, units, formatOptions);\n        }\n        else {\n            const units = report.total.units ? report.total.units : 'GB';\n            value = formatValue(report.total.usage, units, formatOptions);\n            requestValue = formatValue(report.total.request, units, formatOptions);\n        }\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: css(styles.titleContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                value,\n                React.createElement(\"div\", { className: css(styles.text) },\n                    React.createElement(\"div\", null, label)))),\n        React.createElement(\"div\", { className: css(styles.titleContainer) }, Boolean(reportType !== \"charge\" /* charge */) && (React.createElement(\"div\", { className: css(styles.value, styles.requestedValue) },\n            requestValue,\n            React.createElement(\"div\", { className: css(styles.text) }, requestLabel))))));\n};\nexport { OcpReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './ocpReportSummaryItem.styles';\nconst OcpReportSummaryItem = ({ label, value, totalValue, formatValue, units, formatOptions, }) => {\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = `${formatValue(value, units, formatOptions)} (${percentVal}%)`;\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nOcpReportSummaryItem.defaultProps = {\n    formatValue: v => v,\n};\nexport { OcpReportSummaryItem };\n","import React from 'react';\nimport { getComputedOcpReportItems, } from 'utils/getComputedOcpReportItems';\nclass OcpReportSummaryItems extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedOcpReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => i.id === 'Other');\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { report, children } = this.props;\n        if (!report) {\n            return null;\n        }\n        const items = this.getItems();\n        return React.createElement(\"ul\", null, children({ items }));\n    }\n}\nexport { OcpReportSummaryItems, };\n","import React from 'react';\nimport { TrendChart } from '../trendChart';\nconst OcpReportSummaryTrend = props => (React.createElement(\"div\", { style: { marginBottom: 16 } },\n    React.createElement(TrendChart, Object.assign({ height: 75 }, props))));\nexport { OcpReportSummaryTrend };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_disabled_color_100, global_disabled_color_200, global_FontFamily_sans_serif, global_FontSize_md, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: '#88D080',\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 12,\n        },\n    },\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: ['#A2DA9C', '#88D080', '#6EC664', '#519149', '#3C6C37'],\n    // TBD: No grey scale, yet\n    previousColorScale: [\n        global_disabled_color_200.value,\n        global_disabled_color_100.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = StyleSheet.create({\n    chartContainer: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n    legend: {\n        display: 'inline-block',\n        fontSize: global_FontSize_md.value,\n        marginBottom: global_spacer_lg.value,\n        marginTop: global_spacer_lg.value,\n        minWidth: '175px',\n        width: '50%',\n    },\n});\n","import { Chart, ChartArea, ChartContainer, ChartLegend, ChartTheme, ChartVoronoiContainer, } from '@patternfly/react-charts';\nimport { css } from '@patternfly/react-styles';\nimport { getDateRangeString, getMaxValue, getTooltipContent, getTooltipLabel, } from 'components/commonChart/chartUtils';\nimport VictoryPoint from 'components/victory/victoryPoint';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { VictoryAxis } from 'victory';\nimport { getDateRange } from '../commonChart/chartUtils';\nimport { chartStyles, styles } from './usageChart.styles';\nclass UsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n            const previousLegendData = [];\n            if (previousUsageData) {\n                previousLegendData.push({\n                    name: i18next.t(`chart.used`),\n                    symbol: {\n                        type: 'minus',\n                    },\n                });\n            }\n            if (previousRequestData) {\n                previousLegendData.push({\n                    name: i18next.t(`chart.requested`),\n                    symbol: {\n                        type: 'dash',\n                    },\n                });\n            }\n            const previous = {\n                charts: [\n                    {\n                        data: previousUsageData,\n                        show: true,\n                        style: chartStyles.previousUsageData,\n                    },\n                    {\n                        data: previousRequestData,\n                        show: true,\n                        style: chartStyles.previousRequestData,\n                    },\n                ],\n                legend: {\n                    colorScale: chartStyles.previousColorScale,\n                    data: previousLegendData,\n                    onClick: this.handlePreviousLegendClick,\n                    title: getDateRangeString(previousUsageData, true, true),\n                },\n            };\n            const currentLegendData = [];\n            if (currentUsageData) {\n                currentLegendData.push({\n                    name: i18next.t(`chart.used`),\n                    symbol: {\n                        type: 'minus',\n                    },\n                });\n            }\n            if (currentRequestData) {\n                currentLegendData.push({\n                    name: i18next.t(`chart.requested`),\n                    symbol: {\n                        type: 'dash',\n                    },\n                });\n            }\n            const current = {\n                charts: [\n                    {\n                        data: currentUsageData,\n                        show: true,\n                        style: chartStyles.currentUsageData,\n                    },\n                    {\n                        data: currentRequestData,\n                        show: true,\n                        style: chartStyles.currentRequestData,\n                    },\n                ],\n                legend: {\n                    colorScale: chartStyles.currentColorScale,\n                    data: currentLegendData,\n                    gutter: 55,\n                    onClick: this.handleCurrentLegendClick,\n                    title: getDateRangeString(currentUsageData, true, false),\n                },\n            };\n            this.setState({\n                datum: {\n                    previous,\n                    current,\n                },\n            });\n        };\n        this.handleCurrentLegendClick = props => {\n            const { datum } = this.state;\n            const newDatum = Object.assign({}, datum);\n            if (props.index >= 0 && newDatum.current.charts.length) {\n                newDatum.current.charts[props.index].show = !newDatum.current.charts[props.index].show;\n                this.setState({ datum: newDatum });\n            }\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.handlePreviousLegendClick = props => {\n            const { datum } = this.state;\n            const newDatum = Object.assign({}, datum);\n            if (props.index >= 0 && newDatum.previous.charts.length) {\n                newDatum.previous.charts[props.index].show = !newDatum.previous.charts[props.index].show;\n                this.setState({ datum: newDatum });\n            }\n        };\n        this.getChart = (datum, index) => {\n            if (datum.data && datum.data.length && datum.show) {\n                return (React.createElement(ChartArea, { data: datum.data, key: `usage-chart-${index}`, style: datum.style }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getLegend = (datum, width) => {\n            if (datum && datum.data && datum.data.length) {\n                return (React.createElement(ChartLegend, { colorScale: datum.colorScale, containerComponent: React.createElement(ChartContainer, { responsive: false }), data: datum.data, dataComponent: React.createElement(VictoryPoint, null), events: [\n                        {\n                            target: 'data',\n                            eventHandlers: {\n                                onClick: () => {\n                                    return [\n                                        {\n                                            target: 'data',\n                                            mutation: props => {\n                                                datum.onClick(props);\n                                                return null;\n                                            },\n                                        },\n                                    ];\n                                },\n                            },\n                        },\n                    ], height: 25, orientation: \"horizontal\", style: chartStyles.legend, theme: ChartTheme.light.blue }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTooltipLabel = (datum) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            return getTooltipLabel(datum, getTooltipContent(formatDatumValue), formatDatumOptions, 'date');\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentRequest = currentRequestData\n            ? getMaxValue(currentRequestData)\n            : 0;\n        const maxCurrentUsage = currentUsageData\n            ? getMaxValue(currentUsageData)\n            : 0;\n        const maxPreviousRequest = previousRequestData\n            ? getMaxValue(previousRequestData)\n            : 0;\n        const maxPreviousUsage = previousUsageData\n            ? getMaxValue(previousUsageData)\n            : 0;\n        const maxValue = Math.max(maxCurrentRequest, maxCurrentUsage, maxPreviousRequest, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const currentRequestDate = currentRequestData\n            ? getDate(getDateRange(currentRequestData, true, true)[1])\n            : 0;\n        const currentUsageDate = currentUsageData\n            ? getDate(getDateRange(currentUsageData, true, true)[1])\n            : 0;\n        const previousRequestDate = previousRequestData\n            ? getDate(getDateRange(previousRequestData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousUsageData\n            ? getDate(getDateRange(previousUsageData, true, true)[1])\n            : 0;\n        return currentRequestDate > 0 ||\n            currentUsageDate > 0 ||\n            previousRequestDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    isCurrentLegendVisible() {\n        const { datum } = this.state;\n        let result = false;\n        if (datum && datum.current.legend && datum.current.legend.data) {\n            datum.current.legend.data.forEach(data => {\n                if (data.name && data.name.trim() !== '') {\n                    result = true;\n                    return;\n                }\n            });\n        }\n        return result;\n    }\n    isPreviousLegendVisible() {\n        const { datum } = this.state;\n        let result = false;\n        if (datum && datum.previous.legend && datum.previous.legend.data) {\n            datum.previous.legend.data.forEach(data => {\n                if (data.name && data.name.trim() !== '') {\n                    result = true;\n                    return;\n                }\n            });\n        }\n        return result;\n    }\n    render() {\n        const { height } = this.props;\n        const { datum, width } = this.state;\n        const container = React.createElement(ChartVoronoiContainer, { labels: this.getTooltipLabel });\n        const legendWidth = styles.legend.minWidth > width / 2\n            ? styles.legendContainer.minWidth\n            : width / 2;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        return (React.createElement(\"div\", { className: css(styles.chartContainer), ref: this.containerRef },\n            React.createElement(Chart, { containerComponent: container, domain: domain, height: height, width: width },\n                Boolean(datum && datum.previous) &&\n                    datum.previous.charts.map((chart, index) => {\n                        return this.getChart(chart, index);\n                    }),\n                Boolean(datum && datum.current) &&\n                    datum.current.charts.map((chart, index) => {\n                        return this.getChart(chart, index);\n                    }),\n                React.createElement(VictoryAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                React.createElement(VictoryAxis, { dependentAxis: true, style: chartStyles.yAxis })),\n            Boolean(this.isPreviousLegendVisible()) && (React.createElement(\"div\", { className: css(styles.legend) },\n                Boolean(datum.previous.legend.title) && (React.createElement(\"div\", null, datum.previous.legend.title)),\n                this.getLegend(datum.previous.legend, legendWidth))),\n            Boolean(this.isCurrentLegendVisible()) && (React.createElement(\"div\", { className: css(styles.legend) },\n                Boolean(datum.current.legend.title) && (React.createElement(\"div\", null, datum.current.legend.title)),\n                this.getLegend(datum.current.legend, legendWidth)))));\n    }\n}\nexport { UsageChart };\n","import React from 'react';\nimport { UsageChart } from '../usageChart';\nconst OcpReportSummaryUsage = props => (React.createElement(\"div\", { style: { marginBottom: 16 } },\n    React.createElement(UsageChart, Object.assign({ height: 75 }, props))));\nexport { OcpReportSummaryUsage };\n","import { Button } from '@patternfly/react-core';\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nconst CastedButton = Button;\nconst Link = props => (React.createElement(CastedButton, Object.assign({ component: RouterLink, variant: \"link\" }, props)));\nexport { Link };\n","import { getQuery, parseQuery } from 'api/ocpQuery';\nimport { transformOcpReport } from 'components/commonChart/chartUtils';\nimport { Link } from 'components/link';\nimport { OcpReportSummary, OcpReportSummaryDetails, OcpReportSummaryItem, OcpReportSummaryItems, OcpReportSummaryTrend, OcpReportSummaryUsage, } from 'components/ocpReportSummary';\nimport { Tabs } from 'components/tabs';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardActions, ocpDashboardSelectors, } from 'store/ocpDashboard';\nimport { ocpReportsSelectors } from 'store/ocpReports';\nimport { formatValue } from 'utils/formatValue';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nclass OcpDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.buildDetailsLink = () => {\n            const { currentQuery } = this.props;\n            const groupBy = parseQuery(currentQuery).group_by;\n            return `/ocp?${getQuery({\n                group_by: groupBy,\n                order_by: { charge: 'desc' },\n            })}`;\n        };\n        this.renderTab = (tabData) => {\n            const { reportType, tabs, topItems } = this.props;\n            const currentTab = tabData.id;\n            return (React.createElement(OcpReportSummaryItems, { idKey: getIdKeyForTab(currentTab), report: tabs }, ({ items }) => items.map(tabItem => (React.createElement(OcpReportSummaryItem, { key: tabItem.id, formatOptions: topItems.formatOptions, formatValue: formatValue, label: tabItem.label.toString(), totalValue: reportType === \"charge\" /* charge */\n                    ? tabs.total.charge\n                    : tabs.total.usage, units: tabItem.units, value: reportType === \"charge\" /* charge */\n                    ? tabItem.charge\n                    : tabItem.usage })))));\n        };\n        this.handleTabChange = (tabId) => {\n            this.props.updateTab(this.props.id, tabId);\n        };\n    }\n    componentDidMount() {\n        const { fetchReports, widgetId } = this.props;\n        fetchReports(widgetId);\n    }\n    render() {\n        const { t, titleKey, trend, details, current, previous, availableTabs, currentTab, reportType, status, } = this.props;\n        const today = new Date();\n        const month = getMonth(today);\n        const endDate = formatDate(today, 'Do');\n        const startDate = formatDate(startOfMonth(today), 'Do');\n        const title = t(titleKey, { endDate, month, startDate });\n        const subTitle = t('ocp_dashboard.widget_subtitle', {\n            endDate,\n            month,\n            startDate,\n            count: getDate(today),\n        });\n        const detailLabel = t(details.labelKey);\n        const requestLabel = t(details.requestLabelKey);\n        const detailsLink = reportType === \"charge\" /* charge */ && (React.createElement(Link, { to: this.buildDetailsLink() }, this.getDetailsLinkTitle(currentTab)));\n        const reportItem = reportType === \"charge\" /* charge */ ? 'charge' : 'usage';\n        const currentUsageData = transformOcpReport(current, trend.type, 'date', reportItem);\n        const previousUsageData = transformOcpReport(previous, trend.type, 'date', reportItem);\n        const currentRequestData = reportType !== \"charge\" /* charge */\n            ? transformOcpReport(current, trend.type, 'date', 'request')\n            : undefined;\n        const previousRequestData = reportType !== \"charge\" /* charge */\n            ? transformOcpReport(previous, trend.type, 'date', 'request')\n            : undefined;\n        return (React.createElement(OcpReportSummary, { title: title, subTitle: subTitle, detailsLink: detailsLink, status: status },\n            React.createElement(OcpReportSummaryDetails, { report: current, reportType: reportType, formatValue: formatValue, label: detailLabel, formatOptions: details.formatOptions, requestLabel: requestLabel }),\n            Boolean(reportType === \"charge\" /* charge */) ? (React.createElement(OcpReportSummaryTrend, { title: t(trend.titleKey), currentData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, previousData: previousUsageData })) : (React.createElement(OcpReportSummaryUsage, { currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, previousRequestData: previousRequestData, previousUsageData: previousUsageData })),\n            React.createElement(Tabs, { tabs: availableTabs.map(tab => ({\n                    id: tab,\n                    label: this.getTabTitle(tab),\n                    content: this.renderTab,\n                })), selected: currentTab, onChange: this.handleTabChange })));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, current: ocpReportsSelectors.selectReport(state, widget.reportType, queries.current), previous: ocpReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabs: ocpReportsSelectors.selectReport(state, widget.reportType, queries.tabs), status: ocpReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpDashboardActions.fetchWidgetReports,\n    updateTab: ocpDashboardActions.changeWidgetTab,\n};\nconst OcpDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(OcpDashboardWidgetBase));\nexport { OcpDashboardWidget, OcpDashboardWidgetBase };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardSelectors } from 'store/ocpDashboard';\nimport { uiActions } from 'store/ui';\nimport { OcpDashboardWidget } from './ocpDashboardWidget';\nconst OcpDashboardBase = ({ t, openProvidersModal, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        return (React.createElement(GridItem, { xl: 4, lg: 6, key: widgetId },\n            React.createElement(OcpDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        widgets: ocpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpDashboard = translate()(connect(mapStateToProps, {\n    openProvidersModal: uiActions.openProvidersModal,\n})(OcpDashboardBase));\nexport default OcpDashboard;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200 } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    card: {\n        height: '100vh',\n        marginTop: '150px',\n    },\n    cardBody: {\n        textAlign: 'center',\n    },\n    primaryAction: {\n        marginTop: '60px',\n    },\n    subtitle: {\n        color: global_Color_200.var,\n        marginTop: '30px',\n    },\n    title: {\n        marginTop: '30px',\n    },\n});\n","import { Grid, GridItem, Title } from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './emptyState.styles';\nconst EmptyState = ({ primaryAction, subTitle, title, }) => (React.createElement(\"div\", { className: css(styles.card) },\n    React.createElement(\"div\", { className: css(styles.cardBody) },\n        React.createElement(Grid, { gutter: \"lg\" },\n            React.createElement(GridItem, { md: 1, lg: 2 }),\n            React.createElement(GridItem, { md: 10, lg: 8 },\n                React.createElement(DollarSignIcon, { size: \"xl\" }),\n                React.createElement(Title, { className: css(styles.title), size: \"lg\" }, title),\n                Boolean(subTitle) && (React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n                Boolean(primaryAction) && (React.createElement(\"div\", { className: css(styles.primaryAction) }, primaryAction))),\n            React.createElement(GridItem, { md: 1, lg: 2 })))));\nexport { EmptyState };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_spacer_lg } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    card: {\n        height: '75vh',\n        paddingLeft: global_spacer_lg.value,\n        paddingRight: global_spacer_lg.value,\n        marginTop: '150px',\n    },\n    cardBody: {\n        textAlign: 'center',\n    },\n    subtitle: {\n        color: global_Color_200.var,\n        marginTop: '30px',\n    },\n    title: {\n        marginTop: '30px',\n    },\n});\n","import { Title } from '@patternfly/react-core';\nimport { BanIcon, ErrorCircleOIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './loadingState.styles';\nconst ErrorState = ({ isUnauthorized, subTitle, title, }) => (React.createElement(\"div\", { className: css(styles.card) },\n    React.createElement(\"div\", { className: css(styles.cardBody) },\n        Boolean(isUnauthorized) ? (React.createElement(BanIcon, { size: \"xl\" })) : (React.createElement(ErrorCircleOIcon, { size: \"xl\" })),\n        React.createElement(Title, { className: css(styles.title), size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle))));\nexport { ErrorState };\n","import { Title } from '@patternfly/react-core';\nimport { BinocularsIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './loadingState.styles';\nconst LoadingState = ({ subTitle, title }) => (React.createElement(\"div\", { className: css(styles.card) },\n    React.createElement(\"div\", { className: css(styles.cardBody) },\n        React.createElement(BinocularsIcon, { size: \"xl\" }),\n        React.createElement(Title, { className: css(styles.title), size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle))));\nexport { LoadingState };\n","import { Button, ButtonType, ButtonVariant, Grid, GridItem, Title, TitleSize, } from '@patternfly/react-core';\nimport { Tabs } from 'components/tabs';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { providersSelectors } from 'store/providers';\nimport { uiActions } from 'store/ui';\nimport { getTestProps, testIds } from 'testIds';\nimport AwsDashboard from '../awsDashboard';\nimport OcpDashboard from '../ocpDashboard';\nimport { EmptyState } from './emptyState';\nimport { ErrorState } from './errorState';\nimport { LoadingState } from './loadingState';\nclass OverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            currentTab: \"aws\" /* aws */,\n        };\n        this.getAddSourceButton = () => {\n            const { openProvidersModal, t } = this.props;\n            return (React.createElement(Button, Object.assign({}, getTestProps(testIds.providers.add_btn), { onClick: openProvidersModal, type: ButtonType.submit, variant: ButtonVariant.secondary }), t('providers.add_source')));\n        };\n        this.getEmptyState = () => {\n            const { t } = this.props;\n            return (React.createElement(Grid, { gutter: \"lg\" },\n                React.createElement(GridItem, null,\n                    React.createElement(EmptyState, { primaryAction: this.getAddSourceButton(), title: t('overview.empty_state_title'), subTitle: t('overview.empty_state_desc') }))));\n        };\n        this.getErrorState = () => {\n            const { providersError, t } = this.props;\n            let isUnauthorized = false;\n            let title = t('overview.error_unexpected_title');\n            let subTitle = t('overview.error_unexpected_desc');\n            if (providersError &&\n                providersError.response &&\n                providersError.response.status === 401) {\n                isUnauthorized = true;\n                title = t('overview.error_unauthorized_title');\n                subTitle = t('overview.error_unauthorized_desc');\n            }\n            return (React.createElement(Grid, { gutter: \"lg\" },\n                React.createElement(GridItem, null,\n                    React.createElement(ErrorState, { isUnauthorized: isUnauthorized, title: title, subTitle: subTitle }))));\n        };\n        this.getLoadingState = () => {\n            const { t } = this.props;\n            return (React.createElement(Grid, { gutter: \"lg\" },\n                React.createElement(GridItem, null,\n                    React.createElement(LoadingState, { title: t('overview.loading_state_title'), subTitle: t('overview.loading_state_desc') }))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            if (tab === \"aws\" /* aws */) {\n                return t('overview.aws');\n            }\n            else if (tab === \"ocp\" /* ocp */) {\n                return t('overview.ocp');\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            const { currentTab } = this.state;\n            return (React.createElement(Tabs, { isShrink: Boolean(true), tabs: availableTabs.map(tab => ({\n                    id: tab,\n                    label: this.getTabTitle(tab),\n                    content: this.renderTab,\n                })), selected: currentTab, onChange: this.handleTabChange }));\n        };\n        this.handleTabChange = (tabId) => {\n            this.setState({ currentTab: tabId });\n        };\n        this.renderTab = (tabData) => {\n            const currentTab = tabData.id;\n            if (currentTab === \"aws\" /* aws */) {\n                return React.createElement(AwsDashboard, null);\n            }\n            else {\n                return React.createElement(OcpDashboard, null);\n            }\n        };\n    }\n    render() {\n        const { providers, providersError, providersFetchStatus, t } = this.props;\n        return (React.createElement(\"div\", { className: \"pf-l-page__main-section pf-c-page__main-section pf-u-pb-xl pf-u-px-xl\" },\n            React.createElement(\"header\", { className: \"pf-u-display-flex pf-u-justify-content-space-between pf-u-align-items-center\" },\n                React.createElement(Title, { size: TitleSize.lg }, t('overview.title')),\n                this.getAddSourceButton()),\n            React.createElement(\"div\", null, Boolean(providersError)\n                ? this.getErrorState()\n                : Boolean(providers &&\n                    providers.count > 0 &&\n                    providersFetchStatus === 2 /* complete */)\n                    ? this.getTabs()\n                    : Boolean(providers &&\n                        providers.count === 0 &&\n                        providersFetchStatus === 2 /* complete */)\n                        ? this.getEmptyState()\n                        : this.getLoadingState())));\n    }\n}\nconst mapStateToProps = createMapStateToProps(state => {\n    const availableTabs = [];\n    const providers = providersSelectors.selectProviders(state);\n    if (providers && providers.results) {\n        let showAWSTab = false;\n        let showOCPTab = false;\n        for (const result of providers.results) {\n            if (result.type === 'AWS') {\n                showAWSTab = true;\n            }\n            else if (result.type === 'OCP') {\n                showOCPTab = true;\n            }\n        }\n        if (showAWSTab) {\n            availableTabs.push(\"aws\" /* aws */);\n        }\n        if (showOCPTab) {\n            availableTabs.push(\"ocp\" /* ocp */);\n        }\n    }\n    return {\n        availableTabs,\n        providers,\n        providersError: providersSelectors.selectProvidersError(state),\n        providersFetchStatus: providersSelectors.selectProvidersFetchStatus(state),\n    };\n});\nconst Overview = translate()(connect(mapStateToProps, {\n    openProvidersModal: uiActions.openProvidersModal,\n})(OverviewBase));\nexport default Overview;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './awsReportSummary.styles';\nconst AwsReportSummaryBase = ({ title, subTitle, detailsLink, children, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? `${t('loading')}...` : children),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst AwsReportSummary = translate()(AwsReportSummaryBase);\nexport { AwsReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryDetails: {\n        marginBottom: global_spacer_md.value,\n        display: 'flex',\n        alignItems: 'flex-end',\n    },\n    value: {\n        color: global_Color_100.var,\n        marginRight: global_spacer_sm.value,\n        fontSize: global_FontSize_4xl.value,\n    },\n    text: {\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './awsReportSummaryDetails.styles';\nconst AwsReportSummaryDetails = ({ label, formatValue, formatOptions, report, }) => {\n    let value = '----';\n    if (report) {\n        value = report.total\n            ? formatValue(report.total.value, report.total.units, formatOptions)\n            : 0;\n    }\n    return (React.createElement(\"div\", { className: css(styles.reportSummaryDetails) },\n        React.createElement(\"div\", { className: css(styles.value) }, value),\n        React.createElement(\"div\", { className: css(styles.text) },\n            React.createElement(\"div\", null, label))));\n};\nexport { AwsReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './awsReportSummaryItem.styles';\nconst AwsReportSummaryItem = ({ label, value, totalValue, formatValue, units, formatOptions, }) => {\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = `${formatValue(value, units, formatOptions)} (${percentVal}%)`;\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nAwsReportSummaryItem.defaultProps = {\n    formatValue: v => v,\n};\nexport { AwsReportSummaryItem };\n","import React from 'react';\nimport { getComputedAwsReportItems, } from 'utils/getComputedAwsReportItems';\nclass AwsReportSummaryItems extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedAwsReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => i.id === 'Other');\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { report, children } = this.props;\n        if (!report) {\n            return null;\n        }\n        const items = this.getItems();\n        return React.createElement(\"ul\", null, children({ items }));\n    }\n}\nexport { AwsReportSummaryItems, };\n","import React from 'react';\nimport { TrendChart } from '../trendChart';\nconst AwsReportSummaryTrend = props => (React.createElement(\"div\", { style: { marginBottom: 16 } },\n    React.createElement(TrendChart, Object.assign({ height: 75 }, props))));\nexport { AwsReportSummaryTrend };\n","import { getQuery, parseQuery } from 'api/awsQuery';\nimport { AwsReportSummary, AwsReportSummaryDetails, AwsReportSummaryItem, AwsReportSummaryItems, AwsReportSummaryTrend, } from 'components/awsReportSummary';\nimport { transformAwsReport } from 'components/commonChart/chartUtils';\nimport { Link } from 'components/link';\nimport { Tabs } from 'components/tabs';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { awsDashboardActions, awsDashboardSelectors, } from 'store/awsDashboard';\nimport { awsReportsSelectors } from 'store/awsReports';\nimport { createMapStateToProps } from 'store/common';\nimport { formatValue } from 'utils/formatValue';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nclass AwsDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.buildDetailsLink = () => {\n            const { currentQuery } = this.props;\n            const groupBy = parseQuery(currentQuery).group_by;\n            return `/aws?${getQuery({\n                group_by: groupBy,\n                order_by: { total: 'desc' },\n            })}`;\n        };\n        this.renderTab = (tabData) => {\n            const { tabs, topItems } = this.props;\n            const currentTab = tabData.id;\n            return (React.createElement(AwsReportSummaryItems, { idKey: getIdKeyForTab(currentTab), report: tabs }, ({ items }) => items.map(tabItem => (React.createElement(AwsReportSummaryItem, { key: tabItem.id, formatOptions: topItems.formatOptions, formatValue: formatValue, label: tabItem.label.toString(), totalValue: tabs.total.value, units: tabItem.units, value: tabItem.total })))));\n        };\n        this.handleTabChange = (tabId) => {\n            this.props.updateTab(this.props.id, tabId);\n        };\n    }\n    componentDidMount() {\n        const { fetchReports, widgetId } = this.props;\n        fetchReports(widgetId);\n    }\n    render() {\n        const { t, titleKey, trend, details, current, previous, availableTabs, currentTab, reportType, status, } = this.props;\n        const today = new Date();\n        const month = getMonth(today);\n        const endDate = formatDate(today, 'Do');\n        const startDate = formatDate(startOfMonth(today), 'Do');\n        const title = t(titleKey, { endDate, month, startDate });\n        const subTitle = t('aws_dashboard.widget_subtitle', {\n            endDate,\n            month,\n            startDate,\n            count: getDate(today),\n        });\n        const detailLabel = t(details.labelKey, {\n            context: details.labelKeyContext,\n        });\n        const detailsLink = reportType === \"cost\" /* cost */ && (React.createElement(Link, { to: this.buildDetailsLink() }, this.getDetailsLinkTitle(currentTab)));\n        const trendTitle = t(trend.titleKey);\n        const currentData = transformAwsReport(current, trend.type);\n        const previousData = transformAwsReport(previous, trend.type);\n        return (React.createElement(AwsReportSummary, { title: title, subTitle: subTitle, detailsLink: detailsLink, status: status },\n            React.createElement(AwsReportSummaryDetails, { report: current, formatValue: formatValue, label: detailLabel, formatOptions: details.formatOptions }),\n            React.createElement(AwsReportSummaryTrend, { title: trendTitle, currentData: currentData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, previousData: previousData }),\n            React.createElement(Tabs, { tabs: availableTabs.map(tab => ({\n                    id: tab,\n                    label: this.getTabTitle(tab),\n                    content: this.renderTab,\n                })), selected: currentTab, onChange: this.handleTabChange })));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, current: awsReportsSelectors.selectReport(state, widget.reportType, queries.current), previous: awsReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabs: awsReportsSelectors.selectReport(state, widget.reportType, queries.tabs), status: awsReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current) });\n});\nconst mapDispatchToProps = {\n    fetchReports: awsDashboardActions.fetchWidgetReports,\n    updateTab: awsDashboardActions.changeWidgetTab,\n};\nconst AwsDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(AwsDashboardWidgetBase));\nexport { AwsDashboardWidget, AwsDashboardWidgetBase };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { awsDashboardSelectors } from 'store/awsDashboard';\nimport { createMapStateToProps } from 'store/common';\nimport { uiActions } from 'store/ui';\nimport { AwsDashboardWidget } from './awsDashboardWidget';\nconst AwsDashboardBase = ({ t, openProvidersModal, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        return (React.createElement(GridItem, { xl: 4, lg: 6, key: widgetId },\n            React.createElement(AwsDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        widgets: awsDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsDashboard = translate()(connect(mapStateToProps, {\n    openProvidersModal: uiActions.openProvidersModal,\n})(AwsDashboardBase));\nexport default AwsDashboard;\n","import { hot } from 'react-hot-loader';\nimport OcpDashboard from './ocpDashboard';\nexport default hot(module)(OcpDashboard);\n","import { hot } from 'react-hot-loader';\nimport AwsDashboard from './awsDashboard';\nexport default hot(module)(AwsDashboard);\n","import { hot } from 'react-hot-loader';\nimport Overview from './overview';\nexport default hot(module)(Overview);\n"],"sourceRoot":""}