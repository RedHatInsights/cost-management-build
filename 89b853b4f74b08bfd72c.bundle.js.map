{"version":3,"sources":["webpack:///./src/components/commonChart/chartUtils.ts","webpack:///./src/utils/formatValue.ts","webpack:///./src/testIds.ts","webpack:///./src/utils/getComputedOcpReportItems.ts","webpack:///./src/utils/getComputedAwsReportItems.ts","webpack:///./src/utils/sort.ts","webpack:///./src/components/trendChart/trendChart.styles.ts","webpack:///./src/components/trendChart/trendChart.tsx","webpack:///./src/components/state/errorState/errorState.styles.ts","webpack:///./src/components/state/errorState/errorState.tsx","webpack:///./src/components/state/loadingState/loadingState.styles.ts","webpack:///./src/components/state/loadingState/loadingState.tsx","webpack:///./src/components/state/emptyState/emptyState.styles.ts","webpack:///./src/components/state/emptyState/emptyState.tsx","webpack:///./src/components/state/noProvidersState/noProvidersState.tsx","webpack:///./src/components/victory/path-helpers.ts","webpack:///./src/components/victory/victoryPoint.tsx","webpack:///./src/components/awsReportSummary/awsReportSummary.styles.ts","webpack:///./src/components/awsReportSummary/awsReportSummary.tsx","webpack:///./src/components/awsReportSummary/awsReportSummaryDetails.styles.ts","webpack:///./src/components/awsReportSummary/awsReportSummaryDetails.tsx","webpack:///./src/components/awsReportSummary/awsReportSummaryItem.styles.ts","webpack:///./src/components/awsReportSummary/awsReportSummaryItem.tsx","webpack:///./src/components/awsReportSummary/awsReportSummaryItems.tsx","webpack:///./src/components/awsReportSummary/awsReportSummaryTrend.tsx","webpack:///./src/components/tabs/tabContent.tsx","webpack:///./src/components/tabs/tabItem.styles.ts","webpack:///./src/components/tabs/tabItem.tsx","webpack:///./src/components/tabs/tabNavigation.styles.ts","webpack:///./src/components/tabs/tabNavigation.tsx","webpack:///./src/components/tabs/tabs.tsx","webpack:///./src/components/ocpReportSummary/ocpReportSummary.styles.ts","webpack:///./src/components/ocpReportSummary/ocpReportSummary.tsx","webpack:///./src/components/ocpReportSummary/ocpReportSummaryDetails.styles.ts","webpack:///./src/components/ocpReportSummary/ocpReportSummaryDetails.tsx","webpack:///./src/components/ocpReportSummary/ocpReportSummaryItem.styles.ts","webpack:///./src/components/ocpReportSummary/ocpReportSummaryItem.tsx","webpack:///./src/components/ocpReportSummary/ocpReportSummaryItems.tsx","webpack:///./src/components/ocpReportSummary/ocpReportSummaryTrend.tsx","webpack:///./src/components/usageChart/usageChart.styles.ts","webpack:///./src/components/usageChart/usageChart.tsx","webpack:///./src/components/ocpReportSummary/ocpReportSummaryUsage.tsx","webpack:///./node_modules/react-router-dom/es/Link.js","webpack:///./src/components/link/link.tsx","webpack:///./node_modules/date-fns/get_month/index.js","webpack:///./src/pages/awsDashboard/awsDashboardWidget.tsx","webpack:///./src/pages/awsDashboard/awsDashboard.tsx","webpack:///./src/pages/ocpDashboard/ocpDashboardWidget.tsx","webpack:///./src/pages/ocpDashboard/ocpDashboard.tsx","webpack:///./src/pages/ocpDashboard/index.ts","webpack:///./src/pages/awsDashboard/index.ts","webpack:///./src/pages/overview/overview.tsx","webpack:///./src/pages/overview/index.ts"],"names":["transformAwsReport","report","type","key","items","idKey","sortKey","sortDirection","computedItems","Object","utils_getComputedAwsReportItems__WEBPACK_IMPORTED_MODULE_6__","map","i","createDatum","total","reduce","acc","d","prevValue","length","y","transformOcpReport","reportItem","utils_getComputedOcpReportItems__WEBPACK_IMPORTED_MODULE_7__","value","computedItem","n","x","date_fns_get_date__WEBPACK_IMPORTED_MODULE_2___default","id","label","Number","parseFloat","toFixed","isInt","name","units","getDateRange","datums","firstOfMonth","lastOfMonth","start","end","today","Date","date_fns_start_of_month__WEBPACK_IMPORTED_MODULE_3___default","getDatumDateRange","setDate","lastDate","date_fns_end_of_month__WEBPACK_IMPORTED_MODULE_0___default","getDate","getDateRangeString","current","monthName","date_fns_format__WEBPACK_IMPORTED_MODULE_1___default","startDate","endDate","i18next__WEBPACK_IMPORTED_MODULE_4__","t","date","getDateString","month","getMaxValue","max","forEach","datum","getTooltipContent","formatValue","unit","options","lookup","utils_formatValue__WEBPACK_IMPORTED_MODULE_5__","getTooltipLabel","formatOptions","toString","day","unitLookupKey","split","toLowerCase","fValue","formatCurrency","formatStorage","unknownTypeFormatter","_unit","fractionDigits","toLocaleString","style","currency","minimumFractionDigits","maximumFractionDigits","getTestProps","data-testid","testIds","details","historical_data_btn","tag_lnk","show_more_btn","export","cancel_btn","submit_btn","login","alert","form","username_input","password_input","submit","masthead","username","sidebarToggle","logout","providers","add_btn","bucket_input","empty_state_add_btn","name_input","resource_name_input","cluster_id_input","type_input","sidebar","nav","link","backdrop","getComputedOcpReportItems","labelKey","_sort__WEBPACK_IMPORTED_MODULE_0__","getUnsortedComputedOcpReportItems","direction","itemMap","visitDataPoint","dataPoint","values","capacity","charge","cluster_alias","limit","request","usage","assign","app","deltaPercent","delta_percent","deltaValue","delta_value","Array","data","getIdKeyForGroupBy","groupBy","project","cluster","node","getComputedAwsReportItems","getUnsortedComputedAwsReportItems","account_alias","account","instance_type","region","service","getValueForItem","item","sort","array","a","b","aVal","bVal","__webpack_require__","__webpack_exports__","chartStyles","colorScale","esm","legend","labels","fontFamily","fontSize","minWidth","previousMonth","fill","stroke","currentMonth","yAxis","axisLabel","padding","grid","ticks","tickLabels","xAxis","styles","StyleSheet","create","chartContainer",":not(foo) svg","overflow","display","marginBottom","marginTop","trendChart_TrendChart","react_default","Component","[object Object]","super","arguments","this","containerRef","createRef","state","width","initDatum","currentData","previousData","title","props","legendData","push","chartUtils","symbol","cost","charts","show","onClick","handleCostLegendClick","setState","newDatum","index","handleResize","clientWidth","getChart","createElement","ChartArea","getLegend","ChartLegend","containerComponent","ChartContainer","responsive","events","target","eventHandlers","mutation","gutter","height","orientation","theme","ChartTheme","light","blue","formatDatumValue","formatDatumOptions","setTimeout","window","addEventListener","prevProps","removeEventListener","domain","maxCurrent","maxPrevious","maxValue","Math","ceil","previousDate","get_date_default","currentDate","result","trim","container","ChartVoronoiContainer","legendWidth","getDomain","getEndDate","midDate","floor","className","ref","Chart","Boolean","chart","victory_axis","tickValues","dependentAxis","isLegendVisible","card","paddingLeft","paddingRight","cardBody","textAlign","subtitle","color","var","ErrorState","es","error","isUnauthorized","subTitle","response","status","ban_icon","size","error_circle_o_icon","Title","LoadingState","isBinocularsIcon","binoculars_icon","primaryAction","EmptyState","isDollarSignIcon","Grid","GridItem","md","lg","dollar_sign_icon","mapStateToProps","common","NoProvidersState","react_redux_es","openProvidersModal","ui","getAddSourceButton","Button","variant","secondary","path_helpers","baseSize","lineHeight","x0","y1","distance","victoryPoint_VictoryPoint","point","propTypes","prop_types_default","oneOfType","oneOf","func","reportSummary","AwsReportSummary","detailsLink","children","Card","CardHeader","CardBody","CardFooter","awsReportSummaryDetails_styles_styles","reportSummaryDetails","alignItems","marginRight","text","paddingBottom","AwsReportSummaryDetails","awsReportSummaryItem_styles_styles","reportSummaryItem",":not(:last-child)","test","AwsReportSummaryItem","totalValue","percentVal","percentLabel","Progress","sm","defaultProps","v","awsReportSummaryItems_AwsReportSummaryItems","nextProps","otherIndex","findIndex","slice","getItems","AwsReportSummaryTrend","trendChart","TabContent","content","role","tabItem","position","flexGrow","cursor","tabItemShrink","flexShrink","selected","backgroundImage","tabItem_TabItem","handleClick","onSelect","isSelected","isShrink","aria-selected","tabIndex","tabNavigation_styles_styles","tabNavigation","tabNavigation_TabNavigation","handleKeyDown","event","includes","tabs","onChange","modifier","newIndex","onKeyDown","tab","Tabs","selectedTab","find","OcpReportSummary","ocpReportSummaryDetails_styles_styles","requestedValue","marginLeft","titleContainer","usageText","OcpReportSummaryDetails","reportType","requestLabel","requestValue","Fragment","ocpReportSummaryItem_styles_styles","OcpReportSummaryItem","ocpReportSummaryItems_OcpReportSummaryItems","OcpReportSummaryTrend","currentRequestData","strokeDasharray","currentUsageData","previousRequestData","previousUsageData","currentColorScale","previousColorScale","usageChart_styles_styles","usageChart_UsageChart","previousLegendData","dist_es","previous","handlePreviousLegendClick","currentLegendData","handleCurrentLegendClick","dataComponent","victoryPoint","maxCurrentRequest","maxCurrentUsage","maxPreviousRequest","maxPreviousUsage","currentRequestDate","currentUsageDate","previousRequestDate","previousUsageDate","isPreviousLegendVisible","isCurrentLegendVisible","OcpReportSummaryUsage","_extends","source","prototype","hasOwnProperty","call","_possibleConstructorReturn","self","ReferenceError","isModifiedEvent","metaKey","altKey","ctrlKey","shiftKey","Link_Link","_React$Component","Link","_temp","_this","instance","Constructor","TypeError","_classCallCheck","_len","args","_key","apply","concat","defaultPrevented","button","preventDefault","history","context","router","_this$props","replace","to","subClass","superClass","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_inherits","render","_props","innerRef","obj","keys","indexOf","_objectWithoutProperties","browser_default","undefined","location","href","createHref","string","bool","object","isRequired","contextTypes","shape","es_Link","CastedButton","link_Link","component","parse","module","exports","dirtyDate","getMonth","getIdKeyForTab","widgetId","widget","awsDashboard","selectWidget","queries","selectWidgetQueries","currentQuery","previousQuery","tabsQuery","awsReports","selectReport","selectReportFetchStatus","mapDispatchToProps","fetchReports","fetchWidgetReports","updateTab","changeWidgetTab","AwsDashboardWidget","getTabTitle","getDetailsLinkTitle","buildDetailsLink","awsQuery","group_by","order_by","renderTab","tabData","topItems","currentTab","awsReportSummary","handleTabChange","tabId","titleKey","trend","availableTabs","get_month_default","format_default","start_of_month_default","count","detailLabel","labelKeyContext","components_link","trendTitle","components_tabs","awsDashboard_mapStateToProps","widgets","selectCurrentWidgets","AwsDashboard","xl","ocpDashboard","ocpReports","OcpDashboardWidget","ocpQuery","ocpReportSummary","requestLabelKey","ocpDashboard_mapStateToProps","OcpDashboard","react_hot_loader__WEBPACK_IMPORTED_MODULE_0__","_ocpDashboard__WEBPACK_IMPORTED_MODULE_1__","_awsDashboard__WEBPACK_IMPORTED_MODULE_1__","store_common__WEBPACK_IMPORTED_MODULE_10__","awsProvidersQueryString","api_providersQuery__WEBPACK_IMPORTED_MODULE_2__","store_providers__WEBPACK_IMPORTED_MODULE_11__","awsProviders","selectProviders","awsProvidersError","selectProvidersError","awsProvidersFetchStatus","selectProvidersFetchStatus","ocpProvidersQueryString","ocpProviders","ocpProvidersError","ocpProvidersFetchStatus","Overview","react_i18next__WEBPACK_IMPORTED_MODULE_8__","react_redux__WEBPACK_IMPORTED_MODULE_9__","store_ui__WEBPACK_IMPORTED_MODULE_12__","react__WEBPACK_IMPORTED_MODULE_7___default","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_0__","testIds__WEBPACK_IMPORTED_MODULE_13__","getTabs","meta","components_tabs__WEBPACK_IMPORTED_MODULE_6__","_awsDashboard__WEBPACK_IMPORTED_MODULE_14__","_ocpDashboard__WEBPACK_IMPORTED_MODULE_15__","hasAwsMeta","ocpAwsMeta","hasProviders","noProviders","_patternfly_react_core__WEBPACK_IMPORTED_MODULE_1__","page-type","components_state_errorState_errorState__WEBPACK_IMPORTED_MODULE_3__","components_state_noProvidersState_noProvidersState__WEBPACK_IMPORTED_MODULE_5__","components_state_loadingState_loadingState__WEBPACK_IMPORTED_MODULE_4__","_overview__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"89b853b4f74b08bfd72c.bundle.js","sourcesContent":["import endOfMonth from 'date-fns/end_of_month';\nimport format from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport startOfMonth from 'date-fns/start_of_month';\nimport i18next from 'i18next';\nimport { unitLookupKey, } from 'utils/formatValue';\nimport { getComputedAwsReportItems, } from 'utils/getComputedAwsReportItems';\nimport { getComputedOcpReportItems, } from 'utils/getComputedOcpReportItems';\nexport function transformAwsReport(report, type = 1 /* daily */, key = 'date') {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        report,\n        idKey: key,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedAwsReportItems(items);\n    if (type === 1 /* daily */) {\n        return computedItems.map(i => createDatum(i.total, i, key));\n    }\n    if (type === 2 /* monthly */) {\n        return computedItems.map(i => createDatum(i.total, i, key));\n    }\n    return computedItems.reduce((acc, d) => {\n        const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n        return [...acc, createDatum(prevValue + d.total, d, key)];\n    }, []);\n}\nexport function transformOcpReport(report, type = 1 /* daily */, key = 'date', reportItem = 'charge') {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        report,\n        idKey: key,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedOcpReportItems(items);\n    if (type === 1 /* daily */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    if (type === 2 /* monthly */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    return computedItems.reduce((acc, d) => {\n        const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n        return [...acc, createDatum(prevValue + d[reportItem], d, key)];\n    }, []);\n}\nexport function createDatum(value, computedItem, idKey = 'date') {\n    const xVal = idKey === 'date' ? getDate(computedItem.id) : computedItem.label;\n    const yVal = isFloat(value)\n        ? parseFloat(value.toFixed(2))\n        : isInt(value)\n            ? value\n            : 0;\n    return {\n        x: xVal,\n        y: yVal,\n        key: computedItem.id,\n        name: computedItem.id,\n        units: computedItem.units,\n    };\n}\nexport function getDatumDateRange(datums) {\n    if (!(datums && datums.length)) {\n        const today = new Date();\n        const firstOfMonth = startOfMonth(today);\n        return [firstOfMonth, today];\n    }\n    const start = new Date(datums[0].key + 'T00:00:00');\n    const end = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    return [start, end];\n}\nexport function getDateRange(datums, firstOfMonth = true, lastOfMonth = false) {\n    const [start, end] = getDatumDateRange(datums);\n    // Show the date range we are trying to cover (i.e., days 1-30/31)\n    if (firstOfMonth && start.setDate) {\n        start.setDate(1);\n    }\n    if (lastOfMonth && start.setDate) {\n        const lastDate = endOfMonth(start).getDate();\n        end.setDate(lastDate);\n    }\n    return [start, end];\n}\nexport function getDateRangeString(datums, firstOfMonth = false, lastOfMonth = false, current = false) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth);\n    const monthName = format(start, 'MMM');\n    const startDate = getDate(start);\n    const endDate = getDate(end);\n    if (current) {\n        return i18next.t(`date.range_current`, {\n            date: getDateString(startDate),\n            month: startDate !== endDate ? monthName : '',\n        });\n    }\n    return i18next.t(`date.range_full`, {\n        endDate: getDateString(endDate),\n        startDate: getDateString(startDate),\n        month: startDate !== endDate ? monthName : '',\n    });\n}\nexport function getMaxValue(datums) {\n    let max = 0;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            if (datum.y > max) {\n                max = datum.y;\n            }\n        });\n    }\n    return max;\n}\nexport function getTooltipContent(formatValue) {\n    return function labelFormatter(value, unit = null, options = {}) {\n        const lookup = unitLookupKey(unit);\n        switch (lookup) {\n            case 'hrs':\n            case 'gb':\n                return i18next.t(`units.${lookup}`, {\n                    value: `${formatValue(value, unit, options)}`,\n                });\n            default:\n                return `${formatValue(value, unit, options)}`;\n        }\n    };\n}\nexport function getTooltipLabel(datum, formatValue, formatOptions, idKey = 'date') {\n    if (!datum.key) {\n        return '';\n    }\n    if (idKey === 'date') {\n        const date = format(datum.key, 'MMM D YYYY');\n        return `${date}: ${formatValue(datum.y, datum.units, formatOptions)}`;\n    }\n    return datum.key.toString();\n}\nfunction isInt(n) {\n    return Number(n) === n && n % 1 === 0;\n}\nfunction isFloat(n) {\n    return Number(n) === n && n % 1 !== 0;\n}\nfunction getDateString(date) {\n    const day = date % 10;\n    if (day === 1) {\n        return i18next.t(`date.first`, { date });\n    }\n    else if (day === 2) {\n        return i18next.t(`date.second`, { date });\n    }\n    else if (day === 3) {\n        return i18next.t(`date.third`, { date });\n    }\n    return i18next.t(`date.tenth`, { date });\n}\n","export const unitLookupKey = unit => unit ? unit.split('-')[0].toLowerCase() : '';\nexport const formatValue = (value, unit, options = {}) => {\n    const lookup = unitLookupKey(unit);\n    const fValue = value || 0;\n    switch (lookup) {\n        case 'usd':\n            return formatCurrency(fValue, lookup, options);\n        case 'gb':\n            return formatStorage(fValue, lookup, options);\n        default:\n            return unknownTypeFormatter(fValue, lookup, options);\n    }\n};\nconst unknownTypeFormatter = (value, _unit, { fractionDigits } = {}) => {\n    return value.toFixed(fractionDigits);\n};\nexport const formatCurrency = (value, _unit, { fractionDigits = 2 } = {}) => {\n    let fValue = value;\n    if (!value) {\n        fValue = 0;\n    }\n    return fValue.toLocaleString('en', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatStorage = (value, _unit, { fractionDigits = 2 } = {}) => {\n    return value.toFixed(fractionDigits);\n};\n","export const testIdProp = 'data-testid';\nexport const getTestProps = (id) => ({ [testIdProp]: id });\nexport const testIds = {\n    details: {\n        historical_data_btn: 'historical-data-btn',\n        tag_lnk: 'tag-lnk',\n        show_more_btn: 'show-more-btn',\n    },\n    export: {\n        cancel_btn: 'cancel-btn',\n        submit_btn: 'submit-btn',\n    },\n    login: {\n        alert: 'alert',\n        form: 'login-form',\n        username_input: 'username-input',\n        password_input: 'password-input',\n        submit: 'submit',\n    },\n    masthead: {\n        masthead: 'masthead',\n        username: 'username',\n        sidebarToggle: 'sidebar-toggle',\n        logout: 'logout',\n    },\n    providers: {\n        add_btn: 'add-btn',\n        bucket_input: 'bucket-input',\n        cancel_btn: 'cancel-btn',\n        empty_state_add_btn: 'empty_state_add-btn',\n        name_input: 'provider-name-input',\n        resource_name_input: 'provider-resource-name-input',\n        cluster_id_input: 'provider-cluster-id-input',\n        submit_btn: 'submit-btn',\n        type_input: 'provider-type-input',\n    },\n    sidebar: {\n        nav: 'vertical-nav',\n        link: 'vertical-nav-link',\n        backdrop: 'sidebar-backdrop',\n    },\n};\n","import { sort } from './sort';\nexport function getComputedOcpReportItems({ report, idKey, labelKey = idKey, sortKey = 'charge', sortDirection = 0 /* asc */, }) {\n    return sort(getUnsortedComputedOcpReportItems({\n        report,\n        idKey,\n        labelKey,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nexport function getUnsortedComputedOcpReportItems({ report, idKey, labelKey = idKey, }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = {};\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint.values) {\n            dataPoint.values.forEach(value => {\n                const capacity = value.capacity;\n                const charge = value.charge;\n                const id = value[idKey];\n                let label = value[labelKey];\n                if (labelKey === 'cluster' && value.cluster_alias) {\n                    label = value.cluster_alias;\n                }\n                const limit = value.limit;\n                const request = value.request;\n                const usage = value.usage;\n                const units = value.units ? value.units : usage ? 'GB' : 'USD';\n                if (!itemMap[id]) {\n                    itemMap[id] = {\n                        app: value.app,\n                        capacity,\n                        charge,\n                        deltaPercent: value.delta_percent,\n                        deltaValue: value.delta_value,\n                        id,\n                        label,\n                        limit,\n                        request,\n                        units,\n                        usage,\n                    };\n                    return;\n                }\n                itemMap[id] = Object.assign({}, itemMap[id], { capacity: itemMap[id].capacity + capacity, charge: itemMap[id].charge + charge, limit: itemMap[id].limit + limit, request: itemMap[id].request + request, usage: itemMap[id].usage + usage });\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Object.values(itemMap);\n}\nexport function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    return 'date';\n}\n","import { sort } from './sort';\nexport function getComputedAwsReportItems({ report, idKey, labelKey = idKey, sortKey = 'total', sortDirection = 0 /* asc */, }) {\n    return sort(getUnsortedComputedAwsReportItems({\n        report,\n        idKey,\n        labelKey,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nexport function getUnsortedComputedAwsReportItems({ report, idKey, labelKey = idKey, }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = {};\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint.values) {\n            dataPoint.values.forEach(value => {\n                const total = value.total;\n                const id = value[idKey];\n                let label = value[labelKey];\n                if (labelKey === 'account' && value.account_alias) {\n                    label = value.account_alias;\n                }\n                if (!itemMap[id]) {\n                    itemMap[id] = {\n                        deltaPercent: value.delta_percent,\n                        deltaValue: value.delta_value,\n                        id,\n                        total,\n                        label,\n                        units: value.units,\n                    };\n                    return;\n                }\n                itemMap[id] = Object.assign({}, itemMap[id], { total: itemMap[id].total + total });\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Object.values(itemMap);\n}\nexport function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.account) {\n        return 'account';\n    }\n    if (groupBy.instance_type) {\n        return 'instance_type';\n    }\n    if (groupBy.region) {\n        return 'region';\n    }\n    if (groupBy.service) {\n        return 'service';\n    }\n    return 'date';\n}\n","function getValueForItem(item, options) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    const sortKey = options.key;\n    return item[sortKey];\n}\nexport function sort(array, options) {\n    const { direction = 0 /* asc */ } = options || {};\n    return [...array].sort((a, b) => {\n        const aVal = direction === 0 /* asc */\n            ? getValueForItem(a, options)\n            : getValueForItem(b, options);\n        const bVal = direction === 0 /* asc */\n            ? getValueForItem(b, options)\n            : getValueForItem(a, options);\n        if (aVal > bVal) {\n            return -1;\n        }\n        if (aVal < bVal) {\n            return 1;\n        }\n        return 0;\n    });\n}\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_disabled_color_200, global_FontFamily_sans_serif, global_FontSize_md, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    colorScale: [\n        global_disabled_color_200.value,\n        '#A2DA9C',\n        '#88D080',\n        '#6EC664',\n        '#519149',\n        '#3C6C37',\n    ],\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 12,\n        },\n        minWidth: 175,\n    },\n    previousMonth: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    currentMonth: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = StyleSheet.create({\n    chartContainer: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n    legend: {\n        display: 'inline-block',\n        fontSize: global_FontSize_md.value,\n        marginBottom: global_spacer_lg.value,\n        marginTop: global_spacer_lg.value,\n        minWidth: '175px',\n    },\n});\n","import { Chart, ChartArea, ChartContainer, ChartLegend, ChartTheme, ChartVoronoiContainer, } from '@patternfly/react-charts';\nimport { css } from '@patternfly/react-styles';\nimport { getDateRangeString, getMaxValue, getTooltipContent, getTooltipLabel, } from 'components/commonChart/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport React from 'react';\nimport { VictoryAxis } from 'victory';\nimport { getDateRange } from '../commonChart/chartUtils';\nimport { chartStyles, styles } from './trendChart.styles';\nclass TrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, previousData, title } = this.props;\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const legendData = [];\n            if (previousData) {\n                legendData.push({\n                    name: getDateRangeString(previousData, true, true),\n                    symbol: {\n                        type: 'minus',\n                    },\n                });\n            }\n            if (currentData) {\n                legendData.push({\n                    name: getDateRangeString(currentData, true, false, true),\n                    symbol: {\n                        type: 'minus',\n                    },\n                });\n            }\n            const cost = {\n                charts: [\n                    {\n                        data: previousData,\n                        show: true,\n                        style: chartStyles.previousMonth,\n                    },\n                    {\n                        data: currentData,\n                        show: true,\n                        style: chartStyles.currentMonth,\n                    },\n                ],\n                legend: {\n                    colorScale: chartStyles.colorScale,\n                    data: legendData,\n                    onClick: this.handleCostLegendClick,\n                    title,\n                },\n            };\n            this.setState({\n                datum: {\n                    cost,\n                },\n            });\n        };\n        this.handleCostLegendClick = props => {\n            const { datum } = this.state;\n            const newDatum = Object.assign({}, datum);\n            if (props.index >= 0 && newDatum.cost.charts.length) {\n                newDatum.cost.charts[props.index].show = !newDatum.cost.charts[props.index].show;\n                this.setState({ datum: newDatum });\n            }\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (datum, index) => {\n            if (datum.data && datum.data.length && datum.show) {\n                return (React.createElement(ChartArea, { data: datum.data, key: `trend-chart-${index}`, style: datum.style }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getLegend = (datum, width) => {\n            if (datum && datum.data && datum.data.length) {\n                return (React.createElement(ChartLegend, { colorScale: datum.colorScale, containerComponent: React.createElement(ChartContainer, { responsive: false }), data: datum.data, events: [\n                        {\n                            target: 'data',\n                            eventHandlers: {\n                                onClick: () => {\n                                    return [\n                                        {\n                                            target: 'data',\n                                            mutation: props => {\n                                                datum.onClick(props);\n                                                return null;\n                                            },\n                                        },\n                                    ];\n                                },\n                            },\n                        },\n                    ], gutter: 5, height: 50, orientation: width > 150 ? 'horizontal' : 'vertical', style: chartStyles.legend, theme: ChartTheme.light.blue, width: width }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTooltipLabel = (datum) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            return getTooltipLabel(datum, getTooltipContent(formatDatumValue), formatDatumOptions, 'date');\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentData, previousData } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrent = currentData ? getMaxValue(currentData) : 0;\n        const maxPrevious = previousData ? getMaxValue(previousData) : 0;\n        const maxValue = Math.max(maxCurrent, maxPrevious);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentData, previousData } = this.props;\n        const previousDate = previousData\n            ? getDate(getDateRange(previousData, true, true)[1])\n            : 0;\n        const currentDate = currentData\n            ? getDate(getDateRange(currentData, true, true)[1])\n            : 0;\n        return currentDate > 0 || previousDate > 0\n            ? Math.max(currentDate, previousDate)\n            : 31;\n    }\n    isLegendVisible() {\n        const { datum } = this.state;\n        let result = false;\n        if (datum && datum.cost.legend && datum.cost.legend.data) {\n            datum.cost.legend.data.forEach(item => {\n                if (item.name && item.name.trim() !== '') {\n                    result = true;\n                    return;\n                }\n            });\n        }\n        return result;\n    }\n    render() {\n        const { height } = this.props;\n        const { datum, width } = this.state;\n        const container = React.createElement(ChartVoronoiContainer, { labels: this.getTooltipLabel });\n        const legendWidth = chartStyles.legend.minWidth > width / 2\n            ? chartStyles.legend.minWidth\n            : width / 2;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        return (React.createElement(\"div\", { className: css(styles.chartContainer), ref: this.containerRef },\n            React.createElement(Chart, { containerComponent: container, domain: domain, height: height, width: width },\n                Boolean(datum && datum.cost) &&\n                    datum.cost.charts.map((chart, index) => {\n                        return this.getChart(chart, index);\n                    }),\n                React.createElement(VictoryAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                React.createElement(VictoryAxis, { dependentAxis: true, style: chartStyles.yAxis })),\n            Boolean(this.isLegendVisible()) && (React.createElement(\"div\", { className: css(styles.legend) },\n                Boolean(datum.cost.legend.title) && (React.createElement(\"div\", null, datum.cost.legend.title)),\n                this.getLegend(datum.cost.legend, legendWidth)))));\n    }\n}\nexport { TrendChart };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_spacer_lg } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    card: {\n        height: '100vh',\n        paddingLeft: global_spacer_lg.value,\n        paddingRight: global_spacer_lg.value,\n        marginTop: '150px',\n    },\n    cardBody: {\n        textAlign: 'center',\n    },\n    subtitle: {\n        color: global_Color_200.var,\n        marginTop: '30px',\n    },\n    title: {\n        marginTop: '30px',\n    },\n});\n","import { Title } from '@patternfly/react-core';\nimport { BanIcon, ErrorCircleOIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './errorState.styles';\nconst ErrorStateBase = ({ error, t }) => {\n    let isUnauthorized = false;\n    let title = t('error_state.unexpected_title');\n    let subTitle = t('error_state.unexpected_desc');\n    if (error && error.response && error.response.status === 401) {\n        isUnauthorized = true;\n        title = t('error_state.unauthorized_title');\n        subTitle = t('error_state.unauthorized_desc');\n    }\n    return (React.createElement(\"div\", { className: css(styles.card) },\n        React.createElement(\"div\", { className: css(styles.cardBody) },\n            Boolean(isUnauthorized) ? (React.createElement(BanIcon, { size: \"xl\" })) : (React.createElement(ErrorCircleOIcon, { size: \"xl\" })),\n            React.createElement(Title, { className: css(styles.title), size: \"lg\" }, title),\n            Boolean(subTitle) && (React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)))));\n};\nconst ErrorState = translate()(ErrorStateBase);\nexport { ErrorState };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_spacer_lg } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    card: {\n        height: '75vh',\n        paddingLeft: global_spacer_lg.value,\n        paddingRight: global_spacer_lg.value,\n        marginTop: '150px',\n    },\n    cardBody: {\n        textAlign: 'center',\n    },\n    subtitle: {\n        color: global_Color_200.var,\n        marginTop: '30px',\n    },\n    title: {\n        marginTop: '30px',\n    },\n});\n","import { Title } from '@patternfly/react-core';\nimport { BinocularsIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './loadingState.styles';\nconst LoadingStateBase = ({ isBinocularsIcon, t, }) => {\n    const title = t('loading_state.sources_title');\n    const subTitle = t('loading_state.sources_desc');\n    return (React.createElement(\"div\", { className: css(styles.card) },\n        React.createElement(\"div\", { className: css(styles.cardBody) },\n            Boolean(isBinocularsIcon !== false) && React.createElement(BinocularsIcon, { size: \"xl\" }),\n            React.createElement(Title, { className: css(styles.title), size: \"lg\" }, title),\n            Boolean(subTitle) && (React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)))));\n};\nconst LoadingState = translate()(LoadingStateBase);\nexport { LoadingState };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200 } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    card: {\n        height: '100vh',\n        marginTop: '150px',\n    },\n    cardBody: {\n        textAlign: 'center',\n    },\n    primaryAction: {\n        marginTop: '60px',\n    },\n    subtitle: {\n        color: global_Color_200.var,\n        marginTop: '30px',\n    },\n    title: {\n        marginTop: '30px',\n    },\n});\n","import { Grid, GridItem, Title } from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './emptyState.styles';\nconst EmptyState = ({ isDollarSignIcon, primaryAction, subTitle, title, }) => (React.createElement(\"div\", { className: css(styles.card) },\n    React.createElement(\"div\", { className: css(styles.cardBody) },\n        React.createElement(Grid, { gutter: \"lg\" },\n            React.createElement(GridItem, { md: 1, lg: 2 }),\n            React.createElement(GridItem, { md: 10, lg: 8 },\n                Boolean(isDollarSignIcon) && React.createElement(DollarSignIcon, { size: \"xl\" }),\n                React.createElement(Title, { className: css(styles.title), size: \"lg\" }, title),\n                Boolean(subTitle) && (React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n                Boolean(primaryAction) && (React.createElement(\"div\", { className: css(styles.primaryAction) }, primaryAction))),\n            React.createElement(GridItem, { md: 1, lg: 2 })))));\nexport { EmptyState };\n","import { Button, ButtonType, ButtonVariant, Grid, GridItem, } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { uiActions } from 'store/ui';\nimport { getTestProps, testIds } from '../../../testIds';\nimport { EmptyState } from '../emptyState/emptyState';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getAddSourceButton = () => {\n            const { openProvidersModal, t } = this.props;\n            return (React.createElement(Button, Object.assign({}, getTestProps(testIds.providers.add_btn), { onClick: openProvidersModal, type: ButtonType.submit, variant: ButtonVariant.secondary }), t('providers.add_source')));\n        };\n    }\n    render() {\n        const { t } = this.props;\n        return (React.createElement(Grid, { gutter: \"lg\" },\n            React.createElement(GridItem, null,\n                React.createElement(EmptyState, { isDollarSignIcon: true, primaryAction: this.getAddSourceButton(), title: t('providers.empty_state_title'), subTitle: t('providers.empty_state_desc') }))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, {}) => {\n    return {};\n});\nconst NoProvidersState = translate()(connect(mapStateToProps, {\n    openProvidersModal: uiActions.openProvidersModal,\n})(NoProvidersStateBase));\nexport { NoProvidersState };\n","// import pathHelpers from 'victory-core/src/victory-primitives/path-helpers';\n// Todo: Move this functionality to PF4 react-charts package\nexport default {\n    // Todo: Our jest config fails to process the import in path-helpers\n    // ...pathHelpers,\n    dash(x, y, size) {\n        const baseSize = 1.1 * size;\n        const lineHeight = baseSize - baseSize * 0.3;\n        const x0 = x - baseSize;\n        const y1 = y + lineHeight / 2;\n        const distance = (x + baseSize - x0) * 0.3;\n        const padding = distance / 3;\n        return `M ${x0}, ${y1}\n      h${distance}\n      v-${lineHeight}\n      h-${distance}\n      z\n      M ${x0 + distance + padding}, ${y1}\n      h${distance}\n      v-${lineHeight}\n      h-${distance}\n      z\n      M ${x0 + distance * 2 + padding * 2}, ${y1}\n      h${distance}\n      v-${lineHeight}\n      h-${distance}\n      z`;\n    },\n    minus(x, y, size) {\n        const baseSize = 1.1 * size;\n        const lineHeight = baseSize - baseSize * 0.3;\n        const x0 = x - baseSize;\n        const y1 = y + lineHeight / 2;\n        const distance = x + baseSize - x0;\n        return `M ${x0}, ${y1}\n      h${distance}\n      v-${lineHeight}\n      h-${distance}\n      z`;\n    },\n};\n","import PropTypes from 'prop-types';\nimport { Point } from 'victory';\nimport pathHelpers from './path-helpers';\n// Todo: Move this functionality to PF4 react-charts package\nclass VictoryPoint extends Point {\n    getPath(props) {\n        return pathHelpers[`${props.symbol}`](props.x, props.y, props.size);\n    }\n}\nVictoryPoint.propTypes = Object.assign({}, Point.propTypes, { symbol: PropTypes.oneOfType([\n        PropTypes.oneOf([\n            // Todo: Not importing all due to jest issue\n            // 'circle',\n            // 'diamond',\n            // 'plus',\n            'minus',\n            // 'square',\n            // 'star',\n            // 'triangleDown',\n            // 'triangleUp',\n            'dash',\n        ]),\n        PropTypes.func,\n    ]) });\nexport default VictoryPoint;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './awsReportSummary.styles';\nconst AwsReportSummaryBase = ({ title, subTitle, detailsLink, children, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? `${t('loading')}...` : children),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst AwsReportSummary = translate()(AwsReportSummaryBase);\nexport { AwsReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryDetails: {\n        marginBottom: global_spacer_md.value,\n        display: 'flex',\n        alignItems: 'flex-end',\n    },\n    value: {\n        color: global_Color_100.var,\n        marginRight: global_spacer_sm.value,\n        fontSize: global_FontSize_4xl.value,\n    },\n    text: {\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './awsReportSummaryDetails.styles';\nconst AwsReportSummaryDetails = ({ label, formatValue, formatOptions, report, }) => {\n    let value = '----';\n    if (report && report.total) {\n        const units = report.total.units ? report.total.units : 'USD';\n        value = formatValue(report.total.value ? report.total.value : 0, units, formatOptions);\n    }\n    return (React.createElement(\"div\", { className: css(styles.reportSummaryDetails) },\n        React.createElement(\"div\", { className: css(styles.value) }, value),\n        React.createElement(\"div\", { className: css(styles.text) },\n            React.createElement(\"div\", null, label))));\n};\nexport { AwsReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './awsReportSummaryItem.styles';\nconst AwsReportSummaryItem = ({ label, value, totalValue, formatValue, units, formatOptions, }) => {\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = `${formatValue(value, units, formatOptions)} (${percentVal}%)`;\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nAwsReportSummaryItem.defaultProps = {\n    formatValue: v => v,\n};\nexport { AwsReportSummaryItem };\n","import React from 'react';\nimport { getComputedAwsReportItems, } from 'utils/getComputedAwsReportItems';\nclass AwsReportSummaryItems extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedAwsReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => i.id === 'Other');\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { report, children } = this.props;\n        if (!report) {\n            return null;\n        }\n        const items = this.getItems();\n        return React.createElement(\"ul\", null, children({ items }));\n    }\n}\nexport { AwsReportSummaryItems, };\n","import React from 'react';\nimport { TrendChart } from '../trendChart';\nconst AwsReportSummaryTrend = props => (React.createElement(\"div\", { style: { marginBottom: 16 } },\n    React.createElement(TrendChart, Object.assign({ height: 75 }, props))));\nexport { AwsReportSummaryTrend };\n","import React from 'react';\nexport const TabContent = ({ data }) => {\n    const content = typeof data.content === 'function' ? data.content(data) : data.content;\n    return React.createElement(\"div\", { role: \"tabpanel\" }, content);\n};\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_FontSize_md, global_primary_color_100, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    tabItem: {\n        position: 'relative',\n        flexGrow: 1,\n        textAlign: 'center',\n        fontSize: global_FontSize_md.value,\n        padding: global_spacer_sm.value,\n        cursor: 'pointer',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    tabItemShrink: {\n        flexGrow: 0,\n        flexShrink: 2,\n        marginRight: '20px',\n    },\n    selected: {\n        backgroundImage: `linear-gradient(to top, ${global_primary_color_100.value} 2px, transparent 2px)`,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './tabItem.styles';\nclass TabItem extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.handleClick = () => {\n            const { onSelect, data } = this.props;\n            onSelect(data.id);\n        };\n    }\n    render() {\n        const { data, isSelected, isShrink } = this.props;\n        return (React.createElement(\"div\", { role: \"tab\", onClick: this.handleClick, \"aria-selected\": isSelected, tabIndex: isSelected ? 0 : -1, className: css(styles.tabItem, isSelected && styles.selected, isShrink && styles.tabItemShrink) }, data.label));\n    }\n}\nexport { TabItem };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '../../../node_modules/@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    tabNavigation: {\n        display: 'flex',\n        alignItems: 'flex-end',\n        marginBottom: global_spacer_md.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { TabItem } from './tabItem';\nimport { styles } from './tabNavigation.styles';\nclass TabNavigation extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.handleKeyDown = (event) => {\n            if (!['ArrowRight', 'ArrowLeft'].includes(event.key)) {\n                return;\n            }\n            const { selected, tabs, onChange } = this.props;\n            const modifier = event.key === 'ArrowRight' ? 1 : -1;\n            const selectedIndex = tabs.findIndex(t => t.id === selected.id);\n            const newIndex = selectedIndex + modifier;\n            if (newIndex < 0 || newIndex > tabs.length - 1) {\n                return;\n            }\n            onChange(tabs[newIndex].id);\n        };\n    }\n    render() {\n        const { isShrink, tabs, selected, onChange } = this.props;\n        return (React.createElement(\"div\", { role: \"tablist\", className: css(styles.tabNavigation), onKeyDown: this.handleKeyDown }, tabs.map(tab => (React.createElement(TabItem, { isShrink: isShrink, onSelect: onChange, key: tab.id, data: tab, isSelected: tab.id === selected.id })))));\n    }\n}\nexport { TabNavigation };\n","import React from 'react';\nimport { TabContent } from './tabContent';\nimport { TabNavigation } from './tabNavigation';\nconst Tabs = ({ isShrink, selected, tabs, onChange }) => {\n    if (tabs.length === 0) {\n        return React.createElement(\"div\", null, \"No data was found\");\n    }\n    const selectedTab = tabs.find(tab => tab.id === selected);\n    return (React.createElement(\"div\", null,\n        React.createElement(TabNavigation, { isShrink: isShrink, tabs: tabs, selected: selectedTab || tabs[0], onChange: onChange }),\n        React.createElement(TabContent, { data: selectedTab || tabs[0] })));\n};\nexport { Tabs };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpReportSummary.styles';\nconst OcpReportSummaryBase = ({ title, subTitle, detailsLink, children, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? `${t('loading')}...` : children),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst OcpReportSummary = translate()(OcpReportSummaryBase);\nexport { OcpReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    requestedValue: {\n        marginLeft: global_spacer_sm.value,\n    },\n    text: {\n        display: 'flex',\n        alignItems: 'flex-end',\n        marginLeft: global_spacer_sm.value,\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    titleContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        minWidth: '175px',\n        width: '50%',\n    },\n    usageText: {\n        marginRight: global_spacer_sm.value,\n    },\n    value: {\n        display: 'flex',\n        color: global_Color_100.var,\n        fontSize: global_FontSize_4xl.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './ocpReportSummaryDetails.styles';\nconst OcpReportSummaryDetails = ({ label, formatValue, formatOptions, report, reportType = \"charge\" /* charge */, requestLabel, }) => {\n    let value = '----';\n    let requestValue = '----';\n    if (report && report.total) {\n        if (reportType === \"charge\" /* charge */) {\n            const units = report.total.units ? report.total.units : 'USD';\n            value = formatValue(report.total.charge ? report.total.charge : 0, units, formatOptions);\n        }\n        else {\n            const units = report.total.units ? report.total.units : 'GB';\n            value = formatValue(report.total.usage ? report.total.usage : 0, units, formatOptions);\n            requestValue = formatValue(report.total.request ? report.total.request : 0, units, formatOptions);\n        }\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: css(styles.titleContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                value,\n                React.createElement(\"div\", { className: css(styles.text) },\n                    React.createElement(\"div\", null, label)))),\n        React.createElement(\"div\", { className: css(styles.titleContainer) }, Boolean(reportType !== \"charge\" /* charge */) && (React.createElement(\"div\", { className: css(styles.value, styles.requestedValue) },\n            requestValue,\n            React.createElement(\"div\", { className: css(styles.text) }, requestLabel))))));\n};\nexport { OcpReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './ocpReportSummaryItem.styles';\nconst OcpReportSummaryItem = ({ label, value, totalValue, formatValue, units, formatOptions, }) => {\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = `${formatValue(value, units, formatOptions)} (${percentVal}%)`;\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nOcpReportSummaryItem.defaultProps = {\n    formatValue: v => v,\n};\nexport { OcpReportSummaryItem };\n","import React from 'react';\nimport { getComputedOcpReportItems, } from 'utils/getComputedOcpReportItems';\nclass OcpReportSummaryItems extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedOcpReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => i.id === 'Other');\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { report, children } = this.props;\n        if (!report) {\n            return null;\n        }\n        const items = this.getItems();\n        return React.createElement(\"ul\", null, children({ items }));\n    }\n}\nexport { OcpReportSummaryItems, };\n","import React from 'react';\nimport { TrendChart } from '../trendChart';\nconst OcpReportSummaryTrend = props => (React.createElement(\"div\", { style: { marginBottom: 16 } },\n    React.createElement(TrendChart, Object.assign({ height: 75 }, props))));\nexport { OcpReportSummaryTrend };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_disabled_color_100, global_disabled_color_200, global_FontFamily_sans_serif, global_FontSize_md, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: '#88D080',\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 12,\n        },\n        minWidth: 175,\n    },\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: ['#A2DA9C', '#88D080', '#6EC664', '#519149', '#3C6C37'],\n    // TBD: No grey scale, yet\n    previousColorScale: [\n        global_disabled_color_200.value,\n        global_disabled_color_100.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = StyleSheet.create({\n    chartContainer: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n    legend: {\n        display: 'inline-block',\n        fontSize: global_FontSize_md.value,\n        marginBottom: global_spacer_lg.value,\n        marginTop: global_spacer_lg.value,\n        minWidth: '175px',\n        width: '50%',\n    },\n});\n","import { Chart, ChartArea, ChartContainer, ChartLegend, ChartTheme, ChartVoronoiContainer, } from '@patternfly/react-charts';\nimport { css } from '@patternfly/react-styles';\nimport { getDateRangeString, getMaxValue, getTooltipContent, getTooltipLabel, } from 'components/commonChart/chartUtils';\nimport VictoryPoint from 'components/victory/victoryPoint';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { VictoryAxis } from 'victory';\nimport { getDateRange } from '../commonChart/chartUtils';\nimport { chartStyles, styles } from './usageChart.styles';\nclass UsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const previousLegendData = [];\n            if (previousUsageData) {\n                previousLegendData.push({\n                    name: i18next.t(`chart.used`),\n                    symbol: {\n                        type: 'minus',\n                    },\n                });\n            }\n            if (previousRequestData) {\n                previousLegendData.push({\n                    name: i18next.t(`chart.requested`),\n                    symbol: {\n                        type: 'dash',\n                    },\n                });\n            }\n            const previous = {\n                charts: [\n                    {\n                        data: previousUsageData,\n                        show: true,\n                        style: chartStyles.previousUsageData,\n                    },\n                    {\n                        data: previousRequestData,\n                        show: true,\n                        style: chartStyles.previousRequestData,\n                    },\n                ],\n                legend: {\n                    colorScale: chartStyles.previousColorScale,\n                    data: previousLegendData,\n                    onClick: this.handlePreviousLegendClick,\n                    title: getDateRangeString(previousUsageData, true, true),\n                },\n            };\n            const currentLegendData = [];\n            if (currentUsageData) {\n                currentLegendData.push({\n                    name: i18next.t(`chart.used`),\n                    symbol: {\n                        type: 'minus',\n                    },\n                });\n            }\n            if (currentRequestData) {\n                currentLegendData.push({\n                    name: i18next.t(`chart.requested`),\n                    symbol: {\n                        type: 'dash',\n                    },\n                });\n            }\n            const current = {\n                charts: [\n                    {\n                        data: currentUsageData,\n                        show: true,\n                        style: chartStyles.currentUsageData,\n                    },\n                    {\n                        data: currentRequestData,\n                        show: true,\n                        style: chartStyles.currentRequestData,\n                    },\n                ],\n                legend: {\n                    colorScale: chartStyles.currentColorScale,\n                    data: currentLegendData,\n                    gutter: 55,\n                    onClick: this.handleCurrentLegendClick,\n                    title: getDateRangeString(currentUsageData, true, false),\n                },\n            };\n            this.setState({\n                datum: {\n                    previous,\n                    current,\n                },\n            });\n        };\n        this.handleCurrentLegendClick = props => {\n            const { datum } = this.state;\n            const newDatum = Object.assign({}, datum);\n            if (props.index >= 0 && newDatum.current.charts.length) {\n                newDatum.current.charts[props.index].show = !newDatum.current.charts[props.index].show;\n                this.setState({ datum: newDatum });\n            }\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.handlePreviousLegendClick = props => {\n            const { datum } = this.state;\n            const newDatum = Object.assign({}, datum);\n            if (props.index >= 0 && newDatum.previous.charts.length) {\n                newDatum.previous.charts[props.index].show = !newDatum.previous.charts[props.index].show;\n                this.setState({ datum: newDatum });\n            }\n        };\n        this.getChart = (datum, index) => {\n            if (datum.data && datum.data.length && datum.show) {\n                return (React.createElement(ChartArea, { data: datum.data, key: `usage-chart-${index}`, style: datum.style }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getLegend = (datum, width) => {\n            if (datum && datum.data && datum.data.length) {\n                return (React.createElement(ChartLegend, { colorScale: datum.colorScale, containerComponent: React.createElement(ChartContainer, { responsive: false }), data: datum.data, dataComponent: React.createElement(VictoryPoint, null), events: [\n                        {\n                            target: 'data',\n                            eventHandlers: {\n                                onClick: () => {\n                                    return [\n                                        {\n                                            target: 'data',\n                                            mutation: props => {\n                                                datum.onClick(props);\n                                                return null;\n                                            },\n                                        },\n                                    ];\n                                },\n                            },\n                        },\n                    ], height: 25, orientation: \"horizontal\", style: chartStyles.legend, theme: ChartTheme.light.blue }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTooltipLabel = (datum) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            return getTooltipLabel(datum, getTooltipContent(formatDatumValue), formatDatumOptions, 'date');\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentRequest = currentRequestData\n            ? getMaxValue(currentRequestData)\n            : 0;\n        const maxCurrentUsage = currentUsageData\n            ? getMaxValue(currentUsageData)\n            : 0;\n        const maxPreviousRequest = previousRequestData\n            ? getMaxValue(previousRequestData)\n            : 0;\n        const maxPreviousUsage = previousUsageData\n            ? getMaxValue(previousUsageData)\n            : 0;\n        const maxValue = Math.max(maxCurrentRequest, maxCurrentUsage, maxPreviousRequest, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const currentRequestDate = currentRequestData\n            ? getDate(getDateRange(currentRequestData, true, true)[1])\n            : 0;\n        const currentUsageDate = currentUsageData\n            ? getDate(getDateRange(currentUsageData, true, true)[1])\n            : 0;\n        const previousRequestDate = previousRequestData\n            ? getDate(getDateRange(previousRequestData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousUsageData\n            ? getDate(getDateRange(previousUsageData, true, true)[1])\n            : 0;\n        return currentRequestDate > 0 ||\n            currentUsageDate > 0 ||\n            previousRequestDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    isCurrentLegendVisible() {\n        const { datum } = this.state;\n        let result = false;\n        if (datum && datum.current.legend && datum.current.legend.data) {\n            datum.current.legend.data.forEach(data => {\n                if (data.name && data.name.trim() !== '') {\n                    result = true;\n                    return;\n                }\n            });\n        }\n        return result;\n    }\n    isPreviousLegendVisible() {\n        const { datum } = this.state;\n        let result = false;\n        if (datum && datum.previous.legend && datum.previous.legend.data) {\n            datum.previous.legend.data.forEach(data => {\n                if (data.name && data.name.trim() !== '') {\n                    result = true;\n                    return;\n                }\n            });\n        }\n        return result;\n    }\n    render() {\n        const { height } = this.props;\n        const { datum, width } = this.state;\n        const container = React.createElement(ChartVoronoiContainer, { labels: this.getTooltipLabel });\n        const legendWidth = chartStyles.legend.minWidth > width / 2\n            ? chartStyles.legend.minWidth\n            : width / 2;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        return (React.createElement(\"div\", { className: css(styles.chartContainer), ref: this.containerRef },\n            React.createElement(Chart, { containerComponent: container, domain: domain, height: height, width: width },\n                Boolean(datum && datum.previous) &&\n                    datum.previous.charts.map((chart, index) => {\n                        return this.getChart(chart, index);\n                    }),\n                Boolean(datum && datum.current) &&\n                    datum.current.charts.map((chart, index) => {\n                        return this.getChart(chart, index);\n                    }),\n                React.createElement(VictoryAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                React.createElement(VictoryAxis, { dependentAxis: true, style: chartStyles.yAxis })),\n            Boolean(this.isPreviousLegendVisible()) && (React.createElement(\"div\", { className: css(styles.legend) },\n                Boolean(datum.previous.legend.title) && (React.createElement(\"div\", null, datum.previous.legend.title)),\n                this.getLegend(datum.previous.legend, legendWidth))),\n            Boolean(this.isCurrentLegendVisible()) && (React.createElement(\"div\", { className: css(styles.legend) },\n                Boolean(datum.current.legend.title) && (React.createElement(\"div\", null, datum.current.legend.title)),\n                this.getLegend(datum.current.legend, legendWidth)))));\n    }\n}\nexport { UsageChart };\n","import React from 'react';\nimport { UsageChart } from '../usageChart';\nconst OcpReportSummaryUsage = props => (React.createElement(\"div\", { style: { marginBottom: 16 } },\n    React.createElement(UsageChart, Object.assign({ height: 75 }, props))));\nexport { OcpReportSummaryUsage };\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"invariant\";\nimport { createLocation } from \"history\";\n\nvar isModifiedEvent = function isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n};\n\n/**\n * The public API for rendering a history-aware <a>.\n */\n\nvar Link = function (_React$Component) {\n  _inherits(Link, _React$Component);\n\n  function Link() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Link);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (event) {\n      if (_this.props.onClick) _this.props.onClick(event);\n\n      if (!event.defaultPrevented && // onClick prevented default\n      event.button === 0 && // ignore everything but left clicks\n      !_this.props.target && // let browser handle \"target=_blank\" etc.\n      !isModifiedEvent(event) // ignore clicks with modifier keys\n      ) {\n          event.preventDefault();\n\n          var history = _this.context.router.history;\n          var _this$props = _this.props,\n              replace = _this$props.replace,\n              to = _this$props.to;\n\n\n          if (replace) {\n            history.replace(to);\n          } else {\n            history.push(to);\n          }\n        }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Link.prototype.render = function render() {\n    var _props = this.props,\n        replace = _props.replace,\n        to = _props.to,\n        innerRef = _props.innerRef,\n        props = _objectWithoutProperties(_props, [\"replace\", \"to\", \"innerRef\"]); // eslint-disable-line no-unused-vars\n\n    invariant(this.context.router, \"You should not use <Link> outside a <Router>\");\n\n    invariant(to !== undefined, 'You must specify the \"to\" property');\n\n    var history = this.context.router.history;\n\n    var location = typeof to === \"string\" ? createLocation(to, null, null, history.location) : to;\n\n    var href = history.createHref(location);\n    return React.createElement(\"a\", _extends({}, props, { onClick: this.handleClick, href: href, ref: innerRef }));\n  };\n\n  return Link;\n}(React.Component);\n\nLink.propTypes = {\n  onClick: PropTypes.func,\n  target: PropTypes.string,\n  replace: PropTypes.bool,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  innerRef: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n};\nLink.defaultProps = {\n  replace: false\n};\nLink.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n      replace: PropTypes.func.isRequired,\n      createHref: PropTypes.func.isRequired\n    }).isRequired\n  }).isRequired\n};\n\n\nexport default Link;","import { Button } from '@patternfly/react-core';\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nconst CastedButton = Button;\nconst Link = props => (React.createElement(CastedButton, Object.assign({ component: RouterLink, variant: \"link\" }, props)));\nexport { Link };\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the month\n *\n * @example\n * // Which month is 29 February 2012?\n * var result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\nfunction getMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var month = date.getMonth()\n  return month\n}\n\nmodule.exports = getMonth\n","import { getQuery, parseQuery } from 'api/awsQuery';\nimport { AwsReportSummary, AwsReportSummaryDetails, AwsReportSummaryItem, AwsReportSummaryItems, AwsReportSummaryTrend, } from 'components/awsReportSummary';\nimport { transformAwsReport } from 'components/commonChart/chartUtils';\nimport { Link } from 'components/link';\nimport { Tabs } from 'components/tabs';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { awsDashboardActions, awsDashboardSelectors, } from 'store/awsDashboard';\nimport { awsReportsSelectors } from 'store/awsReports';\nimport { createMapStateToProps } from 'store/common';\nimport { formatValue } from 'utils/formatValue';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nclass AwsDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.buildDetailsLink = () => {\n            const { currentQuery } = this.props;\n            const groupBy = parseQuery(currentQuery).group_by;\n            return `/aws?${getQuery({\n                group_by: groupBy,\n                order_by: { total: 'desc' },\n            })}`;\n        };\n        this.renderTab = (tabData) => {\n            const { tabs, topItems } = this.props;\n            const currentTab = tabData.id;\n            return (React.createElement(AwsReportSummaryItems, { idKey: getIdKeyForTab(currentTab), report: tabs }, ({ items }) => items.map(tabItem => (React.createElement(AwsReportSummaryItem, { key: tabItem.id, formatOptions: topItems.formatOptions, formatValue: formatValue, label: tabItem.label.toString(), totalValue: tabs.total.value, units: tabItem.units, value: tabItem.total })))));\n        };\n        this.handleTabChange = (tabId) => {\n            this.props.updateTab(this.props.id, tabId);\n        };\n    }\n    componentDidMount() {\n        const { fetchReports, widgetId } = this.props;\n        fetchReports(widgetId);\n    }\n    render() {\n        const { t, titleKey, trend, details, current, previous, availableTabs, currentTab, reportType, status, } = this.props;\n        const today = new Date();\n        const month = getMonth(today);\n        const endDate = formatDate(today, 'Do');\n        const startDate = formatDate(startOfMonth(today), 'Do');\n        const title = t(titleKey, { endDate, month, startDate });\n        const subTitle = t('aws_dashboard.widget_subtitle', {\n            endDate,\n            month,\n            startDate,\n            count: getDate(today),\n        });\n        const detailLabel = t(details.labelKey, {\n            context: details.labelKeyContext,\n        });\n        const detailsLink = reportType === \"cost\" /* cost */ && (React.createElement(Link, { to: this.buildDetailsLink() }, this.getDetailsLinkTitle(currentTab)));\n        const trendTitle = t(trend.titleKey);\n        const currentData = transformAwsReport(current, trend.type);\n        const previousData = transformAwsReport(previous, trend.type);\n        return (React.createElement(AwsReportSummary, { title: title, subTitle: subTitle, detailsLink: detailsLink, status: status },\n            React.createElement(AwsReportSummaryDetails, { report: current, formatValue: formatValue, label: detailLabel, formatOptions: details.formatOptions }),\n            React.createElement(AwsReportSummaryTrend, { title: trendTitle, currentData: currentData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, previousData: previousData }),\n            React.createElement(Tabs, { tabs: availableTabs.map(tab => ({\n                    id: tab,\n                    label: this.getTabTitle(tab),\n                    content: this.renderTab,\n                })), selected: currentTab, onChange: this.handleTabChange })));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, current: awsReportsSelectors.selectReport(state, widget.reportType, queries.current), previous: awsReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabs: awsReportsSelectors.selectReport(state, widget.reportType, queries.tabs), status: awsReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current) });\n});\nconst mapDispatchToProps = {\n    fetchReports: awsDashboardActions.fetchWidgetReports,\n    updateTab: awsDashboardActions.changeWidgetTab,\n};\nconst AwsDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(AwsDashboardWidgetBase));\nexport { AwsDashboardWidget, AwsDashboardWidgetBase };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { awsDashboardSelectors } from 'store/awsDashboard';\nimport { createMapStateToProps } from 'store/common';\nimport { uiActions } from 'store/ui';\nimport { AwsDashboardWidget } from './awsDashboardWidget';\nconst AwsDashboardBase = ({ t, openProvidersModal, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        return (React.createElement(GridItem, { xl: 4, lg: 6, key: widgetId },\n            React.createElement(AwsDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        widgets: awsDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsDashboard = translate()(connect(mapStateToProps, {\n    openProvidersModal: uiActions.openProvidersModal,\n})(AwsDashboardBase));\nexport default AwsDashboard;\n","import { getQuery, parseQuery } from 'api/ocpQuery';\nimport { transformOcpReport } from 'components/commonChart/chartUtils';\nimport { Link } from 'components/link';\nimport { OcpReportSummary, OcpReportSummaryDetails, OcpReportSummaryItem, OcpReportSummaryItems, OcpReportSummaryTrend, OcpReportSummaryUsage, } from 'components/ocpReportSummary';\nimport { Tabs } from 'components/tabs';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardActions, ocpDashboardSelectors, } from 'store/ocpDashboard';\nimport { ocpReportsSelectors } from 'store/ocpReports';\nimport { formatValue } from 'utils/formatValue';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nclass OcpDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.buildDetailsLink = () => {\n            const { currentQuery } = this.props;\n            const groupBy = parseQuery(currentQuery).group_by;\n            return `/ocp?${getQuery({\n                group_by: groupBy,\n                order_by: { charge: 'desc' },\n            })}`;\n        };\n        this.renderTab = (tabData) => {\n            const { reportType, tabs, topItems } = this.props;\n            const currentTab = tabData.id;\n            return (React.createElement(OcpReportSummaryItems, { idKey: getIdKeyForTab(currentTab), report: tabs }, ({ items }) => items.map(tabItem => (React.createElement(OcpReportSummaryItem, { key: tabItem.id, formatOptions: topItems.formatOptions, formatValue: formatValue, label: tabItem.label.toString(), totalValue: reportType === \"charge\" /* charge */\n                    ? tabs.total.charge\n                    : tabs.total.usage, units: tabItem.units, value: reportType === \"charge\" /* charge */\n                    ? tabItem.charge\n                    : tabItem.usage })))));\n        };\n        this.handleTabChange = (tabId) => {\n            this.props.updateTab(this.props.id, tabId);\n        };\n    }\n    componentDidMount() {\n        const { fetchReports, widgetId } = this.props;\n        fetchReports(widgetId);\n    }\n    render() {\n        const { t, titleKey, trend, details, current, previous, availableTabs, currentTab, reportType, status, } = this.props;\n        const today = new Date();\n        const month = getMonth(today);\n        const endDate = formatDate(today, 'Do');\n        const startDate = formatDate(startOfMonth(today), 'Do');\n        const title = t(titleKey, { endDate, month, startDate });\n        const subTitle = t('ocp_dashboard.widget_subtitle', {\n            endDate,\n            month,\n            startDate,\n            count: getDate(today),\n        });\n        const detailLabel = t(details.labelKey);\n        const requestLabel = t(details.requestLabelKey);\n        const detailsLink = reportType === \"charge\" /* charge */ && (React.createElement(Link, { to: this.buildDetailsLink() }, this.getDetailsLinkTitle(currentTab)));\n        const reportItem = reportType === \"charge\" /* charge */ ? 'charge' : 'usage';\n        const currentUsageData = transformOcpReport(current, trend.type, 'date', reportItem);\n        const previousUsageData = transformOcpReport(previous, trend.type, 'date', reportItem);\n        const currentRequestData = reportType !== \"charge\" /* charge */\n            ? transformOcpReport(current, trend.type, 'date', 'request')\n            : undefined;\n        const previousRequestData = reportType !== \"charge\" /* charge */\n            ? transformOcpReport(previous, trend.type, 'date', 'request')\n            : undefined;\n        return (React.createElement(OcpReportSummary, { title: title, subTitle: subTitle, detailsLink: detailsLink, status: status },\n            React.createElement(OcpReportSummaryDetails, { report: current, reportType: reportType, formatValue: formatValue, label: detailLabel, formatOptions: details.formatOptions, requestLabel: requestLabel }),\n            Boolean(reportType === \"charge\" /* charge */) ? (React.createElement(OcpReportSummaryTrend, { title: t(trend.titleKey), currentData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, previousData: previousUsageData })) : (React.createElement(OcpReportSummaryUsage, { currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, previousRequestData: previousRequestData, previousUsageData: previousUsageData })),\n            React.createElement(Tabs, { tabs: availableTabs.map(tab => ({\n                    id: tab,\n                    label: this.getTabTitle(tab),\n                    content: this.renderTab,\n                })), selected: currentTab, onChange: this.handleTabChange })));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, current: ocpReportsSelectors.selectReport(state, widget.reportType, queries.current), previous: ocpReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabs: ocpReportsSelectors.selectReport(state, widget.reportType, queries.tabs), status: ocpReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpDashboardActions.fetchWidgetReports,\n    updateTab: ocpDashboardActions.changeWidgetTab,\n};\nconst OcpDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(OcpDashboardWidgetBase));\nexport { OcpDashboardWidget, OcpDashboardWidgetBase };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardSelectors } from 'store/ocpDashboard';\nimport { uiActions } from 'store/ui';\nimport { OcpDashboardWidget } from './ocpDashboardWidget';\nconst OcpDashboardBase = ({ t, openProvidersModal, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        return (React.createElement(GridItem, { xl: 4, lg: 6, key: widgetId },\n            React.createElement(OcpDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        widgets: ocpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpDashboard = translate()(connect(mapStateToProps, {\n    openProvidersModal: uiActions.openProvidersModal,\n})(OcpDashboardBase));\nexport default OcpDashboard;\n","import { hot } from 'react-hot-loader';\nimport OcpDashboard from './ocpDashboard';\nexport default hot(module)(OcpDashboard);\n","import { hot } from 'react-hot-loader';\nimport AwsDashboard from './awsDashboard';\nexport default hot(module)(AwsDashboard);\n","import { Button, ButtonType, ButtonVariant, Title, TitleSize, } from '@patternfly/react-core';\nimport { getProvidersQuery } from 'api/providersQuery';\nimport { ErrorState } from 'components/state/errorState/errorState';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport { NoProvidersState } from 'components/state/noProvidersState/noProvidersState';\nimport { Tabs } from 'components/tabs';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsProvidersQuery, ocpProvidersQuery, providersSelectors, } from 'store/providers';\nimport { uiActions } from 'store/ui';\nimport { getTestProps, testIds } from 'testIds';\nimport AwsDashboard from '../awsDashboard';\nimport OcpDashboard from '../ocpDashboard';\nclass OverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            currentTab: \"aws\" /* aws */,\n        };\n        this.getAddSourceButton = () => {\n            const { openProvidersModal, t } = this.props;\n            return (React.createElement(Button, Object.assign({}, getTestProps(testIds.providers.add_btn), { onClick: openProvidersModal, type: ButtonType.submit, variant: ButtonVariant.secondary }), t('providers.add_source')));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            if (tab === \"aws\" /* aws */) {\n                return t('overview.aws');\n            }\n            else if (tab === \"ocp\" /* ocp */) {\n                return t('overview.ocp');\n            }\n        };\n        this.getTabs = () => {\n            const { awsProviders, ocpProviders } = this.props;\n            const { currentTab } = this.state;\n            const availableTabs = [];\n            // Todo: Test AWS providers when API is available -- https://github.com/project-koku/koku/issues/658\n            if (awsProviders && awsProviders.meta && awsProviders.meta.count) {\n                availableTabs.push(\"aws\" /* aws */);\n            }\n            // Todo: Test OCP providers when API is available -- https://github.com/project-koku/koku/issues/658\n            if (ocpProviders && ocpProviders.meta && ocpProviders.meta.count) {\n                availableTabs.push(\"ocp\" /* ocp */);\n            }\n            return (React.createElement(Tabs, { isShrink: Boolean(true), tabs: availableTabs.map(tab => ({\n                    id: tab,\n                    label: this.getTabTitle(tab),\n                    content: this.renderTab,\n                })), selected: currentTab, onChange: this.handleTabChange }));\n        };\n        this.handleTabChange = (tabId) => {\n            this.setState({ currentTab: tabId });\n        };\n        this.renderTab = (tabData) => {\n            const currentTab = tabData.id;\n            if (currentTab === \"aws\" /* aws */) {\n                return React.createElement(AwsDashboard, null);\n            }\n            else {\n                return React.createElement(OcpDashboard, null);\n            }\n        };\n    }\n    render() {\n        const { awsProviders, awsProvidersError, awsProvidersFetchStatus, ocpProviders, ocpProvidersError, ocpProvidersFetchStatus, t, } = this.props;\n        const hasAwsMeta = awsProviders && awsProviders.meta;\n        const ocpAwsMeta = ocpProviders && ocpProviders.meta;\n        const hasProviders = hasAwsMeta &&\n            awsProviders.meta.count > 0 &&\n            awsProvidersFetchStatus === 2 /* complete */ &&\n            (ocpAwsMeta &&\n                ocpProviders.meta.count > 0 &&\n                ocpProvidersFetchStatus === 2 /* complete */);\n        const noProviders = hasAwsMeta &&\n            awsProviders.meta.count === 0 &&\n            awsProvidersFetchStatus === 2 /* complete */ &&\n            (ocpAwsMeta &&\n                ocpProviders.meta.count === 0 &&\n                ocpProvidersFetchStatus === 2 /* complete */);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"section\", { className: \"pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light\" },\n                React.createElement(\"header\", { className: \"pf-u-display-flex pf-u-justify-content-space-between pf-u-align-items-center\" },\n                    React.createElement(Title, { size: TitleSize.lg }, t('overview.title')),\n                    this.getAddSourceButton())),\n            React.createElement(\"section\", { className: \"pf-l-page__main-section pf-c-page__main-section\", \"page-type\": \"cost-management-overview\" }, Boolean(awsProvidersError || ocpProvidersError) ? (React.createElement(ErrorState, { error: awsProvidersError || ocpProvidersError })) : Boolean(hasProviders) ? (this.getTabs()) : Boolean(noProviders) ? (React.createElement(NoProvidersState, null)) : (React.createElement(LoadingState, null)))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(state => {\n    // Todo: Get AWS providers when API is available -- https://github.com/project-koku/koku/issues/658\n    const awsProvidersQueryString = getProvidersQuery(awsProvidersQuery);\n    const awsProviders = providersSelectors.selectProviders(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const awsProvidersError = providersSelectors.selectProvidersError(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const awsProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"aws\" /* aws */, awsProvidersQueryString);\n    // Todo: Get OCP providers when API is available -- https://github.com/project-koku/koku/issues/658\n    const ocpProvidersQueryString = getProvidersQuery(ocpProvidersQuery);\n    const ocpProviders = providersSelectors.selectProviders(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    const ocpProvidersError = providersSelectors.selectProvidersError(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    const ocpProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    return {\n        awsProviders,\n        awsProvidersError,\n        awsProvidersFetchStatus,\n        awsProvidersQueryString,\n        ocpProviders,\n        ocpProvidersError,\n        ocpProvidersFetchStatus,\n        ocpProvidersQueryString,\n    };\n});\nconst Overview = translate()(connect(mapStateToProps, {\n    openProvidersModal: uiActions.openProvidersModal,\n})(OverviewBase));\nexport default Overview;\n","import { hot } from 'react-hot-loader';\nimport Overview from './overview';\nexport default hot(module)(Overview);\n"],"sourceRoot":""}