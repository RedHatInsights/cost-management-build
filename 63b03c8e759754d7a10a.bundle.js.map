{"version":3,"sources":["webpack://koku-ui/./src/pages/state/noData/index.ts","webpack://koku-ui/./src/pages/state/notAvailable/notAvailable.tsx","webpack://koku-ui/./src/pages/state/notAvailable/index.ts","webpack://koku-ui/./src/pages/views/components/resourceTypeahead/resourceSelect.tsx","webpack://koku-ui/./src/pages/views/components/resourceTypeahead/resourceTypeahead.tsx","webpack://koku-ui/./src/pages/views/components/dataToolbar/dataToolbar.styles.ts","webpack://koku-ui/./src/pages/views/components/dataToolbar/dataToolbar.tsx","webpack://koku-ui/./src/pages/views/components/export/exportModal.styles.ts","webpack://koku-ui/./src/pages/views/components/export/exportSubmit.tsx","webpack://koku-ui/./src/pages/views/components/export/exportModal.tsx","webpack://koku-ui/./src/pages/views/components/groupBy/groupBy.styles.ts","webpack://koku-ui/./src/pages/views/components/groupBy/groupByOrg.tsx","webpack://koku-ui/./src/pages/views/components/groupBy/groupByTag.tsx","webpack://koku-ui/./src/pages/views/components/groupBy/groupBy.tsx","webpack://koku-ui/./src/pages/views/details/components/actions/actions.tsx","webpack://koku-ui/./src/pages/views/details/components/breakdown/breakdown.styles.ts","webpack://koku-ui/./src/pages/views/details/components/tag/tag.styles.ts","webpack://koku-ui/./src/pages/views/details/components/tag/tagView.tsx","webpack://koku-ui/./src/pages/views/details/components/tag/tagModal.tsx","webpack://koku-ui/./src/pages/views/details/components/tag/tagLink.tsx","webpack://koku-ui/./src/pages/views/details/components/breakdown/breakdownHeader.styles.ts","webpack://koku-ui/./src/pages/views/details/components/breakdown/breakdownHeader.tsx","webpack://koku-ui/./src/pages/views/details/components/breakdown/breakdownBase.tsx","webpack://koku-ui/./src/pages/views/details/components/cluster/cluster.styles.ts","webpack://koku-ui/./src/pages/views/details/components/cluster/clusterModal.styles.ts","webpack://koku-ui/./src/pages/views/details/components/cluster/clusterView.tsx","webpack://koku-ui/./src/pages/views/details/components/cluster/clusterModal.tsx","webpack://koku-ui/./src/pages/views/details/components/cluster/cluster.tsx","webpack://koku-ui/./src/pages/views/details/components/costChart/costChart.styles.ts","webpack://koku-ui/./src/pages/views/details/components/costChart/costChart.tsx","webpack://koku-ui/./src/pages/views/details/components/summary/summaryModal.styles.ts","webpack://koku-ui/./src/pages/views/details/components/summary/summaryModalView.tsx","webpack://koku-ui/./src/pages/views/details/components/summary/summaryModal.tsx","webpack://koku-ui/./src/pages/views/details/components/summary/summaryCard.styles.ts","webpack://koku-ui/./src/pages/views/details/components/summary/summaryCard.tsx","webpack://koku-ui/./src/pages/views/details/components/usageChart/usageChart.styles.ts","webpack://koku-ui/./src/pages/views/details/components/usageChart/usageChart.tsx","webpack://koku-ui/./src/pages/views/details/components/costOverview/costOverviewBase.tsx","webpack://koku-ui/./src/components/charts/historicalCostChart/historicalCostChart.styles.ts","webpack://koku-ui/./src/components/charts/historicalCostChart/historicalCostChart.tsx","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalChart.styles.ts","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalDataCostChart.tsx","webpack://koku-ui/./src/components/charts/historicalTrendChart/historicalTrendChart.styles.ts","webpack://koku-ui/./src/components/charts/historicalTrendChart/historicalTrendChart.tsx","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalDataTrendChart.tsx","webpack://koku-ui/./src/components/charts/historicalUsageChart/historicalUsageChart.styles.ts","webpack://koku-ui/./src/components/charts/historicalUsageChart/historicalUsageChart.tsx","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalDataUsageChart.tsx","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalDataBase.tsx","webpack://koku-ui/./src/pages/views/details/ocpDetails/detailsHeader.styles.ts","webpack://koku-ui/./src/pages/views/utils/groupBy.ts","webpack://koku-ui/./src/pages/views/utils/paths.ts","webpack://koku-ui/./src/pages/views/utils/query.ts","webpack://koku-ui/./src/testIds.ts","webpack://koku-ui/./src/utils/dateRange.ts","webpack://koku-ui/./src/utils/equal.ts"],"names":["withRouter","title","PageHeader","PageHeaderTitle","Main","Unavailable","ResourceSelectBase","props","super","this","defaultState","createdOptions","isSelectExpanded","state","Object","assign","getOptions","resource","resourceFetchStatus","search","options","data","length","map","item","value","isNaN","account_alias","cluster_alias","key","name","moreOptions","val","getSelectOptions","option","SelectOption","handleOnCreateOption","slice","push","setState","handleOnClear","onSearchChanged","undefined","handleOnFilter","event","handleOnSelect","onSelect","handleOnToggle","isOpen","handleOnTypeaheadInputChanged","bind","prevProps","fetchResource","resourcePathsType","resourceType","query","isDisabled","selectOptions","Select","isCreatable","isInputValuePersisted","onCreateOption","onClear","onFilter","onToggle","onTypeaheadInputChanged","placeholderText","t","typeAheadAriaLabel","variant","SelectVariant","mapStateToProps","queryString","mapDispatchToProps","ResourceSelect","withTranslation","connect","ResourceTypeahead","searchTimeout","noop","handleOnSearch","clearTimeout","setTimeout","currentSearch","styles","export","marginRight","global_spacer_md","toolbarContainer","backgroundColor","global_BackgroundColor_light_100","paddingBottom","paddingTop","marginLeft","global_spacer_lg","defaultFilters","tag","DataToolbarBase","arguments","categoryInput","filters","cloneDeep","isBulkSelectOpen","isCategoryDropdownOpen","isOrgUnitSelectExpanded","isTagValueDropdownOpen","isTagKeySelectExpanded","isTagValueSelectExpanded","tagKeyValueInput","getDefaultCategory","categoryOptions","groupBy","group_by","indexOf","getActiveFilters","filter_by","keys","forEach","values","Array","isArray","substring","onDelete","type","chip","filterType","id","prevState","filter","s","_filterType","onFilterRemoved","getBulkSelect","isAllSelected","isBulkSelectDisabled","itemsPerPage","itemsTotal","selectedItems","numSelected","anySelected","isChecked","dropdownItems","DropdownItem","onClick","handleOnBulkSelectClicked","Dropdown","handleOnBulkSelect","position","DropdownPosition","toggle","DropdownToggle","splitButtonItems","DropdownToggleCheckbox","handleOnBulkSelectToggle","action","onBulkSelected","getCurrentCategoryOption","currentCategory","handleOnCategoryClick","handleOnCategorySelect","currentTagKey","handleOnCategoryToggle","getCategoryInput","categoryOption","ToolbarFilter","categoryName","chips","deleteChip","showToolbarItem","InputGroup","onCategoryInputSelect","TextInput","onChange","handleOnCategoryInputChange","placeholder","onKeyDown","evt","onCategoryInput","Button","ButtonVariant","getDefaultCategoryOptions","trim","prevFilters","includes","onFilterAdded","getOrgUnitSelect","getOrgUnitOptions","toString","compareTo","find","selections","node","className","handleOnOrgUnitToggle","handleOnOrgUnitSelect","description","selection","checked","target","prevSelections","getTagKeySelect","getTagKeyOptions","selectOption","ToolbarItem","handleOnTagKeyClear","handleOnTagKeyToggle","handleOnTagKeySelect","getTagValueSelect","tagKeyOption","getTagValueOptions","onTagValueToggle","onTagValueSelect","onTagValueInputChange","onTagValueInput","getColumnManagement","handleColumnManagementClicked","getExportButton","isExportDisabled","spacer","default","handleExportClicked","onColumnManagementClicked","onExportClicked","orgReport","tagReport","currentOrgUnit","style","width","sortedData","sort","a","b","roots","org","level","filteredOrgs","root","unshift","hasTagKeys","hasOwnProperty","keepData","_a","e","p","prototype","call","getOwnPropertySymbols","i","propertyIsEnumerable","__rest","uniqBy","uniq","Set","dateRange","pagination","showBulkSelect","showColumnManagement","showExport","showFilter","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarContent","ToolbarToggleGroup","breakpoint","toggleIcon","ToolbarGroup","getCategoryDropdown","Boolean","alignment","DataToolbar","form","global_spacer_sm","modal","input","global_spacer_xs","ul","marginBottom","reportType","ExportSubmitBase","stateProps","dispatchProps","fetchReportClicked","getExport","report","reportFetchStatus","getFileName","handleClose","reportPathsType","resolution","timeScope","thisMonth","Date","lastMonth","setMonth","getMonth","currentMonth","format","previousMonth","provider","date","onClose","handleFetchReport","exportReport","testIds","isAllItems","items","newQuery","JSON","parse","stringify","limit","offset","time_scope_value","order_by","perspective","getQueryString","reportError","ExportSubmitConnect","ExportSubmit","resolutionOptions","label","timeScopeOptions","ExportModalBase","handleMonthChange","_","Number","currentTarget","handleResolutionChange","showAggregateType","showTimeScope","sortedItems","orderBy","selectedLabel","Modal","actions","Form","FormGroup","fieldId","index","Radio","isValid","groupItem","ExportModalConnect","ExportModal","groupBySelector","display","alignItems","groupBySelectorLabel","GroupByOrgBase","defaultItem","isGroupByOpen","getCurrentGroupBy","getIdKeyForGroupBy","queryFromRoute","location","groupByKeys","getGroupByItems","handleGroupByClear","currentItem","handleGroupBySelect","onItemClicked","handleGroupByToggle","groupByItems","GroupByOrg","GroupByTagBase","tagKey","GroupByTag","groupByOrgOptions","groupByTagOptions","orgReportType","tagReportType","GroupByBase","isGroupByOrgVisible","isGroupByTagVisible","handleGroupByClick","allOptions","component","fetchOrg","fetchTag","orgQueryString","orgReportPathsType","showOrgs","showTags","tagQueryString","tagReportPathsType","endDate","startDate","tagQuery","start_date","end_date","time_scope_units","tagReportFetchStatus","orgReportFetchStatus","GroupByConnect","GroupBy","DetailsActionsBase","isDropdownOpen","isExportModalOpen","getExportModal","handleExportModalClose","handleExportModalOpen","showPriceListOption","redirectToCostModel","history","source_uuid","KebabToggle","isPlain","DetailsActionsConnect","Actions","content","paddingLeft","paddingRight","dataListHeading","fontWeight","global_FontWeight_bold","groupByHeading","tagLink","tagsContainer","global_spacer_3xl","marginTop","TagViewBase","getDataListItems","result","DataListItem","DataListItemRow","DataListItemCells","dataListCells","DataListCell","groupByValue","dataListItems","DataList","isCompact","TagView","TagModalBase","getTagValueCount","count","nextProps","account","groupByOrgValue","TagModal","TagLinkBase","handleOpen","preventDefault","href","TagLink","cost","global_spacer_xl","costLabel","costValue","textAlign","costLabelDate","fontSize","global_FontSize_sm","color","global_Color_200","header","justifyContent","global_BackgroundColor_100","infoDescription","global_disabled_color_100","global_FontSize_xs","tabs","BreakdownHeaderBase","buildDetailsLink","detailsURL","groupByKey","getTotalCost","hasCost","meta","total","formatValue","units","filterByAccount","groupByOrg","Link","to","Title","headingLevel","size","BreakdownHeader","getIdKeyForTab","tab","BreakdownBase","activeTabKey","getAvailableTabs","contentRef","getTab","Tab","eventKey","tabContentId","tabContentRef","TabTitleText","getTabTitle","getTabContent","availableTabs","TabContent","ref","getTabItem","costOverviewComponent","historicalDataComponent","emptyTab","currentTab","getTabs","Tabs","activeKey","handleTabClick","tabIndex","updateReport","fetchReport","noReport","noLocation","emptyStateTitle","providers","providersFetchStatus","providerType","clustersContainer","height","subTitle","ClusterViewBase","clusters","cluster","ClusterView","ClusterModalBase","ClusterModal","ClusterBase","showAll","charCount","someClusters","allClusters","computedItems","getComputedReportItems","idKey","clusterString","concat","Cluster","chartStyles","chartHeight","chartWidth","chartSkeleton","CostChartBase","getLegendLabel","ChartLabel","text","getSkeleton","Skeleton","skeleton","hasMarkup","markup","hasRaw","raw","hasUsage","usage","markupUnits","rawUnits","usageUnits","markupValue","rawValue","usageValue","markupLabel","rawLabel","usageLabel","LegendLabel","Legend","ChartLegend","gutter","itemsPerRow","labelComponent","dy","lineHeight","rowGutter","ChartPie","ariaDesc","ariaTitle","constrainToVisibleArea","x","y","labels","datum","legendComponent","legendData","legendOrientation","legendPosition","padding","bottom","left","right","top","themeColor","ChartTheme","CostChart","mainContent","SummaryModalViewBase","reportGroupBy","status","_item","formatOptions","totalValue","SummaryModalView","SummaryModalBase","SummaryModal","card","viewAllContainer","SummaryBase","isBulletChartModalOpen","getItems","getSummary","reportItem","getViewAll","findIndex","handleBulletChartModalOpen","ButtonType","handleBulletChartModalClose","Card","CardTitle","CardBody","CardFooter","SummaryCard","capacity","legendSkeleton","UsageChartBase","containerRef","observer","handleResize","clientWidth","current","getCpuChart","chartDatum","getChartDatumWithCapacity","getChartDatum","getFreeSpace","ChartBullet","comparativeErrorMeasureData","tooltip","comparativeErrorMeasureLegendData","legend","getChartHeight","legendItemsPerRow","getItemsPerRow","maxDomain","isDatumEmpty","minDomain","primarySegmentedMeasureData","primarySegmentedMeasureLegendData","qualitativeRangeData","ranges","qualitativeRangeLegendData","hasRange","range","hasTotal","hasLimit","Math","trunc","limitUnits","hasRequest","request","requestUnits","hasCapacity","capacityUnits","unusedRequestCapacity","unusedUsageCapacity","unusedRequestCapacityPercentage","unusedUsageCapacityPercentage","Grid","hasGutter","GridItem","md","lg","percentage","UsageChart","PLACEHOLDER","CostOverviewBase","getClusterChart","widget","showWidget","groupById","showWidgetOnGroupBy","getCostChart","Popover","enableFlip","bodyContent","rel","OutlinedQuestionCircleIcon","getCpuUsageChart","getMemoryUsageChart","getSummaryCard","reportSummary","usePlaceholder","getWidgetsColumns","selectWidgets","widgets","visibleWidgets","widgetId","renderedWidget","renderWidget","rows","floor","leftColumnWidgets","rightColumnWidgets","xl","currentCapacityData","fill","currentColorScale","chart_color_green_400","chart_color_green_300","chart_color_green_200","chart_color_green_100","chart_color_green_500","currentInfrastructureCostData","strokeDasharray","currentCostData","previousCapacityData","previousColorScale","chart_color_blue_100","chart_color_blue_200","chart_color_blue_300","chart_color_blue_400","chart_color_blue_500","previousInfrastructureCostData","previousCostData","yAxis","axisLabel","grid","stroke","ticks","tickLabels","xAxis","chart","HistoricalCostChart","hiddenSeries","initDatum","costKey","costInfrastructureKey","costInfrastructureTooltipKey","costTooltipKey","series","childName","legendItem","symbol","cursorVoronoiContainer","getCursorVoronoiContainer","getChart","ChartArea","has","interpolation","formatDatumValue","formatDatumOptions","CursorVoronoiContainer","cursorDimension","mouseFollowTooltips","voronoiDimension","voronoiPadding","getLegend","handleLegendClick","currentRequestDate","getDate","previousRequestDate","max","chartNames","isHidden","legendName","onLegendClick","adjustContainerHeight","containerHeight","xAxisLabel","yAxisLabel","domain","ge","getEndDate","midDate","adjustedContainerHeight","container","disable","ChartLegendTooltip","i18next","day","Chart","containerComponent","events","getEvents","theme","ChartAxis","C","tickValues","dependentAxis","chartContainer","costChart","trendChart","usageChart","HistoricalDataCostChartBase","currentQueryString","previousQueryString","currentReport","currentReportFetchStatus","previousReport","previousReportFetchStatus","currentData","previousData","costUnits","baseQuery","currentQuery","previousQuery","HistoricalDataCostChart","currentMonthData","previousMonthData","HistoricalTrendChart","showUsageLegendLabel","toolTipKey","previousDate","currentDate","HistoricalDataTrendChartBase","isCostChart","HistoricalDataTrendChart","currentLimitData","currentRequestData","currentUsageData","previousLimitData","previousRequestData","previousUsageData","HistoricalUsageChart","limitKey","limitTooltipKey","requestKey","requestTooltipKey","usageKey","usageTooltipKey","currentUsageDate","previousUsageDate","HistoricalDataUsageChartBase","useFilter","HistoricalDataUsageChart","HistoricalDataBase","getTrendChart","getUsageChart","costLabelUnit","info","verticalAlign","infoIcon","infoTitle","getGroupById","getGroupByValue","getGroupByOrgValue","getGroupByTagKey","groupByTagKey","tagIndex","getBreakdownPath","basePath","getOrgBreakdownPath","orgUnitId","addQueryFilter","filterValue","found","removeQueryFilter","getTestProps","details","cluster_lnk","historical_data_btn","show_more_btn","tag_lnk","view_all_btn","cancel_btn","submit_btn","login","alert","username_input","password_input","submit","masthead","username","sidebarToggle","logout","onboarding","btn_cancel","btn_back","btn_continue","btn_close","type_selector","type_opt_aws","type_opt_ocp","type_opt_non","name_input","check_box_1","check_box_2","s3_input","clusterid_input","arn_input","add_btn","bucket_input","empty_state_add_btn","resource_name_input","cluster_id_input","type_input","sidebar","nav","link","backdrop","getNoDataForDateRangeString","today","setHours","setMinutes","setSeconds","month","getForDateRangeString","getSinceDateRangeString","getCurrentMonthDate","setDate","getMonthDate","getLastDaysDate","getLast30DaysDate","getLast60DaysDate","isEqual","obj1","obj2","split","join"],"mappings":"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","file":"63b03c8e759754d7a10a.bundle.js","sourcesContent":["import NoData from './noData';\nexport default NoData;\n","import Main from '@redhat-cloud-services/frontend-components/Main';\nimport PageHeader, { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Unavailable from '@redhat-cloud-services/frontend-components/Unavailable';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nconst NotAvailable = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(Unavailable, null))));\n};\nexport default withRouter(NotAvailable);\n","import NotAvailable from './notAvailable';\nexport default NotAvailable;\n","import { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { getQuery } from 'api/queries/query';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { resourceActions, resourceSelectors } from 'store/resources';\nclass ResourceSelectBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            createdOptions: [],\n            isSelectExpanded: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getOptions = () => {\n            const { resource, resourceFetchStatus, search } = this.props;\n            const { createdOptions } = this.state;\n            let options = [];\n            if (resource && resource.data && resource.data.length > 0 && resourceFetchStatus !== 1 /* inProgress */) {\n                options = resource.data.map(item => {\n                    const value = !isNaN(search) ? item.value : item.account_alias || item.cluster_alias || item.value;\n                    return {\n                        key: value,\n                        name: value,\n                    };\n                });\n            }\n            if (createdOptions && createdOptions.length) {\n                const moreOptions = createdOptions.map(val => {\n                    return {\n                        key: val,\n                        name: val,\n                    };\n                });\n                options = [...options, ...moreOptions];\n            }\n            return options;\n        };\n        this.getSelectOptions = () => {\n            const options = this.getOptions();\n            return options.map(option => {\n                return React.createElement(SelectOption, { key: option.key, value: option.key });\n            });\n        };\n        this.handleOnCreateOption = value => {\n            const { createdOptions } = this.state;\n            let options = [...createdOptions];\n            if (options.length > 4) {\n                options = options.slice(1, options.length);\n            }\n            options.push(value);\n            this.setState({\n                createdOptions: options,\n            });\n        };\n        this.handleOnClear = () => {\n            const { onSearchChanged } = this.props;\n            if (onSearchChanged) {\n                onSearchChanged(undefined);\n            }\n            this.setState({\n                isSelectExpanded: false,\n            });\n        };\n        this.handleOnFilter = event => {\n            if (event === null) {\n                return null;\n            }\n            return this.getSelectOptions();\n        };\n        this.handleOnSelect = (event, value) => {\n            const { onSelect } = this.props;\n            if (onSelect) {\n                onSelect(value);\n            }\n            this.setState({\n                isSelectExpanded: !this.state.isSelectExpanded,\n            });\n        };\n        this.handleOnToggle = isOpen => {\n            this.setState({\n                isSelectExpanded: isOpen,\n            });\n        };\n        this.handleOnTypeaheadInputChanged = value => {\n            const { onSearchChanged } = this.props;\n            onSearchChanged(value);\n        };\n        this.handleOnClear = this.handleOnClear.bind(this);\n        this.handleOnCreateOption = this.handleOnCreateOption.bind(this);\n        this.handleOnFilter = this.handleOnFilter.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnTypeaheadInputChanged = this.handleOnTypeaheadInputChanged.bind(this);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchResource, resourceFetchStatus, resourcePathsType, resourceType, search } = this.props;\n        if (search && prevProps.search !== search && resourceFetchStatus !== 1 /* inProgress */) {\n            const query = {\n                search,\n            };\n            const queryString = getQuery(query);\n            fetchResource(resourcePathsType, resourceType, queryString);\n        }\n    }\n    render() {\n        const { isDisabled, t, resourceType } = this.props;\n        const { isSelectExpanded } = this.state;\n        const selectOptions = this.getSelectOptions();\n        return (React.createElement(Select, { isCreatable: true, isDisabled: isDisabled, isInputValuePersisted: false, isOpen: isSelectExpanded, onCreateOption: this.handleOnCreateOption, onClear: this.handleOnClear, onFilter: this.handleOnFilter, onSelect: this.handleOnSelect, onToggle: this.handleOnToggle, onTypeaheadInputChanged: this.handleOnTypeaheadInputChanged, placeholderText: t(`filter_by.${resourceType}.placeholder`), typeAheadAriaLabel: t(`filter_by.${resourceType}.aria_label`), variant: SelectVariant.typeahead }, selectOptions));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { resourcePathsType, resourceType, search }) => {\n    const query = {\n        search,\n    };\n    const queryString = getQuery(query);\n    const resource = resourceSelectors.selectResource(state, resourcePathsType, resourceType, queryString);\n    const resourceFetchStatus = resourceSelectors.selectResourceFetchStatus(state, resourcePathsType, resourceType, queryString);\n    return {\n        resource,\n        resourceFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchResource: resourceActions.fetchResource,\n};\nconst ResourceSelect = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(ResourceSelectBase));\nexport { ResourceSelect };\n","import React from 'react';\nimport { noop } from 'utils/noop';\nimport { ResourceSelect } from './resourceSelect';\nexport class ResourceTypeahead extends React.Component {\n    constructor(props) {\n        super(props);\n        this.searchTimeout = noop;\n        this.defaultState = {\n        // TBD ...\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleOnSearch = (value) => {\n            clearTimeout(this.searchTimeout);\n            this.searchTimeout = setTimeout(() => {\n                this.setState({\n                    currentSearch: value,\n                });\n            }, 750);\n        };\n        this.handleOnSelect = (value) => {\n            const { onSelect } = this.props;\n            if (onSelect) {\n                onSelect(value);\n            }\n            this.setState({\n                currentSearch: undefined,\n            });\n        };\n        this.handleOnSearch = this.handleOnSearch.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { isDisabled, resourcePathsType, resourceType } = this.props;\n        const { currentSearch } = this.state;\n        return (React.createElement(ResourceSelect, { isDisabled: isDisabled, onSearchChanged: this.handleOnSearch, onSelect: this.handleOnSelect, resourcePathsType: resourcePathsType, resourceType: resourceType, search: currentSearch }));\n    }\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    export: {\n        marginRight: global_spacer_md.value,\n    },\n    toolbarContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport './dataToolbar.scss';\nimport { Button, ButtonVariant, Dropdown, DropdownItem, DropdownPosition, DropdownToggle, DropdownToggleCheckbox, InputGroup, Select, SelectOption, SelectVariant, TextInput, Toolbar, ToolbarContent, ToolbarFilter, ToolbarGroup, ToolbarItem, ToolbarToggleGroup, } from '@patternfly/react-core';\nimport { ExportIcon } from '@patternfly/react-icons/dist/js/icons/export-icon';\nimport { FilterIcon } from '@patternfly/react-icons/dist/js/icons/filter-icon';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport { orgUnitIdKey, orgUnitNameKey, tagKey, tagPrefix } from 'api/queries/query';\nimport { isResourceTypeValid } from 'api/resources/resourceUtils';\nimport { cloneDeep } from 'lodash';\nimport { uniq, uniqBy } from 'lodash';\nimport { ResourceTypeahead } from 'pages/views/components/resourceTypeahead/resourceTypeahead';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { isEqual } from 'utils/equal';\nimport { styles } from './dataToolbar.styles';\nconst defaultFilters = {\n    tag: {},\n};\n// If the number of tag keys are greater or equal, then show text input Vs select\n// See https://github.com/project-koku/koku/pull/2069\nconst tagKeyValueLimit = 50;\nexport class DataToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            categoryInput: '',\n            filters: cloneDeep(defaultFilters),\n            isBulkSelectOpen: false,\n            isCategoryDropdownOpen: false,\n            isOrgUnitSelectExpanded: false,\n            isTagValueDropdownOpen: false,\n            isTagKeySelectExpanded: false,\n            isTagValueSelectExpanded: false,\n            tagKeyValueInput: '',\n        };\n        this.state = Object.assign({}, this.defaultState);\n        // Initialize\n        this.getDefaultCategory = () => {\n            const { categoryOptions, groupBy, query } = this.props;\n            if (!categoryOptions) {\n                return 'name';\n            }\n            if (query && query.group_by && query.group_by[orgUnitIdKey]) {\n                return orgUnitIdKey;\n            }\n            for (const option of categoryOptions) {\n                if (groupBy === option.key || (groupBy && groupBy.indexOf(tagPrefix) !== -1 && option.key === tagKey)) {\n                    return option.key;\n                }\n            }\n            return categoryOptions[0].key;\n        };\n        this.getActiveFilters = query => {\n            const filters = cloneDeep(defaultFilters);\n            if (query && query.filter_by) {\n                Object.keys(query.filter_by).forEach(key => {\n                    const values = Array.isArray(query.filter_by[key]) ? [...query.filter_by[key]] : [query.filter_by[key]];\n                    if (key.indexOf(tagPrefix) !== -1) {\n                        filters.tag[key.substring(tagPrefix.length)] = values;\n                    }\n                    else {\n                        filters[key] = values;\n                    }\n                });\n            }\n            return filters;\n        };\n        this.onDelete = (type, chip) => {\n            // Todo: workaround for https://github.com/patternfly/patternfly-react/issues/3552\n            // This prevents us from using a localized string, if necessary\n            const filterType = type && type.key ? type.key : type;\n            const id = chip && chip.key ? chip.key : chip;\n            if (filterType) {\n                this.setState((prevState) => {\n                    if (prevState.filters.tag[filterType]) {\n                        // Todo: use ID\n                        prevState.filters.tag[filterType] = prevState.filters.tag[filterType].filter(s => s !== id);\n                    }\n                    else if (prevState.filters[filterType]) {\n                        prevState.filters[filterType] = prevState.filters[filterType].filter(s => s !== id);\n                    }\n                    return {\n                        filters: prevState.filters,\n                    };\n                }, () => {\n                    const { filters } = this.state;\n                    const _filterType = filters.tag[filterType] ? `${tagPrefix}${filterType}` : filterType; // Todo: use ID\n                    this.props.onFilterRemoved(_filterType, id);\n                });\n            }\n            else {\n                this.setState({\n                    filters: cloneDeep(defaultFilters),\n                }, () => {\n                    this.props.onFilterRemoved(null); // Clear all\n                });\n            }\n        };\n        // Bulk select\n        this.getBulkSelect = () => {\n            const { isAllSelected, isBulkSelectDisabled, isDisabled, itemsPerPage, itemsTotal, selectedItems, t } = this.props;\n            const { isBulkSelectOpen } = this.state;\n            const numSelected = isAllSelected ? itemsTotal : selectedItems ? selectedItems.length : 0;\n            const allSelected = (isAllSelected || numSelected === itemsTotal) && itemsTotal > 0;\n            const anySelected = numSelected > 0;\n            const someChecked = anySelected ? null : false;\n            const isChecked = allSelected ? true : someChecked;\n            const dropdownItems = [\n                React.createElement(DropdownItem, { key: \"item-1\", onClick: () => this.handleOnBulkSelectClicked('none') }, t('toolbar.bulk_select.select_none')),\n                React.createElement(DropdownItem, { key: \"item-2\", onClick: () => this.handleOnBulkSelectClicked('page') }, t('toolbar.bulk_select.select_page', {\n                    value: itemsPerPage,\n                })),\n                React.createElement(DropdownItem, { key: \"item-3\", onClick: () => this.handleOnBulkSelectClicked('all') }, t('toolbar.bulk_select.select_all', { value: itemsTotal })),\n            ];\n            return (React.createElement(Dropdown, { onSelect: this.handleOnBulkSelect, position: DropdownPosition.left, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled || isBulkSelectDisabled, splitButtonItems: [\n                        React.createElement(DropdownToggleCheckbox, { id: \"bulk-select\", key: \"bulk-select\", \"aria-label\": anySelected ? t('toolbar.bulk_select.aria_deselect') : t('toolbar.bulk_select.aria_select'), isChecked: isChecked, onClick: () => {\n                                anySelected ? this.handleOnBulkSelectClicked('none') : this.handleOnBulkSelectClicked('all');\n                            } }),\n                    ], onToggle: this.handleOnBulkSelectToggle }, numSelected !== 0 && React.createElement(React.Fragment, null,\n                    numSelected,\n                    \" selected\")), isOpen: isBulkSelectOpen, dropdownItems: dropdownItems }));\n        };\n        this.handleOnBulkSelectClicked = (action) => {\n            const { onBulkSelected } = this.props;\n            if (onBulkSelected) {\n                onBulkSelected(action);\n            }\n        };\n        this.handleOnBulkSelect = () => {\n            this.setState({\n                isBulkSelectOpen: !this.state.isBulkSelectOpen,\n            });\n        };\n        this.handleOnBulkSelectToggle = isOpen => {\n            this.setState({\n                isBulkSelectOpen: isOpen,\n            });\n        };\n        this.getCurrentCategoryOption = () => {\n            const { categoryOptions } = this.props;\n            const { currentCategory } = this.state;\n            if (!categoryOptions) {\n                return undefined;\n            }\n            for (const option of categoryOptions) {\n                if (currentCategory === option.key) {\n                    return option;\n                }\n            }\n            return categoryOptions[0];\n        };\n        this.handleOnCategoryClick = value => {\n            this.setState({\n                currentCategory: value,\n            });\n        };\n        this.handleOnCategorySelect = () => {\n            this.setState({\n                categoryInput: '',\n                currentTagKey: undefined,\n                isCategoryDropdownOpen: !this.state.isCategoryDropdownOpen,\n            });\n        };\n        this.handleOnCategoryToggle = isOpen => {\n            this.setState({\n                isCategoryDropdownOpen: isOpen,\n            });\n        };\n        // Category input\n        this.getCategoryInput = categoryOption => {\n            const { isDisabled, resourcePathsType, t } = this.props;\n            const { currentCategory, filters, categoryInput } = this.state;\n            return (React.createElement(ToolbarFilter, { categoryName: categoryOption, chips: filters[categoryOption.key], deleteChip: this.onDelete, key: categoryOption.key, showToolbarItem: currentCategory === categoryOption.key },\n                React.createElement(InputGroup, null, isResourceTypeValid(resourcePathsType, categoryOption.key) ? (React.createElement(ResourceTypeahead, { isDisabled: isDisabled, onSelect: value => this.onCategoryInputSelect(value, categoryOption.key), resourcePathsType: resourcePathsType, resourceType: categoryOption.key })) : (React.createElement(React.Fragment, null,\n                    React.createElement(TextInput, { isDisabled: isDisabled, name: `${categoryOption.key}-input`, id: `${categoryOption.key}-input`, type: \"search\", \"aria-label\": t(`filter_by.${categoryOption.key}.input_aria_label`), onChange: this.handleOnCategoryInputChange, value: categoryInput, placeholder: t(`filter_by.${categoryOption.key}.placeholder`), onKeyDown: evt => this.onCategoryInput(evt, categoryOption.key) }),\n                    React.createElement(Button, { isDisabled: isDisabled, variant: ButtonVariant.control, \"aria-label\": t(`filter_by.${categoryOption.key}.button_aria_label`), onClick: evt => this.onCategoryInput(evt, categoryOption.key) },\n                        React.createElement(SearchIcon, null)))))));\n        };\n        this.getDefaultCategoryOptions = () => {\n            const { t } = this.props;\n            return [{ name: t('filter_by.values.name'), key: 'name' }];\n        };\n        this.handleOnCategoryInputChange = (value) => {\n            this.setState({ categoryInput: value });\n        };\n        this.onCategoryInput = (event, key) => {\n            const { categoryInput, currentCategory } = this.state;\n            if ((event && event.key && event.key !== 'Enter') || categoryInput.trim() === '') {\n                return;\n            }\n            this.setState((prevState) => {\n                const prevFilters = prevState.filters[key];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { [currentCategory]: prevFilters && prevFilters.includes(categoryInput)\n                            ? prevFilters\n                            : prevFilters\n                                ? [...prevFilters, categoryInput]\n                                : [categoryInput] }),\n                    categoryInput: '',\n                };\n            }, () => {\n                this.props.onFilterAdded(currentCategory, categoryInput);\n            });\n        };\n        this.onCategoryInputSelect = (value, key) => {\n            const { currentCategory } = this.state;\n            this.setState((prevState) => {\n                const prevFilters = prevState.filters[key];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { [currentCategory]: prevFilters && prevFilters.includes(value)\n                            ? prevFilters\n                            : prevFilters\n                                ? [...prevFilters, value]\n                                : [value] }),\n                    categoryInput: '',\n                };\n            }, () => {\n                this.props.onFilterAdded(currentCategory, value);\n            });\n        };\n        // Org unit select\n        this.getOrgUnitSelect = () => {\n            const { isDisabled, t } = this.props;\n            const { currentCategory, filters, isOrgUnitSelectExpanded } = this.state;\n            const options = this.getOrgUnitOptions().map(option => ({\n                id: option.key,\n                toString: () => option.name,\n                compareTo: value => filters[orgUnitIdKey] ? filters[orgUnitIdKey].find(val => val === value.id) : false,\n            }));\n            const chips = []; // Get selected items as PatternFly's ToolbarChip type\n            const selections = []; // Select options and selections must be same type\n            if (filters[orgUnitIdKey] && Array.isArray(filters[orgUnitIdKey])) {\n                filters[orgUnitIdKey].map(id => {\n                    const option = options.find(val => val.id === id);\n                    if (option) {\n                        selections.push(option);\n                        chips.push({\n                            key: option.id,\n                            node: option.toString(),\n                        });\n                    }\n                });\n            }\n            // Todo: selectOverride is a workaround for https://github.com/patternfly/patternfly-react/issues/4477\n            return (React.createElement(ToolbarFilter, { categoryName: {\n                    key: orgUnitIdKey,\n                    name: t('filter_by.values.org_unit_id'),\n                }, chips: chips, deleteChip: this.onDelete, key: orgUnitIdKey, showToolbarItem: currentCategory === orgUnitIdKey },\n                React.createElement(Select, { isDisabled: isDisabled, className: \"selectOverride\", variant: SelectVariant.checkbox, \"aria-label\": t('filter_by.org_unit.aria_label'), onToggle: this.handleOnOrgUnitToggle, onSelect: this.handleOnOrgUnitSelect, selections: selections, isOpen: isOrgUnitSelectExpanded, placeholderText: t('filter_by.org_unit.placeholder') }, options.map(option => (React.createElement(SelectOption, { description: option.id, key: option.id, value: option }))))));\n        };\n        this.handleOnOrgUnitSelect = (event, selection) => {\n            const checked = event.target.checked;\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters[orgUnitIdKey] ? prevState.filters[orgUnitIdKey] : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign({}, prevState.filters.tag), [orgUnitIdKey]: checked\n                            ? [...prevSelections, selection.id]\n                            : prevSelections.filter(value => value !== selection.id) }),\n                };\n            }, () => {\n                if (checked) {\n                    this.props.onFilterAdded(orgUnitIdKey, selection.id);\n                }\n                else {\n                    this.onDelete(orgUnitIdKey, selection.id);\n                }\n            });\n        };\n        this.handleOnOrgUnitToggle = isOpen => {\n            this.setState({\n                isOrgUnitSelectExpanded: isOpen,\n            });\n        };\n        // Tag key select\n        this.getTagKeySelect = () => {\n            const { isDisabled, t } = this.props;\n            const { currentCategory, currentTagKey, isTagKeySelectExpanded } = this.state;\n            if (currentCategory !== tagKey) {\n                return null;\n            }\n            const selectOptions = this.getTagKeyOptions().map(selectOption => {\n                return React.createElement(SelectOption, { key: selectOption.key, value: selectOption.key });\n            });\n            return (React.createElement(ToolbarItem, null,\n                React.createElement(Select, { isDisabled: isDisabled, variant: SelectVariant.typeahead, typeAheadAriaLabel: t('filter_by.tag_key.aria_label'), onClear: this.handleOnTagKeyClear, onToggle: this.handleOnTagKeyToggle, onSelect: this.handleOnTagKeySelect, isOpen: isTagKeySelectExpanded, placeholderText: t('filter_by.tag_key.placeholder'), selections: currentTagKey }, selectOptions)));\n        };\n        this.handleOnTagKeyClear = () => {\n            this.setState({\n                currentTagKey: undefined,\n                isTagKeySelectExpanded: false,\n            });\n        };\n        this.handleOnTagKeySelect = (event, selection) => {\n            this.setState({\n                currentTagKey: selection,\n                isTagKeySelectExpanded: !this.state.isTagKeySelectExpanded,\n            });\n        };\n        this.handleOnTagKeyToggle = isOpen => {\n            this.setState({\n                isTagKeySelectExpanded: isOpen,\n            });\n        };\n        // Tag value select\n        this.getTagValueSelect = tagKeyOption => {\n            const { isDisabled, t } = this.props;\n            const { currentCategory, currentTagKey, filters, isTagValueSelectExpanded, tagKeyValueInput } = this.state;\n            const selectOptions = this.getTagValueOptions().map(selectOption => {\n                return React.createElement(SelectOption, { key: selectOption.key, value: selectOption.key });\n            });\n            return (React.createElement(ToolbarFilter, { categoryName: tagKeyOption, chips: filters.tag[tagKeyOption.key], deleteChip: this.onDelete, key: tagKeyOption.key, showToolbarItem: currentCategory === tagKey && currentTagKey === tagKeyOption.key }, selectOptions.length < tagKeyValueLimit ? (React.createElement(Select, { isDisabled: isDisabled, variant: SelectVariant.checkbox, \"aria-label\": t('filter_by.tag_value.aria_label'), onToggle: this.onTagValueToggle, onSelect: this.onTagValueSelect, selections: filters.tag[tagKeyOption.key] ? filters.tag[tagKeyOption.key] : [], isOpen: isTagValueSelectExpanded, placeholderText: t('filter_by.tag_value.placeholder') }, selectOptions)) : (React.createElement(InputGroup, null,\n                React.createElement(TextInput, { isDisabled: isDisabled, name: \"tagkeyvalue-input\", id: \"tagkeyvalue-input\", type: \"search\", \"aria-label\": t('filter_by.tag_value.aria_label'), onChange: this.onTagValueInputChange, value: tagKeyValueInput, placeholder: t('filter_by.tag_value.input_placeholder'), onKeyDown: evt => this.onTagValueInput(evt) }),\n                React.createElement(Button, { isDisabled: isDisabled, variant: ButtonVariant.control, \"aria-label\": t('filter_by.tag_value.button_aria_label'), onClick: evt => this.onTagValueInput(evt) },\n                    React.createElement(SearchIcon, null))))));\n        };\n        this.onTagValueInputChange = value => {\n            this.setState({ tagKeyValueInput: value });\n        };\n        this.onTagValueInput = event => {\n            const { currentTagKey, tagKeyValueInput } = this.state;\n            if ((event.key && event.key !== 'Enter') || tagKeyValueInput.trim() === '') {\n                return;\n            }\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters.tag[currentTagKey] ? prevState.filters.tag[currentTagKey] : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign(Object.assign({}, prevState.filters.tag), { [currentTagKey]: [...prevSelections, tagKeyValueInput] }) }),\n                    tagKeyValueInput: '',\n                };\n            }, () => {\n                this.props.onFilterAdded(`${tagPrefix}${currentTagKey}`, tagKeyValueInput);\n            });\n        };\n        this.onTagValueSelect = (event, selection) => {\n            const { currentTagKey } = this.state;\n            const checked = event.target.checked;\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters.tag[currentTagKey] ? prevState.filters.tag[currentTagKey] : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign(Object.assign({}, prevState.filters.tag), { [currentTagKey]: checked\n                                ? [...prevSelections, selection]\n                                : prevSelections.filter(value => value !== selection) }) }),\n                };\n            }, () => {\n                if (checked) {\n                    this.props.onFilterAdded(`${tagPrefix}${currentTagKey}`, selection);\n                }\n                else {\n                    this.onDelete(currentTagKey, selection);\n                }\n            });\n        };\n        this.onTagValueToggle = isOpen => {\n            this.setState({\n                isTagValueSelectExpanded: isOpen,\n            });\n        };\n        // Column management\n        this.getColumnManagement = () => {\n            const { t } = this.props;\n            return (React.createElement(ToolbarItem, null,\n                React.createElement(Button, { onClick: this.handleColumnManagementClicked, variant: ButtonVariant.link }, t('details.column_management.title'))));\n        };\n        // Export button\n        this.getExportButton = () => {\n            const { isDisabled, isExportDisabled } = this.props;\n            return (React.createElement(ToolbarItem, { spacer: {\n                    default: 'spacerNone',\n                } },\n                React.createElement(Button, { isDisabled: isDisabled || isExportDisabled, onClick: this.handleExportClicked, variant: ButtonVariant.plain },\n                    React.createElement(ExportIcon, null))));\n        };\n        this.handleColumnManagementClicked = () => {\n            this.props.onColumnManagementClicked();\n        };\n        this.handleExportClicked = () => {\n            this.props.onExportClicked();\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            currentCategory: this.getDefaultCategory(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { categoryOptions, groupBy, orgReport, query, tagReport } = this.props;\n        if (categoryOptions !== prevProps.categoryOptions ||\n            groupBy !== prevProps.groupBy ||\n            (query && !isEqual(query, prevProps.query)) ||\n            (orgReport && !isEqual(orgReport, prevProps.orgReport)) ||\n            (tagReport && !isEqual(tagReport, prevProps.tagReport))) {\n            this.setState(() => {\n                const filters = this.getActiveFilters(query);\n                return categoryOptions !== prevProps.categoryOptions || prevProps.groupBy !== groupBy\n                    ? {\n                        categoryInput: '',\n                        currentCategory: this.getDefaultCategory(),\n                        currentOrgUnit: '',\n                        currentTagKey: '',\n                        tagKeyValueInput: '',\n                        filters,\n                    }\n                    : {\n                        filters,\n                    };\n            });\n        }\n    }\n    // Category dropdown\n    getCategoryDropdown() {\n        const { categoryOptions, isDisabled } = this.props;\n        const { isCategoryDropdownOpen } = this.state;\n        if (!categoryOptions) {\n            return null;\n        }\n        return (React.createElement(ToolbarItem, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnCategorySelect, position: DropdownPosition.left, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled, onToggle: this.handleOnCategoryToggle, style: { width: '100%' } },\n                    React.createElement(FilterIcon, null),\n                    \" \",\n                    this.getCurrentCategoryOption().name), isOpen: isCategoryDropdownOpen, dropdownItems: categoryOptions &&\n                    categoryOptions.map(option => (React.createElement(DropdownItem, { key: option.key, onClick: () => this.handleOnCategoryClick(option.key) }, option.name))), style: { width: '100%' } })));\n    }\n    getOrgUnitOptions() {\n        const { orgReport } = this.props;\n        let options = [];\n        if (!(orgReport && orgReport.data)) {\n            return options;\n        }\n        // Sort all names first\n        const sortedData = orgReport.data.sort((a, b) => {\n            if (a[orgUnitNameKey] < b[orgUnitNameKey]) {\n                return -1;\n            }\n            if (a[orgUnitNameKey] > b[orgUnitNameKey]) {\n                return 1;\n            }\n            return 0;\n        });\n        // Move roots first\n        const roots = sortedData.filter(org => org.level === 0);\n        const filteredOrgs = sortedData.filter(org => org.level !== 0);\n        roots.map(root => {\n            const item = sortedData.find(org => org[orgUnitIdKey] === root[orgUnitIdKey]);\n            filteredOrgs.unshift(item);\n        });\n        if (filteredOrgs.length > 0) {\n            options = filteredOrgs.map(org => {\n                return {\n                    key: org[orgUnitIdKey],\n                    name: org[orgUnitNameKey],\n                };\n            });\n        }\n        return options;\n    }\n    getTagKeyOptions() {\n        const { tagReport } = this.props;\n        let data = [];\n        let options = [];\n        if (!(tagReport && tagReport.data)) {\n            return options;\n        }\n        // If the key_only param is used, we have an array of strings\n        let hasTagKeys = false;\n        for (const item of tagReport.data) {\n            if (item.hasOwnProperty('key')) {\n                hasTagKeys = true;\n                break;\n            }\n        }\n        // Workaround for https://github.com/project-koku/koku/issues/1797\n        if (hasTagKeys) {\n            const keepData = tagReport.data.map(\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            (_a) => {\n                var { type } = _a, keepProps = __rest(_a, [\"type\"]);\n                return keepProps;\n            });\n            data = uniqBy(keepData, 'key');\n        }\n        else {\n            data = uniq(tagReport.data);\n        }\n        if (data.length > 0) {\n            options = data.map(item => {\n                const key = hasTagKeys ? item.key : item;\n                return {\n                    key,\n                    name: key,\n                };\n            });\n        }\n        return options;\n    }\n    getTagValueOptions() {\n        const { tagReport } = this.props;\n        const { currentTagKey } = this.state;\n        let data = [];\n        if (tagReport && tagReport.data) {\n            data = [...new Set([...tagReport.data])]; // prune duplicates\n        }\n        let options = [];\n        if (data.length > 0) {\n            for (const tag of data) {\n                if (currentTagKey === tag.key && tag.values) {\n                    options = tag.values.map(val => {\n                        return {\n                            key: val,\n                            name: val,\n                        };\n                    });\n                    break;\n                }\n            }\n        }\n        return options;\n    }\n    render() {\n        const { categoryOptions, dateRange, pagination, showBulkSelect, showColumnManagement, showExport, showFilter, style, } = this.props;\n        const options = categoryOptions ? categoryOptions : this.getDefaultCategoryOptions();\n        // Todo: clearAllFilters workaround https://github.com/patternfly/patternfly-react/issues/4222\n        return (React.createElement(\"div\", { style: style ? style : styles.toolbarContainer },\n            React.createElement(Toolbar, { id: \"details-toolbar\", clearAllFilters: this.onDelete, collapseListedFiltersBreakpoint: \"xl\" },\n                React.createElement(ToolbarContent, null,\n                    React.createElement(ToolbarToggleGroup, { breakpoint: \"xl\", toggleIcon: React.createElement(FilterIcon, null) },\n                        showBulkSelect && React.createElement(ToolbarItem, { variant: \"bulk-select\" }, this.getBulkSelect()),\n                        showFilter && (React.createElement(ToolbarGroup, { variant: \"filter-group\" },\n                            this.getCategoryDropdown(),\n                            this.getTagKeySelect(),\n                            this.getTagKeyOptions().map(option => this.getTagValueSelect(option)),\n                            this.getOrgUnitSelect(),\n                            options &&\n                                options\n                                    .filter(option => option.key !== tagKey && option.key !== orgUnitIdKey)\n                                    .map(option => this.getCategoryInput(option)))),\n                        (Boolean(showExport) || Boolean(showColumnManagement)) && (React.createElement(ToolbarGroup, null,\n                            Boolean(showExport) && this.getExportButton(),\n                            Boolean(showColumnManagement) && this.getColumnManagement())),\n                        dateRange && React.createElement(ToolbarGroup, null, dateRange)),\n                    React.createElement(ToolbarItem, { alignment: { default: 'alignRight' }, variant: \"pagination\" }, pagination)))));\n    }\n}\nconst DataToolbar = withTranslation()(DataToolbarBase);\nexport { DataToolbar };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    form: {\n        marginLeft: global_spacer_sm.var,\n    },\n    modal: {\n        input: {\n            marginRight: global_spacer_xs.var,\n        },\n        ul: {\n            marginLeft: global_spacer_sm.var,\n        },\n    },\n    title: {\n        marginBottom: global_spacer_md.var,\n    },\n};\n","import { Button, ButtonVariant } from '@patternfly/react-core';\nimport { getQuery, orgUnitIdKey } from 'api/queries/query';\nimport { format } from 'date-fns';\nimport fileDownload from 'js-file-download';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { exportActions, exportSelectors } from 'store/exports';\nimport { getTestProps, testIds } from 'testIds';\nconst reportType = \"cost\" /* cost */;\nexport class ExportSubmitBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            fetchReportClicked: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExport = () => {\n            const { report, reportFetchStatus } = this.props;\n            if (report && reportFetchStatus === 2 /* complete */) {\n                fileDownload(report.data, this.getFileName(), 'text/csv');\n                this.handleClose();\n            }\n        };\n        this.getFileName = () => {\n            const { groupBy, reportPathsType, resolution, t, timeScope } = this.props;\n            const thisMonth = new Date();\n            const lastMonth = new Date().setMonth(thisMonth.getMonth() - 1);\n            const currentMonth = format(thisMonth, 'MMMM_yyyy');\n            const previousMonth = format(lastMonth - 1, 'MMMM_yyyy');\n            const fileName = t('export.file.name', {\n                provider: reportPathsType,\n                groupBy,\n                resolution,\n                date: timeScope && timeScope === -2 ? previousMonth : currentMonth,\n            });\n            return `${fileName}.csv`;\n        };\n        this.handleClose = () => {\n            this.setState(Object.assign({}, this.defaultState), () => {\n                this.props.onClose(false);\n            });\n        };\n        this.handleFetchReport = () => {\n            const { exportReport, queryString, reportPathsType } = this.props;\n            exportReport(reportPathsType, reportType, queryString);\n            this.setState({\n                fetchReportClicked: true,\n            }, () => {\n                this.getExport();\n            });\n        };\n    }\n    componentDidUpdate(prevProps) {\n        const { report } = this.props;\n        const { fetchReportClicked } = this.state;\n        if (prevProps.report !== report && fetchReportClicked) {\n            this.getExport();\n        }\n    }\n    render() {\n        const { reportFetchStatus, t } = this.props;\n        return (React.createElement(Button, Object.assign({}, getTestProps(testIds.export.submit_btn), { isDisabled: reportFetchStatus === 1 /* inProgress */, key: \"confirm\", onClick: this.handleFetchReport, variant: ButtonVariant.primary }), t('export.confirm')));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const { groupBy, isAllItems, items, query, reportPathsType, resolution, timeScope } = props;\n    const getQueryString = () => {\n        const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { filter: {\n                limit: undefined,\n                offset: undefined,\n                resolution: resolution ? resolution : undefined,\n                time_scope_value: timeScope ? timeScope : undefined,\n            }, filter_by: {}, order_by: undefined, perspective: undefined, dateRange: undefined });\n        // Store filter_by as an array so we can add to it below\n        if (query.filter_by) {\n            for (const key of Object.keys(query.filter_by)) {\n                if (newQuery.filter_by[key] === undefined) {\n                    newQuery.filter_by[key] = [];\n                }\n                newQuery.filter_by[key].push(query.filter_by[key]);\n            }\n        }\n        if (isAllItems) {\n            // Ensure group_by isn't overridden -- org_unit_id is not unique\n            if (groupBy === orgUnitIdKey) {\n                if (newQuery.filter_by[orgUnitIdKey] === undefined) {\n                    newQuery.filter_by[orgUnitIdKey] = [];\n                }\n                newQuery.filter_by[orgUnitIdKey].push(query.group_by[orgUnitIdKey]);\n            }\n        }\n        else {\n            if (groupBy === orgUnitIdKey) {\n                for (const item of items) {\n                    // Note that type only exists when grouping by org units\n                    const type = item.type === 'organizational_unit' ? orgUnitIdKey : item.type;\n                    if (newQuery.filter_by[type] === undefined) {\n                        newQuery.filter_by[type] = [];\n                    }\n                    newQuery.filter_by[type].push(item.id);\n                }\n            }\n            else {\n                for (const item of items) {\n                    if (newQuery.filter_by[groupBy] === undefined) {\n                        newQuery.filter_by[groupBy] = [];\n                    }\n                    newQuery.filter_by[groupBy].push(item.id);\n                }\n            }\n        }\n        return getQuery(newQuery);\n    };\n    const queryString = getQueryString();\n    const report = exportSelectors.selectExport(state, reportPathsType, reportType, queryString);\n    const reportError = exportSelectors.selectExportError(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = exportSelectors.selectExportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportError,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    exportReport: exportActions.exportReport,\n};\nconst ExportSubmitConnect = connect(mapStateToProps, mapDispatchToProps)(ExportSubmitBase);\nconst ExportSubmit = withTranslation()(ExportSubmitConnect);\nexport { ExportSubmit };\n","import { Button, ButtonVariant, Form, FormGroup, Modal, Radio } from '@patternfly/react-core';\nimport { tagPrefix } from 'api/queries/query';\nimport { format } from 'date-fns';\nimport { orderBy } from 'lodash';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { exportActions } from 'store/exports';\nimport { getTestProps, testIds } from 'testIds';\nimport { styles } from './exportModal.styles';\nimport { ExportSubmit } from './exportSubmit';\nconst resolutionOptions = [\n    { label: 'export.resolution_daily', value: 'daily' },\n    { label: 'export.resolution_monthly', value: 'monthly' },\n];\nconst timeScopeOptions = [\n    { label: 'export.time_scope_current', value: -1 },\n    { label: 'export.time_scope_previous', value: -2 },\n];\nexport class ExportModalBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            timeScope: -1,\n            resolution: this.props.resolution || 'monthly',\n        };\n        this.state = Object.assign({}, this.defaultState);\n        // Reset defult state upon close -- see https://issues.redhat.com/browse/COST-1134\n        this.handleClose = () => {\n            this.setState(Object.assign({}, this.defaultState), () => {\n                this.props.onClose(false);\n            });\n        };\n        this.handleMonthChange = (_, event) => {\n            this.setState({ timeScope: Number(event.currentTarget.value) });\n        };\n        this.handleResolutionChange = (_, event) => {\n            this.setState({ resolution: event.currentTarget.value });\n        };\n        this.handleMonthChange = this.handleMonthChange.bind(this);\n        this.handleResolutionChange = this.handleResolutionChange.bind(this);\n    }\n    render() {\n        const { groupBy, isAllItems, items, query, reportPathsType, showAggregateType = true, showTimeScope = true, t, } = this.props;\n        const { resolution, timeScope } = this.state;\n        let sortedItems = [...items];\n        if (this.props.isOpen) {\n            if (items && items.length === 0 && isAllItems) {\n                sortedItems = [\n                    {\n                        label: t('export.all'),\n                    },\n                ];\n            }\n            else {\n                sortedItems = orderBy(sortedItems, ['label'], ['asc']);\n            }\n        }\n        let selectedLabel = t('export.selected', { groupBy });\n        if (groupBy.indexOf(tagPrefix) !== -1) {\n            selectedLabel = t('export.selected_tags');\n        }\n        const thisMonth = new Date();\n        const lastMonth = new Date().setMonth(thisMonth.getMonth() - 1);\n        const currentMonth = format(thisMonth, 'MMMM yyyy');\n        const previousMonth = format(lastMonth - 1, 'MMMM yyyy');\n        return (React.createElement(Modal, { style: styles.modal, isOpen: this.props.isOpen, onClose: this.handleClose, title: t('export.title'), variant: \"small\", actions: [\n                React.createElement(ExportSubmit, { groupBy: groupBy, isAllItems: isAllItems, items: items, key: \"confirm\", timeScope: showTimeScope ? timeScope : undefined, onClose: this.handleClose, query: query, reportPathsType: reportPathsType, resolution: resolution }),\n                React.createElement(Button, Object.assign({}, getTestProps(testIds.export.cancel_btn), { key: \"cancel\", onClick: this.handleClose, variant: ButtonVariant.link }), t('export.cancel')),\n            ] },\n            React.createElement(\"div\", { style: styles.title },\n                React.createElement(\"span\", null, t('export.heading', { groupBy }))),\n            React.createElement(Form, { style: styles.form },\n                showAggregateType && (React.createElement(FormGroup, { label: t('export.aggregate_type'), fieldId: \"aggregate-type\" },\n                    React.createElement(React.Fragment, null, resolutionOptions.map((option, index) => (React.createElement(Radio, { key: index, id: `resolution-${index}`, isValid: option.value !== undefined, label: t(option.label), value: option.value, checked: resolution === option.value, name: \"resolution\", onChange: this.handleResolutionChange, \"aria-label\": t(option.label) })))))),\n                showTimeScope && (React.createElement(FormGroup, { label: t('export.time_scope_title'), fieldId: \"timeScope\" },\n                    React.createElement(React.Fragment, null, timeScopeOptions.map((option, index) => (React.createElement(Radio, { key: index, id: `timeScope-${index}`, isValid: option.value !== undefined, label: t(option.label, { date: option.value === -2 ? previousMonth : currentMonth }), value: option.value, checked: timeScope === option.value, name: \"timeScope\", onChange: this.handleMonthChange, \"aria-label\": t(option.label) })))))),\n                React.createElement(FormGroup, { label: selectedLabel, fieldId: \"selected-labels\" },\n                    React.createElement(\"ul\", null, sortedItems.map((groupItem, index) => {\n                        return React.createElement(\"li\", { key: index }, groupItem.label);\n                    }))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {};\n});\nconst mapDispatchToProps = {\n    exportReport: exportActions.exportReport,\n};\nconst ExportModalConnect = connect(mapStateToProps, mapDispatchToProps)(ExportModalBase);\nconst ExportModal = withTranslation()(ExportModalConnect);\nexport { ExportModal };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    groupBySelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    groupBySelectorLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n};\n","import { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { orgUnitIdKey, orgUnitNameKey, parseQuery } from 'api/queries/query';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './groupBy.styles';\nclass GroupByOrgBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            defaultItem: this.props.groupBy || this.props.options[0].value,\n            isGroupByOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getCurrentGroupBy = () => {\n            const { getIdKeyForGroupBy } = this.props;\n            const queryFromRoute = parseQuery(location.search);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by ? Object.keys(queryFromRoute.group_by) : [];\n            let groupBy = getIdKeyForGroupBy(queryFromRoute.group_by);\n            for (const key of groupByKeys) {\n                const index = key.indexOf(orgUnitIdKey);\n                if (index !== -1) {\n                    groupBy = queryFromRoute.group_by[orgUnitIdKey];\n                    break;\n                }\n            }\n            return groupBy;\n        };\n        this.getGroupByItems = () => {\n            const { orgReport } = this.props;\n            if (!(orgReport && orgReport.data)) {\n                return [];\n            }\n            // Sort all names first\n            const sortedData = orgReport.data.sort((a, b) => {\n                if (a[orgUnitNameKey] < b[orgUnitNameKey]) {\n                    return -1;\n                }\n                if (a[orgUnitNameKey] > b[orgUnitNameKey]) {\n                    return 1;\n                }\n                return 0;\n            });\n            // Move roots first\n            const roots = sortedData.filter(org => org.level === 0);\n            const filteredOrgs = sortedData.filter(org => org.level !== 0);\n            roots.map(root => {\n                const item = sortedData.find(org => org[orgUnitIdKey] === root[orgUnitIdKey]);\n                filteredOrgs.unshift(item);\n            });\n            return filteredOrgs.map(org => ({\n                id: org[orgUnitIdKey],\n                toString: () => org[orgUnitNameKey],\n            }));\n        };\n        this.handleGroupByClear = () => {\n            this.setState({\n                currentItem: undefined,\n            });\n        };\n        this.handleGroupBySelect = (event, selection) => {\n            const { onItemClicked } = this.props;\n            this.setState({\n                currentItem: selection.id,\n                isGroupByOpen: false,\n            });\n            if (onItemClicked) {\n                onItemClicked(`${orgUnitIdKey}${selection.id}`);\n            }\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({ isGroupByOpen });\n        };\n        this.handleGroupByClear = this.handleGroupByClear.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { groupBy } = this.props;\n        if (prevProps.groupBy !== groupBy) {\n            this.setState({ currentItem: this.getCurrentGroupBy() });\n        }\n    }\n    render() {\n        const { isDisabled = false, t } = this.props;\n        const { currentItem, isGroupByOpen } = this.state;\n        const groupByItems = this.getGroupByItems();\n        const selection = groupByItems.find((item) => item.id === currentItem);\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(Select, { \"aria-label\": t('group_by.org_unit_aria_label'), isDisabled: isDisabled, onClear: this.handleGroupByClear, onToggle: this.handleGroupByToggle, onSelect: this.handleGroupBySelect, isOpen: isGroupByOpen, placeholderText: t('group_by.org_unit_placeholder'), selections: selection, variant: SelectVariant.typeahead }, groupByItems.map(item => (React.createElement(SelectOption, { description: item.id, key: item.id, value: item }))))));\n    }\n}\nconst GroupByOrg = withTranslation()(GroupByOrgBase);\nexport { GroupByOrg };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { parseQuery, tagPrefix } from 'api/queries/query';\nimport { uniq, uniqBy } from 'lodash';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './groupBy.styles';\nclass GroupByTagBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isGroupByOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getGroupByItems = () => {\n            const { tagReport } = this.props;\n            if (!(tagReport && tagReport.data)) {\n                return [];\n            }\n            // If the key_only param is used, we have an array of strings\n            let hasTagKeys = false;\n            for (const item of tagReport.data) {\n                if (item.hasOwnProperty('key')) {\n                    hasTagKeys = true;\n                    break;\n                }\n            }\n            // Workaround for https://github.com/project-koku/koku/issues/1797\n            let data = [];\n            if (hasTagKeys) {\n                const keepData = tagReport.data.map(\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                (_a) => {\n                    var { type } = _a, keepProps = __rest(_a, [\"type\"]);\n                    return keepProps;\n                });\n                data = uniqBy(keepData, 'key');\n            }\n            else {\n                data = uniq(tagReport.data);\n            }\n            return data.map(item => {\n                const tagKey = hasTagKeys ? item.key : item;\n                return React.createElement(SelectOption, { key: item.key, value: tagKey });\n            });\n        };\n        this.getCurrentGroupBy = () => {\n            const queryFromRoute = parseQuery(location.search);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by ? Object.keys(queryFromRoute.group_by) : [];\n            let groupBy;\n            for (const key of groupByKeys) {\n                const index = key.indexOf(tagPrefix);\n                if (index !== -1) {\n                    groupBy = key.slice(tagPrefix.length);\n                    break;\n                }\n            }\n            return groupBy;\n        };\n        this.handleGroupByClear = () => {\n            this.setState({\n                currentItem: undefined,\n            });\n        };\n        this.handleGroupBySelect = (event, selection) => {\n            const { onItemClicked } = this.props;\n            this.setState({\n                currentItem: selection,\n                isGroupByOpen: false,\n            });\n            if (onItemClicked) {\n                onItemClicked(`${tagPrefix}${selection}`);\n            }\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({ isGroupByOpen });\n        };\n        this.handleGroupByClear = this.handleGroupByClear.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { groupBy } = this.props;\n        if (prevProps.groupBy !== groupBy) {\n            this.setState({ currentItem: this.getCurrentGroupBy() });\n        }\n    }\n    render() {\n        const { isDisabled, t } = this.props;\n        const { currentItem, isGroupByOpen } = this.state;\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(Select, { \"aria-label\": t('group_by.tag_key_aria_label'), isDisabled: isDisabled, onClear: this.handleGroupByClear, onToggle: this.handleGroupByToggle, onSelect: this.handleGroupBySelect, isOpen: isGroupByOpen, placeholderText: t('group_by.tag_key_placeholder'), selections: currentItem, variant: SelectVariant.typeahead }, this.getGroupByItems())));\n    }\n}\nconst GroupByTag = withTranslation()(GroupByTagBase);\nexport { GroupByTag };\n","import { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport { getQuery, orgUnitIdKey, parseQuery, tagKey, tagPrefix } from 'api/queries/query';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { orgActions, orgSelectors } from 'store/orgs';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { styles } from './groupBy.styles';\nimport { GroupByOrg } from './groupByOrg';\nimport { GroupByTag } from './groupByTag';\nconst groupByOrgOptions = [{ label: orgUnitIdKey, value: orgUnitIdKey }];\nconst groupByTagOptions = [{ label: tagKey, value: tagKey }];\nconst orgReportType = \"org\" /* org */;\nconst tagReportType = \"tag\" /* tag */;\nclass GroupByBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            defaultItem: this.props.groupBy || this.props.options[0].value,\n            isGroupByOpen: false,\n            isGroupByOrgVisible: false,\n            isGroupByTagVisible: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleGroupByClick = value => {\n            const { onItemClicked } = this.props;\n            if (value === orgUnitIdKey || value === tagKey) {\n                this.setState({\n                    currentItem: value,\n                    isGroupByOrgVisible: value === orgUnitIdKey,\n                    isGroupByTagVisible: value === tagKey,\n                });\n            }\n            else {\n                this.setState({\n                    currentItem: value,\n                    isGroupByOrgVisible: false,\n                    isGroupByTagVisible: false,\n                });\n                if (onItemClicked) {\n                    onItemClicked(value);\n                }\n            }\n        };\n        this.getGroupByItems = () => {\n            const { options, orgReport, tagReport, t } = this.props;\n            const allOptions = [...options];\n            if (orgReport && orgReport.data && orgReport.data.length > 0) {\n                allOptions.push(...groupByOrgOptions);\n            }\n            if (tagReport && tagReport.data && tagReport.data.length > 0) {\n                allOptions.push(...groupByTagOptions);\n            }\n            return allOptions.map(option => (React.createElement(DropdownItem, { component: \"button\", key: option.value, onClick: () => this.handleGroupByClick(option.value) }, t(`group_by.values.${option.label}`))));\n        };\n        this.getCurrentGroupBy = () => {\n            const { getIdKeyForGroupBy } = this.props;\n            const { defaultItem } = this.state;\n            const queryFromRoute = parseQuery(location.search);\n            if (!(queryFromRoute && queryFromRoute.group_by)) {\n                return defaultItem;\n            }\n            let groupBy = getIdKeyForGroupBy(queryFromRoute.group_by);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by ? Object.keys(queryFromRoute.group_by) : [];\n            for (const key of groupByKeys) {\n                let index = key.indexOf(tagPrefix);\n                if (index !== -1) {\n                    groupBy = tagKey;\n                    this.setState({\n                        isGroupByTagVisible: true,\n                    });\n                    break;\n                }\n                index = key.indexOf(orgUnitIdKey);\n                if (index !== -1) {\n                    groupBy = orgUnitIdKey;\n                    this.setState({\n                        isGroupByOrgVisible: true,\n                    });\n                    break;\n                }\n            }\n            return groupBy !== 'date' ? groupBy : defaultItem;\n        };\n        this.handleGroupBySelect = () => {\n            this.setState({\n                isGroupByOpen: !this.state.isGroupByOpen,\n            });\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({\n                isGroupByOpen,\n            });\n        };\n        this.handleGroupByClick = this.handleGroupByClick.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        const { fetchOrg, fetchTag, orgQueryString, orgReportPathsType, showOrgs, showTags, tagQueryString, tagReportPathsType, } = this.props;\n        if (showOrgs) {\n            fetchOrg(orgReportPathsType, orgReportType, orgQueryString);\n        }\n        if (showTags) {\n            fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n        }\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchOrg, fetchTag, groupBy, orgQueryString, orgReportPathsType, perspective, showOrgs, showTags, tagQueryString, tagReportPathsType, } = this.props;\n        if (prevProps.groupBy !== groupBy || prevProps.perspective !== perspective) {\n            if (showOrgs) {\n                fetchOrg(orgReportPathsType, orgReportType, orgQueryString);\n            }\n            if (showTags) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n            let options;\n            if (prevProps.perspective !== perspective) {\n                options = {\n                    isGroupByOrgVisible: false,\n                    isGroupByTagVisible: false,\n                };\n            }\n            this.setState(Object.assign({ currentItem: this.getCurrentGroupBy() }, (options ? options : {})));\n        }\n    }\n    render() {\n        const { getIdKeyForGroupBy, groupBy, isDisabled = false, onItemClicked, orgReport, t, tagReport } = this.props;\n        const { currentItem, isGroupByOpen, isGroupByOrgVisible, isGroupByTagVisible } = this.state;\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(\"label\", { style: styles.groupBySelectorLabel }, t('group_by.label')),\n            React.createElement(Dropdown, { onSelect: this.handleGroupBySelect, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled, onToggle: this.handleGroupByToggle }, t(`group_by.values.${currentItem}`)), isOpen: isGroupByOpen, dropdownItems: [this.getGroupByItems()] }),\n            Boolean(isGroupByOrgVisible) && (React.createElement(GroupByOrg, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: isDisabled, onItemClicked: onItemClicked, options: groupByOrgOptions, orgReport: orgReport })),\n            Boolean(isGroupByTagVisible) && (React.createElement(GroupByTag, { groupBy: groupBy, isDisabled: isDisabled, onItemClicked: onItemClicked, options: groupByTagOptions, tagReport: tagReport }))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { endDate, startDate, orgReportPathsType, tagReportPathsType }) => {\n    const tagQuery = endDate && startDate\n        ? {\n            start_date: startDate,\n            end_date: endDate,\n        }\n        : {\n            filter: {\n                resolution: 'monthly',\n                time_scope_units: 'month',\n                time_scope_value: -1,\n            },\n        };\n    // Omitting key_only to share a single, cached request -- although the header doesn't need key values, the toolbar does\n    const tagQueryString = getQuery(Object.assign({}, tagQuery));\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, tagQueryString);\n    const orgQueryString = getQuery({\n    // TBD...\n    });\n    const orgReport = orgSelectors.selectOrg(state, orgReportPathsType, orgReportType, orgQueryString);\n    const orgReportFetchStatus = orgSelectors.selectOrgFetchStatus(state, orgReportPathsType, orgReportType, orgQueryString);\n    return {\n        orgQueryString,\n        orgReport,\n        orgReportFetchStatus,\n        tagQueryString,\n        tagReport,\n        tagReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchOrg: orgActions.fetchOrg,\n    fetchTag: tagActions.fetchTag,\n};\nconst GroupByConnect = connect(mapStateToProps, mapDispatchToProps)(GroupByBase);\nconst GroupBy = withTranslation()(GroupByConnect);\nexport { GroupBy };\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport { tagPrefix } from 'api/queries/query';\nimport { ExportModal } from 'pages/views/components/export/exportModal';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, query, reportPathsType } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, query: query, reportPathsType: reportPathsType }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, t, redirectToCostModel, history, item: { source_uuid }, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, t('details.actions.export')),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], history) }, t('details.actions.price_list')));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = withRouter(withTranslation()(DetailsActionsConnect));\nexport { Actions };\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const styles = {\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingLeft: global_spacer_lg.value,\n        paddingRight: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n};\n","import global_FontWeight_bold from '@patternfly/react-tokens/dist/js/global_FontWeight_bold';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    dataListHeading: {\n        fontWeight: global_FontWeight_bold.value,\n    },\n    groupByHeading: {\n        marginBottom: global_spacer_lg.value,\n    },\n    tagLink: {\n        marginLeft: global_spacer_sm.value,\n    },\n    tagsContainer: {\n        marginRight: global_spacer_3xl.value,\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import { DataList, DataListCell, DataListItem, DataListItemCells, DataListItemRow } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { styles } from './tag.styles';\nclass TagViewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDataListItems = () => {\n            const { tagReport } = this.props;\n            const result = [];\n            if (tagReport) {\n                for (const item of tagReport.data) {\n                    for (const val of item.values) {\n                        const id = `${item.key}:${val}`;\n                        result.push(React.createElement(DataListItem, { \"aria-labelledby\": id, key: `${id}-item` },\n                            React.createElement(DataListItemRow, null,\n                                React.createElement(DataListItemCells, { dataListCells: [\n                                        React.createElement(DataListCell, { key: `${id}-cell1` },\n                                            React.createElement(\"span\", { id: id }, item.key)),\n                                        React.createElement(DataListCell, { key: `${id}-cell2` }, val),\n                                    ] }))));\n                    }\n                }\n            }\n            return result;\n        };\n    }\n    render() {\n        const { groupBy, groupByValue, t } = this.props;\n        const dataListItems = this.getDataListItems();\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", null,\n                React.createElement(\"span\", { style: styles.dataListHeading }, t(`group_by.values.${groupBy}`))),\n            React.createElement(\"div\", { style: styles.groupByHeading },\n                React.createElement(\"span\", null, groupByValue)),\n            React.createElement(DataList, { \"aria-label\": \"Simple data list example\", isCompact: true },\n                React.createElement(DataListItem, { \"aria-labelledby\": \"heading1\" },\n                    React.createElement(DataListItemRow, null,\n                        React.createElement(DataListItemCells, { dataListCells: [\n                                React.createElement(DataListCell, { key: \"primary content\" },\n                                    React.createElement(\"span\", { id: \"heading1\", style: styles.dataListHeading }, t('tag.heading_key'))),\n                                React.createElement(DataListCell, { key: \"secondary content\" },\n                                    React.createElement(\"span\", { id: \"heading2\", style: styles.dataListHeading }, t('tag.heading_value'))),\n                            ] }))),\n                dataListItems.map(item => item))));\n    }\n}\nconst TagView = withTranslation()(connect()(TagViewBase));\nexport { TagView };\n","import { Modal } from '@patternfly/react-core';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { TagView } from './tagView';\nconst tagReportType = \"tag\" /* tag */;\nclass TagModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getTagValueCount = () => {\n            const { tagReport } = this.props;\n            let count = 0;\n            if (tagReport) {\n                for (const item of tagReport.data) {\n                    if (item.values) {\n                        count += item.values.length;\n                    }\n                }\n            }\n            return count;\n        };\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    componentDidMount() {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        fetchTag(tagReportPathsType, tagReportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchTag(tagReportPathsType, tagReportType, queryString);\n        }\n    }\n    shouldComponentUpdate(nextProps) {\n        const { groupByValue, isOpen } = this.props;\n        return nextProps.groupByValue !== groupByValue || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { groupBy, isOpen, query, tagReport, t } = this.props;\n        // Match page header description\n        const groupByValue = query && query.filter && query.filter.account ? query.filter.account : this.props.groupByValue;\n        return (React.createElement(Modal, { isOpen: isOpen, onClose: this.handleClose, title: t('tag.title', {\n                value: this.getTagValueCount(),\n            }), width: '50%' },\n            React.createElement(TagView, { groupBy: groupBy, groupByValue: groupByValue, tagReport: tagReport })));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { tagReportPathsType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = groupByOrgValue ? orgUnitIdKey : getGroupById(query);\n    const groupByValue = groupByOrgValue ? groupByOrgValue : getGroupByValue(query);\n    const newQuery = {\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        filter_by: Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: groupByValue })),\n    };\n    const queryString = getQuery(newQuery);\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, queryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, queryString);\n    return {\n        groupBy,\n        groupByValue,\n        query,\n        queryString,\n        tagReport,\n        tagReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst TagModal = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(TagModalBase));\nexport { TagModal };\n","import { TagIcon } from '@patternfly/react-icons/dist/js/icons/tag-icon';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { getTestProps, testIds } from 'testIds';\nimport { styles } from './tag.styles';\nimport { TagModal } from './tagModal';\nconst tagReportType = \"tag\" /* tag */;\nclass TagLinkBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleClose = (isOpen) => {\n            this.setState({ isOpen });\n        };\n        this.handleOpen = event => {\n            this.setState({ isOpen: true });\n            event.preventDefault();\n            return false;\n        };\n        this.handleClose = this.handleClose.bind(this);\n        this.handleOpen = this.handleOpen.bind(this);\n    }\n    componentDidMount() {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        fetchTag(tagReportPathsType, tagReportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchTag(tagReportPathsType, tagReportType, queryString);\n        }\n    }\n    render() {\n        const { id, tagReport, tagReportPathsType } = this.props;\n        const { isOpen } = this.state;\n        let count = 0;\n        if (tagReport) {\n            for (const item of tagReport.data) {\n                if (item.values) {\n                    count += item.values.length;\n                }\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.tagsContainer, id: id },\n            Boolean(count > 0) && (React.createElement(React.Fragment, null,\n                React.createElement(TagIcon, null),\n                React.createElement(\"a\", Object.assign({}, getTestProps(testIds.details.tag_lnk), { href: \"#/\", onClick: this.handleOpen, style: styles.tagLink }), count))),\n            React.createElement(TagModal, { isOpen: isOpen, onClose: this.handleClose, tagReportPathsType: tagReportPathsType })));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { tagReportPathsType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = groupByOrgValue ? orgUnitIdKey : getGroupById(query);\n    const groupByValue = groupByOrgValue ? groupByOrgValue : getGroupByValue(query);\n    const newQuery = {\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        filter_by: Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: groupByValue })),\n    };\n    const queryString = getQuery(newQuery);\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, queryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, queryString);\n    return {\n        groupBy,\n        groupByValue,\n        query,\n        queryString,\n        tagReport,\n        tagReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst TagLink = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(TagLinkBase));\nexport { TagLink };\n","import global_BackgroundColor_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_100';\nimport global_Color_200 from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_xl from '@patternfly/react-tokens/dist/js/global_spacer_xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    cost: {\n        marginTop: global_spacer_xl.var,\n    },\n    costLabel: {\n        marginTop: global_spacer_xs.var,\n    },\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n        textAlign: 'right',\n    },\n    costLabelDate: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_200.var,\n        textAlign: 'right',\n    },\n    header: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        paddingLeft: global_spacer_lg.var,\n        paddingRight: global_spacer_lg.var,\n        paddingTop: global_spacer_lg.var,\n        backgroundColor: global_BackgroundColor_100.var,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    tabs: {\n        display: 'flex',\n    },\n    tag: {\n        marginLeft: global_spacer_lg.var,\n    },\n    title: {\n        paddingBottom: global_spacer_lg.var,\n        paddingTop: global_spacer_md.var,\n    },\n};\n","import './breakdownHeader.scss';\nimport { Title } from '@patternfly/react-core';\nimport { AngleLeftIcon } from '@patternfly/react-icons/dist/js/icons/angle-left-icon';\nimport { breakdownDescKey, breakdownTitleKey, getQueryRoute, orgUnitIdKey } from 'api/queries/query';\nimport { TagLink } from 'pages/views/details/components/tag/tagLink';\nimport { getGroupByOrgValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { getForDateRangeString } from 'utils/dateRange';\nimport { formatValue } from 'utils/formatValue';\nimport { styles } from './breakdownHeader.styles';\nclass BreakdownHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.buildDetailsLink = () => {\n            const { detailsURL, groupBy, query } = this.props;\n            let groupByKey = groupBy;\n            let value = '*';\n            // Retrieve org unit used by the details page\n            if (query[orgUnitIdKey]) {\n                groupByKey = orgUnitIdKey;\n                value = query[orgUnitIdKey];\n            }\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { group_by: {\n                    [groupByKey]: value,\n                } });\n            // Don't want these params when returning to the details page\n            if (newQuery.filter) {\n                newQuery.filter.account = undefined;\n                newQuery[breakdownDescKey] = undefined;\n                newQuery[orgUnitIdKey] = undefined;\n                newQuery[breakdownTitleKey] = undefined;\n            }\n            return `${detailsURL}?${getQueryRoute(newQuery)}`;\n        };\n        this.getTotalCost = () => {\n            const { report } = this.props;\n            const hasCost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total;\n            const cost = formatValue(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD');\n            return cost;\n        };\n    }\n    render() {\n        const { description, groupBy, query, t, tabs, tagReportPathsType, title } = this.props;\n        const filterByAccount = query && query.filter ? query.filter.account : undefined;\n        const groupByOrg = getGroupByOrgValue(query);\n        const showTags = filterByAccount || groupBy === 'account' || groupBy === 'project' || groupBy === 'subscription_guid';\n        // i18n groupBy key\n        const groupByKey = groupBy ? groupBy : filterByAccount ? 'account' : groupByOrg ? orgUnitIdKey : undefined;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", null,\n                React.createElement(\"nav\", { \"aria-label\": \"breadcrumb\", className: \"breadcrumbOverride\" },\n                    React.createElement(\"ol\", { className: \"pf-c-breadcrumb__list\" },\n                        React.createElement(\"li\", { className: \"pf-c-breadcrumb__item\" },\n                            React.createElement(\"span\", { className: \"pf-c-breadcrumb__item-divider\" },\n                                React.createElement(AngleLeftIcon, null)),\n                            React.createElement(Link, { to: this.buildDetailsLink() }, t('breakdown.back_to_details', {\n                                groupBy: groupByKey,\n                                value: tagReportPathsType,\n                            }))))),\n                React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"2xl\" },\n                    t('breakdown.title', { value: title }),\n                    description && React.createElement(\"div\", { style: styles.infoDescription }, description)),\n                React.createElement(\"div\", { style: styles.tabs },\n                    tabs,\n                    React.createElement(\"div\", { style: styles.tag }, Boolean(showTags) && React.createElement(TagLink, { id: \"tags\", tagReportPathsType: tagReportPathsType })))),\n            React.createElement(\"div\", { style: styles.cost },\n                React.createElement(\"div\", { style: styles.costLabel },\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: \"4xl\" },\n                        React.createElement(\"span\", null, this.getTotalCost()))),\n                React.createElement(\"div\", { style: styles.costLabelDate }, getForDateRangeString(groupByKey, 'breakdown.total_cost_date', 0)))));\n    }\n}\nconst BreakdownHeader = withTranslation()(BreakdownHeaderBase);\nexport { BreakdownHeader };\n","import { Tab, TabContent, Tabs, TabTitleText } from '@patternfly/react-core';\nimport Loading from 'pages/state/loading';\nimport NoData from 'pages/state/noData';\nimport NoProviders from 'pages/state/noProviders';\nimport NotAvailable from 'pages/state/notAvailable';\nimport { hasCurrentMonthData } from 'pages/views/utils/providers';\nimport React from 'react';\nimport { styles } from './breakdown.styles';\nimport { BreakdownHeader } from './breakdownHeader';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"cost-overview\" /* costOverview */:\n            return 'cost-overview';\n        case \"historical-data\" /* historicalData */:\n            return 'historical-data';\n    }\n};\nclass BreakdownBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            activeTabKey: 0,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getAvailableTabs = () => {\n            const availableTabs = [\n                {\n                    contentRef: React.createRef(),\n                    tab: \"cost-overview\" /* costOverview */,\n                },\n                {\n                    contentRef: React.createRef(),\n                    tab: \"historical-data\" /* historicalData */,\n                },\n            ];\n            return availableTabs;\n        };\n        this.getTab = (tab, contentRef, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, tabContentId: `tab-${index}`, tabContentRef: contentRef, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) }));\n        };\n        this.getTabContent = (availableTabs) => {\n            return availableTabs.map((val, index) => {\n                return (React.createElement(TabContent, { eventKey: index, key: `${getIdKeyForTab(val.tab)}-tabContent`, id: `tab-${index}`, ref: val.contentRef }, this.getTabItem(val.tab, index)));\n            });\n        };\n        this.getTabItem = (tab, index) => {\n            const { costOverviewComponent, historicalDataComponent } = this.props;\n            const { activeTabKey } = this.state;\n            const emptyTab = React.createElement(React.Fragment, null); // Lazily load tabs\n            if (activeTabKey !== index) {\n                return emptyTab;\n            }\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === \"cost-overview\" /* costOverview */) {\n                return costOverviewComponent;\n            }\n            else if (currentTab === \"historical-data\" /* historicalData */) {\n                return historicalDataComponent;\n            }\n            else {\n                return emptyTab;\n            }\n        };\n        this.getTabs = (availableTabs) => {\n            const { activeTabKey } = this.state;\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((val, index) => this.getTab(val.tab, val.contentRef, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            if (tab === \"cost-overview\" /* costOverview */) {\n                return t('breakdown.cost_overview_title');\n            }\n            else if (tab === \"historical-data\" /* historicalData */) {\n                return t('breakdown.historical_data_title');\n            }\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { activeTabKey } = this.state;\n            if (activeTabKey !== tabIndex) {\n                this.setState({\n                    activeTabKey: tabIndex,\n                });\n            }\n        };\n        this.updateReport = () => {\n            const { location, fetchReport, queryString, reportPathsType, reportType } = this.props;\n            if (location.search) {\n                fetchReport(reportPathsType, reportType, queryString);\n            }\n        };\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps) {\n        const { location, report, reportError, queryString } = this.props;\n        const newQuery = prevProps.queryString !== queryString;\n        const noReport = !report && !reportError;\n        const noLocation = !location.search;\n        if (newQuery || noReport || noLocation) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { description, detailsURL, emptyStateTitle, groupBy, providers, providersFetchStatus, providerType, query, report, reportError, reportFetchStatus, tagReportPathsType, title, } = this.props;\n        const availableTabs = this.getAvailableTabs();\n        // Note: Providers are fetched via the InactiveSources component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: emptyStateTitle });\n        }\n        else if (providersFetchStatus === 1 /* inProgress */ && reportFetchStatus === 1 /* inProgress */) {\n            return React.createElement(Loading, { title: emptyStateTitle });\n        }\n        else if (providersFetchStatus === 2 /* complete */ && reportFetchStatus === 2 /* complete */) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0 && providersFetchStatus === 2 /* complete */;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: providerType, title: emptyStateTitle });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(BreakdownHeader, { description: description, detailsURL: detailsURL, groupBy: groupBy, query: query, report: report, tabs: this.getTabs(availableTabs), tagReportPathsType: tagReportPathsType, title: title }),\n            React.createElement(\"div\", { style: styles.content }, this.getTabContent(availableTabs))));\n    }\n}\nexport default BreakdownBase;\n","import global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    clustersContainer: {\n        marginRight: global_spacer_3xl.value,\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import global_spacer_2xl from '@patternfly/react-tokens/dist/js/global_spacer_2xl';\nexport const styles = {\n    modal: {\n        // Workaround for isLarge not working properly\n        height: '700px',\n        width: '600px',\n    },\n    subTitle: {\n        marginTop: global_spacer_2xl.value,\n        textAlign: 'right',\n    },\n};\n","import React from 'react';\nimport { withTranslation } from 'react-i18next';\nclass ClusterViewBase extends React.Component {\n    render() {\n        const { item } = this.props;\n        if (!item.clusters) {\n            return null;\n        }\n        return item.clusters.map((cluster, index) => React.createElement(\"div\", { key: `cluster-${index}` }, cluster));\n    }\n}\nconst ClusterView = withTranslation()(ClusterViewBase);\nexport { ClusterView, ClusterViewBase };\n","import './clusterModal.scss';\nimport { Modal } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './clusterModal.styles';\nimport { ClusterView } from './clusterView';\nclass ClusterModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    shouldComponentUpdate(nextProps) {\n        const { isOpen, item } = this.props;\n        return nextProps.item !== item || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { groupBy, isOpen, item, t } = this.props;\n        return (React.createElement(Modal, { className: \"modalOverride\", style: styles.modal, isOpen: isOpen, onClose: this.handleClose, title: t('details.clusters_modal_title', {\n                groupBy,\n                name: item.label,\n            }), width: '50%' },\n            React.createElement(ClusterView, { item: item })));\n    }\n}\nconst ClusterModal = withTranslation()(ClusterModalBase);\nexport { ClusterModal };\n","import React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { getTestProps, testIds } from 'testIds';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { styles } from './cluster.styles';\nimport { ClusterModal } from './clusterModal';\nclass ClusterBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isOpen: false,\n            showAll: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleClose = (isOpen) => {\n            this.setState({ isOpen });\n        };\n        this.handleOpen = event => {\n            this.setState({ isOpen: true });\n            event.preventDefault();\n            return false;\n        };\n        this.handleClose = this.handleClose.bind(this);\n        this.handleOpen = this.handleOpen.bind(this);\n    }\n    render() {\n        const { groupBy, report, t } = this.props;\n        const { isOpen, showAll } = this.state;\n        let charCount = 0;\n        const maxChars = 50;\n        const someClusters = [];\n        const allClusters = [];\n        const computedItems = getComputedReportItems({\n            report,\n            idKey: groupBy,\n        });\n        const item = computedItems && computedItems.length ? computedItems[0] : undefined;\n        if (!item) {\n            return null;\n        }\n        for (const cluster of item.clusters) {\n            const prefix = someClusters.length > 0 ? ', ' : '';\n            const clusterString = `${prefix}${cluster}`;\n            if (showAll) {\n                someClusters.push(clusterString);\n            }\n            else if (charCount <= maxChars) {\n                if (charCount + clusterString.length > maxChars) {\n                    someClusters.push(clusterString\n                        .slice(0, maxChars - charCount)\n                        .trim()\n                        .concat('...'));\n                }\n                else {\n                    someClusters.push(clusterString);\n                }\n            }\n            charCount += clusterString.length;\n            allClusters.push(cluster);\n        }\n        return (React.createElement(\"div\", { style: styles.clustersContainer },\n            Boolean(someClusters) && someClusters.map((cluster, index) => React.createElement(\"span\", { key: index }, cluster)),\n            Boolean(someClusters.length < allClusters.length) && (React.createElement(\"a\", Object.assign({}, getTestProps(testIds.details.cluster_lnk), { href: \"#/\", onClick: this.handleOpen }), t('details.more_clusters', {\n                value: allClusters.length - someClusters.length,\n            }))),\n            React.createElement(ClusterModal, { groupBy: groupBy, isOpen: isOpen, item: item, onClose: this.handleClose })));\n    }\n}\nconst Cluster = withTranslation()(ClusterBase);\nexport { Cluster };\n","import global_FontWeight_bold from '@patternfly/react-tokens/dist/js/global_FontWeight_bold';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const chartStyles = {\n    chartHeight: 150,\n    chartWidth: 350,\n    subTitle: {\n        fontWeight: global_FontWeight_bold.value,\n    },\n};\nexport const styles = {\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { ChartLabel, ChartLegend, ChartPie, ChartThemeColor } from '@patternfly/react-charts';\nimport { Skeleton } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { formatValue } from 'utils/formatValue';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { chartStyles, styles } from './costChart.styles';\nclass CostChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        // Override legend layout\n        this.getLegendLabel = () => {\n            return (_a) => {\n                var { values } = _a, props = __rest(_a, [\"values\"]);\n                return (React.createElement(ChartLabel, Object.assign({}, props, { style: [{ fontWeight: chartStyles.subTitle.fontWeight }, {}], text: [values[props.index], props.text] })));\n            };\n        };\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md })));\n        };\n    }\n    render() {\n        const { report, reportFetchStatus, t } = this.props;\n        const hasCost = report && report.meta && report.meta.total && report.meta.total.cost;\n        const hasMarkup = hasCost && report.meta.total.cost.markup;\n        const hasRaw = hasCost && report.meta.total.cost.raw;\n        const hasUsage = hasCost && report.meta.total.cost.usage;\n        const markupUnits = hasMarkup ? report.meta.total.cost.markup.units : 'USD';\n        const rawUnits = hasRaw ? report.meta.total.cost.raw.units : 'USD';\n        const usageUnits = hasUsage ? report.meta.total.cost.usage.units : 'USD';\n        const markupValue = hasMarkup ? report.meta.total.cost.markup.value : 0;\n        const rawValue = hasRaw ? report.meta.total.cost.raw.value : 0;\n        const usageValue = hasUsage ? report.meta.total.cost.usage.value : 0;\n        const markup = formatValue(hasMarkup ? report.meta.total.cost.markup.value : 0, markupUnits);\n        const raw = formatValue(hasRaw ? report.meta.total.cost.raw.value : 0, rawUnits);\n        const usage = formatValue(hasUsage ? report.meta.total.cost.usage.value : 0, usageUnits);\n        const markupLabel = t('breakdown.cost_chart.markup_label');\n        const rawLabel = t('breakdown.cost_chart.raw_label');\n        const usageLabel = t('breakdown.cost_chart.usage_label');\n        // Override legend label layout\n        const LegendLabel = this.getLegendLabel();\n        const Legend = (React.createElement(ChartLegend, { gutter: 25, itemsPerRow: 2, labelComponent: React.createElement(LegendLabel, { dy: 10, lineHeight: 1.5, values: [raw, markup, usage] }), rowGutter: 20 }));\n        return (React.createElement(\"div\", { style: { height: chartStyles.chartHeight, width: chartStyles.chartWidth } }, reportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(ChartPie, { ariaDesc: t('breakdown.cost_chart.aria_desc'), ariaTitle: t('breakdown.cost_chart.aria_title'), constrainToVisibleArea: true, data: [\n                { x: rawLabel, y: rawValue, units: rawUnits },\n                { x: markupLabel, y: markupValue, units: markupUnits },\n                { x: usageLabel, y: usageValue, units: usageUnits },\n            ], height: chartStyles.chartHeight, labels: ({ datum }) => t('breakdown.cost_chart.tooltip', {\n                name: datum.x,\n                value: formatValue(datum.y, datum.units),\n            }), legendComponent: Legend, legendData: [\n                {\n                    name: rawLabel,\n                },\n                {\n                    name: markupLabel,\n                },\n                {\n                    name: usageLabel,\n                },\n            ], legendOrientation: \"vertical\", legendPosition: \"right\", padding: {\n                bottom: 20,\n                left: 0,\n                right: 225,\n                top: 20,\n            }, themeColor: ChartThemeColor.green, width: chartStyles.chartWidth }))));\n    }\n}\nconst CostChart = withTranslation()(CostChartBase);\nexport { CostChart };\n","import global_spacer_xl from '@patternfly/react-tokens/dist/js/global_spacer_xl';\nexport const styles = {\n    mainContent: {\n        marginTop: global_spacer_xl.value,\n    },\n    subTitle: {\n        textAlign: 'right',\n    },\n};\n","import { Title } from '@patternfly/react-core';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { ReportSummaryItem, ReportSummaryItems } from 'components/reports/reportSummary';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue } from 'utils/formatValue';\nimport { formatCurrency } from 'utils/formatValue';\nimport { styles } from './summaryModal.styles';\nconst reportType = \"cost\" /* cost */;\nclass SummaryModalViewBase extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    render() {\n        const { report, reportGroupBy, reportFetchStatus, t } = this.props;\n        const cost = formatCurrency(report && report.meta && report.meta.total ? report.meta.total.cost.total.value : 0);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { style: styles.subTitle },\n                React.createElement(Title, { headingLevel: \"h2\", size: \"xl\" }, t('details.cost_value', { value: cost }))),\n            React.createElement(\"div\", { style: styles.mainContent },\n                React.createElement(ReportSummaryItems, { idKey: reportGroupBy, report: report, status: reportFetchStatus }, ({ items }) => items.map(_item => (React.createElement(ReportSummaryItem, { key: _item.id, formatOptions: {}, formatValue: formatValue, label: _item.label ? _item.label.toString() : '', totalValue: report.meta.total.cost.total.value, units: report.meta.total.cost.total.units, value: _item.cost.total.value })))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportGroupBy, reportPathsType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = groupByOrgValue ? orgUnitIdKey : getGroupById(query);\n    const groupByValue = groupByOrgValue ? groupByOrgValue : getGroupByValue(query);\n    const newQuery = {\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        filter_by: Object.assign(Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: undefined })), (groupBy && { [groupBy]: groupByValue })),\n        group_by: Object.assign({}, (reportGroupBy && { [reportGroupBy]: '*' })),\n    };\n    const queryString = getQuery(newQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst SummaryModalView = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(SummaryModalViewBase));\nexport { SummaryModalView };\n","import './summaryModal.scss';\nimport { Modal } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { SummaryModalView } from './summaryModalView';\nclass SummaryModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    shouldComponentUpdate(nextProps) {\n        const { groupByValue, isOpen } = this.props;\n        return nextProps.groupByValue !== groupByValue || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { groupByValue, isOpen, reportGroupBy, reportPathsType, t } = this.props;\n        return (React.createElement(Modal, { className: \"modalOverride\", isOpen: isOpen, onClose: this.handleClose, title: t('details.summary_modal_title', {\n                groupBy: reportGroupBy,\n                name: groupByValue,\n            }), variant: \"large\" },\n            React.createElement(SummaryModalView, { reportGroupBy: reportGroupBy, reportPathsType: reportPathsType })));\n    }\n}\nconst SummaryModal = withTranslation()(SummaryModalBase);\nexport { SummaryModal };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    card: {},\n    skeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    viewAllContainer: {\n        marginLeft: '-15px',\n    },\n};\n","import { Button, ButtonType, ButtonVariant, Card, CardBody, CardFooter, CardTitle, Skeleton, Title, } from '@patternfly/react-core';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { ReportSummaryItem, ReportSummaryItems } from 'components/reports/reportSummary';\nimport { SummaryModal } from 'pages/views/details/components/summary/summaryModal';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getTestProps, testIds } from 'testIds';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { formatValue } from 'utils/formatValue';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { styles } from './summaryCard.styles';\nclass SummaryBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            isBulletChartModalOpen: false,\n        };\n        this.getItems = () => {\n            const { report, reportGroupBy } = this.props;\n            const computedItems = getComputedReportItems({\n                report,\n                idKey: reportGroupBy,\n            });\n            return computedItems;\n        };\n        this.getSummary = () => {\n            const { report, reportGroupBy, reportFetchStatus } = this.props;\n            return (React.createElement(ReportSummaryItems, { idKey: reportGroupBy, report: report, status: reportFetchStatus }, ({ items }) => items.map(reportItem => (React.createElement(ReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: {}, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : undefined, totalValue: report.meta.total.cost.total.value, units: report.meta.total.cost.total.units, value: reportItem.cost.total.value })))));\n        };\n        this.getViewAll = () => {\n            const { groupBy, query, reportGroupBy, reportPathsType, t } = this.props;\n            const { isBulletChartModalOpen } = this.state;\n            const computedItems = this.getItems();\n            const otherIndex = computedItems.findIndex(i => {\n                const id = i.id;\n                if (id && id !== null) {\n                    return id === 'Other' || id === 'Others';\n                }\n            });\n            if (otherIndex !== -1) {\n                // Match page header description\n                const groupByValue = query && query.filter && query.filter.account ? query.filter.account : this.props.groupByValue;\n                return (React.createElement(\"div\", { style: styles.viewAllContainer },\n                    React.createElement(Button, Object.assign({}, getTestProps(testIds.details.view_all_btn), { onClick: this.handleBulletChartModalOpen, type: ButtonType.button, variant: ButtonVariant.link }), t('details.view_all', { groupBy: reportGroupBy })),\n                    React.createElement(SummaryModal, { groupBy: groupBy, groupByValue: groupByValue, isOpen: isBulletChartModalOpen, onClose: this.handleBulletChartModalClose, query: query, reportGroupBy: reportGroupBy, reportPathsType: reportPathsType })));\n            }\n            else {\n                return null;\n            }\n        };\n        this.handleBulletChartModalClose = (isOpen) => {\n            this.setState({ isBulletChartModalOpen: isOpen });\n        };\n        this.handleBulletChartModalOpen = event => {\n            this.setState({ isBulletChartModalOpen: true });\n            event.preventDefault();\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    render() {\n        const { reportGroupBy, reportFetchStatus, t } = this.props;\n        return (React.createElement(Card, { style: styles.card },\n            React.createElement(CardTitle, null,\n                React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('breakdown.summary_title', { groupBy: reportGroupBy }))),\n            React.createElement(CardBody, null, reportFetchStatus === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.skeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.skeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.skeleton, width: skeletonWidth.md }))) : (this.getSummary())),\n            React.createElement(CardFooter, null, this.getViewAll())));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportGroupBy, reportPathsType, reportType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = groupByOrgValue ? orgUnitIdKey : getGroupById(query);\n    const groupByValue = groupByOrgValue ? groupByOrgValue : getGroupByValue(query);\n    const newQuery = {\n        filter: {\n            limit: 3,\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        filter_by: Object.assign(Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: undefined })), (groupBy && { [groupBy]: groupByValue })),\n        group_by: Object.assign({}, (reportGroupBy && { [reportGroupBy]: '*' })),\n    };\n    const queryString = getQuery(newQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        groupBy,\n        groupByValue,\n        query,\n        queryString,\n        report,\n        reportFetchStatus,\n        reportPathsType,\n        reportType,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst SummaryCard = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(SummaryBase));\nexport { SummaryCard };\n","import global_FontWeight_bold from '@patternfly/react-tokens/dist/js/global_FontWeight_bold';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    chartSkeleton: {\n        marginBottom: global_spacer_md.value,\n    },\n    capacity: {\n        fontWeight: global_FontWeight_bold.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { ChartBullet } from '@patternfly/react-charts';\nimport { Grid, GridItem, Skeleton } from '@patternfly/react-core';\nimport { parseQuery } from 'api/queries/ocpQuery';\nimport { getQuery } from 'api/queries/query';\nimport { getResizeObserver } from 'components/charts/common/chartUtils';\nimport { getGroupById, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { noop } from 'utils/noop';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { styles } from './usageChart.styles';\nclass UsageChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            width: 0,\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n        this.getCpuChart = () => {\n            const { groupBy, reportFetchStatus, report } = this.props;\n            const { width } = this.state;\n            const chartDatum = groupBy === 'cluster' ? this.getChartDatumWithCapacity() : this.getChartDatum();\n            if (!report || chartDatum.usage.length === 0) {\n                return null;\n            }\n            return (React.createElement(\"div\", { className: \"chartOverride\" }, reportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(React.Fragment, null,\n                Boolean(groupBy === 'cluster') && this.getFreeSpace(),\n                React.createElement(ChartBullet, { comparativeErrorMeasureData: chartDatum.limit.value\n                        ? [\n                            {\n                                tooltip: chartDatum.limit.tooltip,\n                                y: chartDatum.limit.value,\n                            },\n                        ]\n                        : [], comparativeErrorMeasureLegendData: chartDatum.limit.value ? [{ name: chartDatum.limit.legend }] : [], height: this.getChartHeight(), labels: ({ datum }) => `${datum.tooltip}`, legendPosition: \"bottom-left\", legendItemsPerRow: this.getItemsPerRow(), maxDomain: this.isDatumEmpty(chartDatum) ? 100 : undefined, minDomain: 0, padding: {\n                        bottom: 75,\n                        left: 10,\n                        right: 50,\n                        top: 0,\n                    }, primarySegmentedMeasureData: chartDatum.usage.length\n                        ? chartDatum.usage.map(datum => {\n                            return {\n                                tooltip: datum.tooltip,\n                                y: datum.value,\n                            };\n                        })\n                        : [], primarySegmentedMeasureLegendData: chartDatum.usage.length\n                        ? chartDatum.usage.map(datum => {\n                            return {\n                                name: datum.legend,\n                            };\n                        })\n                        : [], qualitativeRangeData: chartDatum.ranges.length\n                        ? [\n                            {\n                                tooltip: chartDatum.ranges[0].tooltip,\n                                y: chartDatum.ranges[0].value,\n                            },\n                        ]\n                        : [], qualitativeRangeLegendData: chartDatum.ranges.length ? [{ name: chartDatum.ranges[0].legend }] : [], width: width })))));\n        };\n        this.getChartHeight = () => {\n            const { groupBy } = this.props;\n            const { width } = this.state;\n            if (groupBy === 'cluster') {\n                return width > 950 ? 115 : width > 450 ? 150 : 210;\n            }\n            else {\n                return width > 700 ? 115 : width > 450 ? 150 : 180;\n            }\n        };\n        this.getItemsPerRow = () => {\n            const { width } = this.state;\n            return width > 950 ? 4 : width > 700 ? 3 : width > 450 ? 2 : 1;\n        };\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, width: skeletonWidth.xs })));\n        };\n        this.isDatumEmpty = (datum) => {\n            let hasRange = false;\n            for (const range of datum.ranges) {\n                if (range.value) {\n                    hasRange = true;\n                    break;\n                }\n            }\n            let hasUsage = false;\n            for (const usage of datum.usage) {\n                if (usage.value) {\n                    hasUsage = true;\n                    break;\n                }\n            }\n            return !(datum.limit.value || hasRange || hasUsage);\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        if (prevProps.queryString !== this.props.queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getChartDatum() {\n        const { report, reportType, t } = this.props;\n        const datum = {\n            limit: {},\n            ranges: [],\n            usage: [],\n        };\n        // Always show bullet chart legends https://github.com/project-koku/koku-ui/issues/963\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasLimit = hasTotal && report.meta.total.limit && report.meta.total.limit !== null;\n        const limit = Math.trunc(hasLimit ? report.meta.total.limit.value : 0);\n        const limitUnits = t(`units.${unitLookupKey(hasLimit ? report.meta.total.limit.units : '')}`);\n        datum.limit = {\n            legend: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            tooltip: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            value: Math.trunc(limit),\n        };\n        const hasRequest = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = t(`units.${unitLookupKey(hasRequest ? report.meta.total.request.units : '')}`);\n        datum.ranges = [\n            {\n                legend: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                value: Math.trunc(request),\n            },\n        ];\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = t(`units.${unitLookupKey(hasUsage ? report.meta.total.usage.units : '')}`);\n        datum.usage = [\n            {\n                legend: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                value: Math.trunc(usage),\n            },\n        ];\n        return datum;\n    }\n    getChartDatumWithCapacity() {\n        const { report, reportType, t } = this.props;\n        const datum = {\n            limit: {},\n            ranges: [],\n            usage: [],\n        };\n        // Always show bullet chart legends https://github.com/project-koku/koku-ui/issues/963\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasLimit = hasTotal && report.meta.total.limit && report.meta.total.limit !== null;\n        const limit = Math.trunc(hasLimit ? report.meta.total.limit.value : 0);\n        const limitUnits = t(`units.${unitLookupKey(hasLimit ? report.meta.total.limit.units : '')}`);\n        datum.limit = {\n            legend: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            tooltip: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            value: Math.trunc(limit),\n        };\n        const hasCapacity = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const capacity = Math.trunc(hasCapacity ? report.meta.total.capacity.value : 0);\n        const capacityUnits = t(`units.${unitLookupKey(hasCapacity ? report.meta.total.capacity.units : '')}`);\n        datum.ranges = [\n            {\n                legend: t(`details.usage.${reportType}_capacity`, {\n                    value: capacity,\n                    units: capacityUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_capacity`, {\n                    value: capacity,\n                    units: capacityUnits,\n                }),\n                value: Math.trunc(capacity),\n            },\n        ];\n        const hasRequest = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = t(`units.${unitLookupKey(hasRequest ? report.meta.total.request.units : '')}`);\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = t(`units.${unitLookupKey(hasUsage ? report.meta.total.usage.units : '')}`);\n        datum.usage = [\n            {\n                legend: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                value: Math.trunc(usage),\n            },\n            {\n                legend: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                value: Math.trunc(request),\n            },\n        ];\n        return datum;\n    }\n    getFreeSpace() {\n        const { report, reportType, t } = this.props;\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasCapacity = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const hasRequest = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const capacity = Math.trunc(hasCapacity ? report.meta.total.capacity.value : 0);\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = t(`units.${unitLookupKey(hasRequest ? report.meta.total.request.units : '')}`);\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = t(`units.${unitLookupKey(hasUsage ? report.meta.total.usage.units : '')}`);\n        // Show negative values https://github.com/project-koku/koku-ui/issues/1214\n        const unusedRequestCapacity = capacity - request;\n        const unusedUsageCapacity = capacity - usage;\n        let unusedRequestCapacityPercentage = request > 0 ? (request / capacity) * 100 : 0;\n        if (unusedRequestCapacityPercentage > 100) {\n            unusedRequestCapacityPercentage = 100 - unusedRequestCapacityPercentage;\n        }\n        let unusedUsageCapacityPercentage = capacity > usage ? (usage / capacity) * 100 : 0;\n        if (unusedUsageCapacityPercentage > 100) {\n            unusedUsageCapacityPercentage = 100 - unusedUsageCapacityPercentage;\n        }\n        return (React.createElement(Grid, { hasGutter: true },\n            React.createElement(GridItem, { md: 12, lg: 6 },\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_usage_unused_label`)),\n                React.createElement(\"div\", { style: styles.capacity }, formatValue(unusedUsageCapacity)),\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_usage_unused_units`, {\n                    percentage: formatValue(unusedUsageCapacityPercentage, usageUnits),\n                    units: usageUnits,\n                }))),\n            React.createElement(GridItem, { md: 12, lg: 6 },\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_requests_unused_label`)),\n                React.createElement(\"div\", { style: styles.capacity }, formatValue(unusedRequestCapacity)),\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_requests_unused_units`, {\n                    percentage: formatValue(unusedRequestCapacityPercentage, requestUnits),\n                    units: requestUnits,\n                })))));\n    }\n    render() {\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef }, this.getCpuChart()));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportPathsType, reportType }) => {\n    const query = parseQuery(location.search);\n    const groupBy = getGroupById(query);\n    const groupByValue = getGroupByValue(query);\n    const newQuery = {\n        filter: {\n            time_scope_units: 'month',\n            time_scope_value: -1,\n            resolution: 'monthly',\n        },\n        filter_by: Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (groupBy && { [groupBy]: undefined })),\n        group_by: Object.assign({}, (groupBy && { [groupBy]: groupByValue })),\n    };\n    const queryString = getQuery(newQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        groupBy,\n        report,\n        reportFetchStatus,\n        queryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst UsageChart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(UsageChartBase));\nexport { UsageChart };\n","import { Button, ButtonVariant, Card, CardBody, CardTitle, Grid, GridItem, Popover, Title, } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { orgUnitIdKey, tagPrefix } from 'api/queries/query';\nimport { Cluster } from 'pages/views/details/components/cluster/cluster';\nimport { CostChart } from 'pages/views/details/components/costChart/costChart';\nimport { SummaryCard } from 'pages/views/details/components/summary/summaryCard';\nimport { UsageChart } from 'pages/views/details/components/usageChart/usageChart';\nimport { styles } from 'pages/views/details/ocpDetails/detailsHeader.styles';\nimport React from 'react';\nconst PLACEHOLDER = 'placeholder';\nclass CostOverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        // Returns cluster chart\n        this.getClusterChart = (widget) => {\n            const { groupBy, report, t } = this.props;\n            let showWidget = false;\n            for (const groupById of widget.cluster.showWidgetOnGroupBy) {\n                if (groupById === groupBy || (groupById === tagPrefix && groupBy.indexOf(tagPrefix) !== -1)) {\n                    showWidget = true;\n                    break;\n                }\n            }\n            if (showWidget) {\n                return (React.createElement(Card, null,\n                    React.createElement(CardTitle, null,\n                        React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('breakdown.cluster_title'))),\n                    React.createElement(CardBody, null,\n                        React.createElement(Cluster, { groupBy: widget.cluster.reportGroupBy, report: report }))));\n            }\n            return null;\n        };\n        // Returns cost breakdown chart\n        this.getCostChart = () => {\n            const { report, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" },\n                        t('breakdown.cost_breakdown_title'),\n                        React.createElement(Popover, { \"aria-label\": t('breakdown.cost_breakdown_aria_label'), enableFlip: true, bodyContent: React.createElement(React.Fragment, null,\n                                React.createElement(\"p\", { style: styles.infoTitle }, t('breakdown.raw_cost_title')),\n                                React.createElement(\"p\", null, t('breakdown.raw_cost_desc')),\n                                React.createElement(\"br\", null),\n                                React.createElement(\"p\", { style: styles.infoTitle }, t('breakdown.usage_cost_title')),\n                                React.createElement(\"p\", null, t('breakdown.usage_cost_desc')),\n                                React.createElement(\"br\", null),\n                                React.createElement(\"p\", { style: styles.infoTitle }, t('breakdown.markup_title')),\n                                React.createElement(\"p\", null, t('breakdown.markup_desc')),\n                                React.createElement(\"br\", null),\n                                React.createElement(\"a\", { href: t('docs.cost_model_terminology'), rel: \"noreferrer\", target: \"_blank\" }, t('learn_more'))) },\n                            React.createElement(Button, { variant: ButtonVariant.plain },\n                                React.createElement(OutlinedQuestionCircleIcon, { style: styles.info }))))),\n                React.createElement(CardBody, null,\n                    React.createElement(CostChart, { report: report }))));\n        };\n        // Returns CPU usage chart\n        this.getCpuUsageChart = (widget) => {\n            const { t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.cpu_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(UsageChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns memory usage chart\n        this.getMemoryUsageChart = (widget) => {\n            const { t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.memory_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(UsageChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns summary card widget\n        this.getSummaryCard = (widget) => {\n            const { groupBy, query } = this.props;\n            let showWidget = false;\n            for (const groupById of widget.reportSummary.showWidgetOnGroupBy) {\n                if (groupById === groupBy ||\n                    (query && query.group_by && query.group_by[orgUnitIdKey]) ||\n                    (groupById === tagPrefix && groupBy && groupBy.indexOf(tagPrefix) !== -1)) {\n                    showWidget = true;\n                    break;\n                }\n            }\n            if (showWidget) {\n                return (React.createElement(SummaryCard, { reportGroupBy: widget.reportSummary.reportGroupBy, reportPathsType: widget.reportPathsType, reportType: widget.reportType }));\n            }\n            else if (widget.reportSummary.usePlaceholder) {\n                return PLACEHOLDER;\n            }\n            return null;\n        };\n        // Helper to fill grid columns instead of rows, based on the order defined by the reducer\n        this.getWidgetsColumns = () => {\n            const { selectWidgets, widgets } = this.props;\n            const visibleWidgets = [];\n            widgets.map(widgetId => {\n                const widget = selectWidgets[widgetId];\n                const renderedWidget = this.renderWidget(widget);\n                if (renderedWidget !== null) {\n                    visibleWidgets.push(renderedWidget);\n                }\n            });\n            const rows = Math.floor(visibleWidgets.length / 2) + (visibleWidgets.length % 2);\n            const leftColumnWidgets = [];\n            const rightColumnWidgets = [];\n            for (let i = 0; i < rows; i++) {\n                if (visibleWidgets[i] !== PLACEHOLDER) {\n                    leftColumnWidgets.push(visibleWidgets[i]);\n                }\n                if (i + rows < visibleWidgets.length) {\n                    if (visibleWidgets[i + rows] !== PLACEHOLDER) {\n                        rightColumnWidgets.push(visibleWidgets[i + rows]);\n                    }\n                }\n            }\n            return { leftColumnWidgets, rightColumnWidgets };\n        };\n    }\n    // Returns rendered widget based on type\n    renderWidget(widget) {\n        switch (widget.type) {\n            case \"cluster\" /* cluster */:\n                return this.getClusterChart(widget);\n            case \"cost\" /* cost */:\n                return this.getCostChart();\n            case \"cpuUsage\" /* cpuUsage */:\n                return this.getCpuUsageChart(widget);\n            case \"memoryUsage\" /* memoryUsage */:\n                return this.getMemoryUsageChart(widget);\n            case \"summary\" /* reportSummary */:\n                return this.getSummaryCard(widget);\n            default:\n                return null;\n        }\n    }\n    render() {\n        // Sort widgets vertically\n        const { leftColumnWidgets, rightColumnWidgets } = this.getWidgetsColumns();\n        return (React.createElement(Grid, { hasGutter: true },\n            React.createElement(GridItem, { lg: 12, xl: 6 },\n                React.createElement(Grid, { hasGutter: true }, leftColumnWidgets.map((widget, index) => {\n                    return React.createElement(GridItem, { key: `widget-${index}` }, widget);\n                }))),\n            React.createElement(GridItem, { lg: 12, xl: 6 },\n                React.createElement(Grid, { hasGutter: true }, rightColumnWidgets.map((widget, index) => {\n                    return React.createElement(GridItem, { key: `widget-${index}` }, widget);\n                })))));\n    }\n}\nexport { CostOverviewBase };\n","import { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { global_spacer_lg } from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport { global_spacer_sm } from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    currentCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    currentCostData: {\n        fill: 'none',\n    },\n    itemsPerRow: 0,\n    previousCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    previousCostData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString } from 'components/charts/common/chartDatumUtils';\nimport { getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { noop } from 'utils/noop';\nimport { chartStyles, styles } from './historicalCostChart.styles';\nclass HistoricalCostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentCostData, currentInfrastructureCostData, previousCostData, previousInfrastructureCostData, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            const costInfrastructureTooltipKey = 'chart.cost_infrastructure_legend_tooltip';\n            const costTooltipKey = 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousCostData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentCostData, costTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentCostData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'previousInfrastructureCost',\n                    data: previousInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(previousInfrastructureCostData, costInfrastructureTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousInfrastructureCostData), { stroke: chartStyles.previousColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'currentInfrastructureCost',\n                    data: currentInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(currentInfrastructureCostData, costInfrastructureTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentInfrastructureCostData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 120,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 700 ? chartStyles.itemsPerRow : 2;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\" }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.currentInfrastructureCostData !== this.props.currentInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData ||\n            prevProps.previousInfrastructureCostData !== this.props.previousInfrastructureCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, previousInfrastructureCostData } = this.props;\n        const currentRequestDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousRequestDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        return currentRequestDate > 0 || previousRequestDate > 0 ? Math.max(currentRequestDate, previousRequestDate) : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 120,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 700\n                ? containerHeight - 25\n                : containerHeight\n            : containerHeight;\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: adjustedContainerHeight }) },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis }))))));\n    }\n}\nexport { HistoricalCostChart };\n","import global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    chartHeight: 300,\n    chartContainerHeight: 300,\n};\nexport const styles = {\n    chartContainer: {\n        marginLeft: global_spacer_lg.value,\n    },\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n    costChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    trendChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    usageChart: {\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import { Skeleton } from '@patternfly/react-core';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { transformReport } from 'components/charts/common/chartDatumUtils';\nimport { HistoricalCostChart } from 'components/charts/historicalCostChart';\nimport { getGroupById, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataCostChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, width: skeletonWidth.xs })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, reportType, t, } = this.props;\n        // Current data\n        const currentData = transformReport(currentReport, 0 /* rolling */, 'date', 'cost');\n        const currentInfrastructureCostData = transformReport(currentReport, 0 /* rolling */, 'date', 'infrastructure');\n        // Previous data\n        const previousData = transformReport(previousReport, 0 /* rolling */, 'date', 'cost');\n        const previousInfrastructureCostData = transformReport(previousReport, 0 /* rolling */, 'date', 'infrastructure');\n        const costUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.cost\n            ? currentReport.meta.total.cost.total.units\n            : 'USD';\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.costChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalCostChart, { adjustContainerHeight: true, containerHeight: chartStyles.chartContainerHeight - 25, currentCostData: currentData, currentInfrastructureCostData: currentInfrastructureCostData, formatDatumValue: formatValue, formatDatumOptions: {}, height: chartStyles.chartHeight, previousCostData: previousData, previousInfrastructureCostData: previousInfrastructureCostData, xAxisLabel: t(`breakdown.historical_chart.day_of_month_label`), yAxisLabel: t(`breakdown.historical_chart.${reportType}_label`, {\n                    units: t(`units.${unitLookupKey(costUnits)}`),\n                }) })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportPathsType, reportType }) => {\n    const query = parseQuery(location.search);\n    const groupBy = getGroupById(query);\n    const groupByValue = getGroupByValue(query);\n    const baseQuery = {\n        filter_by: Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (groupBy && { [groupBy]: undefined })),\n        group_by: Object.assign({}, (groupBy && { [groupBy]: groupByValue })),\n    };\n    const currentQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        } });\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -2,\n        } });\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataCostChart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataCostChartBase));\nexport { HistoricalDataCostChart };\n","import { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { global_spacer_lg } from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport { global_spacer_sm } from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentMonthData: {\n        fill: 'none',\n    },\n    itemsPerRow: 0,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousMonthData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { noop } from 'utils/noop';\nimport { chartStyles, styles } from './historicalTrendChart.styles';\nclass HistoricalTrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, previousData, showUsageLegendLabel = false } = this.props;\n            const key = showUsageLegendLabel ? 'chart.usage_legend_label' : 'chart.cost_legend_label';\n            const toolTipKey = showUsageLegendLabel ? 'chart.usage_legend_tooltip' : 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousData,\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousData, toolTipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousMonthData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentData,\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentData, toolTipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentMonthData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 120,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: legendItemsPerRow, name: \"legend\" }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData || prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0 ? Math.max(currentDate, previousDate) : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, containerHeight = height, padding = {\n            bottom: 120,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: containerHeight }) },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis }))))));\n    }\n}\nexport { HistoricalTrendChart };\n","import { Skeleton } from '@patternfly/react-core';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { transformReport } from 'components/charts/common/chartDatumUtils';\nimport { HistoricalTrendChart } from 'components/charts/historicalTrendChart';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataTrendChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, width: skeletonWidth.xs })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, reportType, t, } = this.props;\n        const isCostChart = reportType === \"cost\" /* cost */;\n        // Current data\n        const currentData = transformReport(currentReport, isCostChart ? 0 /* rolling */ : 1 /* daily */, 'date', isCostChart ? 'cost' : 'usage');\n        const previousData = transformReport(previousReport, isCostChart ? 0 /* rolling */ : 1 /* daily */, 'date', isCostChart ? 'cost' : 'usage');\n        const costUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.cost\n            ? currentReport.meta.total.cost.total.units\n            : 'USD';\n        let usageUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.usage\n            ? currentReport.meta.total.usage.units\n            : undefined;\n        let yAxisLabel;\n        if (isCostChart) {\n            yAxisLabel = t(`breakdown.historical_chart.${reportType}_label`, {\n                units: t(`units.${unitLookupKey(costUnits)}`),\n            });\n        }\n        else if (usageUnits && Number.isNaN(Number(currentReport.meta.total.usage.units))) {\n            yAxisLabel = t(`breakdown.historical_chart.units_label`, {\n                units: t(`units.${unitLookupKey(usageUnits)}`),\n            });\n        }\n        else {\n            usageUnits = t(`breakdown.historical_chart.${reportType}_label`);\n            yAxisLabel = t(`breakdown.historical_chart.units_label`, {\n                units: t(`units.${unitLookupKey(usageUnits)}`),\n            });\n        }\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.trendChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalTrendChart, { containerHeight: chartStyles.chartContainerHeight - 50, currentData: currentData, formatDatumValue: formatValue, formatDatumOptions: {}, height: chartStyles.chartHeight, previousData: previousData, units: isCostChart ? costUnits : usageUnits, xAxisLabel: t(`breakdown.historical_chart.day_of_month_label`), yAxisLabel: yAxisLabel })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportPathsType, reportType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = groupByOrgValue ? orgUnitIdKey : getGroupById(query);\n    const groupByValue = groupByOrgValue ? groupByOrgValue : getGroupByValue(query);\n    const baseQuery = {\n        filter_by: Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: undefined })),\n        group_by: Object.assign({}, (groupBy && { [groupBy]: groupByValue })),\n    };\n    const currentQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        } });\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -2,\n        } });\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataTrendChart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataTrendChartBase));\nexport { HistoricalDataTrendChart };\n","import { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { global_spacer_lg } from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport { global_spacer_sm } from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    currentCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentLimitData: {\n        fill: 'none',\n    },\n    currentRequestData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    currentUsageData: {\n        fill: 'none',\n    },\n    itemsPerRow: 0,\n    previousCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousLimitData: {\n        fill: 'none',\n    },\n    previousRequestData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    previousUsageData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getUsageRangeString } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { noop } from 'utils/noop';\nimport { chartStyles, styles } from './historicalUsageChart.styles';\nclass HistoricalUsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentLimitData, currentRequestData, currentUsageData, previousLimitData, previousRequestData, previousUsageData, } = this.props;\n            const limitKey = 'chart.limit_legend_label';\n            const limitTooltipKey = 'chart.limit_legend_tooltip';\n            const requestKey = 'chart.requests_legend_label';\n            const requestTooltipKey = 'chart.requests_legend_tooltip';\n            const usageKey = 'chart.usage_legend_label';\n            const usageTooltipKey = 'chart.usage_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousUsage',\n                    data: previousUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(previousUsageData, usageKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(previousUsageData, usageTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousUsageData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentUsage',\n                    data: currentUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(currentUsageData, usageKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(currentUsageData, usageTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentUsageData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'previousRequest',\n                    data: previousRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(previousRequestData, requestKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(previousRequestData, requestTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousRequestData), { stroke: chartStyles.previousColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'currentRequest',\n                    data: currentRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(currentRequestData, requestKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(currentRequestData, requestTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentRequestData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'previousLimit',\n                    data: previousLimitData,\n                    legendItem: {\n                        name: getUsageRangeString(previousLimitData, limitKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[2],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(previousLimitData, limitTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousLimitData), { stroke: chartStyles.previousColorScale[2] }),\n                    },\n                },\n                {\n                    childName: 'currentLimit',\n                    data: currentLimitData,\n                    legendItem: {\n                        name: getUsageRangeString(currentLimitData, limitKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[2],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(currentLimitData, limitTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentLimitData), { stroke: chartStyles.currentColorScale[2] }),\n                    },\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 130,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 900 ? chartStyles.itemsPerRow : 2;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\" }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentLimitData !== this.props.currentLimitData ||\n            prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousLimitData !== this.props.previousLimitData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n        const currentRequestDate = currentRequestData ? getDate(getDateRange(currentRequestData, true, true)[1]) : 0;\n        const currentUsageDate = currentUsageData ? getDate(getDateRange(currentUsageData, true, true)[1]) : 0;\n        const previousRequestDate = previousRequestData ? getDate(getDateRange(previousRequestData, true, true)[1]) : 0;\n        const previousUsageDate = previousUsageData ? getDate(getDateRange(previousUsageData, true, true)[1]) : 0;\n        return currentRequestDate > 0 || currentUsageDate > 0 || previousRequestDate > 0 || previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 130,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 900\n                ? containerHeight - 50\n                : containerHeight\n            : containerHeight;\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: adjustedContainerHeight }) },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis }))))));\n    }\n}\nexport { HistoricalUsageChart };\n","import { Skeleton } from '@patternfly/react-core';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { transformReport } from 'components/charts/common/chartDatumUtils';\nimport { HistoricalUsageChart } from 'components/charts/historicalUsageChart';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataUsageChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, width: skeletonWidth.xs })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, t } = this.props;\n        // Current data\n        const currentLimitData = transformReport(currentReport, 1 /* daily */, 'date', 'limit');\n        const currentRequestData = transformReport(currentReport, 1 /* daily */, 'date', 'request');\n        const currentUsageData = transformReport(currentReport, 1 /* daily */, 'date', 'usage');\n        // Previous data\n        const previousLimitData = transformReport(previousReport, 1 /* daily */, 'date', 'limit');\n        const previousRequestData = transformReport(previousReport, 1 /* daily */, 'date', 'request');\n        const previousUsageData = transformReport(previousReport, 1 /* daily */, 'date', 'usage');\n        const usageUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.usage\n            ? currentReport.meta.total.usage.units\n            : '';\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.usageChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalUsageChart, { adjustContainerHeight: true, containerHeight: chartStyles.chartContainerHeight, currentLimitData: currentLimitData, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: {}, height: chartStyles.chartHeight, previousLimitData: previousLimitData, previousRequestData: previousRequestData, previousUsageData: previousUsageData, xAxisLabel: t(`breakdown.historical_chart.day_of_month_label`), yAxisLabel: t(`breakdown.historical_chart.units_label`, {\n                    units: t(`units.${unitLookupKey(usageUnits)}`),\n                }) })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportPathsType, reportType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = getGroupById(query);\n    const groupByValue = getGroupByValue(query);\n    // instance-types and storage APIs must filter org units\n    const useFilter = reportType === \"instance_type\" /* instanceType */ || reportType === \"storage\" /* storage */;\n    const baseQuery = {\n        filter_by: Object.assign(Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: undefined })), (groupByOrgValue && useFilter && { [orgUnitIdKey]: groupByOrgValue })),\n        group_by: Object.assign(Object.assign({}, (groupByOrgValue && !useFilter && { [orgUnitIdKey]: groupByOrgValue })), (groupBy && !groupByOrgValue && { [groupBy]: groupByValue })),\n    };\n    const currentQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        } });\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -2,\n        } });\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataUsageChart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataUsageChartBase));\nexport { HistoricalDataUsageChart };\n","import { Card, CardBody, CardTitle, Grid, GridItem, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport { HistoricalDataCostChart } from './historicalDataCostChart';\nimport { HistoricalDataTrendChart } from './historicalDataTrendChart';\nimport { HistoricalDataUsageChart } from './historicalDataUsageChart';\nclass HistoricalDataBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        // Returns cost chart\n        this.getCostChart = (widget) => {\n            const { t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.historical_chart.${widget.reportType}_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataCostChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns trend chart\n        this.getTrendChart = (widget) => {\n            const { t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.historical_chart.${widget.reportType}_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataTrendChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns usage chart\n        this.getUsageChart = (widget) => {\n            const { t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.historical_chart.${widget.reportType}_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataUsageChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n    }\n    // Returns rendered widget based on type\n    renderWidget(widget) {\n        switch (widget.type) {\n            case \"cost\" /* cost */:\n                return this.getCostChart(widget);\n            case \"trend\" /* trend */:\n                return this.getTrendChart(widget);\n            case \"usage\" /* usage */:\n                return this.getUsageChart(widget);\n            default:\n                return null;\n        }\n    }\n    render() {\n        const { selectWidgets, widgets } = this.props;\n        return (React.createElement(Grid, { hasGutter: true }, widgets.map(widgetId => {\n            const widget = selectWidgets[widgetId];\n            return React.createElement(GridItem, { key: `widget-${widgetId}` }, this.renderWidget(widget));\n        })));\n    }\n}\nexport { HistoricalDataBase };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_Color_200 from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    cost: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    costLabel: {},\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    costLabelDate: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_200.var,\n    },\n    header: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: global_spacer_lg.var,\n        backgroundColor: global_BackgroundColor_light_100.var,\n    },\n    info: {\n        verticalAlign: 'middle',\n    },\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { orgUnitIdKey, tagPrefix } from 'api/queries/query';\nexport const getGroupById = (query) => {\n    const groupBys = query && query.group_by ? Object.keys(query.group_by) : [];\n    return groupBys.find(key => key !== orgUnitIdKey);\n};\nexport const getGroupByValue = (query) => {\n    const groupById = getGroupById(query);\n    return groupById ? query.group_by[groupById] : undefined;\n};\nexport const getGroupByOrgValue = (query) => {\n    let groupByOrg;\n    if (query && query.group_by) {\n        for (const groupBy of Object.keys(query.group_by)) {\n            if (groupBy === orgUnitIdKey) {\n                groupByOrg = query.group_by[orgUnitIdKey];\n                break;\n            }\n        }\n    }\n    return groupByOrg;\n};\nexport const getGroupByTagKey = (query) => {\n    let groupByTagKey;\n    if (query && query.group_by) {\n        for (const groupBy of Object.keys(query.group_by)) {\n            const tagIndex = groupBy.indexOf(tagPrefix);\n            if (tagIndex !== -1) {\n                groupByTagKey = groupBy.substring(tagIndex + tagPrefix.length);\n                break;\n            }\n        }\n    }\n    return groupByTagKey;\n};\n","import { getQueryRoute } from 'api/queries/query';\nimport { breakdownDescKey, breakdownTitleKey, orgUnitIdKey } from 'api/queries/query';\nexport const getBreakdownPath = ({ basePath, label, description, groupBy, query, }) => {\n    const newQuery = Object.assign(Object.assign(Object.assign({}, query), (description && description !== label && { [breakdownDescKey]: description })), { group_by: {\n            [groupBy]: label,\n        } });\n    return `${basePath}?${getQueryRoute(newQuery)}`;\n};\nexport const getOrgBreakdownPath = ({ basePath, description, groupBy, groupByOrg, id, orgUnitId, query, title, type, }) => {\n    const newQuery = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), (description && description !== title && { [breakdownDescKey]: description })), (title && { [breakdownTitleKey]: title })), (groupByOrg && orgUnitId && { [orgUnitIdKey]: orgUnitId })), { group_by: {\n            [groupBy]: id,\n        } });\n    if (!newQuery.filter) {\n        newQuery.filter = {};\n    }\n    if (type === 'account') {\n        newQuery.filter.account = id;\n        newQuery.group_by = {\n            [orgUnitIdKey]: groupByOrg,\n        };\n    }\n    else if (type === 'organizational_unit') {\n        newQuery.group_by = {\n            [orgUnitIdKey]: id,\n        };\n    }\n    return `${basePath}?${getQueryRoute(newQuery)}`;\n};\n","export const addQueryFilter = (query, filterType, filterValue) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    // Filter by * won't generate a new request if group_by * already exists\n    if (filterValue === '*' && newQuery.group_by[filterType] === '*') {\n        return;\n    }\n    if (newQuery.filter_by[filterType]) {\n        let found = false;\n        const filters = newQuery.filter_by[filterType];\n        if (!Array.isArray(filters)) {\n            found = filterValue === newQuery.filter_by[filterType];\n        }\n        else {\n            for (const filter of filters) {\n                if (filter === filterValue) {\n                    found = true;\n                    break;\n                }\n            }\n        }\n        if (!found) {\n            newQuery.filter_by[filterType] = [newQuery.filter_by[filterType], filterValue];\n        }\n    }\n    else {\n        newQuery.filter_by[filterType] = [filterValue];\n    }\n    return newQuery;\n};\nexport const removeQueryFilter = (query, filterType, filterValue) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    if (filterType === null) {\n        newQuery.filter_by = undefined; // Clear all\n    }\n    else if (filterValue === null) {\n        newQuery.filter_by[filterType] = undefined; // Clear all values\n    }\n    else if (Array.isArray(newQuery.filter_by[filterType])) {\n        const index = newQuery.filter_by[filterType].indexOf(filterValue);\n        if (index > -1) {\n            newQuery.filter_by[filterType] = [\n                ...query.filter_by[filterType].slice(0, index),\n                ...query.filter_by[filterType].slice(index + 1),\n            ];\n        }\n    }\n    else {\n        newQuery.filter_by[filterType] = undefined;\n    }\n    return newQuery;\n};\n","export const testIdProp = 'data-testid';\nexport const getTestProps = (id) => ({ [testIdProp]: id });\nexport const testIds = {\n    details: {\n        cluster_lnk: 'cluster-lnk',\n        historical_data_btn: 'historical-data-btn',\n        show_more_btn: 'show-more-btn',\n        tag_lnk: 'tag-lnk',\n        view_all_btn: 'view-all-btn',\n    },\n    export: {\n        cancel_btn: 'cancel-btn',\n        submit_btn: 'submit-btn',\n    },\n    login: {\n        alert: 'alert',\n        form: 'login-form',\n        username_input: 'username-input',\n        password_input: 'password-input',\n        submit: 'submit',\n    },\n    masthead: {\n        masthead: 'masthead',\n        username: 'username',\n        sidebarToggle: 'sidebar-toggle',\n        logout: 'logout',\n    },\n    onboarding: {\n        btn_cancel: 'btn-cancel',\n        btn_back: 'btn-back',\n        btn_continue: 'btn-continue',\n        btn_close: 'btn-close',\n        type_selector: 'type-selector',\n        type_opt_aws: 'type-option-aws',\n        type_opt_ocp: 'type-option-ocp',\n        type_opt_non: 'type-option-non',\n        name_input: 'name-input',\n        check_box_1: 'check-box-1',\n        check_box_2: 'check-box-2',\n        s3_input: 's3-input',\n        clusterid_input: 'clusterid-input',\n        arn_input: 'arn-input',\n    },\n    providers: {\n        add_btn: 'add-btn',\n        bucket_input: 'bucket-input',\n        cancel_btn: 'cancel-btn',\n        empty_state_add_btn: 'empty_state_add-btn',\n        name_input: 'provider-name-input',\n        resource_name_input: 'provider-resource-name-input',\n        cluster_id_input: 'provider-cluster-id-input',\n        submit_btn: 'submit-btn',\n        type_input: 'provider-type-input',\n    },\n    sidebar: {\n        nav: 'vertical-nav',\n        link: 'vertical-nav-link',\n        backdrop: 'sidebar-backdrop',\n    },\n};\n","import { endOfMonth, format, getDate, getMonth, startOfMonth } from 'date-fns';\nimport i18next from 'i18next';\nexport function getNoDataForDateRangeString(key = 'no_data_for_date', offset = 1) {\n    const today = new Date();\n    today.setHours(0);\n    today.setMinutes(0);\n    today.setSeconds(0);\n    if (offset) {\n        today.setMonth(today.getMonth() - offset);\n    }\n    const month = getMonth(today);\n    const endDate = format(today, 'd');\n    const startDate = format(startOfMonth(today), 'd');\n    return i18next.t(key, {\n        count: getDate(today),\n        endDate,\n        month,\n        startDate,\n    });\n}\nexport function getForDateRangeString(value, key = 'for_date', offset = 1) {\n    const today = new Date();\n    today.setHours(0);\n    today.setMinutes(0);\n    today.setSeconds(0);\n    if (offset) {\n        today.setMonth(today.getMonth() - offset);\n    }\n    const month = getMonth(today);\n    const endDate = format(today, 'd');\n    const startDate = format(startOfMonth(today), 'd');\n    return i18next.t(key, {\n        count: getDate(today),\n        endDate,\n        month,\n        startDate,\n        value,\n    });\n}\nexport function getSinceDateRangeString(key = 'since_date') {\n    const today = new Date();\n    today.setHours(0);\n    today.setMinutes(0);\n    today.setSeconds(0);\n    const month = getMonth(today);\n    const endDate = format(today, 'd');\n    const startDate = format(startOfMonth(today), 'd');\n    return i18next.t(key, {\n        count: getDate(today),\n        endDate,\n        month,\n        startDate,\n    });\n}\nexport function getMonthDate(offset) {\n    const today = new Date();\n    today.setHours(0);\n    today.setMinutes(0);\n    today.setSeconds(0);\n    if (offset) {\n        today.setDate(1); // Required to obtain correct month\n        today.setMonth(today.getMonth() - offset);\n    }\n    const start_date = format(startOfMonth(today), 'yyyy-MM-dd');\n    const end_date = format(offset ? endOfMonth(today) : today, 'yyyy-MM-dd');\n    return { start_date, end_date };\n}\nexport function getCurrentMonthDate() {\n    return getMonthDate(0);\n}\nexport function getPreviousMonthDate() {\n    return getMonthDate(1);\n}\n// Returns offset + 1 days, including today's date. See https://issues.redhat.com/browse/COST-1117\nexport function getLastDaysDate(offset) {\n    const endDate = new Date();\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() - offset);\n    return {\n        end_date: format(endDate, 'yyyy-MM-dd'),\n        start_date: format(startDate, 'yyyy-MM-dd'),\n    };\n}\n// Returns 31 days, including today's date\nexport function getLast30DaysDate() {\n    return getLastDaysDate(30);\n}\n// Returns 61 days, including today's date\nexport function getLast60DaysDate() {\n    return getLastDaysDate(60);\n}\n","export function isEqual(obj1, obj2) {\n    let a = JSON.stringify(obj1);\n    let b = JSON.stringify(obj2);\n    if (!a) {\n        a = '';\n    }\n    if (!b) {\n        b = '';\n    }\n    return a.split('').sort().join('') === b.split('').sort().join('');\n}\n"],"sourceRoot":""}