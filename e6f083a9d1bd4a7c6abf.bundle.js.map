{"version":3,"sources":["webpack:///./src/pages/costModels/costModelsDetails/components/dropdown.tsx","webpack:///./src/pages/costModels/costModelsDetails/components/markup.styles.ts","webpack:///./src/pages/costModels/costModelsDetails/components/updateMarkupDialog.tsx","webpack:///./src/pages/costModels/costModelsDetails/components/markup.tsx","webpack:///./src/pages/costModels/costModelsDetails/components/addRateModal.styles.ts","webpack:///./src/pages/costModels/costModelsDetails/components/addRateModal.tsx","webpack:///./src/pages/costModels/costModelsDetails/components/updateRateModel.tsx","webpack:///./src/pages/costModels/costModelsDetails/components/priceListTable.tsx","webpack:///./src/pages/costModels/costModelsDetails/assignSourcesModalToolbar.tsx","webpack:///./src/pages/costModels/costModelsDetails/addSourceStep.tsx","webpack:///./src/pages/costModels/costModelsDetails/addSourceWizard.tsx","webpack:///./src/pages/costModels/costModelsDetails/components/sourcesToolbar.tsx","webpack:///./src/pages/costModels/costModelsDetails/components/table.styles.ts","webpack:///./src/pages/costModels/costModelsDetails/components/table.tsx","webpack:///./src/pages/costModels/costModelsDetails/sourceTable.tsx","webpack:///./src/pages/costModels/costModel/costModelInfo.styles.ts","webpack:///./src/pages/costModels/costModelsDetails/components/updateCostModel.tsx","webpack:///./src/pages/costModels/costModel/header.tsx","webpack:///./src/pages/costModels/costModel/index.tsx"],"names":["Component","props","super","this","state","isOpen","onToggle","bind","onSelect","setState","prevState","isPlain","direction","position","dropdownItems","createElement","Dropdown","toggle","KebabToggle","styles","card","minHeight","maxWidth","marginLeft","global_spacer_md","value","cardBody","fontSize","global_FontSize_xl","textAlign","markup","String","current","error","onClose","updateCostModel","isLoading","t","Modal","title","cost_model","name","variant","actions","Button","key","onClick","newState","Object","assign","source_uuids","sources","map","provider","uuid","source_type","unit","isDisabled","isNaN","Number","Fragment","Alert","Form","FormGroup","label","fieldId","helperTextInvalid","validated","InputGroup","style","width","TextInput","type","id","onChange","InputGroupText","borderLeft","updateProcessing","updateError","setCostModelDialog","stateProps","dispatchProps","ownProps","updateMarkup","isDialogOpen","isUpdateDialogOpen","costModelDialog","isWritePermission","rbac","isCostModelWritePermission","markupValue","toFixed","Card","CardHeader","CardHeaderMain","CardActions","DropdownItem","component","CardBody","isFilled","form","arguments","service","onTransition","initialState","start","stop","isProcessing","onProceed","context","metric","measurement","rate","costType","matches","ValidCancelButton","secondary","primary","CancelButton","metricsHash","costTypes","send","stateNames","toStrings","mainState","length","availableRates","rates","r","label_metric","label_measurement","options","keys","payload","metricOptions","metricChange","measurementOptions","m","units","label_measurement_unit","measurementChange","default_cost_type","rateChange","isRateInvalid","isMeasurementInvalid","costTypeChange","renderActionButtons","Stack","hasGutter","StackItem","Title","headingLevel","size","TextContent","Text","h6","renderForm","metrics","index","tiered_rates","cost_type","originalCostType","originalRate","borderRight","deleteRate","pagination","perPage","page","fetchStatus","fetchError","setDialogOpen","maxRate","metricOpts","measurementOpts","reduce","acc","curr","measurs","filter","i","includes","updateRate","slice","usage","addRate","isSmall","body","cm","costModel","assignees","List","p","ListItem","actionText","initialFilters","measurements","search","setSearch","onRemove","onClearAll","from","to","res","filtered","toString","meta","setPrimary","selected","secondaries","placeholderText","selections","setSelections","selection","filters","button","onClear","Pagination","isCompact","itemCount","onSetPage","_evt","onPerPageSelect","perPageOptions","Boolean","Bullseye","EmptyState","EmptyStateIcon","icon","EmptyStateBody","tiers","undefined","pointerEvents","tooltip","rowIndex","_rowData","_extra","Toolbar","ToolbarContent","ToolbarItem","status","SearchInput","placeholder","onSearch","onKeyPress","evt","AssignSourcesToolbar","searchInputProps","paginationProps","clearAllFilters","ToolbarFilter","deleteChip","chips","query","categoryName","isLoadingSources","fetchingSourcesError","isSelected","rowId","checked","providers","cur","providerData","ix","provCostModels","cost_models","join","warningIcon","find","text","cellName","cells","Checkbox","isChecked","fetch","category","chip","newQuery","split","updateFilter","currentFilterType","currentFilterValue","currentFilter","curQuery","count","newPerPage","newPage","Table","rows","subTitle","flexDirection","ToolbarGroup","updateFilterToolbar","prevProps","initChecked","some","isUpdateInProgress","onSave","updateApiError","Split","SplitItem","fetchSources","SourcesToolbar","actionButtonProps","categoryNames","emptyState","display","justifyContent","onAdd","filteredRows","every","fName","children","_category","actionResolver","onDelete","onDeleteText","dialogSource","addSource","deleteSource","source","item","headerDescription","wordWrap","content","paddingTop","global_spacer_xl","height","costmodelsContainer","marginRight","backgroundColor","global_BackgroundColor_light_100","paddingBottom","headerCostModel","padding","global_spacer_lg","var","global_spacer_sm","__rest","s","e","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","propertyIsEnumerable","description","created_timestamp","updated_timestamp","previous","isRequired","TextArea","costModels","isDeleteProcessing","deleteProcessing","deleteError","deleteCostModel","tabRefs","tabIndex","onSelectTab","historyObject","Breadcrumb","breadcrumb","BreadcrumbItem","isActive","sourceTypeTitle","Tabs","activeKey","Tab","eventKey","TabTitleText","tabContentId","tabContentRef","createRef","fetchRbac","fetchMetrics","fetchCostModels","match","params","metricsStatus","rbacStatus","costModelStatus","rbacError","costModelError","metricsError","history","TabContent","ref","hidden","store","metricsState","selectRbacState"],"mappings":"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","file":"e6f083a9d1bd4a7c6abf.bundle.js","sourcesContent":["import { Dropdown, KebabToggle } from '@patternfly/react-core';\nimport React from 'react';\nclass DropdownBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { isOpen: false };\n        this.onToggle = this.onToggle.bind(this);\n        this.onSelect = this.onSelect.bind(this);\n    }\n    onSelect() {\n        this.setState(prevState => ({ isOpen: !prevState.isOpen }));\n    }\n    onToggle(isOpen) {\n        this.setState({ isOpen });\n    }\n    render() {\n        const { isPlain = false, direction = 'down', position = 'left', dropdownItems, } = this.props;\n        return (React.createElement(Dropdown, { isPlain: isPlain, position: position, direction: direction, isOpen: this.state.isOpen, onSelect: this.onSelect, toggle: React.createElement(KebabToggle, { onToggle: this.onToggle }), dropdownItems: dropdownItems }));\n    }\n}\nexport default DropdownBase;\n","import { global_FontSize_xl, global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = {\n    card: {\n        minHeight: '130px',\n        maxWidth: '400px',\n        marginLeft: global_spacer_md.value,\n    },\n    cardBody: {\n        fontSize: global_FontSize_xl.value,\n        textAlign: 'center',\n    },\n};\n","import { Alert, Button, Form, FormGroup, InputGroup, InputGroupText, Modal, TextInput, } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nclass UpdateMarkupModelBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            markup: String(this.props.current.markup.value || 0),\n        };\n    }\n    render() {\n        const { error, current, onClose, updateCostModel, isLoading, t, } = this.props;\n        return (React.createElement(Modal, { title: t('cost_models_details.edit_markup', {\n                cost_model: current.name,\n            }), isOpen: true, onClose: () => onClose({ name: 'updateMarkup', isOpen: false }), variant: \"small\", actions: [\n                React.createElement(Button, { key: \"proceed\", variant: \"primary\", onClick: () => {\n                        const newState = Object.assign(Object.assign({}, current), { source_uuids: current.sources.map(provider => provider.uuid), source_type: current.source_type === 'OpenShift Container Platform'\n                                ? 'OCP'\n                                : 'AWS', markup: {\n                                value: this.state.markup,\n                                unit: 'percent',\n                            } });\n                        updateCostModel(current.uuid, newState, 'updateMarkup');\n                    }, isDisabled: isNaN(Number(this.state.markup)) ||\n                        Number(this.state.markup) === Number(current.markup.value || 0) ||\n                        isLoading }, t('cost_models_details.add_rate_modal.save')),\n                React.createElement(Button, { key: \"cancel\", variant: \"secondary\", onClick: () => onClose({ name: 'updateMarkup', isOpen: false }), isDisabled: isLoading }, t('cost_models_details.add_rate_modal.cancel')),\n            ] },\n            React.createElement(React.Fragment, null,\n                error && React.createElement(Alert, { variant: \"danger\", title: `${error}` }),\n                React.createElement(Form, null,\n                    React.createElement(FormGroup, { label: t('cost_models_wizard.markup.markup_label'), fieldId: \"markup-input-box\", helperTextInvalid: t('cost_models_wizard.markup.invalid_markup_text'), validated: !isNaN(Number(this.state.markup)) ? 'default' : 'error' },\n                        React.createElement(InputGroup, { style: { width: '150px' } },\n                            React.createElement(TextInput, { type: \"text\", \"aria-label\": t('cost_models_wizard.markup.markup_label'), id: \"markup-input-box\", value: this.state.markup, onChange: (markup) => this.setState({ markup }), validated: !isNaN(Number(this.state.markup)) ? 'default' : 'error' }),\n                            React.createElement(InputGroupText, { style: { borderLeft: '0' } }, \"%\")))))));\n    }\n}\n// Fixes issue with Typescript:\n// https://github.com/microsoft/TypeScript/issues/25103#issuecomment-412806226\nconst mergeProps = (stateProps, dispatchProps, ownProps) => {\n    return Object.assign(Object.assign(Object.assign({}, stateProps), dispatchProps), ownProps);\n};\nexport default connect(createMapStateToProps(state => {\n    return {\n        isLoading: costModelsSelectors.updateProcessing(state),\n        error: costModelsSelectors.updateError(state),\n    };\n}), {\n    onClose: costModelsActions.setCostModelDialog,\n    updateCostModel: costModelsActions.updateCostModel,\n}, mergeProps)(translate()(UpdateMarkupModelBase));\n","import { Card, CardActions, CardBody, CardHeader, CardHeaderMain, DropdownItem, } from '@patternfly/react-core';\nimport { ReadOnlyTooltip } from 'pages/costModels/costModelsDetails/components/readOnlyTooltip';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { rbacSelectors } from 'store/rbac';\nimport Dropdown from './dropdown';\nimport { styles } from './markup.styles';\nimport UpdateMarkupDialog from './updateMarkupDialog';\nconst MarkupCardBase = ({ isWritePermission, setCostModelDialog, current, isUpdateDialogOpen, t, }) => {\n    const markupValue = current && current.markup && current.markup.value\n        ? Number(current.markup.value).toFixed(2)\n        : 0;\n    return (React.createElement(React.Fragment, null,\n        isUpdateDialogOpen && React.createElement(UpdateMarkupDialog, { current: current }),\n        React.createElement(Card, { style: styles.card },\n            React.createElement(CardHeader, null,\n                React.createElement(CardHeaderMain, null, t('cost_models_details.description_markup')),\n                React.createElement(CardActions, null,\n                    React.createElement(Dropdown, { isPlain: true, dropdownItems: [\n                            React.createElement(ReadOnlyTooltip, { key: \"edit\", isDisabled: !isWritePermission },\n                                React.createElement(DropdownItem, { isDisabled: !isWritePermission, onClick: () => setCostModelDialog({ isOpen: true, name: 'updateMarkup' }), component: \"button\" }, t('cost_models_details.edit_markup_action'))),\n                        ] }))),\n            React.createElement(CardBody, { isFilled: true }),\n            React.createElement(CardBody, { style: styles.cardBody },\n                markupValue,\n                \"%\"),\n            React.createElement(CardBody, { isFilled: true }))));\n};\nexport default connect(createMapStateToProps(state => {\n    const { updateMarkup } = costModelsSelectors.isDialogOpen(state)('markup');\n    return {\n        isUpdateDialogOpen: updateMarkup,\n        costModelDialog: costModelsSelectors.isDialogOpen(state)('markup'),\n        isWritePermission: rbacSelectors.isCostModelWritePermission(state),\n    };\n}), {\n    setCostModelDialog: costModelsActions.setCostModelDialog,\n})(translate()(MarkupCardBase));\n","export const styles = {\n    form: {\n        width: '350px',\n    },\n};\n","import { Alert, Button, ButtonVariant, Modal, Stack, StackItem, Text, TextContent, TextVariants, Title, } from '@patternfly/react-core';\nimport { Form } from 'components/forms/form';\nimport { SetMeasurement, SetMetric, SetRate, unusedRates, } from 'pages/costModels/components/addCostModelRateForm';\nimport { addRateMachine, } from 'pages/costModels/components/addPriceList';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { metricsSelectors } from 'store/metrics';\nimport { interpret } from 'xstate';\nimport { styles } from './addRateModal.styles';\nexport class AddRateModelBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.service = interpret(addRateMachine).onTransition(current => this.setState({ current }));\n        this.state = { current: addRateMachine.initialState };\n    }\n    componentDidMount() {\n        this.service.start();\n    }\n    componentWillUnmount() {\n        this.service.stop();\n    }\n    renderActionButtons() {\n        const { t, onClose, isProcessing, onProceed } = this.props;\n        const { current, current: { context: { metric, measurement, rate, costType }, }, } = this.state;\n        if (current.matches('setRate.valid')) {\n            const ValidCancelButton = (React.createElement(Button, { key: \"cancel\", variant: ButtonVariant.secondary, onClick: onClose, isDisabled: isProcessing }, t('cost_models_details.add_rate_modal.cancel')));\n            const ValidOkButton = (React.createElement(Button, { key: \"proceed\", variant: ButtonVariant.primary, onClick: () => onProceed(metric, measurement, rate, costType), isDisabled: isProcessing }, t('cost_models_details.add_rate')));\n            return [ValidOkButton, ValidCancelButton];\n        }\n        const CancelButton = (React.createElement(Button, { key: \"cancel\", variant: ButtonVariant.secondary, onClick: onClose }, t('cost_models_details.add_rate_modal.cancel')));\n        const OkButton = (React.createElement(Button, { key: \"proceed\", variant: ButtonVariant.primary, isDisabled: true }, t('cost_models_details.add_rate')));\n        return [OkButton, CancelButton];\n    }\n    renderForm() {\n        const { current: { context: { metric, measurement, rate, costType }, }, } = this.state;\n        const { metricsHash, costTypes, current, t } = this.props;\n        const { send } = this.service;\n        const stateNames = this.state.current.toStrings();\n        const mainState = stateNames.length > 1 ? stateNames[1] : stateNames[0];\n        const availableRates = unusedRates(metricsHash, current.rates.map(r => ({\n            metric: r.metric.label_metric,\n            measurement: r.metric.label_measurement,\n        })));\n        switch (mainState) {\n            case 'setMetric':\n                return (React.createElement(SetMetric, { t: t, options: Object.keys(availableRates).map(r => ({\n                        label: t(`cost_models.${r}`),\n                        value: r,\n                    })), onChange: (value) => send({ type: 'CHANGE_METRIC', payload: { metric: value } }), value: metric }));\n            case 'setMeasurement':\n                return (React.createElement(SetMeasurement, { t: t, metricOptions: Object.keys(availableRates).map(r => ({\n                        label: t(`cost_models.${r}`),\n                        value: r,\n                    })), metricChange: (value) => send({ type: 'CHANGE_METRIC', payload: { metric: value } }), metric: metric, measurementOptions: Object.keys(availableRates[metric]).map(m => ({\n                        label: t(`cost_models.${m}`, {\n                            units: metricsHash[metric][m].label_measurement_unit,\n                        }),\n                        value: m,\n                    })), measurement: measurement, measurementChange: (value) => send({\n                        type: 'CHANGE_MEASUREMENT',\n                        payload: {\n                            measurement: value,\n                            costType: metricsHash[metric][value].default_cost_type,\n                        },\n                    }) }));\n            case 'setRate.init':\n            case 'setRate.valid':\n                return (React.createElement(React.Fragment, null,\n                    React.createElement(SetRate, { t: t, metricOptions: Object.keys(availableRates).map(r => ({\n                            label: t(`cost_models.${r}`),\n                            value: r,\n                        })), metricChange: (value) => send({ type: 'CHANGE_METRIC', payload: { metric: value } }), metric: metric, measurementOptions: Object.keys(availableRates[metric] || {}).map(m => ({\n                            label: t(`cost_models.${m}`, {\n                                units: metricsHash[metric][m].label_measurement_unit,\n                            }),\n                            value: m,\n                        })), measurement: measurement, measurementChange: (value) => send({\n                            type: 'CHANGE_MEASUREMENT',\n                            payload: {\n                                measurement: value,\n                                costType: metricsHash[metric][value].default_cost_type,\n                            },\n                        }), rate: rate, rateChange: (value) => send({ type: 'CHANGE_RATE', payload: { rate: value } }), isRateInvalid: false, isMeasurementInvalid: false, costTypes: costTypes, costType: costType, costTypeChange: value => send({\n                            type: 'CHANGE_INFRA_COST',\n                            payload: { costType: value },\n                        }) })));\n            case 'setRate.invalid':\n                return (React.createElement(React.Fragment, null,\n                    React.createElement(SetRate, { t: t, metricOptions: Object.keys(availableRates).map(r => ({\n                            label: t(`cost_models.${r}`),\n                            value: r,\n                        })), metricChange: (value) => {\n                            send({ type: 'CHANGE_METRIC', payload: { metric: value } });\n                        }, metric: metric, measurement: measurement, measurementOptions: Object.keys(availableRates[metric]).map(m => ({\n                            label: t(`cost_models.${m}`, {\n                                units: metricsHash[metric][m].label_measurement_unit,\n                            }),\n                            value: m,\n                        })), measurementChange: (value) => send({\n                            type: 'CHANGE_MEASUREMENT',\n                            payload: {\n                                measurement: value,\n                                costType: metricsHash[metric][value].default_cost_type,\n                            },\n                        }), rate: rate, rateChange: (value) => send({ type: 'CHANGE_RATE', payload: { rate: value } }), isRateInvalid: isNaN(Number(rate)) || rate === '' || Number(rate) <= 0, isMeasurementInvalid: measurement === '', costTypes: costTypes, costType: costType, costTypeChange: value => send({\n                            type: 'CHANGE_INFRA_COST',\n                            payload: { costType: value },\n                        }) })));\n        }\n    }\n    render() {\n        const { updateError, current, onClose, t } = this.props;\n        return (React.createElement(Modal, { title: t('cost_models_details.add_rate_modal.title', {\n                name: current.name,\n            }), isOpen: true, onClose: onClose, actions: this.renderActionButtons(), variant: \"small\" },\n            React.createElement(React.Fragment, null,\n                updateError && React.createElement(Alert, { variant: \"danger\", title: `${updateError}` }),\n                React.createElement(Stack, { hasGutter: true },\n                    React.createElement(StackItem, null,\n                        React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('cost_models_details.cost_model.source_type'))),\n                    React.createElement(StackItem, null,\n                        React.createElement(TextContent, null,\n                            React.createElement(Text, { component: TextVariants.h6 }, current.source_type))),\n                    React.createElement(StackItem, null,\n                        React.createElement(Form, { style: styles.form }, this.renderForm()))))));\n    }\n}\nexport default connect(createMapStateToProps(state => ({\n    metricsHash: metricsSelectors.metrics(state),\n    costTypes: metricsSelectors.costTypes(state),\n})))(translate()(AddRateModelBase));\n","import { Alert, Button, FormGroup, InputGroup, InputGroupText, Modal, Stack, StackItem, Text, TextContent, TextInput, TextVariants, Title, } from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons/dist/js/icons/dollar-sign-icon';\nimport { Form } from 'components/forms/form';\nimport { canSubmit, CostTypeSelectorBase, isRateValid, } from 'pages/costModels/components/addCostModelRateForm';\nimport React from 'react';\nclass UpdateRateModelBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rate: String(this.props.current.rates[this.props.index].tiered_rates[0].value),\n            costType: this.props.current.rates[this.props.index].cost_type,\n        };\n    }\n    render() {\n        const { updateError, current, onClose, onProceed, isProcessing, t, index, metricsHash, costTypes, } = this.props;\n        const metric = current.rates[index].metric.label_metric;\n        const measurement = current.rates[index].metric.label_measurement;\n        const originalCostType = current.rates[index].cost_type;\n        const originalRate = String(this.props.current.rates[this.props.index].tiered_rates[0].value);\n        return (React.createElement(Modal, { title: t('cost_models_details.edit_rate'), isOpen: true, onClose: onClose, variant: \"small\", actions: [\n                React.createElement(Button, { key: \"proceed\", variant: \"primary\", onClick: () => onProceed(metric, measurement, this.state.rate, this.state.costType), isDisabled: canSubmit(this.state.rate) ||\n                        isProcessing ||\n                        (this.state.costType === originalCostType &&\n                            this.state.rate === originalRate) }, t('cost_models_details.add_rate_modal.save')),\n                React.createElement(Button, { key: \"cancel\", variant: \"secondary\", onClick: onClose, isDisabled: isProcessing }, t('cost_models_details.add_rate_modal.cancel')),\n            ] },\n            React.createElement(React.Fragment, null,\n                updateError && React.createElement(Alert, { variant: \"danger\", title: `${updateError}` }),\n                React.createElement(Stack, { hasGutter: true },\n                    React.createElement(StackItem, null,\n                        React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('cost_models_details.cost_model.source_type'))),\n                    React.createElement(StackItem, null,\n                        React.createElement(TextContent, null,\n                            React.createElement(Text, { component: TextVariants.h6 }, current.source_type))),\n                    React.createElement(StackItem, null,\n                        React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('cost_models.add_rate_form.metric_select'))),\n                    React.createElement(StackItem, null,\n                        React.createElement(TextContent, null,\n                            React.createElement(Text, { component: TextVariants.h6 }, t(`cost_models.${metric}`)))),\n                    React.createElement(StackItem, null,\n                        React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('cost_models.add_rate_form.measurement_select'))),\n                    React.createElement(StackItem, null,\n                        React.createElement(TextContent, null,\n                            React.createElement(Text, { component: TextVariants.h6 }, t(`cost_models.${measurement}`, {\n                                units: t(`cost_models.${metricsHash[metric][measurement].label_measurement_unit}`),\n                            })))),\n                    React.createElement(StackItem, null,\n                        React.createElement(Form, null,\n                            React.createElement(FormGroup, { label: t('cost_models.add_rate_form.rate_input'), fieldId: \"rate-input-box\", helperTextInvalid: t('cost_models.add_rate_form.error_message'), validated: isRateValid(this.state.rate) ? 'default' : 'error' },\n                                React.createElement(InputGroup, { style: { width: '350px' } },\n                                    React.createElement(InputGroupText, { style: { borderRight: '0' } },\n                                        React.createElement(DollarSignIcon, null)),\n                                    React.createElement(TextInput, { style: { borderLeft: '0' }, type: \"text\", \"aria-label\": t('cost_models_wizard.price_list.rate_aria_label'), id: \"rate-input-box\", value: this.state.rate, onChange: (rate) => this.setState({ rate }), validated: isRateValid(this.state.rate) ? 'default' : 'error' }))),\n                            React.createElement(\"div\", { style: { width: '350px' } },\n                                React.createElement(CostTypeSelectorBase, { t: t, costTypes: costTypes, value: this.state.costType, onChange: value => this.setState({ costType: value }) }))))))));\n    }\n}\nexport default UpdateRateModelBase;\n","import { Bullseye, Button, EmptyState, EmptyStateBody, EmptyStateIcon, List, ListItem, Pagination, Title, Toolbar, ToolbarContent, ToolbarItem, ToolbarItemVariant, } from '@patternfly/react-core';\nimport { FileInvoiceDollarIcon } from '@patternfly/react-icons/dist/js/icons/file-invoice-dollar-icon';\nimport { EmptyFilterState } from 'components/state/emptyFilterState/emptyFilterState';\nimport { ErrorState } from 'components/state/errorState/errorState';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport { WithPriceListSearch } from 'pages/costModels/components/hoc/withPriceListSearch';\nimport { PriceListToolbar } from 'pages/costModels/components/priceListToolbar';\nimport { RateTable } from 'pages/costModels/components/rateTable';\nimport { CheckboxSelector } from 'pages/costModels/components/toolbar/checkboxSelector';\nimport { PrimarySelector } from 'pages/costModels/components/toolbar/primarySelector';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { metricsSelectors } from 'store/metrics';\nimport { rbacSelectors } from 'store/rbac';\nimport AddRateModel from './addRateModal';\nimport Dialog from './dialog';\nimport UpdateRateModel from './updateRateModel';\nclass PriceListTable extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            deleteRate: null,\n            index: -1,\n            pagination: {\n                perPage: 6,\n                page: 1,\n            },\n        };\n    }\n    render() {\n        const { t, fetchStatus, fetchError, setDialogOpen, isDialogOpen, metricsHash, maxRate, isWritePermission, costTypes, } = this.props;\n        const metricOpts = Object.keys(metricsHash).map(m => ({\n            label: t(`cost_models.${m}`),\n            value: m,\n        }));\n        const measurementOpts = metricOpts.reduce((acc, curr) => {\n            const measurs = Object.keys(metricsHash[curr.value])\n                .filter(m => !acc.map(i => i.value).includes(m))\n                .map(m => ({ label: t(`toolbar.pricelist.options.${m}`), value: m }));\n            return [...acc, ...measurs];\n        }, []);\n        return (React.createElement(React.Fragment, null,\n            isDialogOpen.updateRate && (React.createElement(UpdateRateModel, { t: t, costTypes: costTypes, metricsHash: metricsHash, index: this.state.index, current: this.props.current, isProcessing: this.props.isLoading, onClose: () => setDialogOpen({ name: 'updateRate', isOpen: false }), onProceed: (metric, measurement, rate, costType) => {\n                    const newState = Object.assign(Object.assign({}, this.props.current), { source_uuids: this.props.current.sources.map(provider => provider.uuid), source_type: this.props.current.source_type ===\n                            'OpenShift Container Platform'\n                            ? 'OCP'\n                            : 'AWS', rates: [\n                            ...this.props.current.rates.slice(0, this.state.index),\n                            ...this.props.current.rates.slice(this.state.index + 1),\n                            {\n                                metric: { name: metricsHash[metric][measurement].metric },\n                                cost_type: costType,\n                                tiered_rates: [\n                                    {\n                                        unit: 'USD',\n                                        value: Number(rate),\n                                        usage: { unit: 'USD' },\n                                    },\n                                ],\n                            },\n                        ] });\n                    this.props.updateCostModel(this.props.current.uuid, newState, 'updateRate');\n                }, updateError: this.props.error })),\n            isDialogOpen.addRate && (React.createElement(AddRateModel, { updateError: this.props.error, current: this.props.current, isProcessing: this.props.isLoading, onClose: () => setDialogOpen({ name: 'addRate', isOpen: false }), onProceed: (metric, measurement, rate, costType) => {\n                    const newState = Object.assign(Object.assign({}, this.props.current), { source_uuids: this.props.current.sources.map(provider => provider.uuid), source_type: this.props.current.source_type ===\n                            'OpenShift Container Platform'\n                            ? 'OCP'\n                            : 'AWS', rates: [\n                            ...this.props.current.rates,\n                            {\n                                metric: { name: metricsHash[metric][measurement].metric },\n                                cost_type: costType,\n                                tiered_rates: [\n                                    {\n                                        unit: 'USD',\n                                        value: Number(rate),\n                                        usage: { unit: 'USD' },\n                                    },\n                                ],\n                            },\n                        ] });\n                    this.props.updateCostModel(this.props.current.uuid, newState, 'addRate');\n                } })),\n            React.createElement(Dialog, { isSmall: true, isOpen: isDialogOpen.deleteRate, title: t('dialog.rate.title', { rate: this.state.deleteRate }), onClose: () => {\n                    this.props.setDialogOpen({ name: 'deleteRate', isOpen: false });\n                    this.setState({ deleteRate: null });\n                }, isProcessing: this.props.isLoading, onProceed: () => {\n                    const { index } = this.state;\n                    const { current } = this.props;\n                    const newState = Object.assign(Object.assign({}, current), { source_uuids: current.sources.map(provider => provider.uuid), source_type: current.source_type === 'OpenShift Container Platform'\n                            ? 'OCP'\n                            : 'AWS', rates: [\n                            ...current.rates.slice(0, index),\n                            ...current.rates.slice(index + 1),\n                        ] });\n                    this.props.updateCostModel(current.uuid, newState, 'deleteRate');\n                }, body: React.createElement(React.Fragment, null,\n                    t('dialog.rate.body', {\n                        rate: this.state.deleteRate,\n                        cm: this.props.costModel,\n                    }),\n                    this.props.assignees && this.props.assignees.length > 0 && (React.createElement(React.Fragment, null,\n                        t('dialog.rate.assigned'),\n                        React.createElement(List, null, this.props.assignees.map(p => (React.createElement(ListItem, { key: p }, p))))))), actionText: t('dialog.deleteRate') }),\n            React.createElement(WithPriceListSearch, { initialFilters: { primary: 'metrics', metrics: [], measurements: [] } }, ({ search, setSearch, onRemove, onSelect, onClearAll }) => {\n                const from = (this.state.pagination.page - 1) * this.state.pagination.perPage;\n                const to = this.state.pagination.page * this.state.pagination.perPage;\n                const res = this.props.current.rates\n                    .filter(rate => search.metrics.length === 0 ||\n                    search.metrics.includes(rate.metric.label_metric))\n                    .filter(rate => search.measurements.length === 0 ||\n                    search.measurements.includes(rate.metric.label_measurement));\n                const filtered = res.slice(from, to).map(r => ({\n                    metric: r.metric.label_metric,\n                    measurement: r.metric.label_measurement,\n                    rate: r.tiered_rates[0].value.toString(),\n                    costType: r.cost_type,\n                    meta: r.metric,\n                }));\n                return (React.createElement(React.Fragment, null,\n                    React.createElement(PriceListToolbar, { primary: React.createElement(PrimarySelector, { isDisabled: this.props.current.rates.length === 0, primary: search.primary, setPrimary: (primary) => setSearch({ primary }), options: [\n                                {\n                                    label: t('toolbar.pricelist.metric'),\n                                    value: 'metrics',\n                                },\n                                {\n                                    label: t('toolbar.pricelist.measurement'),\n                                    value: 'measurements',\n                                },\n                            ] }), selected: search.primary, secondaries: [\n                            {\n                                component: (React.createElement(CheckboxSelector, { isDisabled: this.props.current.rates.length === 0, placeholderText: t('toolbar.pricelist.measurement_placeholder'), selections: search.measurements, setSelections: (selection) => onSelect('measurements', selection), options: measurementOpts })),\n                                name: 'measurements',\n                                onRemove,\n                                filters: search.measurements,\n                            },\n                            {\n                                component: (React.createElement(CheckboxSelector, { isDisabled: this.props.current.rates.length === 0, placeholderText: t('toolbar.pricelist.metric_placeholder'), selections: search.metrics, setSelections: (selection) => onSelect('metrics', selection), options: metricOpts })),\n                                name: 'metrics',\n                                onRemove,\n                                filters: search.metrics,\n                            },\n                        ], button: React.createElement(Button, { isDisabled: maxRate === this.props.current.rates.length\n                                ? true\n                                : !isWritePermission, onClick: () => this.props.setDialogOpen({\n                                name: 'addRate',\n                                isOpen: true,\n                            }) }, t('toolbar.pricelist.add_rate')), onClear: onClearAll, pagination: React.createElement(Pagination, { isCompact: true, itemCount: res.length, perPage: this.state.pagination.perPage, page: this.state.pagination.page, onSetPage: (_evt, page) => this.setState({\n                                pagination: Object.assign(Object.assign({}, this.state.pagination), { page }),\n                            }), onPerPageSelect: (_evt, perPage) => this.setState({ pagination: { page: 1, perPage } }), perPageOptions: [\n                                { title: '2', value: 2 },\n                                { title: '4', value: 4 },\n                                { title: '6', value: 6 },\n                            ] }) }),\n                    fetchStatus !== 2 /* complete */ && React.createElement(LoadingState, null),\n                    fetchStatus === 2 /* complete */ &&\n                        Boolean(fetchError) && React.createElement(ErrorState, { error: fetchError }),\n                    fetchStatus === 2 /* complete */ &&\n                        filtered.length === 0 &&\n                        (search.metrics.length !== 0 ||\n                            search.measurements.length !== 0) && (React.createElement(EmptyFilterState, { filter: t('cost_models_wizard.price_list.toolbar_top_results_aria_label') })),\n                    fetchStatus === 2 /* complete */ &&\n                        filtered.length === 0 &&\n                        search.measurements.length === 0 &&\n                        search.metrics.length === 0 && (React.createElement(Bullseye, null,\n                        React.createElement(EmptyState, null,\n                            React.createElement(EmptyStateIcon, { icon: FileInvoiceDollarIcon }),\n                            React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('cost_models_details.empty_state_rate.title')),\n                            React.createElement(EmptyStateBody, null, t('cost_models_details.empty_state_rate.description'))))),\n                    fetchStatus === 2 /* complete */ && filtered.length > 0 && (React.createElement(React.Fragment, null,\n                        React.createElement(RateTable, { t: t, tiers: filtered, actions: [\n                                {\n                                    title: t('cost_models_wizard.price_list.update_button'),\n                                    isDisabled: !isWritePermission,\n                                    // HACK: to display tooltip on disable\n                                    style: !isWritePermission\n                                        ? { pointerEvents: 'auto' }\n                                        : undefined,\n                                    tooltip: !isWritePermission ? (React.createElement(\"div\", null, t('cost_models.read_only_tooltip'))) : (undefined),\n                                    onClick: (_evt, rowIndex, _rowData, _extra) => {\n                                        this.setState({\n                                            deleteRate: null,\n                                            index: rowIndex + from,\n                                        });\n                                        this.props.setDialogOpen({\n                                            name: 'updateRate',\n                                            isOpen: true,\n                                        });\n                                    },\n                                },\n                                {\n                                    title: t('cost_models_wizard.price_list.delete_button'),\n                                    isDisabled: !isWritePermission,\n                                    // HACK: to display tooltip on disable\n                                    style: !isWritePermission\n                                        ? { pointerEvents: 'auto' }\n                                        : {},\n                                    tooltip: !isWritePermission ? (React.createElement(\"div\", null, t('cost_models.read_only_tooltip'))) : (undefined),\n                                    onClick: (_evt, rowIndex, _rowData, _extra) => {\n                                        this.setState({\n                                            deleteRate: filtered[rowIndex],\n                                            index: rowIndex + from,\n                                        });\n                                        this.props.setDialogOpen({\n                                            name: 'deleteRate',\n                                            isOpen: true,\n                                        });\n                                    },\n                                },\n                            ] }),\n                        React.createElement(Toolbar, { id: \"price-list-toolbar-bottom\" },\n                            React.createElement(ToolbarContent, null,\n                                React.createElement(ToolbarItem, { variant: ToolbarItemVariant.pagination },\n                                    React.createElement(Pagination, { itemCount: res.length, perPage: this.state.pagination.perPage, page: this.state.pagination.page, onSetPage: (_evt, page) => this.setState({\n                                            pagination: Object.assign(Object.assign({}, this.state.pagination), { page }),\n                                        }), onPerPageSelect: (_evt, perPage) => this.setState({\n                                            pagination: { page: 1, perPage },\n                                        }), perPageOptions: [\n                                            { title: '2', value: 2 },\n                                            { title: '4', value: 4 },\n                                            { title: '6', value: 6 },\n                                        ] }))))))));\n            })));\n    }\n}\nexport default connect(createMapStateToProps(state => ({\n    isLoading: costModelsSelectors.updateProcessing(state),\n    error: costModelsSelectors.updateError(state),\n    isDialogOpen: costModelsSelectors.isDialogOpen(state)('rate'),\n    fetchError: costModelsSelectors.error(state),\n    fetchStatus: costModelsSelectors.status(state),\n    metricsHash: metricsSelectors.metrics(state),\n    maxRate: metricsSelectors.maxRate(state),\n    costTypes: metricsSelectors.costTypes(state),\n    isWritePermission: rbacSelectors.isCostModelWritePermission(state),\n})), {\n    updateCostModel: costModelsActions.updateCostModel,\n    setDialogOpen: costModelsActions.setCostModelDialog,\n})(translate()(PriceListTable));\n","import { InputGroup, InputGroupText, Pagination, TextInput, Toolbar, ToolbarContent, ToolbarFilter, ToolbarItem, } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nconst SearchInput = ({ id, placeholder = '', value, onChange, onSearch, }) => {\n    return (React.createElement(InputGroup, null,\n        React.createElement(TextInput, { value: value, placeholder: placeholder, id: id, onChange: onChange, onKeyPress: (evt) => {\n                if (evt.key !== 'Enter' || value === '') {\n                    return;\n                }\n                onSearch(evt);\n            } }),\n        React.createElement(InputGroupText, { style: { borderLeft: '0' } },\n            React.createElement(SearchIcon, null))));\n};\nexport const AssignSourcesToolbarBase = ({ t, searchInputProps, paginationProps, filter, }) => {\n    return (React.createElement(Toolbar, { id: \"assign-sources-toolbar\", clearAllFilters: filter.onClearAll },\n        React.createElement(ToolbarContent, null,\n            React.createElement(ToolbarItem, { variant: \"search-filter\" },\n                React.createElement(ToolbarFilter, { deleteChip: filter.onRemove, chips: filter.query.name, categoryName: \"name\" },\n                    React.createElement(SearchInput, Object.assign({ placeholder: t('cost_models_wizard.source_table.filter_placeholder') }, searchInputProps)))),\n            React.createElement(ToolbarItem, { variant: \"pagination\" },\n                React.createElement(Pagination, { isCompact: paginationProps.isCompact, itemCount: paginationProps.itemCount, page: paginationProps.page, perPage: paginationProps.perPage, onSetPage: paginationProps.onSetPage, onPerPageSelect: paginationProps.onPerPageSelect })))));\n};\nexport const AssignSourcesToolbar = translate()(AssignSourcesToolbarBase);\n","import { Checkbox, Pagination, Toolbar, ToolbarContent, ToolbarGroup, ToolbarItem, } from '@patternfly/react-core';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { EmptyFilterState } from 'components/state/emptyFilterState/emptyFilterState';\nimport { ErrorState } from 'components/state/errorState/errorState';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport { addMultiValueQuery, removeMultiValueQuery, } from 'pages/costModels/components/filterLogic';\nimport { WarningIcon } from 'pages/costModels/components/warningIcon';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { sourcesActions, sourcesSelectors } from 'store/sourceSettings';\nimport { AssignSourcesToolbar } from './assignSourcesModalToolbar';\nclass AddSourcesStep extends React.Component {\n    render() {\n        const { costModel } = this.props;\n        if (this.props.isLoadingSources) {\n            return React.createElement(LoadingState, null);\n        }\n        if (this.props.fetchingSourcesError) {\n            return React.createElement(ErrorState, { error: null });\n        }\n        const onSelect = (isSelected, rowId) => {\n            if (rowId === -1) {\n                const newState = this.props.providers.reduce((acc, cur) => {\n                    return Object.assign(Object.assign({}, acc), { [cur.uuid]: { selected: isSelected, meta: cur } });\n                }, {});\n                this.props.setState(newState);\n                return;\n            }\n            this.props.setState(Object.assign(Object.assign({}, this.props.checked), { [this.props.providers[rowId].uuid]: {\n                    selected: isSelected,\n                    meta: this.props.providers[rowId],\n                } }));\n        };\n        const sources = this.props.providers.map((providerData, ix) => {\n            const isSelected = this.props.checked[providerData.uuid]\n                ? this.props.checked[providerData.uuid].selected\n                : false;\n            const provCostModels = providerData.cost_models === undefined\n                ? this.props.t('cost_models_wizard.source_table.default_cost_model')\n                : providerData.cost_models.map(cm => cm.name).join(',');\n            const warningIcon = providerData.cost_models.length &&\n                providerData.cost_models.find(cm => cm.name === costModel.name) ===\n                    undefined ? (React.createElement(WarningIcon, { key: providerData.uuid, text: this.props.t('cost_models_wizard.warning_source', {\n                    cost_model: provCostModels,\n                }) })) : null;\n            const cellName = (React.createElement(\"div\", { key: providerData.uuid },\n                providerData.name,\n                \" \",\n                warningIcon));\n            const checkbox = (React.createElement(React.Fragment, null,\n                React.createElement(Checkbox, { id: providerData.uuid, key: providerData.uuid, isChecked: isSelected, isDisabled: providerData.cost_models.length > 0, onChange: isChecked => onSelect(isChecked, ix) })));\n            return {\n                cells: [checkbox, cellName, provCostModels || ''],\n                selected: isSelected,\n            };\n        });\n        const sourceTypeMap = {\n            'OpenShift Container Platform': 'OCP',\n            'Microsoft Azure': 'AZURE',\n            'Amazon Web Services': 'AWS',\n        };\n        const source_type = sourceTypeMap[costModel.source_type];\n        return (React.createElement(React.Fragment, null,\n            React.createElement(AssignSourcesToolbar, { filter: {\n                    onClearAll: () => this.props.fetch(`source_type=${source_type}&limit=${this.props.pagination.perPage}`),\n                    onRemove: (category, chip) => {\n                        const newQuery = removeMultiValueQuery({\n                            name: this.props.query.name\n                                ? this.props.query.name.split(',')\n                                : [],\n                        })(category, chip);\n                        this.props.fetch(`source_type=${source_type}${newQuery.name ? `&name=${newQuery.name.join(',')}` : ''}&offset=0&limit=${this.props.pagination.perPage}`);\n                    },\n                    query: {\n                        name: Boolean(this.props.query.name)\n                            ? this.props.query.name.split(',')\n                            : [],\n                    },\n                }, searchInputProps: {\n                    id: 'assign-sources-modal-toolbar',\n                    onChange: value => this.props.updateFilter({\n                        currentFilterType: 'name',\n                        currentFilterValue: value,\n                    }),\n                    value: this.props.currentFilter.value,\n                    onSearch: _evt => {\n                        const curQuery = Boolean(this.props.query.name)\n                            ? this.props.query.name.split(',')\n                            : [];\n                        const newQuery = addMultiValueQuery({ name: curQuery })('name', this.props.currentFilter.value);\n                        this.props.fetch(`source_type=${source_type}&name=${newQuery.name.join(',')}&limit=${this.props.pagination.perPage}&offset=0`);\n                    },\n                }, paginationProps: {\n                    itemCount: this.props.pagination.count,\n                    perPage: this.props.pagination.perPage,\n                    page: this.props.pagination.page,\n                    onPerPageSelect: (_evt, newPerPage) => {\n                        this.props.fetch(`source_type=${source_type}&limit=${newPerPage}&offset=0&${this.props.query.name ? `name=${this.props.query.name}` : ''}`);\n                    },\n                    onSetPage: (_evt, newPage) => {\n                        this.props.fetch(`source_type=${source_type}&limit=${this.props.pagination.perPage}&offset=${this.props.pagination.perPage * (newPage - 1)}&${this.props.query.name ? `name=${this.props.query.name}` : ''}`);\n                    },\n                } }),\n            sources.length > 0 && (React.createElement(Table, { \"aria-label\": this.props.t('cost_models_details.add_source'), cells: [\n                    '',\n                    this.props.t('filter.name'),\n                    this.props.t('cost_models_wizard.source_table.column_cost_model'),\n                ], rows: sources },\n                React.createElement(TableHeader, null),\n                React.createElement(TableBody, null))),\n            sources.length === 0 && (React.createElement(EmptyFilterState, { subTitle: this.props.t('no_match_found_state.desc') })),\n            React.createElement(Toolbar, { id: \"costmodels_details.sources_pagination_datatoolbar\" },\n                React.createElement(ToolbarContent, { style: { flexDirection: 'row-reverse' }, \"aria-label\": this.props.t('cost_models_details.sources_pagination_bottom') },\n                    React.createElement(ToolbarGroup, null,\n                        React.createElement(ToolbarItem, null,\n                            React.createElement(Pagination, { itemCount: this.props.pagination.count, isDisabled: this.props.isLoadingSources, perPage: this.props.pagination.perPage, page: this.props.pagination.page, onPerPageSelect: (_evt, newPerPage) => {\n                                    this.props.fetch(`limit=${newPerPage}&offset=0&${this.props.query.name\n                                        ? `name=${this.props.query.name}`\n                                        : ''}`);\n                                }, onSetPage: (_evt, newPage) => {\n                                    this.props.fetch(`limit=${this.props.pagination.perPage}&offset=${this\n                                        .props.pagination.perPage *\n                                        (newPage - 1)}&${this.props.query.name\n                                        ? `name=${this.props.query.name}`\n                                        : ''}`);\n                                } })))))));\n    }\n}\nexport default connect(createMapStateToProps(state => {\n    return {\n        currentFilter: {\n            name: sourcesSelectors.currentFilterType(state),\n            value: sourcesSelectors.currentFilterValue(state),\n        },\n    };\n}), {\n    updateFilter: sourcesActions.updateFilterToolbar,\n})(translate()(AddSourcesStep));\n","import { Alert, Button, Modal, Split, SplitItem, Stack, StackItem, Title, } from '@patternfly/react-core';\nimport { parseApiError } from 'pages/costModels/createCostModelWizard/parseError';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsSelectors } from 'store/costModels';\nimport { sourcesActions, sourcesSelectors } from 'store/sourceSettings';\nimport AddSourceStep from './addSourceStep';\nconst sourceTypeMap = {\n    'OpenShift Container Platform': 'OCP',\n    'Microsoft Azure': 'AZURE',\n    'Amazon Web Services': 'AWS',\n};\nclass AddSourceWizardBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = { checked: {} };\n    }\n    componentDidMount() {\n        const { costModel: { source_type }, fetch, } = this.props;\n        const sourceType = sourceTypeMap[source_type];\n        fetch(`type=${sourceType}&limit=10&offset=0`);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.isLoadingSources === true &&\n            this.props.isLoadingSources === false) {\n            const initChecked = this.props.providers.reduce((acc, curr) => {\n                return Object.assign(Object.assign({}, acc), { [curr.uuid]: {\n                        selected: this.props.costModel.sources.some(p => p.uuid === curr.uuid),\n                        meta: curr,\n                    } });\n            }, {});\n            this.setState({ checked: initChecked });\n        }\n    }\n    render() {\n        const { isUpdateInProgress, onClose, isOpen, onSave, t, costModel, updateApiError, } = this.props;\n        return (React.createElement(Modal, { isOpen: isOpen, title: t('cost_models_details.assign_sources', {\n                cost_model: this.props.costModel.name,\n            }), onClose: onClose, variant: \"large\", actions: [\n                React.createElement(Button, { key: \"save\", isDisabled: isUpdateInProgress || this.props.isLoadingSources, onClick: () => {\n                        onSave(Object.keys(this.state.checked).filter(uuid => this.state.checked[uuid].selected));\n                    } }, t('cost_models_details.action_assign')),\n                React.createElement(Button, { key: \"cancel\", variant: \"link\", isDisabled: isUpdateInProgress, onClick: onClose }, t('cost_models_wizard.cancel_button')),\n            ] },\n            React.createElement(Stack, { hasGutter: true },\n                React.createElement(StackItem, null, Boolean(updateApiError) && (React.createElement(Alert, { variant: \"danger\", title: `${updateApiError}` }))),\n                React.createElement(StackItem, null,\n                    React.createElement(Split, { hasGutter: true },\n                        React.createElement(SplitItem, null,\n                            React.createElement(Title, { headingLevel: \"h2\", size: \"md\" }, t('cost_models_wizard.general_info.source_type_label'))),\n                        React.createElement(SplitItem, null, this.props.costModel.source_type))),\n                React.createElement(StackItem, null,\n                    React.createElement(AddSourceStep, { fetch: this.props.fetch, fetchingSourcesError: this.props.fetchingSourcesError, isLoadingSources: this.props.isLoadingSources, providers: this.props.providers, pagination: this.props.pagination, query: this.props.query, costModel: costModel, checked: this.state.checked, setState: newState => {\n                            this.setState({ checked: newState });\n                        } })))));\n    }\n}\nexport default connect(createMapStateToProps(state => {\n    return {\n        pagination: sourcesSelectors.pagination(state),\n        query: sourcesSelectors.query(state),\n        providers: sourcesSelectors.sources(state),\n        isLoadingSources: sourcesSelectors.status(state) === 1 /* inProgress */,\n        isUpdateInProgress: costModelsSelectors.updateProcessing(state),\n        updateApiError: costModelsSelectors.updateError(state),\n        fetchingSourcesError: sourcesSelectors.error(state)\n            ? parseApiError(sourcesSelectors.error(state))\n            : '',\n    };\n}), {\n    fetch: sourcesActions.fetchSources,\n})(translate()(AddSourceWizardBase));\n","import { Button, InputGroup, InputGroupText, Pagination, TextInput, Toolbar, ToolbarContent, ToolbarFilter, ToolbarItem, } from '@patternfly/react-core';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport React from 'react';\nimport { ReadOnlyTooltip } from './readOnlyTooltip';\nconst SearchInput = ({ id, placeholder = '', value, onChange, onSearch, }) => {\n    return (React.createElement(InputGroup, null,\n        React.createElement(TextInput, { value: value, placeholder: placeholder, id: id, onChange: onChange, onKeyPress: (evt) => {\n                if (evt.key !== 'Enter' || value === '') {\n                    return;\n                }\n                onSearch(evt);\n            } }),\n        React.createElement(InputGroupText, { style: { borderLeft: '0' } },\n            React.createElement(SearchIcon, null))));\n};\nexport const SourcesToolbar = ({ searchInputProps, paginationProps, filter, actionButtonProps, }) => {\n    return (React.createElement(Toolbar, { id: \"assign-sources-toolbar\", clearAllFilters: filter.onClearAll },\n        React.createElement(ToolbarContent, null,\n            React.createElement(ToolbarItem, { variant: \"search-filter\" },\n                React.createElement(ToolbarFilter, { deleteChip: filter.onRemove, chips: filter.query.name, categoryName: filter.categoryNames.name },\n                    React.createElement(SearchInput, Object.assign({}, searchInputProps)))),\n            React.createElement(ToolbarItem, null,\n                React.createElement(ReadOnlyTooltip, { isDisabled: actionButtonProps.isDisabled },\n                    React.createElement(Button, Object.assign({}, actionButtonProps)))),\n            React.createElement(ToolbarItem, { variant: \"pagination\" },\n                React.createElement(Pagination, { isCompact: paginationProps.isCompact, itemCount: paginationProps.itemCount, page: paginationProps.page, perPage: paginationProps.perPage, onSetPage: paginationProps.onSetPage, onPerPageSelect: paginationProps.onPerPageSelect })))));\n};\n","export const styles = {\n    emptyState: {\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'center',\n    },\n};\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, Pagination, Title, Toolbar, ToolbarContent, ToolbarGroup, ToolbarItem, } from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons/dist/js/icons/dollar-sign-icon';\nimport { Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { EmptyFilterState } from 'components/state/emptyFilterState/emptyFilterState';\nimport { addMultiValueQuery, removeMultiValueQuery, } from 'pages/costModels/components/filterLogic';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { rbacSelectors } from 'store/rbac';\nimport { SourcesToolbar } from './sourcesToolbar';\nimport { styles } from './table.styles';\nclass TableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            query: { name: [] },\n            currentFilter: '',\n            pagination: { page: 1, perPage: 10 },\n        };\n    }\n    render() {\n        const { pagination: { page, perPage }, } = this.state;\n        const { onAdd, t, rows, cells, isWritePermission } = this.props;\n        const filteredRows = rows\n            .filter(uuid => {\n            if (!Boolean(this.state.query.name)) {\n                return true;\n            }\n            return this.state.query.name.every(fName => uuid.includes(fName));\n        })\n            .map(uuid => [uuid]);\n        const res = filteredRows.slice((page - 1) * perPage, page * perPage);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(SourcesToolbar, { actionButtonProps: {\n                    isDisabled: !isWritePermission,\n                    onClick: onAdd,\n                    children: t('toolbar.sources.assign_sources'),\n                }, filter: {\n                    onClearAll: () => this.setState({\n                        pagination: Object.assign(Object.assign({}, this.state.pagination), { page: 1 }),\n                        query: { name: [] },\n                    }),\n                    onRemove: (_category, chip) => {\n                        this.setState({\n                            pagination: Object.assign(Object.assign({}, this.state.pagination), { page: 1 }),\n                            query: removeMultiValueQuery(this.state.query)('name', chip),\n                        });\n                    },\n                    query: this.state.query,\n                    categoryNames: { name: t('toolbar.sources.category.name') },\n                }, paginationProps: {\n                    itemCount: filteredRows.length,\n                    perPage,\n                    page,\n                    onSetPage: (_evt, newPage) => this.setState({\n                        pagination: Object.assign(Object.assign({}, this.state.pagination), { page: newPage }),\n                    }),\n                    onPerPageSelect: (_evt, newPerPage) => this.setState({\n                        pagination: { page: 1, perPage: newPerPage },\n                    }),\n                }, searchInputProps: {\n                    id: 'sources-tab-toolbar',\n                    onChange: (value) => this.setState({\n                        currentFilter: value,\n                    }),\n                    onSearch: () => {\n                        this.setState({\n                            query: addMultiValueQuery(this.state.query)('name', this.state.currentFilter),\n                            currentFilter: '',\n                            pagination: Object.assign(Object.assign({}, this.state.pagination), { page: 1 }),\n                        });\n                    },\n                    value: this.state.currentFilter,\n                    placeholder: t('toolbar.sources.filter_placeholder'),\n                } }),\n            res.length > 0 && (React.createElement(Table, { \"aria-label\": \"cost-model-sources\", cells: cells, rows: res, actionResolver: () => [\n                    this.props.onDelete && {\n                        title: this.props.onDeleteText ||\n                            t('cost_models_details.action_delete'),\n                        isDisabled: !isWritePermission,\n                        // HACK: to display tooltip on disable\n                        style: !isWritePermission\n                            ? { pointerEvents: 'auto' }\n                            : undefined,\n                        tooltip: !isWritePermission ? (React.createElement(\"div\", null, t('cost_models.read_only_tooltip'))) : (undefined),\n                        onClick: (_evt, rowId) => {\n                            this.props.onDelete(res[rowId]);\n                        },\n                    },\n                ] },\n                React.createElement(TableHeader, null),\n                React.createElement(TableBody, null))),\n            rows.length === 0 && (React.createElement(\"div\", { style: styles.emptyState },\n                React.createElement(EmptyState, null,\n                    React.createElement(EmptyStateIcon, { icon: DollarSignIcon }),\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('cost_models_details.empty_state_source.title')),\n                    React.createElement(EmptyStateBody, null, t('cost_models_details.empty_state_source.description'))))),\n            filteredRows.length === 0 && rows.length > 0 && (React.createElement(EmptyFilterState, { filter: this.state.currentFilter, subTitle: t('no_match_found_state.desc') })),\n            React.createElement(Toolbar, { id: \"costmodels_details_filter_datatoolbar\" },\n                React.createElement(ToolbarContent, { \"aria-label\": t('cost_models_details.sources_filter_controller'), style: { flexDirection: 'row-reverse' } },\n                    React.createElement(ToolbarGroup, null,\n                        React.createElement(ToolbarItem, null,\n                            React.createElement(Pagination, { itemCount: filteredRows.length, perPage: perPage, page: page, onSetPage: (_evt, newPage) => this.setState({\n                                    pagination: Object.assign(Object.assign({}, this.state.pagination), { page: newPage }),\n                                }), onPerPageSelect: (_evt, newPerPage) => this.setState({\n                                    pagination: { page: 1, perPage: newPerPage },\n                                }) })))))));\n    }\n}\nexport default connect(createMapStateToProps(state => ({\n    isWritePermission: rbacSelectors.isCostModelWritePermission(state),\n})))(translate()(TableBase));\n","import React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport AddSourceWizard from './addSourceWizard';\nimport Dialog from './components/dialog';\nimport Table from './components/table';\nclass SourceTableBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = { dialogSource: null };\n    }\n    render() {\n        const { setDialogOpen, isLoading, sources, costModel, t, isDialogOpen, } = this.props;\n        return (React.createElement(React.Fragment, null,\n            isDialogOpen.addSource && (React.createElement(AddSourceWizard, { costModel: costModel, isOpen: true, onClose: () => setDialogOpen({ name: 'addSource', isOpen: false }), onSave: (source_uuids) => {\n                    this.props.updateCostModel(costModel.uuid, Object.assign(Object.assign({}, costModel), { source_type: costModel.source_type === 'OpenShift Container Platform'\n                            ? 'OCP'\n                            : 'AWS', source_uuids }), 'addSource');\n                } })),\n            React.createElement(Dialog, { isSmall: true, isOpen: isDialogOpen.deleteSource, title: t('dialog.delete_source_from_cost_model_title', {\n                    source: this.state.dialogSource,\n                    cost_model: costModel.name,\n                }), onClose: () => {\n                    setDialogOpen({ name: 'deleteSource', isOpen: false });\n                    this.setState({ dialogSource: null });\n                }, isProcessing: isLoading, onProceed: () => {\n                    const newState = Object.assign(Object.assign({}, costModel), { source_type: costModel.source_type === 'OpenShift Container Platform'\n                            ? 'OCP'\n                            : 'AWS', source_uuids: sources\n                            .filter(provider => provider.name !== this.state.dialogSource)\n                            .map(provider => provider.uuid) });\n                    this.props.updateCostModel(costModel.uuid, newState, 'deleteSource');\n                }, body: t('dialog.delete_source_from_cost_model_body', {\n                    source: this.state.dialogSource,\n                    cost_model: costModel.name,\n                }), actionText: t('dialog.deleteSource') }),\n            React.createElement(Table, { onDeleteText: t('cost_models_details.action_unassign'), onDelete: item => {\n                    this.setState({ dialogSource: item[0] });\n                    setDialogOpen({ name: 'deleteSource', isOpen: true });\n                }, onAdd: () => setDialogOpen({ name: 'addSource', isOpen: true }), cells: [t('filter.name')], rows: sources.map(p => p.name) })));\n    }\n}\nexport default connect(createMapStateToProps(state => ({\n    isLoading: costModelsSelectors.updateProcessing(state),\n    isDialogOpen: costModelsSelectors.isDialogOpen(state)('sources'),\n})), {\n    setDialogOpen: costModelsActions.setCostModelDialog,\n    updateCostModel: costModelsActions.updateCostModel,\n})(translate()(SourceTableBase));\n","import { global_BackgroundColor_light_100, global_spacer_lg, global_spacer_md, global_spacer_sm, global_spacer_xl, } from '@patternfly/react-tokens';\nexport const styles = {\n    headerDescription: {\n        width: '97%',\n        wordWrap: 'break-word',\n    },\n    content: {\n        paddingTop: global_spacer_xl.value,\n        height: '182vh',\n    },\n    costmodelsContainer: {\n        marginLeft: global_spacer_xl.value,\n        marginRight: global_spacer_xl.value,\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    headerCostModel: {\n        padding: global_spacer_lg.var,\n        paddingBottom: 0,\n        backgroundColor: global_BackgroundColor_light_100.value,\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Alert, Button, Form, FormGroup, Modal, TextArea, TextInput, } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nclass UpdateCostModelBase extends React.Component {\n    constructor(props) {\n        super(props);\n        const current = this.props.costModel[0];\n        this.state = {\n            name: current.name,\n            description: current.description,\n        };\n    }\n    render() {\n        const { updateCostModel, updateError, costModel, isProcessing, setDialogOpen, t, } = this.props;\n        const current = costModel[0];\n        return (React.createElement(Modal, { title: t('cost_models_details.edit_cost_model'), isOpen: true, onClose: () => setDialogOpen({ name: 'updateCostModel', isOpen: false }), variant: \"small\", actions: [\n                React.createElement(Button, { key: \"proceed\", variant: \"primary\", onClick: () => {\n                        const { uuid, sources, created_timestamp, updated_timestamp } = current, previous = __rest(current, [\"uuid\", \"sources\", \"created_timestamp\", \"updated_timestamp\"]);\n                        updateCostModel(uuid, Object.assign(Object.assign({}, previous), { source_uuids: sources.map(provider => provider.uuid), name: this.state.name, description: this.state.description, source_type: current.source_type === 'OpenShift Container Platform'\n                                ? 'OCP'\n                                : 'AWS' }), 'updateCostModel');\n                    }, isDisabled: isProcessing ||\n                        (this.state.name === current.name &&\n                            this.state.description === current.description) }, t('cost_models_details.save_button')),\n                React.createElement(Button, { key: \"cancel\", variant: \"secondary\", onClick: () => setDialogOpen({ name: 'updateCostModel', isOpen: false }), isDisabled: isProcessing }, t('dialog.cancel')),\n            ] },\n            React.createElement(React.Fragment, null,\n                updateError && React.createElement(Alert, { variant: \"danger\", title: `${updateError}` }),\n                React.createElement(Form, null,\n                    React.createElement(FormGroup, { label: t('cost_models_wizard.general_info.name_label'), isRequired: true, fieldId: \"name\" },\n                        React.createElement(TextInput, { isRequired: true, type: \"text\", id: \"name\", name: \"name\", value: this.state.name, onChange: value => this.setState({ name: value }) })),\n                    React.createElement(FormGroup, { label: t('cost_models_wizard.general_info.description_label'), fieldId: \"description\" },\n                        React.createElement(TextArea, { type: \"text\", id: \"description\", name: \"description\", value: this.state.description, onChange: value => this.setState({ description: value }) }))))));\n    }\n}\nconst UpdateCostModelModal = connect(createMapStateToProps(state => ({\n    costModel: costModelsSelectors.costModels(state),\n    isProcessing: costModelsSelectors.updateProcessing(state),\n    updateError: costModelsSelectors.updateError(state),\n})), {\n    setDialogOpen: costModelsActions.setCostModelDialog,\n    updateCostModel: costModelsActions.updateCostModel,\n})(translate()(UpdateCostModelBase));\nexport default UpdateCostModelModal;\n","import { Breadcrumb, BreadcrumbItem, DropdownItem, List, ListItem, Split, SplitItem, Tab, Tabs, TabTitleText, Title, } from '@patternfly/react-core';\nimport Dialog from 'pages/costModels/costModelsDetails/components/dialog';\nimport Dropdown from 'pages/costModels/costModelsDetails/components/dropdown';\nimport { ReadOnlyTooltip } from 'pages/costModels/costModelsDetails/components/readOnlyTooltip';\nimport UpdateCostModelModal from 'pages/costModels/costModelsDetails/components/updateCostModel';\nimport { styles } from 'pages/costModels/costModelsDetails/costModelsDetails.styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { rbacSelectors } from 'store/rbac';\nconst Header = ({ t, tabRefs, tabIndex, onSelectTab, setDialogOpen, isDialogOpen, deleteError, isDeleteProcessing, deleteCostModel, current, isWritePermission, historyObject, }) => {\n    return (React.createElement(React.Fragment, null,\n        isDialogOpen.updateCostModel && React.createElement(UpdateCostModelModal, null),\n        React.createElement(Dialog, { isSmall: true, isOpen: isDialogOpen.deleteCostModel, title: t('dialog.delete_cost_model_title', {\n                cost_model: current.name,\n            }), onClose: () => setDialogOpen({ name: 'deleteCostModel', isOpen: false }), error: deleteError, isProcessing: isDeleteProcessing, onProceed: () => {\n                deleteCostModel(current.uuid, 'deleteCostModel', historyObject);\n            }, body: React.createElement(React.Fragment, null,\n                current.sources.length === 0 &&\n                    t('dialog.delete_cost_model_body_green', {\n                        cost_model: current.name,\n                    }),\n                current.sources.length > 0 && (React.createElement(React.Fragment, null,\n                    t('dialog.delete_cost_model_body_red', {\n                        cost_model: current.name,\n                    }),\n                    React.createElement(\"br\", null),\n                    React.createElement(\"br\", null),\n                    t('dialog.delete_cost_model_body_red_costmodel_delete'),\n                    React.createElement(\"br\", null),\n                    React.createElement(List, null, current.sources.map(provider => (React.createElement(ListItem, { key: `${provider.uuid}` }, provider.name))))))), actionText: current.sources.length === 0 ? t('dialog.deleteCostModel') : '' }),\n        React.createElement(\"header\", { style: styles.headerCostModel },\n            React.createElement(Breadcrumb, { style: styles.breadcrumb },\n                React.createElement(BreadcrumbItem, { to: \"cost-management/cost-models\" }, t('cost_models_details.cost_model.cost_models')),\n                React.createElement(BreadcrumbItem, { isActive: true }, current.name)),\n            React.createElement(Split, null,\n                React.createElement(SplitItem, { style: styles.headerDescription },\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"2xl\" }, current.name),\n                    current.description && (React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"md\" }, current.description)),\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.sourceTypeTitle, size: \"md\" },\n                        t('cost_models_details.cost_model.source_type'),\n                        \":\",\n                        ' ',\n                        current.source_type),\n                    current.source_type === 'OpenShift Container Platform' ? (React.createElement(Tabs, { activeKey: tabIndex, onSelect: (_evt, index) => onSelectTab(index) },\n                        React.createElement(Tab, { eventKey: 0, title: React.createElement(TabTitleText, null, \"Price list\"), tabContentId: \"refPriceList\", tabContentRef: tabRefs[0] }),\n                        React.createElement(Tab, { eventKey: 1, title: React.createElement(TabTitleText, null, \"Markup\"), tabContentId: \"refMarkup\", tabContentRef: tabRefs[1] }),\n                        React.createElement(Tab, { eventKey: 2, title: React.createElement(TabTitleText, null, \"Sources\"), tabContentId: \"refSources\", tabContentRef: tabRefs[2] }))) : (React.createElement(Tabs, { activeKey: tabIndex, onSelect: (_evt, index) => onSelectTab(index) },\n                        React.createElement(Tab, { eventKey: 0, title: React.createElement(TabTitleText, null, \"Markup\"), tabContentId: \"refMarkup\", tabContentRef: tabRefs[0] }),\n                        React.createElement(Tab, { eventKey: 1, title: React.createElement(TabTitleText, null, \"Sources\"), tabContentId: \"refSources\", tabContentRef: tabRefs[1] })))),\n                React.createElement(SplitItem, null,\n                    React.createElement(Dropdown, { isPlain: true, position: \"right\", dropdownItems: [\n                            React.createElement(ReadOnlyTooltip, { key: \"edit\", isDisabled: !isWritePermission },\n                                React.createElement(DropdownItem, { isDisabled: !isWritePermission, onClick: () => setDialogOpen({\n                                        isOpen: true,\n                                        name: 'updateCostModel',\n                                    }) }, t('cost_models_details.action_edit'))),\n                            React.createElement(ReadOnlyTooltip, { key: \"delete\", isDisabled: !isWritePermission },\n                                React.createElement(DropdownItem, { isDisabled: !isWritePermission, onClick: () => setDialogOpen({\n                                        isOpen: true,\n                                        name: 'deleteCostModel',\n                                    }) }, t('cost_models_details.action_delete'))),\n                        ] }))))));\n};\nexport default connect(createMapStateToProps(state => ({\n    isDialogOpen: costModelsSelectors.isDialogOpen(state)('costmodel'),\n    isDeleteProcessing: costModelsSelectors.deleteProcessing(state),\n    deleteError: costModelsSelectors.deleteError(state),\n    isWritePermission: rbacSelectors.isCostModelWritePermission(state),\n})), {\n    setDialogOpen: costModelsActions.setCostModelDialog,\n    deleteCostModel: costModelsActions.deleteCostModel,\n})(translate()(Header));\n","import { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, TabContent, Title, } from '@patternfly/react-core';\nimport { ErrorCircleOIcon } from '@patternfly/react-icons';\nimport { ErrorState } from 'components/state/errorState/errorState';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport MarkupCard from 'pages/costModels/costModelsDetails/components/markup';\nimport PriceListTable from 'pages/costModels/costModelsDetails/components/priceListTable';\nimport SourceTable from 'pages/costModels/costModelsDetails/sourceTable';\nimport React from 'react';\nimport { I18n } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions, costModelsSelectors } from 'store/costModels';\nimport { metricsActions, metricsSelectors } from 'store/metrics';\nimport { rbacActions, rbacSelectors } from 'store/rbac';\nimport { parseApiError } from '../createCostModelWizard/parseError';\nimport { styles } from './costModelInfo.styles';\nimport Header from './header';\nclass CostModelInformation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.tabRefs = [\n            React.createRef(),\n            React.createRef(),\n            React.createRef(),\n        ];\n        this.state = { tabIndex: 0 };\n    }\n    componentDidMount() {\n        this.props.fetchRbac();\n        this.props.fetchMetrics();\n        this.props.fetchCostModels(`uuid=${this.props.match.params.uuid}`);\n    }\n    render() {\n        const { costModels, metricsStatus, rbacStatus, costModelStatus, rbacError, costModelError, metricsError, } = this.props;\n        if (metricsStatus !== 2 /* complete */ ||\n            rbacStatus !== 2 /* complete */ ||\n            costModelStatus !== 2 /* complete */) {\n            return React.createElement(LoadingState, null);\n        }\n        const fetchError = metricsError || rbacError || costModelError;\n        if (Boolean(fetchError)) {\n            if (costModelError !== null) {\n                const costModelErrMessage = parseApiError(costModelError);\n                if (costModelErrMessage === 'uuid: Enter a valid UUID.') {\n                    return (React.createElement(I18n, null, t => {\n                        return (React.createElement(Bullseye, null,\n                            React.createElement(EmptyState, null,\n                                React.createElement(EmptyStateIcon, { icon: ErrorCircleOIcon }),\n                                React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('cost_models_details.empty_state_bad_uuid.title')),\n                                React.createElement(EmptyStateBody, null, t('cost_models_details.empty_state_bad_uuid.description', { uuid: this.props.match.params.uuid })))));\n                    }));\n                }\n            }\n            return React.createElement(ErrorState, { error: fetchError });\n        }\n        const current = costModels[0];\n        const sources = current.sources;\n        return (React.createElement(\"div\", null,\n            React.createElement(Header, { historyObject: this.props.history, current: current, tabRefs: this.tabRefs, tabIndex: this.state.tabIndex, onSelectTab: tabIndex => this.setState({ tabIndex }) }),\n            React.createElement(\"div\", { style: styles.content }, current.source_type === 'OpenShift Container Platform' ? (React.createElement(React.Fragment, null,\n                React.createElement(TabContent, { eventKey: 0, id: \"refPriceList\", ref: this.tabRefs[0], hidden: this.state.tabIndex !== 0 },\n                    React.createElement(\"div\", { style: styles.costmodelsContainer },\n                        React.createElement(PriceListTable, { costModel: current.name, assignees: sources.map(p => p.name), current: current }))),\n                React.createElement(TabContent, { eventKey: 1, id: \"refMarkup\", ref: this.tabRefs[1], hidden: this.state.tabIndex !== 1 },\n                    React.createElement(MarkupCard, { current: current })),\n                React.createElement(TabContent, { eventKey: 2, id: \"refSources\", ref: this.tabRefs[2], hidden: this.state.tabIndex !== 2 },\n                    React.createElement(\"div\", { style: styles.costmodelsContainer },\n                        React.createElement(SourceTable, { costModel: current, sources: sources }))))) : (React.createElement(React.Fragment, null,\n                React.createElement(TabContent, { eventKey: 0, id: \"refMarkup\", ref: this.tabRefs[0], hidden: this.state.tabIndex !== 0 },\n                    React.createElement(MarkupCard, { current: current })),\n                React.createElement(TabContent, { eventKey: 1, id: \"refSources\", ref: this.tabRefs[1], hidden: this.state.tabIndex !== 1 },\n                    React.createElement(\"div\", { style: styles.costmodelsContainer },\n                        React.createElement(SourceTable, { costModel: current, sources: sources }))))))));\n    }\n}\nexport default connect(createMapStateToProps(store => {\n    return {\n        costModels: costModelsSelectors.costModels(store),\n        costModelError: costModelsSelectors.error(store),\n        costModelStatus: costModelsSelectors.status(store),\n        metricsHash: metricsSelectors.metrics(store),\n        maxRate: metricsSelectors.maxRate(store),\n        costTypes: metricsSelectors.costTypes(store),\n        metricsError: metricsSelectors.metricsState(store).error,\n        metricsStatus: metricsSelectors.status(store),\n        rbacError: rbacSelectors.selectRbacState(store).error,\n        rbacStatus: rbacSelectors.selectRbacState(store).status,\n    };\n}), {\n    fetchMetrics: metricsActions.fetchMetrics,\n    fetchRbac: rbacActions.fetchRbac,\n    fetchCostModels: costModelsActions.fetchCostModels,\n})(CostModelInformation);\n"],"sourceRoot":""}