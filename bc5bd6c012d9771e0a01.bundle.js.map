{"version":3,"sources":["webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Tabs/Tab.js","webpack:///./src/utils/formatValue.ts","webpack:///./src/testIds.ts","webpack:///./src/components/charts/commonChart/chartUtils.ts","webpack:///./src/utils/sort.ts","webpack:///./src/utils/getComputedOcpOnAwsReportItems.ts","webpack:///./src/utils/getComputedAwsReportItems.ts","webpack:///./src/utils/getComputedOcpReportItems.ts","webpack:///./src/components/charts/trendChart/trendChart.styles.ts","webpack:///./src/components/charts/trendChart/trendChart.tsx","webpack:///./src/components/state/loadingState/loadingState.styles.ts","webpack:///./src/components/state/loadingState/loadingState.tsx","webpack:///./src/components/state/noProvidersState/noProvidersState.styles.ts","webpack:///./src/components/state/noProvidersState/noProvidersState.tsx","webpack:///./src/components/state/errorState/errorState.styles.ts","webpack:///./src/components/state/errorState/errorState.tsx","webpack:///./src/components/charts/usageChart/usageChart.styles.ts","webpack:///./src/components/charts/usageChart/usageChart.tsx","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummary.styles.ts","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummary.tsx","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryAlt.styles.ts","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryAlt.tsx","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryDetails.styles.ts","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryDetails.tsx","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryItem.styles.ts","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryItem.tsx","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryItems.tsx","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryTrend.styles.ts","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryTrend.tsx","webpack:///./src/components/reports/ocpOnAwsReportSummary/ocpOnAwsReportSummaryUsage.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummary.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummary.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryAlt.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryAlt.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryDetails.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryDetails.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryItem.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryItem.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryItems.tsx","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryTrend.styles.ts","webpack:///./src/components/reports/awsReportSummary/awsReportSummaryTrend.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummary.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummary.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryAlt.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryAlt.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryDetails.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryDetails.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryItem.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryItem.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryItems.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryTrend.styles.ts","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryTrend.tsx","webpack:///./src/components/reports/ocpReportSummary/ocpReportSummaryUsage.tsx","webpack:///./node_modules/date-fns/get_month/index.js","webpack:///./node_modules/react-router-dom/es/Link.js","webpack:///./src/components/link/link.tsx","webpack:///./src/pages/awsDashboard/awsDashboardWidget.styles.ts","webpack:///./src/pages/awsDashboard/awsDashboardWidget.tsx","webpack:///./src/pages/awsDashboard/awsDashboard.tsx","webpack:///./src/pages/ocpDashboard/ocpDashboardWidget.styles.ts","webpack:///./src/pages/ocpDashboard/ocpDashboardWidget.tsx","webpack:///./src/pages/ocpDashboard/ocpDashboard.tsx","webpack:///./src/pages/ocpOnAwsDashboard/ocpOnAwsDashboardWidget.styles.ts","webpack:///./src/pages/ocpOnAwsDashboard/ocpOnAwsDashboardWidget.tsx","webpack:///./src/pages/ocpOnAwsDashboard/ocpOnAwsDashboard.tsx","webpack:///./src/pages/overview/overview.tsx","webpack:///./src/pages/overview/index.ts","webpack:///./node_modules/@patternfly/react-core/dist/esm/@patternfly/patternfly/components/Tabs/tabs.css.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Tabs/TabContent.js","webpack:///./node_modules/@patternfly/react-core/dist/esm/components/Tabs/Tabs.js"],"names":["prop_types__WEBPACK_IMPORTED_MODULE_1__","__webpack_require__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","n","_objectWithoutProperties","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","propTypes","children","a","node","className","string","title","isRequired","eventKey","number","Tab","_ref","react__WEBPACK_IMPORTED_MODULE_0___default","createElement","Fragment","defaultProps","__webpack_exports__","unitLookupKey","unit","split","toLowerCase","formatValue","value","options","lookup","fValue","formatCurrency","formatStorage","unknownTypeFormatter","_unit","fractionDigits","toFixed","toLocaleString","style","currency","minimumFractionDigits","maximumFractionDigits","getTestProps","id","data-testid","testIds","details","historical_data_btn","tag_lnk","show_more_btn","view_all_btn","export","cancel_btn","submit_btn","login","alert","form","username_input","password_input","submit","masthead","username","sidebarToggle","logout","onboarding","btn_cancel","btn_back","btn_continue","btn_close","type_selector","type_opt_aws","type_opt_ocp","type_opt_non","name_input","check_box_1","check_box_2","check_box_3","check_box_4","check_box_5","check_box_all","s3_input","clusterid_input","arn_input","providers","add_btn","bucket_input","empty_state_add_btn","resource_name_input","cluster_id_input","type_input","sidebar","nav","link","backdrop","transformAwsReport","report","type","reportItem","items","idKey","sortKey","sortDirection","computedItems","utils_getComputedAwsReportItems__WEBPACK_IMPORTED_MODULE_6__","map","createDatum","reduce","acc","d","prevValue","y","transformOcpReport","utils_getComputedOcpReportItems__WEBPACK_IMPORTED_MODULE_8__","transformOcpOnAwsReport","utils_getComputedOcpOnAwsReportItems__WEBPACK_IMPORTED_MODULE_7__","computedItem","x","date_fns_get_date__WEBPACK_IMPORTED_MODULE_2___default","label","Number","parseFloat","isInt","name","units","getDateRange","datums","firstOfMonth","lastOfMonth","start","end","today","Date","date_fns_start_of_month__WEBPACK_IMPORTED_MODULE_3___default","getDatumDateRange","setDate","lastDate","date_fns_end_of_month__WEBPACK_IMPORTED_MODULE_0___default","getDate","getDateRangeString","current","monthName","date_fns_format__WEBPACK_IMPORTED_MODULE_1___default","startDate","endDate","i18next__WEBPACK_IMPORTED_MODULE_4__","t","date","getDateString","month","getMaxValue","max","forEach","datum","getTooltipContent","utils_formatValue__WEBPACK_IMPORTED_MODULE_5__","getTooltipLabel","formatOptions","toString","day","getValueForItem","item","sort","array","direction","b","aVal","bVal","getComputedOcpOnAwsReportItems","labelKey","_sort__WEBPACK_IMPORTED_MODULE_0__","getUnsortedComputedOcpOnAwsReportItems","itemMap","Map","visitDataPoint","dataPoint","values","capacity","cluster","cluster_alias","cost","account_alias","limit","request","usage","get","set","assign","deltaPercent","delta_percent","deltaValue","delta_value","Array","data","from","getIdKeyForGroupBy","groupBy","project","getComputedAwsReportItems","getUnsortedComputedAwsReportItems","total","account","instance_type","region","service","getComputedOcpReportItems","getUnsortedComputedOcpReportItems","chartStyles","colorScale","esm","legend","labels","fontFamily","fontSize","minWidth","previousMonth","fill","stroke","currentMonth","yAxis","axisLabel","padding","grid","ticks","tickLabels","xAxis","styles","StyleSheet","create","chartContainer",":not(foo) svg","overflow","display","marginTop","trendChart_TrendChart","react_default","Component","[object Object]","super","arguments","this","containerRef","createRef","state","width","initDatum","currentData","previousData","props","legendData","push","chartUtils","symbol","charts","show","onClick","handleCostLegendClick","setState","newDatum","index","handleResize","clientWidth","getChart","ChartArea","getLegend","ChartLegend","containerComponent","ChartContainer","responsive","events","eventHandlers","mutation","gutter","height","orientation","theme","ChartTheme","light","blue","formatDatumValue","formatDatumOptions","setTimeout","window","addEventListener","prevProps","removeEventListener","domain","maxCurrent","maxPrevious","maxValue","Math","ceil","previousDate","get_date_default","currentDate","result","trim","container","ChartVoronoiContainer","voronoiDimension","legendWidth","getDomain","getEndDate","midDate","floor","ref","Chart","Boolean","chart","ChartAxis","tickValues","dependentAxis","isLegendVisible","justifyContent","LoadingState","es","icon","binoculars_icon","subTitle","EmptyState","EmptyStateIcon","Title","size","EmptyStateBody","mapStateToProps","common","NoProvidersState","react_redux_es","openProvidersModal","openModal","getAddSourceButton","Button","variant","primary","dollar_sign_icon","ErrorState","error","error_circle_o_icon","response","status","ban_icon","currentRequestData","strokeDasharray","currentUsageData","previousRequestData","previousUsageData","currentColorScale","previousColorScale","marginBottom","usageChart_UsageChart","previousLegendData","previous","handlePreviousLegendClick","currentLegendData","handleCurrentLegendClick","maxCurrentRequest","maxCurrentUsage","maxPreviousRequest","maxPreviousUsage","currentRequestDate","currentUsageDate","previousRequestDate","previousUsageDate","isPreviousLegendVisible","isCurrentLegendVisible","reportSummary","subtitle","color","var","OcpOnAwsReportSummary","detailsLink","Card","CardHeader","CardBody","CardFooter","ocpOnAwsReportSummaryAlt_styles_styles","flexGrow","minHeight","tops","OcpOnAwsReportSummaryAlt","tabs","Grid","GridItem","lg","xl","ocpOnAwsReportSummaryDetails_styles_styles","requestedValue","marginLeft","text","alignItems","paddingBottom","lineHeight","titleContainer","usageText","marginRight","OcpOnAwsReportSummaryDetails","reportType","requestLabel","requestValue","awsReportType","meta","ocpOnAwsReportSummaryItem_styles_styles","reportSummaryItem",":not(:last-child)","test","OcpOnAwsReportSummaryItem","totalValue","percentVal","percentLabel","Progress","sm","v","OcpOnAwsReportSummaryItems","nextProps","otherIndex","findIndex","includes","slice","getItems","ocpOnAwsReportSummaryTrend_styles_styles","OcpOnAwsReportSummaryTrend","trendChart","OcpOnAwsReportSummaryUsage","usageChart","AwsReportSummary","awsReportSummaryAlt_styles_styles","AwsReportSummaryAlt","awsReportSummaryDetails_styles_styles","reportSummaryDetails","AwsReportSummaryDetails","awsReportSummaryItem_styles_styles","AwsReportSummaryItem","AwsReportSummaryItems","awsReportSummaryTrend_styles_styles","AwsReportSummaryTrend","OcpReportSummary","ocpReportSummaryAlt_styles_styles","OcpReportSummaryAlt","ocpReportSummaryDetails_styles_styles","OcpReportSummaryDetails","ocpReportSummaryItem_styles_styles","OcpReportSummaryItem","OcpReportSummaryItems","ocpReportSummaryTrend_styles_styles","OcpReportSummaryTrend","OcpReportSummaryUsage","parse","module","exports","dirtyDate","getMonth","_extends","hasOwnProperty","_possibleConstructorReturn","self","ReferenceError","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","Link_Link","_React$Component","Link","_temp","_this","instance","Constructor","TypeError","_classCallCheck","_len","args","_key","apply","concat","handleClick","defaultPrevented","button","preventDefault","history","context","router","_this$props","replace","to","subClass","superClass","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_inherits","render","_props","innerRef","obj","browser_default","undefined","location","history_es","href","createHref","prop_types_default","func","bool","oneOfType","object","contextTypes","shape","es_Link","CastedButton","link_Link","component","getIdKeyForTab","tab","widgetId","widget","awsDashboard","selectWidget","queries","selectWidgetQueries","currentQuery","previousQuery","tabsQuery","currentReport","awsReports","selectReport","currentReportFetchStatus","selectReportFetchStatus","previousReport","tabsReport","mapDispatchToProps","fetchReports","fetchWidgetReports","updateTab","changeWidgetTab","AwsDashboardWidget","activeTabKey","buildDetailsLink","awsQuery","group_by","order_by","handleTabClick","tabIndex","availableTabs","trend","awsReportSummary","titleKey","getDetails","getDetailsLabel","labelKeyContext","getDetailsLink","currentTab","isDetailsLink","getDetailsLinkTitle","getHorizontalLayout","getSubTitle","getTabs","getTitle","get_month_default","format_default","start_of_month_default","count","getTab","getTabTitle","getTabItem","topItems","Tabs","isFilled","activeKey","onSelect","getVerticalLayout","isHorizontal","awsDashboard_mapStateToProps","selectWidgets","widgets","selectCurrentWidgets","awsDashboard_awsDashboard","ocpDashboardWidget_styles_styles","ocpDashboardWidget_getIdKeyForTab","ocpDashboardWidget_mapStateToProps","ocpDashboard","ocpReports","ocpDashboardWidget_mapDispatchToProps","OcpDashboardWidget","ocpQuery","ocpReportSummary","getRequestLabel","requestLabelKey","ocpDashboard_mapStateToProps","ocpDashboard_ocpDashboard","ocpOnAwsDashboardWidget_styles_styles","ocpOnAwsDashboardWidget_getIdKeyForTab","ocpOnAwsDashboardWidget_mapStateToProps","ocpOnAwsDashboard","ocpOnAwsReports","ocpOnAwsDashboardWidget_mapDispatchToProps","OcpOnAwsDashboardWidget","ocpOnAwsQuery","ocpOnAwsReportSummary","ocpOnAwsDashboard_mapStateToProps","ocpOnAwsDashboard_ocpOnAwsDashboard","overview_getIdKeyForTab","overview_mapStateToProps","awsProvidersQueryString","providersQuery","awsProviders","selectProviders","awsProvidersError","selectProvidersError","awsProvidersFetchStatus","selectProvidersFetchStatus","ocpProvidersQueryString","ocpProviders","ocpProvidersError","ocpProvidersFetchStatus","Overview","secondary","isLoading","noAwsProviders","noOcpProviders","noProviders","page-type","errorState","noProvidersState","loadingState","react_hot_loader__WEBPACK_IMPORTED_MODULE_0__","_overview__WEBPACK_IMPORTED_MODULE_1__","tabs_css","child","TabContent_TabContent","hidden","aria-labelledby","role","Tabs_TabContent","_typeof","Symbol","iterator","Tabs_extends","Tabs_objectWithoutProperties","Tabs_objectWithoutPropertiesLoose","_defineProperties","descriptor","defineProperty","_getPrototypeOf","o","getPrototypeOf","_assertThisInitialized","_setPrototypeOf","p","_defineProperty","Tabs_propTypes","isSecondary","leftScrollAriaLabel","rightScrollAriaLabel","Tabs_defaultProps","Tabs_Tabs","_getPrototypeOf2","showLeftScrollButton","showRightScrollButton","highlightLeftScrollButton","highlightRightScrollButton","util","tabList","selectedTab","firstChild","lastChild","search","sideOutOfView","constants","LEFT","BOTH","RIGHT","firstElementInView","lastElementOutOfView","childrenArr","scrollLeft","scrollWidth","lastElementInView","firstElementOutOfView","protoProps","staticProps","handleScrollButtons","document","_this2","_this$state","modifiers","tabsSecondary","startCurrent","endCurrent","tabsScrollButton","aria-label","angle_left_icon","tabsList","onScroll","tabsItem","tabsButton","aria-controls","scrollRight","angle_right_icon"],"mappings":"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","file":"bc5bd6c012d9771e0a01.bundle.js","sourcesContent":["function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar propTypes = {\n  /** content rendered inside the Tab content area. */\n  children: PropTypes.node,\n\n  /** additional classes added to the Modal */\n  className: PropTypes.string,\n\n  /** Tab title */\n  title: PropTypes.string.isRequired,\n\n  /** uniquely identifies the tab */\n  eventKey: PropTypes.number.isRequired\n};\nvar defaultProps = {\n  children: null,\n  className: ''\n};\n\nvar Tab = function Tab(_ref) {\n  var className = _ref.className,\n      children = _ref.children,\n      title = _ref.title,\n      eventKey = _ref.eventKey,\n      props = _objectWithoutProperties(_ref, [\"className\", \"children\", \"title\", \"eventKey\"]);\n\n  return React.createElement(React.Fragment, null, children);\n};\n\nTab.propTypes = propTypes;\nTab.defaultProps = defaultProps;\nexport default Tab;","export const unitLookupKey = unit => unit ? unit.split('-')[0].toLowerCase() : '';\nexport const formatValue = (value, unit, options = {}) => {\n    const lookup = unitLookupKey(unit);\n    const fValue = value || 0;\n    switch (lookup) {\n        case 'usd':\n            return formatCurrency(fValue, lookup, options);\n        case 'gb':\n            return formatStorage(fValue, lookup, options);\n        default:\n            return unknownTypeFormatter(fValue, lookup, options);\n    }\n};\nconst unknownTypeFormatter = (value, _unit, { fractionDigits } = {}) => {\n    return value.toFixed(fractionDigits);\n};\nexport const formatCurrency = (value, _unit, { fractionDigits = 2 } = {}) => {\n    let fValue = value;\n    if (!value) {\n        fValue = 0;\n    }\n    return fValue.toLocaleString('en', {\n        style: 'currency',\n        currency: 'USD',\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatStorage = (value, _unit, { fractionDigits = 2 } = {}) => {\n    return value.toFixed(fractionDigits);\n};\n","export const testIdProp = 'data-testid';\nexport const getTestProps = (id) => ({ [testIdProp]: id });\nexport const testIds = {\n    details: {\n        historical_data_btn: 'historical-data-btn',\n        tag_lnk: 'tag-lnk',\n        show_more_btn: 'show-more-btn',\n        view_all_btn: 'view-all-btn',\n    },\n    export: {\n        cancel_btn: 'cancel-btn',\n        submit_btn: 'submit-btn',\n    },\n    login: {\n        alert: 'alert',\n        form: 'login-form',\n        username_input: 'username-input',\n        password_input: 'password-input',\n        submit: 'submit',\n    },\n    masthead: {\n        masthead: 'masthead',\n        username: 'username',\n        sidebarToggle: 'sidebar-toggle',\n        logout: 'logout',\n    },\n    onboarding: {\n        btn_cancel: 'btn-cancel',\n        btn_back: 'btn-back',\n        btn_continue: 'btn-continue',\n        btn_close: 'btn-close',\n        type_selector: 'type-selector',\n        type_opt_aws: 'type-option-aws',\n        type_opt_ocp: 'type-option-ocp',\n        type_opt_non: 'type-option-non',\n        name_input: 'name-input',\n        check_box_1: 'check-box-1',\n        check_box_2: 'check-box-2',\n        check_box_3: 'check-box-3',\n        check_box_4: 'check-box-4',\n        check_box_5: 'check-box-5',\n        check_box_all: 'check-box-all',\n        s3_input: 's3-input',\n        clusterid_input: 'clusterid-input',\n        arn_input: 'arn-input',\n    },\n    providers: {\n        add_btn: 'add-btn',\n        bucket_input: 'bucket-input',\n        cancel_btn: 'cancel-btn',\n        empty_state_add_btn: 'empty_state_add-btn',\n        name_input: 'provider-name-input',\n        resource_name_input: 'provider-resource-name-input',\n        cluster_id_input: 'provider-cluster-id-input',\n        submit_btn: 'submit-btn',\n        type_input: 'provider-type-input',\n    },\n    sidebar: {\n        nav: 'vertical-nav',\n        link: 'vertical-nav-link',\n        backdrop: 'sidebar-backdrop',\n    },\n};\n","import endOfMonth from 'date-fns/end_of_month';\nimport format from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport startOfMonth from 'date-fns/start_of_month';\nimport i18next from 'i18next';\nimport { unitLookupKey, } from 'utils/formatValue';\nimport { getComputedAwsReportItems, } from 'utils/getComputedAwsReportItems';\nimport { getComputedOcpOnAwsReportItems, } from 'utils/getComputedOcpOnAwsReportItems';\nimport { getComputedOcpReportItems, } from 'utils/getComputedOcpReportItems';\nexport function transformAwsReport(report, type = 1 /* daily */, key = 'date', reportItem = 'total') {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        report,\n        idKey: key,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedAwsReportItems(items);\n    if (type === 1 /* daily */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    if (type === 2 /* monthly */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    return computedItems.reduce((acc, d) => {\n        const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n        return [...acc, createDatum(prevValue + d[reportItem], d, key)];\n    }, []);\n}\nexport function transformOcpReport(report, type = 1 /* daily */, key = 'date', reportItem = 'cost') {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        report,\n        idKey: key,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedOcpReportItems(items);\n    if (type === 1 /* daily */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    if (type === 2 /* monthly */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    return computedItems.reduce((acc, d) => {\n        const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n        return [...acc, createDatum(prevValue + d[reportItem], d, key)];\n    }, []);\n}\nexport function transformOcpOnAwsReport(report, type = 1 /* daily */, key = 'date', reportItem = 'cost') {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        report,\n        idKey: key,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedOcpOnAwsReportItems(items);\n    if (type === 1 /* daily */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    if (type === 2 /* monthly */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    return computedItems.reduce((acc, d) => {\n        const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n        return [...acc, createDatum(prevValue + d[reportItem], d, key)];\n    }, []);\n}\nexport function createDatum(value, computedItem, idKey = 'date') {\n    const xVal = idKey === 'date' ? getDate(computedItem.id) : computedItem.label;\n    const yVal = isFloat(value)\n        ? parseFloat(value.toFixed(2))\n        : isInt(value)\n            ? value\n            : 0;\n    return {\n        x: xVal,\n        y: yVal,\n        key: computedItem.id,\n        name: computedItem.id,\n        units: computedItem.units,\n    };\n}\nexport function getDatumDateRange(datums) {\n    if (!(datums && datums.length)) {\n        const today = new Date();\n        const firstOfMonth = startOfMonth(today);\n        return [firstOfMonth, today];\n    }\n    const start = new Date(datums[0].key + 'T00:00:00');\n    const end = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    return [start, end];\n}\nexport function getDateRange(datums, firstOfMonth = true, lastOfMonth = false) {\n    const [start, end] = getDatumDateRange(datums);\n    // Show the date range we are trying to cover (i.e., days 1-30/31)\n    if (firstOfMonth && start.setDate) {\n        start.setDate(1);\n    }\n    if (lastOfMonth && start.setDate) {\n        const lastDate = endOfMonth(start).getDate();\n        end.setDate(lastDate);\n    }\n    return [start, end];\n}\nexport function getDateRangeString(datums, firstOfMonth = false, lastOfMonth = false, current = false) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth);\n    const monthName = format(start, 'MMM');\n    const startDate = getDate(start);\n    const endDate = getDate(end);\n    if (current) {\n        return i18next.t(`date.range_current`, {\n            date: getDateString(startDate),\n            month: startDate !== endDate ? monthName : '',\n        });\n    }\n    return i18next.t(`date.range_full`, {\n        endDate: getDateString(endDate),\n        startDate: getDateString(startDate),\n        month: startDate !== endDate ? monthName : '',\n    });\n}\nexport function getMaxValue(datums) {\n    let max = 0;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            if (datum.y > max) {\n                max = datum.y;\n            }\n        });\n    }\n    return max;\n}\nexport function getTooltipContent(formatValue) {\n    return function labelFormatter(value, unit = null, options = {}) {\n        const lookup = unitLookupKey(unit);\n        switch (lookup) {\n            case 'hrs':\n            case 'gb':\n                return i18next.t(`units.${lookup}`, {\n                    value: `${formatValue(value, unit, options)}`,\n                });\n            default:\n                return `${formatValue(value, unit, options)}`;\n        }\n    };\n}\nexport function getTooltipLabel(datum, formatValue, formatOptions, idKey = 'date') {\n    if (!datum.key) {\n        return '';\n    }\n    if (idKey === 'date') {\n        const date = format(datum.key, 'MMM D YYYY');\n        return `${date}: ${formatValue(datum.y, datum.units, formatOptions)}`;\n    }\n    return datum.key.toString();\n}\nfunction isInt(n) {\n    return Number(n) === n && n % 1 === 0;\n}\nfunction isFloat(n) {\n    return Number(n) === n && n % 1 !== 0;\n}\nfunction getDateString(date) {\n    const day = date % 10;\n    if (day === 1) {\n        return i18next.t(`date.first`, { date });\n    }\n    else if (day === 2) {\n        return i18next.t(`date.second`, { date });\n    }\n    else if (day === 3) {\n        return i18next.t(`date.third`, { date });\n    }\n    return i18next.t(`date.tenth`, { date });\n}\n","function getValueForItem(item, options) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    const sortKey = options.key;\n    return item[sortKey];\n}\nexport function sort(array, options) {\n    const { direction = 0 /* asc */ } = options || {};\n    return [...array].sort((a, b) => {\n        const aVal = direction === 0 /* asc */\n            ? getValueForItem(a, options)\n            : getValueForItem(b, options);\n        const bVal = direction === 0 /* asc */\n            ? getValueForItem(b, options)\n            : getValueForItem(a, options);\n        if (aVal > bVal) {\n            return -1;\n        }\n        if (aVal < bVal) {\n            return 1;\n        }\n        return 0;\n    });\n}\n","import { sort } from './sort';\nexport function getComputedOcpOnAwsReportItems({ report, idKey, labelKey = idKey, sortKey = 'cost', sortDirection = 0 /* asc */, }) {\n    return sort(getUnsortedComputedOcpOnAwsReportItems({\n        report,\n        idKey,\n        labelKey,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nexport function getUnsortedComputedOcpOnAwsReportItems({ report, idKey, labelKey = idKey, }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint.values) {\n            dataPoint.values.forEach(value => {\n                const capacity = value.capacity ? value.capacity.value : 0;\n                const cluster = value.cluster_alias\n                    ? value.cluster_alias\n                    : value.cluster;\n                const cost = value.cost ? value.cost.value : 0;\n                const id = value[idKey];\n                let label;\n                if (labelKey === 'cluster' && value.cluster_alias) {\n                    label = value.cluster_alias;\n                }\n                else if (value[labelKey] instanceof Object) {\n                    label = value[labelKey].value;\n                }\n                else {\n                    label = value[labelKey];\n                }\n                if (labelKey === 'account' && value.account_alias) {\n                    label = value.account_alias;\n                }\n                const limit = value.limit ? value.limit.value : 0;\n                const request = value.request ? value.request.value : 0;\n                const usage = value.usage ? value.usage.value : 0;\n                const units = value.usage ? value.usage.units : value.cost.units;\n                if (!itemMap.get(id)) {\n                    itemMap.set(id, {\n                        capacity,\n                        cluster,\n                        cost,\n                        deltaPercent: value.delta_percent,\n                        deltaValue: value.delta_value,\n                        id,\n                        label,\n                        limit,\n                        request,\n                        units,\n                        usage,\n                    });\n                    return;\n                }\n                itemMap.set(id, Object.assign({}, itemMap.get(id), { capacity: itemMap.get(id).capacity + capacity, cost: itemMap.get(id).cost + cost, limit: itemMap.get(id).limit + limit, request: itemMap.get(id).request + request, usage: itemMap.get(id).usage + usage }));\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\nexport function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    return 'date';\n}\n","import { sort } from './sort';\nexport function getComputedAwsReportItems({ report, idKey, labelKey = idKey, sortKey = 'total', sortDirection = 0 /* asc */, }) {\n    return sort(getUnsortedComputedAwsReportItems({\n        report,\n        idKey,\n        labelKey,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nexport function getUnsortedComputedAwsReportItems({ report, idKey, labelKey = idKey, }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint.values) {\n            dataPoint.values.forEach(value => {\n                const cluster = value.cluster_alias\n                    ? value.cluster_alias\n                    : value.cluster;\n                const total = value.usage ? value.usage.value : value.cost.value;\n                const id = value[idKey];\n                let label;\n                if (value[labelKey] instanceof Object) {\n                    label = value[labelKey].value;\n                }\n                else {\n                    label = value[labelKey];\n                }\n                if (labelKey === 'account' && value.account_alias) {\n                    label = value.account_alias;\n                }\n                if (!itemMap.get(id)) {\n                    itemMap.set(id, {\n                        cluster,\n                        deltaPercent: value.delta_percent,\n                        deltaValue: value.delta_value,\n                        id,\n                        total,\n                        label,\n                        units: value.usage ? value.usage.units : value.cost.units,\n                    });\n                    return;\n                }\n                itemMap.set(id, Object.assign({}, itemMap.get(id), { total: itemMap.get(id).total + total }));\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\nexport function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.account) {\n        return 'account';\n    }\n    if (groupBy.instance_type) {\n        return 'instance_type';\n    }\n    if (groupBy.region) {\n        return 'region';\n    }\n    if (groupBy.service) {\n        return 'service';\n    }\n    return 'date';\n}\n","import { sort } from './sort';\nexport function getComputedOcpReportItems({ report, idKey, labelKey = idKey, sortKey = 'cost', sortDirection = 0 /* asc */, }) {\n    return sort(getUnsortedComputedOcpReportItems({\n        report,\n        idKey,\n        labelKey,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nexport function getUnsortedComputedOcpReportItems({ report, idKey, labelKey = idKey, }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint.values) {\n            dataPoint.values.forEach(value => {\n                const capacity = value.capacity ? value.capacity.value : 0;\n                const cluster = value.cluster_alias\n                    ? value.cluster_alias\n                    : value.cluster;\n                const cost = value.cost ? value.cost.value : 0;\n                const id = value[idKey];\n                let label;\n                if (labelKey === 'cluster' && value.cluster_alias) {\n                    label = value.cluster_alias;\n                }\n                else if (value[labelKey] instanceof Object) {\n                    label = value[labelKey].value;\n                }\n                else {\n                    label = value[labelKey];\n                }\n                const limit = value.limit ? value.limit.value : 0;\n                const request = value.request ? value.request.value : 0;\n                const usage = value.usage ? value.usage.value : 0;\n                const units = value.usage ? value.usage.units : value.cost.units;\n                if (!itemMap.get(id)) {\n                    itemMap.set(id, {\n                        capacity,\n                        cluster,\n                        cost,\n                        deltaPercent: value.delta_percent,\n                        deltaValue: value.delta_value,\n                        id,\n                        label,\n                        limit,\n                        request,\n                        units,\n                        usage,\n                    });\n                    return;\n                }\n                itemMap.set(id, Object.assign({}, itemMap.get(id), { capacity: itemMap.get(id).capacity + capacity, cost: itemMap.get(id).cost + cost, limit: itemMap.get(id).limit + limit, request: itemMap.get(id).request + request, usage: itemMap.get(id).usage + usage }));\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\nexport function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    return 'date';\n}\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_disabled_color_200, global_FontFamily_sans_serif, global_FontSize_md, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    colorScale: [\n        global_disabled_color_200.value,\n        '#A2DA9C',\n        '#88D080',\n        '#6EC664',\n        '#519149',\n        '#3C6C37',\n    ],\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 14,\n        },\n        minWidth: 175,\n    },\n    previousMonth: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    currentMonth: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = StyleSheet.create({\n    chartContainer: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n    legend: {\n        display: 'inline-block',\n        fontSize: global_FontSize_md.value,\n        marginTop: global_spacer_lg.value,\n        minWidth: '175px',\n    },\n});\n","import { Chart, ChartArea, ChartAxis, ChartContainer, ChartLegend, ChartTheme, ChartVoronoiContainer, } from '@patternfly/react-charts';\nimport { css } from '@patternfly/react-styles';\nimport { getDateRange, getDateRangeString, getMaxValue, getTooltipContent, getTooltipLabel, } from 'components/charts/commonChart/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport React from 'react';\nimport { chartStyles, styles } from './trendChart.styles';\nclass TrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, previousData, title } = this.props;\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const legendData = [];\n            if (previousData) {\n                legendData.push({\n                    name: getDateRangeString(previousData, true, true),\n                    symbol: {\n                        type: 'minus',\n                    },\n                });\n            }\n            if (currentData) {\n                legendData.push({\n                    name: getDateRangeString(currentData, true, false, true),\n                    symbol: {\n                        type: 'minus',\n                    },\n                });\n            }\n            const cost = {\n                charts: [\n                    {\n                        data: previousData,\n                        show: true,\n                        style: chartStyles.previousMonth,\n                    },\n                    {\n                        data: currentData,\n                        show: true,\n                        style: chartStyles.currentMonth,\n                    },\n                ],\n                legend: {\n                    colorScale: chartStyles.colorScale,\n                    data: legendData,\n                    onClick: this.handleCostLegendClick,\n                    title,\n                },\n            };\n            this.setState({\n                datum: {\n                    cost,\n                },\n            });\n        };\n        this.handleCostLegendClick = props => {\n            const { datum } = this.state;\n            const newDatum = Object.assign({}, datum);\n            if (props.index >= 0 && newDatum.cost.charts.length) {\n                newDatum.cost.charts[props.index].show = !newDatum.cost.charts[props.index].show;\n                this.setState({ datum: newDatum });\n            }\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (datum, index) => {\n            if (datum.data && datum.data.length && datum.show) {\n                return (React.createElement(ChartArea, { data: datum.data, key: `trend-chart-${index}`, style: datum.style }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getLegend = (datum, width) => {\n            if (datum && datum.data && datum.data.length) {\n                return (React.createElement(ChartLegend, { colorScale: datum.colorScale, containerComponent: React.createElement(ChartContainer, { responsive: false }), data: datum.data, events: [\n                        {\n                            target: 'data',\n                            eventHandlers: {\n                                onClick: () => {\n                                    return [\n                                        {\n                                            target: 'data',\n                                            mutation: props => {\n                                                datum.onClick(props);\n                                                return null;\n                                            },\n                                        },\n                                    ];\n                                },\n                            },\n                        },\n                    ], gutter: 5, height: 25, orientation: width > 150 ? 'horizontal' : 'vertical', style: chartStyles.legend, theme: ChartTheme.light.blue, width: width }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTooltipLabel = (datum) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            return getTooltipLabel(datum, getTooltipContent(formatDatumValue), formatDatumOptions, 'date');\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentData, previousData } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrent = currentData ? getMaxValue(currentData) : 0;\n        const maxPrevious = previousData ? getMaxValue(previousData) : 0;\n        const maxValue = Math.max(maxCurrent, maxPrevious);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentData, previousData } = this.props;\n        const previousDate = previousData\n            ? getDate(getDateRange(previousData, true, true)[1])\n            : 0;\n        const currentDate = currentData\n            ? getDate(getDateRange(currentData, true, true)[1])\n            : 0;\n        return currentDate > 0 || previousDate > 0\n            ? Math.max(currentDate, previousDate)\n            : 31;\n    }\n    isLegendVisible() {\n        const { datum } = this.state;\n        let result = false;\n        if (datum && datum.cost.legend && datum.cost.legend.data) {\n            datum.cost.legend.data.forEach(item => {\n                if (item.name && item.name.trim() !== '') {\n                    result = true;\n                    return;\n                }\n            });\n        }\n        return result;\n    }\n    render() {\n        const { height } = this.props;\n        const { datum, width } = this.state;\n        const container = (React.createElement(ChartVoronoiContainer, { labels: this.getTooltipLabel, voronoiDimension: \"x\" }));\n        const legendWidth = chartStyles.legend.minWidth > width / 2\n            ? chartStyles.legend.minWidth\n            : width / 2;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        return (React.createElement(\"div\", { className: css(styles.chartContainer), ref: this.containerRef },\n            React.createElement(Chart, { containerComponent: container, domain: domain, height: height, width: width },\n                Boolean(datum && datum.cost) &&\n                    datum.cost.charts.map((chart, index) => {\n                        return this.getChart(chart, index);\n                    }),\n                React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis })),\n            Boolean(this.isLegendVisible()) && (React.createElement(\"div\", { className: css(styles.legend) },\n                Boolean(datum.cost.legend.title) && (React.createElement(\"div\", null, datum.cost.legend.title)),\n                this.getLegend(datum.cost.legend, legendWidth)))));\n    }\n}\nexport { TrendChart };\n","import { StyleSheet } from '@patternfly/react-styles';\nexport const styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100vh',\n        marginTop: '150px',\n    },\n});\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, Title, } from '@patternfly/react-core';\nimport { BinocularsIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './loadingState.styles';\nconst LoadingStateBase = ({ icon = BinocularsIcon, t, }) => {\n    const title = t('loading_state.sources_title');\n    const subTitle = t('loading_state.sources_desc');\n    return (React.createElement(\"div\", { className: css(styles.container) },\n        React.createElement(EmptyState, null,\n            React.createElement(EmptyStateIcon, { icon: icon }),\n            React.createElement(Title, { size: \"lg\" }, title),\n            React.createElement(EmptyStateBody, null, subTitle))));\n};\nconst LoadingState = translate()(LoadingStateBase);\nexport { LoadingState };\n","import { StyleSheet } from '@patternfly/react-styles';\nexport const styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100vh',\n        marginTop: '150px',\n    },\n});\n","import { Button, ButtonType, ButtonVariant, EmptyState, EmptyStateBody, EmptyStateIcon, Title, } from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions } from 'store/onboarding';\nimport { getTestProps, testIds } from 'testIds';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getAddSourceButton = () => {\n            const { openProvidersModal, t } = this.props;\n            return (React.createElement(Button, Object.assign({}, getTestProps(testIds.providers.add_btn), { onClick: openProvidersModal, type: ButtonType.submit, variant: ButtonVariant.primary }), t('providers.add_source')));\n        };\n    }\n    render() {\n        const { t } = this.props;\n        return (React.createElement(\"div\", { className: css(styles.container) },\n            React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: DollarSignIcon }),\n                React.createElement(Title, { size: \"lg\" }, t('providers.empty_state_title')),\n                React.createElement(EmptyStateBody, null, t('providers.empty_state_desc')),\n                this.getAddSourceButton())));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, {}) => {\n    return {};\n});\nconst NoProvidersState = translate()(connect(mapStateToProps, {\n    openProvidersModal: onboardingActions.openModal,\n})(NoProvidersStateBase));\nexport { NoProvidersState };\n","import { StyleSheet } from '@patternfly/react-styles';\nexport const styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100vh',\n        marginTop: '150px',\n    },\n});\n","import { EmptyState as PfEmptyState, EmptyStateBody, EmptyStateIcon, Title, } from '@patternfly/react-core';\nimport { BanIcon, ErrorCircleOIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './errorState.styles';\nconst ErrorStateBase = ({ error, icon = ErrorCircleOIcon, t, }) => {\n    let title = t('error_state.unexpected_title');\n    let subTitle = t('error_state.unexpected_desc');\n    if (error && error.response && error.response.status === 401) {\n        icon = BanIcon;\n        title = t('error_state.unauthorized_title');\n        subTitle = t('error_state.unauthorized_desc');\n    }\n    return (React.createElement(\"div\", { className: css(styles.container) },\n        React.createElement(PfEmptyState, null,\n            React.createElement(EmptyStateIcon, { icon: icon }),\n            React.createElement(Title, { size: \"lg\" }, title),\n            React.createElement(EmptyStateBody, null, subTitle))));\n};\nconst ErrorState = translate()(ErrorStateBase);\nexport { ErrorState };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_disabled_color_100, global_disabled_color_200, global_FontFamily_sans_serif, global_FontSize_md, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: '#88D080',\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 14,\n        },\n        minWidth: 175,\n    },\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: ['#A2DA9C', '#88D080', '#6EC664', '#519149', '#3C6C37'],\n    // TBD: No grey scale, yet\n    previousColorScale: [\n        global_disabled_color_200.value,\n        global_disabled_color_100.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = StyleSheet.create({\n    chartContainer: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n    legend: {\n        display: 'inline-block',\n        fontSize: global_FontSize_md.value,\n        marginBottom: global_spacer_lg.value,\n        marginTop: global_spacer_lg.value,\n        minWidth: '175px',\n        width: '50%',\n    },\n});\n","import { Chart, ChartArea, ChartAxis, ChartContainer, ChartLegend, ChartTheme, ChartVoronoiContainer, } from '@patternfly/react-charts';\nimport { css } from '@patternfly/react-styles';\nimport { getDateRange, getDateRangeString, getMaxValue, getTooltipContent, getTooltipLabel, } from 'components/charts/commonChart/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles, styles } from './usageChart.styles';\nclass UsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const previousLegendData = [];\n            if (previousUsageData) {\n                previousLegendData.push({\n                    name: i18next.t(`chart.used`),\n                    symbol: {\n                        type: 'minus',\n                    },\n                });\n            }\n            if (previousRequestData) {\n                previousLegendData.push({\n                    name: i18next.t(`chart.requested`),\n                    symbol: {\n                        type: 'dash',\n                    },\n                });\n            }\n            const previous = {\n                charts: [\n                    {\n                        data: previousUsageData,\n                        show: true,\n                        style: chartStyles.previousUsageData,\n                    },\n                    {\n                        data: previousRequestData,\n                        show: true,\n                        style: chartStyles.previousRequestData,\n                    },\n                ],\n                legend: {\n                    colorScale: chartStyles.previousColorScale,\n                    data: previousLegendData,\n                    onClick: this.handlePreviousLegendClick,\n                    title: getDateRangeString(previousUsageData, true, true),\n                },\n            };\n            const currentLegendData = [];\n            if (currentUsageData) {\n                currentLegendData.push({\n                    name: i18next.t(`chart.used`),\n                    symbol: {\n                        type: 'minus',\n                    },\n                });\n            }\n            if (currentRequestData) {\n                currentLegendData.push({\n                    name: i18next.t(`chart.requested`),\n                    symbol: {\n                        type: 'dash',\n                    },\n                });\n            }\n            const current = {\n                charts: [\n                    {\n                        data: currentUsageData,\n                        show: true,\n                        style: chartStyles.currentUsageData,\n                    },\n                    {\n                        data: currentRequestData,\n                        show: true,\n                        style: chartStyles.currentRequestData,\n                    },\n                ],\n                legend: {\n                    colorScale: chartStyles.currentColorScale,\n                    data: currentLegendData,\n                    gutter: 55,\n                    onClick: this.handleCurrentLegendClick,\n                    title: getDateRangeString(currentUsageData, true, false),\n                },\n            };\n            this.setState({\n                datum: {\n                    previous,\n                    current,\n                },\n            });\n        };\n        this.handleCurrentLegendClick = props => {\n            const { datum } = this.state;\n            const newDatum = Object.assign({}, datum);\n            if (props.index >= 0 && newDatum.current.charts.length) {\n                newDatum.current.charts[props.index].show = !newDatum.current.charts[props.index].show;\n                this.setState({ datum: newDatum });\n            }\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.handlePreviousLegendClick = props => {\n            const { datum } = this.state;\n            const newDatum = Object.assign({}, datum);\n            if (props.index >= 0 && newDatum.previous.charts.length) {\n                newDatum.previous.charts[props.index].show = !newDatum.previous.charts[props.index].show;\n                this.setState({ datum: newDatum });\n            }\n        };\n        this.getChart = (datum, index) => {\n            if (datum.data && datum.data.length && datum.show) {\n                return (React.createElement(ChartArea, { data: datum.data, key: `usage-chart-${index}`, style: datum.style }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getLegend = (datum, width) => {\n            if (datum && datum.data && datum.data.length) {\n                return (React.createElement(ChartLegend, { colorScale: datum.colorScale, containerComponent: React.createElement(ChartContainer, { responsive: false }), data: datum.data, events: [\n                        {\n                            target: 'data',\n                            eventHandlers: {\n                                onClick: () => {\n                                    return [\n                                        {\n                                            target: 'data',\n                                            mutation: props => {\n                                                datum.onClick(props);\n                                                return null;\n                                            },\n                                        },\n                                    ];\n                                },\n                            },\n                        },\n                    ], height: 25, orientation: \"horizontal\", style: chartStyles.legend, theme: ChartTheme.light.blue }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTooltipLabel = (datum) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            return getTooltipLabel(datum, getTooltipContent(formatDatumValue), formatDatumOptions, 'date');\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentRequest = currentRequestData\n            ? getMaxValue(currentRequestData)\n            : 0;\n        const maxCurrentUsage = currentUsageData\n            ? getMaxValue(currentUsageData)\n            : 0;\n        const maxPreviousRequest = previousRequestData\n            ? getMaxValue(previousRequestData)\n            : 0;\n        const maxPreviousUsage = previousUsageData\n            ? getMaxValue(previousUsageData)\n            : 0;\n        const maxValue = Math.max(maxCurrentRequest, maxCurrentUsage, maxPreviousRequest, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const currentRequestDate = currentRequestData\n            ? getDate(getDateRange(currentRequestData, true, true)[1])\n            : 0;\n        const currentUsageDate = currentUsageData\n            ? getDate(getDateRange(currentUsageData, true, true)[1])\n            : 0;\n        const previousRequestDate = previousRequestData\n            ? getDate(getDateRange(previousRequestData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousUsageData\n            ? getDate(getDateRange(previousUsageData, true, true)[1])\n            : 0;\n        return currentRequestDate > 0 ||\n            currentUsageDate > 0 ||\n            previousRequestDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    isCurrentLegendVisible() {\n        const { datum } = this.state;\n        let result = false;\n        if (datum && datum.current.legend && datum.current.legend.data) {\n            datum.current.legend.data.forEach(data => {\n                if (data.name && data.name.trim() !== '') {\n                    result = true;\n                    return;\n                }\n            });\n        }\n        return result;\n    }\n    isPreviousLegendVisible() {\n        const { datum } = this.state;\n        let result = false;\n        if (datum && datum.previous.legend && datum.previous.legend.data) {\n            datum.previous.legend.data.forEach(data => {\n                if (data.name && data.name.trim() !== '') {\n                    result = true;\n                    return;\n                }\n            });\n        }\n        return result;\n    }\n    render() {\n        const { height } = this.props;\n        const { datum, width } = this.state;\n        const container = (React.createElement(ChartVoronoiContainer, { labels: this.getTooltipLabel, voronoiDimension: \"x\" }));\n        const legendWidth = chartStyles.legend.minWidth > width / 2\n            ? chartStyles.legend.minWidth\n            : width / 2;\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        return (React.createElement(\"div\", { className: css(styles.chartContainer), ref: this.containerRef },\n            React.createElement(Chart, { containerComponent: container, domain: domain, height: height, width: width },\n                Boolean(datum && datum.previous) &&\n                    datum.previous.charts.map((chart, index) => {\n                        return this.getChart(chart, index);\n                    }),\n                Boolean(datum && datum.current) &&\n                    datum.current.charts.map((chart, index) => {\n                        return this.getChart(chart, index);\n                    }),\n                React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis })),\n            Boolean(this.isPreviousLegendVisible()) && (React.createElement(\"div\", { className: css(styles.legend) },\n                Boolean(datum.previous.legend.title) && (React.createElement(\"div\", null, datum.previous.legend.title)),\n                this.getLegend(datum.previous.legend, legendWidth))),\n            Boolean(this.isCurrentLegendVisible()) && (React.createElement(\"div\", { className: css(styles.legend) },\n                Boolean(datum.current.legend.title) && (React.createElement(\"div\", null, datum.current.legend.title)),\n                this.getLegend(datum.current.legend, legendWidth)))));\n    }\n}\nexport { UsageChart };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpOnAwsReportSummary.styles';\nconst OcpOnAwsReportSummaryBase = ({ title, subTitle, detailsLink, children, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? `${t('loading')}...` : children),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst OcpOnAwsReportSummary = translate()(OcpOnAwsReportSummaryBase);\nexport { OcpOnAwsReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '440px',\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpOnAwsReportSummaryAlt.styles';\nconst OcpOnAwsReportSummaryAltBase = ({ children, detailsLink, status, t, tabs, title, subTitle }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(Grid, { gutter: \"md\" },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.cost) },\n                    React.createElement(CardHeader, null,\n                        React.createElement(Title, { size: \"lg\" }, title),\n                        Boolean(subTitle) && (React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle))),\n                    React.createElement(CardBody, null, status === 1 /* inProgress */\n                        ? `${t('loading')}...`\n                        : children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.tops) }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst OcpOnAwsReportSummaryAlt = translate()(OcpOnAwsReportSummaryAltBase);\nexport { OcpOnAwsReportSummaryAlt };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    requestedValue: {\n        marginLeft: global_spacer_sm.value,\n    },\n    text: {\n        display: 'flex',\n        alignItems: 'flex-end',\n        marginLeft: global_spacer_sm.value,\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    titleContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        minWidth: '175px',\n        width: '50%',\n    },\n    usageText: {\n        marginRight: global_spacer_sm.value,\n    },\n    value: {\n        display: 'flex',\n        color: global_Color_100.var,\n        fontSize: global_FontSize_4xl.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './ocpOnAwsReportSummaryDetails.styles';\nconst OcpOnAwsReportSummaryDetails = ({ label, formatValue, formatOptions, report, reportType = \"cost\" /* cost */, requestLabel, }) => {\n    let value = '----';\n    let requestValue = '----';\n    const awsReportType = reportType === \"instance_type\" /* instanceType */ ||\n        reportType === \"storage\" /* storage */;\n    if (report && report.meta && report.meta.total) {\n        if (reportType === \"cost\" /* cost */) {\n            const units = report.meta.total.cost.units\n                ? report.meta.total.cost.units\n                : 'USD';\n            value = formatValue(report.meta.total.cost.value ? report.meta.total.cost.value : 0, units, formatOptions);\n        }\n        else if (awsReportType) {\n            const units = report.meta.total.usage\n                ? report.meta.total.usage.units\n                : 'USD';\n            value = formatValue(report.meta.total.usage.value ? report.meta.total.usage.value : 0, units, formatOptions);\n        }\n        else {\n            const units = report.meta.total.usage.units\n                ? report.meta.total.usage.units\n                : 'GB';\n            value = formatValue(report.meta.total.usage.value ? report.meta.total.usage.value : 0, units, formatOptions);\n            requestValue = formatValue(report.meta.total.request.value ? report.meta.total.request.value : 0, units, formatOptions);\n        }\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: css(styles.titleContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                value,\n                React.createElement(\"div\", { className: css(styles.text) },\n                    React.createElement(\"div\", null, label)))),\n        React.createElement(\"div\", { className: css(styles.titleContainer) }, Boolean(reportType !== \"cost\" /* cost */ && !awsReportType) && (React.createElement(\"div\", { className: css(styles.value, styles.requestedValue) },\n            requestValue,\n            React.createElement(\"div\", { className: css(styles.text) }, requestLabel))))));\n};\nexport { OcpOnAwsReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './ocpOnAwsReportSummaryItem.styles';\nconst OcpOnAwsReportSummaryItem = ({ label, value, totalValue, formatValue, units, formatOptions, }) => {\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = `${formatValue(value, units, formatOptions)} (${percentVal}%)`;\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nOcpOnAwsReportSummaryItem.defaultProps = {\n    formatValue: v => v,\n};\nexport { OcpOnAwsReportSummaryItem };\n","import React from 'react';\nimport { translate } from 'react-i18next';\nimport { getComputedOcpOnAwsReportItems, } from 'utils/getComputedOcpOnAwsReportItems';\nclass OcpOnAwsReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedOcpOnAwsReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { report, children, t } = this.props;\n        if (!report) {\n            return `${t('loading')}...`;\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst OcpOnAwsReportSummaryItems = translate()(OcpOnAwsReportSummaryItemsBase);\nexport { OcpOnAwsReportSummaryItems, };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nimport { styles } from './ocpOnAwsReportSummaryTrend.styles';\nconst OcpOnAwsReportSummaryTrend = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { OcpOnAwsReportSummaryTrend };\n","import { css } from '@patternfly/react-styles';\nimport { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nimport { styles } from './ocpOnAwsReportSummaryTrend.styles';\nconst OcpOnAwsReportSummaryUsage = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { OcpOnAwsReportSummaryUsage };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './awsReportSummary.styles';\nconst AwsReportSummaryBase = ({ title, subTitle, detailsLink, children, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? `${t('loading')}...` : children),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst AwsReportSummary = translate()(AwsReportSummaryBase);\nexport { AwsReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '440px'\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './awsReportSummaryAlt.styles';\nconst AwsReportSummaryAltBase = ({ children, detailsLink, status, t, tabs, title, subTitle, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(Grid, { gutter: \"md\" },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.cost) },\n                    React.createElement(CardHeader, null,\n                        React.createElement(Title, { size: \"lg\" }, title),\n                        Boolean(subTitle) && (React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle))),\n                    React.createElement(CardBody, null, status === 1 /* inProgress */\n                        ? `${t('loading')}...`\n                        : children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.tops) }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst AwsReportSummaryAlt = translate()(AwsReportSummaryAltBase);\nexport { AwsReportSummaryAlt };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryDetails: {\n        marginBottom: global_spacer_md.value,\n        display: 'flex',\n        alignItems: 'flex-end',\n    },\n    value: {\n        color: global_Color_100.var,\n        marginRight: global_spacer_sm.value,\n        fontSize: global_FontSize_4xl.value,\n    },\n    text: {\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './awsReportSummaryDetails.styles';\nconst AwsReportSummaryDetails = ({ label, formatValue, formatOptions, report, reportType = \"cost\" /* cost */, }) => {\n    let value = '----';\n    if (report && report.meta && report.meta.total) {\n        if (reportType === \"cost\" /* cost */) {\n            const units = report.meta.total.cost\n                ? report.meta.total.cost.units\n                : 'USD';\n            value = formatValue(report.meta.total.cost.value ? report.meta.total.cost.value : 0, units, formatOptions);\n        }\n        else {\n            const units = report.meta.total.usage\n                ? report.meta.total.usage.units\n                : 'USD';\n            value = formatValue(report.meta.total.usage.value ? report.meta.total.usage.value : 0, units, formatOptions);\n        }\n    }\n    return (React.createElement(\"div\", { className: css(styles.reportSummaryDetails) },\n        React.createElement(\"div\", { className: css(styles.value) }, value),\n        React.createElement(\"div\", { className: css(styles.text) },\n            React.createElement(\"div\", null, label))));\n};\nexport { AwsReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './awsReportSummaryItem.styles';\nconst AwsReportSummaryItem = ({ label, value, totalValue, formatValue, units, formatOptions, }) => {\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = `${formatValue(value, units, formatOptions)} (${percentVal}%)`;\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nAwsReportSummaryItem.defaultProps = {\n    formatValue: v => v,\n};\nexport { AwsReportSummaryItem };\n","import React from 'react';\nimport { translate } from 'react-i18next';\nimport { getComputedAwsReportItems, } from 'utils/getComputedAwsReportItems';\nclass AwsReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedAwsReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { report, children, t } = this.props;\n        if (!report) {\n            return `${t('loading')}...`;\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst AwsReportSummaryItems = translate()(AwsReportSummaryItemsBase);\nexport { AwsReportSummaryItems, };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nimport { styles } from './awsReportSummaryTrend.styles';\nconst AwsReportSummaryTrend = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { AwsReportSummaryTrend };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpReportSummary.styles';\nconst OcpReportSummaryBase = ({ title, subTitle, detailsLink, children, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? `${t('loading')}...` : children),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst OcpReportSummary = translate()(OcpReportSummaryBase);\nexport { OcpReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '440px'\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './ocpReportSummaryAlt.styles';\nconst OcpReportSummaryAltBase = ({ children, detailsLink, status, t, tabs, title, subTitle, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(Grid, { gutter: \"md\" },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.cost) },\n                    React.createElement(CardHeader, null,\n                        React.createElement(Title, { size: \"lg\" }, title),\n                        Boolean(subTitle) && (React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle))),\n                    React.createElement(CardBody, null, status === 1 /* inProgress */\n                        ? `${t('loading')}...`\n                        : children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.tops) }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst OcpReportSummaryAlt = translate()(OcpReportSummaryAltBase);\nexport { OcpReportSummaryAlt };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    requestedValue: {\n        marginLeft: global_spacer_sm.value,\n    },\n    text: {\n        display: 'flex',\n        alignItems: 'flex-end',\n        marginLeft: global_spacer_sm.value,\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    titleContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        minWidth: '175px',\n        width: '50%',\n    },\n    usageText: {\n        marginRight: global_spacer_sm.value,\n    },\n    value: {\n        display: 'flex',\n        color: global_Color_100.var,\n        fontSize: global_FontSize_4xl.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './ocpReportSummaryDetails.styles';\nconst OcpReportSummaryDetails = ({ label, formatValue, formatOptions, report, reportType = \"cost\" /* cost */, requestLabel, }) => {\n    let value = '----';\n    let requestValue = '----';\n    if (report && report.meta && report.meta.total) {\n        if (reportType === \"cost\" /* cost */) {\n            const units = report.meta.total.cost.units\n                ? report.meta.total.cost.units\n                : 'USD';\n            value = formatValue(report.meta.total.cost.value ? report.meta.total.cost.value : 0, units, formatOptions);\n        }\n        else {\n            const units = report.meta.total.usage.units\n                ? report.meta.total.usage.units\n                : 'GB';\n            value = formatValue(report.meta.total.usage.value ? report.meta.total.usage.value : 0, units, formatOptions);\n            requestValue = formatValue(report.meta.total.request.value ? report.meta.total.request.value : 0, units, formatOptions);\n        }\n    }\n    return (React.createElement(React.Fragment, null,\n        React.createElement(\"div\", { className: css(styles.titleContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                value,\n                React.createElement(\"div\", { className: css(styles.text) },\n                    React.createElement(\"div\", null, label)))),\n        React.createElement(\"div\", { className: css(styles.titleContainer) }, Boolean(reportType !== \"cost\" /* cost */) && (React.createElement(\"div\", { className: css(styles.value, styles.requestedValue) },\n            requestValue,\n            React.createElement(\"div\", { className: css(styles.text) }, requestLabel))))));\n};\nexport { OcpReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './ocpReportSummaryItem.styles';\nconst OcpReportSummaryItem = ({ label, value, totalValue, formatValue, units, formatOptions, }) => {\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = `${formatValue(value, units, formatOptions)} (${percentVal}%)`;\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nOcpReportSummaryItem.defaultProps = {\n    formatValue: v => v,\n};\nexport { OcpReportSummaryItem };\n","import React from 'react';\nimport { translate } from 'react-i18next';\nimport { getComputedOcpReportItems, } from 'utils/getComputedOcpReportItems';\nclass OcpReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedOcpReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { report, children, t } = this.props;\n        if (!report) {\n            return `${t('loading')}...`;\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst OcpReportSummaryItems = translate()(OcpReportSummaryItemsBase);\nexport { OcpReportSummaryItems, };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nimport { styles } from './ocpReportSummaryTrend.styles';\nconst OcpReportSummaryTrend = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { OcpReportSummaryTrend };\n","import { css } from '@patternfly/react-styles';\nimport { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nimport { styles } from './ocpReportSummaryTrend.styles';\nconst OcpReportSummaryUsage = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { OcpReportSummaryUsage };\n","var parse = require('../parse/index.js')\n\n/**\n * @category Month Helpers\n * @summary Get the month of the given date.\n *\n * @description\n * Get the month of the given date.\n *\n * @param {Date|String|Number} date - the given date\n * @returns {Number} the month\n *\n * @example\n * // Which month is 29 February 2012?\n * var result = getMonth(new Date(2012, 1, 29))\n * //=> 1\n */\nfunction getMonth (dirtyDate) {\n  var date = parse(dirtyDate)\n  var month = date.getMonth()\n  return month\n}\n\nmodule.exports = getMonth\n","var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport invariant from \"invariant\";\nimport { createLocation } from \"history\";\n\nvar isModifiedEvent = function isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n};\n\n/**\n * The public API for rendering a history-aware <a>.\n */\n\nvar Link = function (_React$Component) {\n  _inherits(Link, _React$Component);\n\n  function Link() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, Link);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleClick = function (event) {\n      if (_this.props.onClick) _this.props.onClick(event);\n\n      if (!event.defaultPrevented && // onClick prevented default\n      event.button === 0 && // ignore everything but left clicks\n      !_this.props.target && // let browser handle \"target=_blank\" etc.\n      !isModifiedEvent(event) // ignore clicks with modifier keys\n      ) {\n          event.preventDefault();\n\n          var history = _this.context.router.history;\n          var _this$props = _this.props,\n              replace = _this$props.replace,\n              to = _this$props.to;\n\n\n          if (replace) {\n            history.replace(to);\n          } else {\n            history.push(to);\n          }\n        }\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  Link.prototype.render = function render() {\n    var _props = this.props,\n        replace = _props.replace,\n        to = _props.to,\n        innerRef = _props.innerRef,\n        props = _objectWithoutProperties(_props, [\"replace\", \"to\", \"innerRef\"]); // eslint-disable-line no-unused-vars\n\n    invariant(this.context.router, \"You should not use <Link> outside a <Router>\");\n\n    invariant(to !== undefined, 'You must specify the \"to\" property');\n\n    var history = this.context.router.history;\n\n    var location = typeof to === \"string\" ? createLocation(to, null, null, history.location) : to;\n\n    var href = history.createHref(location);\n    return React.createElement(\"a\", _extends({}, props, { onClick: this.handleClick, href: href, ref: innerRef }));\n  };\n\n  return Link;\n}(React.Component);\n\nLink.propTypes = {\n  onClick: PropTypes.func,\n  target: PropTypes.string,\n  replace: PropTypes.bool,\n  to: PropTypes.oneOfType([PropTypes.string, PropTypes.object]).isRequired,\n  innerRef: PropTypes.oneOfType([PropTypes.string, PropTypes.func])\n};\nLink.defaultProps = {\n  replace: false\n};\nLink.contextTypes = {\n  router: PropTypes.shape({\n    history: PropTypes.shape({\n      push: PropTypes.func.isRequired,\n      replace: PropTypes.func.isRequired,\n      createHref: PropTypes.func.isRequired\n    }).isRequired\n  }).isRequired\n};\n\n\nexport default Link;","import { Button } from '@patternfly/react-core';\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nconst CastedButton = Button;\nconst Link = props => (React.createElement(CastedButton, Object.assign({ component: RouterLink, variant: \"link\" }, props)));\nexport { Link };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_xl } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    tabs: {\n        marginTop: global_spacer_xl.value,\n    },\n});\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { getQuery, parseQuery } from 'api/awsQuery';\nimport { transformAwsReport } from 'components/charts/commonChart/chartUtils';\nimport { Link } from 'components/link';\nimport { AwsReportSummary, AwsReportSummaryAlt, AwsReportSummaryDetails, AwsReportSummaryItem, AwsReportSummaryItems, AwsReportSummaryTrend, } from 'components/reports/awsReportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { awsDashboardActions, awsDashboardSelectors, } from 'store/awsDashboard';\nimport { awsReportsSelectors } from 'store/awsReports';\nimport { createMapStateToProps } from 'store/common';\nimport { formatValue } from 'utils/formatValue';\nimport { styles } from './awsDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"services\" /* services */:\n            return 'service';\n        case \"accounts\" /* accounts */:\n            return 'account';\n        case \"regions\" /* regions */:\n            return 'region';\n        case \"instance_type\" /* instanceType */:\n            return 'instance_type';\n    }\n};\nclass AwsDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = () => {\n            const { currentQuery } = this.props;\n            const groupBy = parseQuery(currentQuery).group_by;\n            return `/aws?${getQuery({\n                group_by: groupBy,\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n        this.getChart = (height) => {\n            const { currentReport, previousReport, t, trend } = this.props;\n            const currentData = transformAwsReport(currentReport, trend.type);\n            const previousData = transformAwsReport(previousReport, trend.type);\n            return (React.createElement(AwsReportSummaryTrend, { currentData: currentData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousData, title: t(trend.titleKey) }));\n        };\n        this.getDetails = () => {\n            const { currentReport, details, reportType } = this.props;\n            return (React.createElement(AwsReportSummaryDetails, { formatOptions: details.formatOptions, formatValue: formatValue, label: this.getDetailsLabel(), report: currentReport, reportType: reportType }));\n        };\n        this.getDetailsLabel = () => {\n            const { details, t } = this.props;\n            return t(details.labelKey, { context: details.labelKeyContext });\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, isDetailsLink } = this.props;\n            return (isDetailsLink && (React.createElement(Link, { to: this.buildDetailsLink() }, this.getDetailsLinkTitle(currentTab))));\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(AwsReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(180)));\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t('aws_dashboard.widget_subtitle', {\n                endDate,\n                month,\n                startDate,\n                count: getDate(today),\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { tabsReport } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) },\n                React.createElement(\"div\", { className: css(styles.tabs) },\n                    React.createElement(AwsReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, reportType, tabsReport, topItems } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            if (activeTab === currentTab) {\n                return (React.createElement(AwsReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: reportType === \"cost\" /* cost */\n                        ? tabsReport.meta.total.cost.value\n                        : tabsReport.meta.total.usage.value, units: reportItem.units, value: reportItem.total }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getVerticalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(AwsReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(75),\n                this.getTabs()));\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, updateTab, widgetId } = this.props;\n        updateTab(id, availableTabs[0]);\n        fetchReports(widgetId);\n    }\n    render() {\n        const { isHorizontal = false } = this.props;\n        return Boolean(isHorizontal)\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = awsDashboardSelectors.selectWidget(state, widgetId);\n    const queries = awsDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: awsReportsSelectors.selectReport(state, widget.reportType, queries.current), currentReportFetchStatus: awsReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current), previousReport: awsReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabsReport: awsReportsSelectors.selectReport(state, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: awsDashboardActions.fetchWidgetReports,\n    updateTab: awsDashboardActions.changeWidgetTab,\n};\nconst AwsDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(AwsDashboardWidgetBase));\nexport { AwsDashboardWidget, AwsDashboardWidgetBase };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { awsDashboardSelectors } from 'store/awsDashboard';\nimport { createMapStateToProps } from 'store/common';\nimport { AwsDashboardWidget } from './awsDashboardWidget';\nconst AwsDashboardBase = ({ selectWidgets, t, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.isHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(AwsDashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { xl: 4, lg: 6, key: widgetId },\n            React.createElement(AwsDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: awsDashboardSelectors.selectWidgets(state),\n        widgets: awsDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst AwsDashboard = translate()(connect(mapStateToProps, {})(AwsDashboardBase));\nexport default AwsDashboard;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_xl } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    tabs: {\n        marginTop: global_spacer_xl.value,\n    },\n});\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { getQuery, parseQuery } from 'api/ocpQuery';\nimport { transformOcpReport } from 'components/charts/commonChart/chartUtils';\nimport { Link } from 'components/link';\nimport { OcpReportSummary, OcpReportSummaryAlt, OcpReportSummaryDetails, OcpReportSummaryItem, OcpReportSummaryItems, OcpReportSummaryTrend, OcpReportSummaryUsage, } from 'components/reports/ocpReportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardActions, ocpDashboardSelectors, } from 'store/ocpDashboard';\nimport { ocpReportsSelectors } from 'store/ocpReports';\nimport { formatValue } from 'utils/formatValue';\nimport { styles } from './ocpDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nclass OcpDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = () => {\n            const { currentQuery } = this.props;\n            const groupBy = parseQuery(currentQuery).group_by;\n            return `/ocp?${getQuery({\n                group_by: groupBy,\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id } = this.props;\n            const tab = availableTabs[tabIndex];\n            this.props.updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n        this.getChart = (height) => {\n            const { currentReport, previousReport, reportType, t, trend } = this.props;\n            const reportItem = reportType === \"cost\" /* cost */ ? 'cost' : 'usage';\n            const currentUsageData = transformOcpReport(currentReport, trend.type, 'date', reportItem);\n            const previousUsageData = transformOcpReport(previousReport, trend.type, 'date', reportItem);\n            const currentRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpReport(currentReport, trend.type, 'date', 'request')\n                : undefined;\n            const previousRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpReport(previousReport, trend.type, 'date', 'request')\n                : undefined;\n            return (React.createElement(React.Fragment, null, Boolean(reportType === \"cost\" /* cost */) ? (React.createElement(OcpReportSummaryTrend, { currentData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousUsageData, title: t(trend.titleKey) })) : (React.createElement(OcpReportSummaryUsage, { currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousRequestData: previousRequestData, previousUsageData: previousUsageData }))));\n        };\n        this.getDetails = () => {\n            const { currentReport, details, reportType } = this.props;\n            return (React.createElement(OcpReportSummaryDetails, { formatOptions: details.formatOptions, formatValue: formatValue, label: this.getDetailsLabel(), report: currentReport, reportType: reportType, requestLabel: this.getRequestLabel() }));\n        };\n        this.getDetailsLabel = () => {\n            const { details, t } = this.props;\n            return t(details.labelKey, { context: details.labelKeyContext });\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, isDetailsLink } = this.props;\n            return (isDetailsLink && (React.createElement(Link, { to: this.buildDetailsLink() }, this.getDetailsLinkTitle(currentTab))));\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(180)));\n        };\n        this.getRequestLabel = () => {\n            const { details, t } = this.props;\n            return t(details.requestLabelKey, { context: details.labelKeyContext });\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t('ocp_dashboard.widget_subtitle', {\n                endDate,\n                month,\n                startDate,\n                count: getDate(today),\n            });\n        };\n        this.getTab = (tab, index) => {\n            const { tabsReport } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) },\n                React.createElement(\"div\", { className: css(styles.tabs) },\n                    React.createElement(OcpReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, reportType, tabsReport, topItems } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            if (activeTab === currentTab) {\n                return (React.createElement(OcpReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: reportType === \"cost\" /* cost */\n                        ? tabsReport.meta.total.cost.value\n                        : tabsReport.meta.total.usage.value, units: reportItem.units, value: reportType === \"cost\" /* cost */\n                        ? reportItem.cost\n                        : reportItem.usage }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getVerticalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(75),\n                this.getTabs()));\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, widgetId } = this.props;\n        this.props.updateTab(id, availableTabs[0]);\n        fetchReports(widgetId);\n    }\n    render() {\n        const { isHorizontal = false } = this.props;\n        return Boolean(isHorizontal)\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: ocpReportsSelectors.selectReport(state, widget.reportType, queries.current), currentReportFetchStatus: ocpReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current), previousReport: ocpReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabsReport: ocpReportsSelectors.selectReport(state, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpDashboardActions.fetchWidgetReports,\n    updateTab: ocpDashboardActions.changeWidgetTab,\n};\nconst OcpDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(OcpDashboardWidgetBase));\nexport { OcpDashboardWidget, OcpDashboardWidgetBase };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpDashboardSelectors } from 'store/ocpDashboard';\nimport { OcpDashboardWidget } from './ocpDashboardWidget';\nconst OcpDashboardBase = ({ selectWidgets, t, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.isHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(OcpDashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { xl: 4, lg: 6, key: widgetId },\n            React.createElement(OcpDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: ocpDashboardSelectors.selectWidgets(state),\n        widgets: ocpDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpDashboard = translate()(connect(mapStateToProps, {})(OcpDashboardBase));\nexport default OcpDashboard;\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_xl } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    tabs: {\n        marginTop: global_spacer_xl.value,\n    },\n});\n","import { Tab, Tabs } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { getQuery, parseQuery } from 'api/ocpOnAwsQuery';\nimport { transformOcpOnAwsReport } from 'components/charts/commonChart/chartUtils';\nimport { Link } from 'components/link';\nimport { OcpOnAwsReportSummary, OcpOnAwsReportSummaryAlt, OcpOnAwsReportSummaryDetails, OcpOnAwsReportSummaryItem, OcpOnAwsReportSummaryItems, OcpOnAwsReportSummaryTrend, OcpOnAwsReportSummaryUsage, } from 'components/reports/ocpOnAwsReportSummary';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getMonth from 'date-fns/get_month';\nimport startOfMonth from 'date-fns/start_of_month';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpOnAwsDashboardActions, ocpOnAwsDashboardSelectors, } from 'store/ocpOnAwsDashboard';\nimport { ocpOnAwsReportsSelectors } from 'store/ocpOnAwsReports';\nimport { formatValue } from 'utils/formatValue';\nimport { styles } from './ocpOnAwsDashboardWidget.styles';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"clusters\" /* clusters */:\n            return 'cluster';\n        case \"nodes\" /* nodes */:\n            return 'node';\n        case \"projects\" /* projects */:\n            return 'project';\n    }\n};\nclass OcpOnAwsDashboardWidgetBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.buildDetailsLink = () => {\n            const { currentQuery } = this.props;\n            const groupBy = parseQuery(currentQuery).group_by;\n            return `/ocp?${getQuery({\n                group_by: groupBy,\n                order_by: { cost: 'desc' },\n            })}`;\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { availableTabs, id, updateTab } = this.props;\n            const tab = availableTabs[tabIndex];\n            updateTab(id, tab);\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n        this.getChart = (height) => {\n            const { currentReport, previousReport, reportType, t, trend } = this.props;\n            const reportItem = reportType === \"cost\" /* cost */ ? 'cost' : 'usage';\n            const currentUsageData = transformOcpOnAwsReport(currentReport, trend.type, 'date', reportItem);\n            const previousUsageData = transformOcpOnAwsReport(previousReport, trend.type, 'date', reportItem);\n            const currentRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpOnAwsReport(currentReport, trend.type, 'date', 'request')\n                : undefined;\n            const previousRequestData = reportType !== \"cost\" /* cost */\n                ? transformOcpOnAwsReport(previousReport, trend.type, 'date', 'request')\n                : undefined;\n            return (React.createElement(React.Fragment, null, Boolean(reportType === \"cost\" /* cost */ ||\n                reportType === \"instance_type\" /* instanceType */ ||\n                reportType === \"storage\" /* storage */) ? (React.createElement(OcpOnAwsReportSummaryTrend, { currentData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousData: previousUsageData, title: t(trend.titleKey) })) : (React.createElement(OcpOnAwsReportSummaryUsage, { currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: trend.formatOptions, height: height, previousRequestData: previousRequestData, previousUsageData: previousUsageData }))));\n        };\n        this.getDetails = () => {\n            const { currentReport, details, reportType } = this.props;\n            return (React.createElement(OcpOnAwsReportSummaryDetails, { formatOptions: details.formatOptions, formatValue: formatValue, label: this.getDetailsLabel(), report: currentReport, reportType: reportType, requestLabel: this.getRequestLabel() }));\n        };\n        this.getDetailsLabel = () => {\n            const { details, t } = this.props;\n            return t(details.labelKey, { context: details.labelKeyContext });\n        };\n        this.getDetailsLink = () => {\n            const { currentTab, isDetailsLink } = this.props;\n            return (isDetailsLink && (React.createElement(Link, { to: this.buildDetailsLink() }, this.getDetailsLinkTitle(currentTab))));\n        };\n        this.getDetailsLinkTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.all', { groupBy: key });\n        };\n        this.getHorizontalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpOnAwsReportSummaryAlt, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: `${this.getSubTitle()}`, tabs: this.getTabs(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(180)));\n        };\n        this.getRequestLabel = () => {\n            const { details, t } = this.props;\n            return t(details.requestLabelKey, { context: details.labelKeyContext });\n        };\n        this.getSubTitle = () => {\n            const { t } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            const test = t('ocp_on_aws_dashboard.ocp.widget_subtitle', {\n                endDate,\n                month,\n                startDate,\n                count: getDate(today),\n            });\n            return test;\n        };\n        this.getTab = (tab, index) => {\n            const { tabsReport } = this.props;\n            const currentTab = getIdKeyForTab(tab);\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) },\n                React.createElement(\"div\", { className: css(styles.tabs) },\n                    React.createElement(OcpOnAwsReportSummaryItems, { idKey: currentTab, key: `${currentTab}-items`, report: tabsReport }, ({ items }) => items.map(reportItem => this.getTabItem(tab, reportItem))))));\n        };\n        this.getTabItem = (tab, reportItem) => {\n            const { availableTabs, reportType, tabsReport, topItems } = this.props;\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            const activeTab = getIdKeyForTab(availableTabs[activeTabKey]);\n            if (activeTab === currentTab) {\n                return (React.createElement(OcpOnAwsReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: topItems.formatOptions, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : '', totalValue: reportType === \"cost\" /* cost */\n                        ? tabsReport.meta.total.cost.value\n                        : tabsReport.meta.total.usage.value, units: reportItem.units, value: reportType === \"cost\" /* cost */\n                        ? reportItem.cost\n                        : reportItem.usage }));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { availableTabs } = this.props;\n            if (availableTabs) {\n                return (React.createElement(Tabs, { isFilled: true, activeKey: this.state.activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            const key = getIdKeyForTab(tab) || '';\n            return t('group_by.top', { groupBy: key });\n        };\n        this.getTitle = () => {\n            const { t, titleKey } = this.props;\n            const today = new Date();\n            const month = getMonth(today);\n            const endDate = formatDate(today, 'Do');\n            const startDate = formatDate(startOfMonth(today), 'Do');\n            return t(titleKey, { endDate, month, startDate });\n        };\n        this.getVerticalLayout = () => {\n            const { currentReportFetchStatus } = this.props;\n            return (React.createElement(OcpOnAwsReportSummary, { detailsLink: this.getDetailsLink(), status: currentReportFetchStatus, subTitle: this.getSubTitle(), title: this.getTitle() },\n                this.getDetails(),\n                this.getChart(75),\n                this.getTabs()));\n        };\n    }\n    componentDidMount() {\n        const { availableTabs, fetchReports, id, updateTab, widgetId } = this.props;\n        if (availableTabs) {\n            updateTab(id, availableTabs[0]);\n        }\n        fetchReports(widgetId);\n    }\n    render() {\n        const { isHorizontal = false } = this.props;\n        return Boolean(isHorizontal)\n            ? this.getHorizontalLayout()\n            : this.getVerticalLayout();\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { widgetId }) => {\n    const widget = ocpOnAwsDashboardSelectors.selectWidget(state, widgetId);\n    const queries = ocpOnAwsDashboardSelectors.selectWidgetQueries(state, widgetId);\n    return Object.assign({}, widget, { currentQuery: queries.current, previousQuery: queries.previous, tabsQuery: queries.tabs, currentReport: ocpOnAwsReportsSelectors.selectReport(state, widget.reportType, queries.current), currentReportFetchStatus: ocpOnAwsReportsSelectors.selectReportFetchStatus(state, widget.reportType, queries.current), previousReport: ocpOnAwsReportsSelectors.selectReport(state, widget.reportType, queries.previous), tabsReport: ocpOnAwsReportsSelectors.selectReport(state, widget.reportType, queries.tabs) });\n});\nconst mapDispatchToProps = {\n    fetchReports: ocpOnAwsDashboardActions.fetchWidgetReports,\n    updateTab: ocpOnAwsDashboardActions.changeWidgetTab,\n};\nconst OcpOnAwsDashboardWidget = translate()(connect(mapStateToProps, mapDispatchToProps)(OcpOnAwsDashboardWidgetBase));\nexport { OcpOnAwsDashboardWidget, OcpOnAwsDashboardWidgetBase, };\n","import { Grid, GridItem } from '@patternfly/react-core';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { ocpOnAwsDashboardSelectors } from 'store/ocpOnAwsDashboard';\nimport { OcpOnAwsDashboardWidget } from './ocpOnAwsDashboardWidget';\nconst OcpOnAwsDashboardBase = ({ selectWidgets, t, widgets, }) => (React.createElement(\"div\", null,\n    React.createElement(Grid, { gutter: \"md\" }, widgets.map(widgetId => {\n        const widget = selectWidgets[widgetId];\n        return Boolean(widget.isHorizontal) ? (React.createElement(GridItem, { sm: 12, key: widgetId },\n            React.createElement(OcpOnAwsDashboardWidget, { widgetId: widgetId }))) : (React.createElement(GridItem, { xl: 4, lg: 6, key: widgetId },\n            React.createElement(OcpOnAwsDashboardWidget, { widgetId: widgetId })));\n    }))));\nconst mapStateToProps = createMapStateToProps(state => {\n    return {\n        selectWidgets: ocpOnAwsDashboardSelectors.selectWidgets(state),\n        widgets: ocpOnAwsDashboardSelectors.selectCurrentWidgets(state),\n    };\n});\nconst OcpOnAwsDashboard = translate()(connect(mapStateToProps, {})(OcpOnAwsDashboardBase));\nexport default OcpOnAwsDashboard;\n","import { Button, ButtonType, ButtonVariant, Tab, Tabs, Title, TitleSize, } from '@patternfly/react-core';\nimport { getProvidersQuery } from 'api/providersQuery';\nimport { ErrorState } from 'components/state/errorState/errorState';\nimport { LoadingState } from 'components/state/loadingState/loadingState';\nimport { NoProvidersState } from 'components/state/noProvidersState/noProvidersState';\nimport AwsDashboard from 'pages/awsDashboard/awsDashboard';\nimport OcpDashboard from 'pages/ocpDashboard/ocpDashboard';\nimport OcpOnAwsDashboard from 'pages/ocpOnAwsDashboard/ocpOnAwsDashboard';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { onboardingActions } from 'store/onboarding';\nimport { awsProvidersQuery, ocpProvidersQuery, providersSelectors, } from 'store/providers';\nimport { getTestProps, testIds } from 'testIds';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"aws\" /* aws */:\n            return 'aws';\n        case \"ocp\" /* ocp */:\n            return 'ocp';\n        case \"ocpOnAws\" /* ocpOnAws */:\n            return 'ocpOnAws';\n    }\n};\nclass OverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            activeTabKey: 0,\n        };\n        this.getAddSourceButton = () => {\n            const { openProvidersModal, t } = this.props;\n            return (React.createElement(Button, Object.assign({}, getTestProps(testIds.providers.add_btn), { onClick: openProvidersModal, type: ButtonType.submit, variant: ButtonVariant.secondary }), t('providers.add_source')));\n        };\n        this.getTab = (tab, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, title: this.getTabTitle(tab) }, this.getTabItem(tab, index)));\n        };\n        this.getTabItem = (tab, index) => {\n            const { activeTabKey } = this.state;\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === \"ocpOnAws\" /* ocpOnAws */) {\n                return activeTabKey === index ? React.createElement(OcpOnAwsDashboard, null) : null;\n            }\n            else if (currentTab === \"ocp\" /* ocp */) {\n                return activeTabKey === index ? React.createElement(OcpDashboard, null) : null;\n            }\n            else if (currentTab === \"aws\" /* aws */) {\n                return activeTabKey === index ? React.createElement(AwsDashboard, null) : null;\n            }\n            else {\n                return null;\n            }\n        };\n        this.getTabs = () => {\n            const { awsProviders, ocpProviders } = this.props;\n            const { activeTabKey } = this.state;\n            const availableTabs = [];\n            if (awsProviders &&\n                awsProviders.meta &&\n                awsProviders.meta.count &&\n                (ocpProviders && ocpProviders.meta && ocpProviders.meta.count)) {\n                availableTabs.push(\"ocpOnAws\" /* ocpOnAws */);\n            }\n            if (ocpProviders && ocpProviders.meta && ocpProviders.meta.count) {\n                availableTabs.push(\"ocp\" /* ocp */);\n            }\n            if (awsProviders && awsProviders.meta && awsProviders.meta.count) {\n                availableTabs.push(\"aws\" /* aws */);\n            }\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((tab, index) => this.getTab(tab, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            if (tab === \"aws\" /* aws */) {\n                return t('overview.aws');\n            }\n            else if (tab === \"ocp\" /* ocp */) {\n                return t('overview.ocp');\n            }\n            else if (tab === \"ocpOnAws\" /* ocpOnAws */) {\n                return t('overview.ocp_on_aws');\n            }\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            this.setState({\n                activeTabKey: tabIndex,\n            });\n        };\n    }\n    render() {\n        const { awsProviders, awsProvidersError, awsProvidersFetchStatus, ocpProviders, ocpProvidersError, ocpProvidersFetchStatus, t, } = this.props;\n        const error = awsProvidersError || ocpProvidersError;\n        const isLoading = awsProvidersFetchStatus === 1 /* inProgress */ ||\n            ocpProvidersFetchStatus === 1 /* inProgress */;\n        const noAwsProviders = awsProviders !== undefined &&\n            awsProviders.meta !== undefined &&\n            awsProviders.meta.count === 0 &&\n            awsProvidersFetchStatus === 2 /* complete */;\n        const noOcpProviders = ocpProviders !== undefined &&\n            ocpProviders.meta !== undefined &&\n            ocpProviders.meta.count === 0 &&\n            ocpProvidersFetchStatus === 2 /* complete */;\n        const noProviders = noAwsProviders && noOcpProviders;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"section\", { className: \"pf-l-page-header pf-c-page-header pf-l-page__main-section pf-c-page__main-section pf-m-light\" },\n                React.createElement(\"header\", { className: \"pf-u-display-flex pf-u-justify-content-space-between pf-u-align-items-center\" },\n                    React.createElement(Title, { size: TitleSize.lg }, t('overview.title')),\n                    this.getAddSourceButton())),\n            React.createElement(\"section\", { className: \"pf-l-page__main-section pf-c-page__main-section\", \"page-type\": \"cost-management-overview\" }, Boolean(error) ? (React.createElement(ErrorState, { error: error })) : Boolean(noProviders) ? (React.createElement(NoProvidersState, null)) : Boolean(isLoading) ? (React.createElement(LoadingState, null)) : (this.getTabs()))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(state => {\n    const awsProvidersQueryString = getProvidersQuery(awsProvidersQuery);\n    const awsProviders = providersSelectors.selectProviders(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const awsProvidersError = providersSelectors.selectProvidersError(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const awsProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const ocpProvidersQueryString = getProvidersQuery(ocpProvidersQuery);\n    const ocpProviders = providersSelectors.selectProviders(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    const ocpProvidersError = providersSelectors.selectProvidersError(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    const ocpProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    return {\n        awsProviders,\n        awsProvidersError,\n        awsProvidersFetchStatus,\n        awsProvidersQueryString,\n        ocpProviders,\n        ocpProvidersError,\n        ocpProvidersFetchStatus,\n        ocpProvidersQueryString,\n    };\n});\nconst Overview = translate()(connect(mapStateToProps, {\n    openProvidersModal: onboardingActions.openModal,\n})(OverviewBase));\nexport default Overview;\n","import { hot } from 'react-hot-loader';\nimport Overview from './overview';\nexport default hot(module)(Overview);\n","import { StyleSheet } from '@patternfly/react-styles';\nexport default StyleSheet.parse(`.pf-c-tabs{--pf-c-tabs__item--BackgroundColor:var(--pf-global--BackgroundColor--100);--pf-c-tabs__item--BorderColor:var(--pf-global--BorderColor--light-200);--pf-c-tabs__item--BorderWidth:var(--pf-global--BorderWidth--sm);--pf-c-tabs__item--m-current--ZIndex:var(--pf-global--ZIndex--sm);--pf-c-tabs__item--m-current--Color:var(--pf-global--active-color--100);--pf-c-tabs__item--m-current--BorderTopWidth:var(--pf-global--BorderWidth--md);--pf-c-tabs__item--hover--Color:var(--pf-global--Color--dark-200);--pf-c-tabs__button--Background:transparent;--pf-c-tabs__button--PaddingTop:var(--pf-global--spacer--sm);--pf-c-tabs__button--PaddingRight:var(--pf-global--spacer--sm);--pf-c-tabs__button--PaddingBottom:var(--pf-global--spacer--sm);--pf-c-tabs__button--PaddingLeft:var(--pf-global--spacer--sm);--pf-c-tabs__scroll-button--Width:var(--pf-global--spacer--xl);--pf-c-tabs__scroll-button--ZIndex:var(--pf-global--ZIndex--md);position:relative;display:flex;flex-direction:column;align-items:flex-start;}.pf-c-tabs .pf-c-tabs__scroll-button{display:none;visibility:hidden;}.pf-c-tabs.pf-m-start .pf-c-tabs__scroll-button:nth-of-type(1),.pf-c-tabs.pf-m-end .pf-c-tabs__scroll-button:nth-of-type(2){display:block;visibility:visible;}.pf-c-tabs.pf-m-start-current .pf-c-tabs__scroll-button:nth-of-type(1)::after,.pf-c-tabs.pf-m-end-current .pf-c-tabs__scroll-button:nth-of-type(2)::after{position:absolute;top:0;right:0;bottom:0;left:0;margin-left:var(--pf-c-tabs__item--BorderWidth);content:\"\";border-top:var(--pf-c-tabs__item--m-current--BorderTopWidth) solid var(--pf-c-tabs__item--m-current--Color);}+ .pf-c-tabs.pf-m-tabs-secondary{margin-top:calc(-1 * var(--pf-c-tabs__item--BorderWidth));border-top:var(--pf-c-tabs__item--BorderWidth) solid var(--pf-c-tabs__item--BorderColor);}+ .pf-c-tabs.pf-m-tabs-secondary .pf-c-tabs__scroll-button{margin-top:calc(-1 * var(--pf-c-tabs__item--BorderWidth));}.pf-c-tabs.pf-m-fill .pf-c-tabs__list{width:100%;}.pf-c-tabs.pf-m-fill .pf-c-tabs__item{flex:1;white-space:nowrap;}.pf-c-tabs.pf-m-fill .pf-c-tabs__item:first-of-type .pf-c-tabs__button::before{border-left:none;}.pf-c-tabs.pf-m-fill .pf-c-tabs__item:last-of-type .pf-c-tabs__button::before{border-right:none;}.pf-c-tabs.pf-m-fill .pf-c-tabs__item .pf-c-tabs__button{width:100%;}.pf-c-tabs__list{position:relative;display:flex;max-width:100%;overflow-x:auto;-webkit-overflow-scrolling:touch;}.pf-c-tabs__list .pf-c-tabs__item:last-of-type .pf-c-tabs__button::before{border-right-width:var(--pf-c-tabs__item--BorderWidth);}.pf-c-tabs__item{flex:none;}.pf-c-tabs__item:not(.pf-m-current):hover .pf-c-tabs__button::after{position:absolute;top:0;right:0;bottom:0;left:0;margin-left:var(--pf-c-tabs__item--BorderWidth);content:\"\";border-top:var(--pf-c-tabs__item--m-current--BorderTopWidth) solid var(--pf-c-tabs__item--hover--Color);}.pf-c-tabs__item.pf-m-current .pf-c-tabs__button{z-index:var(--pf-c-tabs__item--m-current--ZIndex);color:var(--pf-c-tabs__item--m-current--Color);}.pf-c-tabs__item.pf-m-current .pf-c-tabs__button::before{border-bottom-color:var(--pf-c-tabs__item--BackgroundColor);}.pf-c-tabs__item.pf-m-current .pf-c-tabs__button::after{position:absolute;top:0;right:0;bottom:0;left:0;margin-left:var(--pf-c-tabs__item--BorderWidth);content:\"\";border-top:var(--pf-c-tabs__item--m-current--BorderTopWidth) solid var(--pf-c-tabs__item--m-current--Color);}.pf-m-tabs-secondary .pf-c-tabs__item .pf-c-tabs__button::before,.pf-m-tabs-secondary .pf-c-tabs__item .pf-c-tabs__button::after,.pf-m-tabs-secondary .pf-c-tabs__item .pf-c-tabs__button:hover::after{content:none;}.pf-m-tabs-secondary .pf-c-tabs__item:not(.pf-m-current) .pf-c-tabs__button:hover{color:var(--pf-c-tabs__item--hover--Color);}.pf-c-tabs__button{position:relative;padding:var(--pf-c-tabs__button--PaddingTop) var(--pf-c-tabs__button--PaddingRight) var(--pf-c-tabs__button--PaddingBottom) var(--pf-c-tabs__button--PaddingLeft);user-select:none;background:var(--pf-c-tabs__button--Background);border:0;}.pf-c-tabs__button::before{position:absolute;top:0;right:0;bottom:0;left:0;content:\"\";border:solid var(--pf-c-tabs__item--BorderColor);border-width:var(--pf-c-tabs__item--BorderWidth) 0 var(--pf-c-tabs__item--BorderWidth) var(--pf-c-tabs__item--BorderWidth);}.pf-c-tabs__scroll-item{position:absolute;top:0;bottom:0;width:var(--pf-c-tabs__scroll-button--Width);}.pf-c-tabs__scroll-item:first-of-type{left:0;}.pf-c-tabs__scroll-item:last-of-type{right:0;}.pf-c-tabs__scroll-button{position:absolute;top:0;bottom:0;z-index:var(--pf-c-tabs__scroll-button--ZIndex);width:var(--pf-c-tabs__scroll-button--Width);line-height:1;background-color:var(--pf-c-tabs__item--BackgroundColor);border:initial;}.pf-c-tabs__scroll-button:nth-of-type(2){right:0;}.pf-c-tabs__scroll-button::before{position:absolute;top:0;right:0;bottom:0;left:0;content:\"\";border:var(--pf-c-tabs__item--BorderWidth) solid var(--pf-c-tabs__item--BorderColor);}.pf-c-tabs__scroll-button:hover::after{position:absolute;top:0;right:0;bottom:0;left:0;content:\"\";border-top:var(--pf-c-tabs__item--m-current--BorderTopWidth) solid var(--pf-c-tabs__item--hover--Color);}`);\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { css } from '@patternfly/react-styles';\nvar propTypes = {\n  /** the index of the active tab */\n  activeKey: PropTypes.number,\n\n  /** content rendered inside the tab content area. */\n  child: PropTypes.node,\n\n  /** id passed from parent to identify the content section */\n  id: PropTypes.string.isRequired\n};\nvar defaultProps = {\n  activeKey: 0,\n  child: null\n};\n\nvar TabContent = function TabContent(_ref) {\n  var id = _ref.id,\n      activeKey = _ref.activeKey,\n      child = _ref.child,\n      props = _objectWithoutProperties(_ref, [\"id\", \"activeKey\", \"child\"]);\n\n  return React.createElement(\"section\", _extends({\n    hidden: child.props.eventKey !== activeKey,\n    className: css('pf-c-tab-content', child.props.className),\n    id: \"pf-tab-section-\".concat(child.props.eventKey, \"-\").concat(id),\n    \"aria-labelledby\": \"pf-tab-\".concat(child.props.eventKey, \"-\").concat(id),\n    role: \"tabpanel\",\n    tabIndex: \"0\"\n  }, props), child.props.children);\n};\n\nTabContent.propTypes = propTypes;\nTabContent.defaultProps = defaultProps;\nexport default TabContent;","function _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport styles from \"../../@patternfly/patternfly/components/Tabs/tabs.css.js\";\nimport { css } from '@patternfly/react-styles';\nimport PropTypes from 'prop-types';\nimport { AngleLeftIcon, AngleRightIcon } from '@patternfly/react-icons';\nimport { getUniqueId, isElementInView, sideElementIsOutOfView } from '../../helpers/util';\nimport { SIDE } from '../../helpers/constants';\nimport TabContent from './TabContent';\nvar propTypes = {\n  /** content rendered inside the Tabs Component. */\n  children: PropTypes.node.isRequired,\n\n  /** additional classes added to the Tabs */\n  className: PropTypes.string,\n\n  /** the index of the active tab */\n  activeKey: PropTypes.number,\n\n  /** handel tab selection */\n  onSelect: PropTypes.func,\n\n  /** Enables the filled tab list layout */\n  isFilled: PropTypes.bool,\n\n  /** Enables Secondary Tab styling */\n  isSecondary: PropTypes.bool,\n\n  /** Aria Label for the left Scroll Button */\n  leftScrollAriaLabel: PropTypes.string,\n\n  /** Aria Label for the right Scroll Button */\n  rightScrollAriaLabel: PropTypes.string\n};\nvar defaultProps = {\n  className: '',\n  activeKey: 0,\n  onSelect: function onSelect() {\n    return undefined;\n  },\n  isFilled: false,\n  isSecondary: false,\n  leftScrollAriaLabel: 'Scroll left',\n  rightScrollAriaLabel: 'Scroll Right'\n};\n\nvar Tabs =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Tabs, _React$Component);\n\n  function Tabs() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Tabs);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Tabs)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      showLeftScrollButton: false,\n      showRightScrollButton: false,\n      highlightLeftScrollButton: false,\n      highlightRightScrollButton: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"id\", getUniqueId());\n\n    _defineProperty(_assertThisInitialized(_this), \"tabList\", React.createRef());\n\n    _defineProperty(_assertThisInitialized(_this), \"handleScrollButtons\", function () {\n      if (_this.tabList.current) {\n        var container = _this.tabList.current; // get first element and check if it is in view\n\n        var showLeftScrollButton = !isElementInView(container, container.firstChild, false); // get lase element and check if it is in view\n\n        var showRightScrollButton = !isElementInView(container, container.lastChild, false); // determine if selected tab is out of view and apply styles\n\n        var selectedTab;\n        var childrenArr = Array.from(container.children);\n        childrenArr.forEach(function (child) {\n          var className = child.className;\n\n          if (className.search('pf-m-current') > 0) {\n            selectedTab = child;\n          }\n        });\n        var sideOutOfView = sideElementIsOutOfView(container, selectedTab);\n\n        _this.setState({\n          showLeftScrollButton: showLeftScrollButton,\n          showRightScrollButton: showRightScrollButton,\n          highlightLeftScrollButton: (sideOutOfView === SIDE.LEFT || sideOutOfView === SIDE.BOTH) && showLeftScrollButton,\n          highlightRightScrollButton: (sideOutOfView === SIDE.RIGHT || sideOutOfView === SIDE.BOTH) && showRightScrollButton\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"scrollLeft\", function () {\n      // find first Element that is fully in view on the left, then scroll to the element before it\n      if (_this.tabList.current) {\n        var container = _this.tabList.current;\n        var childrenArr = Array.from(container.children);\n        var firstElementInView;\n        var lastElementOutOfView;\n        var i;\n\n        for (i = 0; i < childrenArr.length && !firstElementInView; i++) {\n          if (isElementInView(container, childrenArr[i], false)) {\n            firstElementInView = childrenArr[i];\n            lastElementOutOfView = childrenArr[i - 1];\n          }\n        }\n\n        lastElementOutOfView && (container.scrollLeft -= lastElementOutOfView.scrollWidth);\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"scrollRight\", function () {\n      // find last Element that is fully in view on the right, then scroll to the element after it\n      if (_this.tabList.current) {\n        var container = _this.tabList.current;\n        var childrenArr = Array.from(container.children);\n        var lastElementInView;\n        var firstElementOutOfView;\n        var i;\n\n        for (i = childrenArr.length - 1; i >= 0 && !lastElementInView; i--) {\n          if (isElementInView(container, childrenArr[i], false)) {\n            lastElementInView = childrenArr[i];\n            firstElementOutOfView = childrenArr[i + 1];\n          }\n        }\n\n        firstElementOutOfView && (container.scrollLeft += firstElementOutOfView.scrollWidth);\n      }\n    });\n\n    return _this;\n  }\n\n  _createClass(Tabs, [{\n    key: \"handleTabClick\",\n    value: function handleTabClick(event, eventKey) {\n      this.props.onSelect(event, eventKey);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      window.addEventListener('resize', this.handleScrollButtons, false); // call the handle resize function to check if scroll buttons should be shown\n\n      this.handleScrollButtons();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener('resize', this.handleScrollButtons, false);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          className = _this$props.className,\n          children = _this$props.children,\n          activeKey = _this$props.activeKey,\n          isFilled = _this$props.isFilled,\n          isSecondary = _this$props.isSecondary,\n          leftScrollAriaLabel = _this$props.leftScrollAriaLabel,\n          rightScrollAriaLabel = _this$props.rightScrollAriaLabel,\n          props = _objectWithoutProperties(_this$props, [\"className\", \"children\", \"activeKey\", \"isFilled\", \"isSecondary\", \"leftScrollAriaLabel\", \"rightScrollAriaLabel\"]);\n\n      var _this$state = this.state,\n          showLeftScrollButton = _this$state.showLeftScrollButton,\n          showRightScrollButton = _this$state.showRightScrollButton,\n          highlightLeftScrollButton = _this$state.highlightLeftScrollButton,\n          highlightRightScrollButton = _this$state.highlightRightScrollButton;\n      return React.createElement(React.Fragment, null, React.createElement(\"div\", _extends({}, props, {\n        className: css(styles.tabs, isFilled && styles.modifiers.fill, isSecondary && styles.modifiers.tabsSecondary, showLeftScrollButton && styles.modifiers.start, showRightScrollButton && styles.modifiers.end, highlightLeftScrollButton && styles.modifiers.startCurrent, highlightRightScrollButton && styles.modifiers.endCurrent, className)\n      }), !isSecondary && React.createElement(\"button\", {\n        className: css(styles.tabsScrollButton),\n        variant: \"plain\",\n        \"aria-label\": leftScrollAriaLabel,\n        onClick: this.scrollLeft\n      }, React.createElement(AngleLeftIcon, null)), React.createElement(\"ul\", {\n        className: css(styles.tabsList),\n        ref: this.tabList,\n        onScroll: this.handleScrollButtons\n      }, children.map(function (child, index) {\n        return React.createElement(\"li\", {\n          key: index,\n          className: css(styles.tabsItem, child.props.eventKey === activeKey && styles.modifiers.current, className)\n        }, React.createElement(\"button\", {\n          className: css(styles.tabsButton),\n          onClick: function onClick(event) {\n            return _this2.handleTabClick(event, child.props.eventKey);\n          },\n          id: \"pf-tab-\".concat(child.props.eventKey, \"-\").concat(child.props.id || _this2.id),\n          \"aria-controls\": \"pf-tab-section-\".concat(child.props.eventKey, \"-\").concat(child.props.id || _this2.id)\n        }, child.props.title));\n      })), !isSecondary && React.createElement(\"button\", {\n        className: css(styles.tabsScrollButton),\n        variant: \"plain\",\n        \"aria-label\": rightScrollAriaLabel,\n        onClick: this.scrollRight\n      }, React.createElement(AngleRightIcon, null))), children.map(function (child, index) {\n        return React.createElement(TabContent, {\n          key: index,\n          activeKey: activeKey,\n          child: child,\n          index: index,\n          id: child.props.id || _this2.id\n        });\n      }));\n    }\n  }]);\n\n  return Tabs;\n}(React.Component);\n\n_defineProperty(Tabs, \"propTypes\", propTypes);\n\n_defineProperty(Tabs, \"defaultProps\", defaultProps);\n\nexport default Tabs;"],"sourceRoot":""}