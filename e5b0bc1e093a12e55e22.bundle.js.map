{"version":3,"sources":["webpack:///./src/utils/formatValue.ts","webpack:///./src/components/charts/common/chartUtils.ts","webpack:///./src/testIds.ts","webpack:///./src/utils/computedReport/getComputedReportItems.ts","webpack:///./src/utils/computedReport/getItemLabel.ts","webpack:///./src/components/charts/chartTheme/theme-koku.ts","webpack:///./src/components/charts/chartTheme/index.ts","webpack:///./src/components/charts/chartTheme/theme-utils.ts","webpack:///./src/components/state/loadingState/loadingState.styles.ts","webpack:///./src/components/state/loadingState/loadingState.tsx","webpack:///./src/components/state/errorState/errorState.styles.ts","webpack:///./src/components/state/errorState/errorState.tsx","webpack:///./src/components/state/emptyValueState/emptyValueState.styles.ts","webpack:///./src/components/state/emptyValueState/emptyValueState.tsx","webpack:///./src/components/reports/reportSummary/reportSummary.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummary.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryAlt.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryAlt.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryDetails.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryDetails.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryItem.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryItem.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryItems.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryItems.tsx","webpack:///./src/components/charts/costChart/costChart.styles.ts","webpack:///./src/components/charts/costChart/costChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryTrend.styles.ts","webpack:///./src/components/reports/reportSummary/reportSummaryCost.tsx","webpack:///./src/components/charts/trendChart/trendChart.styles.ts","webpack:///./src/components/charts/trendChart/trendChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryTrend.tsx","webpack:///./src/components/charts/usageChart/usageChart.styles.ts","webpack:///./src/components/charts/usageChart/usageChart.tsx","webpack:///./src/components/reports/reportSummary/reportSummaryUsage.tsx","webpack:///./src/components/reports/reportSummary/index.ts","webpack:///./src/utils/sort.ts","webpack:///./src/components/state/noProvidersState/noProvidersState.styles.ts","webpack:///./src/components/state/noProvidersState/noProvidersState.tsx"],"names":["__webpack_require__","d","__webpack_exports__","unitLookupKey","formatValue","formatCurrency","unit","lookup","toLowerCase","value","options","fValue","formatUsageGb","formatUsageHrs","unknownTypeFormatter","_unit","fractionDigits","toLocaleString","minimumFractionDigits","maximumFractionDigits","style","currency","transformReport","getDateRange","getMaxValue","getTooltipContent","getTooltipLabel","getCostRangeString","getUsageRangeString","date_fns_end_of_month__WEBPACK_IMPORTED_MODULE_0__","date_fns_end_of_month__WEBPACK_IMPORTED_MODULE_0___default","n","date_fns_format__WEBPACK_IMPORTED_MODULE_1__","date_fns_format__WEBPACK_IMPORTED_MODULE_1___default","date_fns_get_date__WEBPACK_IMPORTED_MODULE_2__","date_fns_get_date__WEBPACK_IMPORTED_MODULE_2___default","date_fns_get_year__WEBPACK_IMPORTED_MODULE_3__","date_fns_get_year__WEBPACK_IMPORTED_MODULE_3___default","date_fns_start_of_month__WEBPACK_IMPORTED_MODULE_4__","date_fns_start_of_month__WEBPACK_IMPORTED_MODULE_4___default","i18next__WEBPACK_IMPORTED_MODULE_5__","utils_computedReport_getComputedReportItems__WEBPACK_IMPORTED_MODULE_6__","utils_formatValue__WEBPACK_IMPORTED_MODULE_7__","report","type","key","reportItem","items","idKey","sortKey","sortDirection","computedItems","Object","map","i","createDatum","reduce","acc","prevValue","length","y","computedItem","x","id","label","Number","isFloat","parseFloat","toFixed","isInt","name","units","datums","firstOfMonth","lastOfMonth","offset","start","end","today","Date","setMonth","getMonth","getDatumDateRange","setDate","lastDate","getDate","max","forEach","datum","t","formatOptions","toString","count","endDate","month","startDate","year","getTestProps","testIds","data-testid","details","cluster_lnk","historical_data_btn","show_more_btn","tag_lnk","view_all_btn","export","cancel_btn","submit_btn","login","alert","form","username_input","password_input","submit","masthead","username","sidebarToggle","logout","onboarding","btn_cancel","btn_back","btn_continue","btn_close","type_selector","type_opt_aws","type_opt_ocp","type_opt_non","name_input","check_box_1","check_box_2","s3_input","clusterid_input","arn_input","providers","add_btn","bucket_input","empty_state_add_btn","resource_name_input","cluster_id_input","type_input","view_all_link","sidebar","nav","link","backdrop","getComputedReportItems","labelKey","sort","getUnsortedComputedReportItems","direction","itemMap","Map","visitDataPoint","dataPoint","values","cluster_alias","clusters","undefined","cluster","capacity","cost","derivedCost","derived_cost","infrastructureCost","infrastructure_cost","markupCost","markup_cost","idSuffix","itemLabelKey","String","meta","group_by","keys","indexOf","query","tagPrefixKey","hasOwnProperty","getItemLabel","account_alias","limit","request","usage","get","set","assign","deltaPercent","delta_percent","deltaValue","delta_value","Array","data","from","LAYOUT_PROPS","padding","theme_koku","area","axis","bar","boxplot","candlestick","chart","errorbar","group","legend","line","pie","scatter","stack","tooltip","voronoi","chartTheme_ChartTheme","chart_theme","ChartTheme","default","theme_utils","styles","StyleSheet","create","container","display","justifyContent","height","marginTop","LoadingState","es","icon","binoculars_icon","title","subTitle","react_default","a","createElement","className","EmptyState","Spinner","size","Title","EmptyStateBody","ErrorState","error","error_circle_o_icon","response","status","lock_icon","EmptyStateIcon","fontSize","esm","EmptyValueState","minus_icon","chartSkeleton","marginBottom","legendSkeleton","reportSummary","subtitle","color","var","ReportSummary","children","detailsLink","Card","CardHeader","Boolean","CardBody","Fragment","Skeleton","xs","md","sm","CardFooter","reportSummaryAlt_styles_styles","flexGrow","minHeight","marginRight","tops","ReportSummaryAlt","tabs","Grid","gutter","GridItem","lg","xl","reportSummaryDetails_styles_styles","reportSummaryDetails","alignItems","text","paddingBottom","lineHeight","valueContainer","width","wordWrap","ReportSummaryDetails","chartType","costLabel","perspective","requestFormatOptions","requestLabel","showUnits","showUsageFirst","usageFormatOptions","usageLabel","emptyValueState","hasTotal","total","hasCost","hasCount","hasDerivedCost","hasInfrastructureCost","hasMarkupCost","hasRequest","hasUsage","getCostLayout","Tooltip","content","enableFlip","getRequestLayout","usageUnits","_units","utils_formatValue","unitsLabel","getUsageLayout","reportSummaryItem_styles_styles","reportSummaryItem",":not(:last-child)","test",":not(foo) svg","overflow","ReportSummaryItemBase","totalValue","percentVal","percentLabel","percent","Progress","defaultProps","v","ReportSummaryItem","reportSummaryItems_styles_styles","skeleton","ReportSummaryItems","Component","[object Object]","nextProps","this","props","otherIndex","findIndex","includes","slice","getItems","chartStyles","currentCostData","fill","stroke","currentInfrastructureCostData","strokeDasharray","itemsPerRow","labels","fontFamily","minWidth","legendColorScale","previousCostData","previousInfrastructureCostData","currentColorScale","previousColorScale","yAxis","axisLabel","grid","ticks","tickLabels","xAxis","costChart_styles_styles","chartContainer","costChart_CostChart","super","arguments","containerRef","createRef","state","hiddenSeries","Set","initDatum","costKey","setState","series","childName","legendItem","chartUtils","symbol","handleResize","current","clientWidth","getChart","index","ChartArea","has","interpolation","getLegend","legendItemsPerRow","ChartLegend","colorScale","getLegendData","responsive","formatDatumValue","formatDatumOptions","dist_es","handleLegendClick","delete","add","isDataAvailable","unavailable","s","isSeriesHidden","push","getChartNames","result","serie","getEvents","chart_interactive_legend","chartNames","isHidden","legendName","onLegendClick","setTimeout","window","addEventListener","prevProps","removeEventListener","domain","maxCurrentInfrastructure","maxCurrentUsage","maxPreviousInfrastructure","maxPreviousUsage","maxValue","Math","ceil","currentInfrastructureDate","get_date_default","currentUsageDate","previousInfrastructureDate","previousUsageDate","adjustContainerHeight","containerHeight","ChartVoronoiContainer","allowTooltip","constrainToVisibleArea","voronoiDimension","getDomain","getEndDate","midDate","floor","adjustedContainerHeight","ref","Chart","containerComponent","events","legendComponent","legendData","legendPosition","theme","chartTheme","ChartAxis","tickValues","dependentAxis","reportSummaryTrend_styles_styles","ReportSummaryCost","trendChart_styles_chartStyles","previousMonth","currentMonth","trendChart_styles_styles","trendChart_TrendChart","currentData","previousData","showUsageLegendLabel","orientation","maxCurrent","maxPrevious","previousDate","currentDate","ReportSummaryTrend","usageChart_styles_chartStyles","currentRequestData","currentUsageData","previousRequestData","previousUsageData","usageChart_styles_styles","usageChart_UsageChart","maxCurrentRequest","maxPreviousRequest","currentRequestDate","previousRequestDate","ReportSummaryUsage","getValueForItem","item","array","b","aVal","bVal","viewSources","NoProvidersState","react_redux_es","getViewSources","pathName","location","pathname","split","shift","release","href","dollar_sign_icon"],"mappings":"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","file":"e5b0bc1e093a12e55e22.bundle.js","sourcesContent":["export const unitLookupKey = unit => {\n    const lookup = unit ? unit.toLowerCase() : '';\n    switch (lookup) {\n        case 'usd':\n        case 'gb':\n        case 'gb-hours':\n        case 'gb-mo':\n        case 'core-hours':\n        case 'hrs':\n        case 'tag-mo':\n        case 'vm-hours':\n            return lookup;\n        default:\n            return '';\n    }\n};\nexport const formatValue = (value, unit, options = {}) => {\n    const lookup = unitLookupKey(unit);\n    const fValue = value || 0;\n    switch (lookup) {\n        case 'usd':\n            return formatCurrency(fValue, lookup, options);\n        case 'gb':\n        case 'gb-hours':\n        case 'gb-mo':\n        case 'tag-mo':\n        case 'vm-hours':\n            return formatUsageGb(fValue, lookup, options);\n        case 'core-hours':\n        case 'hrs':\n            return formatUsageHrs(fValue, lookup, options);\n        default:\n            return unknownTypeFormatter(fValue, lookup, options);\n    }\n};\nconst unknownTypeFormatter = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatCurrency = (value, unit, { fractionDigits = 2 } = {}) => {\n    let fValue = value;\n    if (!value) {\n        fValue = 0;\n    }\n    return fValue.toLocaleString('en', {\n        style: 'currency',\n        currency: unit || 'USD',\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatUsageGb = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\nexport const formatUsageHrs = (value, _unit, { fractionDigits = 0 } = {}) => {\n    return value.toLocaleString('en', {\n        minimumFractionDigits: fractionDigits,\n        maximumFractionDigits: fractionDigits,\n    });\n};\n","import endOfMonth from 'date-fns/end_of_month';\nimport format from 'date-fns/format';\nimport formatDate from 'date-fns/format';\nimport getDate from 'date-fns/get_date';\nimport getYear from 'date-fns/get_year';\nimport startOfMonth from 'date-fns/start_of_month';\nimport i18next from 'i18next';\nimport { getComputedReportItems, } from 'utils/computedReport/getComputedReportItems';\nimport { unitLookupKey, } from 'utils/formatValue';\nexport function transformReport(report, type = 1 /* daily */, key = 'date', reportItem = 'cost') {\n    if (!report) {\n        return [];\n    }\n    const items = {\n        report,\n        idKey: key,\n        sortKey: 'id',\n        sortDirection: 1 /* desc */,\n    };\n    const computedItems = getComputedReportItems(items);\n    if (type === 1 /* daily */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    if (type === 2 /* monthly */) {\n        return computedItems.map(i => createDatum(i[reportItem], i, key));\n    }\n    return computedItems.reduce((acc, d) => {\n        const prevValue = acc.length ? acc[acc.length - 1].y : 0;\n        return [...acc, createDatum(prevValue + d[reportItem], d, key)];\n    }, []);\n}\nexport function createDatum(value, computedItem, idKey = 'date') {\n    const xVal = idKey === 'date' ? getDate(computedItem.id) : computedItem.label;\n    const yVal = isFloat(value)\n        ? parseFloat(value.toFixed(2))\n        : isInt(value)\n            ? value\n            : 0;\n    return {\n        x: xVal,\n        y: yVal,\n        key: computedItem.id,\n        name: computedItem.id,\n        units: computedItem.units,\n    };\n}\nexport function getDatumDateRange(datums, offset = 0) {\n    if (!(datums && datums.length)) {\n        const today = new Date();\n        // If datums is empty, obtain the month based on offset (e.g., to show previous month in chart legends)\n        if (offset) {\n            today.setMonth(today.getMonth() - offset);\n        }\n        const firstOfMonth = startOfMonth(today);\n        return [firstOfMonth, today];\n    }\n    const start = new Date(datums[0].key + 'T00:00:00');\n    const end = new Date(datums[datums.length - 1].key + 'T00:00:00');\n    return [start, end];\n}\nexport function getDateRange(datums, firstOfMonth = true, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDatumDateRange(datums, offset);\n    // Show the date range we are trying to cover (i.e., days 1-30/31)\n    if (firstOfMonth && start.setDate) {\n        start.setDate(1);\n    }\n    if (lastOfMonth && start.setDate) {\n        const lastDate = endOfMonth(start).getDate();\n        end.setDate(lastDate);\n    }\n    return [start, end];\n}\nexport function getDateRangeString(datums, firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(`chart.date_range`, {\n        count: getDate(end),\n        endDate: formatDate(end, 'DD'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'DD'),\n        year: getYear(end),\n    });\n}\nexport function getMonthRangeString(datums, key = 'chart.month_legend_label', offset = 0) {\n    const [start, end] = getDateRange(datums, true, false, offset);\n    return [\n        i18next.t(key, {\n            month: Number(formatDate(start, 'M')) - 1,\n        }),\n        i18next.t(key, {\n            month: Number(formatDate(end, 'M')) - 1,\n        }),\n    ];\n}\nexport function getMaxValue(datums) {\n    let max = 0;\n    if (datums && datums.length) {\n        datums.forEach(datum => {\n            if (datum.y > max) {\n                max = datum.y;\n            }\n        });\n    }\n    return max;\n}\nexport function getTooltipContent(formatValue) {\n    return function labelFormatter(value, unit = null, options = {}) {\n        const lookup = unitLookupKey(unit);\n        switch (lookup) {\n            case 'core-hours':\n            case 'hrs':\n            case 'gb':\n            case 'gb-hours':\n            case 'gb-mo':\n            case 'vm-hours':\n                return i18next.t(`unit_tooltips.${lookup}`, {\n                    value: `${formatValue(value, unit, options)}`,\n                });\n            default:\n                return `${formatValue(value, unit, options)}`;\n        }\n    };\n}\nexport function getTooltipLabel(datum, formatValue, formatOptions, idKey = 'date', units) {\n    if (!datum.key) {\n        return '';\n    }\n    if (idKey === 'date') {\n        const date = format(datum.key, 'DD MMM YYYY');\n        return `${date} ${formatValue(datum.y, units ? units : datum.units, formatOptions)}`;\n    }\n    return datum.key.toString();\n}\nexport function getCostRangeString(datums, key = 'chart.cost_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    const [start, end] = getDateRange(datums, firstOfMonth, lastOfMonth, offset);\n    return i18next.t(key, {\n        count: getDate(end),\n        endDate: formatDate(end, 'D'),\n        month: Number(formatDate(start, 'M')) - 1,\n        startDate: formatDate(start, 'D'),\n        year: getYear(end),\n    });\n}\nexport function getUsageRangeString(datums, key = 'chart.usage_legend_label', firstOfMonth = false, lastOfMonth = false, offset = 0) {\n    return getCostRangeString(datums, key, firstOfMonth, lastOfMonth, offset);\n}\nfunction isInt(n) {\n    return Number(n) === n && n % 1 === 0;\n}\nfunction isFloat(n) {\n    return Number(n) === n && n % 1 !== 0;\n}\n","export const testIdProp = 'data-testid';\nexport const getTestProps = (id) => ({ [testIdProp]: id });\nexport const testIds = {\n    details: {\n        cluster_lnk: 'cluster-lnk',\n        historical_data_btn: 'historical-data-btn',\n        show_more_btn: 'show-more-btn',\n        tag_lnk: 'tag-lnk',\n        view_all_btn: 'view-all-btn',\n    },\n    export: {\n        cancel_btn: 'cancel-btn',\n        submit_btn: 'submit-btn',\n    },\n    login: {\n        alert: 'alert',\n        form: 'login-form',\n        username_input: 'username-input',\n        password_input: 'password-input',\n        submit: 'submit',\n    },\n    masthead: {\n        masthead: 'masthead',\n        username: 'username',\n        sidebarToggle: 'sidebar-toggle',\n        logout: 'logout',\n    },\n    onboarding: {\n        btn_cancel: 'btn-cancel',\n        btn_back: 'btn-back',\n        btn_continue: 'btn-continue',\n        btn_close: 'btn-close',\n        type_selector: 'type-selector',\n        type_opt_aws: 'type-option-aws',\n        type_opt_ocp: 'type-option-ocp',\n        type_opt_non: 'type-option-non',\n        name_input: 'name-input',\n        check_box_1: 'check-box-1',\n        check_box_2: 'check-box-2',\n        s3_input: 's3-input',\n        clusterid_input: 'clusterid-input',\n        arn_input: 'arn-input',\n    },\n    providers: {\n        add_btn: 'add-btn',\n        bucket_input: 'bucket-input',\n        cancel_btn: 'cancel-btn',\n        empty_state_add_btn: 'empty_state_add-btn',\n        name_input: 'provider-name-input',\n        resource_name_input: 'provider-resource-name-input',\n        cluster_id_input: 'provider-cluster-id-input',\n        submit_btn: 'submit-btn',\n        type_input: 'provider-type-input',\n        view_all_link: 'view-all-lnk',\n    },\n    sidebar: {\n        nav: 'vertical-nav',\n        link: 'vertical-nav-link',\n        backdrop: 'sidebar-backdrop',\n    },\n};\n","import { sort } from 'utils/sort';\nimport { getItemLabel } from './getItemLabel';\nexport function getComputedReportItems({ report, idKey, labelKey = idKey, sortDirection = 0 /* asc */, sortKey = 'cost', }) {\n    return sort(getUnsortedComputedReportItems({\n        report,\n        idKey,\n        labelKey,\n        sortDirection,\n        sortKey,\n    }), {\n        key: sortKey,\n        direction: sortDirection,\n    });\n}\nexport function getUnsortedComputedReportItems({ report, idKey, labelKey = idKey }) {\n    if (!report) {\n        return [];\n    }\n    const itemMap = new Map();\n    const visitDataPoint = (dataPoint) => {\n        if (dataPoint.values) {\n            dataPoint.values.forEach((value) => {\n                // clusters will either contain the cluster alias or default to cluster ID\n                const cluster_alias = value.clusters && value.clusters.length > 0\n                    ? value.clusters[0]\n                    : undefined;\n                const cluster = cluster_alias || value.cluster;\n                const capacity = value.capacity ? value.capacity.value : 0;\n                const cost = value.cost ? value.cost.value : 0;\n                const derivedCost = value.derived_cost ? value.derived_cost.value : 0;\n                const infrastructureCost = value.infrastructure_cost\n                    ? value.infrastructure_cost.value\n                    : 0;\n                const markupCost = value.markup_cost ? value.markup_cost.value : 0;\n                // Ensure unique IDs -- https://github.com/project-koku/koku-ui/issues/706\n                const idSuffix = idKey !== 'date' && idKey !== 'cluster' && value.cluster\n                    ? `-${value.cluster}`\n                    : '';\n                const id = `${value[idKey]}${idSuffix}`;\n                let label;\n                const itemLabelKey = getItemLabel({ report, labelKey, value });\n                if (itemLabelKey === 'cluster' && cluster_alias) {\n                    label = cluster_alias;\n                }\n                else if (value[itemLabelKey] instanceof Object) {\n                    label = value[itemLabelKey].value;\n                }\n                else {\n                    label = value[itemLabelKey];\n                }\n                if (itemLabelKey === 'account' && value.account_alias) {\n                    label = value.account_alias;\n                }\n                const limit = value.limit ? value.limit.value : 0;\n                const request = value.request ? value.request.value : 0;\n                const usage = value.usage ? value.usage.value : 0;\n                const units = value.usage\n                    ? value.usage.units\n                    : value.cost\n                        ? value.cost.units\n                        : 'USD';\n                if (!itemMap.get(id)) {\n                    itemMap.set(id, {\n                        capacity,\n                        cluster,\n                        clusters: value.clusters,\n                        cost,\n                        deltaPercent: value.delta_percent,\n                        deltaValue: value.delta_value,\n                        derivedCost,\n                        id,\n                        infrastructureCost,\n                        label,\n                        limit,\n                        markupCost,\n                        request,\n                        units,\n                        usage,\n                    });\n                    return;\n                }\n                itemMap.set(id, Object.assign({}, itemMap.get(id), { capacity: itemMap.get(id).capacity + capacity, cost: itemMap.get(id).cost + cost, derivedCost: itemMap.get(id).derivedCost + derivedCost, infrastructureCost: itemMap.get(id).infrastructureCost + infrastructureCost, limit: itemMap.get(id).limit + limit, markupCost: itemMap.get(id).markupCost + markupCost, request: itemMap.get(id).request + request, usage: itemMap.get(id).usage + usage }));\n            });\n        }\n        for (const key in dataPoint) {\n            if (dataPoint[key] instanceof Array) {\n                return dataPoint[key].forEach(visitDataPoint);\n            }\n        }\n    };\n    if (report && report.data) {\n        report.data.forEach(visitDataPoint);\n    }\n    return Array.from(itemMap.values());\n}\n","import { tagKeyPrefix } from 'api/queries/query';\nexport function getItemLabel({ report, labelKey, value }) {\n    let itemLabelKey = String(labelKey);\n    if (report.meta && report.meta.group_by) {\n        const group_by = report.meta.group_by;\n        for (const key of Object.keys(group_by)) {\n            if (key.indexOf(tagKeyPrefix)) {\n                const tagPrefixKey = tagKeyPrefix + labelKey;\n                if (value.hasOwnProperty(tagPrefixKey)) {\n                    itemLabelKey = tagPrefixKey;\n                }\n            }\n        }\n    }\n    return itemLabelKey;\n}\n","// Layout\nconst LAYOUT_PROPS = {\n    padding: 8,\n};\n// Victory theme properties only\nexport default {\n    area: Object.assign({}, LAYOUT_PROPS),\n    axis: Object.assign({}, LAYOUT_PROPS),\n    bar: Object.assign({}, LAYOUT_PROPS),\n    boxplot: Object.assign({}, LAYOUT_PROPS),\n    candlestick: Object.assign({}, LAYOUT_PROPS),\n    chart: Object.assign({}, LAYOUT_PROPS),\n    errorbar: Object.assign({}, LAYOUT_PROPS),\n    group: Object.assign({}, LAYOUT_PROPS),\n    legend: {},\n    line: Object.assign({}, LAYOUT_PROPS),\n    pie: Object.assign({}, LAYOUT_PROPS),\n    scatter: Object.assign({}, LAYOUT_PROPS),\n    stack: Object.assign({}, LAYOUT_PROPS),\n    tooltip: {},\n    voronoi: Object.assign({}, LAYOUT_PROPS),\n};\n","import getTheme from './theme-utils';\nconst ChartTheme = getTheme();\nexport default ChartTheme;\n","import { ChartThemeColor, ChartThemeVariant, getCustomTheme, } from '@patternfly/react-charts';\nimport { default as ChartTheme } from './theme-koku';\n// Applies theme color and variant to base theme\nconst getTheme = () => getCustomTheme(ChartThemeColor.default, ChartThemeVariant.default, ChartTheme);\nexport default getTheme;\n","import { StyleSheet } from '@patternfly/react-styles';\nexport const styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100vh',\n        marginTop: '150px',\n    },\n});\n","import { EmptyState, EmptyStateBody, Spinner, Title, } from '@patternfly/react-core';\nimport { BinocularsIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './loadingState.styles';\nconst LoadingStateBase = ({ icon = BinocularsIcon, t, }) => {\n    const title = t('loading_state.sources_title');\n    const subTitle = t('loading_state.sources_desc');\n    return (React.createElement(\"div\", { className: css(styles.container) },\n        React.createElement(EmptyState, null,\n            React.createElement(Spinner, { size: \"lg\" }),\n            React.createElement(Title, { size: \"lg\" }, title),\n            React.createElement(EmptyStateBody, null, subTitle))));\n};\nconst LoadingState = translate()(LoadingStateBase);\nexport { LoadingState };\n","import { StyleSheet } from '@patternfly/react-styles';\nexport const styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100vh',\n        marginTop: '150px',\n    },\n});\n","import { EmptyState as PfEmptyState, EmptyStateBody, EmptyStateIcon, Title, } from '@patternfly/react-core';\nimport { ErrorCircleOIcon, LockIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './errorState.styles';\nconst ErrorStateBase = ({ error, icon = ErrorCircleOIcon, t, }) => {\n    let title = t('error_state.unexpected_title');\n    let subTitle = t('error_state.unexpected_desc');\n    if (error &&\n        error.response &&\n        (error.response.status === 401 || error.response.status === 403)) {\n        icon = LockIcon;\n        title = t('error_state.unauthorized_title');\n        subTitle = t('error_state.unauthorized_desc');\n    }\n    return (React.createElement(\"div\", { className: css(styles.container) },\n        React.createElement(PfEmptyState, null,\n            React.createElement(EmptyStateIcon, { icon: icon }),\n            React.createElement(Title, { size: \"lg\" }, title),\n            React.createElement(EmptyStateBody, null, subTitle))));\n};\nconst ErrorState = translate()(ErrorStateBase);\nexport { ErrorState };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_FontSize_sm } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    container: {\n        fontSize: global_FontSize_sm.value,\n    },\n});\n","import { MinusIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './emptyValueState.styles';\nexport const EmptyValueState = () => {\n    return (React.createElement(\"span\", { className: css(styles.container) },\n        React.createElement(MinusIcon, null)));\n};\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './reportSummary.styles';\nconst ReportSummaryBase = ({ children, detailsLink, title, subTitle, status, t, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(CardHeader, null,\n        React.createElement(Title, { size: \"lg\" }, title),\n        Boolean(subTitle) && React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle)),\n    React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n        React.createElement(Skeleton, { size: SkeletonSize.xs }),\n        React.createElement(Skeleton, { className: css(styles.chartSkeleton), size: SkeletonSize.md }),\n        React.createElement(Skeleton, { size: SkeletonSize.sm }),\n        React.createElement(Skeleton, { className: css(styles.legendSkeleton), size: SkeletonSize.xs }))) : (children)),\n    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)));\nconst ReportSummary = translate()(ReportSummaryBase);\nexport { ReportSummary };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_200, global_FontSize_xs, global_spacer_lg, global_spacer_md, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chartSkeleton: {\n        height: '175px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_md.value,\n    },\n    container: {\n        display: 'flex',\n    },\n    cost: {\n        flexGrow: 1,\n        minHeight: '470px',\n        marginRight: global_spacer_md.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    reportSummary: {\n        height: '100%',\n    },\n    subtitle: {\n        display: 'inline-block',\n        fontSize: global_FontSize_xs.value,\n        color: global_Color_200.var,\n        marginBottom: '0',\n    },\n    tops: {\n        flexGrow: 1,\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Card, CardBody, CardFooter, CardHeader, Grid, GridItem, Title, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { styles } from './reportSummaryAlt.styles';\nconst OcpCloudReportSummaryAltBase = ({ children, detailsLink, status, subTitle, t, tabs, title, }) => (React.createElement(Card, { className: css(styles.reportSummary) },\n    React.createElement(Grid, { gutter: \"md\" },\n        React.createElement(GridItem, { lg: 5, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.cost) },\n                React.createElement(CardHeader, null,\n                    React.createElement(Title, { size: \"lg\" }, title),\n                    Boolean(subTitle) && (React.createElement(\"p\", { className: css(styles.subtitle) }, subTitle))),\n                React.createElement(CardBody, null, status === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                    React.createElement(Skeleton, { size: SkeletonSize.xs }),\n                    React.createElement(Skeleton, { className: css(styles.chartSkeleton), size: SkeletonSize.md }),\n                    React.createElement(Skeleton, { size: SkeletonSize.sm }),\n                    React.createElement(Skeleton, { className: css(styles.legendSkeleton), size: SkeletonSize.xs }))) : (children)))),\n        React.createElement(GridItem, { lg: 7, xl: 6 },\n            React.createElement(\"div\", { className: css(styles.container) },\n                React.createElement(\"div\", { className: css(styles.tops) }, status !== 1 /* inProgress */ && (React.createElement(React.Fragment, null,\n                    Boolean(tabs) && React.createElement(CardBody, null, tabs),\n                    Boolean(detailsLink) && React.createElement(CardFooter, null, detailsLink)))))))));\nconst ReportSummaryAlt = translate()(OcpCloudReportSummaryAltBase);\nexport { ReportSummaryAlt };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_Color_100, global_FontSize_4xl, global_FontSize_xs, global_LineHeight_sm, global_spacer_md, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryDetails: {\n        marginBottom: global_spacer_md.value,\n        display: 'flex',\n        alignItems: 'flex-end',\n    },\n    text: {\n        paddingBottom: 14,\n        lineHeight: global_LineHeight_sm.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    value: {\n        color: global_Color_100.var,\n        marginRight: global_spacer_sm.value,\n        fontSize: global_FontSize_4xl.value,\n    },\n    valueContainer: {\n        display: 'inline-block',\n        marginBottom: global_spacer_md.value,\n        width: '50%',\n        wordWrap: 'break-word',\n    },\n});\n","import { Tooltip } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey, } from 'utils/formatValue';\nimport { styles } from './reportSummaryDetails.styles';\nconst ReportSummaryDetailsBase = ({ chartType, costLabel, formatValue, formatOptions, perspective, report, requestFormatOptions, requestLabel, showUnits = false, showUsageFirst = false, t, units, usageFormatOptions, usageLabel, }) => {\n    let cost = React.createElement(EmptyValueState, null);\n    let derivedCost = React.createElement(EmptyValueState, null);\n    let infrastructureCost = React.createElement(EmptyValueState, null);\n    let markupCost = React.createElement(EmptyValueState, null);\n    let request = React.createElement(EmptyValueState, null);\n    let usage = React.createElement(EmptyValueState, null);\n    const hasTotal = report && report.meta && report.meta.total;\n    const hasCost = hasTotal && report.meta.total.cost;\n    const hasCount = hasTotal && report.meta.total.count;\n    const hasDerivedCost = hasTotal && report.meta.total.derived_cost;\n    const hasInfrastructureCost = hasTotal && report.meta.total.infrastructure_cost;\n    const hasMarkupCost = hasTotal && report.meta.total.markup_cost;\n    const hasRequest = hasTotal && report.meta.total.request;\n    const hasUsage = hasTotal && report.meta.total.usage;\n    if (hasTotal) {\n        cost = formatValue(hasCost ? report.meta.total.cost.value : 0, hasCost ? report.meta.total.cost.units : 'USD', formatOptions);\n        derivedCost = formatValue(hasDerivedCost ? report.meta.total.derived_cost.value : 0, hasDerivedCost ? report.meta.total.derived_cost.units : 'USD', formatOptions);\n        infrastructureCost = formatValue(hasInfrastructureCost ? report.meta.total.infrastructure_cost.value : 0, hasInfrastructureCost\n            ? report.meta.total.infrastructure_cost.units\n            : 'USD', formatOptions);\n        markupCost = formatValue(hasMarkupCost ? report.meta.total.markup_cost.value : 0, hasMarkupCost ? report.meta.total.markup_cost.units : 'USD', formatOptions);\n        request = formatValue(hasRequest ? report.meta.total.request.value : 0, hasRequest ? report.meta.total.request.units : '', requestFormatOptions ? usageFormatOptions : formatOptions);\n        if (hasUsage && report.meta.total.usage.value >= 0) {\n            usage = formatValue(hasUsage ? report.meta.total.usage.value : 0, hasUsage ? report.meta.total.usage.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n        else {\n            // Workaround for https://github.com/project-koku/koku-ui/issues/1058\n            usage = formatValue(hasUsage ? report.meta.total.usage : 0, hasCount ? report.meta.total.count.units : '', usageFormatOptions ? usageFormatOptions : formatOptions);\n        }\n    }\n    const getCostLayout = () => (React.createElement(\"div\", { className: css(styles.valueContainer) },\n        Boolean(perspective === \"ocp\" /* ocp */ ||\n            perspective === \"ocp_cloud\" /* ocpCloud */) ? (React.createElement(Tooltip, { content: t(`${perspective}_dashboard.total_cost_tooltip`, perspective === \"ocp\" /* ocp */\n                ? { infrastructureCost, derivedCost }\n                : { infrastructureCost, markupCost }), enableFlip: true },\n            React.createElement(\"div\", { className: css(styles.value) }, cost))) : (React.createElement(\"div\", { className: css(styles.value) }, cost)),\n        React.createElement(\"div\", { className: css(styles.text) },\n            React.createElement(\"div\", null, costLabel))));\n    const getRequestLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasRequest\n            ? report.meta.total.request.units\n            : '';\n        const _units = unitLookupKey(usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: css(styles.valueContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                request,\n                Boolean(showUnits && hasRequest && report.meta.total.request.value >= 0) && React.createElement(\"span\", { className: css(styles.text) }, unitsLabel)),\n            React.createElement(\"div\", { className: css(styles.text) },\n                React.createElement(\"div\", null, requestLabel))));\n    };\n    const getUsageLayout = () => {\n        if (!usageLabel) {\n            return null;\n        }\n        const usageUnits = hasUsage ? report.meta.total.usage.units : '';\n        // added as a work-around for azure #1079\n        const _units = unitLookupKey(units ? units : usageUnits);\n        const unitsLabel = t(`units.${_units}`);\n        return (React.createElement(\"div\", { className: css(styles.valueContainer) },\n            React.createElement(\"div\", { className: css(styles.value) },\n                usage,\n                Boolean(showUnits && hasUsage && report.meta.total.usage.value >= 0) && React.createElement(\"span\", { className: css(styles.text) }, unitsLabel)),\n            React.createElement(\"div\", { className: css(styles.text) },\n                React.createElement(\"div\", null, usageLabel))));\n    };\n    if (chartType === \"cost\" /* cost */) {\n        return React.createElement(React.Fragment, null, getCostLayout());\n    }\n    else if (chartType === \"trend\" /* trend */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getCostLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getCostLayout(),\n            getUsageLayout()));\n    }\n    else if (chartType === \"usage\" /* usage */) {\n        if (showUsageFirst) {\n            return (React.createElement(React.Fragment, null,\n                getUsageLayout(),\n                getRequestLayout()));\n        }\n        return (React.createElement(React.Fragment, null,\n            getRequestLayout(),\n            getUsageLayout()));\n    }\n    else {\n        return null;\n    }\n};\nconst ReportSummaryDetails = translate()(ReportSummaryDetailsBase);\nexport { ReportSummaryDetails };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    reportSummaryItem: {\n        ':not(:last-child)': {\n            marginBottom: global_spacer_md.value,\n        },\n    },\n    test: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Progress, ProgressSize } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { unitLookupKey } from 'utils/formatValue';\nimport { styles } from './reportSummaryItem.styles';\nconst ReportSummaryItemBase = ({ label, formatOptions, formatValue, t, totalValue, units, value, }) => {\n    const lookup = unitLookupKey(units);\n    const unitsLabel = lookup !== 'usd' ? t(`units.${lookup}`) : undefined;\n    const percent = !totalValue ? 0 : (value / totalValue) * 100;\n    const percentVal = Number(percent.toFixed(2));\n    const percentLabel = t('percent_of_total', {\n        percent: percentVal,\n        units: unitsLabel,\n        value: formatValue(value, units, formatOptions),\n    });\n    return (React.createElement(\"li\", { className: css(styles.reportSummaryItem) },\n        React.createElement(Progress, { label: percentLabel, value: percentVal, title: label, size: ProgressSize.sm })));\n};\nReportSummaryItemBase.defaultProps = {\n    formatValue: v => v,\n};\nconst ReportSummaryItem = translate()(ReportSummaryItemBase);\nexport { ReportSummaryItem };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    skeleton: {\n        marginTop: global_spacer_md.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { Skeleton, SkeletonSize, } from '@redhat-cloud-services/frontend-components/components/Skeleton';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { getComputedReportItems, } from 'utils/computedReport/getComputedReportItems';\nimport { styles } from './reportSummaryItems.styles';\nclass ReportSummaryItemsBase extends React.Component {\n    shouldComponentUpdate(nextProps) {\n        return nextProps.report !== this.props.report;\n    }\n    getItems() {\n        const { report, idKey, labelKey } = this.props;\n        const computedItems = getComputedReportItems({\n            report,\n            idKey,\n            labelKey,\n        });\n        const otherIndex = computedItems.findIndex(i => {\n            const id = i.id;\n            if (id && id !== null) {\n                return id.toString().includes('Other');\n            }\n        });\n        if (otherIndex !== -1) {\n            return [\n                ...computedItems.slice(0, otherIndex),\n                ...computedItems.slice(otherIndex + 1),\n                computedItems[otherIndex],\n            ];\n        }\n        return computedItems;\n    }\n    render() {\n        const { children, status } = this.props;\n        if (status === 1 /* inProgress */) {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: SkeletonSize.md }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) }),\n                React.createElement(Skeleton, { size: SkeletonSize.md, className: css(styles.skeleton) })));\n        }\n        else {\n            const items = this.getItems();\n            return React.createElement(\"ul\", null, children({ items }));\n        }\n    }\n}\nconst ReportSummaryItems = translate()(ReportSummaryItemsBase);\nexport { ReportSummaryItems, };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { chart_color_green_100, chart_color_green_200, chart_color_green_300, chart_color_green_400, chart_color_green_500, global_disabled_color_200, global_FontFamily_sans_serif, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    currentCostData: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    currentInfrastructureCostData: {\n        data: {\n            fill: 'none',\n            stroke: '#88D080',\n            strokeDasharray: '3,3',\n        },\n    },\n    itemsPerRow: 2,\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 14,\n        },\n        minWidth: 200,\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        global_disabled_color_200.value,\n        chart_color_green_100.value,\n        global_disabled_color_200.value,\n        chart_color_green_200.value,\n    ],\n    previousCostData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    previousInfrastructureCostData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    previousColorScale: [\n        global_disabled_color_200.value,\n        global_disabled_color_200.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = StyleSheet.create({\n    chartContainer: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartVoronoiContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { css } from '@patternfly/react-styles';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange, getMaxValue, getTooltipContent, getTooltipLabel, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles, styles } from './costChart.styles';\nclass CostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentInfrastructureCostData, currentCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                series: [\n                    {\n                        childName: 'previousCost',\n                        data: previousCostData,\n                        legendItem: {\n                            name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                            symbol: {\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.previousCostData,\n                    },\n                    {\n                        childName: 'currentCost',\n                        data: currentCostData,\n                        legendItem: {\n                            name: getCostRangeString(currentCostData, costKey, true, false),\n                            symbol: {\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.currentCostData,\n                    },\n                    {\n                        childName: 'previousInfrastructureCost',\n                        data: previousInfrastructureCostData,\n                        legendItem: {\n                            name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                            symbol: {\n                                type: 'dash',\n                            },\n                        },\n                        style: chartStyles.previousInfrastructureCostData,\n                    },\n                    {\n                        childName: 'currentInfrastructureCost',\n                        data: currentInfrastructureCostData,\n                        legendItem: {\n                            name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                            symbol: {\n                                type: 'dash',\n                            },\n                        },\n                        style: chartStyles.currentInfrastructureCostData,\n                    },\n                ],\n            });\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow\n                ? legendItemsPerRow\n                : width > 400\n                    ? chartStyles.itemsPerRow\n                    : 1;\n            return (React.createElement(ChartLegend, { colorScale: chartStyles.legendColorScale, data: this.getLegendData(), height: 25, gutter: 10, itemsPerRow: itemsPerRow, name: \"legend\", responsive: false, style: chartStyles.legend }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const value = getTooltipLabel(datum, getTooltipContent(formatDatumValue), formatDatumOptions, 'date');\n            if (datum.childName === 'currentCost' ||\n                datum.childName === 'previousCost') {\n                return i18next.t('chart.cost_tooltip', { value });\n            }\n            else if (datum.childName === 'currentInfrastructureCost' ||\n                datum.childName === 'previousInfrastructureCost') {\n                return i18next.t('chart.cost_infrastructure_tooltip', { value });\n            }\n            return value;\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length === (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map((serie, index) => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign({}, s.legendItem, getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentInfrastructureCostData !==\n            this.props.currentInfrastructureCostData ||\n            prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.previousInfrastructureCostData !==\n                this.props.previousInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentInfrastructureCostData, currentCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentInfrastructure = currentInfrastructureCostData\n            ? getMaxValue(currentInfrastructureCostData)\n            : 0;\n        const maxCurrentUsage = currentCostData ? getMaxValue(currentCostData) : 0;\n        const maxPreviousInfrastructure = previousInfrastructureCostData\n            ? getMaxValue(previousInfrastructureCostData)\n            : 0;\n        const maxPreviousUsage = previousCostData\n            ? getMaxValue(previousCostData)\n            : 0;\n        const maxValue = Math.max(maxCurrentInfrastructure, maxCurrentUsage, maxPreviousInfrastructure, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, currentCostData, previousInfrastructureCostData, previousCostData, } = this.props;\n        const currentInfrastructureDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const currentUsageDate = currentCostData\n            ? getDate(getDateRange(currentCostData, true, true)[1])\n            : 0;\n        const previousInfrastructureDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousCostData\n            ? getDate(getDateRange(previousCostData, true, true)[1])\n            : 0;\n        return currentInfrastructureDate > 0 ||\n            currentUsageDate > 0 ||\n            previousInfrastructureDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentInfrastructureDate, currentUsageDate, previousInfrastructureDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding, title, } = this.props;\n        const { series, width } = this.state;\n        const isDataAvailable = this.isDataAvailable();\n        const container = (React.createElement(ChartVoronoiContainer, { allowTooltip: !isDataAvailable, constrainToVisibleArea: true, labels: !isDataAvailable ? this.getTooltipLabel : undefined, voronoiDimension: \"x\" }));\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 400\n                ? containerHeight\n                : containerHeight + 75\n            : containerHeight;\n        return (React.createElement(\"div\", { className: css(styles.chartContainer), ref: this.containerRef, style: { height: adjustedContainerHeight } },\n            React.createElement(\"div\", null, title),\n            React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                series &&\n                    series.map((s, index) => {\n                        return this.getChart(s, index);\n                    }),\n                React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))));\n    }\n}\nexport { CostChart };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_sm } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    chart: {\n        marginBottom: global_spacer_sm.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport { CostChart } from 'components/charts/costChart';\nimport React from 'react';\nimport { styles } from './reportSummaryTrend.styles';\nconst ReportSummaryCost = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(CostChart, Object.assign({}, props))));\nexport { ReportSummaryCost };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { chart_color_green_100, chart_color_green_200, chart_color_green_300, chart_color_green_400, chart_color_green_500, global_disabled_color_200, global_FontFamily_sans_serif, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 14,\n        },\n        minWidth: 175,\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        global_disabled_color_200.value,\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    previousMonth: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    currentMonth: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = StyleSheet.create({\n    chartContainer: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n    },\n});\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartVoronoiContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { css } from '@patternfly/react-styles';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange, getMaxValue, getTooltipContent, getTooltipLabel, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport React from 'react';\nimport { chartStyles, styles } from './trendChart.styles';\nclass TrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, previousData, showUsageLegendLabel = false, } = this.props;\n            const key = showUsageLegendLabel\n                ? 'chart.usage_legend_label'\n                : 'chart.cost_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                series: [\n                    {\n                        childName: 'previousCost',\n                        data: previousData,\n                        legendItem: {\n                            name: getCostRangeString(previousData, key, true, true, 1),\n                            symbol: {\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.previousMonth,\n                    },\n                    {\n                        childName: 'currentCost',\n                        data: currentData,\n                        legendItem: {\n                            name: getCostRangeString(currentData, key, true, false),\n                            symbol: {\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.currentMonth,\n                    },\n                ],\n            });\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        this.getLegend = () => {\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            return (React.createElement(ChartLegend, { colorScale: chartStyles.legendColorScale, data: this.getLegendData(), gutter: 10, height: 25, name: \"legend\", orientation: width > 150 ? 'horizontal' : 'vertical', style: chartStyles.legend }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions, units } = this.props;\n            return getTooltipLabel(datum, getTooltipContent(formatDatumValue), formatDatumOptions, 'date', units);\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            // Todo: Leave one legend item visible at all times?\n            // const { hiddenSeries, series } = this.state;\n            // const leaveVisible = hiddenSeries.size === series.length - 1;\n            // if (leaveVisible && !this.isSeriesHidden(props.index)) {\n            //   return;\n            // }\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length === (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map((serie, index) => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign({}, s.legendItem, getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData ||\n            prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentData, previousData } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrent = currentData ? getMaxValue(currentData) : 0;\n        const maxPrevious = previousData ? getMaxValue(previousData) : 0;\n        const maxValue = Math.max(maxCurrent, maxPrevious);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentData, previousData } = this.props;\n        const previousDate = previousData\n            ? getDate(getDateRange(previousData, true, true)[1])\n            : 0;\n        const currentDate = currentData\n            ? getDate(getDateRange(currentData, true, true)[1])\n            : 0;\n        return currentDate > 0 || previousDate > 0\n            ? Math.max(currentDate, previousDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding, title, } = this.props;\n        const { series, width } = this.state;\n        const isDataAvailable = this.isDataAvailable();\n        const container = (React.createElement(ChartVoronoiContainer, { allowTooltip: !isDataAvailable, constrainToVisibleArea: true, labels: !isDataAvailable ? this.getTooltipLabel : undefined, voronoiDimension: \"x\" }));\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 400\n                ? containerHeight\n                : containerHeight + 75\n            : containerHeight;\n        return (React.createElement(\"div\", { className: css(styles.chartContainer), ref: this.containerRef, style: { height: adjustedContainerHeight } },\n            React.createElement(\"div\", null, title),\n            React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                series &&\n                    series.map((s, index) => {\n                        return this.getChart(s, index);\n                    }),\n                React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))));\n    }\n}\nexport { TrendChart };\n","import { css } from '@patternfly/react-styles';\nimport { TrendChart } from 'components/charts/trendChart';\nimport React from 'react';\nimport { styles } from './reportSummaryTrend.styles';\nconst ReportSummaryTrend = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(TrendChart, Object.assign({}, props))));\nexport { ReportSummaryTrend };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { chart_color_green_100, chart_color_green_200, chart_color_green_300, chart_color_green_400, chart_color_green_500, global_disabled_color_200, global_FontFamily_sans_serif, global_spacer_lg, } from '@patternfly/react-tokens';\nexport const chartStyles = {\n    currentRequestData: {\n        data: {\n            fill: 'none',\n            stroke: '#88D080',\n            strokeDasharray: '3,3',\n        },\n    },\n    currentUsageData: {\n        data: {\n            fill: 'none',\n            stroke: '#A2DA9C',\n        },\n    },\n    itemsPerRow: 2,\n    legend: {\n        labels: {\n            fontFamily: global_FontFamily_sans_serif.value,\n            fontSize: 14,\n        },\n        minWidth: 380,\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    legendColorScale: [\n        global_disabled_color_200.value,\n        chart_color_green_100.value,\n        global_disabled_color_200.value,\n        chart_color_green_200.value,\n    ],\n    previousRequestData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n            strokeDasharray: '3,3',\n        },\n    },\n    previousUsageData: {\n        data: {\n            fill: 'none',\n            stroke: global_disabled_color_200.value,\n        },\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_100.value,\n        chart_color_green_200.value,\n        chart_color_green_300.value,\n        chart_color_green_400.value,\n        chart_color_green_500.value,\n    ],\n    // TBD: No grey scale, yet\n    previousColorScale: [\n        global_disabled_color_200.value,\n        global_disabled_color_200.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = StyleSheet.create({\n    chartContainer: {\n        ':not(foo) svg': {\n            overflow: 'visible',\n        },\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { Chart, ChartArea, ChartAxis, ChartLegend, ChartVoronoiContainer, getInteractiveLegendEvents, getInteractiveLegendItemStyles, } from '@patternfly/react-charts';\nimport { css } from '@patternfly/react-styles';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getDateRange, getMaxValue, getTooltipContent, getTooltipLabel, getUsageRangeString, } from 'components/charts/common/chartUtils';\nimport getDate from 'date-fns/get_date';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { chartStyles, styles } from './usageChart.styles';\nclass UsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n            const usageKey = 'chart.usage_legend_label';\n            const requestKey = 'chart.requests_legend_label';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            this.setState({\n                series: [\n                    {\n                        childName: 'previousUsage',\n                        data: previousUsageData,\n                        legendItem: {\n                            name: getUsageRangeString(previousUsageData, usageKey, true, true, 1),\n                            symbol: {\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.previousUsageData,\n                    },\n                    {\n                        childName: 'currentUsage',\n                        data: currentUsageData,\n                        legendItem: {\n                            name: getUsageRangeString(currentUsageData, usageKey, true, false),\n                            symbol: {\n                                type: 'minus',\n                            },\n                        },\n                        style: chartStyles.currentUsageData,\n                    },\n                    {\n                        childName: 'previousRequest',\n                        data: previousRequestData,\n                        legendItem: {\n                            name: getUsageRangeString(previousRequestData, requestKey, true, true, 1),\n                            symbol: {\n                                type: 'dash',\n                            },\n                        },\n                        style: chartStyles.previousRequestData,\n                    },\n                    {\n                        childName: 'currentRequest',\n                        data: currentRequestData,\n                        legendItem: {\n                            name: getUsageRangeString(currentRequestData, requestKey, true, false),\n                            symbol: {\n                                type: 'dash',\n                            },\n                        },\n                        style: chartStyles.currentRequestData,\n                    },\n                ],\n            });\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { width } = this.state;\n            // Todo: use PF legendAllowWrap feature\n            const itemsPerRow = legendItemsPerRow\n                ? legendItemsPerRow\n                : width > 300\n                    ? chartStyles.itemsPerRow\n                    : 1;\n            return (React.createElement(ChartLegend, { colorScale: chartStyles.legendColorScale, data: this.getLegendData(), height: 25, gutter: 10, itemsPerRow: itemsPerRow, name: \"legend\", style: chartStyles.legend }));\n        };\n        this.getTooltipLabel = ({ datum }) => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            const value = getTooltipLabel(datum, getTooltipContent(formatDatumValue), formatDatumOptions, 'date');\n            if (datum.childName === 'currentRequest' ||\n                datum.childName === 'previousRequest') {\n                return i18next.t('chart.requests_tooltip', { value });\n            }\n            else if (datum.childName === 'currentUsage' ||\n                datum.childName === 'previousUsage') {\n                return i18next.t('chart.usage_tooltip', { value });\n            }\n            return value;\n        };\n        // Interactive legend\n        // Hide each data series individually\n        this.handleLegendClick = props => {\n            if (!this.state.hiddenSeries.delete(props.index)) {\n                this.state.hiddenSeries.add(props.index);\n            }\n            this.setState({ hiddenSeries: new Set(this.state.hiddenSeries) });\n        };\n        // Returns true if at least one data series is available\n        this.isDataAvailable = () => {\n            const { series } = this.state;\n            // API data may not be available (e.g., on 1st of month)\n            const unavailable = [];\n            if (series) {\n                series.forEach((s, index) => {\n                    if (this.isSeriesHidden(index) || (s.data && s.data.length === 0)) {\n                        unavailable.push(index);\n                    }\n                });\n            }\n            return unavailable.length === (series ? series.length : 0);\n        };\n        // Returns true if data series is hidden\n        this.isSeriesHidden = index => {\n            const { hiddenSeries } = this.state; // Skip if already hidden\n            return hiddenSeries.has(index);\n        };\n        // Returns groups of chart names associated with each data series\n        this.getChartNames = () => {\n            const { series } = this.state;\n            const result = [];\n            if (series) {\n                series.map((serie, index) => {\n                    // Each group of chart names are hidden / shown together\n                    result.push(serie.childName);\n                });\n            }\n            return result;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const result = getInteractiveLegendEvents({\n                chartNames: this.getChartNames(),\n                isHidden: this.isSeriesHidden,\n                legendName: 'legend',\n                onLegendClick: this.handleLegendClick,\n            });\n            return result;\n        };\n        // Returns legend data styled per hiddenSeries\n        this.getLegendData = () => {\n            const { hiddenSeries, series } = this.state;\n            if (series) {\n                const result = series.map((s, index) => {\n                    return Object.assign({}, s.legendItem, getInteractiveLegendItemStyles(hiddenSeries.has(index)));\n                });\n                return result;\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getDomain() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const domain = { x: [1, 31] };\n        const maxCurrentRequest = currentRequestData\n            ? getMaxValue(currentRequestData)\n            : 0;\n        const maxCurrentUsage = currentUsageData\n            ? getMaxValue(currentUsageData)\n            : 0;\n        const maxPreviousRequest = previousRequestData\n            ? getMaxValue(previousRequestData)\n            : 0;\n        const maxPreviousUsage = previousUsageData\n            ? getMaxValue(previousUsageData)\n            : 0;\n        const maxValue = Math.max(maxCurrentRequest, maxCurrentUsage, maxPreviousRequest, maxPreviousUsage);\n        const max = maxValue > 0 ? Math.ceil(maxValue + maxValue * 0.1) : 0;\n        if (max > 0) {\n            domain.y = [0, max];\n        }\n        return domain;\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData, } = this.props;\n        const currentRequestDate = currentRequestData\n            ? getDate(getDateRange(currentRequestData, true, true)[1])\n            : 0;\n        const currentUsageDate = currentUsageData\n            ? getDate(getDateRange(currentUsageData, true, true)[1])\n            : 0;\n        const previousRequestDate = previousRequestData\n            ? getDate(getDateRange(previousRequestData, true, true)[1])\n            : 0;\n        const previousUsageDate = previousUsageData\n            ? getDate(getDateRange(previousUsageData, true, true)[1])\n            : 0;\n        return currentRequestDate > 0 ||\n            currentUsageDate > 0 ||\n            previousRequestDate > 0 ||\n            previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding, title, } = this.props;\n        const { series, width } = this.state;\n        const isDataAvailable = this.isDataAvailable();\n        const container = (React.createElement(ChartVoronoiContainer, { allowTooltip: !isDataAvailable, constrainToVisibleArea: true, labels: !isDataAvailable ? this.getTooltipLabel : undefined, voronoiDimension: \"x\" }));\n        const domain = this.getDomain();\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 400\n                ? containerHeight\n                : containerHeight + 75\n            : containerHeight;\n        return (React.createElement(\"div\", { className: css(styles.chartContainer), ref: this.containerRef, style: { height: adjustedContainerHeight } },\n            React.createElement(\"div\", null, title),\n            React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: this.getLegendData(), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, width: width },\n                series &&\n                    series.map((s, index) => {\n                        return this.getChart(s, index);\n                    }),\n                React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis }))));\n    }\n}\nexport { UsageChart };\n","import { css } from '@patternfly/react-styles';\nimport { UsageChart } from 'components/charts/usageChart';\nimport React from 'react';\nimport { styles } from './reportSummaryTrend.styles';\nconst ReportSummaryUsage = props => (React.createElement(\"div\", { className: css(styles.chart) },\n    React.createElement(UsageChart, Object.assign({}, props))));\nexport { ReportSummaryUsage };\n","export { ReportSummary } from './reportSummary';\nexport { ReportSummaryAlt } from './reportSummaryAlt';\nexport { ReportSummaryDetails } from './reportSummaryDetails';\nexport { ReportSummaryItem } from './reportSummaryItem';\nexport { ReportSummaryItems } from './reportSummaryItems';\nexport { ReportSummaryCost } from './reportSummaryCost';\nexport { ReportSummaryTrend } from './reportSummaryTrend';\nexport { ReportSummaryUsage } from './reportSummaryUsage';\n","function getValueForItem(item, options) {\n    if (typeof item === 'string') {\n        return item;\n    }\n    const sortKey = options.key;\n    return item[sortKey];\n}\nexport function sort(array, options) {\n    const { direction = 0 /* asc */ } = options || {};\n    return [...array].sort((a, b) => {\n        const aVal = direction === 0 /* asc */\n            ? getValueForItem(a, options)\n            : getValueForItem(b, options);\n        const bVal = direction === 0 /* asc */\n            ? getValueForItem(b, options)\n            : getValueForItem(a, options);\n        if (aVal > bVal) {\n            return -1;\n        }\n        if (aVal < bVal) {\n            return 1;\n        }\n        return 0;\n    });\n}\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_lg } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    container: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: '100vh',\n        marginTop: '150px',\n    },\n    viewSources: {\n        marginTop: global_spacer_lg.value,\n    },\n});\n","import { EmptyState, EmptyStateBody, EmptyStateIcon, Title, } from '@patternfly/react-core';\nimport { DollarSignIcon } from '@patternfly/react-icons';\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { getTestProps, testIds } from 'testIds';\nimport { styles } from './noProvidersState.styles';\nclass NoProvidersStateBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getViewSources = () => {\n            const { t } = this.props;\n            const pathName = window.location.pathname.split('/');\n            pathName.shift();\n            let release = '';\n            if (pathName[0] === 'beta') {\n                release = `/beta`;\n            }\n            return (React.createElement(\"a\", Object.assign({ href: `${release}/settings/sources` }, getTestProps(testIds.providers.view_all_link)), t('providers.view_sources')));\n        };\n    }\n    render() {\n        const { t } = this.props;\n        return (React.createElement(\"div\", { className: css(styles.container) },\n            React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: DollarSignIcon }),\n                React.createElement(Title, { size: \"lg\" }, t('providers.empty_state_title')),\n                React.createElement(EmptyStateBody, null, t('providers.empty_state_desc')),\n                React.createElement(\"div\", { className: css(styles.viewSources) }, this.getViewSources()))));\n    }\n}\nconst NoProvidersState = translate()(connect()(NoProvidersStateBase));\nexport { NoProvidersState };\n"],"sourceRoot":""}