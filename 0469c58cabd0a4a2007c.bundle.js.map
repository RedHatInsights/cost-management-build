{"version":3,"sources":["webpack://koku-ui/./src/api/queries/userAccessQuery.ts","webpack://koku-ui/./src/pages/views/components/perspective/perspective.styles.ts","webpack://koku-ui/./src/pages/views/components/perspective/perspective.tsx","webpack://koku-ui/./src/pages/views/details/azureBreakdown/costOverview.tsx","webpack://koku-ui/./src/pages/views/details/azureBreakdown/historicalData.tsx","webpack://koku-ui/./src/pages/views/details/azureBreakdown/azureBreakdown.tsx","webpack://koku-ui/./src/pages/views/details/azureBreakdown/index.ts","webpack://koku-ui/./src/utils/computedReport/getComputedAzureReportItems.ts","webpack://koku-ui/./src/pages/views/details/azureDetails/azureDetails.styles.ts","webpack://koku-ui/./src/pages/views/details/azureDetails/detailsHeader.styles.ts","webpack://koku-ui/./src/pages/views/details/azureDetails/detailsHeader.tsx","webpack://koku-ui/./src/pages/views/details/azureDetails/detailsTable.styles.ts","webpack://koku-ui/./src/pages/views/details/azureDetails/detailsTable.tsx","webpack://koku-ui/./src/pages/views/details/azureDetails/detailsToolbar.tsx","webpack://koku-ui/./src/pages/views/details/azureDetails/azureDetails.tsx","webpack://koku-ui/./src/pages/views/details/azureDetails/index.ts","webpack://koku-ui/./src/utils/computedReport/getComputedExplorerReportItems.ts","webpack://koku-ui/./src/pages/views/explorer/explorer.styles.ts","webpack://koku-ui/./src/components/charts/costExplorerChart/costExplorerChart.styles.ts","webpack://koku-ui/./src/components/charts/costExplorerChart/costExplorerChart.tsx","webpack://koku-ui/./src/pages/views/explorer/explorerChart.styles.ts","webpack://koku-ui/./src/pages/views/explorer/explorerUtils.ts","webpack://koku-ui/./src/pages/views/explorer/explorerChart.tsx","webpack://koku-ui/./src/pages/views/explorer/dateRange.tsx","webpack://koku-ui/./src/pages/views/explorer/explorerFilter.styles.ts","webpack://koku-ui/./src/pages/views/explorer/explorerFilter.tsx","webpack://koku-ui/./src/pages/views/explorer/explorerHeader.styles.ts","webpack://koku-ui/./src/pages/views/explorer/explorerHeader.tsx","webpack://koku-ui/./src/pages/views/explorer/explorerTable.styles.ts","webpack://koku-ui/./src/pages/views/explorer/explorerTable.tsx","webpack://koku-ui/./src/pages/views/explorer/explorerToolbar.tsx","webpack://koku-ui/./src/pages/views/explorer/explorer.tsx","webpack://koku-ui/./src/utils/userAccess.ts","webpack://koku-ui/./node_modules/victory-stack/es/helper-methods.js","webpack://koku-ui/./node_modules/victory-stack/es/victory-stack.js"],"names":["getUserAccessQuery","query","stringify","encode","indices","styles","perspectiveSelector","display","alignItems","perspectiveLabel","marginBottom","marginRight","PerspectiveBase","super","arguments","this","defaultState","isPerspectiveOpen","state","Object","assign","getDropDownItems","options","props","map","option","DropdownItem","component","key","value","onClick","handleClick","t","label","getCurrentLabel","currentItem","onItemClicked","handleSelect","setState","handleToggle","isDisabled","dropdownItems","style","Dropdown","onSelect","toggle","DropdownToggle","onToggle","isOpen","Perspective","withTranslation","mapStateToProps","selectWidgets","azureCostOverview","widgets","CostOverview","connect","azureHistoricalData","HistoricalData","detailsURL","reportType","reportPathsType","location","search","groupBy","groupByValue","newQuery","filter","resolution","time_scope_units","time_scope_value","filter_by","undefined","group_by","queryString","report","reportError","reportFetchStatus","providersQueryString","providers","providersFetchStatus","costOverviewComponent","description","emptyStateTitle","historicalDataComponent","providerType","tagReportPathsType","title","mapDispatchToProps","fetchReport","getIdKeyForGroupBy","subscription_guid","instance_type","resource_location","service_name","azureDetails","minHeight","content","paddingBottom","global_spacer_lg","paddingTop","paginationContainer","marginLeft","pagination","backgroundColor","global_BackgroundColor_light_100","padding","global_spacer_md","tableContainer","cost","costLabel","costValue","marginTop","costLabelUnit","fontSize","global_FontSize_sm","color","global_Color_100","costLabelDate","global_Color_200","header","justifyContent","global_spacer_sm","baseQuery","delta","groupByOptions","DetailsHeaderBase","onGroupByClicked","providersError","showContent","meta","count","hasCost","total","Title","headingLevel","size","showTags","Boolean","DetailsHeader","emptyState","global_spacer_3xl","height","width","infoArrow","position","infoArrowDesc","bottom","global_spacer_xs","infoDescription","global_disabled_color_100","global_FontSize_xs","DetailsTableBase","columns","rows","initDatum","isAllSelected","selectedItems","groupById","groupByTagKey","getGroupByTagKey","orderBy","transforms","sortable","idKey","item","index","monthOverMonth","getMonthOverMonthCost","getTotalCost","actions","getActions","name","Link","to","basePath","toString","id","desc","push","cells","disableSelection","selected","find","val","loadingRows","heightAuto","colSpan","Bullseye","textAlign","Spinner","sortBy","getEmptyState","values","showMargin","EmptyState","EmptyStateIcon","icon","EmptyStateBody","keys","tagIndex","indexOf","substring","Math","abs","delta_value","percentage","delta_percent","toFixed","showPercentage","showValue","iconOverride","className","getSortBy","direction","order_by","c","column","percentValue","handleOnSelect","event","isSelected","rowId","onSelected","items","row","handleOnSort","onSort","bind","prevProps","currentReport","data","JSON","previousReport","isLoading","Table","canSelectAll","gridBreakPoint","length","DetailsTable","tagReportType","DetailsToolbarBase","getCategoryOptions","tagReport","fetchTag","categoryOptions","isExportDisabled","itemsPerPage","itemsTotal","onBulkSelected","onExportClicked","onFilterAdded","onFilterRemoved","showBulkSelect","showExport","showFilter","tagFetchStatus","DetailsToolbarConnect","DetailsToolbar","limit","offset","AzureDetails","stateProps","dispatchProps","isExportModalOpen","getComputedItems","getExportModal","computedItems","isAllItems","onClose","handleExportModalClose","getPagination","isBottom","page","Pagination","isCompact","itemCount","onPerPageSelect","handlePerPageSelect","onSetPage","handleSetPage","perPage","variant","widgetId","getTable","handleSelected","handleSort","getToolbar","handleBulkSelected","handleExportModalOpen","handleFilterAdded","handleFilterRemoved","action","filterType","filterValue","history","filteredQuery","replace","getRouteForQuery","handleGroupByClick","groupByKey","parse","_event","newItems","pageNumber","sortType","isSortAscending","updateReport","prevState","noReport","noLocation","reset","pathname","queryFromRoute","account","cluster","node","org_unit_id","project","region","service","chartContainer","paddingRight","chartContent","explorer","tableContent","chartStyles","colorScale","chart_color_blue_300","chart_color_gold_300","chart_color_green_300","chart_color_purple_300","chart_color_orange_300","chart_color_cyan_300","yAxis","axisLabel","grid","stroke","ticks","yAxisAlt","tickLabels","xAxis","CostExplorerChart","containerRef","observer","noop","hiddenSeries","Set","top1stData","top2ndData","top3rdData","top4thData","top5thData","top6thData","series","getTruncatedString","childName","initDatumChildName","legendItem","symbol","fill","tooltip","cursorVoronoiContainer","getCursorVoronoiContainer","units","getUnits","datum","getAdjustedContainerHeight","adjustContainerHeight","containerHeight","adjustedContainerHeight","getBarWidth","domainPadding","maxWidth","maxValue","forEach","s","sectionWidth","getChart","barWidth","has","y","ChartBar","formatDatumValue","formatDatumOptions","CursorVoronoiContainer","cursorDimension","labels","mouseFollowTooltips","voronoiDimension","voronoiPadding","left","right","top","getDomain","domain","max","getEvents","chartNames","isDataHidden","isHidden","legendName","onLegendClick","handleLegendClick","getLegend","ChartLegend","gutter","responsive","getTickValues","x","tickValues","modVal","i","str","substr","maxChars","getTickValue","handleResize","clientWidth","current","container","disable","labelComponent","ChartLegendTooltip","legendData","day","ref","Chart","containerComponent","events","legendAllowWrap","legendComponent","legendPosition","theme","themeColor","ChartTheme","ChartStack","ChartAxis","C","fixLabelOverlap","dependentAxis","tickFormat","global_spacer_2xl","chartSkeleton","costChart","legendSkeleton","titleContainer","trendChart","usageChart","dateRangeOptions","groupByAwsOptions","groupByAzureOptions","groupByGcpOptions","groupByIbmOptions","groupByOcpOptions","infrastructureAwsOptions","infrastructureAwsCloudOptions","infrastructureAzureOptions","infrastructureAzureCloudOptions","infrastructureGcpOptions","infrastructureIbmOptions","infrastructureOcpOptions","ocpOptions","getComputedReportItemType","perspective","result","getDateRange","dateRangeType","endDate","Date","startDate","dateRange","setDate","setMonth","getMonth","end_date","format","start_date","getDateRangeDefault","getGroupByDefault","getGroupByOptions","getOrgReportPathsType","getReportType","getReportPathsType","getTagReportPathsType","ExplorerChartBase","createReportDatum","computedItem","reportItem","reportItemValue","computedItemDate","date","xVal","getDate","month","yVal","parseFloat","getChartDatums","computedReportItemType","chartDatums","datums","Map","Array","from","padChartDatums","getChartTitle","getGroupBy","daily","groupByOrg","getSkeleton","Skeleton","skeleton","padDate","chartDatum","formatValue","ExplorerChartConnect","ExplorerChart","withRouter","DateRangeBase","isDateRangeOpen","DateRange","toolbarContainer","orgReportType","ExplorerFilterBase","orgReport","getDefaultDateRange","currentDateRange","handleDateRangeClick","fetchOrg","orgQueryString","orgReportPathsType","tagQueryString","orgReportFetchStatus","tagReportFetchStatus","ExplorerFilterConnect","ExplorerFilter","paddingLeft","perspectiveContainer","ExplorerHeaderBase","getPerspective","currentPerspective","aws","isAwsAvailable","azure","isAzureAvailable","gcp","isGcpAvailable","ibm","isIbmAvailable","ocp","isOcpAvailable","handlePerspectiveClick","onPerspectiveClicked","awsProviders","awsProvidersFetchStatus","userAccess","azureProviders","azureProvidersFetchStatus","gcpProviders","gcpProvidersFetchStatus","ibmProviders","ibmProvidersFetchStatus","ibmUserAccess","ocpProviders","ocpProvidersFetchStatus","noProviders","showOrgs","userAccessQueryString","userAccessError","userAccessFetchStatus","awsProvidersQueryString","azureProvidersQueryString","gcpProvidersQueryString","ibmProvidersQueryString","ocpProvidersQueryString","ibmUserAccessQueryString","ibmUserAccessError","ibmUserAccessFetchStatus","ExplorerHeader","overflowX","ExplorerTableBase","cellTransforms","currentDate","mapId","mapIdDate","rowItem","get","set","selectItem","sort","a","b","unshift","ExplorerTableConnect","ExplorerTable","ExplorerToolbarBase","isBulkSelectDisabled","ExplorerToolbarConnect","ExplorerToolbar","Explorer","showAggregateType","showTimeScope","slice","getPerspectiveDefault","hasAccess","userAccessType","isArray","d","type","access","hasProviders","hasAwsAccess","hasAzureAccess","hasCostModelAccess","hasGcpAccess","gcpsProvidersFetchStatus","hasIbmAccess","hasOcpAccess","fallbackProps","stackData","childComponents","dataFromChildren","Wrapper","datasets","fillInMissingData","xMap","reduce","prev","dataset","_x","getTime","xKeys","k","xArr","indexOffset","isDate","_y","fillData","xOffset","yOffset","y0","previousPoints","concat","previousDatum","memo","some","point","getY0","_y0","_y1","_x1","addLayoutData","getCalculatedProps","children","role","Helpers","categories","range","baseScale","Scale","scale","horizontal","_props","getColorScale","child","colorScaleOptions","getChildren","calculatedProps","childProps","standalone","getChildProps","parentName","getLabels","polar","_defineProperty","obj","defineProperty","enumerable","configurable","writable","_defineProperties","target","descriptor","_assertThisInitialized","self","ReferenceError","VictoryStack","_React$Component","_this","instance","Constructor","TypeError","_classCallCheck","call","_possibleConstructorReturn","__proto__","getPrototypeOf","animate","nodesShouldLoad","nodesDoneLoad","animating","setAnimationState","protoProps","subClass","superClass","prototype","create","constructor","setPrototypeOf","_inherits","nextProps","getAnimationProps","reverse","containerProps","origin","parent","nodesWillExit","oldProps","modifiedProps","eventKey","groupComponent","externalEventMutations","newChildren","getNewChildren","getContainerProps","renderContainer","source","ownKeys","getOwnPropertySymbols","sym","getOwnPropertyDescriptor","_objectSpread","CommonProps","bins","VictoryContainer","VictoryTheme"],"mappings":"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","file":"0469c58cabd0a4a2007c.bundle.js","sourcesContent":["import { parse, stringify } from 'qs';\nexport function getUserAccessQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseUserAccessQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    perspectiveSelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    perspectiveLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n};\n","import { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './perspective.styles';\nclass PerspectiveBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isPerspectiveOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getDropDownItems = () => {\n            const { options, t } = this.props;\n            return options.map(option => (React.createElement(DropdownItem, { component: \"button\", key: option.value, onClick: () => this.handleClick(option.value) }, t(option.label))));\n        };\n        this.getCurrentLabel = () => {\n            const { currentItem, options, t } = this.props;\n            let label = '';\n            for (const option of options) {\n                if (currentItem === option.value) {\n                    label = t(option.label);\n                    break;\n                }\n            }\n            return label;\n        };\n        this.handleClick = value => {\n            const { onItemClicked } = this.props;\n            if (onItemClicked) {\n                onItemClicked(value);\n            }\n        };\n        this.handleSelect = () => {\n            this.setState({\n                isPerspectiveOpen: !this.state.isPerspectiveOpen,\n            });\n        };\n        this.handleToggle = isPerspectiveOpen => {\n            this.setState({\n                isPerspectiveOpen,\n            });\n        };\n    }\n    render() {\n        const { isDisabled, t } = this.props;\n        const { isPerspectiveOpen } = this.state;\n        const dropdownItems = this.getDropDownItems();\n        return (React.createElement(\"div\", { style: styles.perspectiveSelector },\n            React.createElement(\"label\", { style: styles.perspectiveLabel }, t('overview.perspective.label')),\n            React.createElement(Dropdown, { onSelect: this.handleSelect, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled, onToggle: this.handleToggle }, this.getCurrentLabel()), isOpen: isPerspectiveOpen, dropdownItems: dropdownItems })));\n    }\n}\nconst Perspective = withTranslation()(PerspectiveBase);\nexport { Perspective };\n","import { CostOverviewBase } from 'pages/views/details/components/costOverview/costOverviewBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { azureCostOverviewSelectors } from 'store/breakdown/costOverview/azureCostOverview';\nimport { createMapStateToProps } from 'store/common';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        selectWidgets: azureCostOverviewSelectors.selectWidgets(state),\n        widgets: azureCostOverviewSelectors.selectCurrentWidgets(state),\n    };\n});\nconst CostOverview = withTranslation()(connect(mapStateToProps, {})(CostOverviewBase));\nexport { CostOverview };\n","import { HistoricalDataBase } from 'pages/views/details/components/historicalData/historicalDataBase';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { azureHistoricalDataSelectors } from 'store/breakdown/historicalData/azureHistoricalData';\nimport { createMapStateToProps } from 'store/common';\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {\n        selectWidgets: azureHistoricalDataSelectors.selectWidgets(state),\n        widgets: azureHistoricalDataSelectors.selectCurrentWidgets(state),\n    };\n});\nconst HistoricalData = withTranslation()(connect(mapStateToProps, {})(HistoricalDataBase));\nexport { HistoricalData };\n","import { getQuery, parseQuery } from 'api/queries/ocpQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { breakdownDescKey } from 'api/queries/query';\nimport BreakdownBase from 'pages/views/details/components/breakdown/breakdownBase';\nimport { getGroupById, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { paths } from 'routes';\nimport { createMapStateToProps } from 'store/common';\nimport { azureProvidersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { CostOverview } from './costOverview';\nimport { HistoricalData } from './historicalData';\nconst detailsURL = paths.azureDetails;\nconst reportType = \"cost\" /* cost */;\nconst reportPathsType = \"azure\" /* azure */;\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const query = parseQuery(location.search);\n    const groupBy = getGroupById(query);\n    const groupByValue = getGroupByValue(query);\n    const newQuery = {\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        filter_by: Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (groupBy && { [groupBy]: undefined })),\n        group_by: Object.assign({}, (groupBy && { [groupBy]: groupByValue })),\n    };\n    const queryString = getQuery(newQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    const providersQueryString = getProvidersQuery(azureProvidersQuery);\n    const providers = providersSelectors.selectProviders(state, \"azure\" /* azure */, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"azure\" /* azure */, providersQueryString);\n    return {\n        costOverviewComponent: React.createElement(CostOverview, { groupBy: groupBy, report: report }),\n        description: query[breakdownDescKey],\n        detailsURL,\n        emptyStateTitle: props.t('navigation.azure_details'),\n        groupBy,\n        groupByValue,\n        historicalDataComponent: React.createElement(HistoricalData, null),\n        providers,\n        providersFetchStatus,\n        providerType: \"azure\" /* azure */,\n        query,\n        queryString,\n        report,\n        reportError,\n        reportFetchStatus,\n        reportType,\n        reportPathsType,\n        tagReportPathsType: \"azure\" /* azure */,\n        title: groupByValue,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst AzureCost = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(BreakdownBase));\nexport default AzureCost;\n","import AzureBreakdown from './azureBreakdown';\nexport default AzureBreakdown;\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.subscription_guid) {\n        return 'subscription_guid';\n    }\n    if (groupBy.instance_type) {\n        return 'instance_type';\n    }\n    if (groupBy.resource_location) {\n        return 'resource_location';\n    }\n    if (groupBy.service_name) {\n        return 'service_name';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    azureDetails: {\n        minHeight: '100%',\n    },\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        padding: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_Color_200 from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    cost: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    costLabel: {},\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    costLabelDate: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_200.var,\n    },\n    header: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: global_spacer_lg.var,\n        backgroundColor: global_BackgroundColor_light_100.var,\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title } from '@patternfly/react-core';\nimport { getQuery } from 'api/queries/azureQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { GroupBy } from 'pages/views/components/groupBy/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureProvidersQuery, providersSelectors } from 'store/providers';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedAzureReportItems';\nimport { getSinceDateRangeString } from 'utils/dateRange';\nimport { formatCurrency } from 'utils/formatValue';\nimport { styles } from './detailsHeader.styles';\nconst baseQuery = {\n    delta: 'cost',\n    filter: {\n        time_scope_units: 'month',\n        time_scope_value: -1,\n        resolution: 'monthly',\n    },\n};\nconst groupByOptions = [\n    { label: 'subscription_guid', value: 'subscription_guid' },\n    { label: 'service_name', value: 'service_name' },\n    { label: 'resource_location', value: 'resource_location' },\n];\nconst tagReportPathsType = \"azure\" /* azure */;\nclass DetailsHeaderBase extends React.Component {\n    render() {\n        const { groupBy, onGroupByClicked, providers, providersError, report, t } = this.props;\n        const showContent = report && !providersError && providers && providers.meta && providers.meta.count > 0;\n        const hasCost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", null,\n                React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"2xl\" }, t('navigation.azure_details')),\n                React.createElement(GroupBy, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: !showContent, onItemClicked: onGroupByClicked, options: groupByOptions, showTags: true, tagReportPathsType: tagReportPathsType })),\n            Boolean(showContent) && (React.createElement(\"div\", { style: styles.cost },\n                React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: \"4xl\" }, formatCurrency(hasCost ? report.meta.total.cost.total.value : 0)),\n                React.createElement(\"div\", { style: styles.costLabel },\n                    React.createElement(\"div\", { style: styles.costLabelUnit }, t('details.total_cost')),\n                    React.createElement(\"div\", { style: styles.costLabelDate }, getSinceDateRangeString()))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const queryString = getQuery(baseQuery);\n    const providersQueryString = getProvidersQuery(azureProvidersQuery);\n    const providers = providersSelectors.selectProviders(state, \"azure\" /* azure */, providersQueryString);\n    const providersError = providersSelectors.selectProvidersError(state, \"azure\" /* azure */, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"azure\" /* azure */, providersQueryString);\n    return {\n        providers,\n        providersError,\n        providersFetchStatus,\n        queryString,\n    };\n});\nconst DetailsHeader = withTranslation()(connect(mapStateToProps, {})(DetailsHeaderBase));\nexport { DetailsHeader };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n};\n","import './azureDetailsTable.scss';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/js/icons/calculator-icon';\nimport { sortable, SortByDirection, Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { getQuery } from 'api/queries/azureQuery';\nimport { tagPrefix } from 'api/queries/query';\nimport { EmptyFilterState } from 'components/state/emptyFilterState/emptyFilterState';\nimport { EmptyValueState } from 'components/state/emptyValueState/emptyValueState';\nimport { Actions } from 'pages/views/details/components/actions/actions';\nimport { getBreakdownPath } from 'pages/views/utils/paths';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { paths } from 'routes';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedAzureReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { getForDateRangeString, getNoDataForDateRangeString } from 'utils/dateRange';\nimport { formatCurrency } from 'utils/formatValue';\nimport { styles } from './detailsTable.styles';\nconst reportPathsType = \"azure\" /* azure */;\nclass DetailsTableBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { isAllSelected, query, report, selectedItems, t } = this.props;\n            if (!query || !report) {\n                return;\n            }\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = this.getGroupByTagKey();\n            const total = formatCurrency(report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0);\n            const columns = groupByTagKey\n                ? [\n                    {\n                        title: t('details.tag_names'),\n                    },\n                    {\n                        title: t('details.month_over_month_change'),\n                    },\n                    {\n                        orderBy: 'cost',\n                        title: t('cost', { total }),\n                        transforms: [sortable],\n                    },\n                    {\n                        title: '',\n                    },\n                ]\n                : [\n                    {\n                        orderBy: groupById,\n                        title: t('details.resource_names', { groupBy: groupById }),\n                        transforms: [sortable],\n                    },\n                    {\n                        title: t('details.month_over_month_change'),\n                    },\n                    {\n                        orderBy: 'cost',\n                        title: t('cost'),\n                        transforms: [sortable],\n                    },\n                    {\n                        title: '',\n                    },\n                ];\n            const rows = [];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey || groupById,\n            });\n            computedItems.map((item, index) => {\n                const label = item && item.label !== null ? item.label : '';\n                const monthOverMonth = this.getMonthOverMonthCost(item, index);\n                const cost = this.getTotalCost(item, index);\n                const actions = this.getActions(item);\n                let name = (React.createElement(Link, { to: getBreakdownPath({\n                        basePath: paths.azureDetailsBreakdown,\n                        label: label.toString(),\n                        description: item.id,\n                        groupBy: groupById,\n                        query,\n                    }) }, label));\n                if (label === `no-${groupById}` || label === `no-${groupByTagKey}`) {\n                    name = label;\n                }\n                const desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                rows.push({\n                    cells: [\n                        {\n                            title: (React.createElement(\"div\", null,\n                                name,\n                                desc)),\n                        },\n                        { title: React.createElement(\"div\", null, monthOverMonth) },\n                        { title: React.createElement(\"div\", null, cost) },\n                        { title: React.createElement(\"div\", null, actions) },\n                    ],\n                    disableSelection: item.label === `no-${groupById}` || item.label === `no-${groupByTagKey}`,\n                    isOpen: false,\n                    item,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === item.id) !== undefined),\n                });\n            });\n            const loadingRows = [\n                {\n                    heightAuto: true,\n                    cells: [\n                        {\n                            props: { colSpan: 5 },\n                            title: (React.createElement(Bullseye, null,\n                                React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                    React.createElement(Spinner, { size: \"xl\" })))),\n                        },\n                    ],\n                },\n            ];\n            this.setState({\n                columns,\n                loadingRows,\n                rows,\n                sortBy: {},\n            });\n        };\n        this.getActions = (item) => {\n            const { groupBy, query } = this.props;\n            return React.createElement(Actions, { groupBy: groupBy, item: item, query: query, reportPathsType: reportPathsType });\n        };\n        this.getEmptyState = () => {\n            const { query, t } = this.props;\n            for (const val of Object.values(query.filter_by)) {\n                if (val !== '*') {\n                    return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                }\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, t('details.empty_state'))));\n        };\n        this.getGroupByTagKey = () => {\n            const { query } = this.props;\n            let groupByTagKey;\n            for (const groupBy of Object.keys(query.group_by)) {\n                const tagIndex = groupBy.indexOf(tagPrefix);\n                if (tagIndex !== -1) {\n                    groupByTagKey = groupBy.substring(tagIndex + tagPrefix.length);\n                    break;\n                }\n            }\n            return groupByTagKey;\n        };\n        this.getMonthOverMonthCost = (item, index) => {\n            const { t } = this.props;\n            const value = formatCurrency(Math.abs(item.cost.total.value - item.delta_value));\n            const percentage = item.delta_percent !== null ? Math.abs(item.delta_percent).toFixed(2) : 0;\n            const showPercentage = !(percentage === 0 || percentage === '0.00');\n            const showValue = item.delta_percent !== null; // Workaround for https://github.com/project-koku/koku/issues/1395\n            let iconOverride;\n            if (showPercentage) {\n                iconOverride = 'iconOverride';\n                if (item.delta_percent !== null && item.delta_value < 0) {\n                    iconOverride += ' decrease';\n                }\n                if (item.delta_percent !== null && item.delta_value > 0) {\n                    iconOverride += ' increase';\n                }\n            }\n            if (!showValue) {\n                return getNoDataForDateRangeString();\n            }\n            else {\n                return (React.createElement(\"div\", { className: \"monthOverMonthOverride\" },\n                    React.createElement(\"div\", { className: iconOverride, key: `month-over-month-cost-${index}` },\n                        showPercentage ? t('percent', { value: percentage }) : React.createElement(EmptyValueState, null),\n                        Boolean(showPercentage && item.delta_percent !== null && item.delta_value > 0) && (React.createElement(\"span\", { className: \"fa fa-sort-up\", style: styles.infoArrow, key: `month-over-month-icon-${index}` })),\n                        Boolean(showPercentage && item.delta_percent !== null && item.delta_value < 0) && (React.createElement(\"span\", { className: \"fa fa-sort-down\", style: Object.assign(Object.assign({}, styles.infoArrow), styles.infoArrowDesc), key: `month-over-month-icon-${index}` }))),\n                    React.createElement(\"div\", { style: styles.infoDescription, key: `month-over-month-info-${index}` }, getForDateRangeString(value))));\n            }\n        };\n        this.getSortBy = () => {\n            const { query } = this.props;\n            const { columns } = this.state;\n            let index = -1;\n            let direction = SortByDirection.asc;\n            for (const key of Object.keys(query.order_by)) {\n                let c = 0;\n                for (const column of columns) {\n                    if (column.orderBy === key) {\n                        direction = query.order_by[key] === 'asc' ? SortByDirection.asc : SortByDirection.desc;\n                        index = c + 1;\n                        break;\n                    }\n                    c++;\n                }\n            }\n            return index > -1 ? { index, direction } : {};\n        };\n        this.getTotalCost = (item, index) => {\n            const { report, t } = this.props;\n            const cost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total\n                ? report.meta.total.cost.total.value\n                : 0;\n            const percentValue = cost === 0 ? cost.toFixed(2) : ((item.cost.total.value / cost) * 100).toFixed(2);\n            return (React.createElement(React.Fragment, null,\n                formatCurrency(item.cost.total.value),\n                React.createElement(\"div\", { style: styles.infoDescription, key: `total-cost-${index}` }, t('percent_of_cost', {\n                    value: percentValue,\n                }))));\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected } = this.props;\n            let rows;\n            let items = [];\n            if (rowId === -1) {\n                rows = this.state.rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                rows = [...this.state.rows];\n                rows[rowId].selected = isSelected;\n                items = [rows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { onSort } = this.props;\n            const { columns } = this.state;\n            if (onSort) {\n                const orderBy = columns[index - 1].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { query, report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (getQuery(prevProps.query) !== getQuery(query) ||\n            previousReport !== currentReport ||\n            prevProps.selectedItems !== selectedItems) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { isLoading } = this.props;\n        const { columns, loadingRows, rows } = this.state;\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Table, { \"aria-label\": \"details-table\", canSelectAll: false, cells: columns, className: \"tableOverride\", rows: isLoading ? loadingRows : rows, sortBy: this.getSortBy(), onSelect: isLoading ? undefined : this.handleOnSelect, onSort: this.handleOnSort, gridBreakPoint: \"grid-2xl\" },\n                React.createElement(TableHeader, null),\n                React.createElement(TableBody, null)),\n            Boolean(rows.length === 0) && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\nconst DetailsTable = withTranslation()(DetailsTableBase);\nexport { DetailsTable };\n","import { getQuery } from 'api/queries/azureQuery';\nimport { tagKey } from 'api/queries/query';\nimport { DataToolbar } from 'pages/views/components/dataToolbar/dataToolbar';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { isEqual } from 'utils/equal';\nconst tagReportType = \"tag\" /* tag */;\nconst tagReportPathsType = \"azure\" /* azure */;\nexport class DetailsToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { tagReport, t } = this.props;\n            const options = [\n                {\n                    name: t('filter_by.values.subscription_guid'),\n                    key: 'subscription_guid',\n                },\n                { name: t('filter_by.values.service_name'), key: 'service_name' },\n                {\n                    name: t('filter_by.values.resource_location'),\n                    key: 'resource_location',\n                },\n                { name: t('filter_by.values.tag'), key: tagKey },\n            ];\n            return tagReport && tagReport.data && tagReport.data.length\n                ? options\n                : options.filter(option => option.key !== tagKey);\n        };\n    }\n    componentDidMount() {\n        const { fetchTag, queryString } = this.props;\n        fetchTag(tagReportPathsType, tagReportType, queryString);\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchTag, query, queryString, tagReport } = this.props;\n        if (query && !isEqual(query, prevProps.query)) {\n            fetchTag(tagReportPathsType, tagReportType, queryString);\n        }\n        if (!isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            });\n        }\n    }\n    render() {\n        const { groupBy, isAllSelected, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onExportClicked, onFilterAdded, onFilterRemoved, pagination, query, selectedItems, tagReport, } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, groupBy: groupBy, isAllSelected: isAllSelected, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onExportClicked: onExportClicked, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, pagination: pagination, query: query, selectedItems: selectedItems, showBulkSelect: true, showExport: true, showFilter: true, tagReport: tagReport }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    // Omitting key_only to share a single, cached request -- although the header doesn't need key values, the toolbar does\n    const queryString = getQuery({\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n    });\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, queryString);\n    const tagFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, queryString);\n    return {\n        queryString,\n        tagFetchStatus,\n        tagReport,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst DetailsToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsToolbarBase);\nconst DetailsToolbar = withTranslation()(DetailsToolbarConnect);\nexport { DetailsToolbar };\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { getQuery, getQueryRoute, parseQuery } from 'api/queries/azureQuery';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { tagPrefix } from 'api/queries/query';\nimport Loading from 'pages/state/loading';\nimport NoData from 'pages/state/noData';\nimport NoProviders from 'pages/state/noProviders';\nimport NotAvailable from 'pages/state/notAvailable';\nimport { ExportModal } from 'pages/views/components/export/exportModal';\nimport { getGroupByTagKey } from 'pages/views/utils/groupBy';\nimport { hasCurrentMonthData } from 'pages/views/utils/providers';\nimport { addQueryFilter, removeQueryFilter } from 'pages/views/utils/query';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { azureProvidersQuery, providersSelectors } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedAzureReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { styles } from './azureDetails.styles';\nimport { DetailsHeader } from './detailsHeader';\nimport { DetailsTable } from './detailsTable';\nimport { DetailsToolbar } from './detailsToolbar';\nconst baseQuery = {\n    delta: 'cost',\n    filter: {\n        limit: 10,\n        offset: 0,\n        resolution: 'monthly',\n        time_scope_units: 'month',\n        time_scope_value: -1,\n    },\n    filter_by: {},\n    group_by: {\n        subscription_guid: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nconst reportType = \"cost\" /* cost */;\nconst reportPathsType = \"azure\" /* azure */;\nclass AzureDetails extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            isAllSelected: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey || groupById,\n            });\n        };\n        this.getExportModal = (computedItems) => {\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(ExportModal, { isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: selectedItems, onClose: this.handleExportModalClose, query: query, reportPathsType: reportPathsType }));\n        };\n        this.getPagination = (isBottom = false) => {\n            const { report } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = offset / limit + 1;\n            return (React.createElement(Pagination, { isCompact: !isBottom, itemCount: count, onPerPageSelect: this.handlePerPageSelect, onSetPage: this.handleSetPage, page: page, perPage: limit, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: \"`pagination${isBottom ? '-bottom' : ''}`\" }));\n        };\n        this.getTable = () => {\n            const { query, report, reportFetchStatus } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return (React.createElement(DetailsTable, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isAllSelected: isAllSelected, isLoading: reportFetchStatus === 1 /* inProgress */, onSelected: this.handleSelected, onSort: this.handleSort, query: query, report: report, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { query, report } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(DetailsToolbar, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isAllSelected: isAllSelected, isExportDisabled: computedItems.length === 0 || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onExportClicked: this.handleExportModalOpen, onFilterAdded: this.handleFilterAdded, onFilterRemoved: this.handleFilterRemoved, pagination: this.getPagination(), query: query, selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleFilterAdded = (filterType, filterValue) => {\n            const { history, query } = this.props;\n            const filteredQuery = addQueryFilter(query, filterType, filterValue);\n            history.replace(this.getRouteForQuery(filteredQuery, true));\n        };\n        this.handleFilterRemoved = (filterType, filterValue) => {\n            const { history, query } = this.props;\n            const filteredQuery = removeQueryFilter(query, filterType, filterValue);\n            history.replace(this.getRouteForQuery(filteredQuery, true));\n        };\n        this.handleGroupByClick = groupBy => {\n            const { history, query } = this.props;\n            const groupByKey = groupBy;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: '*',\n                }, order_by: { cost: 'desc' } });\n            history.replace(this.getRouteForQuery(newQuery, true));\n            this.setState({ isAllSelected: false, selectedItems: [] });\n        };\n        this.handlePerPageSelect = (_event, perPage) => {\n            const { history, query } = this.props;\n            const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n            newQuery.filter = Object.assign(Object.assign({}, query.filter), { limit: perPage });\n            const filteredQuery = this.getRouteForQuery(newQuery, true);\n            history.replace(filteredQuery);\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.handleSetPage = (event, pageNumber) => {\n            const { history, query, report } = this.props;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = pageNumber * limit - limit;\n            const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n            newQuery.filter = Object.assign(Object.assign({}, query.filter), { offset });\n            const filteredQuery = this.getRouteForQuery(newQuery);\n            history.replace(filteredQuery);\n        };\n        this.handleSort = (sortType, isSortAscending) => {\n            const { history, query } = this.props;\n            const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n            newQuery.order_by = {};\n            newQuery.order_by[sortType] = isSortAscending ? 'asc' : 'desc';\n            const filteredQuery = this.getRouteForQuery(newQuery);\n            history.replace(filteredQuery);\n        };\n        this.updateReport = () => {\n            const { query, location, fetchReport, history, queryString } = this.props;\n            if (!location.search) {\n                history.replace(this.getRouteForQuery({\n                    filter_by: query ? query.filter_by : undefined,\n                    group_by: query ? query.group_by : undefined,\n                    order_by: { cost: 'desc' },\n                }));\n            }\n            else {\n                fetchReport(reportPathsType, reportType, queryString);\n            }\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleFilterAdded = this.handleFilterAdded.bind(this);\n        this.handleFilterRemoved = this.handleFilterRemoved.bind(this);\n        this.handlePerPageSelect = this.handlePerPageSelect.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n        this.handleSetPage = this.handleSetPage.bind(this);\n        this.handleSort = this.handleSort.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { location, report, reportError, queryString } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.queryString !== queryString;\n        const noReport = !report && !reportError;\n        const noLocation = !location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    getRouteForQuery(query, reset = false) {\n        const { history } = this.props;\n        // Reset pagination\n        if (reset) {\n            query.filter = Object.assign(Object.assign({}, query.filter), { offset: baseQuery.filter.offset });\n        }\n        return `${history.location.pathname}?${getQueryRoute(query)}`;\n    }\n    render() {\n        const { providers, providersFetchStatus, query, report, reportError, reportFetchStatus, t } = this.props;\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const computedItems = this.getComputedItems();\n        const title = t('navigation.azure_details');\n        // Note: Providers are fetched via the InactiveSources component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (providersFetchStatus === 1 /* inProgress */ && reportFetchStatus === 1 /* inProgress */) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (providersFetchStatus === 2 /* complete */ && reportFetchStatus === 2 /* complete */) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0 && providersFetchStatus === 2 /* complete */;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: \"azure\" /* azure */, title: title });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.azureDetails },\n            React.createElement(DetailsHeader, { groupBy: groupById, onGroupByClicked: this.handleGroupByClick, report: report }),\n            React.createElement(\"div\", { style: styles.content },\n                this.getToolbar(computedItems),\n                this.getExportModal(computedItems),\n                reportFetchStatus === 1 /* inProgress */ ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const queryFromRoute = parseQuery(location.search);\n    const query = {\n        delta: 'cost',\n        filter: Object.assign(Object.assign({}, baseQuery.filter), queryFromRoute.filter),\n        filter_by: queryFromRoute.filter_by || baseQuery.filter_by,\n        group_by: queryFromRoute.group_by || baseQuery.group_by,\n        order_by: queryFromRoute.order_by || baseQuery.order_by,\n    };\n    const queryString = getQuery(query);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    const providersQueryString = getProvidersQuery(azureProvidersQuery);\n    const providers = providersSelectors.selectProviders(state, \"azure\" /* azure */, providersQueryString);\n    const providersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"azure\" /* azure */, providersQueryString);\n    return {\n        providers,\n        providersFetchStatus,\n        query,\n        queryString,\n        report,\n        reportError,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default withTranslation()(connect(mapStateToProps, mapDispatchToProps)(AzureDetails));\n","import AzureDetails from './azureDetails';\nexport default AzureDetails;\n","export function getIdKeyForGroupBy(groupBy = {}) {\n    if (groupBy.account) {\n        return 'account';\n    }\n    if (groupBy.cluster) {\n        return 'cluster';\n    }\n    if (groupBy.instance_type) {\n        return 'instance_type';\n    }\n    if (groupBy.node) {\n        return 'node';\n    }\n    if (groupBy.org_unit_id) {\n        return 'org_unit_id';\n    }\n    if (groupBy.project) {\n        return 'project';\n    }\n    if (groupBy.region) {\n        return 'region';\n    }\n    if (groupBy.resource_location) {\n        return 'resource_location';\n    }\n    if (groupBy.service) {\n        return 'service';\n    }\n    if (groupBy.service_name) {\n        return 'service_name';\n    }\n    if (groupBy.subscription_guid) {\n        return 'subscription_guid';\n    }\n    return 'date';\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    chartContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n        paddingRight: global_spacer_lg.value,\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    chartContent: {\n        paddingTop: global_spacer_lg.value,\n    },\n    explorer: {\n        minHeight: '100%',\n    },\n    paginationContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        padding: global_spacer_md.value,\n    },\n    tableContainer: {\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n    tableContent: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n};\n","import { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_cyan_300 } from '@patternfly/react-tokens/dist/js/chart_color_cyan_300';\nimport { chart_color_gold_300 } from '@patternfly/react-tokens/dist/js/chart_color_gold_300';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_orange_300 } from '@patternfly/react-tokens/dist/js/chart_color_orange_300';\nimport { chart_color_purple_300 } from '@patternfly/react-tokens/dist/js/chart_color_purple_300';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    colorScale: [\n        chart_color_blue_300.value,\n        chart_color_gold_300.value,\n        chart_color_green_300.value,\n        chart_color_purple_300.value,\n        chart_color_orange_300.value,\n        chart_color_cyan_300.value,\n    ],\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n    yAxisAlt: {\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartAxis, ChartBar, ChartLegend, ChartLegendTooltip, ChartStack, ChartThemeColor, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getMaxValue } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isDataHidden, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { formatCurrencyAbbreviation } from 'utils/formatValue';\nimport { noop } from 'utils/noop';\nimport { chartStyles } from './costExplorerChart.styles';\nclass CostExplorerChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { top1stData, top2ndData, top3rdData, top4thData, top5thData, top6thData } = this.props;\n            const series = [];\n            if (top1stData && top1stData.length) {\n                const name = this.getTruncatedString(top1stData[0].name);\n                series.push({\n                    childName: 'top1stData',\n                    data: this.initDatumChildName(top1stData, 'top1stData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[0],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[0],\n                        },\n                    },\n                });\n            }\n            if (top2ndData && top2ndData.length) {\n                const name = this.getTruncatedString(top2ndData[0].name);\n                series.push({\n                    childName: 'top2ndData',\n                    data: this.initDatumChildName(top2ndData, 'top2ndData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[1],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[1],\n                        },\n                    },\n                });\n            }\n            if (top3rdData && top3rdData.length) {\n                const name = this.getTruncatedString(top3rdData[0].name);\n                series.push({\n                    childName: 'top3rdData',\n                    data: this.initDatumChildName(top3rdData, 'top3rdData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[2],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[2],\n                        },\n                    },\n                });\n            }\n            if (top4thData && top4thData.length) {\n                const name = this.getTruncatedString(top4thData[0].name);\n                series.push({\n                    childName: 'top4thData',\n                    data: this.initDatumChildName(top4thData, 'top4thData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[3],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[3],\n                        },\n                    },\n                });\n            }\n            if (top5thData && top5thData.length) {\n                const name = this.getTruncatedString(top5thData[0].name);\n                series.push({\n                    childName: 'top5thData',\n                    data: this.initDatumChildName(top5thData, 'top5thData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[4],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[4],\n                        },\n                    },\n                });\n            }\n            if (top6thData && top6thData.length) {\n                const name = this.getTruncatedString(top6thData[0].name);\n                series.push({\n                    childName: 'top6thData',\n                    data: this.initDatumChildName(top6thData, 'top6thData'),\n                    legendItem: {\n                        name,\n                        symbol: {\n                            fill: chartStyles.colorScale[5],\n                        },\n                        tooltip: name,\n                    },\n                    style: {\n                        data: {\n                            fill: chartStyles.colorScale[5],\n                        },\n                    },\n                });\n            }\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            const units = this.getUnits(series);\n            this.setState({ cursorVoronoiContainer, series, units });\n        };\n        // Adds a child name to help identify hidden data series\n        this.initDatumChildName = (data, childName) => {\n            data.map(datum => (datum.childName = childName));\n            return data;\n        };\n        this.getAdjustedContainerHeight = () => {\n            const { adjustContainerHeight, height, containerHeight = height } = this.props;\n            const { width } = this.state;\n            let adjustedContainerHeight = containerHeight;\n            if (adjustContainerHeight) {\n                if (width > 675 && width < 1250) {\n                    adjustedContainerHeight += 25;\n                }\n                else if (width > 400 && width < 650) {\n                    adjustedContainerHeight += 50;\n                }\n                else if (width <= 400) {\n                    adjustedContainerHeight += 150;\n                }\n            }\n            return adjustedContainerHeight;\n        };\n        // If bar width exceeds max and domainPadding is true, extra width is returned to help center bars horizontally\n        this.getBarWidth = (domainPadding = false) => {\n            const { hiddenSeries, series, width } = this.state;\n            const maxWidth = 200;\n            let maxValue = -1;\n            if (series) {\n                series.forEach((s, index) => {\n                    if (!isSeriesHidden(hiddenSeries, index) && s.data && s.data.length !== 0) {\n                        if (s.data.length > maxValue) {\n                            maxValue = s.data.length;\n                        }\n                    }\n                });\n            }\n            // Divide available width into equal sections\n            const sections = maxValue * 2 + 1;\n            const sectionWidth = maxValue > 0 ? width / sections : 0;\n            if (domainPadding) {\n                // Add any extra bar width for domain padding\n                const extraWidth = sectionWidth > maxWidth ? (sectionWidth - maxWidth) * maxValue : 0;\n                return (sectionWidth + extraWidth / 2) * 2;\n            }\n            return sectionWidth > maxWidth ? maxWidth : sectionWidth;\n        };\n        this.getChart = (series, index, barWidth) => {\n            const { hiddenSeries } = this.state;\n            const data = !hiddenSeries.has(index) ? series.data : [{ y: null }];\n            return (React.createElement(ChartBar, { barWidth: barWidth, data: data, key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 75,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        // Returns domain only if max y values are zero\n        this.getDomain = (series, hiddenSeries) => {\n            let maxValue = -1;\n            let domain;\n            if (series) {\n                series.forEach((s, index) => {\n                    if (!isSeriesHidden(hiddenSeries, index) && s.data && s.data.length !== 0) {\n                        const max = getMaxValue(s.data);\n                        maxValue = Math.max(maxValue, max);\n                    }\n                });\n            }\n            if (maxValue <= 0) {\n                domain = { y: [0, 100] };\n            }\n            return domain;\n        };\n        // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n        this.getEvents = () => {\n            const { hiddenSeries, series } = this.state;\n            const result = getInteractiveLegendEvents({\n                chartNames: getChartNames(series),\n                isDataHidden: data => isDataHidden(series, hiddenSeries, data),\n                isHidden: index => isSeriesHidden(hiddenSeries, index),\n                legendName: 'legend',\n                onLegendClick: props => this.handleLegendClick(props.index),\n            });\n            return result;\n        };\n        this.getLegend = () => {\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, name: \"legend\", responsive: false }));\n        };\n        // This ensures we show every 3rd tick value, including the first and last value\n        //\n        // Note: We're not using Victory's tickCount because it won't always include the last tick value.\n        this.getTickValues = () => {\n            const { top1stData, top2ndData, top3rdData, top4thData, top5thData, top6thData } = this.props;\n            // Find the datum with the greatest number of values\n            const allDatums = [top1stData, top2ndData, top3rdData, top4thData, top5thData, top6thData];\n            let datum;\n            allDatums.map(val => {\n                if (!datum || datum.length < val.length) {\n                    datum = val;\n                }\n            });\n            const values = [];\n            datum.map(val => {\n                values.push(val.x);\n            });\n            // Prune tick values\n            const tickValues = [];\n            const modVal = values.length < 6 ? 2 : 3;\n            for (let i = 0; i < values.length; i++) {\n                if (i % modVal === 0 && i + 2 < values.length) {\n                    tickValues.push(values[i]);\n                }\n                else if (values.length < 3 && i + 1 < values.length) {\n                    tickValues.push(values[i]);\n                }\n            }\n            tickValues.push(values[values.length - 1]);\n            return tickValues;\n        };\n        this.getTruncatedString = (str) => {\n            const maxChars = 20;\n            return str.length > maxChars ? str.substr(0, maxChars - 1) + '...' : str;\n        };\n        this.getTickValue = (t) => {\n            const { units } = this.state;\n            return formatCurrencyAbbreviation(t, units);\n        };\n        this.getUnits = (series) => {\n            if (series) {\n                for (const s of series) {\n                    for (const datum of s.data) {\n                        if (datum.units) {\n                            return datum.units;\n                        }\n                    }\n                }\n            }\n            return 'USD';\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.top1stData !== this.props.top1stData ||\n            prevProps.top2ndData !== this.props.top2ndData ||\n            prevProps.top3rdData !== this.props.top3rdData ||\n            prevProps.top4thData !== this.props.top4thData ||\n            prevProps.top5thData !== this.props.top5thData ||\n            prevProps.top6thData !== this.props.top6thData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    render() {\n        const { height, padding = {\n            bottom: 50,\n            left: 20,\n            right: 8,\n            top: 8,\n        }, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        const barWidth = this.getBarWidth();\n        // Note: For tooltip values to match properly, chart groups must be rendered in the order given as legend data\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef, style: { height: this.getAdjustedContainerHeight() } },\n            React.createElement(\"div\", { style: { height, width } },\n                React.createElement(Chart, { containerComponent: container, domain: this.getDomain(series, hiddenSeries), domainPadding: { x: this.getBarWidth(true) }, events: this.getEvents(), height: height, legendAllowWrap: true, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom-left\", padding: padding, theme: ChartTheme, themeColor: ChartThemeColor.multiOrdered, width: width },\n                    series && series.length > 0 && (React.createElement(ChartStack, null, series.map((s, index) => this.getChart(s, index, barWidth)))),\n                    React.createElement(ChartAxis, { style: chartStyles.xAxis, tickValues: this.getTickValues(), fixLabelOverlap: true }),\n                    React.createElement(ChartAxis, { dependentAxis: true, style: chartStyles.yAxis, tickFormat: this.getTickValue })))));\n    }\n}\nexport { CostExplorerChart };\n","import global_spacer_2xl from '@patternfly/react-tokens/dist/js/global_spacer_2xl';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    chartHeight: 300,\n    chartContainerHeight: 300,\n};\nexport const styles = {\n    chartContainer: {\n        marginLeft: global_spacer_2xl.value,\n    },\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n    costChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    titleContainer: {\n        marginLeft: global_spacer_lg.value,\n    },\n    trendChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    usageChart: {\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import { getQueryRoute } from 'api/queries/query';\nimport { format } from 'date-fns';\nimport { getCurrentMonthDate, getLast30DaysDate, getLast60DaysDate } from 'utils/dateRange';\nimport { isAwsAvailable, isAzureAvailable, isGcpAvailable, isIbmAvailable, isOcpAvailable } from 'utils/userAccess';\nexport const baseQuery = {\n    filter: {\n        limit: 10,\n        offset: 0,\n    },\n    filter_by: {},\n    group_by: {\n        account: '*',\n    },\n    order_by: {\n        cost: 'desc',\n    },\n};\nexport const dateRangeOptions = [\n    { label: 'explorer.date_range.current_month_to_date', value: 'current_month_to_date' },\n    { label: 'explorer.date_range.previous_month_to_date', value: 'previous_month_to_date' },\n    { label: 'explorer.date_range.last_thirty_days', value: 'last_thirty_days' },\n    { label: 'explorer.date_range.last_sixty_days', value: 'last_sixty_days' },\n];\nexport const groupByAwsOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByAzureOptions = [\n    { label: 'subscription_guid', value: 'subscription_guid' },\n    { label: 'service_name', value: 'service_name' },\n    { label: 'resource_location', value: 'resource_location' },\n];\nexport const groupByGcpOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'project', value: 'project' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByIbmOptions = [\n    { label: 'account', value: 'account' },\n    { label: 'project', value: 'project' },\n    { label: 'service', value: 'service' },\n    { label: 'region', value: 'region' },\n];\nexport const groupByOcpOptions = [\n    { label: 'cluster', value: 'cluster' },\n    { label: 'node', value: 'node' },\n    { label: 'project', value: 'project' },\n];\n// Infrastructure AWS options\nexport const infrastructureAwsOptions = [{ label: 'explorer.perspective.aws', value: 'aws' }];\n// Infrastructure AWS cloud options\nexport const infrastructureAwsCloudOptions = [{ label: 'explorer.perspective.aws_cloud', value: 'aws_cloud' }];\n// Infrastructure Azure options\nexport const infrastructureAzureOptions = [{ label: 'explorer.perspective.azure', value: 'azure' }];\n// Infrastructure Azure cloud options\nexport const infrastructureAzureCloudOptions = [{ label: 'explorer.perspective.azure_cloud', value: 'azure_cloud' }];\n// Infrastructure GCP options\nexport const infrastructureGcpOptions = [{ label: 'explorer.perspective.gcp', value: 'gcp' }];\n// Infrastructure IBM options\nexport const infrastructureIbmOptions = [{ label: 'explorer.perspective.ibm', value: 'ibm' }];\n// Infrastructure Ocp options\nexport const infrastructureOcpOptions = [{ label: 'explorer.perspective.ocp_usage', value: 'ocp_usage' }];\n// Infrastructure Ocp cloud options\nexport const infrastructureOcpCloudOptions = [{ label: 'explorer.perspective.ocp_cloud', value: 'ocp_cloud' }];\n// Ocp options\nexport const ocpOptions = [\n    { label: 'explorer.perspective.ocp', value: 'ocp' },\n    { label: 'explorer.perspective.ocp_supplementary', value: 'ocp_supplementary' },\n];\nexport const getComputedReportItemType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case \"ocp_supplementary\" /* ocpSupplementary */:\n            result = \"supplementary\" /* supplementary */;\n            break;\n        case \"ocp_usage\" /* ocpUsage */:\n            result = \"infrastructure\" /* infrastructure */;\n            break;\n        case \"aws\" /* aws */:\n        case \"aws_cloud\" /* awsCloud */:\n        case \"azure\" /* azure */:\n        case \"azure_cloud\" /* azureCloud */:\n        case \"gcp\" /* gcp */:\n        case \"ibm\" /* ibm */:\n        case \"ocp\" /* ocp */:\n        case \"ocp_cloud\" /* ocpCloud */:\n        default:\n            result = \"cost\" /* cost */;\n            break;\n    }\n    return result;\n};\nexport const getDateRange = (dateRangeType) => {\n    const endDate = new Date();\n    const startDate = new Date();\n    let dateRange;\n    switch (dateRangeType) {\n        case \"previous_month_to_date\" /* previousMonthToDate */:\n            startDate.setDate(1); // Required to obtain correct month\n            startDate.setMonth(startDate.getMonth() - 1); // Note: Must include previous and current month\n            dateRange = {\n                end_date: format(endDate, 'yyyy-MM-dd'),\n                start_date: format(startDate, 'yyyy-MM-dd'),\n            };\n            break;\n        case \"last_sixty_days\" /* lastSixtyDays */:\n            dateRange = getLast60DaysDate();\n            break;\n        case \"last_thirty_days\" /* lastThirtyDays */:\n            dateRange = getLast30DaysDate();\n            break;\n        case \"current_month_to_date\" /* currentMonthToDate */:\n        default:\n            dateRange = getCurrentMonthDate();\n            break;\n    }\n    return dateRange;\n};\nexport const getDateRangeDefault = (queryFromRoute) => {\n    return queryFromRoute.dateRange || \"current_month_to_date\" /* currentMonthToDate */;\n};\nexport const getPerspectiveDefault = ({ awsProviders, awsProvidersFetchStatus, azureProviders, azureProvidersFetchStatus, gcpProviders, gcpProvidersFetchStatus, ibmProviders, ibmProvidersFetchStatus, ocpProviders, ocpProvidersFetchStatus, queryFromRoute, userAccess, }) => {\n    let result = queryFromRoute.perspective;\n    if (!result) {\n        if (isOcpAvailable(userAccess, ocpProviders, ocpProvidersFetchStatus)) {\n            result = \"ocp\" /* ocp */;\n        }\n        else if (isAwsAvailable(userAccess, awsProviders, awsProvidersFetchStatus)) {\n            result = \"aws\" /* aws */;\n        }\n        else if (isAzureAvailable(userAccess, azureProviders, azureProvidersFetchStatus)) {\n            result = \"azure\" /* azure */;\n        }\n        else if (isGcpAvailable(userAccess, gcpProviders, gcpProvidersFetchStatus)) {\n            result = \"gcp\" /* gcp */;\n        }\n        else if (isIbmAvailable(userAccess, ibmProviders, ibmProvidersFetchStatus)) {\n            result = \"ibm\" /* ibm */;\n        }\n    }\n    return result;\n};\nexport const getGroupByDefault = (perspective) => {\n    let result;\n    switch (perspective) {\n        case \"aws\" /* aws */:\n        case \"aws_cloud\" /* awsCloud */:\n        case \"gcp\" /* gcp */:\n        case \"ibm\" /* ibm */:\n            result = 'account';\n            break;\n        case \"azure\" /* azure */:\n        case \"azure_cloud\" /* azureCloud */:\n            result = 'subscription_guid';\n            break;\n        case \"ocp\" /* ocp */:\n        case \"ocp_cloud\" /* ocpCloud */:\n        case \"ocp_supplementary\" /* ocpSupplementary */:\n        case \"ocp_usage\" /* ocpUsage */:\n            result = 'project';\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getGroupByOptions = (perspective) => {\n    let result;\n    switch (perspective) {\n        case \"aws\" /* aws */:\n        case \"aws_cloud\" /* awsCloud */:\n            result = groupByAwsOptions;\n            break;\n        case \"azure\" /* azure */:\n        case \"azure_cloud\" /* azureCloud */:\n            result = groupByAzureOptions;\n            break;\n        case \"gcp\" /* gcp */:\n            result = groupByGcpOptions;\n            break;\n        case \"ibm\" /* ibm */:\n            result = groupByIbmOptions;\n            break;\n        case \"ocp\" /* ocp */:\n        case \"ocp_cloud\" /* ocpCloud */:\n        case \"ocp_supplementary\" /* ocpSupplementary */:\n        case \"ocp_usage\" /* ocpUsage */:\n            result = groupByOcpOptions;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getOrgReportPathsType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case \"aws\" /* aws */:\n            result = \"aws\" /* aws */;\n            break;\n        case \"aws_cloud\" /* awsCloud */:\n        case \"azure\" /* azure */:\n        case \"azure_cloud\" /* azureCloud */:\n        case \"gcp\" /* gcp */:\n        case \"ibm\" /* ibm */:\n        case \"ocp\" /* ocp */:\n        case \"ocp_cloud\" /* ocpCloud */:\n        case \"ocp_supplementary\" /* ocpSupplementary */:\n        case \"ocp_usage\" /* ocpUsage */:\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getReportType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case \"aws\" /* aws */:\n        case \"aws_cloud\" /* awsCloud */:\n        case \"azure\" /* azure */:\n        case \"azure_cloud\" /* azureCloud */:\n        case \"gcp\" /* gcp */:\n        case \"ibm\" /* ibm */:\n        case \"ocp\" /* ocp */:\n        case \"ocp_cloud\" /* ocpCloud */:\n        case \"ocp_supplementary\" /* ocpSupplementary */:\n        case \"ocp_usage\" /* ocpUsage */:\n        default:\n            result = \"cost\" /* cost */;\n            break;\n    }\n    return result;\n};\nexport const getReportPathsType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case \"aws\" /* aws */:\n            result = \"aws\" /* aws */;\n            break;\n        case \"aws_cloud\" /* awsCloud */:\n            result = \"aws_cloud\" /* awsCloud */;\n            break;\n        case \"azure\" /* azure */:\n            result = \"azure\" /* azure */;\n            break;\n        case \"azure_cloud\" /* azureCloud */:\n            result = \"azure_cloud\" /* azureCloud */;\n            break;\n        case \"gcp\" /* gcp */:\n            result = \"gcp\" /* gcp */;\n            break;\n        case \"ibm\" /* ibm */:\n            result = \"gcp\" /* ibm */;\n            break;\n        case \"ocp\" /* ocp */:\n            result = \"ocp\" /* ocp */;\n            break;\n        case \"ocp_cloud\" /* ocpCloud */:\n            result = \"ocp_cloud\" /* ocpCloud */;\n            break;\n        case \"ocp_supplementary\" /* ocpSupplementary */:\n            result = \"ocp\" /* ocp */;\n            break;\n        case \"ocp_usage\" /* ocpUsage */:\n            result = \"ocp_usage\" /* ocpUsage */;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getTagReportPathsType = (perspective) => {\n    let result;\n    switch (perspective) {\n        case \"aws\" /* aws */:\n            return \"aws\" /* aws */;\n            break;\n        case \"aws_cloud\" /* awsCloud */:\n            return \"aws_cloud\" /* awsCloud */;\n            break;\n        case \"azure\" /* azure */:\n            return \"azure\" /* azure */;\n            break;\n        case \"azure_cloud\" /* azureCloud */:\n            return \"azure_cloud\" /* azureCloud */;\n            break;\n        case \"gcp\" /* gcp */:\n            return \"gcp\" /* gcp */;\n            break;\n        case \"ibm\" /* ibm */:\n            return \"gcp\" /* ibm */;\n            break;\n        case \"ocp\" /* ocp */:\n        case \"ocp_supplementary\" /* ocpSupplementary */:\n        case \"ocp_usage\" /* ocpUsage */:\n            return \"ocp\" /* ocp */;\n            break;\n        case \"ocp_cloud\" /* ocpCloud */:\n            return \"ocp_cloud\" /* ocpCloud */;\n            break;\n        default:\n            result = undefined;\n            break;\n    }\n    return result;\n};\nexport const getRouteForQuery = (history, query, reset = false) => {\n    // Reset pagination\n    if (reset) {\n        query.filter = Object.assign(Object.assign({}, query.filter), { offset: baseQuery.filter.offset });\n    }\n    return `${history.location.pathname}?${getQueryRoute(query)}`;\n};\n","import { Skeleton, Title } from '@patternfly/react-core';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { isFloat, isInt } from 'components/charts/common/chartDatumUtils';\nimport { CostExplorerChart } from 'components/charts/costExplorerChart';\nimport { format, getDate, getMonth } from 'date-fns';\nimport { getGroupByOrgValue, getGroupByTagKey } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedExplorerReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { formatValue } from 'utils/formatValue';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { chartStyles, styles } from './explorerChart.styles';\nimport { baseQuery, getDateRange, getDateRangeDefault, getGroupByDefault, getReportPathsType, getReportType, } from './explorerUtils';\nclass ExplorerChartBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.createReportDatum = (value, computedItem, reportItem = 'cost', reportItemValue = 'total') => {\n            const { t } = this.props;\n            const computedItemDate = new Date(computedItem.date + 'T00:00:00');\n            const xVal = t('chart.date', { date: getDate(computedItemDate), month: getMonth(computedItemDate) });\n            const yVal = isFloat(value) ? parseFloat(value.toFixed(2)) : isInt(value) ? value : 0;\n            return {\n                x: xVal,\n                y: value === null ? null : yVal,\n                date: computedItem.date,\n                key: computedItem.id,\n                name: computedItem.label ? computedItem.label : computedItem.id,\n                units: computedItem[reportItem]\n                    ? computedItem[reportItem][reportItemValue]\n                        ? computedItem[reportItem][reportItemValue].units // cost, infrastructure, supplementary\n                        : computedItem[reportItem].units // capacity, limit, request, usage\n                    : undefined,\n            };\n        };\n        this.fetchReport = () => {\n            const { fetchReport, perspective, queryString } = this.props;\n            if (perspective) {\n                const reportPathsType = getReportPathsType(perspective);\n                const reportType = getReportType(perspective);\n                fetchReport(reportPathsType, reportType, queryString);\n            }\n        };\n        this.getChartDatums = (computedItems) => {\n            const { computedReportItemType = \"cost\" /* cost */ } = this.props;\n            const reportItem = computedReportItemType;\n            const reportItemValue = 'total';\n            const chartDatums = [];\n            computedItems.map(computedItem => {\n                const datums = [];\n                if (computedItem instanceof Map) {\n                    const items = Array.from(computedItem.values());\n                    items.map(i => {\n                        const val = i[reportItem][reportItemValue] ? i[reportItem][reportItemValue].value : i[reportItem].value;\n                        datums.push(this.createReportDatum(val, i, reportItem, reportItemValue));\n                    });\n                }\n                chartDatums.push(datums);\n            });\n            return this.padChartDatums(chartDatums);\n        };\n        this.getChartTitle = (perspective) => {\n            let result;\n            switch (perspective) {\n                case \"aws\" /* aws */:\n                    result = 'explorer.title.aws';\n                    break;\n                case \"aws_cloud\" /* awsCloud */:\n                    result = 'explorer.title.aws_cloud';\n                    break;\n                case \"azure\" /* azure */:\n                    result = 'explorer.title.azure';\n                    break;\n                case \"azure_cloud\" /* azureCloud */:\n                    result = 'explorer.title.azure_cloud';\n                    break;\n                case \"gcp\" /* gcp */:\n                    result = 'explorer.title.gcp';\n                    break;\n                case \"ibm\" /* ibm */:\n                    result = 'explorer.title.ibm';\n                    break;\n                case \"ocp\" /* ocp */:\n                    result = 'explorer.title.ocp';\n                    break;\n                case \"ocp_cloud\" /* ocpCloud */:\n                    result = 'explorer.title.ocp_cloud';\n                    break;\n                case \"ocp_supplementary\" /* ocpSupplementary */:\n                    result = 'explorer.title.ocp_supplementary';\n                    break;\n                case \"ocp_usage\" /* ocpUsage */:\n                    result = 'explorer.title.ocp_usage';\n                    break;\n                default:\n                    result = undefined;\n                    break;\n            }\n            return result;\n        };\n        this.getComputedItems = () => {\n            const { report } = this.props;\n            return getUnsortedComputedReportItems({\n                report,\n                idKey: this.getGroupBy(),\n                daily: true,\n            });\n        };\n        this.getGroupBy = () => {\n            const { query } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByOrg = getGroupByOrgValue(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            return groupByTagKey ? groupByTagKey : groupByOrg ? 'org_entities' : groupById;\n        };\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, width: skeletonWidth.xs })));\n        };\n        // This pads chart datums with null datum objects, representing missing data at the beginning and end of the\n        // data series. The remaining data is left as is to allow for extrapolation. This allows us to display a \"no data\"\n        // message in the tooltip, which helps distinguish between zero values and when there is no data available.\n        this.padChartDatums = (items) => {\n            const { end_date, start_date } = this.props;\n            const result = [];\n            items.map(datums => {\n                const key = datums[0].key;\n                const label = datums[0].name;\n                const newItems = [];\n                for (let padDate = new Date(start_date + 'T00:00:00'); padDate <= new Date(end_date + 'T00:00:00'); padDate.setDate(padDate.getDate() + 1)) {\n                    const id = format(padDate, 'yyyy-MM-dd');\n                    const chartDatum = datums.find(val => val.date === id);\n                    if (chartDatum) {\n                        newItems.push(chartDatum);\n                    }\n                    else {\n                        const date = format(padDate, 'yyyy-MM-dd');\n                        newItems.push(this.createReportDatum(null, { date, id: key, label }, 'cost', null));\n                    }\n                }\n                result.push(newItems);\n            });\n            return result;\n        };\n    }\n    componentDidMount() {\n        this.fetchReport();\n    }\n    componentDidUpdate(prevProps) {\n        const { report, reportError, queryString } = this.props;\n        const newQuery = prevProps.queryString !== queryString;\n        const noReport = !report && !reportError;\n        if (newQuery || noReport) {\n            this.fetchReport();\n        }\n    }\n    render() {\n        const { perspective, reportFetchStatus, t } = this.props;\n        const datums = this.getChartDatums(this.getComputedItems());\n        // Todo: get title from perspective menu\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { style: styles.titleContainer },\n                React.createElement(Title, { headingLevel: \"h3\", size: \"md\" }, t(this.getChartTitle(perspective)))),\n            React.createElement(\"div\", { style: styles.chartContainer },\n                React.createElement(\"div\", { style: styles.costChart }, reportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(CostExplorerChart, { adjustContainerHeight: true, containerHeight: chartStyles.chartContainerHeight, formatDatumValue: formatValue, formatDatumOptions: {}, height: chartStyles.chartHeight, top1stData: datums.length > 0 ? datums[0] : [], top2ndData: datums.length > 1 ? datums[1] : [], top3rdData: datums.length > 2 ? datums[2] : [], top4thData: datums.length > 3 ? datums[3] : [], top5thData: datums.length > 4 ? datums[4] : [], top6thData: datums.length > 5 ? datums[5] : [] }))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { perspective }) => {\n    const queryFromRoute = parseQuery(location.search);\n    const dateRange = getDateRangeDefault(queryFromRoute);\n    const { end_date, start_date } = getDateRange(getDateRangeDefault(queryFromRoute));\n    const query = {\n        filter: Object.assign(Object.assign(Object.assign({}, baseQuery.filter), queryFromRoute.filter), { limit: 5, offset: undefined }),\n        filter_by: queryFromRoute.filter_by || baseQuery.filter_by,\n        group_by: queryFromRoute.group_by || { [getGroupByDefault(perspective)]: '*' } || baseQuery.group_by,\n        perspective,\n        dateRange,\n        end_date,\n        start_date,\n    };\n    const queryString = getQuery(Object.assign(Object.assign({}, query), { perspective: undefined, dateRange: undefined }));\n    const reportPathsType = getReportPathsType(perspective);\n    const reportType = getReportType(perspective);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        end_date,\n        perspective,\n        query,\n        queryString,\n        report,\n        reportError,\n        reportFetchStatus,\n        start_date,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst ExplorerChartConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerChartBase);\nconst ExplorerChart = withRouter(withTranslation()(ExplorerChartConnect));\nexport { ExplorerChart };\n","import { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nclass DateRangeBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            isDateRangeOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getDropDownItems = () => {\n            const { options, t } = this.props;\n            return options.map(option => (React.createElement(DropdownItem, { component: \"button\", key: option.value, onClick: () => this.handleClick(option.value) }, t(option.label))));\n        };\n        this.getCurrentLabel = () => {\n            const { currentItem, options, t } = this.props;\n            let label = '';\n            for (const option of options) {\n                if (currentItem === option.value) {\n                    label = t(option.label);\n                    break;\n                }\n            }\n            return label;\n        };\n        this.handleClick = value => {\n            const { onItemClicked } = this.props;\n            if (onItemClicked) {\n                onItemClicked(value);\n            }\n        };\n        this.handleSelect = () => {\n            this.setState({\n                isDateRangeOpen: !this.state.isDateRangeOpen,\n            });\n        };\n        this.handleToggle = isDateRangeOpen => {\n            this.setState({\n                isDateRangeOpen,\n            });\n        };\n    }\n    render() {\n        const { isDisabled } = this.props;\n        const { isDateRangeOpen } = this.state;\n        const dropdownItems = this.getDropDownItems();\n        return (React.createElement(Dropdown, { onSelect: this.handleSelect, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled, onToggle: this.handleToggle }, this.getCurrentLabel()), isOpen: isDateRangeOpen, dropdownItems: dropdownItems }));\n    }\n}\nconst DateRange = withTranslation()(DateRangeBase);\nexport { DateRange };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    toolbarContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        marginLeft: `-${global_spacer_md.value}`,\n        paddingTop: global_spacer_sm.value,\n    },\n};\n","import { getQuery, orgUnitIdKey, parseQuery, tagKey } from 'api/queries/query';\nimport { DataToolbar } from 'pages/views/components/dataToolbar/dataToolbar';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { createMapStateToProps } from 'store/common';\nimport { orgActions, orgSelectors } from 'store/orgs';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { getLast60DaysDate } from 'utils/dateRange';\nimport { isEqual } from 'utils/equal';\nimport { DateRange } from './dateRange';\nimport { styles } from './explorerFilter.styles';\nimport { dateRangeOptions, getDateRangeDefault, getGroupByOptions, getOrgReportPathsType, getRouteForQuery, getTagReportPathsType, } from './explorerUtils';\nconst orgReportType = \"org\" /* org */;\nconst tagReportType = \"tag\" /* tag */;\nexport class ExplorerFilterBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n        this.getCategoryOptions = () => {\n            const { orgReport, perspective, t, tagReport } = this.props;\n            const options = [];\n            const groupByOptions = getGroupByOptions(perspective);\n            groupByOptions.map(option => {\n                options.push({\n                    name: t(`filter_by.values.${option.label}`),\n                    key: option.value,\n                });\n            });\n            if (orgReport && orgReport.data && orgReport.data.length > 0) {\n                options.push({\n                    name: t('filter_by.values.org_unit_id'),\n                    key: orgUnitIdKey,\n                });\n            }\n            if (tagReport && tagReport.data && tagReport.data.length > 0) {\n                options.push({ name: t('filter_by.values.tag'), key: tagKey });\n            }\n            return options;\n        };\n        this.getDefaultDateRange = () => {\n            const { dateRange } = this.props;\n            return dateRange ? dateRange : dateRangeOptions[0];\n        };\n        this.getDateRange = () => {\n            const { isDisabled } = this.props;\n            const { currentDateRange } = this.state;\n            return (React.createElement(DateRange, { currentItem: currentDateRange, isDisabled: isDisabled, onItemClicked: this.handleDateRangeClick, options: dateRangeOptions }));\n        };\n        this.handleDateRangeClick = (value) => {\n            const { history, query } = this.props;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { dateRange: value });\n            history.replace(getRouteForQuery(history, newQuery, true));\n            this.setState({ currentDateRange: value });\n        };\n    }\n    componentDidMount() {\n        const { fetchOrg, fetchTag, orgQueryString, orgReportPathsType, tagQueryString, tagReportPathsType } = this.props;\n        if (orgReportPathsType) {\n            fetchOrg(orgReportPathsType, orgReportType, orgQueryString);\n        }\n        if (tagReportPathsType) {\n            fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n        }\n        this.setState({\n            categoryOptions: this.getCategoryOptions(),\n            currentDateRange: this.getDefaultDateRange(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchOrg, fetchTag, orgQueryString, orgReport, orgReportPathsType, perspective, query, tagQueryString, tagReport, tagReportPathsType, } = this.props;\n        if (query && !isEqual(query, prevProps.query)) {\n            if (orgReportPathsType) {\n                fetchOrg(orgReportPathsType, orgReportType, orgQueryString);\n            }\n            if (tagReportPathsType) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n        }\n        if (!isEqual(orgReport, prevProps.orgReport) || !isEqual(tagReport, prevProps.tagReport)) {\n            this.setState({\n                categoryOptions: this.getCategoryOptions(),\n            });\n        }\n        // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n        if (prevProps.perspective !== perspective) {\n            this.handleDateRangeClick(dateRangeOptions[0].value);\n        }\n    }\n    render() {\n        const { groupBy, isDisabled, onFilterAdded, onFilterRemoved, orgReport, query, tagReport } = this.props;\n        const { categoryOptions } = this.state;\n        return (React.createElement(DataToolbar, { categoryOptions: categoryOptions, dateRange: this.getDateRange(), groupBy: groupBy, isDisabled: isDisabled, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, orgReport: orgReport, query: query, style: styles.toolbarContainer, showFilter: true, tagReport: tagReport }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { perspective }) => {\n    const queryFromRoute = parseQuery(location.search);\n    const dateRange = getDateRangeDefault(queryFromRoute);\n    // Omitting key_only to share a single request -- the toolbar needs key values\n    const orgQueryString = getQuery({\n    // TBD...\n    });\n    let orgReport;\n    let orgReportFetchStatus;\n    const orgReportPathsType = getOrgReportPathsType(perspective);\n    if (orgReportPathsType) {\n        orgReport = orgSelectors.selectOrg(state, orgReportPathsType, orgReportType, orgQueryString);\n        orgReportFetchStatus = orgSelectors.selectOrgFetchStatus(state, orgReportPathsType, orgReportType, orgQueryString);\n    }\n    // Fetch tags with largest date range available\n    const { start_date, end_date } = getLast60DaysDate();\n    // Omitting key_only to share a single, cached request -- although the header doesn't need key values, the toolbar does\n    const tagQueryString = getQuery({\n        start_date,\n        end_date,\n    });\n    let tagReport;\n    let tagReportFetchStatus;\n    const tagReportPathsType = getTagReportPathsType(perspective);\n    if (tagReportPathsType) {\n        tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, tagQueryString);\n        tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, tagQueryString);\n    }\n    return {\n        dateRange,\n        orgQueryString,\n        orgReport,\n        orgReportFetchStatus,\n        orgReportPathsType,\n        perspective,\n        tagQueryString,\n        tagReport,\n        tagReportFetchStatus,\n        tagReportPathsType,\n    };\n});\nconst mapDispatchToProps = {\n    fetchOrg: orgActions.fetchOrg,\n    fetchTag: tagActions.fetchTag,\n};\nconst ExplorerFilterConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerFilterBase);\nconst ExplorerFilter = withRouter(withTranslation()(ExplorerFilterConnect));\nexport { ExplorerFilter };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_Color_200 from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    cost: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    costLabel: {},\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    costLabelDate: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_200.var,\n    },\n    groupBy: {\n        paddingLeft: global_spacer_lg.var,\n    },\n    header: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        paddingBottom: global_spacer_sm.var,\n        paddingLeft: global_spacer_lg.var,\n        paddingRight: global_spacer_lg.var,\n        paddingTop: global_spacer_lg.var,\n        backgroundColor: global_BackgroundColor_light_100.var,\n    },\n    perspectiveContainer: {\n        display: 'flex',\n        marginTop: global_spacer_md.var,\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { Title } from '@patternfly/react-core';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { getUserAccessQuery } from 'api/queries/userAccessQuery';\nimport { GroupBy } from 'pages/views/components/groupBy/groupBy';\nimport { Perspective } from 'pages/views/components/perspective/perspective';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { createMapStateToProps } from 'store/common';\nimport { awsProvidersQuery, azureProvidersQuery, gcpProvidersQuery, ibmProvidersQuery, ocpProvidersQuery, providersSelectors, } from 'store/providers';\nimport { allUserAccessQuery, ibmUserAccessQuery, userAccessSelectors } from 'store/userAccess';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedExplorerReportItems';\nimport { getLast60DaysDate } from 'utils/dateRange';\nimport { isAwsAvailable, isAzureAvailable, isGcpAvailable, isIbmAvailable, isOcpAvailable } from 'utils/userAccess';\nimport { ExplorerFilter } from './explorerFilter';\nimport { styles } from './explorerHeader.styles';\nimport { baseQuery, getGroupByDefault, getGroupByOptions, getOrgReportPathsType, getRouteForQuery, getTagReportPathsType, infrastructureAwsCloudOptions, infrastructureAwsOptions, infrastructureAzureCloudOptions, infrastructureAzureOptions, infrastructureGcpOptions, infrastructureIbmOptions, \n// infrastructureOcpCloudOptions, // Todo: Temp disabled -- see https://issues.redhat.com/browse/COST-1483\ninfrastructureOcpOptions, ocpOptions, } from './explorerUtils';\nclass ExplorerHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n        // TBD...\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getPerspective = (isDisabled) => {\n            const { currentPerspective } = this.state;\n            const aws = this.isAwsAvailable();\n            const azure = this.isAzureAvailable();\n            const gcp = this.isGcpAvailable();\n            const ibm = this.isIbmAvailable();\n            const ocp = this.isOcpAvailable();\n            if (!(aws || azure || gcp || ibm || ocp)) {\n                return null;\n            }\n            // Dynamically show options if providers are available\n            const options = [];\n            if (ocp) {\n                options.push(...ocpOptions);\n                // Todo: Temp disabled -- see https://issues.redhat.com/browse/COST-1483\n                //\n                // options.push(...infrastructureOcpCloudOptions);\n            }\n            if (aws) {\n                options.push(...infrastructureAwsOptions);\n            }\n            if (ocp && aws) {\n                options.push(...infrastructureAwsCloudOptions);\n            }\n            if (gcp) {\n                options.push(...infrastructureGcpOptions);\n            }\n            if (ibm) {\n                options.push(...infrastructureIbmOptions);\n            }\n            if (azure) {\n                options.push(...infrastructureAzureOptions);\n            }\n            if (ocp && azure) {\n                options.push(...infrastructureAzureCloudOptions);\n            }\n            if (ocp) {\n                options.push(...infrastructureOcpOptions);\n            }\n            return (React.createElement(Perspective, { currentItem: currentPerspective || options[0].value, isDisabled: isDisabled, onItemClicked: this.handlePerspectiveClick, options: options }));\n        };\n        this.handlePerspectiveClick = (value) => {\n            const { history, onPerspectiveClicked, query } = this.props;\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { filter_by: undefined, group_by: { [getGroupByDefault(value)]: '*' }, order_by: undefined, perspective: value });\n            history.replace(getRouteForQuery(history, newQuery, true));\n            this.setState({ currentPerspective: value }, () => {\n                if (onPerspectiveClicked) {\n                    onPerspectiveClicked(value);\n                }\n            });\n        };\n        this.isAwsAvailable = () => {\n            const { awsProviders, awsProvidersFetchStatus, userAccess } = this.props;\n            return isAwsAvailable(userAccess, awsProviders, awsProvidersFetchStatus);\n        };\n        this.isAzureAvailable = () => {\n            const { azureProviders, azureProvidersFetchStatus, userAccess } = this.props;\n            return isAzureAvailable(userAccess, azureProviders, azureProvidersFetchStatus);\n        };\n        this.isGcpAvailable = () => {\n            const { gcpProviders, gcpProvidersFetchStatus, userAccess } = this.props;\n            return isGcpAvailable(userAccess, gcpProviders, gcpProvidersFetchStatus);\n        };\n        this.isIbmAvailable = () => {\n            const { ibmProviders, ibmProvidersFetchStatus, ibmUserAccess } = this.props;\n            return isIbmAvailable(ibmUserAccess, ibmProviders, ibmProvidersFetchStatus);\n        };\n        this.isOcpAvailable = () => {\n            const { ocpProviders, ocpProvidersFetchStatus, userAccess } = this.props;\n            return isOcpAvailable(userAccess, ocpProviders, ocpProvidersFetchStatus);\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            currentPerspective: this.props.perspective,\n        });\n    }\n    render() {\n        const { awsProviders, azureProviders, gcpProviders, ibmProviders, ocpProviders, awsProvidersFetchStatus, azureProvidersFetchStatus, ibmProvidersFetchStatus, ibmUserAccess, groupBy, gcpProvidersFetchStatus, ocpProvidersFetchStatus, onFilterAdded, onFilterRemoved, onGroupByClicked, perspective, query, t, userAccess, } = this.props;\n        // Test for no providers\n        const noProviders = !(isAwsAvailable(userAccess, awsProviders, awsProvidersFetchStatus) ||\n            isAzureAvailable(userAccess, azureProviders, azureProvidersFetchStatus) ||\n            isGcpAvailable(userAccess, gcpProviders, gcpProvidersFetchStatus) ||\n            isIbmAvailable(ibmUserAccess, ibmProviders, ibmProvidersFetchStatus) ||\n            isOcpAvailable(userAccess, ocpProviders, ocpProvidersFetchStatus));\n        const groupByOptions = getGroupByOptions(perspective);\n        const orgReportPathsType = getOrgReportPathsType(perspective);\n        const tagReportPathsType = getTagReportPathsType(perspective);\n        // Fetch tags with largest date range available\n        const { start_date, end_date } = getLast60DaysDate();\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", null,\n                React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"2xl\" }, t('navigation.explorer')),\n                React.createElement(\"div\", { style: styles.perspectiveContainer },\n                    this.getPerspective(noProviders),\n                    React.createElement(\"div\", { style: styles.groupBy },\n                        React.createElement(GroupBy, { endDate: end_date, getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: noProviders, onItemClicked: onGroupByClicked, options: groupByOptions, orgReportPathsType: orgReportPathsType, perspective: perspective, showOrgs: orgReportPathsType, showTags: tagReportPathsType, startDate: start_date, tagReportPathsType: tagReportPathsType }))),\n                React.createElement(ExplorerFilter, { groupBy: groupBy, isDisabled: noProviders, onFilterAdded: onFilterAdded, onFilterRemoved: onFilterRemoved, perspective: perspective, query: query }))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { perspective }) => {\n    const userAccessQueryString = getUserAccessQuery(allUserAccessQuery);\n    const userAccess = userAccessSelectors.selectUserAccess(state, \"\" /* all */, userAccessQueryString);\n    const userAccessError = userAccessSelectors.selectUserAccessError(state, \"\" /* all */, userAccessQueryString);\n    const userAccessFetchStatus = userAccessSelectors.selectUserAccessFetchStatus(state, \"\" /* all */, userAccessQueryString);\n    const queryFromRoute = parseQuery(location.search);\n    const query = {\n        filter: Object.assign(Object.assign({}, baseQuery.filter), queryFromRoute.filter),\n        filter_by: queryFromRoute.filter_by || baseQuery.filter_by,\n        group_by: queryFromRoute.group_by || { [getGroupByDefault(perspective)]: '*' } || baseQuery.group_by,\n        order_by: queryFromRoute.order_by,\n        perspective,\n    };\n    const queryString = getQuery(Object.assign(Object.assign({}, query), { perspective: undefined }));\n    const awsProvidersQueryString = getProvidersQuery(awsProvidersQuery);\n    const awsProviders = providersSelectors.selectProviders(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const awsProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const azureProvidersQueryString = getProvidersQuery(azureProvidersQuery);\n    const azureProviders = providersSelectors.selectProviders(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const azureProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const gcpProvidersQueryString = getProvidersQuery(gcpProvidersQuery);\n    const gcpProviders = providersSelectors.selectProviders(state, \"gcp\" /* gcp */, gcpProvidersQueryString);\n    const gcpProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"gcp\" /* gcp */, gcpProvidersQueryString);\n    const ibmProvidersQueryString = getProvidersQuery(ibmProvidersQuery);\n    const ibmProviders = providersSelectors.selectProviders(state, \"ibm\" /* ibm */, ibmProvidersQueryString);\n    const ibmProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"ibm\" /* ibm */, ibmProvidersQueryString);\n    const ocpProvidersQueryString = getProvidersQuery(ocpProvidersQuery);\n    const ocpProviders = providersSelectors.selectProviders(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    const ocpProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    // Todo: temporarily request IBM separately with beta flag.\n    const ibmUserAccessQueryString = getUserAccessQuery(ibmUserAccessQuery);\n    const ibmUserAccess = userAccessSelectors.selectUserAccess(state, \"ibm\" /* ibm */, ibmUserAccessQueryString);\n    const ibmUserAccessError = userAccessSelectors.selectUserAccessError(state, \"ibm\" /* ibm */, ibmUserAccessQueryString);\n    const ibmUserAccessFetchStatus = userAccessSelectors.selectUserAccessFetchStatus(state, \"ibm\" /* ibm */, ibmUserAccessQueryString);\n    return {\n        awsProviders,\n        awsProvidersFetchStatus,\n        awsProvidersQueryString,\n        azureProviders,\n        azureProvidersFetchStatus,\n        azureProvidersQueryString,\n        gcpProviders,\n        gcpProvidersFetchStatus,\n        gcpProvidersQueryString,\n        ibmProviders,\n        ibmProvidersFetchStatus,\n        ibmProvidersQueryString,\n        ibmUserAccess,\n        ibmUserAccessError,\n        ibmUserAccessFetchStatus,\n        ibmUserAccessQueryString,\n        ocpProviders,\n        ocpProvidersFetchStatus,\n        ocpProvidersQueryString,\n        perspective,\n        query,\n        queryString,\n        userAccess,\n        userAccessError,\n        userAccessFetchStatus,\n        userAccessQueryString,\n    };\n});\nconst ExplorerHeader = withRouter(withTranslation()(connect(mapStateToProps, {})(ExplorerHeaderBase)));\nexport { ExplorerHeader };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    emptyState: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        display: 'flex',\n        justifyContent: 'center',\n        paddingTop: global_spacer_3xl.value,\n        height: '35vh',\n        width: '100%',\n    },\n    infoArrow: {\n        position: 'relative',\n    },\n    infoArrowDesc: {\n        bottom: global_spacer_xs.value,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    tableContainer: {\n        position: 'relative',\n        overflowX: 'auto',\n    },\n};\n","import './explorerTable.scss';\nimport { Bullseye, EmptyState, EmptyStateBody, EmptyStateIcon, Spinner } from '@patternfly/react-core';\nimport { CalculatorIcon } from '@patternfly/react-icons/dist/js/icons/calculator-icon';\nimport { nowrap, sortable, SortByDirection, Table, TableBody, TableHeader } from '@patternfly/react-table';\nimport { getQuery } from 'api/queries/awsQuery';\nimport { parseQuery } from 'api/queries/query';\nimport { EmptyFilterState } from 'components/state/emptyFilterState/emptyFilterState';\nimport { format, getDate, getMonth } from 'date-fns';\nimport { getGroupByOrgValue, getGroupByTagKey } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedExplorerReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { formatCurrency } from 'utils/formatValue';\nimport { styles } from './explorerTable.styles';\nimport { getDateRange, getDateRangeDefault } from './explorerUtils';\nclass ExplorerTableBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            columns: [],\n            rows: [],\n        };\n        this.initDatum = () => {\n            const { computedReportItemType = \"cost\" /* cost */, end_date, isAllSelected, perspective, query, report, selectedItems, start_date, t, } = this.props;\n            if (!query || !report) {\n                return;\n            }\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByOrg = getGroupByOrgValue(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            const rows = [];\n            // Add first column heading (i.e., name)\n            const columns = groupByTagKey || groupByOrg\n                ? [\n                    {\n                        cellTransforms: [nowrap],\n                        title: groupByOrg ? t('explorer.org_unit_column_title') : t('details.tag_names'),\n                    },\n                ]\n                : [\n                    {\n                        cellTransforms: [nowrap],\n                        orderBy: groupById === 'account' && perspective === \"aws\" /* aws */ ? 'account_alias' : groupById,\n                        title: t('details.resource_names', { groupBy: groupById }),\n                        transforms: [sortable],\n                    },\n                ];\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey ? groupByTagKey : groupByOrg ? 'org_entities' : groupById,\n                daily: true,\n            });\n            // Fill in missing columns\n            for (let currentDate = new Date(start_date + 'T00:00:00'); currentDate <= new Date(end_date + 'T00:00:00'); currentDate.setDate(currentDate.getDate() + 1)) {\n                const mapId = format(currentDate, 'yyyy-MM-dd');\n                // Add column headings\n                const mapIdDate = new Date(mapId + 'T00:00:00');\n                const date = getDate(mapIdDate);\n                const month = getMonth(mapIdDate);\n                columns.push({\n                    cellTransforms: [nowrap],\n                    orderBy: undefined,\n                    title: t('explorer.daily_column_title', { date, month }),\n                    transforms: undefined,\n                });\n                computedItems.map(rowItem => {\n                    const item = rowItem.get(mapId);\n                    if (!item) {\n                        rowItem.set(mapId, {\n                            date: mapId,\n                        });\n                    }\n                });\n            }\n            // Sort by date and fill in missing cells\n            computedItems.map(rowItem => {\n                const cells = [];\n                let desc; // First column description (i.e., show ID if different than label)\n                let name; // For first column resource name\n                let selectItem; // Save for row selection\n                const items = Array.from(rowItem.values()).sort((a, b) => {\n                    if (new Date(a.date) > new Date(b.date)) {\n                        return 1;\n                    }\n                    else if (new Date(a.date) < new Date(b.date)) {\n                        return -1;\n                    }\n                    else {\n                        return 0;\n                    }\n                });\n                items.map(item => {\n                    if (!name) {\n                        name = item && item.label && item.label !== null ? item.label : null;\n                    }\n                    if (!desc) {\n                        desc = item.id && item.id !== item.label ? React.createElement(\"div\", { style: styles.infoDescription }, item.id) : null;\n                    }\n                    if (item.id && !selectItem) {\n                        selectItem = item;\n                    }\n                    // Add row cells\n                    cells.push({\n                        title: item[computedReportItemType] && item[computedReportItemType].total\n                            ? formatCurrency(item[computedReportItemType].total.value)\n                            : t('explorer.no_data'),\n                    });\n                });\n                // Add first row cell (i.e., name)\n                cells.unshift({\n                    title: (React.createElement(\"div\", null,\n                        name,\n                        desc)),\n                });\n                rows.push({\n                    cells,\n                    disableSelection: selectItem.label === `no-${groupById}` || selectItem.label === `no-${groupByTagKey}`,\n                    item: selectItem,\n                    selected: isAllSelected || (selectedItems && selectedItems.find(val => val.id === selectItem.id) !== undefined),\n                });\n            });\n            const loadingRows = [\n                {\n                    heightAuto: true,\n                    cells: [\n                        {\n                            props: { colSpan: 5 },\n                            title: (React.createElement(Bullseye, null,\n                                React.createElement(\"div\", { style: { textAlign: 'center' } },\n                                    React.createElement(Spinner, { size: \"xl\" })))),\n                        },\n                    ],\n                },\n            ];\n            this.setState({\n                columns,\n                loadingRows,\n                rows,\n                sortBy: {},\n            });\n        };\n        this.getEmptyState = () => {\n            const { query, t } = this.props;\n            for (const val of Object.values(query.filter_by)) {\n                if (val !== '*') {\n                    return React.createElement(EmptyFilterState, { filter: val, showMargin: false });\n                }\n            }\n            return (React.createElement(EmptyState, null,\n                React.createElement(EmptyStateIcon, { icon: CalculatorIcon }),\n                React.createElement(EmptyStateBody, null, t('details.empty_state'))));\n        };\n        this.getSortBy = () => {\n            const { query } = this.props;\n            const { columns } = this.state;\n            let index = -1;\n            let direction = SortByDirection.asc;\n            if (query && query.order_by) {\n                for (const key of Object.keys(query.order_by)) {\n                    let c = 0;\n                    for (const column of columns) {\n                        if (column.orderBy === key) {\n                            direction = query.order_by[key] === 'asc' ? SortByDirection.asc : SortByDirection.desc;\n                            index = c + 1;\n                            break;\n                        }\n                        c++;\n                    }\n                }\n            }\n            return index > -1 ? { index, direction } : {};\n        };\n        this.handleOnSelect = (event, isSelected, rowId) => {\n            const { onSelected } = this.props;\n            let rows;\n            let items = [];\n            if (rowId === -1) {\n                rows = this.state.rows.map(row => {\n                    row.selected = isSelected;\n                    return row;\n                });\n            }\n            else {\n                rows = [...this.state.rows];\n                rows[rowId].selected = isSelected;\n                items = [rows[rowId].item];\n            }\n            this.setState({ rows }, () => {\n                if (onSelected) {\n                    onSelected(items, isSelected);\n                }\n            });\n        };\n        this.handleOnSort = (event, index, direction) => {\n            const { onSort } = this.props;\n            const { columns } = this.state;\n            if (onSort) {\n                const orderBy = columns[index - 1].orderBy;\n                const isSortAscending = direction === SortByDirection.asc;\n                onSort(orderBy, isSortAscending);\n            }\n        };\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n        this.handleOnSort = this.handleOnSort.bind(this);\n    }\n    componentDidMount() {\n        this.initDatum();\n    }\n    componentDidUpdate(prevProps) {\n        const { query, report, selectedItems } = this.props;\n        const currentReport = report && report.data ? JSON.stringify(report.data) : '';\n        const previousReport = prevProps.report && prevProps.report.data ? JSON.stringify(prevProps.report.data) : '';\n        if (getQuery(prevProps.query) !== getQuery(query) ||\n            previousReport !== currentReport ||\n            prevProps.selectedItems !== selectedItems) {\n            this.initDatum();\n        }\n    }\n    render() {\n        const { isLoading } = this.props;\n        const { columns, loadingRows, rows } = this.state;\n        return (React.createElement(\"div\", { style: styles.tableContainer },\n            React.createElement(Table, { \"aria-label\": \"explorer-table\", canSelectAll: false, cells: columns, className: \"explorerTableOverride\", rows: isLoading ? loadingRows : rows, sortBy: this.getSortBy(), onSelect: isLoading ? undefined : this.handleOnSelect, onSort: this.handleOnSort },\n                React.createElement(TableHeader, null),\n                React.createElement(TableBody, null)),\n            Boolean(rows.length === 0) && React.createElement(\"div\", { style: styles.emptyState }, this.getEmptyState())));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, { perspective }) => {\n    const queryFromRoute = parseQuery(location.search);\n    const dateRange = getDateRangeDefault(queryFromRoute);\n    const { end_date, start_date } = getDateRange(getDateRangeDefault(queryFromRoute));\n    return {\n        dateRange,\n        end_date,\n        perspective,\n        start_date,\n    };\n});\nconst mapDispatchToProps = {};\nconst ExplorerTableConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerTableBase);\nconst ExplorerTable = withTranslation()(ExplorerTableConnect);\nexport { ExplorerTable };\n","import { DataToolbar } from 'pages/views/components/dataToolbar/dataToolbar';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nexport class ExplorerToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {};\n        this.state = Object.assign({}, this.defaultState);\n    }\n    render() {\n        const { isAllSelected, isBulkSelectDisabled, isExportDisabled, itemsPerPage, itemsTotal, onBulkSelected, onExportClicked, pagination, selectedItems, } = this.props;\n        return (React.createElement(DataToolbar, { isAllSelected: isAllSelected, isBulkSelectDisabled: isBulkSelectDisabled, isExportDisabled: isExportDisabled, itemsPerPage: itemsPerPage, itemsTotal: itemsTotal, onBulkSelected: onBulkSelected, onExportClicked: onExportClicked, pagination: pagination, selectedItems: selectedItems, showBulkSelect: true, showExport: true }));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n// TBD...\n};\nconst ExplorerToolbarConnect = connect(mapStateToProps, mapDispatchToProps)(ExplorerToolbarBase);\nconst ExplorerToolbar = withTranslation()(ExplorerToolbarConnect);\nexport { ExplorerToolbar };\n","import { Pagination, PaginationVariant } from '@patternfly/react-core';\nimport { getProvidersQuery } from 'api/queries/providersQuery';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { orgUnitIdKey, tagPrefix } from 'api/queries/query';\nimport { getUserAccessQuery } from 'api/queries/userAccessQuery';\nimport Loading from 'pages/state/loading';\nimport NoData from 'pages/state/noData';\nimport NoProviders from 'pages/state/noProviders';\nimport NotAvailable from 'pages/state/notAvailable';\nimport { ExportModal } from 'pages/views/components/export/exportModal';\nimport { getGroupByOrgValue, getGroupByTagKey } from 'pages/views/utils/groupBy';\nimport { hasData } from 'pages/views/utils/providers';\nimport { addQueryFilter, removeQueryFilter } from 'pages/views/utils/query';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { awsProvidersQuery, azureProvidersQuery, gcpProvidersQuery, ibmProvidersQuery, ocpProvidersQuery, providersSelectors, } from 'store/providers';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { allUserAccessQuery, ibmUserAccessQuery, userAccessSelectors } from 'store/userAccess';\nimport { getIdKeyForGroupBy } from 'utils/computedReport/getComputedExplorerReportItems';\nimport { getUnsortedComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { isAwsAvailable, isAzureAvailable, isGcpAvailable, isIbmAvailable, isOcpAvailable } from 'utils/userAccess';\nimport { styles } from './explorer.styles';\nimport { ExplorerChart } from './explorerChart';\nimport { ExplorerHeader } from './explorerHeader';\nimport { ExplorerTable } from './explorerTable';\nimport { ExplorerToolbar } from './explorerToolbar';\nimport { baseQuery, getComputedReportItemType, getDateRange, getDateRangeDefault, getGroupByDefault, getPerspectiveDefault, getReportPathsType, getReportType, getRouteForQuery, } from './explorerUtils';\nclass Explorer extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            columns: [],\n            isAllSelected: false,\n            isExportModalOpen: false,\n            rows: [],\n            selectedItems: [],\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getComputedItems = () => {\n            const { query, report } = this.props;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByOrg = getGroupByOrgValue(query);\n            const groupByTagKey = getGroupByTagKey(query);\n            const computedItems = getUnsortedComputedReportItems({\n                report,\n                idKey: groupByTagKey ? groupByTagKey : groupByOrg ? 'org_entities' : groupById,\n                daily: false,\n            });\n            return computedItems;\n        };\n        this.getExportModal = (computedItems) => {\n            const { perspective, query, report } = this.props;\n            const { isAllSelected, isExportModalOpen, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(ExportModal, { isAllItems: (isAllSelected || selectedItems.length === itemsTotal) && computedItems.length > 0, groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isOpen: isExportModalOpen, items: selectedItems, onClose: this.handleExportModalClose, query: query, reportPathsType: getReportPathsType(perspective), resolution: \"daily\", showAggregateType: false, showTimeScope: false }));\n        };\n        this.getPagination = (isBottom = false) => {\n            const { report } = this.props;\n            const count = report && report.meta ? report.meta.count : 0;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = report && report.meta && report.meta.filter && report.meta.filter.offset\n                ? report.meta.filter.offset\n                : baseQuery.filter.offset;\n            const page = offset / limit + 1;\n            return (React.createElement(Pagination, { isCompact: !isBottom, itemCount: count, onPerPageSelect: this.handlePerPageSelect, onSetPage: this.handleSetPage, page: page, perPage: limit, variant: isBottom ? PaginationVariant.bottom : PaginationVariant.top, widgetId: \"`pagination${isBottom ? '-bottom' : ''}`\" }));\n        };\n        this.getTable = () => {\n            const { perspective, query, report, reportFetchStatus } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const groupById = getIdKeyForGroupBy(query.group_by);\n            const groupByTagKey = getGroupByTagKey(query);\n            return (React.createElement(ExplorerTable, { computedReportItemType: getComputedReportItemType(perspective), groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, isAllSelected: isAllSelected, isLoading: reportFetchStatus === 1 /* inProgress */, onSelected: this.handleSelected, onSort: this.handleSort, perspective: perspective, query: query, report: report, selectedItems: selectedItems }));\n        };\n        this.getToolbar = (computedItems) => {\n            const { report } = this.props;\n            const { isAllSelected, selectedItems } = this.state;\n            const itemsTotal = report && report.meta ? report.meta.count : 0;\n            return (React.createElement(ExplorerToolbar, { isAllSelected: isAllSelected, isExportDisabled: computedItems.length === 0 || (!isAllSelected && selectedItems.length === 0), itemsPerPage: computedItems.length, itemsTotal: itemsTotal, onBulkSelected: this.handleBulkSelected, onExportClicked: this.handleExportModalOpen, pagination: this.getPagination(), selectedItems: selectedItems }));\n        };\n        this.handleBulkSelected = (action) => {\n            const { isAllSelected } = this.state;\n            if (action === 'none') {\n                this.setState({ isAllSelected: false, selectedItems: [] });\n            }\n            else if (action === 'page') {\n                this.setState({\n                    isAllSelected: false,\n                    selectedItems: this.getComputedItems(),\n                });\n            }\n            else if (action === 'all') {\n                this.setState({ isAllSelected: !isAllSelected, selectedItems: [] });\n            }\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleFilterAdded = (filterType, filterValue) => {\n            const { history, query } = this.props;\n            const filteredQuery = addQueryFilter(query, filterType, filterValue);\n            history.replace(getRouteForQuery(history, filteredQuery, true));\n        };\n        this.handleFilterRemoved = (filterType, filterValue) => {\n            const { history, query } = this.props;\n            const filteredQuery = removeQueryFilter(query, filterType, filterValue);\n            history.replace(getRouteForQuery(history, filteredQuery, true));\n        };\n        this.handleGroupByClick = groupBy => {\n            const { history, query } = this.props;\n            let groupByKey = groupBy;\n            let value = '*';\n            // Check for for org units\n            const index = groupBy.indexOf(orgUnitIdKey);\n            if (index !== -1) {\n                groupByKey = orgUnitIdKey.substring(0, orgUnitIdKey.length);\n                value = groupBy.slice(orgUnitIdKey.length);\n            }\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { \n                // filter_by: undefined, // Preserve filter -- see https://issues.redhat.com/browse/COST-1090\n                group_by: {\n                    [groupByKey]: value,\n                }, order_by: undefined });\n            history.replace(getRouteForQuery(history, newQuery, true));\n            this.setState({ isAllSelected: false, selectedItems: [] });\n        };\n        this.handlePerPageSelect = (_event, perPage) => {\n            const { history, query } = this.props;\n            const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n            newQuery.filter = Object.assign(Object.assign({}, query.filter), { limit: perPage });\n            const filteredQuery = getRouteForQuery(history, newQuery, true);\n            history.replace(filteredQuery);\n        };\n        this.handlePerspectiveClick = () => {\n            this.setState({ isAllSelected: false, selectedItems: [] });\n        };\n        this.handleSelected = (items, isSelected = false) => {\n            const { isAllSelected, selectedItems } = this.state;\n            let newItems = [...(isAllSelected ? this.getComputedItems() : selectedItems)];\n            if (items && items.length > 0) {\n                if (isSelected) {\n                    items.map(item => newItems.push(item));\n                }\n                else {\n                    items.map(item => {\n                        newItems = newItems.filter(val => val.id !== item.id);\n                    });\n                }\n            }\n            this.setState({ isAllSelected: false, selectedItems: newItems });\n        };\n        this.handleSetPage = (event, pageNumber) => {\n            const { history, query, report } = this.props;\n            const limit = report && report.meta && report.meta.filter && report.meta.filter.limit\n                ? report.meta.filter.limit\n                : baseQuery.filter.limit;\n            const offset = pageNumber * limit - limit;\n            const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n            newQuery.filter = Object.assign(Object.assign({}, query.filter), { offset });\n            const filteredQuery = getRouteForQuery(history, newQuery);\n            history.replace(filteredQuery);\n        };\n        this.handleSort = (sortType, isSortAscending) => {\n            const { history, query } = this.props;\n            const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n            newQuery.order_by = {};\n            newQuery.order_by[sortType] = isSortAscending ? 'asc' : 'desc';\n            const filteredQuery = getRouteForQuery(history, newQuery);\n            history.replace(filteredQuery);\n        };\n        this.updateReport = () => {\n            const { dateRange, fetchReport, history, location, perspective, query, queryString } = this.props;\n            if (!location.search) {\n                history.replace(getRouteForQuery(history, {\n                    filter_by: query ? query.filter_by : undefined,\n                    group_by: query ? query.group_by : undefined,\n                    order_by: query ? query.order_by : undefined,\n                    dateRange,\n                }));\n            }\n            else if (perspective) {\n                fetchReport(getReportPathsType(perspective), getReportType(perspective), queryString);\n            }\n        };\n        this.handleBulkSelected = this.handleBulkSelected.bind(this);\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleFilterAdded = this.handleFilterAdded.bind(this);\n        this.handleFilterRemoved = this.handleFilterRemoved.bind(this);\n        this.handlePerPageSelect = this.handlePerPageSelect.bind(this);\n        this.handlePerspectiveClick = this.handlePerspectiveClick.bind(this);\n        this.handleSelected = this.handleSelected.bind(this);\n        this.handleSetPage = this.handleSetPage.bind(this);\n        this.handleSort = this.handleSort.bind(this);\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps, prevState) {\n        const { location, report, reportError, queryString } = this.props;\n        const { selectedItems } = this.state;\n        const newQuery = prevProps.queryString !== queryString;\n        const noReport = !report && !reportError;\n        const noLocation = !location.search;\n        const newItems = prevState.selectedItems !== selectedItems;\n        if (newQuery || noReport || noLocation || newItems) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { awsProviders, awsProvidersFetchStatus, azureProviders, azureProvidersFetchStatus, gcpProviders, gcpProvidersFetchStatus, ibmProviders, ibmProvidersFetchStatus, ibmUserAccess, ibmUserAccessFetchStatus, ocpProviders, ocpProvidersFetchStatus, perspective, userAccessFetchStatus, query, report, reportError, reportFetchStatus, t, userAccess, } = this.props;\n        const isLoading = awsProvidersFetchStatus === 1 /* inProgress */ ||\n            azureProvidersFetchStatus === 1 /* inProgress */ ||\n            gcpProvidersFetchStatus === 1 /* inProgress */ ||\n            ibmProvidersFetchStatus === 1 /* inProgress */ ||\n            ocpProvidersFetchStatus === 1 /* inProgress */ ||\n            userAccessFetchStatus === 1 /* inProgress */ ||\n            ibmUserAccessFetchStatus === 1 /* inProgress */;\n        const groupById = getIdKeyForGroupBy(query.group_by);\n        const groupByTagKey = getGroupByTagKey(query);\n        const computedItems = this.getComputedItems();\n        const itemsTotal = report && report.meta ? report.meta.count : 0;\n        const title = t('navigation.explorer');\n        // Test for no providers\n        const noProviders = !(isAwsAvailable(userAccess, awsProviders, awsProvidersFetchStatus) ||\n            isAzureAvailable(userAccess, azureProviders, azureProvidersFetchStatus) ||\n            isGcpAvailable(userAccess, gcpProviders, gcpProvidersFetchStatus) ||\n            isIbmAvailable(ibmUserAccess, ibmProviders, ibmProvidersFetchStatus) ||\n            isOcpAvailable(userAccess, ocpProviders, ocpProvidersFetchStatus));\n        // Note: Providers are fetched via the InactiveSources component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: title });\n        }\n        else if (isLoading) {\n            return React.createElement(Loading, { title: title });\n        }\n        else if (noProviders) {\n            return React.createElement(NoProviders, { title: title });\n        }\n        else if (!(hasData(awsProviders) ||\n            hasData(azureProviders) ||\n            hasData(gcpProviders) ||\n            hasData(ibmProviders) ||\n            hasData(ocpProviders))) {\n            return React.createElement(NoData, { title: title });\n        }\n        return (React.createElement(\"div\", { style: styles.explorer },\n            React.createElement(ExplorerHeader, { groupBy: groupByTagKey ? `${tagPrefix}${groupByTagKey}` : groupById, onFilterAdded: this.handleFilterAdded, onFilterRemoved: this.handleFilterRemoved, onGroupByClicked: this.handleGroupByClick, onPerspectiveClicked: this.handlePerspectiveClick, perspective: perspective }),\n            itemsTotal > 0 && (React.createElement(\"div\", { style: styles.chartContent },\n                React.createElement(\"div\", { style: styles.chartContainer },\n                    React.createElement(ExplorerChart, { computedReportItemType: getComputedReportItemType(perspective), perspective: perspective })))),\n            React.createElement(\"div\", { style: styles.tableContent },\n                this.getToolbar(computedItems),\n                this.getExportModal(computedItems),\n                reportFetchStatus === 1 /* inProgress */ ? (React.createElement(Loading, null)) : (React.createElement(React.Fragment, null,\n                    React.createElement(\"div\", { style: styles.tableContainer }, this.getTable()),\n                    React.createElement(\"div\", { style: styles.paginationContainer },\n                        React.createElement(\"div\", { style: styles.pagination }, this.getPagination(true))))))));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const userAccessQueryString = getUserAccessQuery(allUserAccessQuery);\n    const userAccess = userAccessSelectors.selectUserAccess(state, \"\" /* all */, userAccessQueryString);\n    const userAccessError = userAccessSelectors.selectUserAccessError(state, \"\" /* all */, userAccessQueryString);\n    const userAccessFetchStatus = userAccessSelectors.selectUserAccessFetchStatus(state, \"\" /* all */, userAccessQueryString);\n    const awsProvidersQueryString = getProvidersQuery(awsProvidersQuery);\n    const awsProviders = providersSelectors.selectProviders(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const awsProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"aws\" /* aws */, awsProvidersQueryString);\n    const azureProvidersQueryString = getProvidersQuery(azureProvidersQuery);\n    const azureProviders = providersSelectors.selectProviders(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const azureProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"azure\" /* azure */, azureProvidersQueryString);\n    const gcpProvidersQueryString = getProvidersQuery(gcpProvidersQuery);\n    const gcpProviders = providersSelectors.selectProviders(state, \"gcp\" /* gcp */, gcpProvidersQueryString);\n    const gcpProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"gcp\" /* gcp */, gcpProvidersQueryString);\n    const ibmProvidersQueryString = getProvidersQuery(ibmProvidersQuery);\n    const ibmProviders = providersSelectors.selectProviders(state, \"ibm\" /* ibm */, ibmProvidersQueryString);\n    const ibmProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"ibm\" /* ibm */, ibmProvidersQueryString);\n    const ocpProvidersQueryString = getProvidersQuery(ocpProvidersQuery);\n    const ocpProviders = providersSelectors.selectProviders(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    const ocpProvidersFetchStatus = providersSelectors.selectProvidersFetchStatus(state, \"ocp\" /* ocp */, ocpProvidersQueryString);\n    // Todo: temporarily request IBM separately with beta flag.\n    const ibmUserAccessQueryString = getUserAccessQuery(ibmUserAccessQuery);\n    const ibmUserAccess = userAccessSelectors.selectUserAccess(state, \"ibm\" /* ibm */, ibmUserAccessQueryString);\n    const ibmUserAccessError = userAccessSelectors.selectUserAccessError(state, \"ibm\" /* ibm */, ibmUserAccessQueryString);\n    const ibmUserAccessFetchStatus = userAccessSelectors.selectUserAccessFetchStatus(state, \"ibm\" /* ibm */, ibmUserAccessQueryString);\n    // Cost Report\n    const queryFromRoute = parseQuery(location.search);\n    const dateRange = getDateRangeDefault(queryFromRoute);\n    const { end_date, start_date } = getDateRange(getDateRangeDefault(queryFromRoute));\n    const perspective = getPerspectiveDefault({\n        awsProviders,\n        awsProvidersFetchStatus,\n        azureProviders,\n        azureProvidersFetchStatus,\n        gcpProviders,\n        gcpProvidersFetchStatus,\n        ibmProviders,\n        ibmProvidersFetchStatus,\n        ocpProviders,\n        ocpProvidersFetchStatus,\n        queryFromRoute,\n        userAccess,\n    });\n    const query = {\n        filter: Object.assign(Object.assign({}, baseQuery.filter), queryFromRoute.filter),\n        filter_by: queryFromRoute.filter_by || baseQuery.filter_by,\n        group_by: queryFromRoute.group_by || { [getGroupByDefault(perspective)]: '*' } || baseQuery.group_by,\n        order_by: queryFromRoute.order_by,\n        perspective,\n        dateRange,\n        end_date,\n        start_date,\n    };\n    const queryString = getQuery(Object.assign(Object.assign({}, query), { perspective: undefined, dateRange: undefined }));\n    const reportPathsType = getReportPathsType(perspective);\n    const reportType = getReportType(perspective);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportError = reportSelectors.selectReportError(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        awsProviders,\n        awsProvidersFetchStatus,\n        awsProvidersQueryString,\n        azureProviders,\n        azureProvidersFetchStatus,\n        azureProvidersQueryString,\n        dateRange,\n        gcpProviders,\n        gcpProvidersFetchStatus,\n        gcpProvidersQueryString,\n        ibmProviders,\n        ibmProvidersFetchStatus,\n        ibmProvidersQueryString,\n        ibmUserAccess,\n        ibmUserAccessError,\n        ibmUserAccessFetchStatus,\n        ibmUserAccessQueryString,\n        ocpProviders,\n        ocpProvidersFetchStatus,\n        ocpProvidersQueryString,\n        perspective,\n        query,\n        queryString,\n        report,\n        reportError,\n        reportFetchStatus,\n        userAccess,\n        userAccessError,\n        userAccessFetchStatus,\n        userAccessQueryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nexport default withTranslation()(connect(mapStateToProps, mapDispatchToProps)(Explorer));\n","const hasAccess = (userAccess, userAccessType) => {\n    let result = false;\n    if (userAccess && Array.isArray(userAccess.data)) {\n        // Used with multiple types (e.g., type=)\n        const data = userAccess.data.find(d => d.type === userAccessType);\n        result = data && data.access;\n    }\n    else {\n        // Used with type=any, type=GCP, etc.\n        result = userAccess && userAccess.data === true;\n    }\n    return result;\n};\nconst hasProviders = (providers, providersFetchStatus) => {\n    let result = false;\n    if (providersFetchStatus === 2 /* complete */) {\n        // providers API returns empty data array for no sources\n        result = providers !== undefined && providers.meta !== undefined && providers.meta.count > 0;\n    }\n    return result;\n};\n// Returns true if user has access to AWS\nexport const hasAwsAccess = (userAccess) => {\n    return hasAccess(userAccess, \"aws\" /* aws */);\n};\n// Returns true if user has access to AWS and at least one source provider\nexport const isAwsAvailable = (userAccess, awsProviders, awsProvidersFetchStatus) => {\n    return hasAwsAccess(userAccess) && hasProviders(awsProviders, awsProvidersFetchStatus);\n};\n// Returns true if user has access to Azure\nexport const hasAzureAccess = (userAccess) => {\n    return hasAccess(userAccess, \"azure\" /* azure */);\n};\n// Returns true if user has access to Azure and at least one source provider\nexport const isAzureAvailable = (userAccess, azureProviders, azureProvidersFetchStatus) => {\n    return hasAzureAccess(userAccess) && hasProviders(azureProviders, azureProvidersFetchStatus);\n};\n// Returns true if user has access to cost models\nexport const hasCostModelAccess = (userAccess) => {\n    return hasAccess(userAccess, \"cost_model\" /* cost_model */);\n};\n// Returns true if user has access to GCP\nexport const hasGcpAccess = (userAccess) => {\n    return hasAccess(userAccess, \"gcp\" /* gcp */);\n};\n// Returns true if user has access to GCP and at least one source provider\nexport const isGcpAvailable = (userAccess, gcpProviders, gcpsProvidersFetchStatus) => {\n    return hasAccess(userAccess, \"gcp\" /* gcp */) && hasProviders(gcpProviders, gcpsProvidersFetchStatus);\n};\n// Returns true if user has access to IBM\nexport const hasIbmAccess = (userAccess) => {\n    return hasGcpAccess(userAccess);\n};\n// Returns true if user has access to IBM and at least one source provider\nexport const isIbmAvailable = (userAccess, ibmProviders, ibmProvidersFetchStatus) => {\n    return hasIbmAccess(userAccess) && hasProviders(ibmProviders, ibmProvidersFetchStatus);\n};\n// Returns true if user has access to OCP\nexport const hasOcpAccess = (userAccess) => {\n    return hasAccess(userAccess, \"ocp\" /* ocp */);\n};\n// Returns true if user has access to OCP and at least one source provider\nexport const isOcpAvailable = (userAccess, ocpProviders, ocpProvidersFetchStatus) => {\n    return hasOcpAccess(userAccess) && hasProviders(ocpProviders, ocpProvidersFetchStatus);\n};\n","import _orderBy from \"lodash/orderBy\";\nimport _keys from \"lodash/keys\";\nimport _assign from \"lodash/assign\";\nimport React from \"react\";\nimport { Helpers, Scale, Wrapper } from \"victory-core\";\nvar fallbackProps = {\n  width: 450,\n  height: 300,\n  padding: 50\n}; // Assumes data in `datasets` is sorted by `Data.getData`.\n\nfunction fillData(props, datasets) {\n  var fillInMissingData = props.fillInMissingData;\n  var xMap = datasets.reduce(function (prev, dataset) {\n    dataset.forEach(function (datum) {\n      prev[datum._x instanceof Date ? datum._x.getTime() : datum._x] = true;\n    });\n    return prev;\n  }, {});\n\n  var xKeys = _keys(xMap).map(function (k) {\n    return +k;\n  });\n\n  var xArr = _orderBy(xKeys);\n\n  return datasets.map(function (dataset) {\n    var indexOffset = 0;\n    var isDate = dataset[0] && dataset[0]._x instanceof Date;\n    var filledInData = xArr.map(function (x, index) {\n      x = +x;\n      var datum = dataset[index - indexOffset];\n\n      if (datum) {\n        var x1 = isDate ? datum._x.getTime() : datum._x;\n\n        if (x1 === x) {\n          return datum;\n        } else {\n          indexOffset++;\n          var y = fillInMissingData ? 0 : null;\n          x = isDate ? new Date(x) : x;\n          return {\n            x: x,\n            y: y,\n            _x: x,\n            _y: y\n          };\n        }\n      } else {\n        var _y = fillInMissingData ? 0 : null;\n\n        x = isDate ? new Date(x) : x;\n        return {\n          x: x,\n          y: _y,\n          _x: x,\n          _y: _y\n        };\n      }\n    });\n    return filledInData;\n  });\n}\n\nfunction getY0(datum, index, datasets) {\n  if (datum.y0) {\n    return datum.y0;\n  }\n\n  var y = datum._y;\n  var previousDatasets = datasets.slice(0, index);\n  var previousPoints = previousDatasets.reduce(function (prev, dataset) {\n    return prev.concat(dataset.filter(function (previousDatum) {\n      return datum._x instanceof Date ? previousDatum._x.getTime() === datum._x.getTime() : previousDatum._x === datum._x;\n    }).map(function (previousDatum) {\n      return previousDatum._y || 0;\n    }));\n  }, []);\n  var y0 = previousPoints.length && previousPoints.reduce(function (memo, value) {\n    var sameSign = y < 0 && value < 0 || y >= 0 && value >= 0;\n    return sameSign ? +value + memo : memo;\n  }, 0);\n  return previousPoints.some(function (point) {\n    return point instanceof Date;\n  }) ? new Date(y0) : y0;\n}\n/* eslint-disable no-nested-ternary */\n\n\nfunction addLayoutData(props, datasets, index) {\n  var xOffset = props.xOffset || 0;\n  return datasets[index].map(function (datum) {\n    var yOffset = getY0(datum, index, datasets) || 0;\n    return _assign({}, datum, {\n      _y0: !(datum._y instanceof Date) ? yOffset : yOffset ? new Date(yOffset) : datum._y,\n      _y1: datum._y === null ? null : datum._y instanceof Date ? new Date(+datum._y + +yOffset) : datum._y + yOffset,\n      _x1: datum._x === null ? null : datum._x instanceof Date ? new Date(+datum._x + +xOffset) : datum._x + xOffset\n    });\n  });\n}\n/* eslint-enable no-nested-ternary */\n\n\nfunction stackData(props, childComponents) {\n  var dataFromChildren = Wrapper.getDataFromChildren(props, childComponents);\n  var datasets = fillData(props, dataFromChildren);\n  return datasets.map(function (d, i) {\n    return addLayoutData(props, datasets, i);\n  });\n}\n\nfunction getCalculatedProps(props, childComponents) {\n  childComponents = childComponents || React.Children.toArray(props.children);\n  var role = \"stack\";\n  props = Helpers.modifyProps(props, fallbackProps, role);\n  var style = Wrapper.getStyle(props.theme, props.style, role);\n  var categories = props.categories || Wrapper.getCategories(props, childComponents);\n  var datasets = props.datasets || stackData(props, childComponents);\n  var children = childComponents.map(function (c, i) {\n    return React.cloneElement(c, {\n      data: datasets[i]\n    });\n  });\n  var domain = {\n    x: Wrapper.getDomain(_assign({}, props, {\n      categories: categories\n    }), \"x\", children),\n    y: Wrapper.getDomain(_assign({}, props, {\n      categories: categories\n    }), \"y\", children)\n  };\n  var range = props.range || {\n    x: Helpers.getRange(props, \"x\"),\n    y: Helpers.getRange(props, \"y\")\n  };\n  var baseScale = {\n    x: Scale.getScaleFromProps(props, \"x\") || Wrapper.getScale(props, \"x\"),\n    y: Scale.getScaleFromProps(props, \"y\") || Wrapper.getScale(props, \"y\")\n  };\n  var scale = {\n    x: baseScale.x.domain(domain.x).range(props.horizontal ? range.y : range.x),\n    y: baseScale.y.domain(domain.y).range(props.horizontal ? range.x : range.y)\n  };\n  var _props = props,\n      colorScale = _props.colorScale,\n      horizontal = _props.horizontal;\n  return {\n    datasets: datasets,\n    categories: categories,\n    range: range,\n    domain: domain,\n    horizontal: horizontal,\n    scale: scale,\n    style: style,\n    colorScale: colorScale,\n    role: role\n  };\n}\n\nfunction getLabels(props, datasets, index) {\n  if (!props.labels) {\n    return undefined;\n  }\n\n  return datasets.length === index + 1 ? props.labels : undefined;\n}\n\nfunction getChildProps(props, calculatedProps) {\n  var categories = calculatedProps.categories,\n      domain = calculatedProps.domain,\n      range = calculatedProps.range,\n      scale = calculatedProps.scale,\n      horizontal = calculatedProps.horizontal;\n  return {\n    height: props.height,\n    width: props.width,\n    padding: Helpers.getPadding(props),\n    standalone: false,\n    theme: props.theme,\n    categories: categories,\n    domain: domain,\n    range: range,\n    scale: scale,\n    horizontal: horizontal\n  };\n}\n\nfunction getColorScale(props, child) {\n  var role = child.type && child.type.role;\n  var colorScaleOptions = child.props.colorScale || props.colorScale;\n\n  if (role !== \"group\" && role !== \"stack\") {\n    return undefined;\n  }\n\n  return props.theme ? colorScaleOptions || props.theme.props.colorScale : colorScaleOptions;\n}\n\nfunction getChildren(props, childComponents, calculatedProps) {\n  props = Helpers.modifyProps(props, fallbackProps, \"stack\");\n  childComponents = childComponents || React.Children.toArray(props.children);\n  calculatedProps = calculatedProps || getCalculatedProps(props, childComponents);\n  var _calculatedProps = calculatedProps,\n      datasets = _calculatedProps.datasets;\n  var childProps = getChildProps(props, calculatedProps);\n  var parentName = props.name || \"stack\";\n  return childComponents.map(function (child, index) {\n    var role = child.type && child.type.role;\n    var data = datasets[index];\n    var style = Wrapper.getChildStyle(child, index, calculatedProps);\n    var labels = props.labels ? getLabels(props, datasets, index) : child.props.labels;\n    var name = child.props.name || \"\".concat(parentName, \"-\").concat(role, \"-\").concat(index);\n    return React.cloneElement(child, _assign({\n      key: \"\".concat(name, \"-key-\").concat(index),\n      labels: labels,\n      name: name,\n      domainPadding: child.props.domainPadding || props.domainPadding,\n      theme: props.theme,\n      labelComponent: props.labelComponent || child.props.labelComponent,\n      style: style,\n      colorScale: getColorScale(props, child),\n      data: data,\n      polar: props.polar\n    }, childProps));\n  });\n}\n\nexport { getChildren, getCalculatedProps };","import _isEmpty from \"lodash/isEmpty\";\nimport _defaults from \"lodash/defaults\";\nimport _assign from \"lodash/assign\";\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nimport PropTypes from \"prop-types\";\nimport React from \"react\";\nimport { Helpers, VictoryContainer, VictoryTheme, CommonProps, Wrapper, PropTypes as CustomPropTypes } from \"victory-core\";\nimport { VictorySharedEvents } from \"victory-shared-events\";\nimport { getChildren, getCalculatedProps } from \"./helper-methods\";\nimport isEqual from \"react-fast-compare\";\nvar fallbackProps = {\n  width: 450,\n  height: 300,\n  padding: 50\n};\n\nvar VictoryStack =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(VictoryStack, _React$Component);\n\n  function VictoryStack(props) {\n    var _this;\n\n    _classCallCheck(this, VictoryStack);\n\n    _this = _possibleConstructorReturn(this, (VictoryStack.__proto__ || Object.getPrototypeOf(VictoryStack)).call(this, props));\n\n    if (props.animate) {\n      _this.state = {\n        nodesShouldLoad: false,\n        nodesDoneLoad: false,\n        animating: true\n      };\n      _this.setAnimationState = Wrapper.setAnimationState.bind(_assertThisInitialized(_this));\n    }\n\n    return _this;\n  }\n\n  _createClass(VictoryStack, [{\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps) {\n      if (this.props.animate) {\n        if (!isEqual(this.props, nextProps)) {\n          this.setAnimationState(this.props, nextProps);\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }, {\n    key: \"getNewChildren\",\n    value: function getNewChildren(props, childComponents, calculatedProps) {\n      var children = getChildren(props, childComponents, calculatedProps);\n      var getAnimationProps = Wrapper.getAnimationProps.bind(this);\n      var newChildren = children.map(function (child, index) {\n        var childProps = _assign({\n          animate: getAnimationProps(props, child, index)\n        }, child.props);\n\n        return React.cloneElement(child, childProps);\n      });\n      /*\n        reverse render order for children of `VictoryStack` so that higher children in the stack\n        are rendered behind lower children. This looks nicer for stacked bars with cornerRadius, and\n        areas with strokes\n      */\n\n      return newChildren.reverse();\n    }\n  }, {\n    key: \"renderContainer\",\n    value: function renderContainer(containerComponent, props) {\n      var containerProps = _defaults({}, containerComponent.props, props);\n\n      return React.cloneElement(containerComponent, containerProps);\n    }\n  }, {\n    key: \"getContainerProps\",\n    value: function getContainerProps(props, calculatedProps) {\n      var width = props.width,\n          height = props.height,\n          standalone = props.standalone,\n          theme = props.theme,\n          polar = props.polar,\n          horizontal = props.horizontal,\n          name = props.name;\n      var domain = calculatedProps.domain,\n          scale = calculatedProps.scale,\n          style = calculatedProps.style,\n          origin = calculatedProps.origin;\n      return {\n        domain: domain,\n        scale: scale,\n        width: width,\n        height: height,\n        standalone: standalone,\n        theme: theme,\n        style: style.parent,\n        horizontal: horizontal,\n        polar: polar,\n        origin: origin,\n        name: name\n      };\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var role = this.constructor.role;\n      var props = this.state && this.state.nodesWillExit ? this.state.oldProps || this.props : this.props;\n      var modifiedProps = Helpers.modifyProps(props, fallbackProps, role);\n      var eventKey = modifiedProps.eventKey,\n          containerComponent = modifiedProps.containerComponent,\n          standalone = modifiedProps.standalone,\n          groupComponent = modifiedProps.groupComponent,\n          externalEventMutations = modifiedProps.externalEventMutations;\n      var childComponents = React.Children.toArray(modifiedProps.children);\n      var calculatedProps = getCalculatedProps(modifiedProps, childComponents);\n      var newChildren = this.getNewChildren(modifiedProps, childComponents, calculatedProps);\n      var containerProps = standalone ? this.getContainerProps(modifiedProps, calculatedProps) : {};\n      var container = standalone ? this.renderContainer(containerComponent, containerProps) : groupComponent;\n      var events = Wrapper.getAllEvents(props);\n\n      if (!_isEmpty(events)) {\n        return React.createElement(VictorySharedEvents, {\n          container: container,\n          eventKey: eventKey,\n          events: events,\n          externalEventMutations: externalEventMutations\n        }, newChildren);\n      }\n\n      return React.cloneElement(container, container.props, newChildren);\n    }\n  }]);\n\n  return VictoryStack;\n}(React.Component);\n\nObject.defineProperty(VictoryStack, \"displayName\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: \"VictoryStack\"\n});\nObject.defineProperty(VictoryStack, \"role\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: \"stack\"\n});\nObject.defineProperty(VictoryStack, \"propTypes\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: _objectSpread({}, CommonProps.baseProps, {\n    bins: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([CustomPropTypes.nonNegative, PropTypes.instanceOf(Date)])), CustomPropTypes.nonNegative]),\n    categories: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.shape({\n      x: PropTypes.arrayOf(PropTypes.string),\n      y: PropTypes.arrayOf(PropTypes.string)\n    })]),\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n    colorScale: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.string), PropTypes.oneOf([\"grayscale\", \"qualitative\", \"heatmap\", \"warm\", \"cool\", \"red\", \"green\", \"blue\"])]),\n    fillInMissingData: PropTypes.bool,\n    horizontal: PropTypes.bool,\n    labelComponent: PropTypes.element,\n    labels: PropTypes.oneOfType([PropTypes.func, PropTypes.array]),\n    style: PropTypes.shape({\n      parent: PropTypes.object,\n      data: PropTypes.object,\n      labels: PropTypes.object\n    }),\n    xOffset: PropTypes.number\n  })\n});\nObject.defineProperty(VictoryStack, \"defaultProps\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: {\n    containerComponent: React.createElement(VictoryContainer, null),\n    groupComponent: React.createElement(\"g\", null),\n    standalone: true,\n    theme: VictoryTheme.grayscale,\n    fillInMissingData: true\n  }\n});\nObject.defineProperty(VictoryStack, \"expectedComponents\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: [\"groupComponent\", \"containerComponent\", \"labelComponent\"]\n});\nObject.defineProperty(VictoryStack, \"getChildren\", {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  value: getChildren\n});\nexport { VictoryStack as default };"],"sourceRoot":""}