{"version":3,"sources":["webpack://koku-ui/./src/pages/state/noData/index.ts","webpack://koku-ui/./src/pages/state/notAvailable/notAvailable.tsx","webpack://koku-ui/./src/pages/state/notAvailable/index.ts","webpack://koku-ui/./src/pages/views/components/dataToolbar/dataToolbar.styles.ts","webpack://koku-ui/./src/pages/views/components/dataToolbar/dataToolbar.tsx","webpack://koku-ui/./src/pages/views/components/export/exportModal.styles.ts","webpack://koku-ui/./src/pages/views/components/export/exportSubmit.tsx","webpack://koku-ui/./src/pages/views/components/export/exportModal.tsx","webpack://koku-ui/./src/pages/views/components/groupBy/groupBy.styles.ts","webpack://koku-ui/./src/pages/views/components/groupBy/groupByOrg.tsx","webpack://koku-ui/./src/pages/views/components/groupBy/groupByTag.tsx","webpack://koku-ui/./src/pages/views/components/groupBy/groupBy.tsx","webpack://koku-ui/./src/pages/views/details/components/actions/actions.tsx","webpack://koku-ui/./src/pages/views/details/components/breakdown/breakdown.styles.ts","webpack://koku-ui/./src/pages/views/details/components/tag/tag.styles.ts","webpack://koku-ui/./src/pages/views/details/components/tag/tagView.tsx","webpack://koku-ui/./src/pages/views/details/components/tag/tagModal.tsx","webpack://koku-ui/./src/pages/views/details/components/tag/tagLink.tsx","webpack://koku-ui/./src/pages/views/details/components/breakdown/breakdownHeader.styles.ts","webpack://koku-ui/./src/pages/views/details/components/breakdown/breakdownHeader.tsx","webpack://koku-ui/./src/pages/views/details/components/breakdown/breakdownBase.tsx","webpack://koku-ui/./src/pages/views/details/components/cluster/cluster.styles.ts","webpack://koku-ui/./src/pages/views/details/components/cluster/clusterModal.styles.ts","webpack://koku-ui/./src/pages/views/details/components/cluster/clusterView.tsx","webpack://koku-ui/./src/pages/views/details/components/cluster/clusterModal.tsx","webpack://koku-ui/./src/pages/views/details/components/cluster/cluster.tsx","webpack://koku-ui/./src/pages/views/details/components/costChart/costChart.styles.ts","webpack://koku-ui/./src/pages/views/details/components/costChart/costChart.tsx","webpack://koku-ui/./src/pages/views/details/components/summary/summaryModal.styles.ts","webpack://koku-ui/./src/pages/views/details/components/summary/summaryModalView.tsx","webpack://koku-ui/./src/pages/views/details/components/summary/summaryModal.tsx","webpack://koku-ui/./src/pages/views/details/components/summary/summaryCard.styles.ts","webpack://koku-ui/./src/pages/views/details/components/summary/summaryCard.tsx","webpack://koku-ui/./src/pages/views/details/components/usageChart/usageChart.styles.ts","webpack://koku-ui/./src/pages/views/details/components/usageChart/usageChart.tsx","webpack://koku-ui/./src/pages/views/details/components/costOverview/costOverviewBase.tsx","webpack://koku-ui/./src/components/charts/historicalCostChart/historicalCostChart.styles.ts","webpack://koku-ui/./src/components/charts/historicalCostChart/historicalCostChart.tsx","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalChart.styles.ts","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalDataCostChart.tsx","webpack://koku-ui/./src/components/charts/historicalTrendChart/historicalTrendChart.styles.ts","webpack://koku-ui/./src/components/charts/historicalTrendChart/historicalTrendChart.tsx","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalDataTrendChart.tsx","webpack://koku-ui/./src/components/charts/historicalUsageChart/historicalUsageChart.styles.ts","webpack://koku-ui/./src/components/charts/historicalUsageChart/historicalUsageChart.tsx","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalDataUsageChart.tsx","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalDataBase.tsx","webpack://koku-ui/./src/pages/views/details/ocpDetails/detailsHeader.styles.ts","webpack://koku-ui/./src/pages/views/utils/groupBy.ts","webpack://koku-ui/./src/pages/views/utils/query.ts","webpack://koku-ui/./src/testIds.ts","webpack://koku-ui/./src/utils/dateRange.ts","webpack://koku-ui/./src/utils/equal.ts"],"names":["withRouter","title","PageHeader","Main","Unavailable","styles","export","marginRight","global_spacer_md","toolbarContainer","backgroundColor","global_BackgroundColor_light_100","paddingBottom","paddingTop","marginLeft","global_spacer_lg","defaultFilters","tag","DataToolbarBase","super","arguments","this","defaultState","categoryInput","filters","cloneDeep","isBulkSelectOpen","isCategoryDropdownOpen","isOrgUnitSelectExpanded","isTagValueDropdownOpen","isTagKeySelectExpanded","isTagValueSelectExpanded","tagKeyValueInput","state","Object","assign","getDefaultCategory","categoryOptions","groupBy","query","props","group_by","option","key","indexOf","getActiveFilters","filter_by","keys","forEach","values","Array","isArray","substring","onDelete","type","chip","filterType","id","setState","prevState","filter","s","_filterType","onFilterRemoved","getBulkSelect","isAllSelected","isBulkSelectDisabled","isDisabled","itemsPerPage","itemsTotal","selectedItems","t","numSelected","length","anySelected","isChecked","dropdownItems","DropdownItem","onClick","onBulkSelectClicked","value","Dropdown","onSelect","onBulkSelect","position","DropdownPosition","toggle","DropdownToggle","splitButtonItems","DropdownToggleCheckbox","onToggle","onBulkSelectToggle","isOpen","action","onBulkSelected","getCurrentCategoryOption","currentCategory","onCategoryClick","onCategorySelect","currentTagKey","undefined","onCategoryToggle","getCategoryInput","categoryOption","ToolbarFilter","categoryName","chips","deleteChip","showToolbarItem","InputGroup","TextInput","name","onChange","onCategoryInputChange","placeholder","onKeyDown","evt","onCategoryInput","Button","variant","ButtonVariant","getDefaultCategoryOptions","event","trim","prevFilters","includes","onFilterAdded","getOrgUnitSelect","options","getOrgUnitOptions","map","toString","compareTo","find","val","selections","push","node","Select","className","SelectVariant","onOrgUnitToggle","onOrgUnitSelect","placeholderText","SelectOption","description","selection","checked","target","prevSelections","getTagKeySelect","selectOptions","getTagKeyOptions","selectOption","ToolbarItem","onClear","onTagKeyClear","onTagKeyToggle","onTagKeySelect","getTagValueSelect","tagKeyOption","getTagValueOptions","onTagValueToggle","onTagValueSelect","onTagValueInputChange","onTagValueInput","getExportButton","isExportDisabled","handleExportClicked","onExportClicked","prevProps","orgReport","tagReport","currentOrgUnit","style","width","data","sortedData","sort","a","b","roots","org","level","filteredOrgs","root","item","unshift","hasTagKeys","hasOwnProperty","keepData","_a","e","p","prototype","call","getOwnPropertySymbols","i","propertyIsEnumerable","__rest","uniqBy","uniq","Set","dateRange","pagination","showBulkSelect","showExport","showFilter","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarContent","ToolbarToggleGroup","breakpoint","toggleIcon","ToolbarGroup","getCategoryDropdown","Boolean","alignment","default","DataToolbar","withTranslation","form","global_spacer_sm","modal","input","global_spacer_xs","ul","marginBottom","reportType","ExportSubmitBase","stateProps","dispatchProps","fetchReportClicked","getExport","report","reportFetchStatus","getFileName","handleClose","reportPathsType","provider","date","format","Date","onClose","handleFetchReport","exportReport","queryString","handleResolutionChange","_","resolution","currentTarget","bind","testIds","mapStateToProps","isAllItems","items","timeScope","newQuery","JSON","parse","stringify","limit","offset","time_scope_value","order_by","perspective","getQueryString","reportError","mapDispatchToProps","ExportSubmitConnect","connect","ExportSubmit","resolutionOptions","label","timeScopeOptions","ExportModalBase","handleMonthChange","Number","showTimeScope","sortedItems","orderBy","selectedLabel","thisMonth","lastMonth","setMonth","getMonth","currentMonth","previousMonth","Modal","actions","Form","FormGroup","fieldId","index","Radio","isValid","groupItem","ExportModalConnect","ExportModal","groupBySelector","display","alignItems","groupBySelectorLabel","GroupByOrgBase","defaultItem","isGroupByOpen","getCurrentGroupBy","getIdKeyForGroupBy","queryFromRoute","location","search","groupByKeys","getGroupByItems","handleGroupByClear","currentItem","handleGroupBySelect","onItemClicked","handleGroupByToggle","groupByItems","GroupByOrg","GroupByTagBase","tagKey","slice","GroupByTag","groupByOrgOptions","groupByTagOptions","orgReportType","tagReportType","GroupByBase","isGroupByOrgVisible","isGroupByTagVisible","handleGroupByClick","allOptions","component","fetchOrg","fetchTag","orgReportPathsType","showOrgs","showTags","tagReportPathsType","orgReportFetchStatus","tagReportFetchStatus","GroupByConnect","GroupBy","DetailsActionsBase","isDropdownOpen","isExportModalOpen","getExportModal","handleExportModalClose","handleExportModalOpen","handleOnSelect","handleOnToggle","showPriceListOption","redirectToCostModel","history","source_uuid","KebabToggle","isPlain","DetailsActionsConnect","Actions","content","paddingLeft","paddingRight","dataListHeading","fontWeight","global_FontWeight_bold","groupByHeading","tagLink","tagsContainer","global_spacer_3xl","marginTop","TagViewBase","getDataListItems","result","DataListItem","DataListItemRow","DataListItemCells","dataListCells","DataListCell","filterBy","dataListItems","DataList","isCompact","TagView","TagModalBase","getTagValueCount","count","nextProps","time_scope_units","account","TagModal","TagLinkBase","handleOpen","preventDefault","href","TagLink","cost","global_spacer_xl","costLabel","costValue","textAlign","costLabelDate","fontSize","global_FontSize_sm","color","global_Color_200","header","justifyContent","global_BackgroundColor_100","infoDescription","global_disabled_color_100","global_FontSize_xs","tabs","BreakdownHeaderBase","buildDetailsLink","detailsURL","groupByKey","getGroupByOrg","groupByOrg","getTotalCost","hasCost","meta","total","formatValue","units","filterByAccount","Link","to","Title","headingLevel","size","BreakdownHeader","getIdKeyForTab","tab","BreakdownBase","activeTabKey","getAvailableTabs","contentRef","getTab","Tab","eventKey","tabContentId","tabContentRef","TabTitleText","getTabTitle","getTabContent","availableTabs","TabContent","ref","getTabItem","costOverviewComponent","historicalDataComponent","emptyTab","currentTab","getTabs","Tabs","activeKey","handleTabClick","tabIndex","hasCurrentMonthData","providers","current_month_data","updateReport","fetchReport","noReport","noLocation","emptyStateTitle","providersFetchStatus","providerType","clustersContainer","height","subTitle","ClusterViewBase","clusters","cluster","ClusterView","ClusterModalBase","ClusterModal","ClusterBase","showAll","charCount","someClusters","allClusters","computedItems","getComputedReportItems","idKey","clusterString","concat","Cluster","chartStyles","chartHeight","chartSkeleton","CostChartBase","containerRef","getLegendLabel","ChartLabel","text","getSkeleton","Skeleton","handleResize","current","clientWidth","setTimeout","window","addEventListener","removeEventListener","hasMarkup","markup","hasRaw","raw","hasUsage","usage","markupUnits","rawUnits","usageUnits","markupValue","rawValue","usageValue","markupLabel","rawLabel","usageLabel","LegendLabel","Legend","ChartLegend","gutter","itemsPerRow","labelComponent","dy","lineHeight","rowGutter","ChartPie","ariaDesc","ariaTitle","constrainToVisibleArea","x","y","labels","datum","legendComponent","legendData","legendOrientation","legendPosition","padding","bottom","left","right","top","themeColor","ChartThemeColor","CostChart","mainContent","SummaryModalViewBase","reportGroupBy","status","_item","formatOptions","totalValue","groupByValue","SummaryModalView","SummaryModalBase","SummaryModal","card","skeleton","viewAllContainer","SummaryBase","isBulletChartModalOpen","getItems","getSummary","reportItem","getViewAll","findIndex","handleBulletChartModalOpen","ButtonType","handleBulletChartModalClose","Card","CardTitle","CardBody","CardFooter","SummaryCard","capacity","legendSkeleton","UsageChartBase","getCpuChart","chartDatum","getChartDatumWithCapacity","getChartDatum","getFreeSpace","ChartBullet","comparativeErrorMeasureData","tooltip","comparativeErrorMeasureLegendData","legend","getChartHeight","legendItemsPerRow","getItemsPerRow","maxDomain","isDatumEmpty","minDomain","primarySegmentedMeasureData","primarySegmentedMeasureLegendData","qualitativeRangeData","ranges","qualitativeRangeLegendData","hasRange","range","hasTotal","hasLimit","Math","trunc","limitUnits","hasRequest","request","requestUnits","hasCapacity","capacityUnits","unusedRequestCapacity","unusedUsageCapacity","unusedRequestCapacityPercentage","unusedUsageCapacityPercentage","Grid","hasGutter","GridItem","md","lg","percentage","UsageChart","PLACEHOLDER","CostOverviewBase","getClusterChart","widget","showWidget","groupById","showWidgetOnGroupBy","getCostChart","Popover","enableFlip","bodyContent","OutlinedQuestionCircleIcon","getCpuUsageChart","getMemoryUsageChart","getSummaryCard","reportSummary","usePlaceholder","getWidgetsColumns","selectWidgets","widgets","visibleWidgets","widgetId","renderedWidget","renderWidget","rows","floor","leftColumnWidgets","rightColumnWidgets","xl","currentCapacityData","fill","currentColorScale","chart_color_green_400","chart_color_green_300","chart_color_green_200","chart_color_green_100","chart_color_green_500","currentInfrastructureCostData","strokeDasharray","currentCostData","previousCapacityData","previousColorScale","chart_color_blue_100","chart_color_blue_200","chart_color_blue_300","chart_color_blue_400","chart_color_blue_500","previousInfrastructureCostData","previousCostData","yAxis","axisLabel","grid","stroke","ticks","tickLabels","xAxis","chart","HistoricalCostChart","resizeObserver","noop","navToggle","hiddenSeries","initDatum","costKey","costInfrastructureKey","costInfrastructureTooltipKey","costTooltipKey","series","childName","legendItem","symbol","cursorVoronoiContainer","getCursorVoronoiContainer","initResizeObserve","containerElement","ResizeObserver","observe","unobserve","insights","chrome","on","handleNavToggle","getChart","ChartArea","has","interpolation","formatDatumValue","formatDatumOptions","CursorVoronoiContainer","createContainer","cursorDimension","mouseFollowTooltips","voronoiDimension","voronoiPadding","getLegend","handleLegendClick","currentRequestDate","getDate","previousRequestDate","max","getInteractiveLegendEvents","chartNames","isHidden","legendName","onLegendClick","adjustContainerHeight","containerHeight","xAxisLabel","yAxisLabel","domain","ge","endDate","getEndDate","midDate","adjustedContainerHeight","container","disable","ChartLegendTooltip","day","Chart","containerComponent","events","getEvents","theme","ChartAxis","tickValues","dependentAxis","chartContainer","costChart","trendChart","usageChart","HistoricalDataCostChartBase","currentQueryString","previousQueryString","currentReport","currentReportFetchStatus","previousReport","previousReportFetchStatus","currentData","previousData","costUnits","currentQuery","previousQuery","HistoricalDataCostChart","currentMonthData","previousMonthData","HistoricalTrendChart","showUsageLegendLabel","toolTipKey","previousDate","currentDate","HistoricalDataTrendChartBase","isCostChart","isNaN","HistoricalDataTrendChart","currentLimitData","currentRequestData","currentUsageData","previousLimitData","previousRequestData","previousUsageData","HistoricalUsageChart","limitKey","limitTooltipKey","requestKey","requestTooltipKey","usageKey","usageTooltipKey","currentUsageDate","previousUsageDate","HistoricalDataUsageChartBase","HistoricalDataUsageChart","HistoricalDataBase","getTrendChart","getUsageChart","costLabelUnit","info","verticalAlign","infoIcon","infoTitle","getGroupById","getGroupByValue","getGroupByTagKey","groupByTagKey","tagIndex","addQueryFilter","filterValue","found","removeQueryFilter","getTestProps","details","cluster_lnk","historical_data_btn","show_more_btn","tag_lnk","view_all_btn","cancel_btn","submit_btn","login","alert","username_input","password_input","submit","masthead","username","sidebarToggle","logout","onboarding","btn_cancel","btn_back","btn_continue","btn_close","type_selector","type_opt_aws","type_opt_ocp","type_opt_non","name_input","check_box_1","check_box_2","s3_input","clusterid_input","arn_input","add_btn","bucket_input","empty_state_add_btn","resource_name_input","cluster_id_input","type_input","sidebar","nav","link","backdrop","getNoDataForDateRangeString","today","month","startDate","startOfMonth","getForDateRangeString","getSinceDateRangeString","isEqual","obj1","obj2","split","join"],"mappings":"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","file":"2d022e3fa1ff91df0757.bundle.js","sourcesContent":["import NoData from './noData';\nexport default NoData;\n","import Main from '@redhat-cloud-services/frontend-components/Main';\nimport PageHeader from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Unavailable from '@redhat-cloud-services/frontend-components/Unavailable';\nimport { PageHeaderTitle } from 'components/pageHeaderTitle/pageHeaderTitle';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nconst NotAvailable = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(Unavailable, null))));\n};\nexport default withRouter(NotAvailable);\n","import NotAvailable from './notAvailable';\nexport default NotAvailable;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    export: {\n        marginRight: global_spacer_md.value,\n    },\n    toolbarContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport './dataToolbar.scss';\nimport { Button, ButtonVariant, Dropdown, DropdownItem, DropdownPosition, DropdownToggle, DropdownToggleCheckbox, InputGroup, Select, SelectOption, SelectVariant, TextInput, Toolbar, ToolbarContent, ToolbarFilter, ToolbarGroup, ToolbarItem, ToolbarToggleGroup, } from '@patternfly/react-core';\nimport { ExportIcon } from '@patternfly/react-icons/dist/js/icons/export-icon';\nimport { FilterIcon } from '@patternfly/react-icons/dist/js/icons/filter-icon';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport { orgUnitIdKey, orgUnitNameKey, tagKey, tagPrefix } from 'api/queries/query';\nimport { cloneDeep } from 'lodash';\nimport { uniq, uniqBy } from 'lodash';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { isEqual } from 'utils/equal';\nimport { styles } from './dataToolbar.styles';\nconst defaultFilters = {\n    tag: {},\n};\n// If the number of tag keys are greater or equal, then show text input Vs select\n// See https://github.com/project-koku/koku/pull/2069\nconst tagKeyValueLimit = 50;\nexport class DataToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            categoryInput: '',\n            filters: cloneDeep(defaultFilters),\n            isBulkSelectOpen: false,\n            isCategoryDropdownOpen: false,\n            isOrgUnitSelectExpanded: false,\n            isTagValueDropdownOpen: false,\n            isTagKeySelectExpanded: false,\n            isTagValueSelectExpanded: false,\n            tagKeyValueInput: '',\n        };\n        this.state = Object.assign({}, this.defaultState);\n        // Initialize\n        this.getDefaultCategory = () => {\n            const { categoryOptions, groupBy, query } = this.props;\n            if (!categoryOptions) {\n                return 'name';\n            }\n            if (query && query.group_by && query.group_by[orgUnitIdKey]) {\n                return orgUnitIdKey;\n            }\n            for (const option of categoryOptions) {\n                if (groupBy === option.key || (groupBy && groupBy.indexOf(tagPrefix) !== -1 && option.key === tagKey)) {\n                    return option.key;\n                }\n            }\n            return categoryOptions[0].key;\n        };\n        this.getActiveFilters = query => {\n            const filters = cloneDeep(defaultFilters);\n            if (query && query.filter_by) {\n                Object.keys(query.filter_by).forEach(key => {\n                    const values = Array.isArray(query.filter_by[key]) ? [...query.filter_by[key]] : [query.filter_by[key]];\n                    if (key.indexOf(tagPrefix) !== -1) {\n                        filters.tag[key.substring(tagPrefix.length)] = values;\n                    }\n                    else {\n                        filters[key] = values;\n                    }\n                });\n            }\n            return filters;\n        };\n        this.onDelete = (type, chip) => {\n            // Todo: workaround for https://github.com/patternfly/patternfly-react/issues/3552\n            // This prevents us from using a localized string, if necessary\n            const filterType = type && type.key ? type.key : type;\n            const id = chip && chip.key ? chip.key : chip;\n            if (filterType) {\n                this.setState((prevState) => {\n                    if (prevState.filters.tag[filterType]) {\n                        // Todo: use ID\n                        prevState.filters.tag[filterType] = prevState.filters.tag[filterType].filter(s => s !== id);\n                    }\n                    else if (prevState.filters[filterType]) {\n                        prevState.filters[filterType] = prevState.filters[filterType].filter(s => s !== id);\n                    }\n                    return {\n                        filters: prevState.filters,\n                    };\n                }, () => {\n                    const { filters } = this.state;\n                    const _filterType = filters.tag[filterType] ? `${tagPrefix}${filterType}` : filterType; // Todo: use ID\n                    this.props.onFilterRemoved(_filterType, id);\n                });\n            }\n            else {\n                this.setState({\n                    filters: cloneDeep(defaultFilters),\n                }, () => {\n                    this.props.onFilterRemoved(null); // Clear all\n                });\n            }\n        };\n        // Bulk select\n        this.getBulkSelect = () => {\n            const { isAllSelected, isBulkSelectDisabled, isDisabled, itemsPerPage, itemsTotal, selectedItems, t } = this.props;\n            const { isBulkSelectOpen } = this.state;\n            const numSelected = isAllSelected ? itemsTotal : selectedItems ? selectedItems.length : 0;\n            const allSelected = (isAllSelected || numSelected === itemsTotal) && itemsTotal > 0;\n            const anySelected = numSelected > 0;\n            const someChecked = anySelected ? null : false;\n            const isChecked = allSelected ? true : someChecked;\n            const dropdownItems = [\n                React.createElement(DropdownItem, { key: \"item-1\", onClick: () => this.onBulkSelectClicked('none') }, t('toolbar.bulk_select.select_none')),\n                React.createElement(DropdownItem, { key: \"item-2\", onClick: () => this.onBulkSelectClicked('page') }, t('toolbar.bulk_select.select_page', {\n                    value: itemsPerPage,\n                })),\n                React.createElement(DropdownItem, { key: \"item-3\", onClick: () => this.onBulkSelectClicked('all') }, t('toolbar.bulk_select.select_all', { value: itemsTotal })),\n            ];\n            return (React.createElement(Dropdown, { onSelect: this.onBulkSelect, position: DropdownPosition.left, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled || isBulkSelectDisabled, splitButtonItems: [\n                        React.createElement(DropdownToggleCheckbox, { id: \"bulk-select\", key: \"bulk-select\", \"aria-label\": anySelected ? t('toolbar.bulk_select.aria_deselect') : t('toolbar.bulk_select.aria_select'), isChecked: isChecked, onClick: () => {\n                                anySelected ? this.onBulkSelectClicked('none') : this.onBulkSelectClicked('all');\n                            } }),\n                    ], onToggle: this.onBulkSelectToggle }, numSelected !== 0 && React.createElement(React.Fragment, null,\n                    numSelected,\n                    \" selected\")), isOpen: isBulkSelectOpen, dropdownItems: dropdownItems }));\n        };\n        this.onBulkSelectClicked = (action) => {\n            const { onBulkSelected } = this.props;\n            if (onBulkSelected) {\n                onBulkSelected(action);\n            }\n        };\n        this.onBulkSelect = () => {\n            this.setState({\n                isBulkSelectOpen: !this.state.isBulkSelectOpen,\n            });\n        };\n        this.onBulkSelectToggle = isOpen => {\n            this.setState({\n                isBulkSelectOpen: isOpen,\n            });\n        };\n        this.getCurrentCategoryOption = () => {\n            const { categoryOptions } = this.props;\n            const { currentCategory } = this.state;\n            if (!categoryOptions) {\n                return undefined;\n            }\n            for (const option of categoryOptions) {\n                if (currentCategory === option.key) {\n                    return option;\n                }\n            }\n            return categoryOptions[0];\n        };\n        this.onCategoryClick = value => {\n            this.setState({\n                currentCategory: value,\n            });\n        };\n        this.onCategorySelect = () => {\n            this.setState({\n                categoryInput: '',\n                currentTagKey: undefined,\n                isCategoryDropdownOpen: !this.state.isCategoryDropdownOpen,\n            });\n        };\n        this.onCategoryToggle = isOpen => {\n            this.setState({\n                isCategoryDropdownOpen: isOpen,\n            });\n        };\n        // Category input\n        this.getCategoryInput = categoryOption => {\n            const { isDisabled, t } = this.props;\n            const { currentCategory, filters, categoryInput } = this.state;\n            return (React.createElement(ToolbarFilter, { categoryName: categoryOption, chips: filters[categoryOption.key], deleteChip: this.onDelete, key: categoryOption.key, showToolbarItem: currentCategory === categoryOption.key },\n                React.createElement(InputGroup, null,\n                    React.createElement(TextInput, { isDisabled: isDisabled, name: `${categoryOption.key}-input`, id: `${categoryOption.key}-input`, type: \"search\", \"aria-label\": t(`filter_by.${categoryOption.key}.input_aria_label`), onChange: this.onCategoryInputChange, value: categoryInput, placeholder: t(`filter_by.${categoryOption.key}.placeholder`), onKeyDown: evt => this.onCategoryInput(evt, categoryOption.key) }),\n                    React.createElement(Button, { isDisabled: isDisabled, variant: ButtonVariant.control, \"aria-label\": t(`filter_by.${categoryOption.key}.button_aria_label`), onClick: evt => this.onCategoryInput(evt, categoryOption.key) },\n                        React.createElement(SearchIcon, null)))));\n        };\n        this.getDefaultCategoryOptions = () => {\n            const { t } = this.props;\n            return [{ name: t('filter_by.values.name'), key: 'name' }];\n        };\n        this.onCategoryInputChange = value => {\n            this.setState({ categoryInput: value });\n        };\n        this.onCategoryInput = (event, key) => {\n            const { categoryInput, currentCategory } = this.state;\n            if ((event.key && event.key !== 'Enter') || categoryInput.trim() === '') {\n                return;\n            }\n            this.setState((prevState) => {\n                const prevFilters = prevState.filters[key];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { [currentCategory]: prevFilters && prevFilters.includes(categoryInput)\n                            ? prevFilters\n                            : prevFilters\n                                ? [...prevFilters, categoryInput]\n                                : [categoryInput] }),\n                    categoryInput: '',\n                };\n            }, () => {\n                this.props.onFilterAdded(currentCategory, categoryInput);\n            });\n        };\n        // Org unit select\n        this.getOrgUnitSelect = () => {\n            const { isDisabled, t } = this.props;\n            const { currentCategory, filters, isOrgUnitSelectExpanded } = this.state;\n            const options = this.getOrgUnitOptions().map(option => ({\n                id: option.key,\n                toString: () => option.name,\n                compareTo: value => filters[orgUnitIdKey] ? filters[orgUnitIdKey].find(val => val === value.id) : false,\n            }));\n            const chips = []; // Get selected items as PatternFly's ToolbarChip type\n            const selections = []; // Select options and selections must be same type\n            if (filters[orgUnitIdKey] && Array.isArray(filters[orgUnitIdKey])) {\n                filters[orgUnitIdKey].map(id => {\n                    const option = options.find(val => val.id === id);\n                    if (option) {\n                        selections.push(option);\n                        chips.push({\n                            key: option.id,\n                            node: option.toString(),\n                        });\n                    }\n                });\n            }\n            // Todo: selectOverride is a workaround for https://github.com/patternfly/patternfly-react/issues/4477\n            return (React.createElement(ToolbarFilter, { categoryName: {\n                    key: orgUnitIdKey,\n                    name: t('filter_by.values.org_unit_id'),\n                }, chips: chips, deleteChip: this.onDelete, key: orgUnitIdKey, showToolbarItem: currentCategory === orgUnitIdKey },\n                React.createElement(Select, { isDisabled: isDisabled, className: \"selectOverride\", variant: SelectVariant.checkbox, \"aria-label\": t('filter_by.org_unit.aria_label'), onToggle: this.onOrgUnitToggle, onSelect: this.onOrgUnitSelect, selections: selections, isOpen: isOrgUnitSelectExpanded, placeholderText: t('filter_by.org_unit.placeholder') }, options.map(option => (React.createElement(SelectOption, { description: option.id, key: option.id, value: option }))))));\n        };\n        this.onOrgUnitSelect = (event, selection) => {\n            const checked = event.target.checked;\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters[orgUnitIdKey] ? prevState.filters[orgUnitIdKey] : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign({}, prevState.filters.tag), [orgUnitIdKey]: checked\n                            ? [...prevSelections, selection.id]\n                            : prevSelections.filter(value => value !== selection.id) }),\n                };\n            }, () => {\n                if (checked) {\n                    this.props.onFilterAdded(orgUnitIdKey, selection.id);\n                }\n                else {\n                    this.onDelete(orgUnitIdKey, selection.id);\n                }\n            });\n        };\n        this.onOrgUnitToggle = isOpen => {\n            this.setState({\n                isOrgUnitSelectExpanded: isOpen,\n            });\n        };\n        // Tag key select\n        this.getTagKeySelect = () => {\n            const { isDisabled, t } = this.props;\n            const { currentCategory, currentTagKey, isTagKeySelectExpanded } = this.state;\n            if (currentCategory !== tagKey) {\n                return null;\n            }\n            const selectOptions = this.getTagKeyOptions().map(selectOption => {\n                return React.createElement(SelectOption, { key: selectOption.key, value: selectOption.key });\n            });\n            return (React.createElement(ToolbarItem, null,\n                React.createElement(Select, { isDisabled: isDisabled, variant: SelectVariant.typeahead, \"aria-label\": t('filter_by.tag_key.aria_label'), onClear: this.onTagKeyClear, onToggle: this.onTagKeyToggle, onSelect: this.onTagKeySelect, isOpen: isTagKeySelectExpanded, placeholderText: t('filter_by.tag_key.placeholder'), selections: currentTagKey }, selectOptions)));\n        };\n        this.onTagKeyClear = () => {\n            this.setState({\n                currentTagKey: undefined,\n                isTagKeySelectExpanded: false,\n            });\n        };\n        this.onTagKeySelect = (event, selection) => {\n            this.setState({\n                currentTagKey: selection,\n                isTagKeySelectExpanded: !this.state.isTagKeySelectExpanded,\n            });\n        };\n        this.onTagKeyToggle = isOpen => {\n            this.setState({\n                isTagKeySelectExpanded: isOpen,\n            });\n        };\n        // Tag value select\n        this.getTagValueSelect = tagKeyOption => {\n            const { isDisabled, t } = this.props;\n            const { currentCategory, currentTagKey, filters, isTagValueSelectExpanded, tagKeyValueInput } = this.state;\n            const selectOptions = this.getTagValueOptions().map(selectOption => {\n                return React.createElement(SelectOption, { key: selectOption.key, value: selectOption.key });\n            });\n            return (React.createElement(ToolbarFilter, { categoryName: tagKeyOption, chips: filters.tag[tagKeyOption.key], deleteChip: this.onDelete, key: tagKeyOption.key, showToolbarItem: currentCategory === tagKey && currentTagKey === tagKeyOption.key }, selectOptions.length < tagKeyValueLimit ? (React.createElement(Select, { isDisabled: isDisabled, variant: SelectVariant.checkbox, \"aria-label\": t('filter_by.tag_value.aria_label'), onToggle: this.onTagValueToggle, onSelect: this.onTagValueSelect, selections: filters.tag[tagKeyOption.key] ? filters.tag[tagKeyOption.key] : [], isOpen: isTagValueSelectExpanded, placeholderText: t('filter_by.tag_value.placeholder') }, selectOptions)) : (React.createElement(InputGroup, null,\n                React.createElement(TextInput, { isDisabled: isDisabled, name: \"tagkeyvalue-input\", id: \"tagkeyvalue-input\", type: \"search\", \"aria-label\": t('filter_by.tag_value.aria_label'), onChange: this.onTagValueInputChange, value: tagKeyValueInput, placeholder: t('filter_by.tag_value.input_placeholder'), onKeyDown: evt => this.onTagValueInput(evt) }),\n                React.createElement(Button, { isDisabled: isDisabled, variant: ButtonVariant.control, \"aria-label\": t('filter_by.tag_value.button_aria_label'), onClick: evt => this.onTagValueInput(evt) },\n                    React.createElement(SearchIcon, null))))));\n        };\n        this.onTagValueInputChange = value => {\n            this.setState({ tagKeyValueInput: value });\n        };\n        this.onTagValueInput = event => {\n            const { currentTagKey, tagKeyValueInput } = this.state;\n            if ((event.key && event.key !== 'Enter') || tagKeyValueInput.trim() === '') {\n                return;\n            }\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters.tag[currentTagKey] ? prevState.filters.tag[currentTagKey] : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign(Object.assign({}, prevState.filters.tag), { [currentTagKey]: [...prevSelections, tagKeyValueInput] }) }),\n                    tagKeyValueInput: '',\n                };\n            }, () => {\n                this.props.onFilterAdded(`${tagPrefix}${currentTagKey}`, tagKeyValueInput);\n            });\n        };\n        this.onTagValueSelect = (event, selection) => {\n            const { currentTagKey } = this.state;\n            const checked = event.target.checked;\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters.tag[currentTagKey] ? prevState.filters.tag[currentTagKey] : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign(Object.assign({}, prevState.filters.tag), { [currentTagKey]: checked\n                                ? [...prevSelections, selection]\n                                : prevSelections.filter(value => value !== selection) }) }),\n                };\n            }, () => {\n                if (checked) {\n                    this.props.onFilterAdded(`${tagPrefix}${currentTagKey}`, selection);\n                }\n                else {\n                    this.onDelete(currentTagKey, selection);\n                }\n            });\n        };\n        this.onTagValueToggle = isOpen => {\n            this.setState({\n                isTagValueSelectExpanded: isOpen,\n            });\n        };\n        // Export button\n        this.getExportButton = () => {\n            const { isDisabled, isExportDisabled } = this.props;\n            return (React.createElement(ToolbarItem, null,\n                React.createElement(Button, { isDisabled: isDisabled || isExportDisabled, onClick: this.handleExportClicked, variant: ButtonVariant.plain },\n                    React.createElement(ExportIcon, null))));\n        };\n        this.handleExportClicked = () => {\n            this.props.onExportClicked();\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            currentCategory: this.getDefaultCategory(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { categoryOptions, groupBy, orgReport, query, tagReport } = this.props;\n        if (categoryOptions !== prevProps.categoryOptions ||\n            groupBy !== prevProps.groupBy ||\n            (query && !isEqual(query, prevProps.query)) ||\n            (orgReport && !isEqual(orgReport, prevProps.orgReport)) ||\n            (tagReport && !isEqual(tagReport, prevProps.tagReport))) {\n            this.setState(() => {\n                const filters = this.getActiveFilters(query);\n                return categoryOptions !== prevProps.categoryOptions || prevProps.groupBy !== groupBy\n                    ? {\n                        categoryInput: '',\n                        currentCategory: this.getDefaultCategory(),\n                        currentOrgUnit: '',\n                        currentTagKey: '',\n                        tagKeyValueInput: '',\n                        filters,\n                    }\n                    : {\n                        filters,\n                    };\n            });\n        }\n    }\n    // Category dropdown\n    getCategoryDropdown() {\n        const { categoryOptions, isDisabled } = this.props;\n        const { isCategoryDropdownOpen } = this.state;\n        if (!categoryOptions) {\n            return null;\n        }\n        return (React.createElement(ToolbarItem, null,\n            React.createElement(Dropdown, { onSelect: this.onCategorySelect, position: DropdownPosition.left, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled, onToggle: this.onCategoryToggle, style: { width: '100%' } },\n                    React.createElement(FilterIcon, null),\n                    \" \",\n                    this.getCurrentCategoryOption().name), isOpen: isCategoryDropdownOpen, dropdownItems: categoryOptions &&\n                    categoryOptions.map(option => (React.createElement(DropdownItem, { key: option.key, onClick: () => this.onCategoryClick(option.key) }, option.name))), style: { width: '100%' } })));\n    }\n    getOrgUnitOptions() {\n        const { orgReport } = this.props;\n        let options = [];\n        if (!(orgReport && orgReport.data)) {\n            return options;\n        }\n        // Sort all names first\n        const sortedData = orgReport.data.sort((a, b) => {\n            if (a[orgUnitNameKey] < b[orgUnitNameKey]) {\n                return -1;\n            }\n            if (a[orgUnitNameKey] > b[orgUnitNameKey]) {\n                return 1;\n            }\n            return 0;\n        });\n        // Move roots first\n        const roots = sortedData.filter(org => org.level === 0);\n        const filteredOrgs = sortedData.filter(org => org.level !== 0);\n        roots.map(root => {\n            const item = sortedData.find(org => org[orgUnitIdKey] === root[orgUnitIdKey]);\n            filteredOrgs.unshift(item);\n        });\n        if (filteredOrgs.length > 0) {\n            options = filteredOrgs.map(org => {\n                return {\n                    key: org[orgUnitIdKey],\n                    name: org[orgUnitNameKey],\n                };\n            });\n        }\n        return options;\n    }\n    getTagKeyOptions() {\n        const { tagReport } = this.props;\n        let data = [];\n        let options = [];\n        if (!(tagReport && tagReport.data)) {\n            return options;\n        }\n        // If the key_only param is used, we have an array of strings\n        let hasTagKeys = false;\n        for (const item of tagReport.data) {\n            if (item.hasOwnProperty('key')) {\n                hasTagKeys = true;\n                break;\n            }\n        }\n        // Workaround for https://github.com/project-koku/koku/issues/1797\n        if (hasTagKeys) {\n            const keepData = tagReport.data.map(\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            (_a) => {\n                var { type } = _a, keepProps = __rest(_a, [\"type\"]);\n                return keepProps;\n            });\n            data = uniqBy(keepData, 'key');\n        }\n        else {\n            data = uniq(tagReport.data);\n        }\n        if (data.length > 0) {\n            options = data.map(item => {\n                const key = hasTagKeys ? item.key : item;\n                return {\n                    key,\n                    name: key,\n                };\n            });\n        }\n        return options;\n    }\n    getTagValueOptions() {\n        const { tagReport } = this.props;\n        const { currentTagKey } = this.state;\n        let data = [];\n        if (tagReport && tagReport.data) {\n            data = [...new Set([...tagReport.data])]; // prune duplicates\n        }\n        let options = [];\n        if (data.length > 0) {\n            for (const tag of data) {\n                if (currentTagKey === tag.key && tag.values) {\n                    options = tag.values.map(val => {\n                        return {\n                            key: val,\n                            name: val,\n                        };\n                    });\n                    break;\n                }\n            }\n        }\n        return options;\n    }\n    render() {\n        const { categoryOptions, dateRange, pagination, showBulkSelect, showExport, showFilter, style } = this.props;\n        const options = categoryOptions ? categoryOptions : this.getDefaultCategoryOptions();\n        // Todo: clearAllFilters workaround https://github.com/patternfly/patternfly-react/issues/4222\n        return (React.createElement(\"div\", { style: style ? style : styles.toolbarContainer },\n            React.createElement(Toolbar, { id: \"details-toolbar\", clearAllFilters: this.onDelete, collapseListedFiltersBreakpoint: \"xl\" },\n                React.createElement(ToolbarContent, null,\n                    React.createElement(ToolbarToggleGroup, { breakpoint: \"xl\", toggleIcon: React.createElement(FilterIcon, null) },\n                        showBulkSelect && React.createElement(ToolbarItem, { variant: \"bulk-select\" }, this.getBulkSelect()),\n                        showFilter && (React.createElement(ToolbarGroup, { variant: \"filter-group\" },\n                            this.getCategoryDropdown(),\n                            this.getTagKeySelect(),\n                            this.getTagKeyOptions().map(option => this.getTagValueSelect(option)),\n                            this.getOrgUnitSelect(),\n                            options &&\n                                options\n                                    .filter(option => option.key !== tagKey && option.key !== orgUnitIdKey)\n                                    .map(option => this.getCategoryInput(option)))),\n                        Boolean(showExport) && React.createElement(ToolbarGroup, null, this.getExportButton()),\n                        dateRange && React.createElement(ToolbarGroup, null, dateRange)),\n                    React.createElement(ToolbarItem, { alignment: { default: 'alignRight' }, variant: \"pagination\" }, pagination)))));\n    }\n}\nconst DataToolbar = withTranslation()(DataToolbarBase);\nexport { DataToolbar };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    form: {\n        marginLeft: global_spacer_sm.var,\n    },\n    modal: {\n        input: {\n            marginRight: global_spacer_xs.var,\n        },\n        ul: {\n            marginLeft: global_spacer_sm.var,\n        },\n    },\n    title: {\n        marginBottom: global_spacer_md.var,\n    },\n};\n","import { Button, ButtonVariant } from '@patternfly/react-core';\nimport { getQuery, orgUnitIdKey } from 'api/queries/query';\nimport { format } from 'date-fns';\nimport fileDownload from 'js-file-download';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { exportActions, exportSelectors } from 'store/exports';\nimport { getTestProps, testIds } from 'testIds';\nconst reportType = \"cost\" /* cost */;\nexport class ExportSubmitBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            fetchReportClicked: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExport = () => {\n            const { report, reportFetchStatus } = this.props;\n            if (report && reportFetchStatus === 2 /* complete */) {\n                fileDownload(report.data, this.getFileName(), 'text/csv');\n                this.handleClose();\n            }\n        };\n        this.getFileName = () => {\n            const { groupBy, reportPathsType, t } = this.props;\n            const fileName = t('export.file_name', {\n                provider: reportPathsType,\n                groupBy,\n                date: format(new Date(), 'yyyy-MM-dd'),\n            });\n            return `${fileName}.csv`;\n        };\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleFetchReport = () => {\n            const { exportReport, queryString, reportPathsType } = this.props;\n            exportReport(reportPathsType, reportType, queryString);\n            this.setState({\n                fetchReportClicked: true,\n            }, () => {\n                this.getExport();\n            });\n        };\n        this.handleResolutionChange = (_, event) => {\n            this.setState({ resolution: event.currentTarget.value });\n        };\n        this.handleResolutionChange = this.handleResolutionChange.bind(this);\n    }\n    componentDidUpdate(prevProps) {\n        const { report } = this.props;\n        const { fetchReportClicked } = this.state;\n        if (prevProps.report !== report && fetchReportClicked) {\n            this.getExport();\n        }\n    }\n    render() {\n        const { reportFetchStatus, t } = this.props;\n        return (React.createElement(Button, Object.assign({}, getTestProps(testIds.export.submit_btn), { isDisabled: reportFetchStatus === 1 /* inProgress */, key: \"confirm\", onClick: this.handleFetchReport, variant: ButtonVariant.primary }), t('export.confirm')));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const { groupBy, isAllItems, items, query, reportPathsType, resolution, timeScope } = props;\n    const getQueryString = () => {\n        const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { filter: {\n                limit: undefined,\n                offset: undefined,\n                resolution: resolution ? resolution : undefined,\n                time_scope_value: timeScope ? timeScope : undefined,\n            }, filter_by: {}, order_by: undefined, perspective: undefined, dateRange: undefined });\n        // Store filter_by as an array so we can add to it below\n        if (query.filter_by) {\n            for (const key of Object.keys(query.filter_by)) {\n                if (newQuery.filter_by[key] === undefined) {\n                    newQuery.filter_by[key] = [];\n                }\n                newQuery.filter_by[key].push(query.filter_by[key]);\n            }\n        }\n        if (isAllItems) {\n            // Ensure group_by isn't overridden -- org_unit_id is not unique\n            if (groupBy === orgUnitIdKey) {\n                if (newQuery.filter_by[orgUnitIdKey] === undefined) {\n                    newQuery.filter_by[orgUnitIdKey] = [];\n                }\n                newQuery.filter_by[orgUnitIdKey].push(query.group_by[orgUnitIdKey]);\n            }\n        }\n        else {\n            if (groupBy === orgUnitIdKey) {\n                for (const item of items) {\n                    // Note that type only exists when grouping by org units\n                    const type = item.type === 'organizational_unit' ? orgUnitIdKey : item.type;\n                    if (newQuery.filter_by[type] === undefined) {\n                        newQuery.filter_by[type] = [];\n                    }\n                    newQuery.filter_by[type].push(item.id);\n                }\n            }\n            else {\n                for (const item of items) {\n                    if (newQuery.filter_by[groupBy] === undefined) {\n                        newQuery.filter_by[groupBy] = [];\n                    }\n                    newQuery.filter_by[groupBy].push(item.id);\n                }\n            }\n        }\n        return getQuery(newQuery);\n    };\n    const queryString = getQueryString();\n    const report = exportSelectors.selectExport(state, reportPathsType, reportType, queryString);\n    const reportError = exportSelectors.selectExportError(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = exportSelectors.selectExportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportError,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    exportReport: exportActions.exportReport,\n};\nconst ExportSubmitConnect = connect(mapStateToProps, mapDispatchToProps)(ExportSubmitBase);\nconst ExportSubmit = withTranslation()(ExportSubmitConnect);\nexport { ExportSubmit };\n","import { Button, ButtonVariant, Form, FormGroup, Modal, Radio } from '@patternfly/react-core';\nimport { tagPrefix } from 'api/queries/query';\nimport { format } from 'date-fns';\nimport { orderBy } from 'lodash';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { exportActions } from 'store/exports';\nimport { getTestProps, testIds } from 'testIds';\nimport { styles } from './exportModal.styles';\nimport { ExportSubmit } from './exportSubmit';\nconst resolutionOptions = [\n    { label: 'export.resolution_daily', value: 'daily' },\n    { label: 'export.resolution_monthly', value: 'monthly' },\n];\nconst timeScopeOptions = [\n    { label: 'export.time_scope_current', value: -1 },\n    { label: 'export.time_scope_previous', value: -2 },\n];\nexport class ExportModalBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            timeScope: -1,\n            resolution: this.props.resolution || 'monthly',\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleMonthChange = (_, event) => {\n            this.setState({ timeScope: Number(event.currentTarget.value) });\n        };\n        this.handleResolutionChange = (_, event) => {\n            this.setState({ resolution: event.currentTarget.value });\n        };\n        this.handleResolutionChange = this.handleResolutionChange.bind(this);\n    }\n    componentDidUpdate(prevProps) {\n        const { isOpen } = this.props;\n        if (isOpen && !prevProps.isOpen) {\n            this.setState(Object.assign({}, this.defaultState));\n        }\n    }\n    render() {\n        const { groupBy, isAllItems, items, query, reportPathsType, showTimeScope, t } = this.props;\n        const { resolution, timeScope } = this.state;\n        let sortedItems = [...items];\n        if (this.props.isOpen) {\n            if (items && items.length === 0 && isAllItems) {\n                sortedItems = [\n                    {\n                        label: t('export.all'),\n                    },\n                ];\n            }\n            else {\n                sortedItems = orderBy(sortedItems, ['label'], ['asc']);\n            }\n        }\n        let selectedLabel = t('export.selected', { groupBy });\n        if (groupBy.indexOf(tagPrefix) !== -1) {\n            selectedLabel = t('export.selected_tags');\n        }\n        const thisMonth = new Date();\n        const lastMonth = new Date().setMonth(thisMonth.getMonth() - 1);\n        const currentMonth = format(thisMonth, 'MMMM yyyy');\n        const previousMonth = format(lastMonth - 1, 'MMMM yyyy');\n        return (React.createElement(Modal, { style: styles.modal, isOpen: this.props.isOpen, onClose: this.handleClose, title: t('export.title'), variant: \"small\", actions: [\n                React.createElement(ExportSubmit, { groupBy: groupBy, isAllItems: isAllItems, items: items, key: \"confirm\", timeScope: showTimeScope ? timeScope : undefined, onClose: this.handleClose, query: query, reportPathsType: reportPathsType, resolution: resolution }),\n                React.createElement(Button, Object.assign({}, getTestProps(testIds.export.cancel_btn), { key: \"cancel\", onClick: this.handleClose, variant: ButtonVariant.link }), t('export.cancel')),\n            ] },\n            React.createElement(\"div\", { style: styles.title },\n                React.createElement(\"span\", null, t('export.heading', { groupBy }))),\n            React.createElement(Form, { style: styles.form },\n                React.createElement(FormGroup, { label: t('export.aggregate_type'), fieldId: \"aggregate-type\" },\n                    React.createElement(React.Fragment, null, resolutionOptions.map((option, index) => (React.createElement(Radio, { key: index, id: `resolution-${index}`, isValid: option.value !== undefined, label: t(option.label), value: option.value, checked: resolution === option.value, name: \"resolution\", onChange: this.handleResolutionChange, \"aria-label\": t(option.label) }))))),\n                showTimeScope && (React.createElement(FormGroup, { label: t('export.time_scope_title'), fieldId: \"timeScope\" },\n                    React.createElement(React.Fragment, null, timeScopeOptions.map((option, index) => (React.createElement(Radio, { key: index, id: `timeScope-${index}`, isValid: option.value !== undefined, label: t(option.label, { date: option.value === -2 ? previousMonth : currentMonth }), value: option.value, checked: timeScope === option.value, name: \"timeScope\", onChange: this.handleMonthChange, \"aria-label\": t(option.label) })))))),\n                React.createElement(FormGroup, { label: selectedLabel, fieldId: \"selected-labels\" },\n                    React.createElement(\"ul\", null, sortedItems.map((groupItem, index) => {\n                        return React.createElement(\"li\", { key: index }, groupItem.label);\n                    }))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {};\n});\nconst mapDispatchToProps = {\n    exportReport: exportActions.exportReport,\n};\nconst ExportModalConnect = connect(mapStateToProps, mapDispatchToProps)(ExportModalBase);\nconst ExportModal = withTranslation()(ExportModalConnect);\nexport { ExportModal };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    groupBySelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    groupBySelectorLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n};\n","import { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { orgUnitIdKey, orgUnitNameKey, parseQuery } from 'api/queries/query';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './groupBy.styles';\nclass GroupByOrgBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            defaultItem: this.props.groupBy || this.props.options[0].value,\n            isGroupByOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getCurrentGroupBy = () => {\n            const { getIdKeyForGroupBy } = this.props;\n            const queryFromRoute = parseQuery(location.search);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by ? Object.keys(queryFromRoute.group_by) : [];\n            let groupBy = getIdKeyForGroupBy(queryFromRoute.group_by);\n            for (const key of groupByKeys) {\n                const index = key.indexOf(orgUnitIdKey);\n                if (index !== -1) {\n                    groupBy = queryFromRoute.group_by[orgUnitIdKey];\n                    break;\n                }\n            }\n            return groupBy;\n        };\n        this.getGroupByItems = () => {\n            const { orgReport } = this.props;\n            if (!(orgReport && orgReport.data)) {\n                return [];\n            }\n            // Sort all names first\n            const sortedData = orgReport.data.sort((a, b) => {\n                if (a[orgUnitNameKey] < b[orgUnitNameKey]) {\n                    return -1;\n                }\n                if (a[orgUnitNameKey] > b[orgUnitNameKey]) {\n                    return 1;\n                }\n                return 0;\n            });\n            // Move roots first\n            const roots = sortedData.filter(org => org.level === 0);\n            const filteredOrgs = sortedData.filter(org => org.level !== 0);\n            roots.map(root => {\n                const item = sortedData.find(org => org[orgUnitIdKey] === root[orgUnitIdKey]);\n                filteredOrgs.unshift(item);\n            });\n            return filteredOrgs.map(org => ({\n                id: org[orgUnitIdKey],\n                toString: () => org[orgUnitNameKey],\n            }));\n        };\n        this.handleGroupByClear = () => {\n            this.setState({\n                currentItem: undefined,\n            });\n        };\n        this.handleGroupBySelect = (event, selection) => {\n            const { onItemClicked } = this.props;\n            this.setState({\n                currentItem: selection.id,\n                isGroupByOpen: false,\n            });\n            if (onItemClicked) {\n                onItemClicked(`${orgUnitIdKey}${selection.id}`);\n            }\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({ isGroupByOpen });\n        };\n        this.handleGroupByClear = this.handleGroupByClear.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { groupBy } = this.props;\n        if (prevProps.groupBy !== groupBy) {\n            this.setState({ currentItem: this.getCurrentGroupBy() });\n        }\n    }\n    render() {\n        const { isDisabled = false, t } = this.props;\n        const { currentItem, isGroupByOpen } = this.state;\n        const groupByItems = this.getGroupByItems();\n        const selection = groupByItems.find((item) => item.id === currentItem);\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(Select, { \"aria-label\": t('group_by.org_unit_aria_label'), isDisabled: isDisabled, onClear: this.handleGroupByClear, onToggle: this.handleGroupByToggle, onSelect: this.handleGroupBySelect, isOpen: isGroupByOpen, placeholderText: t('group_by.org_unit_placeholder'), selections: selection, variant: SelectVariant.typeahead }, groupByItems.map(item => (React.createElement(SelectOption, { description: item.id, key: item.id, value: item }))))));\n    }\n}\nconst GroupByOrg = withTranslation()(GroupByOrgBase);\nexport { GroupByOrg };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { parseQuery, tagPrefix } from 'api/queries/query';\nimport { uniq, uniqBy } from 'lodash';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './groupBy.styles';\nclass GroupByTagBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isGroupByOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getGroupByItems = () => {\n            const { tagReport } = this.props;\n            if (!(tagReport && tagReport.data)) {\n                return [];\n            }\n            // If the key_only param is used, we have an array of strings\n            let hasTagKeys = false;\n            for (const item of tagReport.data) {\n                if (item.hasOwnProperty('key')) {\n                    hasTagKeys = true;\n                    break;\n                }\n            }\n            // Workaround for https://github.com/project-koku/koku/issues/1797\n            let data = [];\n            if (hasTagKeys) {\n                const keepData = tagReport.data.map(\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                (_a) => {\n                    var { type } = _a, keepProps = __rest(_a, [\"type\"]);\n                    return keepProps;\n                });\n                data = uniqBy(keepData, 'key');\n            }\n            else {\n                data = uniq(tagReport.data);\n            }\n            return data.map(item => {\n                const tagKey = hasTagKeys ? item.key : item;\n                return React.createElement(SelectOption, { key: item.key, value: tagKey });\n            });\n        };\n        this.getCurrentGroupBy = () => {\n            const queryFromRoute = parseQuery(location.search);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by ? Object.keys(queryFromRoute.group_by) : [];\n            let groupBy;\n            for (const key of groupByKeys) {\n                const index = key.indexOf(tagPrefix);\n                if (index !== -1) {\n                    groupBy = key.slice(tagPrefix.length);\n                    break;\n                }\n            }\n            return groupBy;\n        };\n        this.handleGroupByClear = () => {\n            this.setState({\n                currentItem: undefined,\n            });\n        };\n        this.handleGroupBySelect = (event, selection) => {\n            const { onItemClicked } = this.props;\n            this.setState({\n                currentItem: selection,\n                isGroupByOpen: false,\n            });\n            if (onItemClicked) {\n                onItemClicked(`${tagPrefix}${selection}`);\n            }\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({ isGroupByOpen });\n        };\n        this.handleGroupByClear = this.handleGroupByClear.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { groupBy } = this.props;\n        if (prevProps.groupBy !== groupBy) {\n            this.setState({ currentItem: this.getCurrentGroupBy() });\n        }\n    }\n    render() {\n        const { isDisabled, t } = this.props;\n        const { currentItem, isGroupByOpen } = this.state;\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(Select, { \"aria-label\": t('group_by.tag_key_aria_label'), isDisabled: isDisabled, onClear: this.handleGroupByClear, onToggle: this.handleGroupByToggle, onSelect: this.handleGroupBySelect, isOpen: isGroupByOpen, placeholderText: t('group_by.tag_key_placeholder'), selections: currentItem, variant: SelectVariant.typeahead }, this.getGroupByItems())));\n    }\n}\nconst GroupByTag = withTranslation()(GroupByTagBase);\nexport { GroupByTag };\n","import { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport { getQuery, orgUnitIdKey, parseQuery, tagKey, tagPrefix } from 'api/queries/query';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { orgActions, orgSelectors } from 'store/orgs';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { styles } from './groupBy.styles';\nimport { GroupByOrg } from './groupByOrg';\nimport { GroupByTag } from './groupByTag';\nconst groupByOrgOptions = [{ label: orgUnitIdKey, value: orgUnitIdKey }];\nconst groupByTagOptions = [{ label: tagKey, value: tagKey }];\nconst orgReportType = \"org\" /* org */;\nconst tagReportType = \"tag\" /* tag */;\nclass GroupByBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            defaultItem: this.props.groupBy || this.props.options[0].value,\n            isGroupByOpen: false,\n            isGroupByOrgVisible: false,\n            isGroupByTagVisible: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleGroupByClick = value => {\n            const { onItemClicked } = this.props;\n            if (value === orgUnitIdKey || value === tagKey) {\n                this.setState({\n                    currentItem: value,\n                    isGroupByOrgVisible: value === orgUnitIdKey,\n                    isGroupByTagVisible: value === tagKey,\n                });\n            }\n            else {\n                this.setState({\n                    currentItem: value,\n                    isGroupByOrgVisible: false,\n                    isGroupByTagVisible: false,\n                });\n                if (onItemClicked) {\n                    onItemClicked(value);\n                }\n            }\n        };\n        this.getGroupByItems = () => {\n            const { options, orgReport, tagReport, t } = this.props;\n            const allOptions = [...options];\n            if (orgReport && orgReport.data && orgReport.data.length > 0) {\n                allOptions.push(...groupByOrgOptions);\n            }\n            if (tagReport && tagReport.data && tagReport.data.length > 0) {\n                allOptions.push(...groupByTagOptions);\n            }\n            return allOptions.map(option => (React.createElement(DropdownItem, { component: \"button\", key: option.value, onClick: () => this.handleGroupByClick(option.value) }, t(`group_by.values.${option.label}`))));\n        };\n        this.getCurrentGroupBy = () => {\n            const { getIdKeyForGroupBy } = this.props;\n            const { defaultItem } = this.state;\n            const queryFromRoute = parseQuery(location.search);\n            if (!(queryFromRoute && queryFromRoute.group_by)) {\n                return defaultItem;\n            }\n            let groupBy = getIdKeyForGroupBy(queryFromRoute.group_by);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by ? Object.keys(queryFromRoute.group_by) : [];\n            for (const key of groupByKeys) {\n                let index = key.indexOf(tagPrefix);\n                if (index !== -1) {\n                    groupBy = tagKey;\n                    this.setState({\n                        isGroupByTagVisible: true,\n                    });\n                    break;\n                }\n                index = key.indexOf(orgUnitIdKey);\n                if (index !== -1) {\n                    groupBy = orgUnitIdKey;\n                    this.setState({\n                        isGroupByOrgVisible: true,\n                    });\n                    break;\n                }\n            }\n            return groupBy !== 'date' ? groupBy : defaultItem;\n        };\n        this.handleGroupBySelect = () => {\n            this.setState({\n                isGroupByOpen: !this.state.isGroupByOpen,\n            });\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({\n                isGroupByOpen,\n            });\n        };\n        this.handleGroupByClick = this.handleGroupByClick.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        const { fetchOrg, fetchTag, queryString, orgReportPathsType, showOrgs, showTags, tagReportPathsType } = this.props;\n        if (showOrgs) {\n            fetchOrg(orgReportPathsType, orgReportType, queryString);\n        }\n        if (showTags) {\n            fetchTag(tagReportPathsType, tagReportType, queryString);\n        }\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchOrg, fetchTag, groupBy, orgReportPathsType, perspective, queryString, showOrgs, showTags, tagReportPathsType, } = this.props;\n        if (prevProps.groupBy !== groupBy || prevProps.perspective !== perspective) {\n            if (showOrgs) {\n                fetchOrg(orgReportPathsType, orgReportType, queryString);\n            }\n            if (showTags) {\n                fetchTag(tagReportPathsType, tagReportType, queryString);\n            }\n            let options;\n            if (prevProps.perspective !== perspective) {\n                options = {\n                    isGroupByOrgVisible: false,\n                    isGroupByTagVisible: false,\n                };\n            }\n            this.setState(Object.assign({ currentItem: this.getCurrentGroupBy() }, (options ? options : {})));\n        }\n    }\n    render() {\n        const { getIdKeyForGroupBy, groupBy, isDisabled = false, onItemClicked, orgReport, t, tagReport } = this.props;\n        const { currentItem, isGroupByOpen, isGroupByOrgVisible, isGroupByTagVisible } = this.state;\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(\"label\", { style: styles.groupBySelectorLabel }, t('group_by.label')),\n            React.createElement(Dropdown, { onSelect: this.handleGroupBySelect, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled, onToggle: this.handleGroupByToggle }, t(`group_by.values.${currentItem}`)), isOpen: isGroupByOpen, dropdownItems: [this.getGroupByItems()] }),\n            Boolean(isGroupByOrgVisible) && (React.createElement(GroupByOrg, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: isDisabled, onItemClicked: onItemClicked, options: groupByOrgOptions, orgReport: orgReport })),\n            Boolean(isGroupByTagVisible) && (React.createElement(GroupByTag, { groupBy: groupBy, isDisabled: isDisabled, onItemClicked: onItemClicked, options: groupByTagOptions, tagReport: tagReport }))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { orgReportPathsType, tagReportPathsType }) => {\n    const queryString = getQuery({\n    // key_only: true\n    });\n    const orgReport = orgSelectors.selectOrg(state, orgReportPathsType, orgReportType, queryString);\n    const orgReportFetchStatus = orgSelectors.selectOrgFetchStatus(state, orgReportPathsType, orgReportType, queryString);\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, queryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, queryString);\n    return {\n        queryString,\n        orgReport,\n        orgReportFetchStatus,\n        tagReport,\n        tagReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchOrg: orgActions.fetchOrg,\n    fetchTag: tagActions.fetchTag,\n};\nconst GroupByConnect = connect(mapStateToProps, mapDispatchToProps)(GroupByBase);\nconst GroupBy = withTranslation()(GroupByConnect);\nexport { GroupBy };\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport { tagPrefix } from 'api/queries/query';\nimport { ExportModal } from 'pages/views/components/export/exportModal';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, query, reportPathsType } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, query: query, reportPathsType: reportPathsType, showTimeScope: true }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, t, redirectToCostModel, history, item: { source_uuid }, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, t('details.actions.export')),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], history) }, t('details.actions.price_list')));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = withRouter(withTranslation()(DetailsActionsConnect));\nexport { Actions };\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const styles = {\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingLeft: global_spacer_lg.value,\n        paddingRight: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n};\n","import global_FontWeight_bold from '@patternfly/react-tokens/dist/js/global_FontWeight_bold';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    dataListHeading: {\n        fontWeight: global_FontWeight_bold.value,\n    },\n    groupByHeading: {\n        marginBottom: global_spacer_lg.value,\n    },\n    tagLink: {\n        marginLeft: global_spacer_sm.value,\n    },\n    tagsContainer: {\n        marginRight: global_spacer_3xl.value,\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import { DataList, DataListCell, DataListItem, DataListItemCells, DataListItemRow } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { styles } from './tag.styles';\nclass TagViewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDataListItems = () => {\n            const { tagReport } = this.props;\n            const result = [];\n            if (tagReport) {\n                for (const item of tagReport.data) {\n                    for (const val of item.values) {\n                        const id = `${item.key}:${val}`;\n                        result.push(React.createElement(DataListItem, { \"aria-labelledby\": id, key: `${id}-item` },\n                            React.createElement(DataListItemRow, null,\n                                React.createElement(DataListItemCells, { dataListCells: [\n                                        React.createElement(DataListCell, { key: `${id}-cell1` },\n                                            React.createElement(\"span\", { id: id }, item.key)),\n                                        React.createElement(DataListCell, { key: `${id}-cell2` }, val),\n                                    ] }))));\n                    }\n                }\n            }\n            return result;\n        };\n    }\n    render() {\n        const { filterBy, groupBy, t } = this.props;\n        const dataListItems = this.getDataListItems();\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", null,\n                React.createElement(\"span\", { style: styles.dataListHeading }, t(`group_by.values.${groupBy}`))),\n            React.createElement(\"div\", { style: styles.groupByHeading },\n                React.createElement(\"span\", null, filterBy)),\n            React.createElement(DataList, { \"aria-label\": \"Simple data list example\", isCompact: true },\n                React.createElement(DataListItem, { \"aria-labelledby\": \"heading1\" },\n                    React.createElement(DataListItemRow, null,\n                        React.createElement(DataListItemCells, { dataListCells: [\n                                React.createElement(DataListCell, { key: \"primary content\" },\n                                    React.createElement(\"span\", { id: \"heading1\", style: styles.dataListHeading }, t('tag.heading_key'))),\n                                React.createElement(DataListCell, { key: \"secondary content\" },\n                                    React.createElement(\"span\", { id: \"heading2\", style: styles.dataListHeading }, t('tag.heading_value'))),\n                            ] }))),\n                dataListItems.map(item => item))));\n    }\n}\nconst TagView = withTranslation()(connect()(TagViewBase));\nexport { TagView };\n","import { Modal } from '@patternfly/react-core';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { TagView } from './tagView';\nconst tagReportType = \"tag\" /* tag */;\nclass TagModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getTagValueCount = () => {\n            const { tagReport } = this.props;\n            let count = 0;\n            if (tagReport) {\n                for (const item of tagReport.data) {\n                    if (item.values) {\n                        count += item.values.length;\n                    }\n                }\n            }\n            return count;\n        };\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    componentDidMount() {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        fetchTag(tagReportPathsType, tagReportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchTag(tagReportPathsType, tagReportType, queryString);\n        }\n    }\n    shouldComponentUpdate(nextProps) {\n        const { filterBy, isOpen } = this.props;\n        return nextProps.filterBy !== filterBy || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { filterBy, groupBy, isOpen, tagReport, t } = this.props;\n        return (React.createElement(Modal, { isOpen: isOpen, onClose: this.handleClose, title: t('tag.title', {\n                value: this.getTagValueCount(),\n            }), width: '50%' },\n            React.createElement(TagView, { filterBy: filterBy, groupBy: groupBy, tagReport: tagReport })));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, tagReportPathsType }) => {\n    const queryFromRoute = parseQuery(location.search);\n    const queryString = getQuery({\n        filter: Object.assign({ [groupBy]: filterBy, resolution: 'monthly', time_scope_units: 'month', time_scope_value: -1 }, (queryFromRoute.filter.account && {\n            account: queryFromRoute.filter.account,\n        })),\n    });\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, queryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, queryString);\n    return {\n        queryString,\n        tagReport,\n        tagReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst TagModal = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(TagModalBase));\nexport { TagModal };\n","import { TagIcon } from '@patternfly/react-icons/dist/js/icons/tag-icon';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { getTestProps, testIds } from 'testIds';\nimport { styles } from './tag.styles';\nimport { TagModal } from './tagModal';\nconst tagReportType = \"tag\" /* tag */;\nclass TagLinkBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleClose = (isOpen) => {\n            this.setState({ isOpen });\n        };\n        this.handleOpen = event => {\n            this.setState({ isOpen: true });\n            event.preventDefault();\n            return false;\n        };\n        this.handleClose = this.handleClose.bind(this);\n        this.handleOpen = this.handleOpen.bind(this);\n    }\n    componentDidMount() {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        fetchTag(tagReportPathsType, tagReportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchTag(tagReportPathsType, tagReportType, queryString);\n        }\n    }\n    render() {\n        const { filterBy, groupBy, id, tagReport, tagReportPathsType } = this.props;\n        const { isOpen } = this.state;\n        let count = 0;\n        if (tagReport) {\n            for (const item of tagReport.data) {\n                if (item.values) {\n                    count += item.values.length;\n                }\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.tagsContainer, id: id },\n            Boolean(count > 0) && (React.createElement(React.Fragment, null,\n                React.createElement(TagIcon, null),\n                React.createElement(\"a\", Object.assign({}, getTestProps(testIds.details.tag_lnk), { href: \"#/\", onClick: this.handleOpen, style: styles.tagLink }), count))),\n            React.createElement(TagModal, { filterBy: filterBy, groupBy: groupBy, isOpen: isOpen, onClose: this.handleClose, tagReportPathsType: tagReportPathsType })));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { filterBy, groupBy, tagReportPathsType }) => {\n    const queryFromRoute = parseQuery(location.search);\n    const queryString = getQuery({\n        filter: Object.assign({ [groupBy]: filterBy, resolution: 'monthly', time_scope_units: 'month', time_scope_value: -1 }, (queryFromRoute.filter.account && {\n            account: queryFromRoute.filter.account,\n        })),\n    });\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, queryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, queryString);\n    return {\n        filterBy,\n        queryString,\n        tagReport,\n        tagReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst TagLink = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(TagLinkBase));\nexport { TagLink };\n","import global_BackgroundColor_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_100';\nimport global_Color_200 from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_xl from '@patternfly/react-tokens/dist/js/global_spacer_xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    cost: {\n        marginTop: global_spacer_xl.var,\n    },\n    costLabel: {\n        marginTop: global_spacer_xs.var,\n    },\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n        textAlign: 'right',\n    },\n    costLabelDate: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_200.var,\n        textAlign: 'right',\n    },\n    header: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        paddingLeft: global_spacer_lg.var,\n        paddingRight: global_spacer_lg.var,\n        paddingTop: global_spacer_lg.var,\n        backgroundColor: global_BackgroundColor_100.var,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    tabs: {\n        display: 'flex',\n    },\n    tag: {\n        marginLeft: global_spacer_lg.var,\n    },\n    title: {\n        paddingBottom: global_spacer_lg.var,\n        paddingTop: global_spacer_md.var,\n    },\n};\n","import './breakdownHeader.scss';\nimport { Title } from '@patternfly/react-core';\nimport { AngleLeftIcon } from '@patternfly/react-icons/dist/js/icons/angle-left-icon';\nimport { breakdownDescKey, breakdownTitleKey, getQueryRoute, orgUnitIdKey } from 'api/queries/query';\nimport { TagLink } from 'pages/views/details/components/tag/tagLink';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { getForDateRangeString } from 'utils/dateRange';\nimport { formatValue } from 'utils/formatValue';\nimport { styles } from './breakdownHeader.styles';\nclass BreakdownHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.buildDetailsLink = () => {\n            const { detailsURL, groupBy, query } = this.props;\n            let groupByKey = groupBy;\n            let value = '*';\n            // Retrieve org unit used by the details page\n            if (query[orgUnitIdKey]) {\n                groupByKey = orgUnitIdKey;\n                value = query[orgUnitIdKey];\n            }\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { group_by: {\n                    [groupByKey]: value,\n                } });\n            // Don't want these params when returning to the details page\n            if (newQuery.filter) {\n                newQuery.filter.account = undefined;\n                newQuery[breakdownDescKey] = undefined;\n                newQuery[orgUnitIdKey] = undefined;\n                newQuery[breakdownTitleKey] = undefined;\n            }\n            return `${detailsURL}?${getQueryRoute(newQuery)}`;\n        };\n        this.getGroupByOrg = () => {\n            const { query } = this.props;\n            let groupByOrg;\n            for (const groupBy of Object.keys(query.group_by)) {\n                if (groupBy === orgUnitIdKey) {\n                    groupByOrg = query.group_by[orgUnitIdKey];\n                    break;\n                }\n            }\n            return groupByOrg;\n        };\n        this.getTotalCost = () => {\n            const { report } = this.props;\n            const hasCost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total;\n            const cost = formatValue(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD');\n            return cost;\n        };\n    }\n    render() {\n        const { description, filterBy, groupBy, query, t, tabs, tagReportPathsType, title } = this.props;\n        const filterByAccount = query && query.filter ? query.filter.account : undefined;\n        const groupByOrg = this.getGroupByOrg();\n        const showTags = filterByAccount || groupBy === 'account' || groupBy === 'project' || groupBy === 'subscription_guid';\n        // i18n groupBy key\n        const groupByKey = groupBy ? groupBy : filterByAccount ? 'account' : groupByOrg ? orgUnitIdKey : undefined;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", null,\n                React.createElement(\"nav\", { \"aria-label\": \"breadcrumb\", className: \"breadcrumbOverride\" },\n                    React.createElement(\"ol\", { className: \"pf-c-breadcrumb__list\" },\n                        React.createElement(\"li\", { className: \"pf-c-breadcrumb__item\" },\n                            React.createElement(\"span\", { className: \"pf-c-breadcrumb__item-divider\" },\n                                React.createElement(AngleLeftIcon, null)),\n                            React.createElement(Link, { to: this.buildDetailsLink() }, t('breakdown.back_to_details', {\n                                groupBy: groupByKey,\n                                value: tagReportPathsType,\n                            }))))),\n                React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"2xl\" },\n                    t('breakdown.title', { value: title }),\n                    description && React.createElement(\"div\", { style: styles.infoDescription }, description)),\n                React.createElement(\"div\", { style: styles.tabs },\n                    tabs,\n                    React.createElement(\"div\", { style: styles.tag }, Boolean(showTags) && (React.createElement(TagLink, { filterBy: filterBy, groupBy: groupByKey, id: \"tags\", tagReportPathsType: tagReportPathsType }))))),\n            React.createElement(\"div\", { style: styles.cost },\n                React.createElement(\"div\", { style: styles.costLabel },\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: \"4xl\" },\n                        React.createElement(\"span\", null, this.getTotalCost()))),\n                React.createElement(\"div\", { style: styles.costLabelDate }, getForDateRangeString(groupByKey, 'breakdown.total_cost_date', 0)))));\n    }\n}\nconst BreakdownHeader = withTranslation()(BreakdownHeaderBase);\nexport { BreakdownHeader };\n","import { Tab, TabContent, Tabs, TabTitleText } from '@patternfly/react-core';\nimport Loading from 'pages/state/loading';\nimport NoData from 'pages/state/noData';\nimport NoProviders from 'pages/state/noProviders';\nimport NotAvailable from 'pages/state/notAvailable';\nimport React from 'react';\nimport { styles } from './breakdown.styles';\nimport { BreakdownHeader } from './breakdownHeader';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"cost-overview\" /* costOverview */:\n            return 'cost-overview';\n        case \"historical-data\" /* historicalData */:\n            return 'historical-data';\n    }\n};\nclass BreakdownBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            activeTabKey: 0,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getAvailableTabs = () => {\n            const availableTabs = [\n                {\n                    contentRef: React.createRef(),\n                    tab: \"cost-overview\" /* costOverview */,\n                },\n                {\n                    contentRef: React.createRef(),\n                    tab: \"historical-data\" /* historicalData */,\n                },\n            ];\n            return availableTabs;\n        };\n        this.getTab = (tab, contentRef, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, tabContentId: `tab-${index}`, tabContentRef: contentRef, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) }));\n        };\n        this.getTabContent = (availableTabs) => {\n            return availableTabs.map((val, index) => {\n                return (React.createElement(TabContent, { eventKey: index, key: `${getIdKeyForTab(val.tab)}-tabContent`, id: `tab-${index}`, ref: val.contentRef }, this.getTabItem(val.tab, index)));\n            });\n        };\n        this.getTabItem = (tab, index) => {\n            const { costOverviewComponent, historicalDataComponent } = this.props;\n            const { activeTabKey } = this.state;\n            const emptyTab = React.createElement(React.Fragment, null); // Lazily load tabs\n            if (activeTabKey !== index) {\n                return emptyTab;\n            }\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === \"cost-overview\" /* costOverview */) {\n                return costOverviewComponent;\n            }\n            else if (currentTab === \"historical-data\" /* historicalData */) {\n                return historicalDataComponent;\n            }\n            else {\n                return emptyTab;\n            }\n        };\n        this.getTabs = (availableTabs) => {\n            const { activeTabKey } = this.state;\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((val, index) => this.getTab(val.tab, val.contentRef, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            if (tab === \"cost-overview\" /* costOverview */) {\n                return t('breakdown.cost_overview_title');\n            }\n            else if (tab === \"historical-data\" /* historicalData */) {\n                return t('breakdown.historical_data_title');\n            }\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { activeTabKey } = this.state;\n            if (activeTabKey !== tabIndex) {\n                this.setState({\n                    activeTabKey: tabIndex,\n                });\n            }\n        };\n        // Ensure at least one source provider has data available\n        this.hasCurrentMonthData = () => {\n            const { providers } = this.props;\n            let result = false;\n            if (providers && providers.data) {\n                for (const provider of providers.data) {\n                    if (provider.current_month_data) {\n                        result = true;\n                        break;\n                    }\n                }\n            }\n            return result;\n        };\n        this.updateReport = () => {\n            const { location, fetchReport, queryString, reportPathsType, reportType } = this.props;\n            if (location.search) {\n                fetchReport(reportPathsType, reportType, queryString);\n            }\n        };\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps) {\n        const { location, report, reportError, queryString } = this.props;\n        const newQuery = prevProps.queryString !== queryString;\n        const noReport = !report && !reportError;\n        const noLocation = !location.search;\n        if (newQuery || noReport || noLocation) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { description, detailsURL, emptyStateTitle, filterBy, groupBy, providers, providersFetchStatus, providerType, query, report, reportError, reportFetchStatus, tagReportPathsType, title, } = this.props;\n        const availableTabs = this.getAvailableTabs();\n        // Note: Providers are fetched via the InactiveSources component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: emptyStateTitle });\n        }\n        else if (providersFetchStatus === 1 /* inProgress */ && reportFetchStatus === 1 /* inProgress */) {\n            return React.createElement(Loading, { title: emptyStateTitle });\n        }\n        else if (providersFetchStatus === 2 /* complete */ && reportFetchStatus === 2 /* complete */) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0 && providersFetchStatus === 2 /* complete */;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: providerType, title: emptyStateTitle });\n            }\n            if (!this.hasCurrentMonthData()) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(BreakdownHeader, { description: description, detailsURL: detailsURL, filterBy: filterBy, groupBy: groupBy, query: query, report: report, tabs: this.getTabs(availableTabs), tagReportPathsType: tagReportPathsType, title: title }),\n            React.createElement(\"div\", { style: styles.content }, this.getTabContent(availableTabs))));\n    }\n}\nexport default BreakdownBase;\n","import global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    clustersContainer: {\n        marginRight: global_spacer_3xl.value,\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import global_spacer_2xl from '@patternfly/react-tokens/dist/js/global_spacer_2xl';\nexport const styles = {\n    modal: {\n        // Workaround for isLarge not working properly\n        height: '700px',\n        width: '600px',\n    },\n    subTitle: {\n        marginTop: global_spacer_2xl.value,\n        textAlign: 'right',\n    },\n};\n","import React from 'react';\nimport { withTranslation } from 'react-i18next';\nclass ClusterViewBase extends React.Component {\n    render() {\n        const { item } = this.props;\n        if (!item.clusters) {\n            return null;\n        }\n        return item.clusters.map((cluster, index) => React.createElement(\"div\", { key: `cluster-${index}` }, cluster));\n    }\n}\nconst ClusterView = withTranslation()(ClusterViewBase);\nexport { ClusterView, ClusterViewBase };\n","import './clusterModal.scss';\nimport { Modal } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './clusterModal.styles';\nimport { ClusterView } from './clusterView';\nclass ClusterModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    shouldComponentUpdate(nextProps) {\n        const { isOpen, item } = this.props;\n        return nextProps.item !== item || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { groupBy, isOpen, item, t } = this.props;\n        return (React.createElement(Modal, { className: \"modalOverride\", style: styles.modal, isOpen: isOpen, onClose: this.handleClose, title: t('details.clusters_modal_title', {\n                groupBy,\n                name: item.label,\n            }), width: '50%' },\n            React.createElement(ClusterView, { item: item })));\n    }\n}\nconst ClusterModal = withTranslation()(ClusterModalBase);\nexport { ClusterModal };\n","import React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { getTestProps, testIds } from 'testIds';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { styles } from './cluster.styles';\nimport { ClusterModal } from './clusterModal';\nclass ClusterBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isOpen: false,\n            showAll: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleClose = (isOpen) => {\n            this.setState({ isOpen });\n        };\n        this.handleOpen = event => {\n            this.setState({ isOpen: true });\n            event.preventDefault();\n            return false;\n        };\n        this.handleClose = this.handleClose.bind(this);\n        this.handleOpen = this.handleOpen.bind(this);\n    }\n    render() {\n        const { groupBy, report, t } = this.props;\n        const { isOpen, showAll } = this.state;\n        let charCount = 0;\n        const maxChars = 50;\n        const someClusters = [];\n        const allClusters = [];\n        const computedItems = getComputedReportItems({\n            report,\n            idKey: groupBy,\n        });\n        const item = computedItems && computedItems.length ? computedItems[0] : undefined;\n        if (!item) {\n            return null;\n        }\n        for (const cluster of item.clusters) {\n            const prefix = someClusters.length > 0 ? ', ' : '';\n            const clusterString = `${prefix}${cluster}`;\n            if (showAll) {\n                someClusters.push(clusterString);\n            }\n            else if (charCount <= maxChars) {\n                if (charCount + clusterString.length > maxChars) {\n                    someClusters.push(clusterString\n                        .slice(0, maxChars - charCount)\n                        .trim()\n                        .concat('...'));\n                }\n                else {\n                    someClusters.push(clusterString);\n                }\n            }\n            charCount += clusterString.length;\n            allClusters.push(cluster);\n        }\n        return (React.createElement(\"div\", { style: styles.clustersContainer },\n            Boolean(someClusters) && someClusters.map((cluster, index) => React.createElement(\"span\", { key: index }, cluster)),\n            Boolean(someClusters.length < allClusters.length) && (React.createElement(\"a\", Object.assign({}, getTestProps(testIds.details.cluster_lnk), { href: \"#/\", onClick: this.handleOpen }), t('details.more_clusters', {\n                value: allClusters.length - someClusters.length,\n            }))),\n            React.createElement(ClusterModal, { groupBy: groupBy, isOpen: isOpen, item: item, onClose: this.handleClose })));\n    }\n}\nconst Cluster = withTranslation()(ClusterBase);\nexport { Cluster };\n","import global_FontWeight_bold from '@patternfly/react-tokens/dist/js/global_FontWeight_bold';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const chartStyles = {\n    chartHeight: 150,\n    subTitle: {\n        fontWeight: global_FontWeight_bold.value,\n    },\n};\nexport const styles = {\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { ChartLabel, ChartLegend, ChartPie, ChartThemeColor } from '@patternfly/react-charts';\nimport Skeleton from '@redhat-cloud-services/frontend-components/Skeleton';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { formatValue } from 'utils/formatValue';\nimport { chartStyles, styles } from './costChart.styles';\nclass CostChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            width: 0,\n        };\n        // Override legend layout\n        this.getLegendLabel = () => {\n            return (_a) => {\n                var { values } = _a, props = __rest(_a, [\"values\"]);\n                return (React.createElement(ChartLabel, Object.assign({}, props, { style: [{ fontWeight: chartStyles.subTitle.fontWeight }, {}], text: [values[props.index], props.text] })));\n            };\n        };\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, size: \"md\" })));\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        setTimeout(() => {\n            if (this.containerRef.current) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n            window.addEventListener('resize', this.handleResize);\n        });\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    render() {\n        const { report, reportFetchStatus, t } = this.props;\n        const { width } = this.state;\n        const hasCost = report && report.meta && report.meta.total && report.meta.total.cost;\n        const hasMarkup = hasCost && report.meta.total.cost.markup;\n        const hasRaw = hasCost && report.meta.total.cost.raw;\n        const hasUsage = hasCost && report.meta.total.cost.usage;\n        const markupUnits = hasMarkup ? report.meta.total.cost.markup.units : 'USD';\n        const rawUnits = hasRaw ? report.meta.total.cost.raw.units : 'USD';\n        const usageUnits = hasUsage ? report.meta.total.cost.usage.units : 'USD';\n        const markupValue = hasMarkup ? report.meta.total.cost.markup.value : 0;\n        const rawValue = hasRaw ? report.meta.total.cost.raw.value : 0;\n        const usageValue = hasUsage ? report.meta.total.cost.usage.value : 0;\n        const markup = formatValue(hasMarkup ? report.meta.total.cost.markup.value : 0, markupUnits);\n        const raw = formatValue(hasRaw ? report.meta.total.cost.raw.value : 0, rawUnits);\n        const usage = formatValue(hasUsage ? report.meta.total.cost.usage.value : 0, usageUnits);\n        const markupLabel = t('breakdown.cost_chart.markup_label');\n        const rawLabel = t('breakdown.cost_chart.raw_label');\n        const usageLabel = t('breakdown.cost_chart.usage_label');\n        // Override legend label layout\n        const LegendLabel = this.getLegendLabel();\n        const Legend = (React.createElement(ChartLegend, { gutter: 25, itemsPerRow: 2, labelComponent: React.createElement(LegendLabel, { dy: 10, lineHeight: 1.5, values: [raw, markup, usage] }), rowGutter: 20 }));\n        return (React.createElement(\"div\", { ref: this.containerRef, style: { height: chartStyles.chartHeight } }, reportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(ChartPie, { ariaDesc: t('breakdown.cost_chart.aria_desc'), ariaTitle: t('breakdown.cost_chart.aria_title'), constrainToVisibleArea: true, data: [\n                { x: rawLabel, y: rawValue, units: rawUnits },\n                { x: markupLabel, y: markupValue, units: markupUnits },\n                { x: usageLabel, y: usageValue, units: usageUnits },\n            ], height: chartStyles.chartHeight, labels: ({ datum }) => t('breakdown.cost_chart.tooltip', {\n                name: datum.x,\n                value: formatValue(datum.y, datum.units),\n            }), legendComponent: Legend, legendData: [\n                {\n                    name: rawLabel,\n                },\n                {\n                    name: markupLabel,\n                },\n                {\n                    name: usageLabel,\n                },\n            ], legendOrientation: \"vertical\", legendPosition: \"right\", padding: {\n                bottom: 20,\n                left: 0,\n                right: width - chartStyles.chartHeight,\n                top: 20,\n            }, themeColor: ChartThemeColor.green, width: width }))));\n    }\n}\nconst CostChart = withTranslation()(CostChartBase);\nexport { CostChart };\n","import global_spacer_xl from '@patternfly/react-tokens/dist/js/global_spacer_xl';\nexport const styles = {\n    mainContent: {\n        marginTop: global_spacer_xl.value,\n    },\n    subTitle: {\n        textAlign: 'right',\n    },\n};\n","import { Title } from '@patternfly/react-core';\nimport { getQuery, orgUnitIdKey } from 'api/queries/query';\nimport { ReportSummaryItem, ReportSummaryItems } from 'components/reports/reportSummary';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue } from 'utils/formatValue';\nimport { formatCurrency } from 'utils/formatValue';\nimport { styles } from './summaryModal.styles';\nconst reportType = \"cost\" /* cost */;\nclass SummaryModalViewBase extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    render() {\n        const { report, reportGroupBy, reportFetchStatus, t } = this.props;\n        const cost = formatCurrency(report && report.meta && report.meta.total ? report.meta.total.cost.total.value : 0);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { style: styles.subTitle },\n                React.createElement(Title, { headingLevel: \"h2\", size: \"xl\" }, t('details.cost_value', { value: cost }))),\n            React.createElement(\"div\", { style: styles.mainContent },\n                React.createElement(ReportSummaryItems, { idKey: reportGroupBy, report: report, status: reportFetchStatus }, ({ items }) => items.map(_item => (React.createElement(ReportSummaryItem, { key: _item.id, formatOptions: {}, formatValue: formatValue, label: _item.label ? _item.label.toString() : '', totalValue: report.meta.total.cost.total.value, units: report.meta.total.cost.total.units, value: _item.cost.total.value })))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { groupBy, groupByValue, query, reportGroupBy, reportPathsType }) => {\n    const groupByOrg = query && query.group_by[orgUnitIdKey] ? query.group_by[orgUnitIdKey] : undefined;\n    const newQuery = Object.assign(Object.assign({ filter: Object.assign(Object.assign(Object.assign({ time_scope_units: 'month', time_scope_value: -1, resolution: 'monthly' }, (query && query.filter && query.filter.account && { account: query.filter.account })), (groupBy && { [groupBy]: groupByValue })), (groupByOrg && { [orgUnitIdKey]: groupByOrg })) }, (query && query.filter_by && { filter_by: query.filter_by })), { group_by: Object.assign({}, (reportGroupBy && { [reportGroupBy]: '*' })) });\n    const queryString = getQuery(newQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst SummaryModalView = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(SummaryModalViewBase));\nexport { SummaryModalView };\n","import './summaryModal.scss';\nimport { Modal } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { SummaryModalView } from './summaryModalView';\nclass SummaryModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    shouldComponentUpdate(nextProps) {\n        const { groupByValue, isOpen } = this.props;\n        return nextProps.groupByValue !== groupByValue || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { groupBy, groupByValue, isOpen, query, reportGroupBy, reportPathsType, t } = this.props;\n        return (React.createElement(Modal, { className: \"modalOverride\", isOpen: isOpen, onClose: this.handleClose, title: t('details.summary_modal_title', {\n                groupBy: reportGroupBy,\n                name: groupByValue,\n            }), variant: \"large\" },\n            React.createElement(SummaryModalView, { groupBy: groupBy, groupByValue: groupByValue, query: query, reportGroupBy: reportGroupBy, reportPathsType: reportPathsType })));\n    }\n}\nconst SummaryModal = withTranslation()(SummaryModalBase);\nexport { SummaryModal };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    card: {},\n    skeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    viewAllContainer: {\n        marginLeft: '-15px',\n    },\n};\n","import { Button, ButtonType, ButtonVariant, Card, CardBody, CardFooter, CardTitle, Title, } from '@patternfly/react-core';\nimport Skeleton from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { getQuery, orgUnitIdKey } from 'api/queries/query';\nimport { ReportSummaryItem, ReportSummaryItems } from 'components/reports/reportSummary';\nimport { SummaryModal } from 'pages/views/details/components/summary/summaryModal';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getTestProps, testIds } from 'testIds';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { formatValue } from 'utils/formatValue';\nimport { styles } from './summaryCard.styles';\nclass SummaryBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            isBulletChartModalOpen: false,\n        };\n        this.getItems = () => {\n            const { report, reportGroupBy } = this.props;\n            const computedItems = getComputedReportItems({\n                report,\n                idKey: reportGroupBy,\n            });\n            return computedItems;\n        };\n        this.getSummary = () => {\n            const { report, reportGroupBy, reportFetchStatus } = this.props;\n            return (React.createElement(ReportSummaryItems, { idKey: reportGroupBy, report: report, status: reportFetchStatus }, ({ items }) => items.map(reportItem => (React.createElement(ReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: {}, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : undefined, totalValue: report.meta.total.cost.total.value, units: report.meta.total.cost.total.units, value: reportItem.cost.total.value })))));\n        };\n        this.getViewAll = () => {\n            const { groupBy, groupByValue, query, reportGroupBy, reportPathsType, t } = this.props;\n            const { isBulletChartModalOpen } = this.state;\n            const computedItems = this.getItems();\n            const otherIndex = computedItems.findIndex(i => {\n                const id = i.id;\n                if (id && id !== null) {\n                    return id.toString().includes('Other');\n                }\n            });\n            if (otherIndex !== -1) {\n                return (React.createElement(\"div\", { style: styles.viewAllContainer },\n                    React.createElement(Button, Object.assign({}, getTestProps(testIds.details.view_all_btn), { onClick: this.handleBulletChartModalOpen, type: ButtonType.button, variant: ButtonVariant.link }), t('details.view_all', { groupBy: reportGroupBy })),\n                    React.createElement(SummaryModal, { groupBy: groupBy, groupByValue: groupByValue, isOpen: isBulletChartModalOpen, onClose: this.handleBulletChartModalClose, query: query, reportGroupBy: reportGroupBy, reportPathsType: reportPathsType })));\n            }\n            else {\n                return null;\n            }\n        };\n        this.handleBulletChartModalClose = (isOpen) => {\n            this.setState({ isBulletChartModalOpen: isOpen });\n        };\n        this.handleBulletChartModalOpen = event => {\n            this.setState({ isBulletChartModalOpen: true });\n            event.preventDefault();\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    render() {\n        const { reportGroupBy, reportFetchStatus, t } = this.props;\n        return (React.createElement(Card, { style: styles.card },\n            React.createElement(CardTitle, null,\n                React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('breakdown.summary_title', { groupBy: reportGroupBy }))),\n            React.createElement(CardBody, null, reportFetchStatus === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { size: \"md\" }),\n                React.createElement(Skeleton, { size: \"md\", style: styles.skeleton }),\n                React.createElement(Skeleton, { size: \"md\", style: styles.skeleton }),\n                React.createElement(Skeleton, { size: \"md\", style: styles.skeleton }))) : (this.getSummary())),\n            React.createElement(CardFooter, null, this.getViewAll())));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { groupBy, groupByValue, query, reportGroupBy, reportPathsType, reportType }) => {\n    const groupByOrg = query && query.group_by[orgUnitIdKey] ? query.group_by[orgUnitIdKey] : undefined;\n    const newQuery = Object.assign(Object.assign({ filter: Object.assign(Object.assign(Object.assign({ limit: 3, time_scope_units: 'month', time_scope_value: -1, resolution: 'monthly' }, (query && query.filter && query.filter.account && { account: query.filter.account })), (groupBy && { [groupBy]: groupByValue })), (groupByOrg && { [orgUnitIdKey]: groupByOrg })) }, (query && query.filter_by && { filter_by: query.filter_by })), { group_by: Object.assign({}, (reportGroupBy && { [reportGroupBy]: '*' })) });\n    const queryString = getQuery(newQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportFetchStatus,\n        reportPathsType,\n        reportType,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst SummaryCard = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(SummaryBase));\nexport { SummaryCard };\n","import global_FontWeight_bold from '@patternfly/react-tokens/dist/js/global_FontWeight_bold';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    chartSkeleton: {\n        marginBottom: global_spacer_md.value,\n    },\n    capacity: {\n        fontWeight: global_FontWeight_bold.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { ChartBullet } from '@patternfly/react-charts';\nimport { Grid, GridItem } from '@patternfly/react-core';\nimport Skeleton from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { parseQuery } from 'api/queries/ocpQuery';\nimport { getQuery } from 'api/queries/query';\nimport { getGroupById, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { styles } from './usageChart.styles';\nclass UsageChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.state = {\n            width: 0,\n        };\n        this.handleResize = () => {\n            if (this.containerRef.current && this.containerRef.current.clientWidth) {\n                this.setState({ width: this.containerRef.current.clientWidth });\n            }\n        };\n        this.getCpuChart = () => {\n            const { groupBy, reportFetchStatus, report } = this.props;\n            const { width } = this.state;\n            const chartDatum = groupBy === 'cluster' ? this.getChartDatumWithCapacity() : this.getChartDatum();\n            if (!report || chartDatum.usage.length === 0) {\n                return null;\n            }\n            return (React.createElement(\"div\", { className: \"chartOverride\" }, reportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(React.Fragment, null,\n                Boolean(groupBy === 'cluster') && this.getFreeSpace(),\n                React.createElement(ChartBullet, { comparativeErrorMeasureData: chartDatum.limit.value\n                        ? [\n                            {\n                                tooltip: chartDatum.limit.tooltip,\n                                y: chartDatum.limit.value,\n                            },\n                        ]\n                        : [], comparativeErrorMeasureLegendData: chartDatum.limit.value ? [{ name: chartDatum.limit.legend }] : [], height: this.getChartHeight(), labels: ({ datum }) => `${datum.tooltip}`, legendPosition: \"bottom-left\", legendItemsPerRow: this.getItemsPerRow(), maxDomain: this.isDatumEmpty(chartDatum) ? 100 : undefined, minDomain: 0, padding: {\n                        bottom: 75,\n                        left: 10,\n                        right: 50,\n                        top: 0,\n                    }, primarySegmentedMeasureData: chartDatum.usage.length\n                        ? chartDatum.usage.map(datum => {\n                            return {\n                                tooltip: datum.tooltip,\n                                y: datum.value,\n                            };\n                        })\n                        : [], primarySegmentedMeasureLegendData: chartDatum.usage.length\n                        ? chartDatum.usage.map(datum => {\n                            return {\n                                name: datum.legend,\n                            };\n                        })\n                        : [], qualitativeRangeData: chartDatum.ranges.length\n                        ? [\n                            {\n                                tooltip: chartDatum.ranges[0].tooltip,\n                                y: chartDatum.ranges[0].value,\n                            },\n                        ]\n                        : [], qualitativeRangeLegendData: chartDatum.ranges.length ? [{ name: chartDatum.ranges[0].legend }] : [], width: width })))));\n        };\n        this.getChartHeight = () => {\n            const { groupBy } = this.props;\n            const { width } = this.state;\n            if (groupBy === 'cluster') {\n                return width > 950 ? 115 : width > 450 ? 150 : 210;\n            }\n            else {\n                return width > 700 ? 115 : width > 450 ? 150 : 180;\n            }\n        };\n        this.getItemsPerRow = () => {\n            const { width } = this.state;\n            return width > 950 ? 4 : width > 700 ? 3 : width > 450 ? 2 : 1;\n        };\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, size: \"md\" }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, size: \"xs\" })));\n        };\n        this.isDatumEmpty = (datum) => {\n            let hasRange = false;\n            for (const range of datum.ranges) {\n                if (range.value) {\n                    hasRange = true;\n                    break;\n                }\n            }\n            let hasUsage = false;\n            for (const usage of datum.usage) {\n                if (usage.value) {\n                    hasUsage = true;\n                    break;\n                }\n            }\n            return !(datum.limit.value || hasRange || hasUsage);\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n        window.addEventListener('resize', this.handleResize);\n        this.handleResize();\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        if (prevProps.queryString !== this.props.queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    componentWillUnmount() {\n        window.removeEventListener('resize', this.handleResize);\n    }\n    getChartDatum() {\n        const { report, reportType, t } = this.props;\n        const datum = {\n            limit: {},\n            ranges: [],\n            usage: [],\n        };\n        // Always show bullet chart legends https://github.com/project-koku/koku-ui/issues/963\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasLimit = hasTotal && report.meta.total.limit && report.meta.total.limit !== null;\n        const limit = Math.trunc(hasLimit ? report.meta.total.limit.value : 0);\n        const limitUnits = t(`units.${unitLookupKey(hasLimit ? report.meta.total.limit.units : '')}`);\n        datum.limit = {\n            legend: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            tooltip: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            value: Math.trunc(limit),\n        };\n        const hasRequest = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = t(`units.${unitLookupKey(hasRequest ? report.meta.total.request.units : '')}`);\n        datum.ranges = [\n            {\n                legend: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                value: Math.trunc(request),\n            },\n        ];\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = t(`units.${unitLookupKey(hasUsage ? report.meta.total.usage.units : '')}`);\n        datum.usage = [\n            {\n                legend: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                value: Math.trunc(usage),\n            },\n        ];\n        return datum;\n    }\n    getChartDatumWithCapacity() {\n        const { report, reportType, t } = this.props;\n        const datum = {\n            limit: {},\n            ranges: [],\n            usage: [],\n        };\n        // Always show bullet chart legends https://github.com/project-koku/koku-ui/issues/963\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasLimit = hasTotal && report.meta.total.limit && report.meta.total.limit !== null;\n        const limit = Math.trunc(hasLimit ? report.meta.total.limit.value : 0);\n        const limitUnits = t(`units.${unitLookupKey(hasLimit ? report.meta.total.limit.units : '')}`);\n        datum.limit = {\n            legend: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            tooltip: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            value: Math.trunc(limit),\n        };\n        const hasCapacity = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const capacity = Math.trunc(hasCapacity ? report.meta.total.capacity.value : 0);\n        const capacityUnits = t(`units.${unitLookupKey(hasCapacity ? report.meta.total.capacity.units : '')}`);\n        datum.ranges = [\n            {\n                legend: t(`details.usage.${reportType}_capacity`, {\n                    value: capacity,\n                    units: capacityUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_capacity`, {\n                    value: capacity,\n                    units: capacityUnits,\n                }),\n                value: Math.trunc(capacity),\n            },\n        ];\n        const hasRequest = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = t(`units.${unitLookupKey(hasRequest ? report.meta.total.request.units : '')}`);\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = t(`units.${unitLookupKey(hasUsage ? report.meta.total.usage.units : '')}`);\n        datum.usage = [\n            {\n                legend: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                value: Math.trunc(usage),\n            },\n            {\n                legend: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                value: Math.trunc(request),\n            },\n        ];\n        return datum;\n    }\n    getFreeSpace() {\n        const { report, reportType, t } = this.props;\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasCapacity = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const hasRequest = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const capacity = Math.trunc(hasCapacity ? report.meta.total.capacity.value : 0);\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = t(`units.${unitLookupKey(hasRequest ? report.meta.total.request.units : '')}`);\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = t(`units.${unitLookupKey(hasUsage ? report.meta.total.usage.units : '')}`);\n        // Show negative values https://github.com/project-koku/koku-ui/issues/1214\n        const unusedRequestCapacity = capacity - request;\n        const unusedUsageCapacity = capacity - usage;\n        let unusedRequestCapacityPercentage = request > 0 ? (request / capacity) * 100 : 0;\n        if (unusedRequestCapacityPercentage > 100) {\n            unusedRequestCapacityPercentage = 100 - unusedRequestCapacityPercentage;\n        }\n        let unusedUsageCapacityPercentage = capacity > usage ? (usage / capacity) * 100 : 0;\n        if (unusedUsageCapacityPercentage > 100) {\n            unusedUsageCapacityPercentage = 100 - unusedUsageCapacityPercentage;\n        }\n        return (React.createElement(Grid, { hasGutter: true },\n            React.createElement(GridItem, { md: 12, lg: 6 },\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_usage_unused_label`)),\n                React.createElement(\"div\", { style: styles.capacity }, formatValue(unusedUsageCapacity)),\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_usage_unused_units`, {\n                    percentage: formatValue(unusedUsageCapacityPercentage, usageUnits),\n                    units: usageUnits,\n                }))),\n            React.createElement(GridItem, { md: 12, lg: 6 },\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_requests_unused_label`)),\n                React.createElement(\"div\", { style: styles.capacity }, formatValue(unusedRequestCapacity)),\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_requests_unused_units`, {\n                    percentage: formatValue(unusedRequestCapacityPercentage, requestUnits),\n                    units: requestUnits,\n                })))));\n    }\n    render() {\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef }, this.getCpuChart()));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportPathsType, reportType }) => {\n    const queryFromRoute = parseQuery(location.search);\n    const query = queryFromRoute;\n    const groupBy = getGroupById(query);\n    const groupByValue = getGroupByValue(query);\n    const newQuery = Object.assign({ filter: Object.assign({ time_scope_units: 'month', time_scope_value: -1, resolution: 'monthly' }, (groupBy && { [groupBy]: groupByValue })) }, (query && query.filter_by && { filter_by: query.filter_by }));\n    const queryString = getQuery(newQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        groupBy,\n        report,\n        reportFetchStatus,\n        queryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst UsageChart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(UsageChartBase));\nexport { UsageChart };\n","import { Button, ButtonVariant, Card, CardBody, CardTitle, Grid, GridItem, Popover, Title, } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { orgUnitIdKey, tagPrefix } from 'api/queries/query';\nimport { Cluster } from 'pages/views/details/components/cluster/cluster';\nimport { CostChart } from 'pages/views/details/components/costChart/costChart';\nimport { SummaryCard } from 'pages/views/details/components/summary/summaryCard';\nimport { UsageChart } from 'pages/views/details/components/usageChart/usageChart';\nimport { styles } from 'pages/views/details/ocpDetails/detailsHeader.styles';\nimport React from 'react';\nconst PLACEHOLDER = 'placeholder';\nclass CostOverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        // Returns cluster chart\n        this.getClusterChart = (widget) => {\n            const { groupBy, report, t } = this.props;\n            let showWidget = false;\n            for (const groupById of widget.cluster.showWidgetOnGroupBy) {\n                if (groupById === groupBy || (groupById === tagPrefix && groupBy.indexOf(tagPrefix) !== -1)) {\n                    showWidget = true;\n                    break;\n                }\n            }\n            if (showWidget) {\n                return (React.createElement(Card, null,\n                    React.createElement(CardTitle, null,\n                        React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('breakdown.cluster_title'))),\n                    React.createElement(CardBody, null,\n                        React.createElement(Cluster, { groupBy: widget.cluster.reportGroupBy, report: report }))));\n            }\n            return null;\n        };\n        // Returns cost breakdown chart\n        this.getCostChart = () => {\n            const { report, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" },\n                        t('breakdown.cost_breakdown_title'),\n                        React.createElement(Popover, { \"aria-label\": t('breakdown.cost_breakdown_aria_label'), enableFlip: true, bodyContent: React.createElement(React.Fragment, null,\n                                React.createElement(\"p\", { style: styles.infoTitle }, t('breakdown.raw_cost_title')),\n                                React.createElement(\"p\", null, t('breakdown.raw_cost_desc')),\n                                React.createElement(\"br\", null),\n                                React.createElement(\"p\", { style: styles.infoTitle }, t('breakdown.usage_cost_title')),\n                                React.createElement(\"p\", null, t('breakdown.usage_cost_desc')),\n                                React.createElement(\"br\", null),\n                                React.createElement(\"p\", { style: styles.infoTitle }, t('breakdown.markup_title')),\n                                React.createElement(\"p\", null, t('breakdown.markup_desc')),\n                                React.createElement(\"br\", null),\n                                React.createElement(\"a\", { href: t('docs.using_cost_model'), target: \"blank\" }, t('cost_models_wizard.general_info.learn_more'))) },\n                            React.createElement(Button, { variant: ButtonVariant.plain },\n                                React.createElement(OutlinedQuestionCircleIcon, { style: styles.info }))))),\n                React.createElement(CardBody, null,\n                    React.createElement(CostChart, { report: report }))));\n        };\n        // Returns CPU usage chart\n        this.getCpuUsageChart = (widget) => {\n            const { t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.cpu_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(UsageChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns memory usage chart\n        this.getMemoryUsageChart = (widget) => {\n            const { t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.memory_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(UsageChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns summary card widget\n        this.getSummaryCard = (widget) => {\n            const { groupBy, groupByValue, query } = this.props;\n            let showWidget = false;\n            for (const groupById of widget.reportSummary.showWidgetOnGroupBy) {\n                if (groupById === groupBy ||\n                    (query && query.group_by && query.group_by[orgUnitIdKey]) ||\n                    (groupById === tagPrefix && groupBy && groupBy.indexOf(tagPrefix) !== -1)) {\n                    showWidget = true;\n                    break;\n                }\n            }\n            if (showWidget) {\n                return (React.createElement(SummaryCard, { groupBy: groupBy, groupByValue: groupByValue, query: query, reportGroupBy: widget.reportSummary.reportGroupBy, reportPathsType: widget.reportPathsType, reportType: widget.reportType }));\n            }\n            else if (widget.reportSummary.usePlaceholder) {\n                return PLACEHOLDER;\n            }\n            return null;\n        };\n        // Helper to fill grid columns instead of rows, based on the order defined by the reducer\n        this.getWidgetsColumns = () => {\n            const { selectWidgets, widgets } = this.props;\n            const visibleWidgets = [];\n            widgets.map(widgetId => {\n                const widget = selectWidgets[widgetId];\n                const renderedWidget = this.renderWidget(widget);\n                if (renderedWidget !== null) {\n                    visibleWidgets.push(renderedWidget);\n                }\n            });\n            const rows = Math.floor(visibleWidgets.length / 2) + (visibleWidgets.length % 2);\n            const leftColumnWidgets = [];\n            const rightColumnWidgets = [];\n            for (let i = 0; i < rows; i++) {\n                if (visibleWidgets[i] !== PLACEHOLDER) {\n                    leftColumnWidgets.push(visibleWidgets[i]);\n                }\n                if (i + rows < visibleWidgets.length) {\n                    if (visibleWidgets[i + rows] !== PLACEHOLDER) {\n                        rightColumnWidgets.push(visibleWidgets[i + rows]);\n                    }\n                }\n            }\n            return { leftColumnWidgets, rightColumnWidgets };\n        };\n    }\n    // Returns rendered widget based on type\n    renderWidget(widget) {\n        switch (widget.type) {\n            case \"cluster\" /* cluster */:\n                return this.getClusterChart(widget);\n            case \"cost\" /* cost */:\n                return this.getCostChart();\n            case \"cpuUsage\" /* cpuUsage */:\n                return this.getCpuUsageChart(widget);\n            case \"memoryUsage\" /* memoryUsage */:\n                return this.getMemoryUsageChart(widget);\n            case \"summary\" /* reportSummary */:\n                return this.getSummaryCard(widget);\n            default:\n                return null;\n        }\n    }\n    render() {\n        // Sort widgets vertically\n        const { leftColumnWidgets, rightColumnWidgets } = this.getWidgetsColumns();\n        return (React.createElement(Grid, { hasGutter: true },\n            React.createElement(GridItem, { lg: 12, xl: 6 },\n                React.createElement(Grid, { hasGutter: true }, leftColumnWidgets.map((widget, index) => {\n                    return React.createElement(GridItem, { key: `widget-${index}` }, widget);\n                }))),\n            React.createElement(GridItem, { lg: 12, xl: 6 },\n                React.createElement(Grid, { hasGutter: true }, rightColumnWidgets.map((widget, index) => {\n                    return React.createElement(GridItem, { key: `widget-${index}` }, widget);\n                })))));\n    }\n}\nexport { CostOverviewBase };\n","import { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { global_spacer_lg } from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport { global_spacer_sm } from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    currentCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    currentCostData: {\n        fill: 'none',\n    },\n    itemsPerRow: 0,\n    previousCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    previousCostData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString } from 'components/charts/common/chartDatumUtils';\nimport { getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { noop } from 'utils/noop';\nimport { chartStyles, styles } from './historicalCostChart.styles';\nclass HistoricalCostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.resizeObserver = noop;\n        this.navToggle = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentCostData, currentInfrastructureCostData, previousCostData, previousInfrastructureCostData, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            const costInfrastructureTooltipKey = 'chart.cost_infrastructure_legend_tooltip';\n            const costTooltipKey = 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousCostData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentCostData, costTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentCostData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'previousInfrastructureCost',\n                    data: previousInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(previousInfrastructureCostData, costInfrastructureTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousInfrastructureCostData), { stroke: chartStyles.previousColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'currentInfrastructureCost',\n                    data: currentInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(currentInfrastructureCostData, costInfrastructureTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentInfrastructureCostData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.initResizeObserve = () => {\n            const containerElement = this.containerRef.current;\n            const { ResizeObserver } = window;\n            if (containerElement && ResizeObserver) {\n                const resizeObserver = new ResizeObserver(this.handleResize);\n                resizeObserver.observe(containerElement);\n                this.resizeObserver = () => resizeObserver.unobserve(containerElement);\n            }\n            else {\n                this.handleResize();\n                window.addEventListener('resize', this.handleResize);\n                this.resizeObserver = () => window.removeEventListener('resize', this.handleResize);\n                this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 120,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 700 ? chartStyles.itemsPerRow : 2;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\" }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.initResizeObserve();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.currentInfrastructureCostData !== this.props.currentInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData ||\n            prevProps.previousInfrastructureCostData !== this.props.previousInfrastructureCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.resizeObserver) {\n            this.resizeObserver();\n        }\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, previousInfrastructureCostData } = this.props;\n        const currentRequestDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousRequestDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        return currentRequestDate > 0 || previousRequestDate > 0 ? Math.max(currentRequestDate, previousRequestDate) : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 120,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 700\n                ? containerHeight - 25\n                : containerHeight\n            : containerHeight;\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: adjustedContainerHeight }) },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis }))))));\n    }\n}\nexport { HistoricalCostChart };\n","import global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    chartHeight: 300,\n    chartContainerHeight: 300,\n};\nexport const styles = {\n    chartContainer: {\n        marginLeft: global_spacer_lg.value,\n    },\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n    costChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    trendChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    usageChart: {\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import Skeleton from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { transformReport } from 'components/charts/common/chartDatumUtils';\nimport { HistoricalCostChart } from 'components/charts/historicalCostChart';\nimport { getGroupById, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataCostChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, size: \"md\" }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, size: \"xs\" })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, reportType, t, } = this.props;\n        // Current data\n        const currentData = transformReport(currentReport, 0 /* rolling */, 'date', 'cost');\n        const currentInfrastructureCostData = transformReport(currentReport, 0 /* rolling */, 'date', 'infrastructure');\n        // Previous data\n        const previousData = transformReport(previousReport, 0 /* rolling */, 'date', 'cost');\n        const previousInfrastructureCostData = transformReport(previousReport, 0 /* rolling */, 'date', 'infrastructure');\n        const costUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.cost\n            ? currentReport.meta.total.cost.total.units\n            : 'USD';\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.costChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalCostChart, { adjustContainerHeight: true, containerHeight: chartStyles.chartContainerHeight - 25, currentCostData: currentData, currentInfrastructureCostData: currentInfrastructureCostData, formatDatumValue: formatValue, formatDatumOptions: {}, height: chartStyles.chartHeight, previousCostData: previousData, previousInfrastructureCostData: previousInfrastructureCostData, xAxisLabel: t(`breakdown.historical_chart.day_of_month_label`), yAxisLabel: t(`breakdown.historical_chart.${reportType}_label`, {\n                    units: t(`units.${unitLookupKey(costUnits)}`),\n                }) })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportPathsType, reportType }) => {\n    const queryFromRoute = parseQuery(location.search);\n    const query = queryFromRoute;\n    const groupBy = getGroupById(query);\n    const groupByValue = getGroupByValue(query);\n    const currentQuery = Object.assign({ filter: Object.assign({ time_scope_units: 'month', time_scope_value: -1, resolution: 'daily', limit: 3 }, (groupBy && { [groupBy]: groupByValue })) }, (query && query.filter_by && { filter_by: query.filter_by }));\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = Object.assign({ filter: Object.assign({ time_scope_units: 'month', time_scope_value: -2, resolution: 'daily', limit: 3 }, (groupBy && { [groupBy]: groupByValue })) }, (query && query.filter_by && { filter_by: query.filter_by }));\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataCostChart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataCostChartBase));\nexport { HistoricalDataCostChart };\n","import { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { global_spacer_lg } from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport { global_spacer_sm } from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentMonthData: {\n        fill: 'none',\n    },\n    itemsPerRow: 0,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousMonthData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { noop } from 'utils/noop';\nimport { chartStyles, styles } from './historicalTrendChart.styles';\nclass HistoricalTrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.resizeObserver = noop;\n        this.navToggle = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, previousData, showUsageLegendLabel = false } = this.props;\n            const key = showUsageLegendLabel ? 'chart.usage_legend_label' : 'chart.cost_legend_label';\n            const toolTipKey = showUsageLegendLabel ? 'chart.usage_legend_tooltip' : 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousData,\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousData, toolTipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousMonthData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentData,\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentData, toolTipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentMonthData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.initResizeObserve = () => {\n            const containerElement = this.containerRef.current;\n            const { ResizeObserver } = window;\n            if (containerElement && ResizeObserver) {\n                const resizeObserver = new ResizeObserver(this.handleResize);\n                resizeObserver.observe(containerElement);\n                this.resizeObserver = () => resizeObserver.unobserve(containerElement);\n            }\n            else {\n                this.handleResize();\n                window.addEventListener('resize', this.handleResize);\n                this.resizeObserver = () => window.removeEventListener('resize', this.handleResize);\n                this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 120,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: legendItemsPerRow, name: \"legend\" }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.initResizeObserve();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData || prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.resizeObserver) {\n            this.resizeObserver();\n        }\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getEndDate() {\n        const { currentData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0 ? Math.max(currentDate, previousDate) : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, containerHeight = height, padding = {\n            bottom: 120,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: containerHeight }) },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis }))))));\n    }\n}\nexport { HistoricalTrendChart };\n","import Skeleton from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { getQuery, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { transformReport } from 'components/charts/common/chartDatumUtils';\nimport { HistoricalTrendChart } from 'components/charts/historicalTrendChart';\nimport { getGroupById, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataTrendChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, size: \"md\" }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, size: \"xs\" })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, reportType, t, } = this.props;\n        const isCostChart = reportType === \"cost\" /* cost */;\n        // Current data\n        const currentData = transformReport(currentReport, isCostChart ? 0 /* rolling */ : 1 /* daily */, 'date', isCostChart ? 'cost' : 'usage');\n        const previousData = transformReport(previousReport, isCostChart ? 0 /* rolling */ : 1 /* daily */, 'date', isCostChart ? 'cost' : 'usage');\n        const costUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.cost\n            ? currentReport.meta.total.cost.total.units\n            : 'USD';\n        let usageUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.usage\n            ? currentReport.meta.total.usage.units\n            : undefined;\n        let yAxisLabel;\n        if (isCostChart) {\n            yAxisLabel = t(`breakdown.historical_chart.${reportType}_label`, {\n                units: t(`units.${unitLookupKey(costUnits)}`),\n            });\n        }\n        else if (usageUnits && Number.isNaN(Number(currentReport.meta.total.usage.units))) {\n            yAxisLabel = t(`breakdown.historical_chart.units_label`, {\n                units: t(`units.${unitLookupKey(usageUnits)}`),\n            });\n        }\n        else {\n            usageUnits = t(`breakdown.historical_chart.${reportType}_label`);\n            yAxisLabel = t(`breakdown.historical_chart.units_label`, {\n                units: t(`units.${unitLookupKey(usageUnits)}`),\n            });\n        }\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.trendChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalTrendChart, { containerHeight: chartStyles.chartContainerHeight - 50, currentData: currentData, formatDatumValue: formatValue, formatDatumOptions: {}, height: chartStyles.chartHeight, previousData: previousData, units: isCostChart ? costUnits : usageUnits, xAxisLabel: t(`breakdown.historical_chart.day_of_month_label`), yAxisLabel: yAxisLabel })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportPathsType, reportType }) => {\n    const queryFromRoute = parseQuery(location.search);\n    const query = queryFromRoute;\n    const groupBy = getGroupById(query);\n    const groupByValue = getGroupByValue(query);\n    const groupByOrg = query && query.group_by[orgUnitIdKey] ? query.group_by[orgUnitIdKey] : undefined;\n    const currentQuery = Object.assign({ filter: Object.assign(Object.assign(Object.assign({ time_scope_units: 'month', time_scope_value: -1, resolution: 'daily', limit: 3 }, (query && query.filter && query.filter.account && { account: query.filter.account })), (groupBy && { [groupBy]: groupByValue })), (groupByOrg && { [orgUnitIdKey]: groupByOrg })) }, (query && query.filter_by && { filter_by: query.filter_by }));\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = Object.assign({ filter: Object.assign(Object.assign(Object.assign({ time_scope_units: 'month', time_scope_value: -2, resolution: 'daily', limit: 3 }, (query && query.filter && query.filter.account && { account: query.filter.account })), (groupBy && { [groupBy]: groupByValue })), (groupByOrg && { [orgUnitIdKey]: groupByOrg })) }, (query && query.filter_by && { filter_by: query.filter_by }));\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataTrendChart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataTrendChartBase));\nexport { HistoricalDataTrendChart };\n","import { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { global_spacer_lg } from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport { global_spacer_sm } from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    currentCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentLimitData: {\n        fill: 'none',\n    },\n    currentRequestData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    currentUsageData: {\n        fill: 'none',\n    },\n    itemsPerRow: 0,\n    previousCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousLimitData: {\n        fill: 'none',\n    },\n    previousRequestData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    previousUsageData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getUsageRangeString } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { noop } from 'utils/noop';\nimport { chartStyles, styles } from './historicalUsageChart.styles';\nclass HistoricalUsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.resizeObserver = noop;\n        this.navToggle = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentLimitData, currentRequestData, currentUsageData, previousLimitData, previousRequestData, previousUsageData, } = this.props;\n            const limitKey = 'chart.limit_legend_label';\n            const limitTooltipKey = 'chart.limit_legend_tooltip';\n            const requestKey = 'chart.requests_legend_label';\n            const requestTooltipKey = 'chart.requests_legend_tooltip';\n            const usageKey = 'chart.usage_legend_label';\n            const usageTooltipKey = 'chart.usage_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousUsage',\n                    data: previousUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(previousUsageData, usageKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(previousUsageData, usageTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousUsageData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentUsage',\n                    data: currentUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(currentUsageData, usageKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(currentUsageData, usageTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentUsageData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'previousRequest',\n                    data: previousRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(previousRequestData, requestKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(previousRequestData, requestTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousRequestData), { stroke: chartStyles.previousColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'currentRequest',\n                    data: currentRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(currentRequestData, requestKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(currentRequestData, requestTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentRequestData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'previousLimit',\n                    data: previousLimitData,\n                    legendItem: {\n                        name: getUsageRangeString(previousLimitData, limitKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[2],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(previousLimitData, limitTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousLimitData), { stroke: chartStyles.previousColorScale[2] }),\n                    },\n                },\n                {\n                    childName: 'currentLimit',\n                    data: currentLimitData,\n                    legendItem: {\n                        name: getUsageRangeString(currentLimitData, limitKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[2],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(currentLimitData, limitTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentLimitData), { stroke: chartStyles.currentColorScale[2] }),\n                    },\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.initResizeObserve = () => {\n            const containerElement = this.containerRef.current;\n            const { ResizeObserver } = window;\n            if (containerElement && ResizeObserver) {\n                const resizeObserver = new ResizeObserver(this.handleResize);\n                resizeObserver.observe(containerElement);\n                this.resizeObserver = () => resizeObserver.unobserve(containerElement);\n            }\n            else {\n                this.handleResize();\n                window.addEventListener('resize', this.handleResize);\n                this.resizeObserver = () => window.removeEventListener('resize', this.handleResize);\n                this.navToggle = insights.chrome.on('NAVIGATION_TOGGLE', this.handleNavToggle);\n            }\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 130,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 900 ? chartStyles.itemsPerRow : 2;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\" }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleNavToggle = () => {\n            setTimeout(this.handleResize, 500);\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.initResizeObserve();\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentLimitData !== this.props.currentLimitData ||\n            prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousLimitData !== this.props.previousLimitData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.resizeObserver) {\n            this.resizeObserver();\n        }\n        if (this.navToggle) {\n            this.navToggle();\n        }\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n        const currentRequestDate = currentRequestData ? getDate(getDateRange(currentRequestData, true, true)[1]) : 0;\n        const currentUsageDate = currentUsageData ? getDate(getDateRange(currentUsageData, true, true)[1]) : 0;\n        const previousRequestDate = previousRequestData ? getDate(getDateRange(previousRequestData, true, true)[1]) : 0;\n        const previousUsageDate = previousUsageData ? getDate(getDateRange(previousUsageData, true, true)[1]) : 0;\n        return currentRequestDate > 0 || currentUsageDate > 0 || previousRequestDate > 0 || previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 130,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 900\n                ? containerHeight - 50\n                : containerHeight\n            : containerHeight;\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: adjustedContainerHeight }) },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis }))))));\n    }\n}\nexport { HistoricalUsageChart };\n","import Skeleton from '@redhat-cloud-services/frontend-components/Skeleton';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { transformReport } from 'components/charts/common/chartDatumUtils';\nimport { HistoricalUsageChart } from 'components/charts/historicalUsageChart';\nimport { getGroupById, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataUsageChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, size: \"md\" }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, size: \"xs\" })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, t } = this.props;\n        // Current data\n        const currentLimitData = transformReport(currentReport, 1 /* daily */, 'date', 'limit');\n        const currentRequestData = transformReport(currentReport, 1 /* daily */, 'date', 'request');\n        const currentUsageData = transformReport(currentReport, 1 /* daily */, 'date', 'usage');\n        // Previous data\n        const previousLimitData = transformReport(previousReport, 1 /* daily */, 'date', 'limit');\n        const previousRequestData = transformReport(previousReport, 1 /* daily */, 'date', 'request');\n        const previousUsageData = transformReport(previousReport, 1 /* daily */, 'date', 'usage');\n        const usageUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.usage\n            ? currentReport.meta.total.usage.units\n            : '';\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.usageChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalUsageChart, { adjustContainerHeight: true, containerHeight: chartStyles.chartContainerHeight, currentLimitData: currentLimitData, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: {}, height: chartStyles.chartHeight, previousLimitData: previousLimitData, previousRequestData: previousRequestData, previousUsageData: previousUsageData, xAxisLabel: t(`breakdown.historical_chart.day_of_month_label`), yAxisLabel: t(`breakdown.historical_chart.units_label`, {\n                    units: t(`units.${unitLookupKey(usageUnits)}`),\n                }) })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportPathsType, reportType }) => {\n    const queryFromRoute = parseQuery(location.search);\n    const query = queryFromRoute;\n    const groupBy = getGroupById(query);\n    const groupByValue = getGroupByValue(query);\n    const currentQuery = Object.assign({ filter: Object.assign({ time_scope_units: 'month', time_scope_value: -1, resolution: 'daily', limit: 3 }, (groupBy && { [groupBy]: groupByValue })) }, (query && query.filter_by && { filter_by: query.filter_by }));\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = Object.assign({ filter: Object.assign({ time_scope_units: 'month', time_scope_value: -2, resolution: 'daily', limit: 3 }, (groupBy && { [groupBy]: groupByValue })) }, (query && query.filter_by && { filter_by: query.filter_by }));\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataUsageChart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataUsageChartBase));\nexport { HistoricalDataUsageChart };\n","import { Card, CardBody, CardTitle, Grid, GridItem, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport { HistoricalDataCostChart } from './historicalDataCostChart';\nimport { HistoricalDataTrendChart } from './historicalDataTrendChart';\nimport { HistoricalDataUsageChart } from './historicalDataUsageChart';\nclass HistoricalDataBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        // Returns cost chart\n        this.getCostChart = (widget) => {\n            const { t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.historical_chart.${widget.reportType}_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataCostChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns trend chart\n        this.getTrendChart = (widget) => {\n            const { t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.historical_chart.${widget.reportType}_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataTrendChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns usage chart\n        this.getUsageChart = (widget) => {\n            const { t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.historical_chart.${widget.reportType}_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataUsageChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n    }\n    // Returns rendered widget based on type\n    renderWidget(widget) {\n        switch (widget.type) {\n            case \"cost\" /* cost */:\n                return this.getCostChart(widget);\n            case \"trend\" /* trend */:\n                return this.getTrendChart(widget);\n            case \"usage\" /* usage */:\n                return this.getUsageChart(widget);\n            default:\n                return null;\n        }\n    }\n    render() {\n        const { selectWidgets, widgets } = this.props;\n        return (React.createElement(Grid, { hasGutter: true }, widgets.map(widgetId => {\n            const widget = selectWidgets[widgetId];\n            return React.createElement(GridItem, { key: `widget-${widgetId}` }, this.renderWidget(widget));\n        })));\n    }\n}\nexport { HistoricalDataBase };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_Color_200 from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    cost: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    costLabel: {},\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    costLabelDate: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_200.var,\n    },\n    header: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: global_spacer_lg.var,\n        backgroundColor: global_BackgroundColor_light_100.var,\n    },\n    info: {\n        verticalAlign: 'middle',\n    },\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { orgUnitIdKey, tagPrefix } from 'api/queries/query';\nexport const getGroupById = (query) => {\n    const groupBys = query && query.group_by ? Object.keys(query.group_by) : [];\n    return groupBys.find(key => key !== orgUnitIdKey);\n};\nexport const getGroupByValue = (query) => {\n    const groupById = getGroupById(query);\n    return groupById ? query.group_by[groupById] : undefined;\n};\nexport const getGroupByOrg = (query) => {\n    let groupByOrg;\n    for (const groupBy of Object.keys(query.group_by)) {\n        if (groupBy === orgUnitIdKey) {\n            groupByOrg = query.group_by[orgUnitIdKey];\n            break;\n        }\n    }\n    return groupByOrg;\n};\nexport const getGroupByTagKey = (query) => {\n    let groupByTagKey;\n    for (const groupBy of Object.keys(query.group_by)) {\n        const tagIndex = groupBy.indexOf(tagPrefix);\n        if (tagIndex !== -1) {\n            groupByTagKey = groupBy.substring(tagIndex + tagPrefix.length);\n            break;\n        }\n    }\n    return groupByTagKey;\n};\n","export const addQueryFilter = (query, filterType, filterValue) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    // Filter by * won't generate a new request if group_by * already exists\n    if (filterValue === '*' && newQuery.group_by[filterType] === '*') {\n        return;\n    }\n    if (newQuery.filter_by[filterType]) {\n        let found = false;\n        const filters = newQuery.filter_by[filterType];\n        if (!Array.isArray(filters)) {\n            found = filterValue === newQuery.filter_by[filterType];\n        }\n        else {\n            for (const filter of filters) {\n                if (filter === filterValue) {\n                    found = true;\n                    break;\n                }\n            }\n        }\n        if (!found) {\n            newQuery.filter_by[filterType] = [newQuery.filter_by[filterType], filterValue];\n        }\n    }\n    else {\n        newQuery.filter_by[filterType] = [filterValue];\n    }\n    return newQuery;\n};\nexport const removeQueryFilter = (query, filterType, filterValue) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    if (filterType === null) {\n        newQuery.filter_by = undefined; // Clear all\n    }\n    else if (filterValue === null) {\n        newQuery.filter_by[filterType] = undefined; // Clear all values\n    }\n    else if (Array.isArray(newQuery.filter_by[filterType])) {\n        const index = newQuery.filter_by[filterType].indexOf(filterValue);\n        if (index > -1) {\n            newQuery.filter_by[filterType] = [\n                ...query.filter_by[filterType].slice(0, index),\n                ...query.filter_by[filterType].slice(index + 1),\n            ];\n        }\n    }\n    else {\n        newQuery.filter_by[filterType] = undefined;\n    }\n    return newQuery;\n};\n","export const testIdProp = 'data-testid';\nexport const getTestProps = (id) => ({ [testIdProp]: id });\nexport const testIds = {\n    details: {\n        cluster_lnk: 'cluster-lnk',\n        historical_data_btn: 'historical-data-btn',\n        show_more_btn: 'show-more-btn',\n        tag_lnk: 'tag-lnk',\n        view_all_btn: 'view-all-btn',\n    },\n    export: {\n        cancel_btn: 'cancel-btn',\n        submit_btn: 'submit-btn',\n    },\n    login: {\n        alert: 'alert',\n        form: 'login-form',\n        username_input: 'username-input',\n        password_input: 'password-input',\n        submit: 'submit',\n    },\n    masthead: {\n        masthead: 'masthead',\n        username: 'username',\n        sidebarToggle: 'sidebar-toggle',\n        logout: 'logout',\n    },\n    onboarding: {\n        btn_cancel: 'btn-cancel',\n        btn_back: 'btn-back',\n        btn_continue: 'btn-continue',\n        btn_close: 'btn-close',\n        type_selector: 'type-selector',\n        type_opt_aws: 'type-option-aws',\n        type_opt_ocp: 'type-option-ocp',\n        type_opt_non: 'type-option-non',\n        name_input: 'name-input',\n        check_box_1: 'check-box-1',\n        check_box_2: 'check-box-2',\n        s3_input: 's3-input',\n        clusterid_input: 'clusterid-input',\n        arn_input: 'arn-input',\n    },\n    providers: {\n        add_btn: 'add-btn',\n        bucket_input: 'bucket-input',\n        cancel_btn: 'cancel-btn',\n        empty_state_add_btn: 'empty_state_add-btn',\n        name_input: 'provider-name-input',\n        resource_name_input: 'provider-resource-name-input',\n        cluster_id_input: 'provider-cluster-id-input',\n        submit_btn: 'submit-btn',\n        type_input: 'provider-type-input',\n    },\n    sidebar: {\n        nav: 'vertical-nav',\n        link: 'vertical-nav-link',\n        backdrop: 'sidebar-backdrop',\n    },\n};\n","import { format, getDate, getMonth, startOfMonth } from 'date-fns';\nimport i18next from 'i18next';\nexport function getNoDataForDateRangeString(key = 'no_data_for_date', offset = 1) {\n    const today = new Date();\n    if (offset) {\n        today.setMonth(today.getMonth() - offset);\n    }\n    const month = getMonth(today);\n    const endDate = format(today, 'd');\n    const startDate = format(startOfMonth(today), 'd');\n    return i18next.t(key, {\n        count: getDate(today),\n        endDate,\n        month,\n        startDate,\n    });\n}\nexport function getForDateRangeString(value, key = 'for_date', offset = 1) {\n    const today = new Date();\n    if (offset) {\n        today.setMonth(today.getMonth() - offset);\n    }\n    const month = getMonth(today);\n    const endDate = format(today, 'd');\n    const startDate = format(startOfMonth(today), 'd');\n    return i18next.t(key, {\n        count: getDate(today),\n        endDate,\n        month,\n        startDate,\n        value,\n    });\n}\nexport function getSinceDateRangeString(key = 'since_date') {\n    const today = new Date();\n    const month = getMonth(today);\n    const endDate = format(today, 'd');\n    const startDate = format(startOfMonth(today), 'd');\n    return i18next.t(key, {\n        count: getDate(today),\n        endDate,\n        month,\n        startDate,\n    });\n}\n","export function isEqual(obj1, obj2) {\n    let a = JSON.stringify(obj1);\n    let b = JSON.stringify(obj2);\n    if (!a) {\n        a = '';\n    }\n    if (!b) {\n        b = '';\n    }\n    return a.split('').sort().join('') === b.split('').sort().join('');\n}\n"],"sourceRoot":""}