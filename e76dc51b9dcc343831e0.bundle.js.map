{"version":3,"file":"e76dc51b9dcc343831e0.bundle.js","mappings":"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","sources":["webpack://koku-ui/./src/api/api.ts","webpack://koku-ui/./src/api/costModels.ts","webpack://koku-ui/./src/api/providers.ts","webpack://koku-ui/./src/api/queries/awsQuery.ts","webpack://koku-ui/./src/api/queries/azureQuery.ts","webpack://koku-ui/./src/api/queries/gcpQuery.ts","webpack://koku-ui/./src/api/queries/ibmQuery.ts","webpack://koku-ui/./src/api/queries/ociQuery.ts","webpack://koku-ui/./src/api/queries/ocpCloudQuery.ts","webpack://koku-ui/./src/api/queries/ocpQuery.ts","webpack://koku-ui/./src/api/queries/query.ts","webpack://koku-ui/./src/api/queries/userAccessQuery.ts","webpack://koku-ui/./src/api/reports/awsOcpReports.ts","webpack://koku-ui/./src/api/reports/awsReports.ts","webpack://koku-ui/./src/api/reports/azureOcpReports.ts","webpack://koku-ui/./src/api/reports/azureReports.ts","webpack://koku-ui/./src/api/reports/gcpOcpReports.ts","webpack://koku-ui/./src/api/reports/gcpReports.ts","webpack://koku-ui/./src/api/reports/ibmReports.ts","webpack://koku-ui/./src/api/reports/ociReports.ts","webpack://koku-ui/./src/api/reports/ocpCloudReports.ts","webpack://koku-ui/./src/api/reports/ocpReports.ts","webpack://koku-ui/./src/api/resources/awsOcpResource.ts","webpack://koku-ui/./src/api/resources/awsResource.ts","webpack://koku-ui/./src/api/resources/azureOcpResource.ts","webpack://koku-ui/./src/api/resources/azureResource.ts","webpack://koku-ui/./src/api/resources/gcpOcpResource.ts","webpack://koku-ui/./src/api/resources/gcpResource.ts","webpack://koku-ui/./src/api/resources/ibmResource.ts","webpack://koku-ui/./src/api/resources/ocpResource.ts","webpack://koku-ui/./src/api/resources/resourceUtils.ts","webpack://koku-ui/./src/components/pageTitle/pageTitle.tsx","webpack://koku-ui/./src/routes/state/maintenance/maintenanceState.tsx","webpack://koku-ui/./src/routes/state/maintenance/index.ts","webpack://koku-ui/./src/routes/state/maintenance/maintenance.tsx","webpack://koku-ui/./src/app.tsx","webpack://koku-ui/./src/components/async/asyncComponent.tsx","webpack://koku-ui/./src/components/exports/exports.styles.ts","webpack://koku-ui/./src/components/exports/exportsLink.tsx","webpack://koku-ui/./src/components/i18n/intl.ts","webpack://koku-ui/./src/routes/state/notAuthorized/notAuthorizedState.tsx","webpack://koku-ui/./src/routes/state/notAuthorized/index.ts","webpack://koku-ui/./src/routes/state/notAuthorized/notAuthorized.tsx","webpack://koku-ui/./src/components/permissions/permissions.tsx","webpack://koku-ui/./src/components/permissions/permissionsComponent.tsx","webpack://koku-ui/./src/components/permissions/index.ts","webpack://koku-ui/./src/locales/messages.ts","webpack://koku-ui/./src/routes.tsx","webpack://koku-ui/./src/routes/components/state/loadingState/loadingState.tsx","webpack://koku-ui/./src/routes/costModels/createCostModelWizard/parseError.ts","webpack://koku-ui/./src/routes/state/loading/loading.tsx","webpack://koku-ui/./src/routes/state/loading/index.ts","webpack://koku-ui/./src/routes/state/notAvailable/notAvailable.tsx","webpack://koku-ui/./src/routes/state/notAvailable/index.ts","webpack://koku-ui/./src/store/accountSettings/accountSettingsCommon.ts","webpack://koku-ui/./src/store/accountSettings/accountSettingsActions.ts","webpack://koku-ui/./src/api/accountSettings.ts","webpack://koku-ui/./src/store/accountSettings/accountSettingsReducer.ts","webpack://koku-ui/./src/store/accountSettings/accountSettingsSelectors.ts","webpack://koku-ui/./src/store/breakdown/costOverview/awsCostOverview/awsCostOverviewCommon.ts","webpack://koku-ui/./src/store/breakdown/costOverview/awsCostOverview/awsCostOverviewWidgets.ts","webpack://koku-ui/./src/store/breakdown/costOverview/awsCostOverview/awsCostOverviewReducer.ts","webpack://koku-ui/./src/store/breakdown/costOverview/awsCostOverview/awsCostOverviewSelectors.ts","webpack://koku-ui/./src/store/breakdown/costOverview/azureCostOverview/azureCostOverviewCommon.ts","webpack://koku-ui/./src/store/breakdown/costOverview/azureCostOverview/azureCostOverviewWidgets.ts","webpack://koku-ui/./src/store/breakdown/costOverview/azureCostOverview/azureCostOverviewReducer.ts","webpack://koku-ui/./src/store/breakdown/costOverview/azureCostOverview/azureCostOverviewSelectors.ts","webpack://koku-ui/./src/store/breakdown/costOverview/gcpCostOverview/gcpCostOverviewCommon.ts","webpack://koku-ui/./src/store/breakdown/costOverview/gcpCostOverview/gcpCostOverviewWidgets.ts","webpack://koku-ui/./src/store/breakdown/costOverview/gcpCostOverview/gcpCostOverviewReducer.ts","webpack://koku-ui/./src/store/breakdown/costOverview/gcpCostOverview/gcpCostOverviewSelectors.ts","webpack://koku-ui/./src/store/breakdown/costOverview/ibmCostOverview/ibmCostOverviewCommon.ts","webpack://koku-ui/./src/store/breakdown/costOverview/ibmCostOverview/ibmCostOverviewWidgets.ts","webpack://koku-ui/./src/store/breakdown/costOverview/ibmCostOverview/ibmCostOverviewReducer.ts","webpack://koku-ui/./src/store/breakdown/costOverview/ibmCostOverview/ibmCostOverviewSelectors.ts","webpack://koku-ui/./src/store/breakdown/costOverview/ociCostOverview/ociCostOverviewCommon.ts","webpack://koku-ui/./src/store/breakdown/costOverview/ociCostOverview/ociCostOverviewWidgets.ts","webpack://koku-ui/./src/store/breakdown/costOverview/ociCostOverview/ociCostOverviewReducer.ts","webpack://koku-ui/./src/store/breakdown/costOverview/ociCostOverview/ociCostOverviewSelectors.ts","webpack://koku-ui/./src/store/breakdown/costOverview/ocpCostOverview/ocpCostOverviewCommon.ts","webpack://koku-ui/./src/store/breakdown/costOverview/ocpCostOverview/ocpCostOverviewWidgets.ts","webpack://koku-ui/./src/store/breakdown/costOverview/ocpCostOverview/ocpCostOverviewReducer.ts","webpack://koku-ui/./src/store/breakdown/costOverview/ocpCostOverview/ocpCostOverviewSelectors.ts","webpack://koku-ui/./src/store/breakdown/historicalData/awsHistoricalData/awsHistoricalDataCommon.ts","webpack://koku-ui/./src/store/breakdown/historicalData/awsHistoricalData/awsHistoricalDataWidgets.ts","webpack://koku-ui/./src/store/breakdown/historicalData/awsHistoricalData/awsHistoricalDataReducer.ts","webpack://koku-ui/./src/store/breakdown/historicalData/awsHistoricalData/awsHistoricalDataSelectors.ts","webpack://koku-ui/./src/store/breakdown/historicalData/azureHistoricalData/azureHistoricalDataCommon.ts","webpack://koku-ui/./src/store/breakdown/historicalData/azureHistoricalData/azureHistoricalDataWidgets.ts","webpack://koku-ui/./src/store/breakdown/historicalData/azureHistoricalData/azureHistoricalDataReducer.ts","webpack://koku-ui/./src/store/breakdown/historicalData/azureHistoricalData/azureHistoricalDataSelectors.ts","webpack://koku-ui/./src/store/breakdown/historicalData/gcpHistoricalData/gcpHistoricalDataCommon.ts","webpack://koku-ui/./src/store/breakdown/historicalData/gcpHistoricalData/gcpHistoricalDataWidgets.ts","webpack://koku-ui/./src/store/breakdown/historicalData/gcpHistoricalData/gcpHistoricalDataReducer.ts","webpack://koku-ui/./src/store/breakdown/historicalData/gcpHistoricalData/gcpHistoricalDataSelectors.ts","webpack://koku-ui/./src/store/breakdown/historicalData/ibmHistoricalData/ibmHistoricalDataCommon.ts","webpack://koku-ui/./src/store/breakdown/historicalData/ibmHistoricalData/ibmHistoricalDataWidgets.ts","webpack://koku-ui/./src/store/breakdown/historicalData/ibmHistoricalData/ibmHistoricalDataReducer.ts","webpack://koku-ui/./src/store/breakdown/historicalData/ibmHistoricalData/ibmHistoricalDataSelectors.ts","webpack://koku-ui/./src/store/breakdown/historicalData/ociHistoricalData/ociHistoricalDataCommon.ts","webpack://koku-ui/./src/store/breakdown/historicalData/ociHistoricalData/ociHistoricalDataWidgets.ts","webpack://koku-ui/./src/store/breakdown/historicalData/ociHistoricalData/ociHistoricalDataReducer.ts","webpack://koku-ui/./src/store/breakdown/historicalData/ociHistoricalData/ociHistoricalDataSelectors.ts","webpack://koku-ui/./src/store/breakdown/historicalData/ocpHistoricalData/ocpHistoricalDataCommon.ts","webpack://koku-ui/./src/store/breakdown/historicalData/ocpHistoricalData/ocpHistoricalDataWidgets.ts","webpack://koku-ui/./src/store/breakdown/historicalData/ocpHistoricalData/ocpHistoricalDataReducer.ts","webpack://koku-ui/./src/store/breakdown/historicalData/ocpHistoricalData/ocpHistoricalDataSelectors.ts","webpack://koku-ui/./src/store/common.ts","webpack://koku-ui/./src/store/costModels/actions.ts","webpack://koku-ui/./src/store/costModels/reducer.ts","webpack://koku-ui/./src/store/costModels/selectors.ts","webpack://koku-ui/./src/store/dashboard/awsDashboard/awsDashboardCommon.ts","webpack://koku-ui/./src/store/dashboard/awsDashboard/awsDashboardSelectors.ts","webpack://koku-ui/./src/store/dashboard/awsDashboard/awsDashboardActions.ts","webpack://koku-ui/./src/store/dashboard/awsDashboard/awsDashboardWidgets.ts","webpack://koku-ui/./src/store/dashboard/awsDashboard/awsDashboardReducer.ts","webpack://koku-ui/./src/store/dashboard/awsOcpDashboard/awsOcpDashboardCommon.ts","webpack://koku-ui/./src/store/dashboard/awsOcpDashboard/awsOcpDashboardSelectors.ts","webpack://koku-ui/./src/store/dashboard/awsOcpDashboard/awsOcpDashboardActions.ts","webpack://koku-ui/./src/store/dashboard/awsOcpDashboard/awsOcpDashboardWidgets.ts","webpack://koku-ui/./src/store/dashboard/awsOcpDashboard/awsOcpDashboardReducer.ts","webpack://koku-ui/./src/store/dashboard/azureDashboard/azureDashboardCommon.ts","webpack://koku-ui/./src/store/dashboard/azureDashboard/azureDashboardSelectors.ts","webpack://koku-ui/./src/store/dashboard/azureDashboard/azureDashboardActions.ts","webpack://koku-ui/./src/store/dashboard/azureDashboard/azureDashboardWidgets.ts","webpack://koku-ui/./src/store/dashboard/azureDashboard/azureDashboardReducer.ts","webpack://koku-ui/./src/store/dashboard/azureOcpDashboard/azureOcpDashboardCommon.ts","webpack://koku-ui/./src/store/dashboard/azureOcpDashboard/azureOcpDashboardSelectors.ts","webpack://koku-ui/./src/store/dashboard/azureOcpDashboard/azureOcpDashboardActions.ts","webpack://koku-ui/./src/store/dashboard/azureOcpDashboard/azureOcpDashboardWidgets.ts","webpack://koku-ui/./src/store/dashboard/azureOcpDashboard/azureOcpDashboardReducer.ts","webpack://koku-ui/./src/store/dashboard/gcpDashboard/gcpDashboardCommon.ts","webpack://koku-ui/./src/store/dashboard/gcpDashboard/gcpDashboardSelectors.ts","webpack://koku-ui/./src/store/dashboard/gcpDashboard/gcpDashboardActions.ts","webpack://koku-ui/./src/store/dashboard/gcpDashboard/gcpDashboardWidgets.ts","webpack://koku-ui/./src/store/dashboard/gcpDashboard/gcpDashboardReducer.ts","webpack://koku-ui/./src/store/dashboard/gcpOcpDashboard/gcpOcpDashboardCommon.ts","webpack://koku-ui/./src/store/dashboard/gcpOcpDashboard/gcpOcpDashboardSelectors.ts","webpack://koku-ui/./src/store/dashboard/gcpOcpDashboard/gcpOcpDashboardActions.ts","webpack://koku-ui/./src/store/dashboard/gcpOcpDashboard/gcpOcpDashboardWidgets.ts","webpack://koku-ui/./src/store/dashboard/gcpOcpDashboard/gcpOcpDashboardReducer.ts","webpack://koku-ui/./src/store/dashboard/ibmDashboard/ibmDashboardCommon.ts","webpack://koku-ui/./src/store/dashboard/ibmDashboard/ibmDashboardSelectors.ts","webpack://koku-ui/./src/store/dashboard/ibmDashboard/ibmDashboardActions.ts","webpack://koku-ui/./src/store/dashboard/ibmDashboard/ibmDashboardWidgets.ts","webpack://koku-ui/./src/store/dashboard/ibmDashboard/ibmDashboardReducer.ts","webpack://koku-ui/./src/store/dashboard/ociDashboard/ociDashboardCommon.ts","webpack://koku-ui/./src/store/dashboard/ociDashboard/ociDashboardSelectors.ts","webpack://koku-ui/./src/store/dashboard/ociDashboard/ociDashboardActions.ts","webpack://koku-ui/./src/store/dashboard/ociDashboard/ociDashboardWidgets.ts","webpack://koku-ui/./src/store/dashboard/ociDashboard/ociDashboardReducer.ts","webpack://koku-ui/./src/store/dashboard/ocpCloudDashboard/ocpCloudDashboardCommon.ts","webpack://koku-ui/./src/store/dashboard/ocpCloudDashboard/ocpCloudDashboardSelectors.ts","webpack://koku-ui/./src/store/dashboard/ocpCloudDashboard/ocpCloudDashboardActions.ts","webpack://koku-ui/./src/store/dashboard/ocpCloudDashboard/ocpCloudDashboardWidgets.ts","webpack://koku-ui/./src/store/dashboard/ocpCloudDashboard/ocpCloudDashboardReducer.ts","webpack://koku-ui/./src/store/dashboard/ocpDashboard/ocpDashboardCommon.ts","webpack://koku-ui/./src/store/dashboard/ocpDashboard/ocpDashboardSelectors.ts","webpack://koku-ui/./src/store/dashboard/ocpDashboard/ocpDashboardActions.ts","webpack://koku-ui/./src/store/dashboard/ocpDashboard/ocpDashboardWidgets.ts","webpack://koku-ui/./src/store/dashboard/ocpDashboard/ocpDashboardReducer.ts","webpack://koku-ui/./src/store/djangoUtils/pagination.ts","webpack://koku-ui/./src/store/djangoUtils/query.ts","webpack://koku-ui/./src/store/export/exportCommon.ts","webpack://koku-ui/./src/store/export/exportSelectors.ts","webpack://koku-ui/./src/store/export/exportActions.tsx","webpack://koku-ui/./src/api/export/exportUtils.ts","webpack://koku-ui/./src/api/export/awsExport.ts","webpack://koku-ui/./src/api/export/awsOcpExport.ts","webpack://koku-ui/./src/api/export/azureExport.ts","webpack://koku-ui/./src/api/export/ociExport.ts","webpack://koku-ui/./src/api/export/azureOcpExport.ts","webpack://koku-ui/./src/api/export/gcpExport.ts","webpack://koku-ui/./src/api/export/gcpOcpExport.ts","webpack://koku-ui/./src/api/export/ibmExport.ts","webpack://koku-ui/./src/api/export/ocpCloudExport.ts","webpack://koku-ui/./src/api/export/ocpExport.ts","webpack://koku-ui/./src/store/export/exportReducer.ts","webpack://koku-ui/./src/store/featureFlags/featureFlagsActions.ts","webpack://koku-ui/./src/store/featureFlags/featureFlagsReducer.ts","webpack://koku-ui/./src/store/featureFlags/featureFlagsSelectors.ts","webpack://koku-ui/./src/api/forecasts/awsForecast.ts","webpack://koku-ui/./src/api/forecasts/awsOcpForecast.ts","webpack://koku-ui/./src/api/forecasts/azureForecast.ts","webpack://koku-ui/./src/api/forecasts/azureOcpForecast.ts","webpack://koku-ui/./src/api/forecasts/gcpForecast.ts","webpack://koku-ui/./src/api/forecasts/gcpOcpForecast.ts","webpack://koku-ui/./src/api/forecasts/ibmForecast.ts","webpack://koku-ui/./src/api/forecasts/ociForecast.ts","webpack://koku-ui/./src/api/forecasts/ocpCloudForecast.ts","webpack://koku-ui/./src/api/forecasts/ocpForecast.ts","webpack://koku-ui/./src/store/forecasts/forecastCommon.ts","webpack://koku-ui/./src/store/forecasts/forecastSelectors.ts","webpack://koku-ui/./src/store/forecasts/forecastActions.ts","webpack://koku-ui/./src/api/forecasts/forecastUtils.ts","webpack://koku-ui/./src/store/forecasts/forecastReducer.ts","webpack://koku-ui/./src/store/priceList/reducer.ts","webpack://koku-ui/./src/store/priceList/actions.ts","webpack://koku-ui/./src/store/rootReducer.ts","webpack://koku-ui/./src/store/store.ts","webpack://koku-ui/./src/store/metrics/actions.ts","webpack://koku-ui/./src/api/metrics.ts","webpack://koku-ui/./src/store/metrics/reducer.ts","webpack://koku-ui/./src/store/metrics/selectors.ts","webpack://koku-ui/./src/api/orgs/awsOrgs.ts","webpack://koku-ui/./src/store/orgs/orgCommon.ts","webpack://koku-ui/./src/store/orgs/orgSelectors.ts","webpack://koku-ui/./src/store/orgs/orgActions.ts","webpack://koku-ui/./src/api/orgs/orgUtils.ts","webpack://koku-ui/./src/store/orgs/orgReducer.ts","webpack://koku-ui/./src/store/providers/providersCommon.ts","webpack://koku-ui/./src/store/providers/providersActions.ts","webpack://koku-ui/./src/store/providers/providersReducer.ts","webpack://koku-ui/./src/store/providers/providersSelectors.ts","webpack://koku-ui/./src/store/rbac/actions.ts","webpack://koku-ui/./src/api/rbac.ts","webpack://koku-ui/./src/store/rbac/reducer.ts","webpack://koku-ui/./src/store/rbac/selectors.ts","webpack://koku-ui/./src/api/reports/ocpUsageReports.ts","webpack://koku-ui/./src/store/reports/reportCommon.ts","webpack://koku-ui/./src/store/reports/reportSelectors.ts","webpack://koku-ui/./src/store/reports/reportActions.ts","webpack://koku-ui/./src/api/reports/reportUtils.ts","webpack://koku-ui/./src/store/reports/reportReducer.ts","webpack://koku-ui/./src/store/resources/resourceCommon.ts","webpack://koku-ui/./src/store/resources/resourceSelectors.ts","webpack://koku-ui/./src/store/resources/resourceActions.ts","webpack://koku-ui/./src/store/resources/resourceReducer.ts","webpack://koku-ui/./src/store/sourceSettings/actions.ts","webpack://koku-ui/./src/store/sourceSettings/reducer.ts","webpack://koku-ui/./src/store/sourceSettings/selectors.ts","webpack://koku-ui/./src/api/tags/awsOcpTags.ts","webpack://koku-ui/./src/api/tags/awsTags.ts","webpack://koku-ui/./src/api/tags/azureOcpTags.ts","webpack://koku-ui/./src/api/tags/azureTags.ts","webpack://koku-ui/./src/api/tags/gcpOcpTags.ts","webpack://koku-ui/./src/api/tags/gcpTags.ts","webpack://koku-ui/./src/api/tags/ibmTags.ts","webpack://koku-ui/./src/api/tags/ociTags.ts","webpack://koku-ui/./src/api/tags/ocpCloudTags.ts","webpack://koku-ui/./src/api/tags/ocpTags.ts","webpack://koku-ui/./src/store/tags/tagCommon.ts","webpack://koku-ui/./src/store/tags/tagSelectors.ts","webpack://koku-ui/./src/store/tags/tagActions.ts","webpack://koku-ui/./src/api/tags/tagUtils.ts","webpack://koku-ui/./src/store/tags/tagReducer.ts","webpack://koku-ui/./src/store/ui/uiReducer.ts","webpack://koku-ui/./src/store/ui/uiSelectors.ts","webpack://koku-ui/./src/store/ui/uiActions.ts","webpack://koku-ui/./src/store/userAccess/userAccessCommon.ts","webpack://koku-ui/./src/store/userAccess/userAccessActions.ts","webpack://koku-ui/./src/api/userAccess.ts","webpack://koku-ui/./src/store/userAccess/userAccessReducer.ts","webpack://koku-ui/./src/store/userAccess/userAccessSelectors.ts","webpack://koku-ui/./src/utils/costType.ts","webpack://koku-ui/./src/utils/format.ts","webpack://koku-ui/./src/utils/cookie.ts","webpack://koku-ui/./src/utils/localStorage.ts","webpack://koku-ui/./src/utils/paths.ts","webpack://koku-ui/./src/utils/userAccess.ts"],"sourcesContent":["import { authInterceptor as insightsAuthInterceptor } from '@redhat-cloud-services/frontend-components-utilities/interceptors';\nimport axios from 'axios';\nexport function initApi({ version }) {\n    axios.defaults.baseURL = `/api/cost-management/${version}/`;\n    axios.interceptors.request.use(authInterceptor);\n    axios.interceptors.request.use(insightsAuthInterceptor);\n}\nexport function authInterceptor(reqConfig) {\n    return Object.assign(Object.assign({}, reqConfig), { headers: Object.assign({}, reqConfig.headers) });\n}\n","import axios from 'axios';\nexport function fetchCostModels(query = '') {\n    return axios.get(`cost-models/${query && '?'}${query}`);\n}\nexport function fetchCostModel(uuid) {\n    return axios.get(`cost-models/${uuid}/`);\n}\nexport function addCostModel(request) {\n    return axios.post('cost-models/', request);\n}\nexport function updateCostModel(uuid, request) {\n    return axios.put(`cost-models/${uuid}/`, request);\n}\nexport function deleteCostModel(uuid) {\n    return axios.delete(`cost-models/${uuid}/`);\n}\n","import axios from 'axios';\nexport function fetchProviders(query) {\n    const insights = window.insights;\n    const queryString = query ? `?${query}` : '';\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`sources/${queryString}`);\n        });\n    }\n    else {\n        return axios.get(`sources/${queryString}`);\n    }\n}\n","import * as utils from './query';\n// filter_by props are converted and returned with logical OR/AND prefix\nexport function getQuery(query) {\n    return utils.getQuery(query);\n}\n// filter_by props are not converted\nexport function getQueryRoute(query) {\n    return utils.getQueryRoute(query);\n}\nexport function parseQuery(query) {\n    return utils.parseQuery(query);\n}\n","import * as utils from './query';\n// filter_by props are converted and returned with logical OR/AND prefix\nexport function getQuery(query) {\n    return utils.getQuery(query);\n}\n// filter_by props are not converted\nexport function getQueryRoute(query) {\n    return utils.getQueryRoute(query);\n}\nexport function parseQuery(query) {\n    return utils.parseQuery(query);\n}\n","import * as utils from './query';\n// filter_by props are converted and returned with logical OR/AND prefix\nexport function getQuery(query) {\n    return utils.getQuery(query);\n}\n// filter_by props are not converted\nexport function getQueryRoute(query) {\n    return utils.getQueryRoute(query);\n}\nexport function parseQuery(query) {\n    return utils.parseQuery(query);\n}\n","import * as utils from './query';\n// filter_by props are converted and returned with logical OR/AND prefix\nexport function getQuery(query) {\n    return utils.getQuery(query);\n}\n// filter_by props are not converted\nexport function getQueryRoute(query) {\n    return utils.getQueryRoute(query);\n}\nexport function parseQuery(query) {\n    return utils.parseQuery(query);\n}\n","import * as utils from './query';\n// filter_by props are converted and returned with logical OR/AND prefix\nexport function getQuery(query) {\n    return utils.getQuery(query);\n}\n// filter_by props are not converted\nexport function getQueryRoute(query) {\n    return utils.getQueryRoute(query);\n}\nexport function parseQuery(query) {\n    return utils.parseQuery(query);\n}\n","import * as utils from './query';\n// filter_by props are converted and returned with logical OR/AND prefix\nexport function getQuery(query) {\n    return utils.getQuery(query);\n}\n// filter_by props are not converted\nexport function getQueryRoute(query) {\n    return utils.getQueryRoute(query);\n}\nexport function parseQuery(query) {\n    return utils.parseQuery(query);\n}\n","import * as utils from './query';\n// filter_by props are converted and returned with logical OR/AND prefix\nexport function getQuery(query) {\n    return utils.getQuery(query);\n}\n// filter_by props are not converted\nexport function getQueryRoute(query) {\n    return utils.getQueryRoute(query);\n}\nexport function parseQuery(query) {\n    return utils.parseQuery(query);\n}\n","import { parse, stringify } from 'qs';\nexport const logicalOrPrefix = 'or:'; // logical OR prefix for group_by\nexport const logicalAndPrefix = 'and:'; // logical AND prefix for group_by\nexport const tagPrefix = 'tag:'; // Tag prefix for group_by\nexport const breakdownDescKey = 'breakdown_desc'; // Used to display a description in the breakdown header\nexport const breakdownGroupByKey = 'breakdown_group_by'; // Used to display a breadcrumb in the breakdown header\nexport const breakdownTitleKey = 'breakdown_title'; // Used to display a title in the breakdown header\nexport const orgUnitIdKey = 'org_unit_id'; // Org unit ID for group_by\nexport const orgUnitNameKey = 'org_unit_name'; // Org unit name for group_by\nexport const tagKey = 'tag'; // Tag key for group_by\n// Converts filter_by props to filter props\nexport function convertFilterBy(query) {\n    if (!(query && query.filter_by)) {\n        return query;\n    }\n    const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { filter_by: undefined });\n    for (const key of Object.keys(query.filter_by)) {\n        if (!newQuery.filter) {\n            newQuery.filter = {};\n        }\n        if (newQuery.filter[key]) {\n            if (!Array.isArray(newQuery.filter[key])) {\n                newQuery.filter[key] = newQuery.filter[key] !== '*' ? [newQuery.filter[key]] : [];\n            }\n            newQuery.filter[key].push(query.filter_by[key]);\n        }\n        else {\n            newQuery.filter[key] = query.filter_by[key];\n        }\n    }\n    return newQuery;\n}\n// filter_by props are converted\nexport function getQuery(query) {\n    return stringify(convertFilterBy(query), { encode: false, indices: false });\n}\n// filter_by props are not converted\nexport function getQueryRoute(query) {\n    return stringify(query, { encode: false, indices: false });\n}\n// Returns given key without logical OR/AND prefix\nfunction parseKey(val) {\n    let key = val;\n    let index = val.indexOf(logicalOrPrefix);\n    if (index !== -1) {\n        key = val.substring(index + logicalOrPrefix.length);\n    }\n    else {\n        index = val.indexOf(logicalAndPrefix);\n        if (index !== -1) {\n            key = val.substring(index + logicalAndPrefix.length);\n        }\n    }\n    return key;\n}\n// Returns query without filter_by prefix\nexport function parseFilterByPrefix(query) {\n    if (!(query && query.filter_by)) {\n        return query;\n    }\n    const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { filter_by: {} });\n    for (const key of Object.keys(query.filter_by)) {\n        const filterByKey = parseKey(key);\n        newQuery.filter_by[filterByKey] = query.filter_by[key];\n    }\n    return newQuery;\n}\n// Returns query without group_by prefix -- https://github.com/project-koku/koku-ui/issues/704\nexport function parseGroupByPrefix(query) {\n    if (!(query && query.group_by)) {\n        return query;\n    }\n    const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { group_by: {} });\n    for (const key of Object.keys(query.group_by)) {\n        const groupByKey = parseKey(key);\n        newQuery.group_by[groupByKey] = query.group_by[key];\n    }\n    return newQuery;\n}\nexport function parseQuery(query) {\n    const newQuery = parse(query, { ignoreQueryPrefix: true });\n    return parseFilterByPrefix(parseGroupByPrefix(newQuery));\n}\n","import { parse, stringify } from 'qs';\nexport function getUserAccessQuery(query) {\n    return stringify(query, { encode: false, indices: false });\n}\nexport function parseUserAccessQuery(query) {\n    return parse(query, { ignoreQueryPrefix: true });\n}\n","import axios from 'axios';\nexport const ReportTypePaths = {\n    [\"cost\" /* cost */]: 'reports/openshift/infrastructures/aws/costs/',\n    [\"database\" /* database */]: 'reports/openshift/infrastructures/aws/costs/',\n    [\"network\" /* network */]: 'reports/openshift/infrastructures/aws/costs/',\n    [\"storage\" /* storage */]: 'reports/openshift/infrastructures/aws/storage/',\n    [\"instance_type\" /* instanceType */]: 'reports/openshift/infrastructures/aws/instance-types/',\n};\nexport function runReport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const ReportTypePaths = {\n    [\"cost\" /* cost */]: 'reports/aws/costs/',\n    [\"database\" /* database */]: 'reports/aws/costs/',\n    [\"network\" /* network */]: 'reports/aws/costs/',\n    [\"storage\" /* storage */]: 'reports/aws/storage/',\n    [\"instance_type\" /* instanceType */]: 'reports/aws/instance-types/',\n};\nexport function runReport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const ReportTypePaths = {\n    [\"cost\" /* cost */]: 'reports/openshift/infrastructures/azure/costs/',\n    [\"database\" /* database */]: 'reports/openshift/infrastructures/azure/costs/',\n    [\"network\" /* network */]: 'reports/openshift/infrastructures/azure/costs/',\n    [\"storage\" /* storage */]: 'reports/openshift/infrastructures/azure/storage/',\n    [\"instance_type\" /* instanceType */]: 'reports/openshift/infrastructures/azure/instance-types/',\n};\nexport function runReport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const ReportTypePaths = {\n    [\"cost\" /* cost */]: 'reports/azure/costs/',\n    [\"database\" /* database */]: 'reports/azure/costs/',\n    [\"network\" /* network */]: 'reports/azure/costs/',\n    [\"storage\" /* storage */]: 'reports/azure/storage/',\n    [\"instance_type\" /* instanceType */]: 'reports/azure/instance-types/',\n};\nexport function runReport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const ReportTypePaths = {\n    [\"cost\" /* cost */]: 'reports/openshift/infrastructures/gcp/costs/',\n    [\"database\" /* database */]: 'reports/openshift/infrastructures/gcp/costs/',\n    [\"network\" /* network */]: 'reports/openshift/infrastructures/gcp/costs/',\n    [\"storage\" /* storage */]: 'reports/openshift/infrastructures/gcp/storage/',\n    [\"instance_type\" /* instanceType */]: 'reports/openshift/infrastructures/gcp/instance-types/',\n};\nexport function runReport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const ReportTypePaths = {\n    [\"cost\" /* cost */]: 'reports/gcp/costs/',\n    [\"database\" /* database */]: 'reports/gcp/costs/',\n    [\"network\" /* network */]: 'reports/gcp/costs/',\n    [\"storage\" /* storage */]: 'reports/gcp/storage/',\n    [\"instance_type\" /* instanceType */]: 'reports/gcp/instance-types/',\n};\nexport function runReport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\n// Todo: update to use ibm backend apis when they become available\nexport const ReportTypePaths = {\n    [\"cost\" /* cost */]: 'reports/gcp/costs/',\n    [\"database\" /* database */]: 'reports/gcp/costs/',\n    [\"network\" /* network */]: 'reports/gcp/costs/',\n    [\"storage\" /* storage */]: 'reports/gcp/storage/',\n    [\"instance_type\" /* instanceType */]: 'reports/gcp/instance-types/',\n};\nexport function runReport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const ReportTypePaths = {\n    [\"cost\" /* cost */]: 'reports/oci/costs/',\n    [\"database\" /* database */]: 'reports/oci/costs/',\n    [\"network\" /* network */]: 'reports/oci/costs/',\n    [\"storage\" /* storage */]: 'reports/oci/storage/',\n    [\"instance_type\" /* instanceType */]: 'reports/oci/instance-types/',\n};\nexport function runReport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const ReportTypePaths = {\n    [\"cost\" /* cost */]: 'reports/openshift/infrastructures/all/costs/',\n    [\"cpu\" /* cpu */]: 'reports/openshift/compute/',\n    [\"database\" /* database */]: 'reports/openshift/infrastructures/all/costs/',\n    [\"instance_type\" /* instanceType */]: 'reports/openshift/infrastructures/all/instance-types/',\n    [\"memory\" /* memory */]: 'reports/openshift/memory/',\n    [\"network\" /* network */]: 'reports/openshift/infrastructures/all/costs/',\n    [\"storage\" /* storage */]: 'reports/openshift/infrastructures/all/storage/',\n    [\"volume\" /* volume */]: 'reports/openshift/volumes/',\n};\nexport function runReport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const ReportTypePaths = {\n    [\"cost\" /* cost */]: 'reports/openshift/costs/',\n    [\"cpu\" /* cpu */]: 'reports/openshift/compute/',\n    [\"memory\" /* memory */]: 'reports/openshift/memory/',\n    [\"volume\" /* volume */]: 'reports/openshift/volumes/',\n};\nexport function runReport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const ResourceTypePaths = {\n    [\"account\" /* account */]: 'resource-types/aws-accounts/',\n    [\"region\" /* region */]: 'resource-types/aws-regions/',\n    [\"service\" /* service */]: 'resource-types/aws-services/',\n};\nexport function runResource(resourceType, query) {\n    const insights = window.insights;\n    const path = ResourceTypePaths[resourceType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?openshift=true&${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?openshift=true&${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ResourceTypePaths = {\n    [\"account\" /* account */]: 'resource-types/aws-accounts/',\n    [\"region\" /* region */]: 'resource-types/aws-regions/',\n    [\"service\" /* service */]: 'resource-types/aws-services/',\n};\nexport function runResource(resourceType, query) {\n    const insights = window.insights;\n    const path = ResourceTypePaths[resourceType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ResourceTypePaths = {\n    [\"resource_location\" /* resourceLocation */]: 'resource-types/azure-regions/',\n    [\"subscription_guid\" /* subscriptionGuid */]: 'resource-types/azure-subscription-guids/',\n    [\"service_name\" /* serviceName */]: 'resource-types/azure-services/',\n};\nexport function runResource(resourceType, query) {\n    const insights = window.insights;\n    const path = ResourceTypePaths[resourceType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?openshift=true&${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?openshift=true&${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ResourceTypePaths = {\n    [\"resource_location\" /* resourceLocation */]: 'resource-types/azure-regions/',\n    [\"subscription_guid\" /* subscriptionGuid */]: 'resource-types/azure-subscription-guids/',\n    [\"service_name\" /* serviceName */]: 'resource-types/azure-services/',\n};\nexport function runResource(resourceType, query) {\n    const insights = window.insights;\n    const path = ResourceTypePaths[resourceType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ResourceTypePaths = {\n    [\"account\" /* account */]: 'resource-types/gcp-accounts/',\n    [\"gcp_project\" /* gcpProject */]: 'resource-types/gcp-projects/',\n    [\"region\" /* region */]: 'resource-types/gcp-regions/',\n    [\"service\" /* service */]: 'resource-types/gcp-services/',\n};\nexport function runResource(resourceType, query) {\n    const insights = window.insights;\n    const path = ResourceTypePaths[resourceType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?openshift=true&${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?openshift=true&${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ResourceTypePaths = {\n    [\"account\" /* account */]: 'resource-types/gcp-accounts/',\n    [\"gcp_project\" /* gcpProject */]: 'resource-types/gcp-projects/',\n    [\"region\" /* region */]: 'resource-types/gcp-regions/',\n    [\"service\" /* service */]: 'resource-types/gcp-services/',\n};\nexport function runResource(resourceType, query) {\n    const insights = window.insights;\n    const path = ResourceTypePaths[resourceType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ResourceTypePaths = {\n    [\"account\" /* account */]: 'resource-types/gcp-accounts/',\n    [\"project\" /* project */]: 'resource-types/gcp-projects/',\n    [\"region\" /* region */]: 'resource-types/gcp-regions/',\n    [\"service\" /* service */]: 'resource-types/gcp-services/',\n};\nexport function runResource(resourceType, query) {\n    const insights = window.insights;\n    const path = ResourceTypePaths[resourceType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ResourceTypePaths = {\n    [\"cluster\" /* cluster */]: 'resource-types/openshift-clusters/',\n    [\"node\" /* node */]: 'resource-types/openshift-nodes/',\n    [\"project\" /* project */]: 'resource-types/openshift-projects/',\n};\nexport function runResource(resourceType, query) {\n    const insights = window.insights;\n    const path = ResourceTypePaths[resourceType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","import { runResource as runAwsOcpResource } from './awsOcpResource';\nimport { runResource as runAwsResource } from './awsResource';\nimport { runResource as runAzureOcpResource } from './azureOcpResource';\nimport { runResource as runAzureResource } from './azureResource';\nimport { runResource as runGcpOcpResource } from './gcpOcpResource';\nimport { runResource as runGcpResource } from './gcpResource';\nimport { runResource as runIbmResource } from './ibmResource';\nimport { runResource as runOcpResource } from './ocpResource';\n// Temporary check until typeahead is implemented for all filters\nexport function isResourceTypeValid(resourcePathsType, resourceType) {\n    let result = false;\n    if (resourcePathsType === \"aws\" /* aws */ ||\n        resourcePathsType === \"aws_ocp\" /* awsOcp */ ||\n        resourcePathsType === \"azure\" /* azure */ ||\n        resourcePathsType === \"azure_ocp\" /* azureOcp */ ||\n        resourcePathsType === \"gcp\" /* gcp */ ||\n        resourcePathsType === \"gcp_ocp\" /* gcpOcp */ ||\n        resourcePathsType === \"ibm\" /* ibm */ ||\n        resourcePathsType === \"ibm_ocp\" /* ibmOcp */ ||\n        resourcePathsType === \"ocp\" /* ocp */ ||\n        resourcePathsType === \"ocp_cloud\" /* ocpCloud */) {\n        switch (resourceType) {\n            case \"account\" /* account */:\n            case \"cluster\" /* cluster */:\n            case \"gcp_project\" /* gcpProject */:\n            case \"node\" /* node */:\n            case \"project\" /* project */:\n            case \"region\" /* region */:\n            case \"resource_location\" /* resourceLocation */:\n            case \"service\" /* service */:\n            case \"service_name\" /* serviceName */:\n            case \"subscription_guid\" /* subscriptionGuid */:\n                result = true;\n                break;\n        }\n    }\n    return result;\n}\nexport function runResource(resourcePathsType, resourceType, query) {\n    let forecast;\n    switch (resourcePathsType) {\n        case \"aws\" /* aws */:\n            forecast = runAwsResource(resourceType, query);\n            break;\n        case \"aws_ocp\" /* awsOcp */:\n            forecast = runAwsOcpResource(resourceType, query);\n            break;\n        case \"azure\" /* azure */:\n            forecast = runAzureResource(resourceType, query);\n            break;\n        case \"azure_ocp\" /* azureOcp */:\n            forecast = runAzureOcpResource(resourceType, query);\n            break;\n        case \"gcp\" /* gcp */:\n            forecast = runGcpResource(resourceType, query);\n            break;\n        case \"gcp_ocp\" /* gcpOcp */:\n            forecast = runGcpOcpResource(resourceType, query);\n            break;\n        case \"ibm\" /* ibm */:\n            forecast = runIbmResource(resourceType, query);\n            break;\n        case \"ocp\" /* ocp */:\n        case \"ocp_cloud\" /* ocpCloud */:\n            forecast = runOcpResource(resourceType, query);\n            break;\n    }\n    return forecast;\n}\n","import messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { withRouter } from 'react-router';\nimport { paths, routes } from 'routes';\nclass PageTitleBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n        // TBD...\n        };\n        this.state = Object.assign({}, this.defaultState);\n    }\n    getPath() {\n        const { location } = this.props;\n        // cost models may include :uuid\n        const _pathname = location.pathname && location.pathname.startsWith(paths.costModels) ? paths.costModels : location.pathname;\n        const currRoute = routes.find(({ path }) => path === _pathname);\n        return currRoute ? currRoute.path : undefined;\n    }\n    getPageTitle() {\n        const path = this.getPath();\n        switch (path) {\n            case paths.explorer:\n                return messages.pageTitleExplorer;\n            case paths.overview:\n                return messages.pageTitleOverview;\n            case paths.awsDetails:\n            case paths.awsDetailsBreakdown:\n                return messages.pageTitleAws;\n            case paths.azureDetails:\n            case paths.azureDetailsBreakdown:\n                return messages.pageTitleAzure;\n            case paths.costModels:\n                return messages.pageTitleCostModels;\n            case paths.gcpDetails:\n            case paths.gcpDetailsBreakdown:\n                return messages.pageTitleGcp;\n            case paths.ibmDetails:\n            case paths.ibmDetailsBreakdown:\n                return messages.pageTitleIbm;\n            case paths.ocpDetails:\n            case paths.ocpDetailsBreakdown:\n                return messages.pageTitleOcp;\n            default:\n                return messages.pageTitleDefault;\n        }\n    }\n    render() {\n        const { children = null, intl } = this.props;\n        // Set page title\n        document.title = intl.formatMessage(this.getPageTitle());\n        return children;\n    }\n}\nconst PageTitle = injectIntl(withRouter(PageTitleBase));\nexport { PageTitle };\n","import { Stack, StackItem } from '@patternfly/react-core';\nimport Maintenance from '@redhat-cloud-services/frontend-components/Maintenance';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nclass MaintenanceStateBase extends React.Component {\n    render() {\n        const { intl } = this.props;\n        return (React.createElement(Maintenance, { description: React.createElement(Stack, null,\n                React.createElement(StackItem, null, intl.formatMessage(messages.maintenanceEmptyStateDesc)),\n                React.createElement(StackItem, null, intl.formatMessage(messages.maintenanceEmptyStateInfo, {\n                    url: (React.createElement(\"a\", { href: intl.formatMessage(messages.redHatStatusUrl), rel: \"noreferrer\", target: \"_blank\" }, \"\\\"status page\\\"\")),\n                })),\n                React.createElement(StackItem, null, intl.formatMessage(messages.maintenanceEmptyStateThanks))) }));\n    }\n}\nconst MaintenanceState = injectIntl(MaintenanceStateBase);\nexport { MaintenanceState };\n","import Maintenance from './maintenance';\nexport default Maintenance;\n","import Main from '@redhat-cloud-services/frontend-components/Main';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { MaintenanceState } from './maintenanceState';\nconst Maintenance = () => {\n    return (React.createElement(Main, null,\n        React.createElement(MaintenanceState, null)));\n};\nexport default withRouter(Maintenance);\n","import { PageTitle } from 'components/pageTitle/pageTitle';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport Maintenance from 'routes/state/maintenance';\nimport { createMapStateToProps } from 'store/common';\nimport { Routes, routes } from './routes';\nexport class App extends React.Component {\n    constructor() {\n        super(...arguments);\n        // Todo: Will Insights provide a flag to enable maintenance mode?\n        // https://docs.google.com/document/d/1VLs7vFczWUzyIpH6EUsTEpJugDsjeuh4a_azs6IJbC0/edit#\n        this.state = { maintenanceMode: false };\n    }\n    componentDidMount() {\n        const { history, location } = this.props;\n        insights.chrome.init();\n        insights.chrome.identifyApp('cost-management');\n        if (location && location.pathname) {\n            insights.chrome.appAction(location.pathname);\n        }\n        this.appNav = insights.chrome.on('APP_NAVIGATION', event => {\n            var _a, _b;\n            let currRoute = routes.find(({ path }) => path.includes(event.navId));\n            /**\n             * Condition is required until new nav changes are propagated to each environment.\n             * Eventually will be avaiable as a hook value to replace event listening.\n             */\n            if (!currRoute && typeof ((_a = event === null || event === void 0 ? void 0 : event.domEvent) === null || _a === void 0 ? void 0 : _a.href) === 'string') {\n                const appPathname = (_b = event === null || event === void 0 ? void 0 : event.domEvent) === null || _b === void 0 ? void 0 : _b.href.replace(this.props.basename.replace(/^\\/beta\\//, '/'), '/');\n                currRoute = routes.find(({ path }) => path.includes(appPathname));\n            }\n            if (event.domEvent && currRoute) {\n                history.push(currRoute.path);\n            }\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { location } = this.props;\n        if (location && location.pathname !== prevProps.location.pathname) {\n            window.scrollTo(0, 0);\n            insights.chrome.appAction(location.pathname);\n        }\n    }\n    componentWillUnmount() {\n        this.appNav();\n        insights.chrome.appAction(undefined);\n    }\n    render() {\n        const { maintenanceMode } = this.state;\n        const route = maintenanceMode ? React.createElement(Maintenance, null) : React.createElement(Routes, null);\n        return React.createElement(PageTitle, null, route);\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = { history };\nexport default compose(withRouter, connect(mapStateToProps, mapDispatchToProps))(App);\n","import React from 'react';\nexport function asyncComponent(loader) {\n    let LoadedComponent = null;\n    class Async extends React.Component {\n        constructor() {\n            super(...arguments);\n            // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            // @ts-ignore\n            this._isMounted = false;\n            this.state = {\n                isLoading: !LoadedComponent,\n            };\n        }\n        componentDidMount() {\n            this._isMounted = true;\n            if (!this.state.isLoading) {\n                return;\n            }\n            loader().then(Comp => {\n                LoadedComponent = Comp.default ? Comp.default : Comp;\n                if (this._isMounted) {\n                    this.setState({ isLoading: false });\n                }\n            });\n        }\n        componentWillUnmount() {\n            this._isMounted = false;\n        }\n        render() {\n            const { isLoading } = this.state;\n            return isLoading ? null : React.createElement(LoadedComponent, Object.assign({}, this.props));\n        }\n    }\n    return Async;\n}\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n    exportsIcon: {\n        marginLeft: global_spacer_md.value,\n        marginRight: global_spacer_sm.value,\n    },\n    exportsLink: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    pagination: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n    toolbarContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n    },\n};\n","import { AlertActionLink, Button } from '@patternfly/react-core';\nimport { AngleDoubleLeftIcon } from '@patternfly/react-icons/dist/esm/icons/angle-double-left-icon';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { uiSelectors } from 'store/ui';\nimport { uiActions } from 'store/ui';\nimport { styles } from './exports.styles';\nclass ExportsLinkBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.handleToggle = event => {\n            const { closeExportDrawer, isOpen, onClick, openExportDrawer } = this.props;\n            if (isOpen) {\n                closeExportDrawer();\n            }\n            else {\n                openExportDrawer();\n            }\n            event.preventDefault();\n            if (onClick) {\n                onClick(isOpen);\n            }\n            return false;\n        };\n    }\n    render() {\n        const { intl, isActionLink } = this.props;\n        // @redhat-cloud-services/frontend-components-notifications does not expose PatternFly's actionLinks prop\n        if (isActionLink) {\n            return (React.createElement(\"div\", { className: \"pf-c-alert__action-group\" },\n                React.createElement(AlertActionLink, { onClick: this.handleToggle }, intl.formatMessage(messages.exportsTitle))));\n        }\n        return (React.createElement(\"div\", { style: styles.exportsLink },\n            React.createElement(Button, { variant: \"link\", onClick: this.handleToggle },\n                React.createElement(\"span\", { style: styles.exportsIcon },\n                    React.createElement(AngleDoubleLeftIcon, null)),\n                intl.formatMessage(messages.exportsTitle))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(state => {\n    const isOpen = uiSelectors.selectIsExportsDrawerOpen(state);\n    return {\n        isOpen,\n    };\n});\nconst mapDispatchToProps = {\n    closeExportDrawer: uiActions.closeExportsDrawer,\n    openExportDrawer: uiActions.openExportsDrawer,\n};\nconst ExportsLink = injectIntl(connect(mapStateToProps, mapDispatchToProps)(ExportsLinkBase));\nexport { ExportsLink };\n","import { createIntl, createIntlCache } from 'react-intl';\n// eslint-disable-next-line no-restricted-imports\nimport messages from '../../../locales/data.json';\nconst locale = navigator.language.split(/[-_]/)[0] || 'en';\nexport const getLocale = () => {\n    return locale;\n};\nconst cache = createIntlCache();\nexport const intl = createIntl({\n    defaultLocale: 'en',\n    locale,\n    // eslint-disable-next-line no-console\n    onError: console.log,\n    messages: messages[locale],\n}, cache);\n","import _NotAuthorized from '@redhat-cloud-services/frontend-components/NotAuthorized';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\nimport { withRouter } from 'react-router-dom';\nimport { paths } from 'routes';\nclass NotAuthorizedStateBase extends React.Component {\n    render() {\n        const { intl, pathname } = this.props;\n        let msg;\n        switch (pathname) {\n            case paths.awsDetails:\n            case paths.awsDetailsBreakdown:\n                msg = messages.notAuthorizedStateAws;\n                break;\n            case paths.azureDetails:\n            case paths.azureDetailsBreakdown:\n                msg = messages.notAuthorizedStateAzure;\n                break;\n            case paths.costModels:\n                msg = messages.notAuthorizedStateCostModels;\n                break;\n            case paths.gcpDetails:\n            case paths.gcpDetailsBreakdown:\n                msg = messages.notAuthorizedStateGcp;\n                break;\n            case paths.ibmDetails:\n            case paths.ibmDetailsBreakdown:\n                msg = messages.notAuthorizedStateIbm;\n                break;\n            case paths.ociDetails:\n            case paths.ociDetailsBreakdown:\n                msg = messages.notAuthorizedStateOci;\n                break;\n            case paths.ocpDetails:\n            case paths.ocpDetailsBreakdown:\n                msg = messages.notAuthorizedStateOcp;\n                break;\n            case paths.explorer:\n            default:\n                msg = messages.costManagement;\n                break;\n        }\n        return React.createElement(_NotAuthorized, { serviceName: intl.formatMessage(msg) });\n    }\n}\nconst NotAuthorizedState = injectIntl(withRouter(NotAuthorizedStateBase));\nexport { NotAuthorizedState };\n","import NotAuthorized from './notAuthorized';\nexport default NotAuthorized;\n","import Main from '@redhat-cloud-services/frontend-components/Main';\nimport PageHeader, { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { NotAuthorizedState } from './notAuthorizedState';\nconst NotAuthorized = ({ pathname, title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(NotAuthorizedState, { pathname: pathname }))));\n};\nexport default withRouter(NotAuthorized);\n","import { getUserAccessQuery } from 'api/queries/userAccessQuery';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { paths, routes } from 'routes';\nimport Loading from 'routes/state/loading';\nimport NotAuthorized from 'routes/state/notAuthorized';\nimport NotAvailable from 'routes/state/notAvailable';\nimport { createMapStateToProps } from 'store/common';\nimport { featureFlagsSelectors } from 'store/featureFlags';\nimport { userAccessQuery, userAccessSelectors } from 'store/userAccess';\nimport { hasAwsAccess, hasAzureAccess, hasCostModelAccess, hasGcpAccess, hasIbmAccess, hasOciAccess, hasOcpAccess, } from 'utils/userAccess';\nclass PermissionsBase extends React.Component {\n    getRoutePath() {\n        const { location } = this.props;\n        // cost models may include UUID in path\n        const _pathname = location.pathname && location.pathname.startsWith(paths.costModels) ? paths.costModels : location.pathname;\n        const currRoute = routes.find(({ path }) => path === _pathname);\n        return currRoute ? currRoute.path : undefined;\n    }\n    hasPermissions() {\n        const { isIbmFeatureEnabled, isOciFeatureEnabled, userAccess, userAccessFetchStatus } = this.props;\n        if (!(userAccess && userAccessFetchStatus === 2 /* complete */)) {\n            return false;\n        }\n        const aws = hasAwsAccess(userAccess);\n        const azure = hasAzureAccess(userAccess);\n        const oci = hasOciAccess(userAccess) && isOciFeatureEnabled;\n        const costModel = hasCostModelAccess(userAccess);\n        const gcp = hasGcpAccess(userAccess);\n        const ibm = hasIbmAccess(userAccess) && isIbmFeatureEnabled;\n        const ocp = hasOcpAccess(userAccess);\n        const path = this.getRoutePath();\n        switch (path) {\n            case paths.explorer:\n            case paths.overview:\n                return aws || azure || costModel || gcp || ibm || ocp || oci;\n            case paths.awsDetails:\n            case paths.awsDetailsBreakdown:\n                return aws;\n            case paths.azureDetails:\n            case paths.azureDetailsBreakdown:\n                return azure;\n            case paths.costModels:\n                return costModel;\n            case paths.gcpDetails:\n            case paths.gcpDetailsBreakdown:\n                return gcp;\n            case paths.ociDetails:\n            case paths.ociDetailsBreakdown:\n                return oci;\n            case paths.ibmDetails:\n            case paths.ibmDetailsBreakdown:\n                return ibm;\n            case paths.ocpDetails:\n            case paths.ocpDetailsBreakdown:\n                return ocp;\n            default:\n                return false;\n        }\n    }\n    render() {\n        const { children = null, location, userAccessFetchStatus, userAccessError } = this.props;\n        if (userAccessFetchStatus === 1 /* inProgress */) {\n            return React.createElement(Loading, null);\n        }\n        else if (userAccessError) {\n            return React.createElement(NotAvailable, null);\n        }\n        else if (this.hasPermissions()) {\n            return children;\n        }\n        // Page access denied because user doesn't have RBAC permissions and is not an org admin\n        return React.createElement(NotAuthorized, { pathname: location.pathname });\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const userAccessQueryString = getUserAccessQuery(userAccessQuery);\n    const userAccess = userAccessSelectors.selectUserAccess(state, \"all\" /* all */, userAccessQueryString);\n    const userAccessError = userAccessSelectors.selectUserAccessError(state, \"all\" /* all */, userAccessQueryString);\n    const userAccessFetchStatus = userAccessSelectors.selectUserAccessFetchStatus(state, \"all\" /* all */, userAccessQueryString);\n    return {\n        isIbmFeatureEnabled: featureFlagsSelectors.selectIsIbmFeatureEnabled(state),\n        isOciFeatureEnabled: featureFlagsSelectors.selectIsOciFeatureEnabled(state),\n        userAccess,\n        userAccessError,\n        userAccessFetchStatus,\n        userAccessQueryString,\n    };\n});\nconst Permissions = withRouter(connect(mapStateToProps, undefined)(PermissionsBase));\nexport { Permissions };\n","import { asyncComponent } from 'components/async';\nimport React from 'react';\nconst PermissionsWrapper = asyncComponent(() => import(/* webpackChunkName: \"permissionsWrapper\" */ 'components/permissions/permissionsWrapper'));\n// Permissions component wrapper for AsyncComponent\nexport function permissionsComponent(AysncComponent) {\n    class PermissionsComponent extends React.Component {\n        render() {\n            return (React.createElement(PermissionsWrapper, null,\n                React.createElement(AysncComponent, Object.assign({}, this.props))));\n        }\n    }\n    return PermissionsComponent;\n}\n","import { Permissions } from './permissions';\nexport * from './permissionsComponent';\nexport default Permissions;\n","/* eslint-disable max-len */\nimport { defineMessages } from 'react-intl';\nexport default defineMessages({\n    aws: {\n        defaultMessage: 'Amazon Web Services',\n        description: 'Amazon Web Services',\n        id: 'aws',\n    },\n    awsComputeTitle: {\n        defaultMessage: 'Compute (EC2) instances usage',\n        description: 'Compute (EC2) instances usage',\n        id: 'awsComputeTitle',\n    },\n    awsCostTrendTitle: {\n        defaultMessage: 'Amazon Web Services cumulative cost comparison ({units})',\n        description: 'Amazon Web Services cumulative cost comparison ({units})',\n        id: 'awsCostTrendTitle',\n    },\n    awsDailyCostTrendTitle: {\n        defaultMessage: 'Amazon Web Services daily cost comparison ({units})',\n        description: 'Amazon Web Services daily cost comparison ({units})',\n        id: 'awsDailyCostTrendTitle',\n    },\n    awsDashboardCostTitle: {\n        defaultMessage: 'Amazon Web Services cost',\n        description: 'Amazon Web Services cost',\n        id: 'awsDashboardCostTitle',\n    },\n    awsDesc: {\n        defaultMessage: 'Raw cost from Amazon Web Services infrastructure.',\n        description: 'Raw cost from Amazon Web Services infrastructure.',\n        id: 'awsDesc',\n    },\n    awsDetailsTableAriaLabel: {\n        defaultMessage: 'Amazon Web Services details table',\n        description: 'Amazon Web Services details table',\n        id: 'awsDetailsTable',\n    },\n    awsDetailsTitle: {\n        defaultMessage: 'Amazon Web Services Details',\n        description: 'Amazon Web Services Details',\n        id: 'awsDetailsTitle',\n    },\n    awsOcpDashboardCostTitle: {\n        defaultMessage: 'Amazon Web Services filtered by OpenShift cost',\n        description: 'Amazon Web Services filtered by OpenShift cost',\n        id: 'awsOcpDashboardCostTitle',\n    },\n    azure: {\n        defaultMessage: 'Microsoft Azure',\n        description: 'Microsoft Azure',\n        id: 'azure',\n    },\n    azureComputeTitle: {\n        defaultMessage: 'Virtual machines usage',\n        description: 'Virtual machines usage',\n        id: 'azureComputeTitle',\n    },\n    azureCostTrendTitle: {\n        defaultMessage: 'Microsoft Azure cumulative cost comparison ({units})',\n        description: 'Microsoft Azure cumulative cost comparison ({units})',\n        id: 'azureCostTrendTitle',\n    },\n    azureDailyCostTrendTitle: {\n        defaultMessage: 'Microsoft Azure daily cost comparison ({units})',\n        description: 'Microsoft Azure daily cost comparison ({units})',\n        id: 'azureDailyCostTrendTitle',\n    },\n    azureDashboardCostTitle: {\n        defaultMessage: 'Microsoft Azure cost',\n        description: 'Microsoft Azure cost',\n        id: 'azureDashboardCostTitle',\n    },\n    azureDesc: {\n        defaultMessage: 'Raw cost from Azure infrastructure.',\n        description: 'Raw cost from Azure infrastructure.',\n        id: 'azureDesc',\n    },\n    azureDetailsTableAriaLabel: {\n        defaultMessage: 'Microsoft Azure details table',\n        description: 'Microsoft Azure details table',\n        id: 'azureDetailsTable',\n    },\n    azureDetailsTitle: {\n        defaultMessage: 'Microsoft Azure details',\n        description: 'Microsoft Azure details',\n        id: 'azureDetailsTitle',\n    },\n    azureOcpDashboardCostTitle: {\n        defaultMessage: 'Microsoft Azure filtered by OpenShift cost',\n        description: 'Microsoft Azure filtered by OpenShift cost',\n        id: 'azureOcpDashboardCostTitle',\n    },\n    back: {\n        defaultMessage: 'Back',\n        description: 'Back',\n        id: 'back',\n    },\n    breakdownBackToDetails: {\n        defaultMessage: '{groupBy, select, ' +\n            'account {Back to {value} account details} ' +\n            'cluster {Back to {value} cluster details} ' +\n            'gcp_project {Back to {value} GCP project details} ' +\n            'node {Back to {value} node details} ' +\n            'org_unit_id {Back to {value} organizational unit details} ' +\n            'payer_tenant_id {Back to {value} account details} ' +\n            'product_service {Back to {value} service details} ' +\n            'project {Back to {value} project details} ' +\n            'region {Back to {value} region details} ' +\n            'resource_location {Back to {value} region details} ' +\n            'service {Back to {value} service details} ' +\n            'service_name {Back to {value} service details} ' +\n            'subscription_guid {Back to {value} account details} ' +\n            'tag {Back to {value} tag details} ' +\n            'other {}}',\n        description: 'Back to {value} {groupBy} details',\n        id: 'breakdownBackToDetails',\n    },\n    breakdownBackToDetailsAriaLabel: {\n        defaultMessage: 'Back to details',\n        description: 'Back to details',\n        id: 'breakdownBackToDetailsAriaLabel',\n    },\n    breakdownBackToTitles: {\n        defaultMessage: '{value, select, ' +\n            'aws {Amazon Web Services} ' +\n            'azure {Microsoft Azure} ' +\n            'oci {Oracle Cloud Infrastructure} ' +\n            'gcp {Google Cloud Platform} ' +\n            'ibm {IBM Cloud - Top 5 Costliest} ' +\n            'ocp {OpenShift} ' +\n            'other {}}',\n        description: 'Breakdown back to page titles',\n        id: 'breakdownBackToTitles',\n    },\n    breakdownCostBreakdownAriaLabel: {\n        defaultMessage: 'A description of markup, raw cost and usage cost',\n        description: 'A description of markup, raw cost and usage cost',\n        id: 'breakdownCostBreakdownAriaLabel',\n    },\n    breakdownCostBreakdownTitle: {\n        defaultMessage: 'Cost breakdown',\n        description: 'A description of markup, raw cost and usage cost',\n        id: 'breakdownCostBreakdownTitle',\n    },\n    breakdownCostChartAriaDesc: {\n        defaultMessage: 'Breakdown of markup, raw, and usage costs',\n        description: 'Breakdown of markup, raw, and usage costs',\n        id: 'breakdownCostChartAriaDesc',\n    },\n    breakdownCostChartTooltip: {\n        defaultMessage: '{name}: {value}',\n        description: '{name}: {value}',\n        id: 'breakdownCostChartTooltip',\n    },\n    breakdownCostOverviewTitle: {\n        defaultMessage: 'Cost overview',\n        description: 'Cost overview',\n        id: 'breakdownCostOverviewTitle',\n    },\n    breakdownHistoricalDataTitle: {\n        defaultMessage: 'Historical data',\n        description: 'Historical data',\n        id: 'breakdownHistoricalDataTitle',\n    },\n    breakdownSummaryTitle: {\n        defaultMessage: '{value, select, ' +\n            'account {Cost by accounts} ' +\n            'cluster {Cost by clusters} ' +\n            'gcp_project {Cost by GCP projects} ' +\n            'node {Cost by Node} ' +\n            'org_unit_id {Cost by organizational units} ' +\n            'payer_tenant_id {Cost by accounts} ' +\n            'product_service {Cost by services} ' +\n            'project {Cost by projects} ' +\n            'region {Cost by regions} ' +\n            'resource_location {Cost by regions} ' +\n            'service {Cost by services} ' +\n            'service_name {Cost by services} ' +\n            'subscription_guid {Cost by accounts} ' +\n            'tag {Cost by tags} ' +\n            'other {}}',\n        description: 'Cost by {value}',\n        id: 'breakdownSummaryTitle',\n    },\n    breakdownTitle: {\n        defaultMessage: '{value}',\n        description: 'Breakdown title',\n        id: 'breakdownTitle',\n    },\n    breakdownTotalCostDate: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {{value} total cost (January {startDate})} other {{value} total cost (January {startDate}-{endDate})}}} ' +\n            '1 {{count, plural, one {{value} total cost (February {startDate})} other {{value} total cost (February {startDate}-{endDate})}}} ' +\n            '2 {{count, plural, one {{value} total cost (March {startDate})} other {{value} total cost (March {startDate}-{endDate})}}} ' +\n            '3 {{count, plural, one {{value} total cost (April {startDate})} other {{value} total cost (April {startDate}-{endDate})}}} ' +\n            '4 {{count, plural, one {{value} total cost (May {startDate})} other {{value} total cost (May {startDate}-{endDate})}}} ' +\n            '5 {{count, plural, one {{value} total cost (June {startDate})} other {{value} total cost (June {startDate}-{endDate})}}} ' +\n            '6 {{count, plural, one {{value} total cost (July {startDate})} other {{value} total cost (July {startDate}-{endDate})}}} ' +\n            '7 {{count, plural, one {{value} total cost (August {startDate})} other {{value} total cost (August {startDate}-{endDate})}}} ' +\n            '8 {{count, plural, one {{value} total cost (September {startDate})} other {{value} total cost (September {startDate}-{endDate})}}} ' +\n            '9 {{count, plural, one {{value} total cost (October {startDate})} other {{value} total cost (October {startDate}-{endDate})}}} ' +\n            '10 {{count, plural, one {{value} total cost (November {startDate})} other {{value} total cost (November {startDate}-{endDate})}}} ' +\n            '11 {{count, plural, one {{value} total cost (December {startDate})} other {{value} total cost (December {startDate}-{endDate})}}} ' +\n            'other {}}',\n        description: 'Break down total cost by date',\n        id: 'breakdownTotalCostDate',\n    },\n    calculationType: {\n        defaultMessage: 'Calculation type',\n        description: 'Calculation type',\n        id: 'calculationType',\n    },\n    cancel: {\n        defaultMessage: 'Cancel',\n        description: 'Cancel',\n        id: 'cancel',\n    },\n    chartCostForecastConeLegendLabel: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {Cost confidence (Jan {startDate})} other {Cost confidence (Jan {startDate}-{endDate})}}} ' +\n            '1 {{count, plural, one {Cost confidence (Feb {startDate})} other {Cost confidence (Feb {startDate}-{endDate})}}} ' +\n            '2 {{count, plural, one {Cost confidence (Mar {startDate})} other {Cost confidence (Mar {startDate}-{endDate})}}} ' +\n            '3 {{count, plural, one {Cost confidence (Apr {startDate})} other {Cost confidence (Apr {startDate}-{endDate})}}} ' +\n            '4 {{count, plural, one {Cost confidence (May {startDate})} other {Cost confidence (May {startDate}-{endDate})}}} ' +\n            '5 {{count, plural, one {Cost confidence (Jun {startDate})} other {Cost confidence (Jun {startDate}-{endDate})}}} ' +\n            '6 {{count, plural, one {Cost confidence (Jul {startDate})} other {Cost confidence (Jul {startDate}-{endDate})}}} ' +\n            '7 {{count, plural, one {Cost confidence (Aug {startDate})} other {Cost confidence (Aug {startDate}-{endDate})}}} ' +\n            '8 {{count, plural, one {Cost confidence (Sep {startDate})} other {Cost confidence (Sep {startDate}-{endDate})}}} ' +\n            '9 {{count, plural, one {Cost confidence (Oct {startDate})} other {Cost confidence (Oct {startDate}-{endDate})}}} ' +\n            '10 {{count, plural, one {Cost confidence (Nov {startDate})} other {Cost confidence (Nov {startDate}-{endDate})}}} ' +\n            '11 {{count, plural, one {Cost confidence (Dec {startDate})} other {Cost confidence (Dec {startDate}-{endDate})}}} ' +\n            'other {}}',\n        description: 'Cost forecast cone date label',\n        id: 'chartCostForecastConeLegendLabel',\n    },\n    chartCostForecastConeLegendNoDataLabel: {\n        defaultMessage: 'Cost confidence (no data)',\n        description: 'Cost confidence (no data)',\n        id: 'chartCostForecastConeLegendNoDataLabel',\n    },\n    chartCostForecastConeLegendTooltip: {\n        defaultMessage: '{month, select, ' +\n            '0 {Cost confidence (Jan)} ' +\n            '1 {Cost confidence (Feb)} ' +\n            '2 {Cost confidence (Mar)} ' +\n            '3 {Cost confidence (Apr)} ' +\n            '4 {Cost confidence (May)} ' +\n            '5 {Cost confidence (Jun)} ' +\n            '6 {Cost confidence (Jul)} ' +\n            '7 {Cost confidence (Aug)} ' +\n            '8 {Cost confidence (Sep)} ' +\n            '9 {Cost confidence (Oct)} ' +\n            '10 {Cost confidence (Nov)} ' +\n            '11 {Cost confidence (Dec)} ' +\n            'other {}}',\n        description: 'Cost forecast confidence date label tooltip',\n        id: 'chartCostForecastConeLegendTooltip',\n    },\n    chartCostForecastConeTooltip: {\n        defaultMessage: '{value0} - {value1}',\n        description: 'Cost forecast confidence min/max tooltip',\n        id: 'chartCostForecastConeTooltip',\n    },\n    chartCostForecastLegendLabel: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {Cost forecast (Jan {startDate})} other {Cost forecast (Jan {startDate}-{endDate})}}} ' +\n            '1 {{count, plural, one {Cost forecast (Feb {startDate})} other {Cost forecast (Feb {startDate}-{endDate})}}} ' +\n            '2 {{count, plural, one {Cost forecast (Mar {startDate})} other {Cost forecast (Mar {startDate}-{endDate})}}} ' +\n            '3 {{count, plural, one {Cost forecast (Apr {startDate})} other {Cost forecast (Apr {startDate}-{endDate})}}} ' +\n            '4 {{count, plural, one {Cost forecast (May {startDate})} other {Cost forecast (May {startDate}-{endDate})}}} ' +\n            '5 {{count, plural, one {Cost forecast (Jun {startDate})} other {Cost forecast (Jun {startDate}-{endDate})}}} ' +\n            '6 {{count, plural, one {Cost forecast (Jul {startDate})} other {Cost forecast (Jul {startDate}-{endDate})}}} ' +\n            '7 {{count, plural, one {Cost forecast (Aug {startDate})} other {Cost forecast (Aug {startDate}-{endDate})}}} ' +\n            '8 {{count, plural, one {Cost forecast (Sep {startDate})} other {Cost forecast (Sep {startDate}-{endDate})}}} ' +\n            '9 {{count, plural, one {Cost forecast (Oct {startDate})} other {Cost forecast (Oct {startDate}-{endDate})}}} ' +\n            '10 {{count, plural, one {Cost forecast (Nov {startDate})} other {Cost forecast (Nov {startDate}-{endDate})}}} ' +\n            '11 {{count, plural, one {Cost forecast (Dec {startDate})} other {Cost forecast (Dec {startDate}-{endDate})}}} ' +\n            'other {}}',\n        description: 'Cost forecast date label',\n        id: 'chartCostForecastLegendLabel',\n    },\n    chartCostForecastLegendNoDataLabel: {\n        defaultMessage: 'Cost forecast (no data)',\n        description: 'Cost forecast (no data)',\n        id: 'chartCostForecastLegendNoDataLabel',\n    },\n    chartCostForecastLegendTooltip: {\n        defaultMessage: '{month, select, ' +\n            '0 {Cost forecast (Jan)} ' +\n            '1 {Cost forecast (Feb)} ' +\n            '2 {Cost forecast (Mar)} ' +\n            '3 {Cost forecast (Apr)} ' +\n            '4 {Cost forecast (May)} ' +\n            '5 {Cost forecast (Jun)} ' +\n            '6 {Cost forecast (Jul)} ' +\n            '7 {Cost forecast (Aug)} ' +\n            '8 {Cost forecast (Sep)} ' +\n            '9 {Cost forecast (Oct)} ' +\n            '10 {Cost forecast (Nov)} ' +\n            '11 {Cost forecast (Dec)} ' +\n            'other {}}',\n        description: 'Cost forecast date label tooltip',\n        id: 'chartCostForecastLegendTooltip',\n    },\n    chartCostInfrastructureForecastConeLegendLabel: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {Infrastructure confidence (Jan {startDate})} other {Infrastructure confidence (Jan {startDate}-{endDate})}}} ' +\n            '1 {{count, plural, one {Infrastructure confidence (Feb {startDate})} other {Infrastructure confidence (Feb {startDate}-{endDate})}}} ' +\n            '2 {{count, plural, one {Infrastructure confidence (Mar {startDate})} other {Infrastructure confidence (Mar {startDate}-{endDate})}}} ' +\n            '3 {{count, plural, one {Infrastructure confidence (Apr {startDate})} other {Infrastructure confidence (Apr {startDate}-{endDate})}}} ' +\n            '4 {{count, plural, one {Infrastructure confidence (May {startDate})} other {Infrastructure confidence (May {startDate}-{endDate})}}} ' +\n            '5 {{count, plural, one {Infrastructure confidence (Jun {startDate})} other {Infrastructure confidence (Jun {startDate}-{endDate})}}} ' +\n            '6 {{count, plural, one {Infrastructure confidence (Jul {startDate})} other {Infrastructure confidence (Jul {startDate}-{endDate})}}} ' +\n            '7 {{count, plural, one {Infrastructure confidence (Aug {startDate})} other {Infrastructure confidence (Aug {startDate}-{endDate})}}} ' +\n            '8 {{count, plural, one {Infrastructure confidence (Sep {startDate})} other {Infrastructure confidence (Sep {startDate}-{endDate})}}} ' +\n            '9 {{count, plural, one {Infrastructure confidence (Oct {startDate})} other {Infrastructure confidence (Oct {startDate}-{endDate})}}} ' +\n            '10 {{count, plural, one {Infrastructure confidence (Nov {startDate})} other {Infrastructure confidence (Nov {startDate}-{endDate})}}} ' +\n            '11 {{count, plural, one {Infrastructure confidence (Dec {startDate})} other {Infrastructure confidence (Dec {startDate}-{endDate})}}} ' +\n            'other {}}',\n        description: 'Infrastructure date label',\n        id: 'chartCostInfrastructureForecastConeLegendLabel',\n    },\n    chartCostInfrastructureForecastConeLegendNoDataLabel: {\n        defaultMessage: 'Infrastructure confidence (no data)',\n        description: 'Infrastructure confidence (no data)',\n        id: 'chartCostInfrastructureForecastConeLegendNoDataLabel',\n    },\n    chartCostInfrastructureForecastConeLegendTooltip: {\n        defaultMessage: '{month, select, ' +\n            '0 {Infrastructure confidence (Jan)} ' +\n            '1 {Infrastructure confidence (Feb)} ' +\n            '2 {Infrastructure confidence (Mar)} ' +\n            '3 {Infrastructure confidence (Apr)} ' +\n            '4 {Infrastructure confidence (May)} ' +\n            '5 {Infrastructure confidence (Jun)} ' +\n            '6 {Infrastructure confidence (Jul)} ' +\n            '7 {Infrastructure confidence (Aug)} ' +\n            '8 {Infrastructure confidence (Sep)} ' +\n            '9 {Infrastructure confidence (Oct)} ' +\n            '10 {Infrastructure confidence (Nov)} ' +\n            '11 {Infrastructure confidence (Dec)} ' +\n            'other {}}',\n        description: 'Infrastructure date label tooltip',\n        id: 'chartCostInfrastructureForecastConeLegendTooltip',\n    },\n    chartCostInfrastructureForecastLegendLabel: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {Infrastructure forecast (Jan {startDate})} other {Infrastructure forecast (Jan {startDate}-{endDate})}}} ' +\n            '1 {{count, plural, one {Infrastructure forecast (Feb {startDate})} other {Infrastructure forecast (Feb {startDate}-{endDate})}}} ' +\n            '2 {{count, plural, one {Infrastructure forecast (Mar {startDate})} other {Infrastructure forecast (Mar {startDate}-{endDate})}}} ' +\n            '3 {{count, plural, one {Infrastructure forecast (Apr {startDate})} other {Infrastructure forecast (Apr {startDate}-{endDate})}}} ' +\n            '4 {{count, plural, one {Infrastructure forecast (May {startDate})} other {Infrastructure forecast (May {startDate}-{endDate})}}} ' +\n            '5 {{count, plural, one {Infrastructure forecast (Jun {startDate})} other {Infrastructure forecast (Jun {startDate}-{endDate})}}} ' +\n            '6 {{count, plural, one {Infrastructure forecast (Jul {startDate})} other {Infrastructure forecast (Jul {startDate}-{endDate})}}} ' +\n            '7 {{count, plural, one {Infrastructure forecast (Aug {startDate})} other {Infrastructure forecast (Aug {startDate}-{endDate})}}} ' +\n            '8 {{count, plural, one {Infrastructure forecast (Sep {startDate})} other {Infrastructure forecast (Sep {startDate}-{endDate})}}} ' +\n            '9 {{count, plural, one {Infrastructure forecast (Oct {startDate})} other {Infrastructure forecast (Oct {startDate}-{endDate})}}} ' +\n            '10 {{count, plural, one {Infrastructure forecast (Nov {startDate})} other {Infrastructure forecast (Nov {startDate}-{endDate})}}} ' +\n            '11 {{count, plural, one {Infrastructure forecast (Dec {startDate})} other {Infrastructure forecast (Dec {startDate}-{endDate})}}} ' +\n            'other {}}',\n        description: 'Infrastructure date label',\n        id: 'chartCostInfrastructureForecastLegendLabel',\n    },\n    chartCostInfrastructureForecastLegendNoDataLabel: {\n        defaultMessage: 'Infrastructure forecast (no data)',\n        description: 'Infrastructure forecast (no data)',\n        id: 'chartCostInfrastructureForecastLegendNoDataLabel',\n    },\n    chartCostInfrastructureForecastLegendTooltip: {\n        defaultMessage: '{month, select, ' +\n            '0 {Infrastructure forecast (Jan)} ' +\n            '1 {Infrastructure forecast (Feb)} ' +\n            '2 {Infrastructure forecast (Mar)} ' +\n            '3 {Infrastructure forecast (Apr)} ' +\n            '4 {Infrastructure forecast (May)} ' +\n            '5 {Infrastructure forecast (Jun)} ' +\n            '6 {Infrastructure forecast (Jul)} ' +\n            '7 {Infrastructure forecast (Aug)} ' +\n            '8 {Infrastructure forecast (Sep)} ' +\n            '9 {Infrastructure forecast (Oct)} ' +\n            '10 {Infrastructure forecast (Nov)} ' +\n            '11 {Infrastructure forecast (Dec)} ' +\n            'other {}}',\n        description: 'Infrastructure date label tooltip',\n        id: 'chartCostInfrastructureForecastLegendTooltip',\n    },\n    chartCostInfrastructureLegendLabel: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {Infrastructure cost (Jan {startDate})} other {Infrastructure cost (Jan {startDate}-{endDate})}}} ' +\n            '1 {{count, plural, one {Infrastructure cost (Feb {startDate})} other {Infrastructure cost (Feb {startDate}-{endDate})}}} ' +\n            '2 {{count, plural, one {Infrastructure cost (Mar {startDate})} other {Infrastructure cost (Mar {startDate}-{endDate})}}} ' +\n            '3 {{count, plural, one {Infrastructure cost (Apr {startDate})} other {Infrastructure cost (Apr {startDate}-{endDate})}}} ' +\n            '4 {{count, plural, one {Infrastructure cost (May {startDate})} other {Infrastructure cost (May {startDate}-{endDate})}}} ' +\n            '5 {{count, plural, one {Infrastructure cost (Jun {startDate})} other {Infrastructure cost (Jun {startDate}-{endDate})}}} ' +\n            '6 {{count, plural, one {Infrastructure cost (Jul {startDate})} other {Infrastructure cost (Jul {startDate}-{endDate})}}} ' +\n            '7 {{count, plural, one {Infrastructure cost (Aug {startDate})} other {Infrastructure cost (Aug {startDate}-{endDate})}}} ' +\n            '8 {{count, plural, one {Infrastructure cost (Sep {startDate})} other {Infrastructure cost (Sep {startDate}-{endDate})}}} ' +\n            '9 {{count, plural, one {Infrastructure cost (Oct {startDate})} other {Infrastructure cost (Oct {startDate}-{endDate})}}} ' +\n            '10 {{count, plural, one {Infrastructure cost (Nov {startDate})} other {Infrastructure cost (Nov {startDate}-{endDate})}}} ' +\n            '11 {{count, plural, one {Infrastructure cost (Dec {startDate})} other {Infrastructure cost (Dec {startDate}-{endDate})}}} ' +\n            'other {}}',\n        description: 'Infrastructure cost label',\n        id: 'chartCostInfrastructureLegendLabel',\n    },\n    chartCostInfrastructureLegendNoDataLabel: {\n        defaultMessage: 'Infrastructure cost (no data)',\n        description: 'Infrastructure cost (no data)',\n        id: 'chartCostInfrastructureLegendNoDataLabel',\n    },\n    chartCostInfrastructureLegendTooltip: {\n        defaultMessage: '{month, select, ' +\n            '0 {Infrastructure cost (Jan)} ' +\n            '1 {Infrastructure cost (Feb)} ' +\n            '2 {Infrastructure cost (Mar)} ' +\n            '3 {Infrastructure cost (Apr)} ' +\n            '4 {Infrastructure cost (May)} ' +\n            '5 {Infrastructure cost (Jun)} ' +\n            '6 {Infrastructure cost (Jul)} ' +\n            '7 {Infrastructure cost (Aug)} ' +\n            '8 {Infrastructure cost (Sep)} ' +\n            '9 {Infrastructure cost (Oct)} ' +\n            '10 {Infrastructure cost (Nov)} ' +\n            '11 {Infrastructure cost (Dec)} ' +\n            'other {}}',\n        description: 'Infrastructure cost label tooltip',\n        id: 'chartCostInfrastructureLegendTooltip',\n    },\n    chartCostLegendLabel: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {Cost (Jan {startDate})} other {Cost (Jan {startDate}-{endDate})}}} ' +\n            '1 {{count, plural, one {Cost (Feb {startDate})} other {Cost (Feb {startDate}-{endDate})}}} ' +\n            '2 {{count, plural, one {Cost (Mar {startDate})} other {Cost (Mar {startDate}-{endDate})}}} ' +\n            '3 {{count, plural, one {Cost (Apr {startDate})} other {Cost (Apr {startDate}-{endDate})}}} ' +\n            '4 {{count, plural, one {Cost (May {startDate})} other {Cost (May {startDate}-{endDate})}}} ' +\n            '5 {{count, plural, one {Cost (Jun {startDate})} other {Cost (Jun {startDate}-{endDate})}}} ' +\n            '6 {{count, plural, one {Cost (Jul {startDate})} other {Cost (Jul {startDate}-{endDate})}}} ' +\n            '7 {{count, plural, one {Cost (Aug {startDate})} other {Cost (Aug {startDate}-{endDate})}}} ' +\n            '8 {{count, plural, one {Cost (Sep {startDate})} other {Cost (Sep {startDate}-{endDate})}}} ' +\n            '9 {{count, plural, one {Cost (Oct {startDate})} other {Cost (Oct {startDate}-{endDate})}}} ' +\n            '10 {{count, plural, one {Cost (Nov {startDate})} other {Cost (Nov {startDate}-{endDate})}}} ' +\n            '11 {{count, plural, one {Cost (Dec {startDate})} other {Cost (Dec {startDate}-{endDate})}}} ' +\n            'other {}}',\n        description: 'Cost date label',\n        id: 'chartCostLegendLabel',\n    },\n    chartCostLegendNoDataLabel: {\n        defaultMessage: 'Cost (no data)',\n        description: 'Cost (no data)',\n        id: 'chartCostLegendNoDataLabel',\n    },\n    chartCostLegendTooltip: {\n        defaultMessage: '{month, select, ' +\n            '0 {Cost (Jan)} ' +\n            '1 {Cost (Feb)} ' +\n            '2 {Cost (Mar)} ' +\n            '3 {Cost (Apr)} ' +\n            '4 {Cost (May)} ' +\n            '5 {Cost (Jun)} ' +\n            '6 {Cost (Jul)} ' +\n            '7 {Cost (Aug)} ' +\n            '8 {Cost (Sep)} ' +\n            '9 {Cost (Oct)} ' +\n            '10 {Cost (Nov)} ' +\n            '11 {Cost (Dec)} ' +\n            'other {}}',\n        description: 'Cost (month)',\n        id: 'chartCostLegendTooltip',\n    },\n    chartCostSupplementaryLegendLabel: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {Supplementary cost (Jan {startDate})} other {Supplementary cost (Jan {startDate}-{endDate})}}} ' +\n            '1 {{count, plural, one {Supplementary cost (Feb {startDate})} other {Supplementary cost (Feb {startDate}-{endDate})}}} ' +\n            '2 {{count, plural, one {Supplementary cost (Mar {startDate})} other {Supplementary cost (Mar {startDate}-{endDate})}}} ' +\n            '3 {{count, plural, one {Supplementary cost (Apr {startDate})} other {Supplementary cost (Apr {startDate}-{endDate})}}} ' +\n            '4 {{count, plural, one {Supplementary cost (May {startDate})} other {Supplementary cost (May {startDate}-{endDate})}}} ' +\n            '5 {{count, plural, one {Supplementary cost (Jun {startDate})} other {Supplementary cost (Jun {startDate}-{endDate})}}} ' +\n            '6 {{count, plural, one {Supplementary cost (Jul {startDate})} other {Supplementary cost (Jul {startDate}-{endDate})}}} ' +\n            '7 {{count, plural, one {Supplementary cost (Aug {startDate})} other {Supplementary cost (Aug {startDate}-{endDate})}}} ' +\n            '8 {{count, plural, one {Supplementary cost (Sep {startDate})} other {Supplementary cost (Sep {startDate}-{endDate})}}} ' +\n            '9 {{count, plural, one {Supplementary cost (Oct {startDate})} other {Supplementary cost (Oct {startDate}-{endDate})}}} ' +\n            '10 {{count, plural, one {Supplementary cost (Nov {startDate})} other {Supplementary cost (Nov {startDate}-{endDate})}}} ' +\n            '11 {{count, plural, one {Supplementary cost (Dec {startDate})} other {Supplementary cost (Dec {startDate}-{endDate})}}} ' +\n            'other {}}',\n        description: 'Supplementary cost date label',\n        id: 'chartCostSupplementaryLegendLabel',\n    },\n    chartCostSupplementaryLegendNoDataLabel: {\n        defaultMessage: 'Supplementary cost (no data)',\n        description: 'Supplementary cost (no data)',\n        id: 'chartCostSupplementaryLegendNoDataLabel',\n    },\n    chartCostSupplementaryLegendTooltip: {\n        defaultMessage: '{month, select, ' +\n            '0 {Supplementary cost (Jan)} ' +\n            '1 {Supplementary cost (Feb)} ' +\n            '2 {Supplementary cost (Mar)} ' +\n            '3 {Supplementary cost (Apr)} ' +\n            '4 {Supplementary cost (May)} ' +\n            '5 {Supplementary cost (Jun)} ' +\n            '6 {Supplementary cost (Jul)} ' +\n            '7 {Supplementary cost (Aug)} ' +\n            '8 {Supplementary cost (Sep)} ' +\n            '9 {Supplementary cost (Oct)} ' +\n            '10 {Supplementary cost (Nov)} ' +\n            '11 {Supplementary cost (Dec)} ' +\n            'other {}}',\n        description: 'Supplementary cost (month)',\n        id: 'chartCostSupplementaryLegendTooltip',\n    },\n    chartDateRange: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {Jan {startDate} {year}} other {{startDate}-{endDate} Jan {year}}}} ' +\n            '1 {{count, plural, one {Feb {startDate} {year}} other {{startDate}-{endDate} Feb {year}}}} ' +\n            '2 {{count, plural, one {Mar {startDate} {year}} other {{startDate}-{endDate} Mar {year}}}} ' +\n            '3 {{count, plural, one {Apr {startDate} {year}} other {{startDate}-{endDate} Apr {year}}}} ' +\n            '4 {{count, plural, one {May {startDate} {year}} other {{startDate}-{endDate} May {year}}}} ' +\n            '5 {{count, plural, one {Jun {startDate} {year}} other {{startDate}-{endDate} Jun {year}}}} ' +\n            '6 {{count, plural, one {Jul {startDate} {year}} other {{startDate}-{endDate} Jul {year}}}} ' +\n            '7 {{count, plural, one {Aug {startDate} {year}} other {{startDate}-{endDate} Aug {year}}}} ' +\n            '8 {{count, plural, one {Sep {startDate} {year}} other {{startDate}-{endDate} Sep {year}}}} ' +\n            '9 {{count, plural, one {Oct {startDate} {year}} other {{startDate}-{endDate} Oct {year}}}} ' +\n            '10 {{count, plural, one {Nov {startDate} {year}} other {{startDate}-{endDate} Nov {year}}}} ' +\n            '11 {{count, plural, one {Dec {startDate} {year}} other {{startDate}-{endDate} Dec {year}}}} ' +\n            'other {}}',\n        description: 'Date range that handles singular and plural',\n        id: 'chartDateRange',\n    },\n    chartDayOfTheMonth: {\n        defaultMessage: 'Day {day}',\n        description: 'The day of the month',\n        id: 'chartDayOfTheMonth',\n    },\n    chartLimitLegendLabel: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {Limit (Jan {startDate})} other {Limit (Jan {startDate}-{endDate})}}} ' +\n            '1 {{count, plural, one {Limit (Feb {startDate})} other {Limit (Feb {startDate}-{endDate})}}} ' +\n            '2 {{count, plural, one {Limit (Mar {startDate})} other {Limit (Mar {startDate}-{endDate})}}} ' +\n            '3 {{count, plural, one {Limit (Apr {startDate})} other {Limit (Apr {startDate}-{endDate})}}} ' +\n            '4 {{count, plural, one {Limit (May {startDate})} other {Limit (May {startDate}-{endDate})}}} ' +\n            '5 {{count, plural, one {Limit (Jun {startDate})} other {Limit (Jun {startDate}-{endDate})}}} ' +\n            '6 {{count, plural, one {Limit (Jul {startDate})} other {Limit (Jul {startDate}-{endDate})}}} ' +\n            '7 {{count, plural, one {Limit (Aug {startDate})} other {Limit (Aug {startDate}-{endDate})}}} ' +\n            '8 {{count, plural, one {Limit (Sep {startDate})} other {Limit (Sep {startDate}-{endDate})}}} ' +\n            '9 {{count, plural, one {Limit (Oct {startDate})} other {Limit (Oct {startDate}-{endDate})}}} ' +\n            '10 {{count, plural, one {Limit (Nov {startDate})} other {Limit (Nov {startDate}-{endDate})}}} ' +\n            '11 {{count, plural, one {Limit (Dec {startDate})} other {Limit (Dec {startDate}-{endDate})}}} ' +\n            'other {}}',\n        description: 'Limit date label',\n        id: 'chartLimitLegendLabel',\n    },\n    chartLimitLegendNoDataLabel: {\n        defaultMessage: 'Limit (no data)',\n        description: 'Limit (no data)',\n        id: 'chartLimitLegendNoDataLabel',\n    },\n    chartLimitLegendTooltip: {\n        defaultMessage: '{month, select, ' +\n            '0 {Limit (Jan)} ' +\n            '1 {Limit (Feb)} ' +\n            '2 {Limit (Mar)} ' +\n            '3 {Limit (Apr)} ' +\n            '4 {Limit (May)} ' +\n            '5 {Limit (Jun)} ' +\n            '6 {Limit (Jul)} ' +\n            '7 {Limit (Aug)} ' +\n            '8 {Limit (Sep)} ' +\n            '9 {Limit (Oct)} ' +\n            '10 {Limit (Nov)} ' +\n            '11 {Limit (Dec)} ' +\n            'other {}}',\n        description: 'Limit (month)',\n        id: 'chartLimitLegendTooltip',\n    },\n    chartNoData: {\n        defaultMessage: 'no data',\n        description: 'no data',\n        id: 'chartNoData',\n    },\n    chartOthers: {\n        defaultMessage: '{count, plural, one {{count} Other} other {{count} Others}}',\n        description: 'Others category for top costliest',\n        id: 'chartOthers',\n    },\n    chartRequestsLegendLabel: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {Requests (Jan {startDate})} other {Requests (Jan {startDate}-{endDate})}}} ' +\n            '1 {{count, plural, one {Requests (Feb {startDate})} other {Requests (Feb {startDate}-{endDate})}}} ' +\n            '2 {{count, plural, one {Requests (Mar {startDate})} other {Requests (Mar {startDate}-{endDate})}}} ' +\n            '3 {{count, plural, one {Requests (Apr {startDate})} other {Requests (Apr {startDate}-{endDate})}}} ' +\n            '4 {{count, plural, one {Requests (May {startDate})} other {Requests (May {startDate}-{endDate})}}} ' +\n            '5 {{count, plural, one {Requests (Jun {startDate})} other {Requests (Jun {startDate}-{endDate})}}} ' +\n            '6 {{count, plural, one {Requests (Jul {startDate})} other {Requests (Jul {startDate}-{endDate})}}} ' +\n            '7 {{count, plural, one {Requests (Aug {startDate})} other {Requests (Aug {startDate}-{endDate})}}} ' +\n            '8 {{count, plural, one {Requests (Sep {startDate})} other {Requests (Sep {startDate}-{endDate})}}} ' +\n            '9 {{count, plural, one {Requests (Oct {startDate})} other {Requests (Oct {startDate}-{endDate})}}} ' +\n            '10 {{count, plural, one {Requests (Nov {startDate})} other {Requests (Nov {startDate}-{endDate})}}} ' +\n            '11 {{count, plural, one {Requests (Dec {startDate})} other {Requests (Dec {startDate}-{endDate})}}} ' +\n            'other {}}',\n        description: 'Requests date label',\n        id: 'chartRequestLegendLabel',\n    },\n    chartRequestsLegendNoDataLabel: {\n        defaultMessage: 'Requests (no data)',\n        description: 'Requests (no data)',\n        id: 'chartRequestsLegendNoDataLabel',\n    },\n    chartRequestsLegendTooltip: {\n        defaultMessage: '{month, select, ' +\n            '0 {Requests (Jan)} ' +\n            '1 {Requests (Feb)} ' +\n            '2 {Requests (Mar)} ' +\n            '3 {Requests (Apr)} ' +\n            '4 {Requests (May)} ' +\n            '5 {Requests (Jun)} ' +\n            '6 {Requests (Jul)} ' +\n            '7 {Requests (Aug)} ' +\n            '8 {Requests (Sep)} ' +\n            '9 {Requests (Oct)} ' +\n            '10 {Requests (Nov)} ' +\n            '11 {Requests (Dec)} ' +\n            'other {}}',\n        description: 'Requests (month)',\n        id: 'chartRequestLegendTooltip',\n    },\n    chartUsageLegendLabel: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {Usage (Jan {startDate})} other {Usage (Jan {startDate}-{endDate})}}} ' +\n            '1 {{count, plural, one {Usage (Feb {startDate})} other {Usage (Feb {startDate}-{endDate})}}} ' +\n            '2 {{count, plural, one {Usage (Mar {startDate})} other {Usage (Mar {startDate}-{endDate})}}} ' +\n            '3 {{count, plural, one {Usage (Apr {startDate})} other {Usage (Apr {startDate}-{endDate})}}} ' +\n            '4 {{count, plural, one {Usage (May {startDate})} other {Usage (May {startDate}-{endDate})}}} ' +\n            '5 {{count, plural, one {Usage (Jun {startDate})} other {Usage (Jun {startDate}-{endDate})}}} ' +\n            '6 {{count, plural, one {Usage (Jul {startDate})} other {Usage (Jul {startDate}-{endDate})}}} ' +\n            '7 {{count, plural, one {Usage (Aug {startDate})} other {Usage (Aug {startDate}-{endDate})}}} ' +\n            '8 {{count, plural, one {Usage (Sep {startDate})} other {Usage (Sep {startDate}-{endDate})}}} ' +\n            '9 {{count, plural, one {Usage (Oct {startDate})} other {Usage (Oct {startDate}-{endDate})}}} ' +\n            '10 {{count, plural, one {Usage (Nov {startDate})} other {Usage (Nov {startDate}-{endDate})}}} ' +\n            '11 {{count, plural, one {Usage (Dec {startDate})} other {Usage (Dec {startDate}-{endDate})}}} ' +\n            'other {}}',\n        description: 'Usage (month {startDate})',\n        id: 'chartUsageLegendLabel',\n    },\n    chartUsageLegendNoDataLabel: {\n        defaultMessage: 'Usage (no data)',\n        description: 'Usage (no data)',\n        id: 'chartUsageLegendNoDataLabel',\n    },\n    chartUsageLegendTooltip: {\n        defaultMessage: '{month, select, ' +\n            '0 {Usage (Jan)} ' +\n            '1 {Usage (Feb)} ' +\n            '2 {Usage (Mar)} ' +\n            '3 {Usage (Apr)} ' +\n            '4 {Usage (May)} ' +\n            '5 {Usage (Jun)} ' +\n            '6 {Usage (Jul)} ' +\n            '7 {Usage (Aug)} ' +\n            '8 {Usage (Sep)} ' +\n            '9 {Usage (Oct)} ' +\n            '10 {Usage (Nov)} ' +\n            '11 {Usage (Dec)} ' +\n            'other {}}',\n        description: 'Usage (month)',\n        id: 'chartUsageLegendTooltip',\n    },\n    close: {\n        defaultMessage: 'Close',\n        description: 'Close',\n        id: 'close',\n    },\n    clusters: {\n        defaultMessage: 'Clusters',\n        description: 'Clusters',\n        id: 'clusters',\n    },\n    cost: {\n        defaultMessage: 'Cost',\n        description: 'Cost',\n        id: 'cost',\n    },\n    costCalculations: {\n        defaultMessage: 'Cost calculations',\n        description: 'Cost calculations',\n        id: 'costCalculations',\n    },\n    costManagement: {\n        defaultMessage: 'Cost Management',\n        description: 'Cost Management',\n        id: 'costManagement',\n    },\n    costModels: {\n        defaultMessage: 'Cost Models',\n        description: 'Cost Models',\n        id: 'costModels',\n    },\n    costModelsAddTagValues: {\n        defaultMessage: 'Add more tag values',\n        description: 'Add more tag values',\n        id: 'costModelsAddTagValues',\n    },\n    costModelsAssignSources: {\n        defaultMessage: '{count, plural, one {Assign source} other {Assign sources}}',\n        description: 'Assign sources -- plural or singular',\n        id: 'costModelsAssignSources',\n    },\n    costModelsAssignSourcesErrorDescription: {\n        defaultMessage: 'You cannot assign a source at this time. Try refreshing this page. If the problem persists, contact your organization administrator or visit our {url} for known outages.',\n        description: 'You cannot assign a source at this time',\n        id: 'costModelsAssignSourcesErrorDescription',\n    },\n    costModelsAssignSourcesErrorTitle: {\n        defaultMessage: 'This action is temporarily unavailable',\n        description: 'This action is temporarily unavailable',\n        id: 'costModelsAssignSourcesErrorTitle',\n    },\n    costModelsAssignSourcesParen: {\n        defaultMessage: 'Assign source(s)',\n        description: 'Assign source(s)',\n        id: 'costModelsAssignSourcesParen',\n    },\n    costModelsAssignedSources: {\n        defaultMessage: 'Assigned sources',\n        description: 'Assigned sourcess',\n        id: 'costModelsAssignedSources',\n    },\n    costModelsAvailableSources: {\n        defaultMessage: 'The following sources are assigned to my production cost model:',\n        description: 'The following sources are assigned to my production cost model:',\n        id: 'costModelsAvailableSources',\n    },\n    costModelsCanDelete: {\n        defaultMessage: 'This action will delete {name} cost model from the system. This action cannot be undone',\n        description: 'This action will delete {name} cost model from the system. This action cannot be undone',\n        id: 'costModelsCanDelete',\n    },\n    costModelsCanNotDelete: {\n        defaultMessage: 'The following sources are assigned to {name} cost model:',\n        description: 'The following sources are assigned to {name} cost model:',\n        id: 'costModelsCanNotDelete',\n    },\n    costModelsDelete: {\n        defaultMessage: 'Delete cost model',\n        description: 'Delete cost model',\n        id: 'costModelsDelete',\n    },\n    costModelsDeleteDesc: {\n        defaultMessage: 'This action will delete {costModel} cost model from the system. This action cannot be undone.',\n        description: 'This action will delete {costModel} cost model from the system. This action cannot be undone.',\n        id: 'costModelsDeleteDesc',\n    },\n    costModelsDeleteSource: {\n        defaultMessage: 'You must unassign any sources before you can delete this cost model.',\n        description: 'You must unassign any sources before you can delete this cost model.',\n        id: 'costModelsDeleteSource',\n    },\n    costModelsDescTooLong: {\n        defaultMessage: 'Should not exceed 500 characters',\n        description: 'Should not exceed 500 characters',\n        id: 'costModelsDescTooLong',\n    },\n    costModelsDetailsAssignSourcesTitle: {\n        defaultMessage: 'Assign sources',\n        description: 'Assign sources',\n        id: 'costModelsDetailsAssignSourcesTitle',\n    },\n    costModelsDistributionDesc: {\n        defaultMessage: 'The following is the type of metric that is set to be used when distributing costs to the project level breakdowns.',\n        description: 'The following is the type of metric that is set to be used when distributing costs to the project level breakdowns.',\n        id: 'costModelsDistributionDesc',\n    },\n    costModelsDistributionEdit: {\n        defaultMessage: 'Edit distribution',\n        description: 'Edit distribution',\n        id: 'costModelsDistributionEdit',\n    },\n    costModelsEmptyState: {\n        defaultMessage: 'What is your hybrid cloud costing you?',\n        description: 'What is your hybrid cloud costing you?',\n        id: 'costModelsEmptyState',\n    },\n    costModelsEmptyStateDesc: {\n        defaultMessage: 'Create a cost model to start calculating your hybrid cloud costs using custom price lists, markups, or both. Click on the button below to begin the journey.',\n        description: 'Create a cost model to start calculating your hybrid cloud costs using custom price lists, markups, or both. Click on the button below to begin the journey.',\n        id: 'costModelsEmptyStateDesc',\n    },\n    costModelsEmptyStateLearnMore: {\n        defaultMessage: 'Read about setting up a cost model',\n        description: 'Read about setting up a cost model',\n        id: 'costModelsEmptyStateLearnMore',\n    },\n    costModelsEnterTagDescription: {\n        defaultMessage: 'Enter a tag description',\n        description: 'Enter a tag description',\n        id: 'costModelsEnterTagDescription',\n    },\n    costModelsEnterTagKey: {\n        defaultMessage: 'Enter a tag key',\n        description: 'Enter a tag key',\n        id: 'costModelsEnterTagKey',\n    },\n    costModelsEnterTagRate: {\n        defaultMessage: 'Enter rate by tag',\n        description: 'Enter rate by tag',\n        id: 'costModelsEnterTagRate',\n    },\n    costModelsEnterTagValue: {\n        defaultMessage: 'Enter a tag value',\n        description: 'Enter a tag value',\n        id: 'costModelsEnterTagValue',\n    },\n    costModelsExamplesDoubleMarkup: {\n        defaultMessage: 'A markup rate of (+) 100% doubles the base costs of your source(s).',\n        description: 'A markup rate of (+) 100% doubles the base costs of your source(s).',\n        id: 'costModelsExamplesDoubleMarkup',\n    },\n    costModelsExamplesNoAdjust: {\n        defaultMessage: 'A markup or discount rate of (+/-) 0% (the default) makes no adjustments to the base costs of your source(s).',\n        description: 'A markup or discount rate of (+/-) 0% (the default) makes no adjustments to the base costs of your source(s).',\n        id: 'costModelsExamplesNoAdjust',\n    },\n    costModelsExamplesReduceSeventyfive: {\n        defaultMessage: 'A discount rate of (-) 25% reduces the base costs of your source(s) to 75% of the original value.',\n        description: 'A discount rate of (-) 25% reduces the base costs of your source(s) to 75% of the original value.',\n        id: 'costModelsExamplesReduceSeventyfive',\n    },\n    costModelsExamplesReduceZero: {\n        defaultMessage: 'A discount rate of (-) 100% reduces the base costs of your source(s) to 0.',\n        description: 'A discount rate of (-) 100% reduces the base costs of your source(s) to 0.',\n        id: 'costModelsExamplesReduceZero',\n    },\n    costModelsFilterPlaceholder: {\n        defaultMessage: 'Filter by name...',\n        description: 'Filter by name',\n        id: 'costModelsFilterPlaceholder',\n    },\n    costModelsFilterTagKey: {\n        defaultMessage: 'Filter by tag key',\n        description: 'Filter by tag key',\n        id: 'costModelsFilterTagKey',\n    },\n    costModelsInfoTooLong: {\n        defaultMessage: 'Should not exceed 100 characters',\n        description: 'Should not exceed 100 characters',\n        id: 'costModelsInfoTooLong',\n    },\n    costModelsLastChange: {\n        defaultMessage: 'Last change',\n        description: 'Last change',\n        id: 'costModelsLastChange',\n    },\n    costModelsPopover: {\n        defaultMessage: 'A cost model allows you to associate a price to metrics provided by your sources to charge for utilization of resources. {learnMore}',\n        description: 'A cost model allows you to associate a price to metrics provided by your sources to charge for utilization of resources. {learnMore}',\n        id: 'costModelsPopover',\n    },\n    costModelsPopoverAriaLabel: {\n        defaultMessage: 'Cost model info popover',\n        description: 'Cost model info popover',\n        id: 'costModelsPopoverAriaLabel',\n    },\n    costModelsRateTooLong: {\n        defaultMessage: 'Should not exceed 10 decimals',\n        description: 'Should not exceed 10 decimals',\n        id: 'costModelsRateTooLong',\n    },\n    costModelsReadOnly: {\n        defaultMessage: 'You have read only permissions',\n        description: 'You have read only permissions',\n        id: 'costModelsReadOnly',\n    },\n    costModelsRefreshDialog: {\n        defaultMessage: 'Refresh this dialog',\n        description: 'Refresh this dialog',\n        id: 'costModelsRefreshDialog',\n    },\n    costModelsRemoveTagLabel: {\n        defaultMessage: 'Remove tag value',\n        description: 'Remove tag value',\n        id: 'costModelsRemoveTagLabel',\n    },\n    costModelsRequiredField: {\n        defaultMessage: 'This field is required',\n        description: 'This field is required',\n        id: 'costModelsRequiredField',\n    },\n    costModelsRouterErrorTitle: {\n        defaultMessage: 'Fail routing to cost model',\n        description: 'Cost models router error title',\n        id: 'costModelsRouterErrorTitle',\n    },\n    costModelsRouterServerError: {\n        defaultMessage: 'Server error: could not get the cost model.',\n        description: 'Server error: could not get the cost model.',\n        id: 'costModelsRouterServerError',\n    },\n    costModelsSelectMeasurement: {\n        defaultMessage: 'Select Measurement',\n        description: 'Select Measurement',\n        id: 'costModelsSelectMeasurement',\n    },\n    costModelsSelectMetric: {\n        defaultMessage: 'Select Metric',\n        description: 'Select Metric',\n        id: 'costModelsSelectMetric',\n    },\n    costModelsSourceDelete: {\n        defaultMessage: 'Unassign',\n        description: 'Unassign',\n        id: 'costModelsSourceDelete',\n    },\n    costModelsSourceDeleteSource: {\n        defaultMessage: 'Unassign source',\n        description: 'Unassign source',\n        id: 'costModelsSourceDeleteSource',\n    },\n    costModelsSourceDeleteSourceDesc: {\n        defaultMessage: 'This will remove the assignment of {source} from the {costModel} cost model. You can then assign the cost model to a new source.',\n        description: 'This will remove the assignment of {source} from the {costModel} cost model. You can then assign the cost model to a new source.',\n        id: 'costModelsSourceDeleteSourceDesc',\n    },\n    costModelsSourceEmptyStateDesc: {\n        defaultMessage: 'Select the source(s) you want to apply this cost model to.',\n        description: 'Select the source(s) you want to apply this cost model to.',\n        id: 'costModelsSourceEmptyStateDesc',\n    },\n    costModelsSourceEmptyStateTitle: {\n        defaultMessage: 'No sources are assigned',\n        description: 'No sources are assigned',\n        id: 'costModelsSourceEmptyStateTitle',\n    },\n    costModelsSourceTableAriaLabel: {\n        defaultMessage: 'Sources table',\n        description: 'Sources table',\n        id: 'costModelsSourcesTableAriaLabel',\n    },\n    costModelsSourceTablePaginationAriaLabel: {\n        defaultMessage: 'Sources table pagination controls',\n        description: 'Sources table pagination controls',\n        id: 'costModelsSourceTablePaginationAriaLabel',\n    },\n    costModelsSourceType: {\n        defaultMessage: 'Source type',\n        description: 'Source type',\n        id: 'costModelsSourceType',\n    },\n    costModelsTableAriaLabel: {\n        defaultMessage: 'Cost models table',\n        description: 'Cost models table',\n        id: 'costModelsTableAriaLabel',\n    },\n    costModelsTagRateTableAriaLabel: {\n        defaultMessage: 'Tag rates',\n        description: 'Tag rates',\n        id: 'costModelsTagRateTableAriaLabel',\n    },\n    costModelsTagRateTableDefault: {\n        defaultMessage: 'Default',\n        description: 'Default',\n        id: 'costModelsTagRateTableDefault',\n    },\n    costModelsTagRateTableKey: {\n        defaultMessage: 'Tag key',\n        description: 'Tag key',\n        id: 'costModelsTagRateTableKey',\n    },\n    costModelsTagRateTableRate: {\n        defaultMessage: 'Rate',\n        description: 'Rate',\n        id: 'costModelsTagRateTableRate',\n    },\n    costModelsTagRateTableValue: {\n        defaultMessage: 'Tag value',\n        description: 'Tag value',\n        id: 'costModelsTagRateTableValue',\n    },\n    costModelsUUIDEmptyState: {\n        defaultMessage: 'Cost model can not be found',\n        description: 'Cost model can not be found',\n        id: 'costModelsUUIDEmptyState',\n    },\n    costModelsUUIDEmptyStateDesc: {\n        defaultMessage: 'Cost model with uuid: {uuid} does not exist.',\n        description: 'Cost model with uuid: {uuid} does not exist.',\n        id: 'costModelsUUIDEmptyStateDesc',\n    },\n    costModelsWizardCreateCostModel: {\n        defaultMessage: 'Create cost model',\n        description: 'Create cost model',\n        id: 'costModelsWizardCreateCostModel',\n    },\n    costModelsWizardCreatePriceList: {\n        defaultMessage: 'Create a price list',\n        description: 'Create a price list',\n        id: 'costModelsWizardCreatePriceList',\n    },\n    costModelsWizardCurrencyToggleLabel: {\n        defaultMessage: 'Select currency',\n        description: 'Select currency',\n        id: 'costModelsWizardCurrencyToggleLabel',\n    },\n    costModelsWizardEmptySourceTypeLabel: {\n        defaultMessage: 'Select source type',\n        description: 'Select source type',\n        id: 'costModelsWizardEmptySourceTypeLabel',\n    },\n    costModelsWizardEmptyStateCreate: {\n        defaultMessage: 'To create a price list, begin by clicking the {value} button.',\n        description: 'To create a price list, begin by clicking the {Create rate} button.',\n        id: 'costModelsWizardEmptyStateCreate',\n    },\n    costModelsWizardEmptyStateOtherTime: {\n        defaultMessage: 'You can create a price list or modify one at a later time.',\n        description: 'You can create a price list or modify one at a later time.',\n        id: 'costModelsWizardEmptyStateOtherTime',\n    },\n    costModelsWizardEmptyStateSkipStep: {\n        defaultMessage: 'To skip this step, click the {value} button.',\n        description: 'To skip this step, click the {next} button.',\n        id: 'costModelsWizardEmptyStateSkipStep',\n    },\n    costModelsWizardEmptyStateTitle: {\n        defaultMessage: 'A price list has not been created.',\n        description: 'A price list has not been created.',\n        id: 'costModelsWizardEmptyStateTitle',\n    },\n    costModelsWizardGeneralInfoTitle: {\n        defaultMessage: 'Enter general information',\n        description: 'Enter general information',\n        id: 'costModelsWizardGeneralInfoTitle',\n    },\n    costModelsWizardNoRatesAdded: {\n        defaultMessage: 'No rates were added to the price list',\n        description: 'No rates were added to the price list',\n        id: 'costModelsWizardNoRatesAdded',\n    },\n    costModelsWizardOnboardAws: {\n        defaultMessage: 'Amazon Web Services (AWS)',\n        description: 'Amazon Web Services (AWS)',\n        id: 'costModelsWizardOnboardAws',\n    },\n    costModelsWizardOnboardOcp: {\n        defaultMessage: 'Red Hat OpenShift Container Platform',\n        description: 'Red Hat OpenShift Container Platform',\n        id: 'costModelsWizardOnboardOcp',\n    },\n    costModelsWizardPriceListMetric: {\n        defaultMessage: 'Select the metric you want to assign a price to, and specify a measurement unit and rate. You can optionally set multiple rates for particular tags.',\n        description: 'Select the metric you want to assign a price to, and specify a measurement unit and rate. You can optionally set multiple rates for particular tags.',\n        id: 'costModelsWizardPriceListMetric',\n    },\n    costModelsWizardRateAriaLabel: {\n        defaultMessage: 'Assign rate',\n        description: 'Assign rate',\n        id: 'costModelsWizardRateAriaLabel',\n    },\n    costModelsWizardReviewMarkDiscount: {\n        defaultMessage: 'Markup/Discount',\n        description: 'No Markup/Discount',\n        id: 'costModelsWizardReviewMarkDiscount',\n    },\n    costModelsWizardReviewStatusSubDetails: {\n        defaultMessage: 'Review and confirm your cost model configuration and assignments. Click {create} to create the cost model, or {back} to revise.',\n        description: 'Review and confirm your cost model configuration and assignments. Click {Create} to create the cost model, or {Back} to revise.',\n        id: 'costModelsWizardReviewStatusSubDetails',\n    },\n    costModelsWizardReviewStatusSubTitle: {\n        defaultMessage: 'Costs for resources connected to the assigned sources will now be calculated using the newly created {value} cost model.',\n        description: 'Costs for resources connected to the assigned sources will now be calculated using the newly created {value} cost model.',\n        id: 'costModelsWizardReviewStatusSubTitle',\n    },\n    costModelsWizardReviewStatusTitle: {\n        defaultMessage: 'Creation successful',\n        description: 'Creation successful',\n        id: 'costModelsWizardReviewStatusTitle',\n    },\n    costModelsWizardSourceCaption: {\n        defaultMessage: '{value, select, ' +\n            'aws {Select from the following Amazon Web Services sources:} ' +\n            'azure {Select from the following Microsoft Azure sources:} ' +\n            'oci {Select from the following Oracle Cloud Infrastructure sources:} ' +\n            'gcp {Select from the following Google Cloud Platform sources:} ' +\n            'ocp {Select from the following Red Hat OpenShift sources:} ' +\n            'other {}}',\n        description: 'Select from the following {value} sources:',\n        id: 'costModelsWizardSourceCaption',\n    },\n    costModelsWizardSourceErrorDescription: {\n        defaultMessage: 'Try refreshing this step or you can skip this step (as it is optional) and assign the source to the cost model at a later time. If the problem persists, contact your organization administrator or visit our {url} for known outages.',\n        description: 'This step is temporarily unavailable',\n        id: 'costModelsWizardSourceErrorDescription',\n    },\n    costModelsWizardSourceErrorTitle: {\n        defaultMessage: 'This step is temporarily unavailable',\n        description: 'This step is temporarily unavailable',\n        id: 'costModelsWizardSourceErrorTitle',\n    },\n    costModelsWizardSourceSubtitle: {\n        defaultMessage: 'Select one or more sources to this cost model. You can skip this step and assign the cost model to a source at a later time. A source will be unavailable for selection if a cost model is already assigned to it.',\n        description: 'Select one or more sources to this cost model. You can skip this step and assign the cost model to a source at a later time. A source will be unavailable for selection if a cost model is already assigned to it.',\n        id: 'costModelsWizardSourceSubtitle',\n    },\n    costModelsWizardSourceTableAriaLabel: {\n        defaultMessage: 'Assign sources to cost model table',\n        description: 'Assign sources to cost model table',\n        id: 'costModelsWizardSourceTableAriaLabel',\n    },\n    costModelsWizardSourceTableCostModel: {\n        defaultMessage: 'Cost model assigned',\n        description: 'Cost model assigned',\n        id: 'costModelsWizardSourceTableCostModel',\n    },\n    costModelsWizardSourceTableDefaultCostModel: {\n        defaultMessage: 'Default cost model',\n        description: 'Default cost model',\n        id: 'costModelsWizardSourceTableDefaultCostModel',\n    },\n    costModelsWizardSourceTitle: {\n        defaultMessage: 'Assign sources to the cost model (optional)',\n        description: 'Assign sources to the cost model (optional)',\n        id: 'costModelsWizardSourceTitle',\n    },\n    costModelsWizardSourceWarning: {\n        defaultMessage: 'This source is assigned to {costModel} cost model. You will have to unassigned it first',\n        description: 'This source is assigned to {costModel} cost model. You will have to unassigned it first',\n        id: 'costModelsWizardSourceWarning',\n    },\n    costModelsWizardStepsGenInfo: {\n        defaultMessage: 'Enter information',\n        description: 'Enter information',\n        id: 'costModelsWizardStepsGenInfo',\n    },\n    costModelsWizardStepsPriceList: {\n        defaultMessage: 'Price list',\n        description: 'Price list',\n        id: 'costModelsWizardStepsPriceList',\n    },\n    costModelsWizardStepsReview: {\n        defaultMessage: 'Review details',\n        description: 'Review details',\n        id: 'costModelsWizardStepsReview',\n    },\n    costModelsWizardStepsSources: {\n        defaultMessage: 'Assign a source to the cost model',\n        description: 'Assign a source to the cost model',\n        id: 'costModelsWizardStepsSources',\n    },\n    costModelsWizardSubTitleTable: {\n        defaultMessage: 'The following is a list of rates you have set so far for this price list.',\n        description: 'The following is a list of rates you have set so far for this price list.',\n        id: 'costModelsWizardSubTitleTable',\n    },\n    costModelsWizardWarningSources: {\n        defaultMessage: 'Cannot assign cost model to a source that is already assigned to another one',\n        description: 'No Cannot assign cost model to a source that is already assigned to another one',\n        id: 'costModelsWizardWarningSources',\n    },\n    costTypeAmortized: {\n        defaultMessage: 'Amortized',\n        description: 'Amortized cost type',\n        id: 'costTypeAmortized',\n    },\n    costTypeAmortizedDesc: {\n        defaultMessage: 'Recurring and/or upfront costs are distributed evenly across the month',\n        description: 'Recurring and/or upfront costs are distributed evenly across the month',\n        id: 'costTypeAmortizedDesc',\n    },\n    costTypeBlended: {\n        defaultMessage: 'Blended',\n        description: 'Blended cost type',\n        id: 'costTypeBlended',\n    },\n    costTypeBlendedDesc: {\n        defaultMessage: 'Using a blended rate to calcuate cost usage',\n        description: 'Using a blended rate to calcuate cost usage',\n        id: 'costTypeBlendedDesc',\n    },\n    costTypeLabel: {\n        defaultMessage: 'Show cost as',\n        description: 'Show cost as',\n        id: 'costTypeLabel',\n    },\n    costTypeUnblended: {\n        defaultMessage: 'Unblended',\n        description: 'Unblended cost type',\n        id: 'costTypeUnblended',\n    },\n    costTypeUnblendedDesc: {\n        defaultMessage: 'Usage cost on the day you are charged',\n        description: 'Usage cost on the day you are charged',\n        id: 'costTypeUnblendedDesc',\n    },\n    cpuTitle: {\n        defaultMessage: 'CPU',\n        description: 'CPU',\n        id: 'cpuTitle',\n    },\n    create: {\n        defaultMessage: 'Create',\n        description: 'Create',\n        id: 'create',\n    },\n    createCostModelConfirmMsg: {\n        defaultMessage: 'Are you sure you want to stop creating a cost model? All settings will be discarded.',\n        description: 'Are you sure you want to stop creating a cost model? All settings will be discarded.',\n        id: 'createCostModelConfirmMsg',\n    },\n    createCostModelDesc: {\n        defaultMessage: 'A cost model allows you to associate a price to metrics provided by your sources to charge for utilization of resources.',\n        description: 'A cost model allows you to associate a price to metrics provided by your sources to charge for utilization of resources.',\n        id: 'createCostModelDesc',\n    },\n    createCostModelExit: {\n        defaultMessage: 'Exit cost model creation',\n        description: 'Exit cost model creation',\n        id: 'createCostModelExit',\n    },\n    createCostModelExitYes: {\n        defaultMessage: 'Yes, I want to exit',\n        description: 'Yes, I want to exit',\n        id: 'createCostModelExitYes',\n    },\n    createCostModelNoContinue: {\n        defaultMessage: 'No, I want to continue',\n        description: 'No, I want to continue',\n        id: 'createCostModelNoContinue',\n    },\n    createCostModelTitle: {\n        defaultMessage: 'Create a cost model',\n        description: 'Create a cost model',\n        id: 'createCostModelTitle',\n    },\n    createRate: {\n        defaultMessage: 'Create rate',\n        description: 'Create rate',\n        id: 'createRate',\n    },\n    currency: {\n        defaultMessage: 'Currency',\n        description: 'Currency',\n        id: 'currency',\n    },\n    currencyAbbreviations: {\n        defaultMessage: '{symbol, select, ' +\n            'billion {{value} B} ' +\n            'million {{value} M} ' +\n            'quadrillion {{value} q} ' +\n            'thousand {{value} K} ' +\n            'trillion {{value} t} ' +\n            'other {}}',\n        description: 'str.match(/([\\\\D]*)([\\\\d.,]+)([\\\\D]*)/)',\n        id: 'currencyAbbreviations',\n    },\n    // See https://www.localeplanet.com/icu/currency.html\n    currencyOptions: {\n        defaultMessage: '{units, select, ' +\n            'AUD {AUD (A$) - Australian Dollar}' +\n            'CAD {CAD (CA$) - Canadian Dollar}' +\n            'CHF {CHF (CHF) - Swiss Franc}' +\n            'CNY {CNY (CN¥) - Chinese Yuan}' +\n            'DKK {DKK (DKK) - Danish Krone}' +\n            'EUR {EUR (€) - Euro}' +\n            'GBP {GBP (£) - British Pound}' +\n            'HKD {HKD (HK$) - Hong Kong Dollar}' +\n            'JPY {JPY (¥) - Japanese Yen}' +\n            'NOK {NOK (NOK) - Norwegian Krone}' +\n            'NZD {NZD (NZ$) - New Zealand Dollar}' +\n            'SEK {SEK (SEK) - Swedish Krona}' +\n            'SGD {SGD (SGD) - Singapore Dollar}' +\n            'USD {USD ($) - United States Dollar} ' +\n            'ZAR {ZAR (ZAR) - South African Rand}' +\n            'other {}}',\n        description: 'return the proper unit label based on key: \"units\"',\n        id: 'currencyOptions',\n    },\n    // See https://www.localeplanet.com/icu/currency.html\n    currencyUnits: {\n        defaultMessage: '{units, select, ' +\n            'AUD {A$}' +\n            'CAD {CA$}' +\n            'CHF {CHF}' +\n            'CNY {CN¥}' +\n            'DKK {DKK}' +\n            'EUR {€}' +\n            'GBP {£}' +\n            'HKD {HK$}' +\n            'JPY {¥}' +\n            'NOK {NOK}' +\n            'NZD {NZ$}' +\n            'SEK {SEK}' +\n            'SGD {SGD}' +\n            'USD {$} ' +\n            'ZAR {ZAR}' +\n            'other {}}',\n        description: 'return the proper unit label based on key: \"units\"',\n        id: 'currencyUnits',\n    },\n    dashboardCumulativeCostComparison: {\n        defaultMessage: 'Cumulative cost comparison ({units})',\n        description: 'Cumulative cost comparison ({units})',\n        id: 'dashboardCumulativeCostComparison',\n    },\n    dashboardDailyUsageComparison: {\n        defaultMessage: 'Daily usage comparison ({units})',\n        description: 'Daily usage comparison ({units})',\n        id: 'dashboardDailyUsageComparison',\n    },\n    dashboardDatabaseTitle: {\n        defaultMessage: 'Database services cost',\n        description: 'Database services cost',\n        id: 'dashboardDatabaseTitle',\n    },\n    dashboardNetworkTitle: {\n        defaultMessage: 'Network services cost',\n        description: 'Network services cost',\n        id: 'dashboardNetworkTitle',\n    },\n    dashboardStorageTitle: {\n        defaultMessage: 'Storage services usage',\n        description: 'Storage services usage',\n        id: 'dashboardStorageTitle',\n    },\n    dashboardTotalCostTooltip: {\n        defaultMessage: 'This total cost is the sum of the infrastructure cost {infrastructureCost} and supplementary cost {supplementaryCost}',\n        description: 'total cost is the sum of the infrastructure cost and supplementary cost',\n        id: 'dashboardTotalCostTooltip',\n    },\n    delete: {\n        defaultMessage: 'Delete',\n        description: 'Delete',\n        id: 'delete',\n    },\n    description: {\n        defaultMessage: 'Description',\n        description: 'Description',\n        id: 'description',\n    },\n    detailsActionsExport: {\n        defaultMessage: 'Export data',\n        description: 'Export data',\n        id: 'detailsActionsExport',\n    },\n    detailsActionsPriceList: {\n        defaultMessage: 'View all price lists',\n        description: 'View all price lists',\n        id: 'detailsActionsPriceList',\n    },\n    detailsClustersModalTitle: {\n        defaultMessage: '{groupBy, select, ' +\n            'account {account {name} clusters} ' +\n            'cluster {cluster {name} clusters} ' +\n            'gcp_project {GCP project {name} clusters} ' +\n            'node {node {name} clusters} ' +\n            'org_unit_id {organizational unit {name} clusters} ' +\n            'payer_tenant_id {account {name} clusters} ' +\n            'product_service {service {name} clusters} ' +\n            'project {project {name} clusters} ' +\n            'region {region {name} clusters} ' +\n            'resource_location {region {name} clusters} ' +\n            'service {service {name} clusters} ' +\n            'service_name {service {name} clusters} ' +\n            'subscription_guid {account {name} clusters} ' +\n            'tag {tags {name} clusters} ' +\n            'other {}}',\n        description: '{groupBy} {name} clusters',\n        id: 'detailsClustersModalTitle',\n    },\n    detailsColumnManagementTitle: {\n        defaultMessage: 'Manage columns',\n        description: 'Manage columns',\n        id: 'detailsColumnManagementTitle',\n    },\n    detailsCostValue: {\n        defaultMessage: 'Cost: {value}',\n        description: 'Cost value',\n        id: 'detailsCostValue',\n    },\n    detailsEmptyState: {\n        defaultMessage: 'Processing data to generate a list of all services that sums to a total cost...',\n        description: 'Processing data to generate a list of all services that sums to a total cost...',\n        id: 'detailsEmptyState',\n    },\n    detailsMoreClusters: {\n        defaultMessage: ', {value} more...',\n        description: ', {value} more...',\n        id: 'detailsMoreClusters',\n    },\n    detailsResourceNames: {\n        defaultMessage: '{value, select, ' +\n            'account {Account names} ' +\n            'cluster {Cluster names} ' +\n            'gcp_project {GCP project names} ' +\n            'node {Node names} ' +\n            'org_unit_id {Organizational unit names} ' +\n            'payer_tenant_id {Account names} ' +\n            'product_service {Service names} ' +\n            'project {Project names} ' +\n            'region {Region names} ' +\n            'resource_location {Region names} ' +\n            'service {Service names} ' +\n            'service_name {Service names} ' +\n            'subscription_guid {Account names} ' +\n            'tag {Tag names} ' +\n            'other {}}',\n        description: 'Details table resource names',\n        id: 'detailsResourceNames',\n    },\n    detailsSummaryModalTitle: {\n        defaultMessage: '{groupBy, select, ' +\n            'account {{name} accounts} ' +\n            'cluster {{name} clusters} ' +\n            'gcp_project {{name} GCP projects} ' +\n            'node {{name} nodes} ' +\n            'org_unit_id {{name} organizational units} ' +\n            'payer_tenant_id {{name} accounts} ' +\n            'product_service {{name} services} ' +\n            'project {{name} projects} ' +\n            'region {{name} regions} ' +\n            'resource_location {{name} regions} ' +\n            'service {{name} services} ' +\n            'service_name {{name} services} ' +\n            'subscription_guid {{name} accounts} ' +\n            'tag {{name} tags} ' +\n            'other {}}',\n        description: ', {value} more...',\n        id: 'detailsSummaryModalTitle',\n    },\n    detailsUnusedRequestsLabel: {\n        defaultMessage: 'Unrequested capacity',\n        description: 'Unrequested capacity',\n        id: 'detailsUnusedRequestsLabel',\n    },\n    detailsUnusedUnits: {\n        defaultMessage: '{units} ({percentage}% of capacity)',\n        description: '{units} ({percentage}% of capacity)',\n        id: 'detailsUnusedUsageUnits',\n    },\n    detailsUnusedUsageLabel: {\n        defaultMessage: 'Unused capacity',\n        description: 'Unused capacity',\n        id: 'detailsUnusedUsageLabel',\n    },\n    detailsUsageCapacity: {\n        defaultMessage: 'Capacity - {value} {units}',\n        description: 'Capacity - {value} {units}',\n        id: 'detailsUsageCapacity',\n    },\n    detailsUsageLimit: {\n        defaultMessage: 'Limit - {value} {units}',\n        description: 'Limit - {value} {units}',\n        id: 'detailsUsageLimit',\n    },\n    detailsUsageRequests: {\n        defaultMessage: 'Requests - {value} {units}',\n        description: 'Requests - {value} {units}',\n        id: 'detailsUsageRequests',\n    },\n    detailsUsageUsage: {\n        defaultMessage: 'Usage - {value} {units}',\n        description: 'Usage - {value} {units}',\n        id: 'detailsUsageUsage',\n    },\n    detailsViewAll: {\n        defaultMessage: '{value, select, ' +\n            'account {View all accounts} ' +\n            'cluster {View all clusters} ' +\n            'gcp_project {View all GCP projects} ' +\n            'node {View all nodes} ' +\n            'org_unit_id {View all organizational units} ' +\n            'payer_tenant_id {View all accounts} ' +\n            'product_service {View all services} ' +\n            'project {View all projects} ' +\n            'region {View all regions} ' +\n            'resource_location {View all regions} ' +\n            'service {View all Services} ' +\n            'service_name {View all services} ' +\n            'subscription_guid {View all accounts} ' +\n            'tag {View all tags} ' +\n            'other {}}',\n        description: 'View all {value}',\n        id: 'detailsViewAll',\n    },\n    discountMinus: {\n        defaultMessage: 'Discount (-)',\n        description: 'Discount (-)',\n        id: 'discountMinus',\n    },\n    distributionModelDesc: {\n        defaultMessage: 'This choice is for users to direct how their raw costs are distributed either by CPU or Memory on the project level breakdowns.',\n        description: 'This choice is for users to direct how their raw costs are distributed either by CPU or Memory on the project level breakdowns.',\n        id: 'distributionModelDesc',\n    },\n    distributionType: {\n        defaultMessage: 'Distribution type',\n        description: 'Distribution type',\n        id: 'distributionType',\n    },\n    docsAddOcpSources: {\n        defaultMessage: 'https://access.redhat.com/documentation/en-us/cost_management_service/2022/html-single/adding_an_openshift_container_platform_source_to_cost_management',\n        description: 'https://access.redhat.com/documentation/en-us/cost_management_service/2022/html-single/adding_an_openshift_container_platform_source_to_cost_management',\n        id: 'docsAddOcpSources',\n    },\n    docsConfigCostModels: {\n        defaultMessage: 'https://access.redhat.com/documentation/en-us/cost_management_service/2022/html-single/using_cost_models/index#assembly-setting-up-cost-models',\n        description: 'https://access.redhat.com/documentation/en-us/cost_management_service/2022/html-single/using_cost_models/index#assembly-setting-up-cost-models',\n        id: 'docsConfigCostModels',\n    },\n    docsCostModelTerminology: {\n        defaultMessage: 'https://access.redhat.com/documentation/en-us/cost_management_service/2022/html-single/using_cost_models/index#cost-model-terminology',\n        description: 'https://access.redhat.com/documentation/en-us/cost_management_service/2022/html-single/using_cost_models/index#cost-model-terminology',\n        id: 'docsCostModelTerminology',\n    },\n    docsUsingCostModels: {\n        defaultMessage: 'https://access.redhat.com/documentation/en-us/cost_management_service/2022/html-single/using_cost_models/index',\n        description: 'https://access.redhat.com/documentation/en-us/cost_management_service/2022/html-single/using_cost_models/index',\n        id: 'docsUsingCostModels',\n    },\n    download: {\n        defaultMessage: 'Download',\n        description: 'Download',\n        id: 'download',\n    },\n    edit: {\n        defaultMessage: 'Edit',\n        description: 'Edit',\n        id: 'edit',\n    },\n    editCostModel: {\n        defaultMessage: 'Edit cost model',\n        description: 'Edit cost model',\n        id: 'editCostModel',\n    },\n    editMarkup: {\n        defaultMessage: 'Edit markup',\n        description: 'Edit markup',\n        id: 'editMarkup',\n    },\n    editMarkupOrDiscount: {\n        defaultMessage: 'Edit markup or discount',\n        description: 'Edit markup or discount',\n        id: 'editMarkupOrDiscount',\n    },\n    emptyFilterSourceStateSubtitle: {\n        defaultMessage: 'Sorry, no source with the given filter was found.',\n        description: 'Sorry, no source with the given filter was found.',\n        id: 'emptyFilterSourceStateSubtitle',\n    },\n    emptyFilterStateSubtitle: {\n        defaultMessage: 'Sorry, no data with the given filter was found.',\n        description: 'Sorry, no data with the given filter was found.',\n        id: 'emptyFilterStateSubtitle',\n    },\n    emptyFilterStateTitle: {\n        defaultMessage: 'No match found',\n        description: 'No match found',\n        id: 'emptyFilterStateTitle',\n    },\n    equalsSymbol: {\n        defaultMessage: '=',\n        description: 'Equals symbol',\n        id: 'equalsSymbol',\n    },\n    errorStateNotAuthorizedDesc: {\n        defaultMessage: 'Contact the cost management administrator to provide access to this application',\n        description: 'Contact the cost management administrator to provide access to this application',\n        id: 'errorStateNotAuthorizedDesc',\n    },\n    errorStateNotAuthorizedTitle: {\n        defaultMessage: \"You don't have access to the Cost management application\",\n        description: \"You don't have access to the Cost management application\",\n        id: 'errorStateNotAuthorizedTitle',\n    },\n    errorStateUnexpectedDesc: {\n        defaultMessage: 'We encountered an unexpected error. Contact your administrator.',\n        description: 'We encountered an unexpected error. Contact your administrator.',\n        id: 'errorStateUnexpectedDesc',\n    },\n    errorStateUnexpectedTitle: {\n        defaultMessage: 'Oops!',\n        description: 'Oops!',\n        id: 'errorStateUnexpectedTitle',\n    },\n    examplesTitle: {\n        defaultMessage: 'Examples',\n        description: 'Examples',\n        id: 'ExamplesTitle',\n    },\n    expiresOn: {\n        defaultMessage: 'Expires on',\n        description: 'Expires on',\n        id: 'expiresOn',\n    },\n    explorerChartDate: {\n        defaultMessage: '{month, select, ' +\n            '0 {Jan {date}} ' +\n            '1 {Feb {date}} ' +\n            '2 {Mar {date}} ' +\n            '3 {Apr {date}} ' +\n            '4 {May {date}} ' +\n            '5 {Jun {date}} ' +\n            '6 {Jul {date}} ' +\n            '7 {Aug {date}} ' +\n            '8 {Sep {date}} ' +\n            '9 {Oct {date}} ' +\n            '10 {Nov {date}} ' +\n            '11 {Dec {date}} ' +\n            'other {}}',\n        description: 'Month {date}',\n        id: 'explorerDateColumn',\n    },\n    explorerChartTitle: {\n        defaultMessage: '{value, select, ' +\n            'aws {Amazon Web Services - Top 5 Costliest} ' +\n            'aws_ocp {Amazon Web Services filtered by OpenShift - Top 5 Costliest} ' +\n            'azure {Microsoft Azure - Top 5 Costliest} ' +\n            'oci {Oracle Cloud Infrastructure - Top 5 Costliest} ' +\n            'azure_ocp {Microsoft Azure filtered by OpenShift - Top 5 Costliest} ' +\n            'gcp {Google Cloud Platform - Top 5 Costliest} ' +\n            'gcp_ocp {Google Cloud Platform filtered by OpenShift - Top 5 Costliest} ' +\n            'ibm {IBM Cloud - Top 5 Costliest} ' +\n            'ibm_ocp {IBM Cloud filtered by OpenShift - Top 5 Costliest} ' +\n            'ocp {All OpenShift - Top 5 Costliest} ' +\n            'ocp_cloud {All cloud filtered by OpenShift - Top 5 Costliest} ' +\n            'other {}}',\n        description: 'Explorer chart title',\n        id: 'explorerChartTitle',\n    },\n    explorerDateRange: {\n        defaultMessage: '{value, select, ' +\n            'current_month_to_date {Month to date} ' +\n            'last_ninety_days {Last 90 days} ' +\n            'last_sixty_days {Last 60 days} ' +\n            'last_thirty_days {Last 30 days} ' +\n            'previous_month_to_date {Previous month and month to date} ' +\n            'other {}}',\n        description: 'Date range based on {value}',\n        id: 'explorerDateRange',\n    },\n    explorerMonthDate: {\n        defaultMessage: '{month} {date}',\n        description: 'Cost {month} {date}',\n        id: 'explorerMonthDate',\n    },\n    explorerTableAriaLabel: {\n        defaultMessage: 'Cost Explorer table',\n        description: 'Cost Explorer table',\n        id: 'explorerTableAriaLabel',\n    },\n    explorerTitle: {\n        defaultMessage: 'Cost Explorer',\n        description: 'Cost Explorer title',\n        id: 'explorerTitle',\n    },\n    exportAggregateType: {\n        defaultMessage: 'Aggregate type',\n        description: 'Aggregate type',\n        id: 'exportAggregateType',\n    },\n    exportAll: {\n        defaultMessage: 'Export all',\n        description: 'Export all',\n        id: 'exportAll',\n    },\n    exportDesc: {\n        defaultMessage: 'The active selections from the table plus the values here will be used to generate an export file. When the file is available, download it from the {value} view.',\n        description: 'Export description',\n        id: 'exportDesc',\n    },\n    exportError: {\n        defaultMessage: 'Something went wrong, please try fewer selections',\n        description: 'Export error',\n        id: 'exportError',\n    },\n    exportFileName: {\n        defaultMessage: '{groupBy, select, ' +\n            'account {{resolution, select, daily {{provider}_accounts_daily_{startDate}_{endDate}} monthly {{provider}_accounts_monthly_{startDate}_{endDate}} other {}}} ' +\n            'cluster {{resolution, select, daily {{provider}_clusters_daily_{startDate}_{endDate}} monthly {{provider}_clusters_monthly_{startDate}_{endDate}} other {}}} ' +\n            'gcp_project {{resolution, select, daily {{provider}_gcp-projects_daily_{startDate}_{endDate}} monthly {{provider}_gcp-projects_monthly_{startDate}_{endDate}} other {}}} ' +\n            'node {{resolution, select, daily {{provider}_node_daily_{startDate}_{endDate}} monthly {{provider}_node_monthly_{startDate}_{endDate}} other {}}} ' +\n            'org_unit_id {{resolution, select, daily {{provider}_orgs_daily_{startDate}_{endDate}} monthly {{provider}_orgs_monthly_{startDate}_{endDate}} other {}}} ' +\n            'payer_tenant_id {{resolution, select, daily {{provider}_accounts_daily_{startDate}_{endDate}} monthly {{provider}_accounts_monthly_{startDate}_{endDate}} other {}}} ' +\n            'product_service {{resolution, select, daily {{provider}_services_daily_{startDate}_{endDate}} monthly {{provider}_services_monthly_{startDate}_{endDate}} other {}}} ' +\n            'project {{resolution, select, daily {{provider}_projects_daily_{startDate}_{endDate}} monthly {{provider}_projects_monthly_{startDate}_{endDate}} other {}}} ' +\n            'region {{resolution, select, daily {{provider}_regions_daily_{startDate}_{endDate}} monthly {{provider}_regions_monthly_{startDate}_{endDate}} other {}}} ' +\n            'resource_location {{resolution, select, daily {{provider}_regions_daily_{startDate}_{endDate}} monthly {{provider}_regions_monthly_{startDate}_{endDate}} other {}}} ' +\n            'service {{resolution, select, daily {{provider}_services_daily_{startDate}_{endDate}} monthly {{provider}_services_monthly_{startDate}_{endDate}} other {}}} ' +\n            'service_name {{resolution, select, daily {{provider}_services_daily_{startDate}_{endDate}} monthly {{provider}_services_monthly_{startDate}_{endDate}} other {}}} ' +\n            'subscription_guid {{resolution, select, daily {{provider}_accounts_daily_{startDate}_{endDate}} monthly {{provider}_accounts_monthly_{startDate}_{endDate}} other {}}} ' +\n            'tag {{resolution, select, daily {{provider}_tags_daily_{startDate}_{endDate}} monthly {{provider}_tags_monthly_{startDate}_{endDate}} other {}}} ' +\n            'other {}}',\n        description: 'Export file name',\n        id: 'exportFileName',\n    },\n    exportFormatType: {\n        defaultMessage: '{value, select, csv {CSV} json {JSON} other {}}',\n        description: 'Export format type',\n        id: 'exportFormatType',\n    },\n    exportFormatTypeTitle: {\n        defaultMessage: 'Format type',\n        description: 'Format type',\n        id: 'exportFormatTypeTitle',\n    },\n    exportGenerate: {\n        defaultMessage: 'Generate export',\n        description: 'Export export',\n        id: 'exportGenerate',\n    },\n    exportHeading: {\n        defaultMessage: '{groupBy, select, ' +\n            'account {Aggregates of the following accounts will be exported to a .csv file.} ' +\n            'cluster {Aggregates of the following clusters will be exported to a .csv file.} ' +\n            'gcp_project {Aggregates of the following GCP projects will be exported to a .csv file.} ' +\n            'node {Aggregates of the following nodes will be exported to a .csv file.} ' +\n            'org_unit_id {Aggregates of the following organizational units will be exported to a .csv file.} ' +\n            'payer_tenant_id {Aggregates of the following accounts will be exported to a .csv file.} ' +\n            'product_service {Aggregates of the following services will be exported to a .csv file.} ' +\n            'project {Aggregates of the following projects will be exported to a .csv file.} ' +\n            'region {Aggregates of the following regions will be exported to a .csv file.} ' +\n            'resource_location {Aggregates of the regions will be exported to a .csv file.} ' +\n            'service {Aggregates of the following services will be exported to a .csv file.} ' +\n            'service_name {Aggregates of the following services will be exported to a .csv file.} ' +\n            'subscription_guid {Aggregates of the following accounts will be exported to a .csv file.} ' +\n            'tag {Aggregates of the following tags will be exported to a .csv file.} ' +\n            'other {}}',\n        description: 'Export heading',\n        id: 'exportHeading',\n    },\n    exportName: {\n        defaultMessage: '{groupBy, select, ' +\n            'account {{provider, select, aws {Amazon Web Services grouped by Account} aws_ocp {Amazon Web Services filtered by OpenShift grouped by Account} azure {Microsoft Azure grouped by Account} oci {Oracle Cloud Infrastructure grouped by Account} azure_ocp {Microsoft Azure filtered by OpenShift grouped by Account} gcp {Google Cloud Platform grouped by Account} gcp_ocp {Google Cloud Platform filtered by OpenShift grouped by Account} ibm {IBM Cloud grouped by Account} ibm_ocp {IBM Cloud filtered by OpenShift grouped by Account} ocp {OpenShift grouped by Account} ocp_cloud {All cloud filtered by OpenShift grouped by Account} other {}}} ' +\n            'cluster {{provider, select, aws {Amazon Web Services grouped by Cluster} aws_ocp {Amazon Web Services filtered by OpenShift grouped by Cluster} azure {Microsoft Azure grouped by Cluster} oci {Oracle Cloud Infrastructure grouped by Cluster} azure_ocp {Microsoft Azure filtered by OpenShift grouped by Cluster} gcp {Google Cloud Platform grouped by Cluster} gcp_ocp {Google Cloud Platform filtered by OpenShift grouped by Cluster} ibm {IBM Cloud grouped by Cluster} ibm_ocp {IBM Cloud filtered by OpenShift grouped by Cluster} ocp {OpenShift grouped by Cluster} ocp_cloud {All cloud filtered by OpenShift grouped by Cluster} other {}}} ' +\n            'gcp_project {{provider, select, aws {Amazon Web Services grouped by GCP Project} aws_ocp {Amazon Web Services filtered by OpenShift grouped by GCP Project} azure {Microsoft Azure grouped by GCP Project} oci {Oracle Cloud Infrastructure grouped by GCP Project} azure_ocp {Microsoft Azure filtered by OpenShift grouped by GCP Project} gcp {Google Cloud Platform grouped by GCP Project} gcp_ocp {Google Cloud Platform filtered by OpenShift grouped by GCP Project} ibm {IBM Cloud grouped by GCP Project} ibm_ocp {IBM Cloud filtered by OpenShift grouped by GCP Project} ocp {OpenShift grouped by GCP Project} ocp_cloud {All cloud filtered by OpenShift grouped by GCP Project} other {}}} ' +\n            'node {{provider, select, aws {Amazon Web Services grouped by Node} aws_ocp {Amazon Web Services filtered by OpenShift grouped by Node} azure {Microsoft Azure grouped by Node} oci {Oracle Cloud Infrastructure grouped by Node} azure_ocp {Microsoft Azure filtered by OpenShift grouped by Node} gcp {Google Cloud Platform grouped by Node} gcp_ocp {Google Cloud Platform filtered by OpenShift grouped by Node} ibm {IBM Cloud grouped by Node} ibm_ocp {IBM Cloud filtered by OpenShift grouped by Node} ocp {OpenShift grouped by Node} ocp_cloud {All cloud filtered by OpenShift grouped by Node} other {}}} ' +\n            'org_unit_id {{provider, select, aws {Amazon Web Services grouped by Organizational unit} aws_ocp {Amazon Web Services filtered by OpenShift grouped by Organizational unit} azure {Microsoft Azure grouped by Organizational unit} oci {Oracle Cloud Infrastructure grouped by Organizational unit} azure_ocp {Microsoft Azure filtered by OpenShift grouped by Organizational unit} gcp {Google Cloud Platform grouped by Organizational unit} gcp_ocp {Google Cloud Platform filtered by OpenShift grouped by Organizational unit} ibm {IBM Cloud grouped by Organizational unit} ibm_ocp {IBM Cloud filtered by OpenShift grouped by Organizational unit} ocp {OpenShift grouped by Organizational unit} ocp_cloud {All cloud filtered by OpenShift grouped by Organizational unit} other {}}} ' +\n            'payer_tenant_id {{provider, select, oci {Oracle Cloud Infrastructure grouped by Account} other {}}}' +\n            'product_service {{provider, select, oci {Oracle Cloud Infrastructure grouped by Service} other {}}}' +\n            'project {{provider, select, aws {Amazon Web Services grouped by Project} aws_ocp {Amazon Web Services filtered by OpenShift grouped by Project} azure {Microsoft Azure grouped by Project} oci {Oracle Cloud Infrastructure grouped by Project} azure_ocp {Microsoft Azure filtered by OpenShift grouped by Project} gcp {Google Cloud Platform grouped by Project} gcp_ocp {Google Cloud Platform filtered by OpenShift grouped by Project} ibm {IBM Cloud grouped by Project} ibm_ocp {IBM Cloud filtered by OpenShift grouped by Project} ocp {OpenShift grouped by Project} ocp_cloud {All cloud filtered by OpenShift grouped by Project} other {}}} ' +\n            'region {{provider, select, aws {Amazon Web Services grouped by Region} aws_ocp {Amazon Web Services filtered by OpenShift grouped by Region} azure {Microsoft Azure grouped by Region} oci {Oracle Cloud Infrastructure grouped by Region} azure_ocp {Microsoft Azure filtered by OpenShift grouped by Region} gcp {Google Cloud Platform grouped by Region} gcp_ocp {Google Cloud Platform filtered by OpenShift grouped by Region} ibm {IBM Cloud grouped by Region} ibm_ocp {IBM Cloud filtered by OpenShift grouped by Region} ocp {OpenShift grouped by Region} ocp_cloud {All cloud filtered by OpenShift grouped by Region} other {}}} ' +\n            'resource_location {{provider, select, aws {Amazon Web Services grouped by Region} aws_ocp {Amazon Web Services filtered by OpenShift grouped by Region} azure {Microsoft Azure grouped by Region} oci {Oracle Cloud Infrastructure grouped by Region} azure_ocp {Microsoft Azure filtered by OpenShift grouped by Region} gcp {Google Cloud Platform grouped by Region} gcp_ocp {Google Cloud Platform filtered by OpenShift grouped by Region} ibm {IBM Cloud grouped by Region} ibm_ocp {IBM Cloud filtered by OpenShift grouped by Region} ocp {OpenShift grouped by Region} ocp_cloud {All cloud filtered by OpenShift grouped by Region} other {}}} ' +\n            'service {{provider, select, aws {Amazon Web Services grouped by Service} aws_ocp {Amazon Web Services filtered by OpenShift grouped by Service} azure {Microsoft Azure grouped by Service} oci {Oracle Cloud Infrastructure grouped by Service} azure_ocp {Microsoft Azure filtered by OpenShift grouped by Service} gcp {Google Cloud Platform grouped by Service} gcp_ocp {Google Cloud Platform filtered by OpenShift grouped by Service} ibm {IBM Cloud grouped by Service} ibm_ocp {IBM Cloud filtered by OpenShift grouped by Service} ocp {OpenShift grouped by Service} ocp_cloud {All cloud filtered by OpenShift grouped by Service} other {}}} ' +\n            'service_name {{provider, select, aws {Amazon Web Services grouped by Service} aws_ocp {Amazon Web Services filtered by OpenShift grouped by Service} azure {Microsoft Azure grouped by Service} oci {Oracle Cloud Infrastructure grouped by Service} azure_ocp {Microsoft Azure filtered by OpenShift grouped by Service} gcp {Google Cloud Platform grouped by Service} gcp_ocp {Google Cloud Platform filtered by OpenShift grouped by Service} ibm {IBM Cloud grouped by Service} ibm_ocp {IBM Cloud filtered by OpenShift grouped by Service} ocp {OpenShift grouped by Service} ocp_cloud {All cloud filtered by OpenShift grouped by Service} other {}}} ' +\n            'subscription_guid {{provider, select, aws {Amazon Web Services grouped by Account} aws_ocp {Amazon Web Services filtered by OpenShift grouped by Account} azure {Microsoft Azure grouped by Account} oci {Oracle Cloud Infrastructure grouped by Account} azure_ocp {Microsoft Azure filtered by OpenShift grouped by Account} gcp {Google Cloud Platform grouped by Account} gcp_ocp {Google Cloud Platform filtered by OpenShift grouped by Account} ibm {IBM Cloud grouped by Account} ibm_ocp {IBM Cloud filtered by OpenShift grouped by Account} ocp {OpenShift grouped by Account} ocp_cloud {All cloud filtered by OpenShift grouped by Account} other {}}} ' +\n            'tag {{provider, select, aws {Amazon Web Services grouped by Tag} aws_ocp {Amazon Web Services filtered by OpenShift grouped by Tag} azure {Microsoft Azure grouped by Tag} oci {Oracle Cloud Infrastructure grouped by Tag} azure_ocp {Microsoft Azure filtered by OpenShift grouped by Tag} gcp {Google Cloud Platform grouped by Tag} gcp_ocp {Google Cloud Platform filtered by OpenShift grouped by Tag} ibm {IBM Cloud grouped by Tag} ibm_ocp {IBM Cloud filtered by OpenShift grouped by Tag} ocp {OpenShift grouped by Tag} ocp_cloud {All cloud filtered by OpenShift grouped by Tag} other {}}} ' +\n            'other {}}',\n        description: 'Export name',\n        id: 'exportName',\n    },\n    exportNameRequired: {\n        defaultMessage: 'Please enter a name for the export',\n        description: 'Please enter a name for the export',\n        id: 'exportNameRequired',\n    },\n    exportNameTooLong: {\n        defaultMessage: 'Should not exceed 50 characters',\n        description: 'Should not exceed 50 characters',\n        id: 'exportNameTooLong',\n    },\n    exportResolution: {\n        defaultMessage: '{value, select, daily {Daily} monthly {Monthly} other {}}',\n        description: 'Export file name',\n        id: 'exportResolution',\n    },\n    exportSelected: {\n        defaultMessage: '{groupBy, select, ' +\n            'account {Selected accounts ({count})} ' +\n            'cluster {Selected clusters ({count})} ' +\n            'gcp_project {Selected GCP projects ({count})} ' +\n            'node {Selected nodes ({count})} ' +\n            'org_unit_id {Selected organizational units ({count})} ' +\n            'payer_tenant_id {Selected accounts ({count})} ' +\n            'product_service {Selected services ({count})} ' +\n            'project {Selected projects ({count})} ' +\n            'region {Selected regions ({count})} ' +\n            'resource_location {Selected regions ({count})} ' +\n            'service {Selected services ({count})} ' +\n            'service_name {Selected services ({count})} ' +\n            'subscription_guid {Selected accounts ({count})} ' +\n            'tag {Selected tags ({count})} ' +\n            'other {}}',\n        description: 'Selected items for export',\n        id: 'exportSelected',\n    },\n    exportTimeScope: {\n        defaultMessage: '{value, select, current {Current ({date})} previous {Previous ({date})} other {}}',\n        description: 'Export time scope',\n        id: 'exportTimeScope',\n    },\n    exportTimeScopeTitle: {\n        defaultMessage: 'Month',\n        description: 'Month',\n        id: 'exportTimeScopeTitle',\n    },\n    exportTitle: {\n        defaultMessage: 'Export',\n        description: 'Export title',\n        id: 'exportTitle',\n    },\n    exportsDesc: {\n        defaultMessage: 'Exports are available for download from the time that they are generated up to 7 days later. After 7 days, the export file will be removed.',\n        description: 'Exports are available for download from the time that they are generated up to 7 days later. After 7 days, the export file will be removed.',\n        id: 'exportsDesc',\n    },\n    exportsEmptyState: {\n        defaultMessage: 'To get started, close this view and select rows in the table you want to export and click the export button to start the journey.',\n        description: 'To get started, close this view and select rows in the table you want to export and click the export button to start the journey.',\n        id: 'exportsEmptyState',\n    },\n    exportsFailed: {\n        defaultMessage: 'Could not create export file',\n        description: 'Export failed',\n        id: 'exportsFailed',\n    },\n    exportsFailedDesc: {\n        defaultMessage: 'Something went wrong with the generation of this export file. Try exporting again.',\n        description: 'Export failed description',\n        id: 'exportsFailedDesc',\n    },\n    exportsSuccess: {\n        defaultMessage: 'Export preparing for download',\n        description: 'Export success',\n        id: 'exportsSuccess',\n    },\n    exportsSuccessDesc: {\n        defaultMessage: 'The export is preparing for download. It will be accessible from {value} view. {link}',\n        description: 'Export success description',\n        id: 'exportsSuccessDesc',\n    },\n    exportsTableAriaLabel: {\n        defaultMessage: 'Available exports table',\n        description: 'Available exports table',\n        id: 'exportsTableAriaLabel',\n    },\n    exportsTitle: {\n        defaultMessage: 'All exports',\n        description: 'All exports',\n        id: 'exportsTitle',\n    },\n    exportsUnavailable: {\n        defaultMessage: 'Export cannot be generated',\n        description: 'Export cannot be generated',\n        id: 'exportsUnavailable',\n    },\n    filterByButtonAriaLabel: {\n        defaultMessage: '{value, select, ' +\n            'account {Filter button for account name} ' +\n            'cluster {Filter button for cluster name} ' +\n            'gcp_project {Filter button for GCP project name} ' +\n            'name {Filter button for name name} ' +\n            'node {Filter button for node name} ' +\n            'org_unit_id {Filter button for organizational unit name} ' +\n            'payer_tenant_id {Filter button for account name} ' +\n            'product_service {Filter button for service name} ' +\n            'project {Filter button for project name} ' +\n            'region {Filter button for region name} ' +\n            'resource_location {Filter button for region name} ' +\n            'service {Filter button for service name} ' +\n            'service_name {Filter button for service_name name} ' +\n            'subscription_guid {Filter button for account name} ' +\n            'tag {Filter button for tag name} ' +\n            'other {}}',\n        description: 'Filter button for \"value\" name',\n        id: 'filterByButtonAriaLabel',\n    },\n    filterByInputAriaLabel: {\n        defaultMessage: '{value, select, ' +\n            'account {Input for account name} ' +\n            'cluster {Input for cluster name} ' +\n            'gcp_project {Input for GCP project name} ' +\n            'name {Input for name name} ' +\n            'node {Input for node name} ' +\n            'org_unit_id {Input for organizational unit name} ' +\n            'payer_tenant_id {Input for account name} ' +\n            'product_service {Input for service_name name} ' +\n            'project {Input for project name} ' +\n            'region {Input for region name} ' +\n            'resource_location {Input for region name} ' +\n            'service {Input for service name} ' +\n            'service_name {Input for service_name name} ' +\n            'subscription_guid {Input for account name} ' +\n            'tag {Input for tag name} ' +\n            'other {}}',\n        description: 'Input for {value} name',\n        id: 'filterByInputAriaLabel',\n    },\n    filterByOrgUnitAriaLabel: {\n        defaultMessage: 'Organizational units',\n        description: 'Organizational units',\n        id: 'filterByOrgUnitAriaLabel',\n    },\n    filterByOrgUnitPlaceholder: {\n        defaultMessage: 'Choose unit',\n        description: 'Choose unit',\n        id: 'filterByOrgUnitPlaceholder',\n    },\n    filterByPlaceholder: {\n        defaultMessage: '{value, select, ' +\n            'account {Filter by account} ' +\n            'cluster {Filter by cluster} ' +\n            'description {Filter by description} ' +\n            'gcp_project {Filter by GCP project} ' +\n            'name {Filter by name} ' +\n            'node {Filter by node} ' +\n            'org_unit_id {Filter by organizational unit} ' +\n            'payer_tenant_id {Filter by account} ' +\n            'product_service {Filter by service} ' +\n            'project {Filter by project} ' +\n            'region {Filter by region} ' +\n            'resource_location {Filter by region} ' +\n            'service {Filter by service} ' +\n            'service_name {Filter by service} ' +\n            'source_type {Filter by source type} ' +\n            'subscription_guid {Filter by account} ' +\n            'tag {Filter by tag} ' +\n            'other {}}',\n        description: 'Filter by \"value\"',\n        id: 'filterByPlaceholder',\n    },\n    filterByTagKeyAriaLabel: {\n        defaultMessage: 'Tag keys',\n        description: 'Tag keys',\n        id: 'filterByTagKeyAriaLabel',\n    },\n    filterByTagKeyPlaceholder: {\n        defaultMessage: 'Choose key',\n        description: 'Choose key',\n        id: 'filterByTagKeyPlaceholder',\n    },\n    filterByTagValueAriaLabel: {\n        defaultMessage: 'Tag values',\n        description: 'Tag values',\n        id: 'filterByTagValueAriaLabel',\n    },\n    filterByTagValueButtonAriaLabel: {\n        defaultMessage: 'Filter button for tag value',\n        description: 'Filter button for tag value',\n        id: 'filterByTagValueButtonAriaLabel',\n    },\n    filterByTagValueInputPlaceholder: {\n        defaultMessage: 'Filter by value',\n        description: 'Filter by value',\n        id: 'filterByTagValueInputPlaceholder',\n    },\n    filterByTagValuePlaceholder: {\n        defaultMessage: 'Choose value',\n        description: 'Choose value',\n        id: 'filterByTagValuePlaceholder',\n    },\n    filterByValues: {\n        defaultMessage: '{value, select, ' +\n            'account {Account} ' +\n            'cluster {Cluster} ' +\n            'gcp_project {GCP project} ' +\n            'name {Name} ' +\n            'node {Node} ' +\n            'org_unit_id {Organizational unit} ' +\n            'payer_tenant_id {Account} ' +\n            'product_service {Service} ' +\n            'project {Project} ' +\n            'region {Region} ' +\n            'resource_location {Region} ' +\n            'service {Service} ' +\n            'service_name {Service} ' +\n            'subscription_guid {Account} ' +\n            'tag {Tag} ' +\n            'other {}}',\n        description: 'Filter by values',\n        id: 'filterByValues',\n    },\n    forDate: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {{value} for January {startDate}} other {{value} for January {startDate}-{endDate}}}} ' +\n            '1 {{count, plural, one {{value} for February {startDate}} other {{value} for February {startDate}-{endDate}}}} ' +\n            '2 {{count, plural, one {{value} for March {startDate}} other {{value} for March {startDate}-{endDate}}}} ' +\n            '3 {{count, plural, one {{value} for April {startDate}} other {{value} for April {startDate}-{endDate}}}} ' +\n            '4 {{count, plural, one {{value} for May {startDate}} other {{value} for May {startDate}-{endDate}}}} ' +\n            '5 {{count, plural, one {{value} for June {startDate}} other {{value} for June {startDate}-{endDate}}}} ' +\n            '6 {{count, plural, one {{value} for July {startDate}} other {{value} for July {startDate}-{endDate}}}} ' +\n            '7 {{count, plural, one {{value} for August {startDate}} other {{value} for August {startDate}-{endDate}}}} ' +\n            '8 {{count, plural, one {{value} for September {startDate}} other {{value} for September {startDate}-{endDate}}}} ' +\n            '9 {{count, plural, one {{value} for October {startDate}} other {{value} for October {startDate}-{endDate}}}} ' +\n            '10 {{count, plural, one {{value} for November {startDate}} other {{value} for November {startDate}-{endDate}}}} ' +\n            '11 {{count, plural, one {{value} for December {startDate}} other {{value} for December {startDate}-{endDate}}}} ' +\n            'other {}}',\n        description: '{value} for date range',\n        id: 'forDate',\n    },\n    gcp: {\n        defaultMessage: 'Google Cloud Platform',\n        description: 'Google Cloud Platform',\n        id: 'gcp',\n    },\n    gcpComputeTitle: {\n        defaultMessage: 'Compute instances usage',\n        description: 'Compute instances usage',\n        id: 'gcpComputeTitle',\n    },\n    gcpCostTitle: {\n        defaultMessage: 'Google Cloud Platform Services cost',\n        description: 'Google Cloud Platform Services cost',\n        id: 'gcpCostTitle',\n    },\n    gcpCostTrendTitle: {\n        defaultMessage: 'Google Cloud Platform Services cumulative cost comparison ({units})',\n        description: 'Google Cloud Platform Services cumulative cost comparison ({units})',\n        id: 'gcpCostTrendTitle',\n    },\n    gcpDailyCostTrendTitle: {\n        defaultMessage: 'Google Cloud Platform Services daily cost comparison ({units})',\n        description: 'Google Cloud Platform Services daily cost comparison ({units})',\n        id: 'gcpDailyCostTrendTitle',\n    },\n    gcpDesc: {\n        defaultMessage: 'Raw cost from Google Cloud Platform infrastructure.',\n        description: 'Raw cost from Google Cloud Platform infrastructure.',\n        id: 'gcpDesc',\n    },\n    gcpDetailsTableAriaLabel: {\n        defaultMessage: 'Google Cloud Platform details table',\n        description: 'Google Cloud Platform details table',\n        id: 'gcpDetailsTable',\n    },\n    gcpDetailsTitle: {\n        defaultMessage: 'Google Cloud Platform Details',\n        description: 'Google Cloud Platform Details',\n        id: 'gcpDetailsTitle',\n    },\n    groupByAll: {\n        defaultMessage: '{value, select, ' +\n            'account {{count, plural, one {All account} other {All accounts}}} ' +\n            'cluster {{count, plural, one {All cluster} other {All clusters}}} ' +\n            'gcp_project {{count, plural, one {All GCP project} other {All GCP projects}}} ' +\n            'node {{count, plural, one {All node} other {All nodes}}} ' +\n            'org_unit_id {{count, plural, one {All organizational unit} other {All organizational units}}} ' +\n            'payer_tenant_id {{count, plural, one {All account} other {All accounts}}} ' +\n            'product_service {{count, plural, one {All service} other {All services}}} ' +\n            'project {{count, plural, one {All project} other {All projects}}} ' +\n            'region {{count, plural, one {All region} other {All regions}}} ' +\n            'resource_location {{count, plural, one {All region} other {All regions}}} ' +\n            'service {{count, plural, one {All service} other {All services}}} ' +\n            'service_name {{count, plural, one {All service} other {All services}}} ' +\n            'subscription_guid {{count, plural, one {All account} other {All accounts}}} ' +\n            'tag {{count, plural, one {All tag} other {All tags}}} ' +\n            'other {}}',\n        description: 'All group by value',\n        id: 'groupByAll',\n    },\n    groupByLabel: {\n        defaultMessage: 'Group by',\n        description: 'group by label',\n        id: 'groupByLabel',\n    },\n    groupByTop: {\n        defaultMessage: '{value, select, ' +\n            'account {{count, plural, one {Top account} other {Top accounts}}} ' +\n            'cluster {{count, plural, one {Top cluster} other {Top clusters}}} ' +\n            'gcp_project {{count, plural, one {Top GCP project} other {Top GCP projects}}} ' +\n            'node {{count, plural, one {Top node} other {Top node}}} ' +\n            'org_unit_id {{count, plural, one {Top organizational unit} other {Top organizational units}}} ' +\n            'payer_tenant_id {{count, plural, one {Top account} other {Top accounts}}} ' +\n            'product_service {{count, plural, one {Top service} other {Top services}}} ' +\n            'project {{count, plural, one {Top project} other {Top projects}}} ' +\n            'region {{count, plural, one {Top region} other {Top regions}}} ' +\n            'resource_location {{count, plural, one {Top region} other {Top regions}}} ' +\n            'service {{count, plural, one {Top service} other {Top services}}} ' +\n            'service_name {{count, plural, one {Top service} other {Top services}}} ' +\n            'subscription_guid {{count, plural, one {Top account} other {Top accounts}}} ' +\n            'tag {{count, plural, one {Top tag} other {Top tags}}} ' +\n            'other {}}',\n        description: 'Top group by value',\n        id: 'groupByTop',\n    },\n    groupByValueNames: {\n        defaultMessage: '{groupBy, select, ' +\n            'account {Account names} ' +\n            'cluster {Cluster names} ' +\n            'gcp_project {GCP project names} ' +\n            'node {Node names} ' +\n            'org_unit_id {Organizational unit names} ' +\n            'payer_tenant_id {Account names} ' +\n            'product_service {Service names} ' +\n            'project {Project names} ' +\n            'region {Region names} ' +\n            'resource_location {Region names} ' +\n            'service {Service names} ' +\n            'service_name {Service names} ' +\n            'subscription_guid {Account names} ' +\n            'tag {Tag names} ' +\n            'other {}}',\n        description: 'Selected items for export',\n        id: 'groupByValueNames',\n    },\n    groupByValues: {\n        defaultMessage: '{value, select, ' +\n            'account {{count, plural, one {account} other {accounts}}} ' +\n            'cluster {{count, plural, one {cluster} other {clusters}}} ' +\n            'gcp_project {{count, plural, one {GCP project} other {GCP projects}}} ' +\n            'node {{count, plural, one {node} other {node}}} ' +\n            'org_unit_id {{count, plural, one {organizational unit} other {organizational units}}} ' +\n            'payer_tenant_id {{count, plural, one {account} other {accounts}}} ' +\n            'product_service {{count, plural, one {service} other {services}}} ' +\n            'project {{count, plural, one {project} other {projects}}} ' +\n            'region {{count, plural, one {region} other {regions}}} ' +\n            'resource_location {{count, plural, one {region} other {regions}}} ' +\n            'service {{count, plural, one {service} other {services}}} ' +\n            'service_name {{count, plural, one {service} other {services}}} ' +\n            'subscription_guid {{count, plural, one {account} other {accounts}}} ' +\n            'tag {{count, plural, one {tag} other {tags}}} ' +\n            'other {}}',\n        description: 'Group by values',\n        id: 'groupByValues',\n    },\n    groupByValuesTitleCase: {\n        defaultMessage: '{value, select, ' +\n            'account {{count, plural, one {Account} other {Accounts}}} ' +\n            'cluster {{count, plural, one {Cluster} other {Clusters}}} ' +\n            'gcp_project {{count, plural, one {GCP project} other {GCP projects}}} ' +\n            'node {{count, plural, one {Node} other {Node}}} ' +\n            'org_unit_id {{count, plural, one {Organizational unit} other {Organizational units}}} ' +\n            'payer_tenant_id {{count, plural, one {Account} other {Accounts}}} ' +\n            'product_service {{count, plural, one {Service} other {Services}}} ' +\n            'project {{count, plural, one {Project} other {Projects}}} ' +\n            'region {{count, plural, one {Region} other {Regions}}} ' +\n            'resource_location {{count, plural, one {Region} other {Regions}}} ' +\n            'service {{count, plural, one {Service} other {Services}}} ' +\n            'service_name {{count, plural, one {Service} other {Services}}} ' +\n            'subscription_guid {{count, plural, one {Account} other {Accounts}}} ' +\n            'tag {{count, plural, one {Tag} other {Tags}}} ' +\n            'other {}}',\n        description: 'Group by values',\n        id: 'groupByValuesTitleCase',\n    },\n    historicalChartCostLabel: {\n        defaultMessage: 'Cost ({units})',\n        description: 'Cost ({units})',\n        id: 'historicalChartCostLabel',\n    },\n    historicalChartDayOfMonthLabel: {\n        defaultMessage: 'Day of Month',\n        description: 'Day of Month',\n        id: 'historicalChartDayOfMonthLabel',\n    },\n    historicalChartTitle: {\n        defaultMessage: '{value, select, ' +\n            'cost {Cost comparison} ' +\n            'cpu {CPU usage, request, and limit comparison} ' +\n            'memory {Memory usage, request, and limit comparison} ' +\n            'modal {{name} daily usage comparison} ' +\n            'storage {Storage usage comparison} ' +\n            'other {}}',\n        description: 'Historical chart titles',\n        id: 'historicalChartTitle',\n    },\n    historicalChartUsageLabel: {\n        defaultMessage: '{value, select, instance_type {hrs} storage {gb-mo} other {}}',\n        description: 'Historical chart usage labels',\n        id: 'historicalChartUsageLabel',\n    },\n    ibm: {\n        defaultMessage: 'IBM Cloud',\n        description: 'IBM Cloud',\n        id: 'ibm',\n    },\n    ibmComputeTitle: {\n        defaultMessage: 'Compute instances usage',\n        description: 'Compute instances usage',\n        id: 'ibmComputeTitle',\n    },\n    ibmCostTitle: {\n        defaultMessage: 'IBM Cloud Services cost',\n        description: 'IBM Cloud Services cost',\n        id: 'ibmCostTitle',\n    },\n    ibmCostTrendTitle: {\n        defaultMessage: 'IBM Cloud Services cumulative cost comparison ({units})',\n        description: 'IBM Cloud Services cumulative cost comparison ({units})',\n        id: 'ibmCostTrendTitle',\n    },\n    ibmDailyCostTrendTitle: {\n        defaultMessage: 'IBM Cloud Services daily cost comparison ({units})',\n        description: 'IBM Cloud Services daily cost comparison ({units})',\n        id: 'ibmDailyCostTrendTitle',\n    },\n    ibmDesc: {\n        defaultMessage: 'Raw cost from IBM Cloud infrastructure.',\n        description: 'Raw cost from IBM Cloud infrastructure.',\n        id: 'ibmDesc',\n    },\n    ibmDetailsTableAriaLabel: {\n        defaultMessage: 'IBM Cloud details table',\n        description: 'IBM Cloud details table',\n        id: 'ibmDetailsTable',\n    },\n    ibmDetailsTitle: {\n        defaultMessage: 'IBM Cloud Details',\n        description: 'IBM details title',\n        id: 'ibmDetailsTitle',\n    },\n    inactiveSourcesGoTo: {\n        defaultMessage: 'Go to Sources for more information',\n        description: 'Go to Sources for more information',\n        id: 'inactiveSourcesGoTo',\n    },\n    inactiveSourcesTitle: {\n        defaultMessage: 'A problem was detected with {value}',\n        description: 'A problem was detected with {value}',\n        id: 'inactiveSourcesGoTitle',\n    },\n    inactiveSourcesTitleMultiplier: {\n        defaultMessage: 'A problem was detected with the following sources',\n        description: 'A problem was detected with the following sources',\n        id: 'inactiveSourcesTitleMultiplier',\n    },\n    infrastructure: {\n        defaultMessage: 'Infrastructure',\n        description: 'Infrastructure',\n        id: 'infrastructure',\n    },\n    learnMore: {\n        defaultMessage: 'Learn more',\n        description: 'Learn more',\n        id: 'learnMore',\n    },\n    loadingStateDesc: {\n        defaultMessage: 'Searching for your sources. Do not refresh the browser',\n        description: 'Searching for your sources. Do not refresh the browser',\n        id: 'loadingStateDesc',\n    },\n    loadingStateTitle: {\n        defaultMessage: 'Looking for sources...',\n        description: 'Looking for sources',\n        id: 'loadingStateTitle',\n    },\n    maintenanceEmptyStateDesc: {\n        defaultMessage: 'Cost Management is currently undergoing scheduled maintenance and will be unavailable from 13:00 - 19:00 UTC (09:00 AM - 03:00 PM EDT).',\n        description: 'Cost Management is currently undergoing scheduled maintenance',\n        id: 'maintenanceEmptyStateDesc',\n    },\n    maintenanceEmptyStateInfo: {\n        defaultMessage: 'For more information visit {url}',\n        description: 'more information url',\n        id: 'maintenanceEmptyStateInfo',\n    },\n    maintenanceEmptyStateThanks: {\n        defaultMessage: 'We will be back soon. Thank you for your patience!',\n        description: 'thanks you for your patience',\n        id: 'maintenanceEmptyStateThanks',\n    },\n    manageColumnsAriaLabel: {\n        defaultMessage: 'Table column management',\n        description: 'Table column management',\n        id: 'manageColumnsAriaLabel',\n    },\n    manageColumnsDesc: {\n        defaultMessage: 'Selected categories will be displayed in the table',\n        description: 'Selected categories will be displayed in the table',\n        id: 'manageColumnsDesc',\n    },\n    manageColumnsTitle: {\n        defaultMessage: 'Manage columns',\n        description: 'Manage columns',\n        id: 'manageColumnsTitle',\n    },\n    markupDescription: {\n        defaultMessage: 'The portion of cost calculated by applying markup or discount to infrastructure raw cost in the cost management application',\n        description: 'The portion of cost calculated by applying markup or discount to infrastructure raw cost in the cost management application',\n        id: 'markupDescription',\n    },\n    markupOrDiscount: {\n        defaultMessage: 'Markup or Discount',\n        description: 'Markup or Discount',\n        id: 'markupOrDiscount',\n    },\n    markupOrDiscountDesc: {\n        defaultMessage: 'This Percentage is applied to raw cost calculations by multiplying the cost with this percentage. Costs calculated from price list rates will not be effected.',\n        description: 'This Percentage is applied to raw cost calculations by multiplying the cost with this percentage. Costs calculated from price list rates will not be effected.',\n        id: 'markupOrDiscountDesc',\n    },\n    markupOrDiscountModalDesc: {\n        defaultMessage: 'Use markup/discount to manipulate how the raw costs are being calculated for your sources. Note, costs calculated from price list rates will not be affected by this.',\n        description: 'Use markup/discount to manipulate how the raw costs are being calculated for your sources. Note, costs calculated from price list rates will not be affected by this.',\n        id: 'markupOrDiscountModalDesc',\n    },\n    markupOrDiscountNumber: {\n        defaultMessage: 'Markup or discount must be a number',\n        description: 'Markup or discount must be a number',\n        id: 'markupOrDiscountNumber',\n    },\n    markupOrDiscountTooLong: {\n        defaultMessage: 'Should not exceed 10 decimals',\n        description: 'Should not exceed 10 decimals',\n        id: 'markupOrDiscountTooLong',\n    },\n    markupPlus: {\n        defaultMessage: 'Markup (+)',\n        description: 'Markup (+)',\n        id: 'markupPlus',\n    },\n    markupTitle: {\n        defaultMessage: 'Markup',\n        description: 'Markup',\n        id: 'markupTitle',\n    },\n    measurement: {\n        defaultMessage: 'Measurement',\n        description: 'Measurement',\n        id: 'measurement',\n    },\n    measurementPlaceholder: {\n        defaultMessage: 'Filter by measurements',\n        description: 'Filter by measurements',\n        id: 'measurementPlaceholder',\n    },\n    measurementValues: {\n        defaultMessage: '{value, select, ' +\n            'count {{count, plural, one {Count} other {Count ({units})}}} ' +\n            'effective_usage {{count, plural, one {Request} other {Effective-usage ({units})}}} ' +\n            'request {{count, plural, one {Request} other {Request ({units})}}} ' +\n            'usage {{count, plural, one {Usage} other {Usage ({units})}}} ' +\n            'other {}}',\n        description: 'Measurement values',\n        id: 'measurementValues',\n    },\n    measurementValuesDesc: {\n        defaultMessage: '{value, select, ' +\n            'count {{units, select, ' +\n            'node_month {The distinct number of nodes identified during the month} ' +\n            'pvc_month {The distinct number of volume claims identified during the month} ' +\n            'cluster_month {The distinct number of clusters identified during the month} ' +\n            'other {}}} ' +\n            'effective_usage {The greater of usage and request each hour} ' +\n            'request {The pod resources requested, as reported by OpenShift} ' +\n            'usage {The pod resources used, as reported by OpenShift} ' +\n            'other {}}',\n        description: 'Measurement descriptions',\n        id: 'measurementValuesDesc',\n    },\n    memoryTitle: {\n        defaultMessage: 'Memory',\n        description: 'Memory',\n        id: 'memoryTitle',\n    },\n    metric: {\n        defaultMessage: 'Metric',\n        description: 'Metric',\n        id: 'metric',\n    },\n    metricPlaceholder: {\n        defaultMessage: 'Filter by metrics',\n        description: 'Filter by metrics',\n        id: 'metricPlaceholder',\n    },\n    metricValues: {\n        defaultMessage: '{value, select, ' +\n            'cpu {CPU} ' +\n            'cluster {Cluster} ' +\n            'memory {Memory} ' +\n            'node {Node} ' +\n            'persistent_volume_claims {Persistent volume claims} ' +\n            'storage {Storage} ' +\n            'other {}}',\n        description: 'Metric values',\n        id: 'metricValues',\n    },\n    monthOverMonthChange: {\n        defaultMessage: 'Month over month change',\n        description: 'Month over month change',\n        id: 'monthOverMonthChange',\n    },\n    names: {\n        defaultMessage: '{count, plural, one {Name} other {Names}}',\n        description: 'Name plural or singular',\n        id: 'names',\n    },\n    next: {\n        defaultMessage: 'next',\n        description: 'next',\n        id: 'next',\n    },\n    no: {\n        defaultMessage: 'No',\n        description: 'No',\n        id: 'no',\n    },\n    noDataForDate: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {No data available for Jan {startDate}} other {No data available for Jan {startDate}-{endDate}}}} ' +\n            '1 {{count, plural, one {No data available for Feb {startDate}} other {No data available for Feb {startDate}-{endDate}}}} ' +\n            '2 {{count, plural, one {No data available for Mar {startDate}} other {No data available for Mar {startDate}-{endDate}}}} ' +\n            '3 {{count, plural, one {No data available for Apr {startDate}} other {No data available for Apr {startDate}-{endDate}}}} ' +\n            '4 {{count, plural, one {No data available for May {startDate}} other {No data available for May {startDate}-{endDate}}}} ' +\n            '5 {{count, plural, one {No data available for Jun {startDate}} other {No data available for Jun {startDate}-{endDate}}}} ' +\n            '6 {{count, plural, one {No data available for Jul {startDate}} other {No data available for Jul {startDate}-{endDate}}}} ' +\n            '7 {{count, plural, one {No data available for Aug {startDate}} other {No data available for Aug {startDate}-{endDate}}}} ' +\n            '8 {{count, plural, one {No data available for Sep {startDate}} other {No data available for Sep {startDate}-{endDate}}}} ' +\n            '9 {{count, plural, one {No data available for Oct {startDate}} other {No data available for Oct {startDate}-{endDate}}}} ' +\n            '10 {{count, plural, one {No data available for Nov {startDate}} other {No data available for Nov {startDate}-{endDate}}}} ' +\n            '11 {{count, plural, one {No data available for Dec {startDate}} other {No data available for Dec {startDate}-{endDate}}}} ' +\n            'other {}}',\n        description: 'No data available for date range',\n        id: 'noDataForDate',\n    },\n    noDataStateDesc: {\n        defaultMessage: 'We have detected a source, but we are not done processing the incoming data. The time to process could take up to 24 hours. Try refreshing the page at a later time.',\n        description: 'still processing request, 24 hour message',\n        id: 'noDataStateDesc',\n    },\n    noDataStateRefresh: {\n        defaultMessage: 'Refresh this page',\n        description: 'Refresh this page',\n        id: 'noDataStateRefresh',\n    },\n    noDataStateTitle: {\n        defaultMessage: 'Still processing the data',\n        description: 'Still processing the data',\n        id: 'noDataStateTitle',\n    },\n    noExportsStateTitle: {\n        defaultMessage: 'There are no export files available',\n        description: 'There are no export files available',\n        id: 'NoExportsStateTitle',\n    },\n    noProvidersStateAwsDesc: {\n        defaultMessage: 'Add an Amazon Web Services account to see a total cost breakdown of your spend by accounts, organizational units, services, regions, or tags.',\n        description: 'Add an Amazon Web Services account to see a total cost breakdown of your spend by accounts, organizational units, services, regions, or tags.',\n        id: 'noProvidersStateAwsDesc',\n    },\n    noProvidersStateAwsTitle: {\n        defaultMessage: 'Track your Amazon Web Services spending!',\n        description: 'Track your Amazon Web Services spending!',\n        id: 'noProvidersStateAwsTitle',\n    },\n    noProvidersStateAzureDesc: {\n        defaultMessage: 'Add a Microsoft Azure account to see a total cost breakdown of your spend by accounts, services, regions, or tags.',\n        description: 'Add a Microsoft Azure account to see a total cost breakdown of your spend by accounts, services, regions, or tags.',\n        id: 'noProvidersStateAzureDesc',\n    },\n    noProvidersStateAzureTitle: {\n        defaultMessage: 'Track your Microsoft Azure spending!',\n        description: 'Track your Microsoft Azure spending!',\n        id: 'noProvidersStateAzureTitle',\n    },\n    noProvidersStateGcpDesc: {\n        defaultMessage: 'Add a Google Cloud Platform account to see a total cost breakdown of your spend by accounts, services, regions, or tags.',\n        description: 'Add a Google Cloud Platform account to see a total cost breakdown of your spend by accounts, services, regions, or tags.',\n        id: 'noProvidersStateGcpDesc',\n    },\n    noProvidersStateGcpTitle: {\n        defaultMessage: 'Track your Google Cloud Platform spending!',\n        description: 'Track your Google Cloud Platform spending!',\n        id: 'noProvidersStateGcpTitle',\n    },\n    noProvidersStateGetStarted: {\n        defaultMessage: 'Get started with Sources',\n        description: 'Get started with Sources',\n        id: 'noProvidersStateGetStarted',\n    },\n    noProvidersStateIbmDesc: {\n        defaultMessage: 'Add an IBM Cloud account to see a total cost breakdown of your spend by accounts, services, regions, or tags.',\n        description: 'Add an IBM Cloud account to see a total cost breakdown of your spend by accounts, services, regions, or tags.',\n        id: 'noProvidersStateIbmDesc',\n    },\n    noProvidersStateIbmTitle: {\n        defaultMessage: 'Track your IBM Cloud spending!',\n        description: 'Track your IBM Cloud spending!',\n        id: 'noProvidersStateIbmTitle',\n    },\n    noProvidersStateOciDesc: {\n        defaultMessage: 'Add an Oracle Cloud Infrastructure account to see a total cost breakdown of your spend by accounts, services, regions, or tags.',\n        description: 'Add an Oracle Cloud Infrastructure account to see a total cost breakdown of your spend by accounts, services, regions, or tags.',\n        id: 'noProvidersStateOciDesc',\n    },\n    noProvidersStateOciTitle: {\n        defaultMessage: 'Track your Oracle Cloud Infrastructure spending!',\n        description: 'Track your Oracle Cloud Infrastructure spending!',\n        id: 'noProvidersStateOciTitle',\n    },\n    noProvidersStateOcpAddSources: {\n        defaultMessage: 'Add an OpenShift cluster to Cost Management',\n        description: 'Add an OpenShift cluster to Cost Management',\n        id: 'noProvidersStateOcpAddSources',\n    },\n    noProvidersStateOcpDesc: {\n        defaultMessage: 'Add an OpenShift Container Platform cluster to see a total cost breakdown of your pods by cluster, node, project, or labels.',\n        description: 'Add an OpenShift Container Platform cluster to see a total cost breakdown of your pods by cluster, node, project, or labels.',\n        id: 'noProvidersStateOcpDesc',\n    },\n    noProvidersStateOcpTitle: {\n        defaultMessage: 'Track your OpenShift spending!',\n        description: 'Track your OpenShift spending!',\n        id: 'noProvidersStateOcpTitle',\n    },\n    noProvidersStateOverviewDesc: {\n        defaultMessage: 'Add a source, like an OpenShift Container Platform cluster or a cloud services account, to see a total cost breakdown as well as usage information like instance counts and storage.',\n        description: 'Add a source, like an OpenShift Container Platform cluster or a cloud services account, to see a total cost breakdown as well as usage information like instance counts and storage.',\n        id: 'noProvidersStateOverviewDesc',\n    },\n    noProvidersStateOverviewTitle: {\n        defaultMessage: 'Track your spending!',\n        description: 'Track your spending!',\n        id: 'noProvidersStateOverviewTitle',\n    },\n    noResultsFound: {\n        defaultMessage: 'No results found',\n        description: 'No results found',\n        id: 'noResultsFound',\n    },\n    notAuthorizedStateAws: {\n        defaultMessage: 'Amazon Web Services in Cost Management',\n        description: 'Amazon Web Services in Cost Management',\n        id: 'noAuthorizedStateAws',\n    },\n    notAuthorizedStateAzure: {\n        defaultMessage: 'Microsoft Azure in Cost Management',\n        description: 'Microsoft Azure in Cost Management',\n        id: 'notAuthorizedStateAzure',\n    },\n    notAuthorizedStateCostModels: {\n        defaultMessage: 'Cost Models in Cost Management',\n        description: 'Cost Models in Cost Management',\n        id: 'notAuthorizedStateCostModels',\n    },\n    notAuthorizedStateGcp: {\n        defaultMessage: 'Google Cloud Platform in Cost Management',\n        description: 'Google Cloud Platform in Cost Management',\n        id: 'notAuthorizedStateGcp',\n    },\n    notAuthorizedStateIbm: {\n        defaultMessage: 'IBM Cloud in Cost Management',\n        description: 'IBM Cloud in Cost Management',\n        id: 'notAuthorizedStateIbm',\n    },\n    notAuthorizedStateOci: {\n        defaultMessage: 'Oracle Cloud Infrastructure in Cost Management',\n        description: 'Oracle Cloud Infrastructure in Cost Management',\n        id: 'notAuthorizedStateOci',\n    },\n    notAuthorizedStateOcp: {\n        defaultMessage: 'OpenShift in Cost Management',\n        description: 'OpenShift in Cost Management',\n        id: 'notAuthorizedStateOcp',\n    },\n    oci: {\n        defaultMessage: 'Oracle Cloud Infrastructure',\n        description: 'Oracle Cloud Infrastructure',\n        id: 'oci',\n    },\n    ociComputeTitle: {\n        defaultMessage: 'Virtual machines usage',\n        description: 'Virtual machines usage',\n        id: 'ociComputeTitle',\n    },\n    ociCostTrendTitle: {\n        defaultMessage: 'Oracle Cloud Infrastructure cumulative cost comparison ({units})',\n        description: 'Oracle Cloud Infrastructure cumulative cost comparison ({units})',\n        id: 'ociCostTrendTitle',\n    },\n    ociDailyCostTrendTitle: {\n        defaultMessage: 'Oracle Cloud Infrastructure daily cost comparison ({units})',\n        description: 'Oracle Cloud Infrastructure daily cost comparison ({units})',\n        id: 'ociDailyCostTrendTitle',\n    },\n    ociDashboardCostTitle: {\n        defaultMessage: 'Oracle Cloud Infrastructure cost',\n        description: 'Oracle Cloud Infrastructure cost',\n        id: 'ociDashboardCostTitle',\n    },\n    ociDesc: {\n        defaultMessage: 'Raw cost from Oracle Cloud Infrastructure.',\n        description: 'Raw cost from Oracle Cloud Infrastructure.',\n        id: 'ociDesc',\n    },\n    ociDetailsTableAriaLabel: {\n        defaultMessage: 'Oracle Cloud Infrastructure details table',\n        description: 'Oracle Cloud Infrastructure details table',\n        id: 'ociDetailsTable',\n    },\n    ociDetailsTitle: {\n        defaultMessage: 'Oracle Cloud Infrastructure details',\n        description: 'Oracle Cloud Infrastructure details',\n        id: 'ociDetailsTitle',\n    },\n    ocpCloudDashboardComputeTitle: {\n        defaultMessage: 'Compute services usage',\n        description: 'Compute services usage',\n        id: 'ocpCloudDashboardComputeTitle',\n    },\n    ocpCloudDashboardCostTitle: {\n        defaultMessage: 'All cloud filtered by OpenShift cost',\n        description: 'All cloud filtered by OpenShift cost',\n        id: 'ocpCloudDashboardCostTitle',\n    },\n    ocpCloudDashboardCostTrendTitle: {\n        defaultMessage: 'All cloud filtered by OpenShift cumulative cost comparison ({units})',\n        description: 'All cloud filtered by OpenShift cumulative cost comparison ({units})',\n        id: 'ocpCloudDashboardCostTrendTitle',\n    },\n    ocpCloudDashboardDailyCostTrendTitle: {\n        defaultMessage: 'All cloud filtered by OpenShift daily cost comparison ({units})',\n        description: 'All cloud filtered by OpenShift daily cost comparison ({units})',\n        id: 'ocpCloudDashboardDailyCostTrendTitle',\n    },\n    ocpCpuUsageAndRequests: {\n        defaultMessage: 'CPU usage and requests',\n        description: 'CPU usage and requests',\n        id: 'ocpCpuUsageAndRequests',\n    },\n    ocpDailyUsageAndRequestComparison: {\n        defaultMessage: 'Daily usage and requests comparison ({units})',\n        description: 'Daily usage and requests comparison',\n        id: 'ocpDailyUsageAndRequestComparison',\n    },\n    ocpDashboardCPUUsageAndRequests: {\n        defaultMessage: 'OpenShift CPU usage and requests',\n        description: 'OpenShift CPU usage and requests',\n        id: 'ocpDashboardCPUUsageAndRequests',\n    },\n    ocpDashboardCostTitle: {\n        defaultMessage: 'All OpenShift cost',\n        description: 'All OpenShift cost',\n        id: 'ocpDashboardCostTitle',\n    },\n    ocpDashboardCostTrendTitle: {\n        defaultMessage: 'All OpenShift cumulative cost comparison ({units})',\n        description: 'All OpenShift cumulative cost comparison in units',\n        id: 'ocpDashboardCostTrendTitle',\n    },\n    ocpDashboardDailyCostTitle: {\n        defaultMessage: 'All OpenShift daily cost comparison ({units})',\n        description: 'All OpenShift daily cost comparison in units',\n        id: 'ocpDashboardDailyCostTitle',\n    },\n    ocpDashboardMemoryUsageAndRequests: {\n        defaultMessage: 'OpenShift Memory usage and requests',\n        description: 'OpenShift Memory usage and requests',\n        id: 'ocpDashboardMemoryUsageAndRequests',\n    },\n    ocpDashboardVolumeUsageAndRequests: {\n        defaultMessage: 'OpenShift Volume usage and requests',\n        description: 'OpenShift Volume usage and requests',\n        id: 'ocpUsageAndRequests',\n    },\n    ocpDetailsInfrastructureCost: {\n        defaultMessage: 'Infrastructure cost',\n        description: 'Infrastructure cost',\n        id: 'ocpDetailsInfrastructureCost',\n    },\n    ocpDetailsInfrastructureCostDesc: {\n        defaultMessage: 'The cost based on raw usage data from the underlying infrastructure.',\n        description: 'The cost based on raw usage data from the underlying infrastructure.',\n        id: 'ocpDetailsInfrastructureCostDesc',\n    },\n    ocpDetailsSupplementaryCost: {\n        defaultMessage: 'Supplementary cost',\n        description: 'Supplementary cost',\n        id: 'ocpDetailsSupplementaryCost',\n    },\n    ocpDetailsSupplementaryCostDesc: {\n        defaultMessage: 'All costs not directly attributed to the infrastructure. These costs are determined by applying a price list within a cost model to OpenShift cluster metrics.',\n        description: 'All costs not directly attributed to the infrastructure. These costs are determined by applying a price list within a cost model to OpenShift cluster metrics.',\n        id: 'ocpDetailsSupplementaryCostDesc',\n    },\n    ocpDetailsTableAriaLabel: {\n        defaultMessage: 'OpenShift details table',\n        description: 'OpenShift details table',\n        id: 'ocpDetailsTable',\n    },\n    ocpDetailsTitle: {\n        defaultMessage: 'OpenShift details',\n        description: 'OpenShift details title',\n        id: 'ocpDetailsTitle',\n    },\n    ocpInfrastructureCostTitle: {\n        defaultMessage: 'OpenShift infrastructure cost',\n        description: 'OpenShift infrastructure cost',\n        id: 'ocpInfrastructureCostTitle',\n    },\n    ocpInfrastructureCostTrendTitle: {\n        defaultMessage: 'OpenShift cumulative infrastructure cost comparison ({units})',\n        description: 'OpenShift cumulative infrastructure cost comparison with units',\n        id: 'ocpInfrastructureCostTrendTitle',\n    },\n    ocpInfrastructureDailyCostTrendTitle: {\n        defaultMessage: 'OpenShift daily infrastructure cost comparison ({units})',\n        description: 'OpenShift daily infrastructure cost comparison with units',\n        id: 'ocpInfrastructureDailyCostTrendTitle',\n    },\n    ocpMemoryUsageAndRequests: {\n        defaultMessage: 'Memory usage and requests',\n        description: 'Memory usage and requests',\n        id: 'ocpMemoryUsageAndRequests',\n    },\n    ocpSupplementaryCostTitle: {\n        defaultMessage: 'OpenShift supplementary cost',\n        description: 'OpenShift supplementary cost',\n        id: 'ocpSupplementaryCostTitle',\n    },\n    ocpSupplementaryCostTrendTitle: {\n        defaultMessage: 'OpenShift cumulative supplementary cost comparison ({units})',\n        description: 'OpenShift cumulative supplementary cost comparison with units',\n        id: 'ocpSupplementaryCostTrendTitle',\n    },\n    ocpSupplementaryDailyCostTrendTitle: {\n        defaultMessage: 'OpenShift daily supplementary cost comparison ({units})',\n        description: 'OpenShift daily supplementary cost comparison with units',\n        id: 'ocpSupplementaryDailyCostTrendTitle',\n    },\n    ocpUsageCostTitle: {\n        defaultMessage: 'OpenShift usage cost',\n        description: 'OpenShift usage cost',\n        id: 'ocpUsageCostTitle',\n    },\n    ocpUsageDashboardCPUTitle: {\n        defaultMessage: 'OpenShift CPU usage and requests',\n        description: 'OpenShift CPU usage and requests',\n        id: 'ocpUsageDashboardCPUTitle',\n    },\n    ocpUsageDashboardCostTrendTitle: {\n        defaultMessage: 'Metering cumulative cost comparison ({units})',\n        description: 'Metering cumulative cost comparison with units',\n        id: 'ocpUsageDashboardCostTrendTitle',\n    },\n    ocpVolumeUsageAndRequests: {\n        defaultMessage: 'Volume usage and requests',\n        description: 'Volume usage and requests',\n        id: 'ocpVolumeUsageAndRequests',\n    },\n    openShift: {\n        defaultMessage: 'OpenShift',\n        description: 'OpenShift',\n        id: 'openShift',\n    },\n    openShiftCloudInfrastructure: {\n        defaultMessage: 'OpenShift cloud infrastructure',\n        description: 'OpenShift cloud infrastructure',\n        id: 'openShiftCloudInfrastructure',\n    },\n    openShiftCloudInfrastructureDesc: {\n        defaultMessage: 'Infrastructure cost attributed to OpenShift Container Platform, based on a subset of cloud cost data.',\n        description: 'Infrastructure cost attributed to OpenShift Container Platform, based on a subset of cloud cost data.',\n        id: 'openShiftCloudInfrastructureDesc',\n    },\n    openShiftDesc: {\n        defaultMessage: 'Total cost for OpenShift Container Platform, comprising the infrastructure cost and cost calculated from metrics.',\n        description: 'Total cost for OpenShift Container Platform, comprising the infrastructure cost and cost calculated from metrics.',\n        id: 'openShiftDesc',\n    },\n    overviewInfoArialLabel: {\n        defaultMessage: 'A description of perspectives',\n        description: 'A description of perspectives',\n        id: 'overviewInfoArialLabel',\n    },\n    overviewTitle: {\n        defaultMessage: 'Cost Management Overview',\n        description: 'Cost Management Overview',\n        id: 'overviewTitle',\n    },\n    pageTitleAws: {\n        defaultMessage: 'Amazon Web Services - Cost Management | Red Hat OpenShift Cluster Manager',\n        description: 'Amazon Web Services - Cost Management | Red Hat OpenShift Cluster Manager',\n        id: 'pageTitleAws',\n    },\n    pageTitleAzure: {\n        defaultMessage: 'Microsoft Azure - Cost Management | Red Hat OpenShift Cluster Manager',\n        description: 'Microsoft Azure - Cost Management | Red Hat OpenShift Cluster Manager',\n        id: 'pageTitleAzure',\n    },\n    pageTitleCostModels: {\n        defaultMessage: 'Cost Models - Cost Management | Red Hat OpenShift Cluster Manager',\n        description: 'Cost Models - Cost Management | Red Hat OpenShift Cluster Manager',\n        id: 'pageTitleCostModels',\n    },\n    pageTitleDefault: {\n        defaultMessage: 'Cost Management | Red Hat OpenShift Cluster Manager',\n        description: 'Cost Management | Red Hat OpenShift Cluster Manager',\n        id: 'pageTitleDefault',\n    },\n    pageTitleExplorer: {\n        defaultMessage: 'Cost Explorer - Cost Management | Red Hat OpenShift Cluster Manager',\n        description: 'Cost Explorer - Cost Management | Red Hat OpenShift Cluster Manager',\n        id: 'pageTitleExplorer',\n    },\n    pageTitleGcp: {\n        defaultMessage: 'Google Cloud Platform - Cost Management | Red Hat OpenShift Cluster Manager',\n        description: 'Google Cloud Platform - Cost Management | Red Hat OpenShift Cluster Manager',\n        id: 'pageTitleGcp',\n    },\n    pageTitleIbm: {\n        defaultMessage: 'IBM Cloud - Cost Management | Red Hat OpenShift Cluster Manager',\n        description: 'IBM Cloud - Cost Management | Red Hat OpenShift Cluster Manager',\n        id: 'pageTitleIbm',\n    },\n    pageTitleOci: {\n        defaultMessage: 'Oracle Cloud Infrastructure - Cost Management | Red Hat OpenShift Cluster Manager',\n        description: 'Oracle Cloud Infrastructure - Cost Management | Red Hat OpenShift Cluster Manager',\n        id: 'pageTitleOci',\n    },\n    pageTitleOcp: {\n        defaultMessage: 'OpenShift - Cost Management | Red Hat OpenShift Cluster Manager',\n        description: 'OpenShift - Cost Management | Red Hat OpenShift Cluster Manager',\n        id: 'pageTitleOcp',\n    },\n    pageTitleOverview: {\n        defaultMessage: 'Overview - Cost Management | Red Hat OpenShift Cluster Manager',\n        description: 'Overview - Cost Management | Red Hat OpenShift Cluster Manager',\n        id: 'pageTitleOverview',\n    },\n    percent: {\n        defaultMessage: '{value} %',\n        description: 'Percent value',\n        id: 'percent',\n    },\n    percentOfCost: {\n        defaultMessage: '{value} % of cost',\n        description: '{value} % of cost',\n        id: 'percentOfCost',\n    },\n    percentSymbol: {\n        defaultMessage: '%',\n        description: 'Percent symbol',\n        id: 'percentSymbol',\n    },\n    percentTotalCost: {\n        defaultMessage: '{value} {units} ({percent} %)',\n        description: '{value} {units} ({percent} %)',\n        id: 'percentTotalCost',\n    },\n    perspective: {\n        defaultMessage: 'Perspective',\n        description: 'Perspective dropdown label',\n        id: 'perspective',\n    },\n    perspectiveValues: {\n        defaultMessage: '{value, select, ' +\n            'aws {Amazon Web Services} ' +\n            'aws_ocp {Amazon Web Services filtered by OpenShift} ' +\n            'azure {Microsoft Azure} ' +\n            'oci {Oracle Cloud Infrastructure} ' +\n            'azure_ocp {Microsoft Azure filtered by OpenShift} ' +\n            'gcp {Google Cloud Platform} ' +\n            'gcp_ocp {Google Cloud Platform filtered by OpenShift} ' +\n            'ibm {IBM Cloud} ' +\n            'ibm_ocp {IBM filtered by OpenShift} ' +\n            'ocp {All OpenShift} ' +\n            'ocp_cloud {All cloud filtered by OpenShift} ' +\n            'other {}}',\n        description: 'Perspective values',\n        id: 'perspectiveValues',\n    },\n    priceList: {\n        defaultMessage: 'Price list',\n        description: 'Price list',\n        id: 'priceList',\n    },\n    priceListAddRate: {\n        defaultMessage: 'Add rate',\n        description: 'Add rate',\n        id: 'priceListAddRate',\n    },\n    priceListDeleteRate: {\n        defaultMessage: 'Delete rate',\n        description: 'Delete rate',\n        id: 'priceListDeleteRate',\n    },\n    priceListDeleteRateDesc: {\n        defaultMessage: '{count, plural, one {This action will remove {metric} rate from {costModel}} other {This action will remove {metric} rate from {costModel}, which is assigned to the following sources:}}',\n        description: 'This action will remove {metric} rate from {costModel}, which is assigned to the following sources:',\n        id: 'priceListDesc',\n    },\n    priceListDuplicate: {\n        defaultMessage: 'This tag key is already in use',\n        description: 'This tag key is already in use',\n        id: 'priceListDuplicate',\n    },\n    priceListEditRate: {\n        defaultMessage: 'Edit rate',\n        description: 'Edit rate',\n        id: 'priceListEditRate',\n    },\n    priceListEmptyRate: {\n        defaultMessage: 'No rates are set',\n        description: 'No rates are set',\n        id: 'priceListEmptyRate',\n    },\n    priceListEmptyRateDesc: {\n        defaultMessage: 'To add rates to the price list, click on the \"Add\" rate button above.',\n        description: 'To add rates to the price list, click on the \"Add\" rate button above.',\n        id: 'priceListEmptyRateDesc',\n    },\n    priceListNumberRate: {\n        defaultMessage: 'Rate must be a number',\n        description: 'Rate must be a number',\n        id: 'priceListNumberRate',\n    },\n    priceListPosNumberRate: {\n        defaultMessage: 'Rate must be a positive number',\n        description: 'Rate must be a positive number',\n        id: 'PriceListPosNumberRate',\n    },\n    rate: {\n        defaultMessage: 'Rate',\n        description: 'Rate',\n        id: 'rate',\n    },\n    rawCostDescription: {\n        defaultMessage: 'The costs reported by a cloud provider without any cost model calculations applied.',\n        description: 'The costs reported by a cloud provider without any cost model calculations applied.',\n        id: 'rawCostDescription',\n    },\n    rawCostTitle: {\n        defaultMessage: 'Raw cost',\n        description: 'Raw cost',\n        id: 'rawCostTitle',\n    },\n    rbacErrorDescription: {\n        defaultMessage: 'There was a problem receiving user permissions. Refreshing this page may fix it. If it does not, please contact your admin.',\n        description: 'rbac error description',\n        id: 'rbacErrorDescription',\n    },\n    rbacErrorTitle: {\n        defaultMessage: 'Failed to get RBAC information',\n        description: 'RBAC error title',\n        id: 'rbacErrorTitle',\n    },\n    redHatStatusUrl: {\n        defaultMessage: 'https://status.redhat.com',\n        description: 'Red Hat status url for cloud services',\n        id: 'redHatStatusUrl',\n    },\n    requests: {\n        defaultMessage: 'Requests',\n        description: 'Requests',\n        id: 'requests',\n    },\n    save: {\n        defaultMessage: 'Save',\n        description: 'Save',\n        id: 'save',\n    },\n    select: {\n        defaultMessage: 'Select...',\n        description: 'Select...',\n        id: 'select',\n    },\n    selectAll: {\n        defaultMessage: 'Select all',\n        description: 'Select all',\n        id: 'selectAll',\n    },\n    selected: {\n        defaultMessage: '{value} selected',\n        description: '{value} selected',\n        id: 'selected',\n    },\n    sinceDate: {\n        defaultMessage: '{month, select, ' +\n            '0 {{count, plural, one {January {startDate}} other {January {startDate}-{endDate}}}} ' +\n            '1 {{count, plural, one {February {startDate}} other {February {startDate}-{endDate}}}} ' +\n            '2 {{count, plural, one {March {startDate}} other {March {startDate}-{endDate}}}} ' +\n            '3 {{count, plural, one {April {startDate}} other {April {startDate}-{endDate}}}} ' +\n            '4 {{count, plural, one {May {startDate}} other {May {startDate}-{endDate}}}} ' +\n            '5 {{count, plural, one {June {startDate}} other {June {startDate}-{endDate}}}} ' +\n            '6 {{count, plural, one {July {startDate}} other {July {startDate}-{endDate}}}} ' +\n            '7 {{count, plural, one {August {startDate}} other {August {startDate}-{endDate}}}} ' +\n            '8 {{count, plural, one {September {startDate}} other {September {startDate}-{endDate}}}} ' +\n            '9 {{count, plural, one {October {startDate}} other {October {startDate}-{endDate}}}} ' +\n            '10 {{count, plural, one {November {startDate}} other {November {startDate}-{endDate}}}} ' +\n            '11 {{count, plural, one {December {startDate}} other {December {startDate}-{endDate}}}} ' +\n            'other {}}',\n        description: 'Monthly date range',\n        id: 'sinceDate',\n    },\n    sources: {\n        defaultMessage: 'Sources',\n        description: 'Sources',\n        id: 'sources',\n    },\n    status: {\n        defaultMessage: '{value, select, ' + 'pending {Pending} ' + 'running {Running} ' + 'failed {Failed} ' + 'other {}}',\n        description: 'Status',\n        id: 'status',\n    },\n    statusActions: {\n        defaultMessage: 'Status/Actions',\n        description: 'Status/Actions',\n        id: 'statusActions',\n    },\n    suggestions: {\n        defaultMessage: 'Suggestions',\n        description: 'Suggestions',\n        id: 'suggestions',\n    },\n    supplementary: {\n        defaultMessage: 'Supplementary',\n        description: 'Supplementary',\n        id: 'supplementary',\n    },\n    tagHeadingKey: {\n        defaultMessage: 'Key',\n        description: 'Key',\n        id: 'tagHeadingKey',\n    },\n    tagHeadingTitle: {\n        defaultMessage: 'Tags ({value})',\n        description: 'Tags ({value})',\n        id: 'tagHeadingTitle',\n    },\n    tagHeadingValue: {\n        defaultMessage: 'Value',\n        description: 'Value',\n        id: 'tagHeadingValue',\n    },\n    tagNames: {\n        defaultMessage: 'Tag names',\n        description: 'Tag Names',\n        id: 'tagNames',\n    },\n    timeOfExport: {\n        defaultMessage: 'Time of export',\n        description: 'Time of export',\n        id: 'timeOfExport',\n    },\n    toolBarBulkSelectAll: {\n        defaultMessage: 'Select all ({value} items)',\n        description: 'Select all ({value} items)',\n        id: 'toolBarBulkSelectAll',\n    },\n    toolBarBulkSelectAriaDeselect: {\n        defaultMessage: 'Deselect all items',\n        description: 'Deselect all items',\n        id: 'toolBarBulkSelectAriaDeselect',\n    },\n    toolBarBulkSelectAriaSelect: {\n        defaultMessage: 'Select all items',\n        description: 'Select all items',\n        id: 'toolBarBulkSelectAriaSelect',\n    },\n    toolBarBulkSelectNone: {\n        defaultMessage: 'Select none (0 items)',\n        description: 'Select none (0 items)',\n        id: 'toolBarBulkSelectNone',\n    },\n    toolBarBulkSelectPage: {\n        defaultMessage: 'Select page ({value} items)',\n        description: 'Select page ({value} items)',\n        id: 'toolBarBulkSelectPage',\n    },\n    toolBarPriceListMeasurementPlaceHolder: {\n        defaultMessage: 'Filter by measurements',\n        description: 'Filter by measurements',\n        id: 'toolBarPriceListMeasurementPlaceHolder',\n    },\n    toolBarPriceListMetricPlaceHolder: {\n        defaultMessage: 'Filter by metrics',\n        description: 'Filter by metrics',\n        id: 'toolBarPriceListMetricPlaceHolder',\n    },\n    unitTooltips: {\n        defaultMessage: '{units, select, ' +\n            'core_hours {{value} core-hours} ' +\n            'gb {{value} GB} ' +\n            'gb_hours {{value} GB-hours} ' +\n            'gb_mo {{value} GB-month} ' +\n            'gibibyte_month {{value} GiB-month} ' +\n            'hour {{value} hours} ' +\n            'hrs {{value} hours} ' +\n            'vm_hours {{value} VM-hours} ' +\n            'other {{value}}}',\n        description: 'return value and unit based on key: \"units\"',\n        id: 'unitTooltips',\n    },\n    units: {\n        defaultMessage: '{units, select, ' +\n            'core_hours {core-hours} ' +\n            'gb {GB} ' +\n            'gb_hours {GB-hours} ' +\n            'gb_mo {GB-month} ' +\n            'gibibyte_month {GiB-month} ' +\n            'hour {hours} ' +\n            'hrs {hours} ' +\n            'vm_hours {VM-hours} ' +\n            'other {}}',\n        description: 'return the proper unit label based on key: \"units\"',\n        id: 'units',\n    },\n    usage: {\n        defaultMessage: 'Usage',\n        description: 'Usage',\n        id: 'usage',\n    },\n    usageCostDescription: {\n        defaultMessage: 'The portion of cost calculated by applying hourly and/or monthly price list rates to metrics.',\n        description: 'The portion of cost calculated by applying hourly and/or monthly price list rates to metrics.',\n        id: 'usageCostDescription',\n    },\n    usageCostTitle: {\n        defaultMessage: 'Usage cost',\n        description: 'Usage cost',\n        id: 'usageCostTitle',\n    },\n    various: {\n        defaultMessage: 'Various',\n        description: 'Various',\n        id: 'various',\n    },\n    yes: {\n        defaultMessage: 'Yes',\n        description: 'Yes',\n        id: 'yes',\n    },\n});\n","import { asyncComponent } from 'components/async';\nimport { permissionsComponent } from 'components/permissions';\nimport React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nconst NotFound = asyncComponent(() => import(/* webpackChunkName: \"notFound\" */ 'routes/state/notFound'));\nconst AwsBreakdown = asyncComponent(() => import(/* webpackChunkName: \"aws\" */ 'routes/views/details/awsBreakdown'));\nconst AwsDetails = asyncComponent(() => import(/* webpackChunkName: \"aws\" */ 'routes/views/details/awsDetails'));\nconst AzureBreakdown = asyncComponent(() => import(/* webpackChunkName: \"azure\" */ 'routes/views/details/azureBreakdown'));\nconst OciBreakdown = asyncComponent(() => import(/* webpackChunkName: \"oci\" */ 'routes/views/details/ociBreakdown'));\nconst AzureDetails = asyncComponent(() => import(/* webpackChunkName: \"azure\" */ 'routes/views/details/azureDetails'));\nconst OciDetails = asyncComponent(() => import(/* webpackChunkName: \"oci\" */ 'routes/views/details/ociDetails'));\nconst Explorer = asyncComponent(() => import(/* webpackChunkName: \"explorer\" */ 'routes/views/explorer'));\nconst GcpBreakdown = asyncComponent(() => import(/* webpackChunkName: \"gcp\" */ 'routes/views/details/gcpBreakdown'));\nconst GcpDetails = asyncComponent(() => import(/* webpackChunkName: \"gcp\" */ 'routes/views/details/gcpDetails'));\nconst IbmBreakdown = asyncComponent(() => import(/* webpackChunkName: \"ibm\" */ 'routes/views/details/ibmBreakdown'));\nconst IbmDetails = asyncComponent(() => import(/* webpackChunkName: \"ibm\" */ 'routes/views/details/ibmDetails'));\nconst OcpDetails = asyncComponent(() => import(/* webpackChunkName: \"ocp\" */ 'routes/views/details/ocpDetails'));\nconst OcpBreakdown = asyncComponent(() => import(/* webpackChunkName: \"ocp\" */ 'routes/views/details/ocpBreakdown'));\nconst Overview = asyncComponent(() => import(/* webpackChunkName: \"overview\" */ 'routes/views/overview'));\nconst CostModelsDetails = asyncComponent(() => import(/* webpackChunkName: \"costModels\" */ 'routes/costModels/costModelsDetails'));\n// import(/* webpackChunkName: \"costModels\" */ './routes/costModels/costModelList')\nconst CostModel = asyncComponent(() => import(/* webpackChunkName: \"costModel\" */ 'routes/costModels/costModel'));\n// For syncing with permissions\nconst paths = {\n    awsDetails: '/aws',\n    awsDetailsBreakdown: '/aws/breakdown',\n    azureDetails: '/azure',\n    azureDetailsBreakdown: '/azure/breakdown',\n    costModels: '/cost-models',\n    explorer: '/explorer',\n    gcpDetails: '/gcp',\n    gcpDetailsBreakdown: '/gcp/breakdown',\n    ibmDetails: '/ibm',\n    ibmDetailsBreakdown: '/ibm/breakdown',\n    ociDetails: '/oci',\n    ociDetailsBreakdown: '/oci/breakdown',\n    ocpDetails: '/ocp',\n    ocpDetailsBreakdown: '/ocp/breakdown',\n    overview: '/',\n};\nconst routes = [\n    {\n        path: paths.overview,\n        labelKey: 'cost_management_overview',\n        component: permissionsComponent(Overview),\n        exact: true,\n    },\n    {\n        path: paths.costModels,\n        labelKey: 'navigation.cost_models',\n        component: permissionsComponent(CostModelsDetails),\n        exact: true,\n    },\n    {\n        path: `${paths.costModels}/:uuid`,\n        labelKey: 'navigation.cost_models',\n        component: permissionsComponent(CostModel),\n        exact: true,\n    },\n    {\n        path: paths.awsDetails,\n        labelKey: 'navigation.aws_details',\n        component: permissionsComponent(AwsDetails),\n        exact: true,\n    },\n    {\n        path: paths.awsDetailsBreakdown,\n        labelKey: 'navigation.aws_details_breakdown',\n        component: permissionsComponent(AwsBreakdown),\n        exact: true,\n    },\n    {\n        path: paths.azureDetails,\n        labelKey: 'navigation.azure_details',\n        component: permissionsComponent(AzureDetails),\n        exact: true,\n    },\n    {\n        path: paths.azureDetailsBreakdown,\n        labelKey: 'navigation.azure_details_breakdown',\n        component: permissionsComponent(AzureBreakdown),\n        exact: true,\n    },\n    {\n        path: paths.ociDetails,\n        labelKey: 'navigation.oci_details',\n        component: permissionsComponent(OciDetails),\n        exact: true,\n    },\n    {\n        path: paths.ociDetailsBreakdown,\n        labelKey: 'navigation.oci_details_breakdown',\n        component: permissionsComponent(OciBreakdown),\n        exact: true,\n    },\n    {\n        path: paths.explorer,\n        labelKey: 'navigation.explorer',\n        component: permissionsComponent(Explorer),\n        exact: true,\n    },\n    {\n        path: paths.gcpDetails,\n        labelKey: 'navigation.gcp_details',\n        component: permissionsComponent(GcpDetails),\n        exact: true,\n    },\n    {\n        path: paths.gcpDetailsBreakdown,\n        labelKey: 'navigation.gcp_details_breakdown',\n        component: permissionsComponent(GcpBreakdown),\n        exact: true,\n    },\n    {\n        path: paths.ibmDetails,\n        labelKey: 'navigation.ibm_details',\n        component: permissionsComponent(IbmDetails),\n        exact: true,\n    },\n    {\n        path: paths.ibmDetailsBreakdown,\n        labelKey: 'navigation.ibm_details_breakdown',\n        component: permissionsComponent(IbmBreakdown),\n        exact: true,\n    },\n    {\n        path: paths.ocpDetails,\n        labelKey: 'navigation.ocp_details',\n        component: permissionsComponent(OcpDetails),\n        exact: true,\n    },\n    {\n        path: paths.ocpDetailsBreakdown,\n        labelKey: 'navigation.ocp_details_breakdown',\n        component: permissionsComponent(OcpBreakdown),\n        exact: true,\n    },\n];\nconst Routes = () => (React.createElement(Switch, null,\n    routes.map(route => (React.createElement(Route, Object.assign({ key: route.path }, route)))),\n    React.createElement(Route, { component: NotFound })));\nexport { paths, Routes, routes };\n","import { EmptyState, EmptyStateBody, EmptyStateVariant, Spinner, Title } from '@patternfly/react-core';\nimport { intl as defaultIntl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { injectIntl } from 'react-intl';\n// defaultIntl required for testing\nconst LoadingStateBase = ({ intl = defaultIntl }) => {\n    const title = intl.formatMessage(messages.loadingStateTitle);\n    const subTitle = intl.formatMessage(messages.loadingStateDesc);\n    return (React.createElement(EmptyState, { variant: EmptyStateVariant.large, className: \"pf-m-redhat-font\" },\n        React.createElement(Spinner, { size: \"lg\" }),\n        React.createElement(Title, { headingLevel: \"h5\", size: \"lg\" }, title),\n        React.createElement(EmptyStateBody, null, subTitle)));\n};\nconst LoadingState = injectIntl(LoadingStateBase);\nexport { LoadingState };\n","export const parseApiError = error => {\n    if (error.response && error.response.data) {\n        if (error.response.data.Error) {\n            return error.response.data.Error;\n        }\n        if (error.response.data.errors) {\n            return error.response.data.errors.map(er => `${er.source}: ${er.detail}`).join(', ');\n        }\n    }\n    else if (error.message) {\n        return error.message;\n    }\n    return 'unknown';\n};\n","import Main from '@redhat-cloud-services/frontend-components/Main';\nimport PageHeader, { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { LoadingState } from 'routes/components/state/loadingState/loadingState';\nconst Loading = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(LoadingState, null))));\n};\nexport default withRouter(Loading);\n","import Loading from './loading';\nexport default Loading;\n","import Main from '@redhat-cloud-services/frontend-components/Main';\nimport PageHeader, { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Unavailable from '@redhat-cloud-services/frontend-components/Unavailable';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nconst NotAvailable = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(Unavailable, null))));\n};\nexport default withRouter(NotAvailable);\n","import NotAvailable from './notAvailable';\nexport default NotAvailable;\n","export const stateKey = 'accountSettings';\nexport const accountSettingsKey = 'accountSettings';\nexport function getReportId() {\n    return `accountSettings`;\n}\n","import { fetchAccountSettings as apiGetAccountSettings } from 'api/accountSettings';\nimport { createAction } from 'typesafe-actions';\nimport { getReportId } from './accountSettingsCommon';\nexport const fetchAccountSettingsRequest = createAction('accountSettings/fetch/request')();\nexport const fetchAccountSettingsSuccess = createAction('accountSettings/fetch/success')();\nexport const fetchAccountSettingsFailure = createAction('accountSettings/fetch/failure')();\nexport function fetchAccountSettings() {\n    return dispatch => {\n        const meta = {\n            reportId: getReportId(),\n        };\n        dispatch(fetchAccountSettingsRequest(meta));\n        return apiGetAccountSettings()\n            .then(res => {\n            dispatch(fetchAccountSettingsSuccess(res.data, meta));\n        })\n            .catch(err => {\n            dispatch(fetchAccountSettingsFailure(err, meta));\n        });\n    };\n}\n","import axios from 'axios';\nexport function fetchAccountSettings() {\n    const insights = window.insights;\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`account-settings/`);\n        });\n    }\n    else {\n        return axios.get(`account-settings/`);\n    }\n}\n","import { resetState } from 'store/ui/uiActions';\nimport { getType } from 'typesafe-actions';\nimport { invalidateSession, isCostTypeAvailable, isCurrencyAvailable, setAccountCurrency, setCostType, setCurrency, } from 'utils/localStorage';\nimport { fetchAccountSettingsFailure, fetchAccountSettingsRequest, fetchAccountSettingsSuccess, } from './accountSettingsActions';\nexport const defaultState = {\n    byId: new Map(),\n    errors: new Map(),\n    fetchStatus: new Map(),\n};\nexport function accountSettingsReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(fetchAccountSettingsRequest):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.payload.reportId, 1 /* inProgress */) });\n        case getType(fetchAccountSettingsSuccess):\n            initCostType(action.payload.data.cost_type);\n            initCurrency(action.payload.data.currency);\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.reportId, 2 /* complete */), byId: new Map(state.byId).set(action.meta.reportId, Object.assign({}, action.payload)), errors: new Map(state.errors).set(action.meta.reportId, null) });\n        case getType(fetchAccountSettingsFailure):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.reportId, 2 /* complete */), errors: new Map(state.errors).set(action.meta.reportId, action.payload) });\n        default:\n            return state;\n    }\n}\n// Initialize cost type in local storage\nfunction initCostType(value) {\n    // Clear local storage value if current session is not valid\n    invalidateSession();\n    if (!isCostTypeAvailable()) {\n        setCostType(value);\n    }\n}\n// Initialize currency in local storage\nfunction initCurrency(value) {\n    // Clear local storage value if current session is not valid\n    invalidateSession();\n    if (!isCurrencyAvailable()) {\n        setCurrency(value);\n    }\n    setAccountCurrency(value);\n}\n","import { getReportId, stateKey } from './accountSettingsCommon';\nexport const selectAccountSettingsState = (state) => state[stateKey];\n// Fetch account settings\nexport const selectAccountSettings = (state) => selectAccountSettingsState(state).byId.get(getReportId());\nexport const selectAccountSettingsFetchStatus = (state) => selectAccountSettingsState(state).fetchStatus.get(getReportId());\nexport const selectAccountSettingsError = (state) => selectAccountSettingsState(state).errors.get(getReportId());\n","export const awsCostOverviewStateKey = 'awsCostOverview';\n","import { tagPrefix } from 'api/queries/query';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const costWidget = {\n    id: getId(),\n    reportPathsType: \"ocp\" /* ocp */,\n    reportType: \"cost\" /* cost */,\n    type: \"cost\" /* cost */,\n};\nexport const accountSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'account',\n        showWidgetOnGroupBy: ['region', 'service', tagPrefix],\n    },\n    reportPathsType: \"aws\" /* aws */,\n    reportType: \"cost\" /* cost */,\n    type: \"summary\" /* reportSummary */,\n};\nexport const regionSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'region',\n        showWidgetOnGroupBy: ['account', 'service', tagPrefix],\n    },\n    reportPathsType: \"aws\" /* aws */,\n    reportType: \"cost\" /* cost */,\n    type: \"summary\" /* reportSummary */,\n};\nexport const serviceSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'service',\n        showWidgetOnGroupBy: ['region', 'account', tagPrefix],\n    },\n    reportPathsType: \"aws\" /* aws */,\n    reportType: \"cost\" /* cost */,\n    type: \"summary\" /* reportSummary */,\n};\n","import { accountSummaryWidget, costWidget, regionSummaryWidget, serviceSummaryWidget } from './awsCostOverviewWidgets';\nexport const defaultState = {\n    currentWidgets: [costWidget.id, accountSummaryWidget.id, serviceSummaryWidget.id, regionSummaryWidget.id],\n    widgets: {\n        [costWidget.id]: costWidget,\n        [accountSummaryWidget.id]: accountSummaryWidget,\n        [serviceSummaryWidget.id]: serviceSummaryWidget,\n        [regionSummaryWidget.id]: regionSummaryWidget,\n    },\n};\nexport function awsCostOverviewReducer(state = defaultState) {\n    return state;\n}\n","import { awsCostOverviewStateKey } from './awsCostOverviewCommon';\nexport const selectAwsCostOverviewState = (state) => state[awsCostOverviewStateKey];\nexport const selectWidgets = (state) => selectAwsCostOverviewState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectAwsCostOverviewState(state).currentWidgets;\n","export const azureCostOverviewStateKey = 'azureCostOverview';\n","import { tagPrefix } from 'api/queries/query';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const costWidget = {\n    id: getId(),\n    reportPathsType: \"ocp\" /* ocp */,\n    reportType: \"cost\" /* cost */,\n    type: \"cost\" /* cost */,\n};\nexport const accountSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'subscription_guid',\n        showWidgetOnGroupBy: ['resource_location', 'service_name', tagPrefix],\n    },\n    reportPathsType: \"azure\" /* azure */,\n    reportType: \"cost\" /* cost */,\n    type: \"summary\" /* reportSummary */,\n};\nexport const regionSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'resource_location',\n        showWidgetOnGroupBy: ['subscription_guid', 'service_name', tagPrefix],\n    },\n    reportPathsType: \"azure\" /* azure */,\n    reportType: \"cost\" /* cost */,\n    type: \"summary\" /* reportSummary */,\n};\nexport const serviceSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'service_name',\n        showWidgetOnGroupBy: ['resource_location', 'subscription_guid', tagPrefix],\n    },\n    reportPathsType: \"azure\" /* azure */,\n    reportType: \"cost\" /* cost */,\n    type: \"summary\" /* reportSummary */,\n};\n","import { accountSummaryWidget, costWidget, regionSummaryWidget, serviceSummaryWidget, } from './azureCostOverviewWidgets';\nexport const defaultState = {\n    currentWidgets: [costWidget.id, accountSummaryWidget.id, serviceSummaryWidget.id, regionSummaryWidget.id],\n    widgets: {\n        [costWidget.id]: costWidget,\n        [accountSummaryWidget.id]: accountSummaryWidget,\n        [serviceSummaryWidget.id]: serviceSummaryWidget,\n        [regionSummaryWidget.id]: regionSummaryWidget,\n    },\n};\nexport function azureCostOverviewReducer(state = defaultState) {\n    return state;\n}\n","import { azureCostOverviewStateKey } from './azureCostOverviewCommon';\nexport const selectAzureCostOverviewState = (state) => state[azureCostOverviewStateKey];\nexport const selectWidgets = (state) => selectAzureCostOverviewState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectAzureCostOverviewState(state).currentWidgets;\n","export const gcpCostOverviewStateKey = 'gcpCostOverview';\n","import { tagPrefix } from 'api/queries/query';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const costWidget = {\n    id: getId(),\n    reportPathsType: \"ocp\" /* ocp */,\n    reportType: \"cost\" /* cost */,\n    type: \"cost\" /* cost */,\n};\nexport const accountSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'account',\n        showWidgetOnGroupBy: ['gcp_project', 'region', 'service', tagPrefix],\n    },\n    reportPathsType: \"gcp\" /* gcp */,\n    reportType: \"cost\" /* cost */,\n    type: \"summary\" /* reportSummary */,\n};\nexport const projectSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'gcp_project',\n        showWidgetOnGroupBy: ['account', 'region', 'service', tagPrefix],\n    },\n    reportPathsType: \"gcp\" /* gcp */,\n    reportType: \"cost\" /* cost */,\n    type: \"summary\" /* reportSummary */,\n};\nexport const regionSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'region',\n        showWidgetOnGroupBy: ['account', 'gcp_project', 'service', tagPrefix],\n    },\n    reportPathsType: \"gcp\" /* gcp */,\n    reportType: \"cost\" /* cost */,\n    type: \"summary\" /* reportSummary */,\n};\nexport const serviceSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'service',\n        showWidgetOnGroupBy: ['gcp_project', 'region', 'account', tagPrefix],\n    },\n    reportPathsType: \"gcp\" /* gcp */,\n    reportType: \"cost\" /* cost */,\n    type: \"summary\" /* reportSummary */,\n};\n","import { accountSummaryWidget, costWidget, projectSummaryWidget, regionSummaryWidget, serviceSummaryWidget, } from './gcpCostOverviewWidgets';\nexport const defaultState = {\n    currentWidgets: [\n        costWidget.id,\n        accountSummaryWidget.id,\n        projectSummaryWidget.id,\n        serviceSummaryWidget.id,\n        regionSummaryWidget.id,\n    ],\n    widgets: {\n        [costWidget.id]: costWidget,\n        [accountSummaryWidget.id]: accountSummaryWidget,\n        [projectSummaryWidget.id]: projectSummaryWidget,\n        [serviceSummaryWidget.id]: serviceSummaryWidget,\n        [regionSummaryWidget.id]: regionSummaryWidget,\n    },\n};\nexport function gcpCostOverviewReducer(state = defaultState) {\n    return state;\n}\n","import { gcpCostOverviewStateKey } from './gcpCostOverviewCommon';\nexport const selectGcpCostOverviewState = (state) => state[gcpCostOverviewStateKey];\nexport const selectWidgets = (state) => selectGcpCostOverviewState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectGcpCostOverviewState(state).currentWidgets;\n","export const ibmCostOverviewStateKey = 'ibmCostOverview';\n","import { tagPrefix } from 'api/queries/query';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const costWidget = {\n    id: getId(),\n    reportPathsType: \"ocp\" /* ocp */,\n    reportType: \"cost\" /* cost */,\n    type: \"cost\" /* cost */,\n};\nexport const accountSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'account',\n        showWidgetOnGroupBy: ['project', 'region', 'service', tagPrefix],\n    },\n    reportPathsType: \"gcp\" /* ibm */,\n    reportType: \"cost\" /* cost */,\n    type: \"summary\" /* reportSummary */,\n};\nexport const projectSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'project',\n        showWidgetOnGroupBy: ['account', 'region', 'service', tagPrefix],\n    },\n    reportPathsType: \"gcp\" /* ibm */,\n    reportType: \"cost\" /* cost */,\n    type: \"summary\" /* reportSummary */,\n};\nexport const regionSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'region',\n        showWidgetOnGroupBy: ['account', 'project', 'service', tagPrefix],\n    },\n    reportPathsType: \"gcp\" /* ibm */,\n    reportType: \"cost\" /* cost */,\n    type: \"summary\" /* reportSummary */,\n};\nexport const serviceSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'service',\n        showWidgetOnGroupBy: ['project', 'region', 'account', tagPrefix],\n    },\n    reportPathsType: \"gcp\" /* ibm */,\n    reportType: \"cost\" /* cost */,\n    type: \"summary\" /* reportSummary */,\n};\n","import { accountSummaryWidget, costWidget, projectSummaryWidget, regionSummaryWidget, serviceSummaryWidget, } from './ibmCostOverviewWidgets';\nexport const defaultState = {\n    currentWidgets: [\n        costWidget.id,\n        accountSummaryWidget.id,\n        projectSummaryWidget.id,\n        serviceSummaryWidget.id,\n        regionSummaryWidget.id,\n    ],\n    widgets: {\n        [costWidget.id]: costWidget,\n        [accountSummaryWidget.id]: accountSummaryWidget,\n        [projectSummaryWidget.id]: projectSummaryWidget,\n        [serviceSummaryWidget.id]: serviceSummaryWidget,\n        [regionSummaryWidget.id]: regionSummaryWidget,\n    },\n};\nexport function ibmCostOverviewReducer(state = defaultState) {\n    return state;\n}\n","import { ibmCostOverviewStateKey } from './ibmCostOverviewCommon';\nexport const selectIbmCostOverviewState = (state) => state[ibmCostOverviewStateKey];\nexport const selectWidgets = (state) => selectIbmCostOverviewState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectIbmCostOverviewState(state).currentWidgets;\n","export const ociCostOverviewStateKey = 'ociCostOverview';\n","import { tagPrefix } from 'api/queries/query';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const costWidget = {\n    id: getId(),\n    reportPathsType: \"ocp\" /* ocp */,\n    reportType: \"cost\" /* cost */,\n    type: \"cost\" /* cost */,\n};\nexport const accountSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'payer_tenant_id',\n        showWidgetOnGroupBy: ['region', 'product_service', tagPrefix],\n    },\n    reportPathsType: \"oci\" /* oci */,\n    reportType: \"cost\" /* cost */,\n    type: \"summary\" /* reportSummary */,\n};\nexport const regionSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'region',\n        showWidgetOnGroupBy: ['payer_tenant_id', 'product_service', tagPrefix],\n    },\n    reportPathsType: \"oci\" /* oci */,\n    reportType: \"cost\" /* cost */,\n    type: \"summary\" /* reportSummary */,\n};\nexport const serviceSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'product_service',\n        showWidgetOnGroupBy: ['region', 'payer_tenant_id', tagPrefix],\n    },\n    reportPathsType: \"oci\" /* oci */,\n    reportType: \"cost\" /* cost */,\n    type: \"summary\" /* reportSummary */,\n};\n","import { accountSummaryWidget, costWidget, regionSummaryWidget, serviceSummaryWidget } from './ociCostOverviewWidgets';\nexport const defaultState = {\n    currentWidgets: [costWidget.id, accountSummaryWidget.id, serviceSummaryWidget.id, regionSummaryWidget.id],\n    widgets: {\n        [costWidget.id]: costWidget,\n        [accountSummaryWidget.id]: accountSummaryWidget,\n        [serviceSummaryWidget.id]: serviceSummaryWidget,\n        [regionSummaryWidget.id]: regionSummaryWidget,\n    },\n};\nexport function ociCostOverviewReducer(state = defaultState) {\n    return state;\n}\n","import { ociCostOverviewStateKey } from './ociCostOverviewCommon';\nexport const selectOciCostOverviewState = (state) => state[ociCostOverviewStateKey];\nexport const selectWidgets = (state) => selectOciCostOverviewState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectOciCostOverviewState(state).currentWidgets;\n","export const ocpCostOverviewStateKey = 'ocpCostOverview';\n","let currrentId = 0;\nconst getId = () => currrentId++;\nexport const clusterWidget = {\n    id: getId(),\n    cluster: {\n        reportGroupBy: 'project',\n        showWidgetOnGroupBy: ['project'],\n    },\n    reportPathsType: \"ocp\" /* ocp */,\n    reportType: \"cost\" /* cost */,\n    type: \"cluster\" /* cluster */,\n};\nexport const costWidget = {\n    id: getId(),\n    reportPathsType: \"ocp\" /* ocp */,\n    reportType: \"cost\" /* cost */,\n    type: \"cost\" /* cost */,\n};\nexport const cpuUsageWidget = {\n    id: getId(),\n    usage: {\n        showCapacityOnGroupBy: ['cluster'],\n    },\n    reportPathsType: \"ocp\" /* ocp */,\n    reportType: \"cpu\" /* cpu */,\n    type: \"cpuUsage\" /* cpuUsage */,\n};\nexport const memoryUsageWidget = {\n    id: getId(),\n    usage: {\n        showCapacityOnGroupBy: ['cluster'],\n    },\n    reportPathsType: \"ocp\" /* ocp */,\n    reportType: \"memory\" /* memory */,\n    type: \"memoryUsage\" /* memoryUsage */,\n};\nexport const projectSummaryWidget = {\n    id: getId(),\n    reportSummary: {\n        reportGroupBy: 'project',\n        showWidgetOnGroupBy: ['cluster'],\n        usePlaceholder: true,\n    },\n    reportType: \"cost\" /* cost */,\n    reportPathsType: \"ocp\" /* ocp */,\n    type: \"summary\" /* reportSummary */,\n};\n","import { clusterWidget, costWidget, cpuUsageWidget, memoryUsageWidget, projectSummaryWidget, } from './ocpCostOverviewWidgets';\nexport const defaultState = {\n    currentWidgets: [costWidget.id, clusterWidget.id, projectSummaryWidget.id, cpuUsageWidget.id, memoryUsageWidget.id],\n    widgets: {\n        [costWidget.id]: costWidget,\n        [clusterWidget.id]: clusterWidget,\n        [projectSummaryWidget.id]: projectSummaryWidget,\n        [cpuUsageWidget.id]: cpuUsageWidget,\n        [memoryUsageWidget.id]: memoryUsageWidget,\n    },\n};\nexport function ocpCostOverviewReducer(state = defaultState) {\n    return state;\n}\n","import { ocpCostOverviewStateKey } from './ocpCostOverviewCommon';\nexport const selectOcpCostOverviewState = (state) => state[ocpCostOverviewStateKey];\nexport const selectWidgets = (state) => selectOcpCostOverviewState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectOcpCostOverviewState(state).currentWidgets;\n","export const awsHistoricalDataStateKey = 'awsHistoricalData';\n","let currrentId = 0;\nconst getId = () => currrentId++;\nexport const costWidget = {\n    id: getId(),\n    reportPathsType: \"aws\" /* aws */,\n    reportType: \"cost\" /* cost */,\n    type: \"trend\" /* trend */,\n};\nexport const computeUsageWidget = {\n    id: getId(),\n    reportPathsType: \"aws\" /* aws */,\n    reportType: \"instance_type\" /* instanceType */,\n    type: \"usage\" /* usage */,\n};\nexport const storageUsageWidget = {\n    id: getId(),\n    reportPathsType: \"aws\" /* aws */,\n    reportType: \"storage\" /* storage */,\n    type: \"usage\" /* usage */,\n};\n","import { computeUsageWidget, costWidget, storageUsageWidget } from './awsHistoricalDataWidgets';\nexport const defaultState = {\n    currentWidgets: [costWidget.id, computeUsageWidget.id, storageUsageWidget.id],\n    widgets: {\n        [costWidget.id]: costWidget,\n        [computeUsageWidget.id]: computeUsageWidget,\n        [storageUsageWidget.id]: storageUsageWidget,\n    },\n};\nexport function awsHistoricalDataReducer(state = defaultState) {\n    return state;\n}\n","import { awsHistoricalDataStateKey } from './awsHistoricalDataCommon';\nexport const selectAwsHistoricalDataState = (state) => state[awsHistoricalDataStateKey];\nexport const selectWidgets = (state) => selectAwsHistoricalDataState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectAwsHistoricalDataState(state).currentWidgets;\n","export const azureHistoricalDataStateKey = 'azureHistoricalData';\n","let currrentId = 0;\nconst getId = () => currrentId++;\nexport const costWidget = {\n    id: getId(),\n    reportPathsType: \"azure\" /* azure */,\n    reportType: \"cost\" /* cost */,\n    type: \"trend\" /* trend */,\n};\nexport const computeUsageWidget = {\n    id: getId(),\n    reportPathsType: \"azure\" /* azure */,\n    reportType: \"instance_type\" /* instanceType */,\n    type: \"usage\" /* usage */,\n};\nexport const storageUsageWidget = {\n    id: getId(),\n    reportPathsType: \"azure\" /* azure */,\n    reportType: \"storage\" /* storage */,\n    type: \"usage\" /* usage */,\n};\n","import { computeUsageWidget, costWidget, storageUsageWidget } from './azureHistoricalDataWidgets';\nexport const defaultState = {\n    currentWidgets: [costWidget.id, computeUsageWidget.id, storageUsageWidget.id],\n    widgets: {\n        [costWidget.id]: costWidget,\n        [computeUsageWidget.id]: computeUsageWidget,\n        [storageUsageWidget.id]: storageUsageWidget,\n    },\n};\nexport function azureHistoricalDataReducer(state = defaultState) {\n    return state;\n}\n","import { azureHistoricalDataStateKey } from './azureHistoricalDataCommon';\nexport const selectAzureHistoricalDataState = (state) => state[azureHistoricalDataStateKey];\nexport const selectWidgets = (state) => selectAzureHistoricalDataState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectAzureHistoricalDataState(state).currentWidgets;\n","export const gcpHistoricalDataStateKey = 'gcpHistoricalData';\n","let currrentId = 0;\nconst getId = () => currrentId++;\nexport const costWidget = {\n    id: getId(),\n    reportPathsType: \"gcp\" /* gcp */,\n    reportType: \"cost\" /* cost */,\n    type: \"trend\" /* trend */,\n};\nexport const computeUsageWidget = {\n    id: getId(),\n    reportPathsType: \"gcp\" /* gcp */,\n    reportType: \"instance_type\" /* instanceType */,\n    type: \"trend\" /* trend */,\n};\nexport const storageUsageWidget = {\n    id: getId(),\n    reportPathsType: \"gcp\" /* gcp */,\n    reportType: \"storage\" /* storage */,\n    type: \"trend\" /* trend */,\n};\n","import { computeUsageWidget, costWidget, storageUsageWidget } from './gcpHistoricalDataWidgets';\nexport const defaultState = {\n    currentWidgets: [costWidget.id, computeUsageWidget.id, storageUsageWidget.id],\n    widgets: {\n        [costWidget.id]: costWidget,\n        [computeUsageWidget.id]: computeUsageWidget,\n        [storageUsageWidget.id]: storageUsageWidget,\n    },\n};\nexport function gcpHistoricalDataReducer(state = defaultState) {\n    return state;\n}\n","import { gcpHistoricalDataStateKey } from './gcpHistoricalDataCommon';\nexport const selectGcpHistoricalDataState = (state) => state[gcpHistoricalDataStateKey];\nexport const selectWidgets = (state) => selectGcpHistoricalDataState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectGcpHistoricalDataState(state).currentWidgets;\n","export const ibmHistoricalDataStateKey = 'ibmHistoricalData';\n","let currrentId = 0;\nconst getId = () => currrentId++;\nexport const costWidget = {\n    id: getId(),\n    reportPathsType: \"gcp\" /* ibm */,\n    reportType: \"cost\" /* cost */,\n    type: \"trend\" /* trend */,\n};\nexport const computeUsageWidget = {\n    id: getId(),\n    reportPathsType: \"gcp\" /* ibm */,\n    reportType: \"instance_type\" /* instanceType */,\n    type: \"trend\" /* trend */,\n};\nexport const storageUsageWidget = {\n    id: getId(),\n    reportPathsType: \"gcp\" /* ibm */,\n    reportType: \"storage\" /* storage */,\n    type: \"trend\" /* trend */,\n};\n","import { computeUsageWidget, costWidget, storageUsageWidget } from './ibmHistoricalDataWidgets';\nexport const defaultState = {\n    currentWidgets: [costWidget.id, computeUsageWidget.id, storageUsageWidget.id],\n    widgets: {\n        [costWidget.id]: costWidget,\n        [computeUsageWidget.id]: computeUsageWidget,\n        [storageUsageWidget.id]: storageUsageWidget,\n    },\n};\nexport function ibmHistoricalDataReducer(state = defaultState) {\n    return state;\n}\n","import { ibmHistoricalDataStateKey } from './ibmHistoricalDataCommon';\nexport const selectIbmHistoricalDataState = (state) => state[ibmHistoricalDataStateKey];\nexport const selectWidgets = (state) => selectIbmHistoricalDataState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectIbmHistoricalDataState(state).currentWidgets;\n","export const ociHistoricalDataStateKey = 'ociHistoricalData';\n","let currrentId = 0;\nconst getId = () => currrentId++;\nexport const costWidget = {\n    id: getId(),\n    reportPathsType: \"oci\" /* oci */,\n    reportType: \"cost\" /* cost */,\n    type: \"trend\" /* trend */,\n};\nexport const computeUsageWidget = {\n    id: getId(),\n    reportPathsType: \"oci\" /* oci */,\n    reportType: \"instance_type\" /* instanceType */,\n    type: \"usage\" /* usage */,\n};\nexport const storageUsageWidget = {\n    id: getId(),\n    reportPathsType: \"oci\" /* oci */,\n    reportType: \"storage\" /* storage */,\n    type: \"usage\" /* usage */,\n};\n","import { computeUsageWidget, costWidget, storageUsageWidget } from './ociHistoricalDataWidgets';\nexport const defaultState = {\n    currentWidgets: [costWidget.id, computeUsageWidget.id, storageUsageWidget.id],\n    widgets: {\n        [costWidget.id]: costWidget,\n        [computeUsageWidget.id]: computeUsageWidget,\n        [storageUsageWidget.id]: storageUsageWidget,\n    },\n};\nexport function ociHistoricalDataReducer(state = defaultState) {\n    return state;\n}\n","import { ociHistoricalDataStateKey } from './ociHistoricalDataCommon';\nexport const selectOciHistoricalDataState = (state) => state[ociHistoricalDataStateKey];\nexport const selectWidgets = (state) => selectOciHistoricalDataState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectOciHistoricalDataState(state).currentWidgets;\n","export const ocpHistoricalDataStateKey = 'ocpHistoricalData';\n","let currrentId = 0;\nconst getId = () => currrentId++;\nexport const costWidget = {\n    id: getId(),\n    reportPathsType: \"ocp\" /* ocp */,\n    reportType: \"cost\" /* cost */,\n    type: \"cost\" /* cost */,\n};\nexport const cpuUsageWidget = {\n    id: getId(),\n    reportPathsType: \"ocp\" /* ocp */,\n    reportType: \"cpu\" /* cpu */,\n    type: \"usage\" /* usage */,\n};\nexport const memoryUsageWidget = {\n    id: getId(),\n    reportPathsType: \"ocp\" /* ocp */,\n    reportType: \"memory\" /* memory */,\n    type: \"usage\" /* usage */,\n};\n","import { costWidget, cpuUsageWidget, memoryUsageWidget } from './ocpHistoricalDataWidgets';\nexport const defaultState = {\n    currentWidgets: [costWidget.id, cpuUsageWidget.id, memoryUsageWidget.id],\n    widgets: {\n        [costWidget.id]: costWidget,\n        [cpuUsageWidget.id]: cpuUsageWidget,\n        [memoryUsageWidget.id]: memoryUsageWidget,\n    },\n};\nexport function ocpHistoricalDataReducer(state = defaultState) {\n    return state;\n}\n","import { ocpHistoricalDataStateKey } from './ocpHistoricalDataCommon';\nexport const selectOcpHistoricalDataState = (state) => state[ocpHistoricalDataStateKey];\nexport const selectWidgets = (state) => selectOcpHistoricalDataState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectOcpHistoricalDataState(state).currentWidgets;\n","export const expirationMS = 30 * 60 * 1000; // 30 minutes\nexport function createMapStateToProps(mapStateToProps) {\n    return mapStateToProps;\n}\nexport function createMapDispatchToProps(mapDispatchToProps) {\n    return mapDispatchToProps;\n}\n","import { AlertVariant } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { deleteCostModel as apiDeleteCostModel, fetchCostModels as apiGetCostModels, updateCostModel as apiUpdateCostModel, } from 'api/costModels';\nimport { intl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport { createAction, createAsyncAction } from 'typesafe-actions';\nexport const updateFilterToolbar = createAction('fetch/costModels/filter')();\nexport const selectCostModel = createAction('select/costModels')();\nexport const resetCostModel = createAction('reset/costModels')();\nexport const setCostModelDialog = createAction('display/costModels/dialog')();\nexport const { request: fetchCostModelsRequest, success: fetchCostModelsSuccess, failure: fetchCostModelsFailure, } = createAsyncAction('fetch/costModels/request', 'fetch/costModels/success', 'fetch/costModels/failure')();\nexport const fetchCostModels = (query = '') => {\n    return (dispatch) => {\n        dispatch(fetchCostModelsRequest());\n        return apiGetCostModels(query)\n            .then(res => {\n            dispatch(fetchCostModelsSuccess(res));\n        })\n            .catch(err => {\n            dispatch(fetchCostModelsFailure(err));\n        });\n    };\n};\nexport const { request: updateCostModelsRequest, success: updateCostModelsSuccess, failure: updateCostModelsFailure, } = createAsyncAction('update/costModels/request', 'update/costModels/success', 'update/costModels/failure')();\nexport const updateCostModel = (uuid, request, dialog = null) => {\n    return (dispatch) => {\n        dispatch(updateCostModelsRequest());\n        return apiUpdateCostModel(uuid, request)\n            .then((res) => {\n            dispatch(updateCostModelsSuccess(res));\n            if (dialog !== null) {\n                fetchCostModels(`uuid=${uuid}`)(dispatch);\n                dispatch(setCostModelDialog({ name: dialog, isOpen: false }));\n            }\n        })\n            .catch(err => {\n            dispatch(updateCostModelsFailure(err));\n        });\n    };\n};\nexport const { request: deleteCostModelsRequest, success: deleteCostModelsSuccess, failure: deleteCostModelsFailure, } = createAsyncAction('delete/costModels/request', 'delete/costModels/success', 'delete/costModels/failure')();\nexport const deleteCostModel = (uuid, dialog = '', history = null) => {\n    return (dispatch) => {\n        dispatch(deleteCostModelsRequest());\n        return apiDeleteCostModel(uuid)\n            .then(() => {\n            dispatch(deleteCostModelsSuccess());\n            dispatch(resetCostModel());\n            fetchCostModels()(dispatch);\n            if (dialog !== null) {\n                if (dialog === 'deleteCostModel' && history) {\n                    history.push('/cost-models');\n                }\n                dispatch(setCostModelDialog({ name: dialog, isOpen: false }));\n            }\n        })\n            .catch(err => {\n            dispatch(deleteCostModelsFailure(err));\n        });\n    };\n};\nexport const redirectToCostModelFromSourceUuid = (source_uuid, history) => {\n    return (dispatch) => {\n        return apiGetCostModels(`source_uuid=${source_uuid}`)\n            .then(res => {\n            const uuid = res.data.data[0].uuid;\n            history.push(`/cost-models/${uuid}`);\n        })\n            .catch(() => {\n            dispatch(addNotification({\n                title: intl.formatMessage(messages.costModelsRouterErrorTitle),\n                description: intl.formatMessage(messages.costModelsRouterServerError),\n                variant: AlertVariant.danger,\n                dismissable: true,\n            }));\n        });\n    };\n};\n","import { getType } from 'typesafe-actions';\nimport { deleteCostModelsFailure, deleteCostModelsRequest, deleteCostModelsSuccess, fetchCostModelsFailure, fetchCostModelsRequest, fetchCostModelsSuccess, resetCostModel, selectCostModel, setCostModelDialog, updateCostModelsFailure, updateCostModelsRequest, updateCostModelsSuccess, updateFilterToolbar, } from './actions';\nexport const stateKey = 'costModels';\nexport const defaultState = {\n    costModels: null,\n    error: null,\n    status: 0 /* none */,\n    currentFilterType: 'name',\n    currentFilterValue: '',\n    isDialogOpen: {\n        deleteRate: false,\n        deleteSource: false,\n        addSource: false,\n        addRate: false,\n        updateRate: false,\n        deleteCostModel: false,\n        updateCostModel: false,\n        deleteMarkup: false,\n        updateMarkup: false,\n        deleteDistribution: false,\n        updateDistribution: false,\n        createWizard: false,\n    },\n    dialogData: null,\n    update: {\n        error: null,\n        status: 0 /* none */,\n        current: null,\n    },\n    delete: {\n        error: null,\n        status: 0 /* none */,\n    },\n};\nexport const reducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case getType(resetCostModel):\n            return Object.assign(Object.assign({}, state), { update: Object.assign(Object.assign({}, state.update), { current: null }) });\n        case getType(selectCostModel):\n            return Object.assign(Object.assign({}, state), { update: Object.assign(Object.assign({}, state.update), { current: action.payload }) });\n        case getType(updateCostModelsRequest):\n            return Object.assign(Object.assign({}, state), { update: Object.assign(Object.assign({}, state.update), { status: 1 /* inProgress */ }) });\n        case getType(updateCostModelsSuccess):\n            return Object.assign(Object.assign({}, state), { update: {\n                    error: null,\n                    status: 2 /* complete */,\n                    current: action.payload.data,\n                } });\n        case getType(updateCostModelsFailure):\n            return Object.assign(Object.assign({}, state), { update: Object.assign(Object.assign({}, state.update), { status: 2 /* complete */, error: action.payload }) });\n        case getType(fetchCostModelsRequest):\n            return Object.assign(Object.assign({}, state), { status: 1 /* inProgress */ });\n        case getType(fetchCostModelsSuccess):\n            return Object.assign(Object.assign({}, state), { currentFilterValue: '', status: 2 /* complete */, error: null, costModels: action.payload.data });\n        case getType(fetchCostModelsFailure):\n            return Object.assign(Object.assign({}, state), { status: 2 /* complete */, error: action.payload });\n        case getType(deleteCostModelsRequest):\n            return Object.assign(Object.assign({}, state), { delete: Object.assign(Object.assign({}, state.delete), { status: 1 /* inProgress */ }) });\n        case getType(deleteCostModelsSuccess):\n            return Object.assign(Object.assign({}, state), { delete: {\n                    error: null,\n                    status: 2 /* complete */,\n                } });\n        case getType(deleteCostModelsFailure):\n            return Object.assign(Object.assign({}, state), { delete: {\n                    status: 2 /* complete */,\n                    error: action.payload,\n                } });\n        case getType(updateFilterToolbar):\n            return Object.assign(Object.assign({}, state), action.payload);\n        case getType(setCostModelDialog):\n            return Object.assign(Object.assign({}, state), { isDialogOpen: Object.assign(Object.assign({}, state.isDialogOpen), { [action.payload.name]: action.payload.isOpen }), dialogData: action.payload.meta });\n        default:\n            return state;\n    }\n};\n","import { parseApiError } from 'routes/costModels/createCostModelWizard/parseError';\nimport { selectPagination } from 'store/djangoUtils/pagination';\nimport { selectQuery } from 'store/djangoUtils/query';\nimport { stateKey } from './reducer';\nexport const costModelsState = (state) => state[stateKey];\nexport const costModels = (state) => {\n    const cms = costModelsState(state).costModels;\n    if (cms) {\n        return cms.data;\n    }\n    return [];\n};\nexport const isDialogOpen = (state) => {\n    const dialogs = costModelsState(state).isDialogOpen;\n    return (type) => {\n        switch (type) {\n            case 'markup': {\n                const { deleteMarkup, updateMarkup } = dialogs;\n                return { deleteMarkup, updateMarkup };\n            }\n            case 'distribution': {\n                const { deleteDistribution, updateDistribution } = dialogs;\n                return { deleteDistribution, updateDistribution };\n            }\n            case 'costmodel': {\n                const { deleteCostModel, updateCostModel, createWizard } = dialogs;\n                return { deleteCostModel, updateCostModel, createWizard };\n            }\n            case 'sources': {\n                const { deleteSource, addSource } = dialogs;\n                return { deleteSource, addSource };\n            }\n            case 'rate': {\n                const { addRate, updateRate, deleteRate } = dialogs;\n                return { addRate, updateRate, deleteRate };\n            }\n            default:\n                return costModelsState(state).isDialogOpen;\n        }\n    };\n};\nexport const status = (state) => costModelsState(state).status;\nexport const error = (state) => costModelsState(state).error;\nexport const stateName = (state) => {\n    const costStatus = status(state);\n    const costError = error(state);\n    const costData = costModels(state);\n    const costQuery = query(state);\n    if (costStatus !== 2 /* complete */) {\n        return 'loading';\n    }\n    if (costError !== null) {\n        return 'failure';\n    }\n    if (costData.length > 0) {\n        return 'success';\n    }\n    const hasNoFilters = Object.keys(costQuery).every(key => {\n        switch (key) {\n            case 'currency':\n            case 'description':\n            case 'name':\n            case 'source_type':\n                return costQuery[key] === null;\n            default:\n                return true;\n        }\n    });\n    if (hasNoFilters) {\n        return 'empty';\n    }\n    return 'no-match';\n};\nexport const currentFilterValue = (state) => costModelsState(state).currentFilterValue;\nexport const currentFilterType = (state) => costModelsState(state).currentFilterType;\nexport const query = selectQuery((state) => costModelsState(state).costModels, ['ordering', 'name', 'source_type', 'currency', 'description', 'offset', 'limit']);\nexport const pagination = selectPagination((state) => costModelsState(state).costModels);\nexport const dialogData = (state) => costModelsState(state).dialogData;\nexport const updateProcessing = (state) => costModelsState(state).update.status === 1 /* inProgress */;\nexport const updateError = (state) => {\n    const updateErr = costModelsState(state).update.error;\n    if (updateErr === null) {\n        return '';\n    }\n    return parseApiError(updateErr);\n};\nexport const selected = (state) => {\n    return costModelsState(state).update.current;\n};\nexport const deleteProcessing = (state) => costModelsState(state).delete.status === 1 /* inProgress */;\nexport const deleteError = (state) => {\n    const err = costModelsState(state).delete.error;\n    if (err === null) {\n        return '';\n    }\n    return parseApiError(err);\n};\n","import { getQuery } from 'api/queries/awsQuery';\nimport { getCostType } from 'utils/costType';\nexport const awsDashboardStateKey = 'awsDashboard';\nexport const awsDashboardDefaultFilters = {\n    time_scope_units: 'month',\n    time_scope_value: -1,\n    resolution: 'daily',\n};\nexport const awsDashboardTabFilters = Object.assign(Object.assign({}, awsDashboardDefaultFilters), { limit: 3 });\nexport function getGroupByForTab(widget) {\n    switch (widget.currentTab) {\n        case \"services\" /* services */:\n            // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n            return {\n                service: widget.tabsFilter && widget.tabsFilter.service ? widget.tabsFilter.service : '*',\n            };\n        case \"accounts\" /* accounts */:\n            return { account: '*' };\n        case \"regions\" /* regions */:\n            return { region: '*' };\n        default:\n            return {};\n    }\n}\nexport function getQueryForWidget(widget, filter = awsDashboardDefaultFilters, props) {\n    const query = Object.assign(Object.assign({ filter }, (widget.savingsPlan && { cost_type: getCostType() })), (props ? props : {}));\n    return getQuery(query);\n}\nexport function getQueryForWidgetTabs(widget, filter = awsDashboardDefaultFilters, props) {\n    const group_by = getGroupByForTab(widget);\n    const newFilter = Object.assign({}, JSON.parse(JSON.stringify(filter)));\n    // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n    if (widget.currentTab === \"services\" /* services */ && widget.tabsFilter && widget.tabsFilter.service) {\n        newFilter.service = undefined;\n    }\n    const query = Object.assign(Object.assign(Object.assign({}, (widget.savingsPlan && { cost_type: getCostType() })), { filter: newFilter, group_by }), (props ? props : {}));\n    return getQuery(query);\n}\n","import { awsDashboardDefaultFilters, awsDashboardStateKey, awsDashboardTabFilters, getQueryForWidget, getQueryForWidgetTabs, } from './awsDashboardCommon';\nexport const selectAwsDashboardState = (state) => state[awsDashboardStateKey];\nexport const selectWidgets = (state) => selectAwsDashboardState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectAwsDashboardState(state).currentWidgets;\nexport const selectWidgetQueries = (state, id) => {\n    const widget = selectWidget(state, id);\n    const filter = Object.assign(Object.assign({}, awsDashboardDefaultFilters), (widget.filter ? widget.filter : {}));\n    const tabsFilter = Object.assign(Object.assign({}, awsDashboardTabFilters), (widget.tabsFilter ? widget.tabsFilter : {}));\n    return {\n        previous: getQueryForWidget(widget, Object.assign(Object.assign({}, filter), { time_scope_value: -2 })),\n        current: getQueryForWidget(widget, filter),\n        forecast: getQueryForWidget(widget, {}),\n        tabs: getQueryForWidgetTabs(widget, Object.assign(Object.assign({}, tabsFilter), { resolution: 'monthly' })),\n    };\n};\n","import { forecastActions } from 'store/forecasts';\nimport { reportActions } from 'store/reports';\nimport { createAction } from 'typesafe-actions';\nimport { selectWidget, selectWidgetQueries } from './awsDashboardSelectors';\nexport const fetchWidgetForecasts = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        if (widget.forecastPathsType && widget.forecastType) {\n            const { forecast } = selectWidgetQueries(state, id);\n            dispatch(forecastActions.fetchForecast(widget.forecastPathsType, widget.forecastType, forecast));\n        }\n    };\n};\nexport const fetchWidgetReports = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        const { previous, current, tabs } = selectWidgetQueries(state, id);\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, current));\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, previous));\n        if (widget.availableTabs) {\n            dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, tabs));\n        }\n    };\n};\nexport const setWidgetTab = createAction('awsDashboard/widget/tab')();\nexport const changeWidgetTab = (id, tab) => {\n    return dispatch => {\n        dispatch(setWidgetTab({ id, tab }));\n        dispatch(fetchWidgetReports(id));\n    };\n};\n","import messages from 'locales/messages';\nimport { paths } from 'routes';\nimport { formatCurrency, formatUnits } from 'utils/format';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const computeWidget = {\n    id: getId(),\n    titleKey: messages.awsComputeTitle,\n    reportPathsType: \"aws\" /* aws */,\n    reportType: \"instance_type\" /* instanceType */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    filter: {\n        service: 'AmazonEC2',\n    },\n    tabsFilter: {\n        service: 'AmazonEC2',\n    },\n    trend: {\n        computedReportItem: \"usage\" /* usage */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* trend */,\n};\nexport const costSummaryWidget = {\n    id: getId(),\n    titleKey: messages.awsDashboardCostTitle,\n    forecastPathsType: \"aws\" /* aws */,\n    forecastType: \"cost\" /* cost */,\n    reportPathsType: \"aws\" /* aws */,\n    reportType: \"cost\" /* cost */,\n    details: {\n        adjustContainerHeight: true,\n        costKey: messages.cost,\n        showHorizontal: true,\n        viewAllPath: paths.awsDetails,\n    },\n    tabsFilter: {\n        limit: 3,\n    },\n    trend: {\n        computedForecastItem: \"cost\" /* cost */,\n        computedReportItem: \"cost\" /* cost */,\n        computedReportItemValue: \"total\" /* total */,\n        dailyTitleKey: messages.awsDailyCostTrendTitle,\n        titleKey: messages.awsCostTrendTitle,\n        type: 0 /* rolling */,\n    },\n    availableTabs: [\"services\" /* services */, \"accounts\" /* accounts */, \"regions\" /* regions */],\n    chartFormatter: formatCurrency,\n    chartType: \"dailyTrend\" /* dailyTrend */,\n    currentTab: \"services\" /* services */,\n    savingsPlan: true,\n};\nexport const databaseWidget = {\n    id: getId(),\n    titleKey: messages.dashboardDatabaseTitle,\n    reportPathsType: \"aws\" /* aws */,\n    reportType: \"database\" /* database */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service: 'AmazonRDS,AmazonDynamoDB,AmazonElastiCache,AmazonNeptune,AmazonRedshift,AmazonDocumentDB',\n    },\n    tabsFilter: {\n        service: 'AmazonRDS,AmazonDynamoDB,AmazonElastiCache,AmazonNeptune,AmazonRedshift,AmazonDocumentDB',\n    },\n    trend: {\n        computedReportItem: \"cost\" /* cost */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* rolling */,\n    },\n    chartFormatter: formatCurrency,\n    chartType: \"trend\" /* trend */,\n    savingsPlan: true,\n};\nexport const networkWidget = {\n    id: getId(),\n    titleKey: messages.dashboardNetworkTitle,\n    reportPathsType: \"aws\" /* aws */,\n    reportType: \"network\" /* network */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service: 'AmazonVPC,AmazonCloudFront,AmazonRoute53,AmazonAPIGateway',\n    },\n    tabsFilter: {\n        service: 'AmazonVPC,AmazonCloudFront,AmazonRoute53,AmazonAPIGateway',\n    },\n    trend: {\n        computedReportItem: \"cost\" /* cost */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* rolling */,\n    },\n    chartFormatter: formatCurrency,\n    chartType: \"trend\" /* trend */,\n    savingsPlan: true,\n};\nexport const storageWidget = {\n    id: getId(),\n    titleKey: messages.dashboardStorageTitle,\n    reportPathsType: \"aws\" /* aws */,\n    reportType: \"storage\" /* storage */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    trend: {\n        computedReportItem: \"usage\" /* usage */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* trend */,\n};\n","import { getType } from 'typesafe-actions';\nimport { setWidgetTab } from './awsDashboardActions';\nimport { computeWidget, costSummaryWidget, databaseWidget, networkWidget, storageWidget } from './awsDashboardWidgets';\nexport const defaultState = {\n    currentWidgets: [costSummaryWidget.id, computeWidget.id, storageWidget.id, networkWidget.id, databaseWidget.id],\n    widgets: {\n        [costSummaryWidget.id]: costSummaryWidget,\n        [computeWidget.id]: computeWidget,\n        [databaseWidget.id]: databaseWidget,\n        [networkWidget.id]: networkWidget,\n        [storageWidget.id]: storageWidget,\n    },\n};\nexport function awsDashboardReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(setWidgetTab):\n            return Object.assign(Object.assign({}, state), { widgets: Object.assign(Object.assign({}, state.widgets), { [action.payload.id]: Object.assign(Object.assign({}, state.widgets[action.payload.id]), { currentTab: action.payload.tab }) }) });\n        default:\n            return state;\n    }\n}\n","import { getQuery } from 'api/queries/awsQuery';\nexport const awsOcpDashboardStateKey = 'awsOcpDashboard';\nexport const awsOcpDashboardDefaultFilters = {\n    time_scope_units: 'month',\n    time_scope_value: -1,\n    resolution: 'daily',\n};\nexport const awsOcpDashboardTabFilters = Object.assign(Object.assign({}, awsOcpDashboardDefaultFilters), { limit: 3 });\nexport function getGroupByForTab(widget) {\n    switch (widget.currentTab) {\n        case \"services\" /* services */:\n            // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n            return {\n                service: widget.tabsFilter && widget.tabsFilter.service ? widget.tabsFilter.service : '*',\n            };\n        case \"accounts\" /* accounts */:\n            return { account: '*' };\n        case \"regions\" /* regions */:\n            return { region: '*' };\n        default:\n            return {};\n    }\n}\nexport function getQueryForWidget(filter = awsOcpDashboardDefaultFilters, props) {\n    const query = Object.assign({ filter }, (props ? props : {}));\n    return getQuery(query);\n}\nexport function getQueryForWidgetTabs(widget, filter = awsOcpDashboardDefaultFilters) {\n    const group_by = getGroupByForTab(widget);\n    const newFilter = Object.assign({}, JSON.parse(JSON.stringify(filter)));\n    // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n    if (widget.currentTab === \"services\" /* services */ && widget.tabsFilter && widget.tabsFilter.service) {\n        newFilter.service = undefined;\n    }\n    const query = {\n        filter: newFilter,\n        group_by,\n    };\n    return getQuery(query);\n}\n","import { awsOcpDashboardDefaultFilters, awsOcpDashboardStateKey, awsOcpDashboardTabFilters, getQueryForWidget, getQueryForWidgetTabs, } from './awsOcpDashboardCommon';\nexport const selectAwsOcpDashboardState = (state) => state[awsOcpDashboardStateKey];\nexport const selectWidgets = (state) => selectAwsOcpDashboardState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectAwsOcpDashboardState(state).currentWidgets;\nexport const selectWidgetQueries = (state, id) => {\n    const widget = selectWidget(state, id);\n    const filter = Object.assign(Object.assign({}, awsOcpDashboardDefaultFilters), (widget.filter ? widget.filter : {}));\n    const tabsFilter = Object.assign(Object.assign({}, awsOcpDashboardTabFilters), (widget.tabsFilter ? widget.tabsFilter : {}));\n    return {\n        previous: getQueryForWidget(Object.assign(Object.assign({}, filter), { time_scope_value: -2 })),\n        current: getQueryForWidget(filter),\n        forecast: getQueryForWidget({}, { limit: 31 }),\n        tabs: getQueryForWidgetTabs(widget, Object.assign(Object.assign({}, tabsFilter), { resolution: 'monthly' })),\n    };\n};\n","import { forecastActions } from 'store/forecasts';\nimport { reportActions } from 'store/reports';\nimport { createAction } from 'typesafe-actions';\nimport { selectWidget, selectWidgetQueries } from './awsOcpDashboardSelectors';\nexport const fetchWidgetForecasts = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        if (widget.forecastPathsType && widget.forecastType) {\n            const { forecast } = selectWidgetQueries(state, id);\n            dispatch(forecastActions.fetchForecast(widget.forecastPathsType, widget.forecastType, forecast));\n        }\n    };\n};\nexport const fetchWidgetReports = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        const { previous, current, tabs } = selectWidgetQueries(state, id);\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, current));\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, previous));\n        if (widget.availableTabs) {\n            dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, tabs));\n        }\n    };\n};\nexport const setWidgetTab = createAction('awsOcpDashboard/widget/tab')();\nexport const changeWidgetTab = (id, tab) => {\n    return dispatch => {\n        dispatch(setWidgetTab({ id, tab }));\n        dispatch(fetchWidgetReports(id));\n    };\n};\n","import messages from 'locales/messages';\nimport { awsDashboardWidgets } from 'store/dashboard/awsDashboard';\nimport { formatCurrency, formatUnits } from 'utils/format';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const computeWidget = {\n    id: getId(),\n    titleKey: messages.awsComputeTitle,\n    reportPathsType: \"aws_ocp\" /* awsOcp */,\n    reportType: \"instance_type\" /* instanceType */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    filter: {\n        service: 'AmazonEC2',\n    },\n    tabsFilter: {\n        service: 'AmazonEC2',\n    },\n    trend: {\n        computedReportItem: \"usage\" /* usage */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* trend */,\n};\nexport const costSummaryWidget = {\n    id: getId(),\n    titleKey: messages.awsOcpDashboardCostTitle,\n    forecastPathsType: \"aws_ocp\" /* awsOcp */,\n    forecastType: \"cost\" /* cost */,\n    reportPathsType: \"aws_ocp\" /* awsOcp */,\n    reportType: \"cost\" /* cost */,\n    details: {\n        costKey: messages.cost,\n        showHorizontal: true,\n    },\n    tabsFilter: {\n        limit: 3,\n    },\n    trend: {\n        computedForecastItem: \"cost\" /* cost */,\n        computedReportItem: \"cost\" /* cost */,\n        computedReportItemValue: \"total\" /* total */,\n        dailyTitleKey: messages.awsDailyCostTrendTitle,\n        titleKey: messages.awsCostTrendTitle,\n        type: 0 /* rolling */,\n    },\n    availableTabs: [\"services\" /* services */, \"accounts\" /* accounts */, \"regions\" /* regions */],\n    chartFormatter: formatCurrency,\n    chartType: \"dailyTrend\" /* dailyTrend */,\n    currentTab: \"services\" /* services */,\n};\nexport const databaseWidget = {\n    id: getId(),\n    titleKey: messages.dashboardDatabaseTitle,\n    reportPathsType: \"aws_ocp\" /* awsOcp */,\n    reportType: \"database\" /* database */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service: awsDashboardWidgets.databaseWidget.filter.service,\n    },\n    tabsFilter: {\n        service: awsDashboardWidgets.databaseWidget.tabsFilter.service,\n    },\n    trend: {\n        computedReportItem: \"cost\" /* cost */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* rolling */,\n    },\n    chartFormatter: formatCurrency,\n    chartType: \"trend\" /* trend */,\n};\nexport const networkWidget = {\n    id: getId(),\n    titleKey: messages.dashboardNetworkTitle,\n    reportPathsType: \"aws_ocp\" /* awsOcp */,\n    reportType: \"network\" /* network */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service: awsDashboardWidgets.networkWidget.filter.service,\n    },\n    tabsFilter: {\n        service: awsDashboardWidgets.networkWidget.tabsFilter.service,\n    },\n    trend: {\n        computedReportItem: \"cost\" /* cost */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* rolling */,\n    },\n    chartFormatter: formatCurrency,\n    chartType: \"trend\" /* trend */,\n};\nexport const storageWidget = {\n    id: getId(),\n    titleKey: messages.dashboardStorageTitle,\n    reportPathsType: \"aws_ocp\" /* awsOcp */,\n    reportType: \"storage\" /* storage */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    trend: {\n        computedReportItem: \"usage\" /* usage */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* trend */,\n};\n","import { getType } from 'typesafe-actions';\nimport { setWidgetTab } from './awsOcpDashboardActions';\nimport { computeWidget, costSummaryWidget, databaseWidget, networkWidget, storageWidget, } from './awsOcpDashboardWidgets';\nexport const defaultState = {\n    currentWidgets: [costSummaryWidget.id, computeWidget.id, storageWidget.id, networkWidget.id, databaseWidget.id],\n    widgets: {\n        [costSummaryWidget.id]: costSummaryWidget,\n        [computeWidget.id]: computeWidget,\n        [databaseWidget.id]: databaseWidget,\n        [networkWidget.id]: networkWidget,\n        [storageWidget.id]: storageWidget,\n    },\n};\nexport function awsOcpDashboardReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(setWidgetTab):\n            return Object.assign(Object.assign({}, state), { widgets: Object.assign(Object.assign({}, state.widgets), { [action.payload.id]: Object.assign(Object.assign({}, state.widgets[action.payload.id]), { currentTab: action.payload.tab }) }) });\n        default:\n            return state;\n    }\n}\n","import { getQuery } from 'api/queries/azureQuery';\nexport const azureDashboardStateKey = 'azureDashboard';\nexport const azureDashboardDefaultFilters = {\n    time_scope_units: 'month',\n    time_scope_value: -1,\n    resolution: 'daily',\n};\nexport const azureDashboardTabFilters = Object.assign(Object.assign({}, azureDashboardDefaultFilters), { limit: 3 });\nexport function getGroupByForTab(widget) {\n    switch (widget.currentTab) {\n        case \"service_names\" /* service_names */:\n            // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n            return {\n                service_name: widget.tabsFilter && widget.tabsFilter.service_name ? widget.tabsFilter.service_name : '*',\n            };\n        case \"subscription_guids\" /* subscription_guids */:\n            return { subscription_guid: '*' };\n        case \"resource_locations\" /* resource_locations */:\n            return { resource_location: '*' };\n        default:\n            return {};\n    }\n}\nexport function getQueryForWidget(filter = azureDashboardDefaultFilters, props) {\n    const query = Object.assign({ filter }, (props ? props : {}));\n    return getQuery(query);\n}\nexport function getQueryForWidgetTabs(widget, filter = azureDashboardDefaultFilters) {\n    const group_by = getGroupByForTab(widget);\n    const newFilter = Object.assign({}, JSON.parse(JSON.stringify(filter)));\n    // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n    if (widget.currentTab === \"service_names\" /* service_names */ && widget.tabsFilter && widget.tabsFilter.service_name) {\n        newFilter.service = undefined;\n    }\n    const query = {\n        filter: newFilter,\n        group_by,\n    };\n    return getQuery(query);\n}\n","import { azureDashboardDefaultFilters, azureDashboardStateKey, azureDashboardTabFilters, getQueryForWidget, getQueryForWidgetTabs, } from './azureDashboardCommon';\nexport const selectAzureDashboardState = (state) => state[azureDashboardStateKey];\nexport const selectWidgets = (state) => selectAzureDashboardState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectAzureDashboardState(state).currentWidgets;\nexport const selectWidgetQueries = (state, id) => {\n    const widget = selectWidget(state, id);\n    const filter = Object.assign(Object.assign({}, azureDashboardDefaultFilters), (widget.filter ? widget.filter : {}));\n    const tabsFilter = Object.assign(Object.assign({}, azureDashboardTabFilters), (widget.tabsFilter ? widget.tabsFilter : {}));\n    return {\n        previous: getQueryForWidget(Object.assign(Object.assign({}, filter), { time_scope_value: -2 })),\n        current: getQueryForWidget(filter),\n        forecast: getQueryForWidget({}, { limit: 31 }),\n        tabs: getQueryForWidgetTabs(widget, Object.assign(Object.assign({}, tabsFilter), { resolution: 'monthly' })),\n    };\n};\n","import { forecastActions } from 'store/forecasts';\nimport { reportActions } from 'store/reports';\nimport { createAction } from 'typesafe-actions';\nimport { selectWidget, selectWidgetQueries } from './azureDashboardSelectors';\nexport const fetchWidgetForecasts = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        if (widget.forecastPathsType && widget.forecastType) {\n            const { forecast } = selectWidgetQueries(state, id);\n            dispatch(forecastActions.fetchForecast(widget.forecastPathsType, widget.forecastType, forecast));\n        }\n    };\n};\nexport const fetchWidgetReports = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        const { previous, current, tabs } = selectWidgetQueries(state, id);\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, current));\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, previous));\n        if (widget.availableTabs) {\n            dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, tabs));\n        }\n    };\n};\nexport const setWidgetTab = createAction('azureDashboard/widget/tab')();\nexport const changeWidgetTab = (id, tab) => {\n    return dispatch => {\n        dispatch(setWidgetTab({ id, tab }));\n        dispatch(fetchWidgetReports(id));\n    };\n};\n","import messages from 'locales/messages';\nimport { paths } from 'routes';\nimport { formatUnits } from 'utils/format';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const costSummaryWidget = {\n    id: getId(),\n    titleKey: messages.azureDashboardCostTitle,\n    forecastPathsType: \"azure\" /* azure */,\n    forecastType: \"cost\" /* cost */,\n    reportPathsType: \"azure\" /* azure */,\n    reportType: \"cost\" /* cost */,\n    details: {\n        adjustContainerHeight: true,\n        costKey: messages.cost,\n        showHorizontal: true,\n        viewAllPath: paths.azureDetails,\n    },\n    tabsFilter: {\n        limit: 3,\n    },\n    trend: {\n        computedForecastItem: \"cost\" /* cost */,\n        computedReportItem: \"cost\" /* cost */,\n        computedReportItemValue: \"total\" /* total */,\n        dailyTitleKey: messages.azureDailyCostTrendTitle,\n        titleKey: messages.azureCostTrendTitle,\n        type: 0 /* rolling */,\n    },\n    availableTabs: [\n        \"service_names\" /* service_names */,\n        \"subscription_guids\" /* subscription_guids */,\n        \"resource_locations\" /* resource_locations */,\n    ],\n    chartType: \"dailyTrend\" /* dailyTrend */,\n    currentTab: \"service_names\" /* service_names */,\n};\nexport const databaseWidget = {\n    id: getId(),\n    titleKey: messages.dashboardDatabaseTitle,\n    reportPathsType: \"azure\" /* azure */,\n    reportType: \"database\" /* database */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service_name: 'Database,Cosmos DB,Cache for Redis',\n    },\n    tabsFilter: {\n        service_name: 'Database,Cosmos DB,Cache for Redis',\n    },\n    trend: {\n        computedReportItem: \"cost\" /* cost */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* rolling */,\n    },\n    chartType: \"trend\" /* trend */,\n};\nexport const networkWidget = {\n    id: getId(),\n    titleKey: messages.dashboardNetworkTitle,\n    reportPathsType: \"azure\" /* azure */,\n    reportType: \"network\" /* network */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service_name: 'Virtual Network,VPN,DNS,Traffic Manager,ExpressRoute,Load Balancer,Application Gateway',\n    },\n    tabsFilter: {\n        service_name: 'Virtual Network,VPN,DNS,Traffic Manager,ExpressRoute,Load Balancer,Application Gateway',\n    },\n    trend: {\n        computedReportItem: \"cost\" /* cost */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* rolling */,\n    },\n    chartType: \"trend\" /* trend */,\n};\nexport const storageWidget = {\n    id: getId(),\n    titleKey: messages.dashboardStorageTitle,\n    reportPathsType: \"azure\" /* azure */,\n    reportType: \"storage\" /* storage */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    trend: {\n        computedReportItem: \"usage\" /* usage */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* daily */,\n    },\n    chartType: \"trend\" /* trend */,\n};\nexport const virtualMachineWidget = {\n    id: getId(),\n    titleKey: messages.azureComputeTitle,\n    reportPathsType: \"azure\" /* azure */,\n    reportType: \"instance_type\" /* instanceType */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    filter: {\n        service_name: 'Virtual Machines',\n    },\n    tabsFilter: {\n        service_name: 'Virtual Machines',\n    },\n    trend: {\n        computedReportItem: \"usage\" /* usage */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* trend */,\n};\n","import { getType } from 'typesafe-actions';\nimport { setWidgetTab } from './azureDashboardActions';\nimport { costSummaryWidget, databaseWidget, networkWidget, storageWidget, virtualMachineWidget, } from './azureDashboardWidgets';\nexport const defaultState = {\n    currentWidgets: [\n        costSummaryWidget.id,\n        virtualMachineWidget.id,\n        storageWidget.id,\n        networkWidget.id,\n        databaseWidget.id,\n    ],\n    widgets: {\n        [costSummaryWidget.id]: costSummaryWidget,\n        [virtualMachineWidget.id]: virtualMachineWidget,\n        [databaseWidget.id]: databaseWidget,\n        [networkWidget.id]: networkWidget,\n        [storageWidget.id]: storageWidget,\n    },\n};\nexport function azureDashboardReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(setWidgetTab):\n            return Object.assign(Object.assign({}, state), { widgets: Object.assign(Object.assign({}, state.widgets), { [action.payload.id]: Object.assign(Object.assign({}, state.widgets[action.payload.id]), { currentTab: action.payload.tab }) }) });\n        default:\n            return state;\n    }\n}\n","import { getQuery } from 'api/queries/azureQuery';\nexport const azureOcpDashboardStateKey = 'azureOcpDashboard';\nexport const azureOcpDashboardDefaultFilters = {\n    time_scope_units: 'month',\n    time_scope_value: -1,\n    resolution: 'daily',\n};\nexport const azureOcpDashboardTabFilters = Object.assign(Object.assign({}, azureOcpDashboardDefaultFilters), { limit: 3 });\nexport function getGroupByForTab(widget) {\n    switch (widget.currentTab) {\n        case \"service_names\" /* service_names */:\n            // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n            return {\n                service_name: widget.tabsFilter && widget.tabsFilter.service_name ? widget.tabsFilter.service_name : '*',\n            };\n        case \"subscription_guids\" /* subscription_guids */:\n            return { subscription_guid: '*' };\n        case \"resource_locations\" /* resource_locations */:\n            return { resource_location: '*' };\n        default:\n            return {};\n    }\n}\nexport function getQueryForWidget(filter = azureOcpDashboardDefaultFilters, props) {\n    const query = Object.assign({ filter }, (props ? props : {}));\n    return getQuery(query);\n}\nexport function getQueryForWidgetTabs(widget, filter = azureOcpDashboardDefaultFilters) {\n    const group_by = getGroupByForTab(widget);\n    const newFilter = Object.assign({}, JSON.parse(JSON.stringify(filter)));\n    // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n    if (widget.currentTab === \"service_names\" /* service_names */ && widget.tabsFilter && widget.tabsFilter.service_name) {\n        newFilter.service = undefined;\n    }\n    const query = {\n        filter: newFilter,\n        group_by,\n    };\n    return getQuery(query);\n}\n","import { azureOcpDashboardDefaultFilters, azureOcpDashboardStateKey, azureOcpDashboardTabFilters, getQueryForWidget, getQueryForWidgetTabs, } from './azureOcpDashboardCommon';\nexport const selectAzureOcpDashboardState = (state) => state[azureOcpDashboardStateKey];\nexport const selectWidgets = (state) => selectAzureOcpDashboardState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectAzureOcpDashboardState(state).currentWidgets;\nexport const selectWidgetQueries = (state, id) => {\n    const widget = selectWidget(state, id);\n    const filter = Object.assign(Object.assign({}, azureOcpDashboardDefaultFilters), (widget.filter ? widget.filter : {}));\n    const tabsFilter = Object.assign(Object.assign({}, azureOcpDashboardTabFilters), (widget.tabsFilter ? widget.tabsFilter : {}));\n    return {\n        previous: getQueryForWidget(Object.assign(Object.assign({}, filter), { time_scope_value: -2 })),\n        current: getQueryForWidget(filter),\n        forecast: getQueryForWidget({}, { limit: 31 }),\n        tabs: getQueryForWidgetTabs(widget, Object.assign(Object.assign({}, tabsFilter), { resolution: 'monthly' })),\n    };\n};\n","import { forecastActions } from 'store/forecasts';\nimport { reportActions } from 'store/reports';\nimport { createAction } from 'typesafe-actions';\nimport { selectWidget, selectWidgetQueries } from './azureOcpDashboardSelectors';\nexport const fetchWidgetForecasts = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        if (widget.forecastPathsType && widget.forecastType) {\n            const { forecast } = selectWidgetQueries(state, id);\n            dispatch(forecastActions.fetchForecast(widget.forecastPathsType, widget.forecastType, forecast));\n        }\n    };\n};\nexport const fetchWidgetReports = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        const { previous, current, tabs } = selectWidgetQueries(state, id);\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, current));\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, previous));\n        if (widget.availableTabs) {\n            dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, tabs));\n        }\n    };\n};\nexport const setWidgetTab = createAction('azureOcpDashboard/widget/tab')();\nexport const changeWidgetTab = (id, tab) => {\n    return dispatch => {\n        dispatch(setWidgetTab({ id, tab }));\n        dispatch(fetchWidgetReports(id));\n    };\n};\n","import messages from 'locales/messages';\nimport { azureDashboardWidgets } from 'store/dashboard/azureDashboard';\nimport { formatUnits } from 'utils/format';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const costSummaryWidget = {\n    id: getId(),\n    titleKey: messages.azureOcpDashboardCostTitle,\n    forecastPathsType: \"azure_ocp\" /* azureOcp */,\n    forecastType: \"cost\" /* cost */,\n    reportPathsType: \"azure_ocp\" /* azureOcp */,\n    reportType: \"cost\" /* cost */,\n    details: {\n        costKey: messages.cost,\n        showHorizontal: true,\n    },\n    tabsFilter: {\n        limit: 3,\n    },\n    trend: {\n        computedForecastItem: \"cost\" /* cost */,\n        computedReportItem: \"cost\" /* cost */,\n        computedReportItemValue: \"total\" /* total */,\n        dailyTitleKey: messages.azureDailyCostTrendTitle,\n        titleKey: messages.azureCostTrendTitle,\n        type: 0 /* rolling */,\n    },\n    availableTabs: [\n        \"service_names\" /* service_names */,\n        \"subscription_guids\" /* subscription_guids */,\n        \"resource_locations\" /* resource_locations */,\n    ],\n    chartType: \"dailyTrend\" /* dailyTrend */,\n    currentTab: \"service_names\" /* service_names */,\n};\nexport const databaseWidget = {\n    id: getId(),\n    titleKey: messages.dashboardDatabaseTitle,\n    reportPathsType: \"azure_ocp\" /* azureOcp */,\n    reportType: \"database\" /* database */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service_name: azureDashboardWidgets.databaseWidget.filter.service_name,\n    },\n    tabsFilter: {\n        service_name: azureDashboardWidgets.databaseWidget.tabsFilter.service_name,\n    },\n    trend: {\n        computedReportItem: \"cost\" /* cost */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* rolling */,\n    },\n    chartType: \"trend\" /* trend */,\n};\nexport const networkWidget = {\n    id: getId(),\n    titleKey: messages.dashboardNetworkTitle,\n    reportPathsType: \"azure_ocp\" /* azureOcp */,\n    reportType: \"network\" /* network */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service_name: azureDashboardWidgets.networkWidget.filter.service_name,\n    },\n    tabsFilter: {\n        service_name: azureDashboardWidgets.networkWidget.tabsFilter.service_name,\n    },\n    trend: {\n        computedReportItem: \"cost\" /* cost */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* rolling */,\n    },\n    chartType: \"trend\" /* trend */,\n};\nexport const storageWidget = {\n    id: getId(),\n    titleKey: messages.dashboardStorageTitle,\n    reportPathsType: \"azure_ocp\" /* azureOcp */,\n    reportType: \"storage\" /* storage */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    filter: {\n        service_name: 'Storage',\n    },\n    tabsFilter: {\n        service_name: 'Storage',\n    },\n    trend: {\n        computedReportItem: \"usage\" /* usage */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* daily */,\n    },\n    chartType: \"trend\" /* trend */,\n};\nexport const virtualMachineWidget = {\n    id: getId(),\n    titleKey: messages.azureComputeTitle,\n    reportPathsType: \"azure_ocp\" /* azureOcp */,\n    reportType: \"instance_type\" /* instanceType */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    filter: {\n        service_name: 'Virtual Machines',\n    },\n    tabsFilter: {\n        service_name: 'Virtual Machines',\n    },\n    trend: {\n        computedReportItem: \"usage\" /* usage */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* trend */,\n};\n","import { getType } from 'typesafe-actions';\nimport { setWidgetTab } from './azureOcpDashboardActions';\nimport { costSummaryWidget, databaseWidget, networkWidget, storageWidget, virtualMachineWidget, } from './azureOcpDashboardWidgets';\nexport const defaultState = {\n    currentWidgets: [\n        costSummaryWidget.id,\n        virtualMachineWidget.id,\n        storageWidget.id,\n        networkWidget.id,\n        databaseWidget.id,\n    ],\n    widgets: {\n        [costSummaryWidget.id]: costSummaryWidget,\n        [virtualMachineWidget.id]: virtualMachineWidget,\n        [databaseWidget.id]: databaseWidget,\n        [networkWidget.id]: networkWidget,\n        [storageWidget.id]: storageWidget,\n    },\n};\nexport function azureOcpDashboardReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(setWidgetTab):\n            return Object.assign(Object.assign({}, state), { widgets: Object.assign(Object.assign({}, state.widgets), { [action.payload.id]: Object.assign(Object.assign({}, state.widgets[action.payload.id]), { currentTab: action.payload.tab }) }) });\n        default:\n            return state;\n    }\n}\n","import { getQuery } from 'api/queries/gcpQuery';\nexport const gcpDashboardStateKey = 'gcpDashboard';\nexport const gcpDashboardDefaultFilters = {\n    time_scope_units: 'month',\n    time_scope_value: -1,\n    resolution: 'daily',\n};\nexport const gcpDashboardTabFilters = Object.assign(Object.assign({}, gcpDashboardDefaultFilters), { limit: 3 });\nexport function getGroupByForTab(widget) {\n    switch (widget.currentTab) {\n        case \"services\" /* services */:\n            // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n            return {\n                service: widget.tabsFilter && widget.tabsFilter.service ? widget.tabsFilter.service : '*',\n            };\n        case \"accounts\" /* accounts */:\n            return { account: '*' };\n        case \"gcp_projects\" /* gcpProjects */:\n            return { gcp_project: '*' };\n        case \"regions\" /* regions */:\n            return { region: '*' };\n        default:\n            return {};\n    }\n}\nexport function getQueryForWidget(filter = gcpDashboardDefaultFilters, props) {\n    const query = Object.assign({ filter }, (props ? props : {}));\n    return getQuery(query);\n}\nexport function getQueryForWidgetTabs(widget, filter = gcpDashboardDefaultFilters) {\n    const group_by = getGroupByForTab(widget);\n    const newFilter = Object.assign({}, JSON.parse(JSON.stringify(filter)));\n    // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n    if (widget.currentTab === \"services\" /* services */ && widget.tabsFilter && widget.tabsFilter.service) {\n        newFilter.service = undefined;\n    }\n    const query = {\n        filter: newFilter,\n        group_by,\n    };\n    return getQuery(query);\n}\n","import { gcpDashboardDefaultFilters, gcpDashboardStateKey, gcpDashboardTabFilters, getQueryForWidget, getQueryForWidgetTabs, } from './gcpDashboardCommon';\nexport const selectGcpDashboardState = (state) => state[gcpDashboardStateKey];\nexport const selectWidgets = (state) => selectGcpDashboardState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectGcpDashboardState(state).currentWidgets;\nexport const selectWidgetQueries = (state, id) => {\n    const widget = selectWidget(state, id);\n    const filter = Object.assign(Object.assign({}, gcpDashboardDefaultFilters), (widget.filter ? widget.filter : {}));\n    const tabsFilter = Object.assign(Object.assign({}, gcpDashboardTabFilters), (widget.tabsFilter ? widget.tabsFilter : {}));\n    return {\n        previous: getQueryForWidget(Object.assign(Object.assign({}, filter), { time_scope_value: -2 })),\n        current: getQueryForWidget(filter),\n        forecast: getQueryForWidget({}, { limit: 31 }),\n        tabs: getQueryForWidgetTabs(widget, Object.assign(Object.assign({}, tabsFilter), { resolution: 'monthly' })),\n    };\n};\n","import { forecastActions } from 'store/forecasts';\nimport { reportActions } from 'store/reports';\nimport { createAction } from 'typesafe-actions';\nimport { selectWidget, selectWidgetQueries } from './gcpDashboardSelectors';\nexport const fetchWidgetForecasts = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        if (widget.forecastPathsType && widget.forecastType) {\n            const { forecast } = selectWidgetQueries(state, id);\n            dispatch(forecastActions.fetchForecast(widget.forecastPathsType, widget.forecastType, forecast));\n        }\n    };\n};\nexport const fetchWidgetReports = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        const { previous, current, tabs } = selectWidgetQueries(state, id);\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, current));\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, previous));\n        if (widget.availableTabs) {\n            dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, tabs));\n        }\n    };\n};\nexport const setWidgetTab = createAction('gcpDashboard/widget/tab')();\nexport const changeWidgetTab = (id, tab) => {\n    return dispatch => {\n        dispatch(setWidgetTab({ id, tab }));\n        dispatch(fetchWidgetReports(id));\n    };\n};\n","import messages from 'locales/messages';\nimport { paths } from 'routes';\nimport { formatCurrency, formatUnits } from 'utils/format';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const computeWidget = {\n    id: getId(),\n    titleKey: messages.gcpComputeTitle,\n    forecastPathsType: \"gcp\" /* gcp */,\n    reportPathsType: \"gcp\" /* gcp */,\n    reportType: \"instance_type\" /* instanceType */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    filter: {\n        service: 'Compute Engine',\n    },\n    tabsFilter: {\n        service: 'Compute Engine',\n    },\n    trend: {\n        computedReportItem: \"usage\" /* usage */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* trend */,\n};\nexport const costSummaryWidget = {\n    id: getId(),\n    titleKey: messages.gcpCostTitle,\n    forecastPathsType: \"gcp\" /* gcp */,\n    forecastType: \"cost\" /* cost */,\n    reportPathsType: \"gcp\" /* gcp */,\n    reportType: \"cost\" /* cost */,\n    details: {\n        adjustContainerHeight: true,\n        costKey: messages.cost,\n        showHorizontal: true,\n        viewAllPath: paths.gcpDetails,\n    },\n    tabsFilter: {\n        limit: 3,\n    },\n    trend: {\n        computedForecastItem: \"cost\" /* cost */,\n        computedReportItem: \"cost\" /* cost */,\n        computedReportItemValue: \"total\" /* total */,\n        dailyTitleKey: messages.gcpDailyCostTrendTitle,\n        titleKey: messages.gcpCostTrendTitle,\n        type: 0 /* rolling */,\n    },\n    availableTabs: [\"services\" /* services */, \"gcp_projects\" /* gcpProjects */, \"regions\" /* regions */],\n    chartFormatter: formatCurrency,\n    chartType: \"dailyTrend\" /* dailyTrend */,\n    currentTab: \"services\" /* services */,\n};\nexport const databaseWidget = {\n    id: getId(),\n    titleKey: messages.dashboardDatabaseTitle,\n    reportPathsType: \"gcp\" /* gcp */,\n    reportType: \"database\" /* database */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service: 'Bigtable,Datastore,Database Migrations,Firebase,Firestore,MemoryStore,Spanner,SQL',\n    },\n    tabsFilter: {\n        service: 'Bigtable,Datastore,Database Migrations,Firebase,Firestore,MemoryStore,Spanner,SQL',\n    },\n    trend: {\n        computedReportItem: \"cost\" /* cost */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* rolling */,\n    },\n    chartFormatter: formatCurrency,\n    chartType: \"trend\" /* trend */,\n};\nexport const networkWidget = {\n    id: getId(),\n    titleKey: messages.dashboardNetworkTitle,\n    reportPathsType: \"gcp\" /* gcp */,\n    reportType: \"network\" /* network */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service: 'Network,VPC,Firewall,Route,IP,DNS,CDN,NAT,Traffic Director,Service Discovery,Cloud Domains,Private Service Connect,Cloud Armor',\n    },\n    tabsFilter: {\n        service: 'Network,VPC,Firewall,Route,IP,DNS,CDN,NAT,Traffic Director,Service Discovery,Cloud Domains,Private Service Connect,Cloud Armor',\n    },\n    trend: {\n        computedReportItem: \"cost\" /* cost */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* rolling */,\n    },\n    chartFormatter: formatCurrency,\n    chartType: \"trend\" /* trend */,\n};\nexport const storageWidget = {\n    id: getId(),\n    titleKey: messages.dashboardStorageTitle,\n    reportPathsType: \"gcp\" /* gcp */,\n    reportType: \"storage\" /* storage */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    trend: {\n        computedReportItem: \"usage\" /* usage */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* trend */,\n};\n","import { getType } from 'typesafe-actions';\nimport { setWidgetTab } from './gcpDashboardActions';\nimport { computeWidget, costSummaryWidget, databaseWidget, networkWidget, storageWidget } from './gcpDashboardWidgets';\nexport const defaultState = {\n    currentWidgets: [costSummaryWidget.id, computeWidget.id, storageWidget.id, networkWidget.id, databaseWidget.id],\n    widgets: {\n        [costSummaryWidget.id]: costSummaryWidget,\n        [computeWidget.id]: computeWidget,\n        [storageWidget.id]: storageWidget,\n        [networkWidget.id]: networkWidget,\n        [databaseWidget.id]: databaseWidget,\n    },\n};\nexport function gcpDashboardReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(setWidgetTab):\n            return Object.assign(Object.assign({}, state), { widgets: Object.assign(Object.assign({}, state.widgets), { [action.payload.id]: Object.assign(Object.assign({}, state.widgets[action.payload.id]), { currentTab: action.payload.tab }) }) });\n        default:\n            return state;\n    }\n}\n","import { getQuery } from 'api/queries/gcpQuery';\nexport const gcpOcpDashboardStateKey = 'gcpOcpDashboard';\nexport const gcpOcpDashboardDefaultFilters = {\n    time_scope_units: 'month',\n    time_scope_value: -1,\n    resolution: 'daily',\n};\nexport const gcpOcpDashboardTabFilters = Object.assign(Object.assign({}, gcpOcpDashboardDefaultFilters), { limit: 3 });\nexport function getGroupByForTab(widget) {\n    switch (widget.currentTab) {\n        case \"services\" /* services */:\n            // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n            return {\n                service: widget.tabsFilter && widget.tabsFilter.service ? widget.tabsFilter.service : '*',\n            };\n        case \"accounts\" /* accounts */:\n            return { account: '*' };\n        case \"gcp_projects\" /* gcpProjects */:\n            return { gcp_project: '*' };\n        case \"regions\" /* regions */:\n            return { region: '*' };\n        default:\n            return {};\n    }\n}\nexport function getQueryForWidget(filter = gcpOcpDashboardDefaultFilters, props) {\n    const query = Object.assign({ filter }, (props ? props : {}));\n    return getQuery(query);\n}\nexport function getQueryForWidgetTabs(widget, filter = gcpOcpDashboardDefaultFilters) {\n    const group_by = getGroupByForTab(widget);\n    const newFilter = Object.assign({}, JSON.parse(JSON.stringify(filter)));\n    // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n    if (widget.currentTab === \"services\" /* services */ && widget.tabsFilter && widget.tabsFilter.service) {\n        newFilter.service = undefined;\n    }\n    const query = {\n        filter: newFilter,\n        group_by,\n    };\n    return getQuery(query);\n}\n","import { gcpOcpDashboardDefaultFilters, gcpOcpDashboardStateKey, gcpOcpDashboardTabFilters, getQueryForWidget, getQueryForWidgetTabs, } from './gcpOcpDashboardCommon';\nexport const selectGcpOcpDashboardState = (state) => state[gcpOcpDashboardStateKey];\nexport const selectWidgets = (state) => selectGcpOcpDashboardState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectGcpOcpDashboardState(state).currentWidgets;\nexport const selectWidgetQueries = (state, id) => {\n    const widget = selectWidget(state, id);\n    const filter = Object.assign(Object.assign({}, gcpOcpDashboardDefaultFilters), (widget.filter ? widget.filter : {}));\n    const tabsFilter = Object.assign(Object.assign({}, gcpOcpDashboardTabFilters), (widget.tabsFilter ? widget.tabsFilter : {}));\n    return {\n        previous: getQueryForWidget(Object.assign(Object.assign({}, filter), { time_scope_value: -2 })),\n        current: getQueryForWidget(filter),\n        forecast: getQueryForWidget({}, { limit: 31 }),\n        tabs: getQueryForWidgetTabs(widget, Object.assign(Object.assign({}, tabsFilter), { resolution: 'monthly' })),\n    };\n};\n","import { forecastActions } from 'store/forecasts';\nimport { reportActions } from 'store/reports';\nimport { createAction } from 'typesafe-actions';\nimport { selectWidget, selectWidgetQueries } from './gcpOcpDashboardSelectors';\nexport const fetchWidgetForecasts = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        if (widget.forecastPathsType && widget.forecastType) {\n            const { forecast } = selectWidgetQueries(state, id);\n            dispatch(forecastActions.fetchForecast(widget.forecastPathsType, widget.forecastType, forecast));\n        }\n    };\n};\nexport const fetchWidgetReports = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        const { previous, current, tabs } = selectWidgetQueries(state, id);\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, current));\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, previous));\n        if (widget.availableTabs) {\n            dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, tabs));\n        }\n    };\n};\nexport const setWidgetTab = createAction('gcpOcpDashboard/widget/tab')();\nexport const changeWidgetTab = (id, tab) => {\n    return dispatch => {\n        dispatch(setWidgetTab({ id, tab }));\n        dispatch(fetchWidgetReports(id));\n    };\n};\n","import messages from 'locales/messages';\nimport { gcpDashboardWidgets } from 'store/dashboard/gcpDashboard';\nimport { formatCurrency, formatUnits } from 'utils/format';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const computeWidget = {\n    id: getId(),\n    titleKey: messages.gcpComputeTitle,\n    forecastPathsType: \"gcp_ocp\" /* gcpOcp */,\n    reportPathsType: \"gcp_ocp\" /* gcpOcp */,\n    reportType: \"instance_type\" /* instanceType */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    filter: {\n        service: 'Compute Engine',\n    },\n    tabsFilter: {\n        service: 'Compute Engine',\n    },\n    trend: {\n        computedReportItem: \"usage\" /* usage */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* trend */,\n};\nexport const costSummaryWidget = {\n    id: getId(),\n    titleKey: messages.gcpCostTitle,\n    forecastPathsType: \"gcp_ocp\" /* gcpOcp */,\n    forecastType: \"cost\" /* cost */,\n    reportPathsType: \"gcp_ocp\" /* gcpOcp */,\n    reportType: \"cost\" /* cost */,\n    details: {\n        adjustContainerHeight: true,\n        costKey: messages.cost,\n        showHorizontal: true,\n    },\n    tabsFilter: {\n        limit: 3,\n    },\n    trend: {\n        computedForecastItem: \"cost\" /* cost */,\n        computedReportItem: \"cost\" /* cost */,\n        computedReportItemValue: \"total\" /* total */,\n        dailyTitleKey: messages.gcpDailyCostTrendTitle,\n        titleKey: messages.gcpCostTrendTitle,\n        type: 0 /* rolling */,\n    },\n    availableTabs: [\"services\" /* services */, \"gcp_projects\" /* gcpProjects */, \"regions\" /* regions */],\n    chartFormatter: formatCurrency,\n    chartType: \"dailyTrend\" /* dailyTrend */,\n    currentTab: \"services\" /* services */,\n};\nexport const databaseWidget = {\n    id: getId(),\n    titleKey: messages.dashboardDatabaseTitle,\n    reportPathsType: \"gcp_ocp\" /* gcpOcp */,\n    reportType: \"database\" /* database */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service: gcpDashboardWidgets.databaseWidget.filter.service,\n    },\n    tabsFilter: {\n        service: gcpDashboardWidgets.databaseWidget.tabsFilter.service,\n    },\n    trend: {\n        computedReportItem: \"cost\" /* cost */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* rolling */,\n    },\n    chartFormatter: formatCurrency,\n    chartType: \"trend\" /* trend */,\n};\nexport const networkWidget = {\n    id: getId(),\n    titleKey: messages.dashboardNetworkTitle,\n    reportPathsType: \"gcp_ocp\" /* gcpOcp */,\n    reportType: \"network\" /* network */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service: gcpDashboardWidgets.networkWidget.filter.service,\n    },\n    tabsFilter: {\n        service: gcpDashboardWidgets.networkWidget.tabsFilter.service,\n    },\n    trend: {\n        computedReportItem: \"cost\" /* cost */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* rolling */,\n    },\n    chartFormatter: formatCurrency,\n    chartType: \"trend\" /* trend */,\n};\nexport const storageWidget = {\n    id: getId(),\n    titleKey: messages.dashboardStorageTitle,\n    reportPathsType: \"gcp_ocp\" /* gcpOcp */,\n    reportType: \"storage\" /* storage */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    trend: {\n        computedReportItem: \"usage\" /* usage */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* trend */,\n};\n","import { getType } from 'typesafe-actions';\nimport { setWidgetTab } from './gcpOcpDashboardActions';\nimport { computeWidget, costSummaryWidget, databaseWidget, networkWidget, storageWidget, } from './gcpOcpDashboardWidgets';\nexport const defaultState = {\n    currentWidgets: [costSummaryWidget.id, computeWidget.id, storageWidget.id, networkWidget.id, databaseWidget.id],\n    widgets: {\n        [costSummaryWidget.id]: costSummaryWidget,\n        [computeWidget.id]: computeWidget,\n        [storageWidget.id]: storageWidget,\n        [networkWidget.id]: networkWidget,\n        [databaseWidget.id]: databaseWidget,\n    },\n};\nexport function gcpOcpDashboardReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(setWidgetTab):\n            return Object.assign(Object.assign({}, state), { widgets: Object.assign(Object.assign({}, state.widgets), { [action.payload.id]: Object.assign(Object.assign({}, state.widgets[action.payload.id]), { currentTab: action.payload.tab }) }) });\n        default:\n            return state;\n    }\n}\n","import { getQuery } from 'api/queries/ibmQuery';\nexport const ibmDashboardStateKey = 'ibmDashboard';\nexport const ibmDashboardDefaultFilters = {\n    time_scope_units: 'month',\n    time_scope_value: -1,\n    resolution: 'daily',\n};\nexport const ibmDashboardTabFilters = Object.assign(Object.assign({}, ibmDashboardDefaultFilters), { limit: 3 });\nexport function getGroupByForTab(widget) {\n    switch (widget.currentTab) {\n        case \"services\" /* services */:\n            // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n            return {\n                service: widget.tabsFilter && widget.tabsFilter.service ? widget.tabsFilter.service : '*',\n            };\n        case \"accounts\" /* accounts */:\n            return { account: '*' };\n        case \"projects\" /* projects */:\n            return { project: '*' };\n        case \"regions\" /* regions */:\n            return { region: '*' };\n        default:\n            return {};\n    }\n}\nexport function getQueryForWidget(filter = ibmDashboardDefaultFilters, props) {\n    const query = Object.assign({ filter }, (props ? props : {}));\n    return getQuery(query);\n}\nexport function getQueryForWidgetTabs(widget, filter = ibmDashboardDefaultFilters) {\n    const group_by = getGroupByForTab(widget);\n    const newFilter = Object.assign({}, JSON.parse(JSON.stringify(filter)));\n    // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n    if (widget.currentTab === \"services\" /* services */ && widget.tabsFilter && widget.tabsFilter.service) {\n        newFilter.service = undefined;\n    }\n    const query = {\n        filter: newFilter,\n        group_by,\n    };\n    return getQuery(query);\n}\n","import { getQueryForWidget, getQueryForWidgetTabs, ibmDashboardDefaultFilters, ibmDashboardStateKey, ibmDashboardTabFilters, } from './ibmDashboardCommon';\nexport const selectIbmDashboardState = (state) => state[ibmDashboardStateKey];\nexport const selectWidgets = (state) => selectIbmDashboardState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectIbmDashboardState(state).currentWidgets;\nexport const selectWidgetQueries = (state, id) => {\n    const widget = selectWidget(state, id);\n    const filter = Object.assign(Object.assign({}, ibmDashboardDefaultFilters), (widget.filter ? widget.filter : {}));\n    const tabsFilter = Object.assign(Object.assign({}, ibmDashboardTabFilters), (widget.tabsFilter ? widget.tabsFilter : {}));\n    return {\n        previous: getQueryForWidget(Object.assign(Object.assign({}, filter), { time_scope_value: -2 })),\n        current: getQueryForWidget(filter),\n        forecast: getQueryForWidget({}, { limit: 31 }),\n        tabs: getQueryForWidgetTabs(widget, Object.assign(Object.assign({}, tabsFilter), { resolution: 'monthly' })),\n    };\n};\n","import { forecastActions } from 'store/forecasts';\nimport { reportActions } from 'store/reports';\nimport { createAction } from 'typesafe-actions';\nimport { selectWidget, selectWidgetQueries } from './ibmDashboardSelectors';\nexport const fetchWidgetForecasts = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        if (widget.forecastPathsType && widget.forecastType) {\n            const { forecast } = selectWidgetQueries(state, id);\n            dispatch(forecastActions.fetchForecast(widget.forecastPathsType, widget.forecastType, forecast));\n        }\n    };\n};\nexport const fetchWidgetReports = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        const { previous, current, tabs } = selectWidgetQueries(state, id);\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, current));\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, previous));\n        if (widget.availableTabs) {\n            dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, tabs));\n        }\n    };\n};\nexport const setWidgetTab = createAction('ibmDashboard/widget/tab')();\nexport const changeWidgetTab = (id, tab) => {\n    return dispatch => {\n        dispatch(setWidgetTab({ id, tab }));\n        dispatch(fetchWidgetReports(id));\n    };\n};\n","import messages from 'locales/messages';\nimport { paths } from 'routes';\nimport { formatCurrency, formatUnits } from 'utils/format';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const computeWidget = {\n    id: getId(),\n    titleKey: messages.ibmComputeTitle,\n    forecastPathsType: \"gcp\" /* ibm */,\n    reportPathsType: \"gcp\" /* ibm */,\n    reportType: \"instance_type\" /* instanceType */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    filter: {\n        service: 'Compute Engine',\n    },\n    tabsFilter: {\n        service: 'Compute Engine',\n    },\n    trend: {\n        computedReportItem: \"usage\" /* usage */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* trend */,\n};\nexport const costSummaryWidget = {\n    id: getId(),\n    titleKey: messages.ibmCostTitle,\n    forecastPathsType: \"gcp\" /* ibm */,\n    forecastType: \"cost\" /* cost */,\n    reportPathsType: \"gcp\" /* ibm */,\n    reportType: \"cost\" /* cost */,\n    details: {\n        adjustContainerHeight: true,\n        costKey: messages.cost,\n        showHorizontal: true,\n        viewAllPath: paths.ibmDetails,\n    },\n    tabsFilter: {\n        limit: 3,\n    },\n    trend: {\n        computedForecastItem: \"cost\" /* cost */,\n        computedReportItem: \"cost\" /* cost */,\n        computedReportItemValue: \"total\" /* total */,\n        dailyTitleKey: messages.ibmDailyCostTrendTitle,\n        titleKey: messages.ibmCostTrendTitle,\n        type: 0 /* rolling */,\n    },\n    availableTabs: [\"services\" /* services */, \"projects\" /* projects */, \"regions\" /* regions */],\n    chartFormatter: formatCurrency,\n    chartType: \"dailyTrend\" /* dailyTrend */,\n    currentTab: \"services\" /* services */,\n};\nexport const databaseWidget = {\n    id: getId(),\n    titleKey: messages.dashboardDatabaseTitle,\n    reportPathsType: \"gcp\" /* ibm */,\n    reportType: \"database\" /* database */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service: 'Bigtable,Datastore,Database Migrations,Firestore,MemoryStore,Spanner,SQL',\n    },\n    tabsFilter: {\n        service: 'Bigtable,Datastore,Database Migrations,Firestore,MemoryStore,Spanner,SQL',\n    },\n    trend: {\n        computedReportItem: \"cost\" /* cost */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* rolling */,\n    },\n    chartFormatter: formatCurrency,\n    chartType: \"trend\" /* trend */,\n};\nexport const networkWidget = {\n    id: getId(),\n    titleKey: messages.dashboardNetworkTitle,\n    reportPathsType: \"gcp\" /* ibm */,\n    reportType: \"network\" /* network */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service: 'VPC network,Network services,Hybrid Connectivity,Network Service Tiers,Network Security,Network Intelligence',\n    },\n    tabsFilter: {\n        service: 'VPC network,Network services,Hybrid Connectivity,Network Service Tiers,Network Security,Network Intelligence',\n    },\n    trend: {\n        computedReportItem: \"cost\" /* cost */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* rolling */,\n    },\n    chartFormatter: formatCurrency,\n    chartType: \"trend\" /* trend */,\n};\nexport const storageWidget = {\n    id: getId(),\n    titleKey: messages.dashboardStorageTitle,\n    reportPathsType: \"gcp\" /* ibm */,\n    reportType: \"storage\" /* storage */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    trend: {\n        computedReportItem: \"usage\" /* usage */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* trend */,\n};\n","import { getType } from 'typesafe-actions';\nimport { setWidgetTab } from './ibmDashboardActions';\nimport { computeWidget, costSummaryWidget, databaseWidget, networkWidget, storageWidget } from './ibmDashboardWidgets';\nexport const defaultState = {\n    currentWidgets: [costSummaryWidget.id, computeWidget.id, storageWidget.id, networkWidget.id, databaseWidget.id],\n    widgets: {\n        [costSummaryWidget.id]: costSummaryWidget,\n        [computeWidget.id]: computeWidget,\n        [storageWidget.id]: storageWidget,\n        [networkWidget.id]: networkWidget,\n        [databaseWidget.id]: databaseWidget,\n    },\n};\nexport function ibmDashboardReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(setWidgetTab):\n            return Object.assign(Object.assign({}, state), { widgets: Object.assign(Object.assign({}, state.widgets), { [action.payload.id]: Object.assign(Object.assign({}, state.widgets[action.payload.id]), { currentTab: action.payload.tab }) }) });\n        default:\n            return state;\n    }\n}\n","import { getQuery } from 'api/queries/ociQuery';\nexport const ociDashboardStateKey = 'ociDashboard';\nexport const ociDashboardDefaultFilters = {\n    time_scope_units: 'month',\n    time_scope_value: -1,\n    resolution: 'daily',\n};\nexport const ociDashboardTabFilters = Object.assign(Object.assign({}, ociDashboardDefaultFilters), { limit: 3 });\nexport function getGroupByForTab(widget) {\n    switch (widget.currentTab) {\n        case \"product_services\" /* product_services */:\n            return {\n                product_service: widget.tabsFilter && widget.tabsFilter.product_service ? widget.tabsFilter.product_service : '*',\n            };\n        case \"payer_tenant_ids\" /* payer_tenant_ids */:\n            return { payer_tenant_id: '*' };\n        case \"regions\" /* regions */:\n            return { region: '*' };\n        default:\n            return {};\n    }\n}\nexport function getQueryForWidget(filter = ociDashboardDefaultFilters, props) {\n    const query = Object.assign({ filter }, (props ? props : {}));\n    return getQuery(query);\n}\nexport function getQueryForWidgetTabs(widget, filter = ociDashboardDefaultFilters) {\n    const group_by = getGroupByForTab(widget);\n    const newFilter = Object.assign({}, JSON.parse(JSON.stringify(filter)));\n    if (widget.currentTab === \"product_services\" /* product_services */ &&\n        widget.tabsFilter &&\n        widget.tabsFilter.product_service) {\n        newFilter.service = undefined;\n    }\n    const query = {\n        filter: newFilter,\n        group_by,\n    };\n    return getQuery(query);\n}\n","import { getQueryForWidget, getQueryForWidgetTabs, ociDashboardDefaultFilters, ociDashboardStateKey, ociDashboardTabFilters, } from './ociDashboardCommon';\nexport const selectOciDashboardState = (state) => state[ociDashboardStateKey];\nexport const selectWidgets = (state) => selectOciDashboardState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectOciDashboardState(state).currentWidgets;\nexport const selectWidgetQueries = (state, id) => {\n    const widget = selectWidget(state, id);\n    const filter = Object.assign(Object.assign({}, ociDashboardDefaultFilters), (widget.filter ? widget.filter : {}));\n    const tabsFilter = Object.assign(Object.assign({}, ociDashboardTabFilters), (widget.tabsFilter ? widget.tabsFilter : {}));\n    return {\n        previous: getQueryForWidget(Object.assign(Object.assign({}, filter), { time_scope_value: -2 })),\n        current: getQueryForWidget(filter),\n        forecast: getQueryForWidget({}, { limit: 31 }),\n        tabs: getQueryForWidgetTabs(widget, Object.assign(Object.assign({}, tabsFilter), { resolution: 'monthly' })),\n    };\n};\n","import { forecastActions } from 'store/forecasts';\nimport { reportActions } from 'store/reports';\nimport { createAction } from 'typesafe-actions';\nimport { selectWidget, selectWidgetQueries } from './ociDashboardSelectors';\nexport const fetchWidgetForecasts = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        if (widget.forecastPathsType && widget.forecastType) {\n            const { forecast } = selectWidgetQueries(state, id);\n            dispatch(forecastActions.fetchForecast(widget.forecastPathsType, widget.forecastType, forecast));\n        }\n    };\n};\nexport const fetchWidgetReports = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        const { previous, current, tabs } = selectWidgetQueries(state, id);\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, current));\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, previous));\n        if (widget.availableTabs) {\n            dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, tabs));\n        }\n    };\n};\nexport const setWidgetTab = createAction('ociDashboard/widget/tab')();\nexport const changeWidgetTab = (id, tab) => {\n    return dispatch => {\n        dispatch(setWidgetTab({ id, tab }));\n        dispatch(fetchWidgetReports(id));\n    };\n};\n","import messages from 'locales/messages';\nimport { paths } from 'routes';\nimport { formatUnits } from 'utils/format';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const costSummaryWidget = {\n    id: getId(),\n    titleKey: messages.ociDashboardCostTitle,\n    forecastPathsType: \"oci\" /* oci */,\n    forecastType: \"cost\" /* cost */,\n    reportPathsType: \"oci\" /* oci */,\n    reportType: \"cost\" /* cost */,\n    details: {\n        adjustContainerHeight: true,\n        costKey: messages.cost,\n        showHorizontal: true,\n        viewAllPath: paths.ociDetails,\n    },\n    tabsFilter: {\n        limit: 3,\n    },\n    trend: {\n        computedForecastItem: \"cost\" /* cost */,\n        computedReportItem: \"cost\" /* cost */,\n        computedReportItemValue: \"total\" /* total */,\n        dailyTitleKey: messages.ociDailyCostTrendTitle,\n        titleKey: messages.ociCostTrendTitle,\n        type: 0 /* rolling */,\n    },\n    availableTabs: [\"product_services\" /* product_services */, \"payer_tenant_ids\" /* payer_tenant_ids */, \"regions\" /* regions */],\n    chartType: \"dailyTrend\" /* dailyTrend */,\n    currentTab: \"product_services\" /* product_services */,\n};\nexport const databaseWidget = {\n    id: getId(),\n    titleKey: messages.dashboardDatabaseTitle,\n    reportPathsType: \"oci\" /* oci */,\n    reportType: \"database\" /* database */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        product_service: 'Database,Autonomous Database,Autonomous Data Warehouse,Autonomous Transaction Processing,Autonomous JSON Database,Exadata Database Service,Database Cloud Service,Autonomous Database on Exadata,MySQL HeatWave,NoSQL,Search Service with OpenSearch',\n    },\n    tabsFilter: {\n        product_service: 'Database,Autonomous Database,Autonomous Data Warehouse,Autonomous Transaction Processing,Autonomous JSON Database,Exadata Database Service,Database Cloud Service,Autonomous Database on Exadata,MySQL HeatWave,NoSQL,Search Service with OpenSearch',\n    },\n    trend: {\n        computedReportItem: \"cost\" /* cost */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* rolling */,\n    },\n    chartType: \"trend\" /* trend */,\n};\nexport const networkWidget = {\n    id: getId(),\n    titleKey: messages.dashboardNetworkTitle,\n    reportPathsType: \"oci\" /* oci */,\n    reportType: \"network\" /* network */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        product_service: 'Network,Virtual Cloud Networks,Networking Gateways,Load Balancers,Site-to-Site VPN,Client-to-Site VPN,FastConnect,Customer-Premises Equipment,DNS Management',\n    },\n    tabsFilter: {\n        product_service: 'Network,Virtual Cloud Networks,Networking Gateways,Load Balancers,Site-to-Site VPN,Client-to-Site VPN,FastConnect,Customer-Premises Equipment,DNS Management',\n    },\n    trend: {\n        computedReportItem: \"cost\" /* cost */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* rolling */,\n    },\n    chartType: \"trend\" /* trend */,\n};\nexport const storageWidget = {\n    id: getId(),\n    titleKey: messages.dashboardStorageTitle,\n    reportPathsType: \"oci\" /* oci */,\n    reportType: \"storage\" /* storage */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    trend: {\n        computedReportItem: \"usage\" /* usage */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* daily */,\n    },\n    chartType: \"trend\" /* trend */,\n};\nexport const virtualMachineWidget = {\n    id: getId(),\n    titleKey: messages.ociComputeTitle,\n    reportPathsType: \"oci\" /* oci */,\n    reportType: \"instance_type\" /* instanceType */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    filter: {\n        product_service: 'Compute,Virtual Machines',\n    },\n    tabsFilter: {\n        product_service: 'Compute,Virtual Machines',\n    },\n    trend: {\n        computedReportItem: \"usage\" /* usage */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* trend */,\n};\n","import { getType } from 'typesafe-actions';\nimport { setWidgetTab } from './ociDashboardActions';\nimport { costSummaryWidget, databaseWidget, networkWidget, storageWidget, virtualMachineWidget, } from './ociDashboardWidgets';\nexport const defaultState = {\n    currentWidgets: [\n        costSummaryWidget.id,\n        virtualMachineWidget.id,\n        storageWidget.id,\n        networkWidget.id,\n        databaseWidget.id,\n    ],\n    widgets: {\n        [costSummaryWidget.id]: costSummaryWidget,\n        [virtualMachineWidget.id]: virtualMachineWidget,\n        [databaseWidget.id]: databaseWidget,\n        [networkWidget.id]: networkWidget,\n        [storageWidget.id]: storageWidget,\n    },\n};\nexport function ociDashboardReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(setWidgetTab):\n            return Object.assign(Object.assign({}, state), { widgets: Object.assign(Object.assign({}, state.widgets), { [action.payload.id]: Object.assign(Object.assign({}, state.widgets[action.payload.id]), { currentTab: action.payload.tab }) }) });\n        default:\n            return state;\n    }\n}\n","import { getQuery } from 'api/queries/ocpCloudQuery';\nexport const ocpCloudDashboardStateKey = 'ocpCloudDashboard';\nexport const ocpCloudDashboardDefaultFilters = {\n    time_scope_units: 'month',\n    time_scope_value: -1,\n    resolution: 'daily',\n};\nexport const ocpCloudDashboardTabFilters = Object.assign(Object.assign({}, ocpCloudDashboardDefaultFilters), { limit: 3 });\n// Todo: cluster, project, node\nexport function getGroupByForTab(widget) {\n    switch (widget.currentTab) {\n        case \"accounts\" /* accounts */:\n            return { account: '*' };\n        case \"regions\" /* regions */:\n            return { region: '*' };\n        case \"services\" /* services */:\n            // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n            return {\n                service: widget.tabsFilter && widget.tabsFilter.service ? widget.tabsFilter.service : '*',\n            };\n        default:\n            return {};\n    }\n}\nexport function getQueryForWidget(filter = ocpCloudDashboardDefaultFilters, props) {\n    const query = Object.assign({ filter }, (props ? props : {}));\n    return getQuery(query);\n}\nexport function getQueryForWidgetTabs(widget, filter = ocpCloudDashboardDefaultFilters) {\n    const group_by = getGroupByForTab(widget);\n    const newFilter = Object.assign({}, JSON.parse(JSON.stringify(filter)));\n    // Use group_by for service tab and filter for others -- https://github.com/project-koku/koku-ui/issues/846\n    if (widget.currentTab === \"services\" /* services */ && widget.tabsFilter && widget.tabsFilter.service) {\n        newFilter.service = undefined;\n    }\n    const query = {\n        filter: newFilter,\n        group_by,\n    };\n    return getQuery(query);\n}\n","import { getQueryForWidget, getQueryForWidgetTabs, ocpCloudDashboardDefaultFilters, ocpCloudDashboardStateKey, ocpCloudDashboardTabFilters, } from './ocpCloudDashboardCommon';\nexport const selectOcpCloudDashboardState = (state) => state[ocpCloudDashboardStateKey];\nexport const selectWidgets = (state) => selectOcpCloudDashboardState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectOcpCloudDashboardState(state).currentWidgets;\nexport const selectWidgetQueries = (state, id) => {\n    const widget = selectWidget(state, id);\n    const defaultFilter = Object.assign(Object.assign({}, ocpCloudDashboardDefaultFilters), (widget.filter ? widget.filter : {}));\n    const tabsFilter = Object.assign(Object.assign({}, ocpCloudDashboardTabFilters), (widget.tabsFilter ? widget.tabsFilter : {}));\n    return {\n        previous: getQueryForWidget(Object.assign(Object.assign({}, defaultFilter), { time_scope_value: -2 })),\n        current: getQueryForWidget(defaultFilter),\n        forecast: getQueryForWidget({}, { limit: 31 }),\n        tabs: getQueryForWidgetTabs(widget, Object.assign(Object.assign({}, tabsFilter), { resolution: 'monthly' })),\n    };\n};\n","import { forecastActions } from 'store/forecasts';\nimport { reportActions } from 'store/reports';\nimport { createAction } from 'typesafe-actions';\nimport { selectWidget, selectWidgetQueries } from './ocpCloudDashboardSelectors';\nexport const fetchWidgetForecasts = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        if (widget.forecastPathsType && widget.forecastType) {\n            const { forecast } = selectWidgetQueries(state, id);\n            dispatch(forecastActions.fetchForecast(widget.forecastPathsType, widget.forecastType, forecast));\n        }\n    };\n};\nexport const fetchWidgetReports = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        const { previous, current, tabs } = selectWidgetQueries(state, id);\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, current));\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, previous));\n        if (widget.availableTabs) {\n            dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, tabs));\n        }\n    };\n};\nexport const setWidgetTab = createAction('ocpCloudDashboard/widget/tab')();\nexport const changeWidgetTab = (id, tab) => {\n    return dispatch => {\n        dispatch(setWidgetTab({ id, tab }));\n        dispatch(fetchWidgetReports(id));\n    };\n};\n","import messages from 'locales/messages';\nimport { awsDashboardWidgets } from 'store/dashboard/awsDashboard';\nimport { azureDashboardWidgets } from 'store/dashboard/azureDashboard';\nimport { gcpDashboardWidgets } from 'store/dashboard/gcpDashboard';\nimport { formatCurrency, formatUnits } from 'utils/format';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const costSummaryWidget = {\n    id: getId(),\n    titleKey: messages.ocpCloudDashboardCostTitle,\n    forecastPathsType: \"ocp_cloud\" /* ocpCloud */,\n    forecastType: \"cost\" /* cost */,\n    reportPathsType: \"ocp_cloud\" /* ocpCloud */,\n    reportType: \"cost\" /* cost */,\n    details: {\n        costKey: messages.cost,\n        showHorizontal: true,\n    },\n    tabsFilter: {\n        limit: 3,\n    },\n    trend: {\n        computedForecastItem: \"cost\" /* cost */,\n        computedReportItem: \"cost\" /* cost */,\n        computedReportItemValue: \"total\" /* total */,\n        dailyTitleKey: messages.ocpCloudDashboardDailyCostTrendTitle,\n        titleKey: messages.ocpCloudDashboardCostTrendTitle,\n        type: 0 /* rolling */,\n    },\n    availableTabs: [\"services\" /* services */, \"accounts\" /* accounts */, \"regions\" /* regions */],\n    chartFormatter: formatCurrency,\n    chartType: \"dailyTrend\" /* dailyTrend */,\n    currentTab: \"services\" /* services */,\n};\n// Cloud widgets\nexport const computeWidget = {\n    id: getId(),\n    titleKey: messages.ocpCloudDashboardComputeTitle,\n    reportPathsType: \"ocp_cloud\" /* ocpCloud */,\n    reportType: \"instance_type\" /* instanceType */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    filter: {\n        service: 'AmazonEC2',\n    },\n    trend: {\n        computedReportItem: \"usage\" /* usage */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* trend */,\n};\nexport const databaseWidget = {\n    id: getId(),\n    titleKey: messages.dashboardDatabaseTitle,\n    reportPathsType: \"ocp_cloud\" /* ocpCloud */,\n    reportType: \"database\" /* database */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service: awsDashboardWidgets.databaseWidget.filter.service +\n            ',' +\n            azureDashboardWidgets.databaseWidget.filter.service_name +\n            ',' +\n            gcpDashboardWidgets.databaseWidget.filter.service,\n    },\n    trend: {\n        computedReportItem: \"cost\" /* cost */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* rolling */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* trend */,\n};\nexport const networkWidget = {\n    id: getId(),\n    titleKey: messages.dashboardNetworkTitle,\n    reportPathsType: \"ocp_cloud\" /* ocpCloud */,\n    reportType: \"network\" /* network */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n    },\n    filter: {\n        service: awsDashboardWidgets.networkWidget.filter.service +\n            ',' +\n            azureDashboardWidgets.networkWidget.filter.service_name +\n            ',' +\n            gcpDashboardWidgets.networkWidget.filter.service,\n    },\n    trend: {\n        computedReportItem: \"cost\" /* cost */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardCumulativeCostComparison,\n        type: 0 /* rolling */,\n    },\n    chartFormatter: formatCurrency,\n    chartType: \"trend\" /* trend */,\n};\nexport const storageWidget = {\n    id: getId(),\n    titleKey: messages.dashboardStorageTitle,\n    reportPathsType: \"ocp_cloud\" /* ocpCloud */,\n    reportType: \"storage\" /* storage */,\n    details: {\n        costKey: messages.cost,\n        showUnits: true,\n        showUsageFirst: true,\n        showUsageLegendLabel: true,\n        usageKey: messages.usage,\n    },\n    trend: {\n        computedReportItem: \"usage\" /* usage */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.dashboardDailyUsageComparison,\n        type: 1 /* daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"trend\" /* trend */,\n};\n","import { getType } from 'typesafe-actions';\nimport { setWidgetTab } from './ocpCloudDashboardActions';\nimport { computeWidget, costSummaryWidget, databaseWidget, networkWidget, storageWidget, } from './ocpCloudDashboardWidgets';\nexport const defaultState = {\n    currentWidgets: [costSummaryWidget.id, computeWidget.id, storageWidget.id, networkWidget.id, databaseWidget.id],\n    widgets: {\n        [costSummaryWidget.id]: costSummaryWidget,\n        [computeWidget.id]: computeWidget,\n        [databaseWidget.id]: databaseWidget,\n        [networkWidget.id]: networkWidget,\n        [storageWidget.id]: storageWidget,\n    },\n};\nexport function ocpCloudDashboardReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(setWidgetTab):\n            return Object.assign(Object.assign({}, state), { widgets: Object.assign(Object.assign({}, state.widgets), { [action.payload.id]: Object.assign(Object.assign({}, state.widgets[action.payload.id]), { currentTab: action.payload.tab }) }) });\n        default:\n            return state;\n    }\n}\n","import { getQuery } from 'api/queries/ocpQuery';\nexport const ocpDashboardStateKey = 'ocpDashboard';\nexport const ocpDashboardDefaultFilters = {\n    time_scope_units: 'month',\n    time_scope_value: -1,\n    resolution: 'daily',\n};\nexport const ocpDashboardTabFilters = Object.assign(Object.assign({}, ocpDashboardDefaultFilters), { limit: 3 });\n// Todo: cluster, project, node\nexport function getGroupByForTab(tab) {\n    switch (tab) {\n        case \"projects\" /* projects */:\n            return { project: '*' };\n        case \"clusters\" /* clusters */:\n            return { cluster: '*' };\n        case \"nodes\" /* nodes */:\n            return { node: '*' };\n        default:\n            return {};\n    }\n}\nexport function getQueryForWidget(filter = ocpDashboardDefaultFilters, props) {\n    const query = Object.assign({ filter }, (props ? props : {}));\n    return getQuery(query);\n}\nexport function getQueryForWidgetTabs(widget, filter = ocpDashboardDefaultFilters) {\n    const query = {\n        filter,\n        group_by: getGroupByForTab(widget.currentTab),\n    };\n    return getQuery(query);\n}\n","import { getQueryForWidget, getQueryForWidgetTabs, ocpDashboardDefaultFilters, ocpDashboardStateKey, ocpDashboardTabFilters, } from './ocpDashboardCommon';\nexport const selectOcpDashboardState = (state) => state[ocpDashboardStateKey];\nexport const selectWidgets = (state) => selectOcpDashboardState(state).widgets;\nexport const selectWidget = (state, id) => selectWidgets(state)[id];\nexport const selectCurrentWidgets = (state) => selectOcpDashboardState(state).currentWidgets;\nexport const selectWidgetQueries = (state, id) => {\n    const widget = selectWidget(state, id);\n    const defaultFilter = Object.assign(Object.assign({}, ocpDashboardDefaultFilters), (widget.filter ? widget.filter : {}));\n    const tabsFilter = Object.assign(Object.assign({}, ocpDashboardTabFilters), (widget.tabsFilter ? widget.tabsFilter : {}));\n    return {\n        previous: getQueryForWidget(Object.assign(Object.assign({}, defaultFilter), { time_scope_value: -2 })),\n        current: getQueryForWidget(defaultFilter),\n        forecast: getQueryForWidget({}, { limit: 31 }),\n        tabs: getQueryForWidgetTabs(widget, Object.assign(Object.assign({}, tabsFilter), { resolution: 'monthly' })),\n    };\n};\n","import { forecastActions } from 'store/forecasts';\nimport { reportActions } from 'store/reports';\nimport { createAction } from 'typesafe-actions';\nimport { selectWidget, selectWidgetQueries } from './ocpDashboardSelectors';\nexport const fetchWidgetForecasts = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        if (widget.forecastPathsType && widget.forecastType) {\n            const { forecast } = selectWidgetQueries(state, id);\n            dispatch(forecastActions.fetchForecast(widget.forecastPathsType, widget.forecastType, forecast));\n        }\n    };\n};\nexport const fetchWidgetReports = (id) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const widget = selectWidget(state, id);\n        const { previous, current, tabs } = selectWidgetQueries(state, id);\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, current));\n        dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, previous));\n        if (widget.availableTabs) {\n            dispatch(reportActions.fetchReport(widget.reportPathsType, widget.reportType, tabs));\n        }\n    };\n};\nexport const setWidgetTab = createAction('ocpDashboard/widget/tab')();\nexport const changeWidgetTab = (id, tab) => {\n    return dispatch => {\n        dispatch(setWidgetTab({ id, tab }));\n        dispatch(fetchWidgetReports(id));\n    };\n};\n","import messages from 'locales/messages';\nimport { paths } from 'routes';\nimport { formatCurrency, formatUnits } from 'utils/format';\nlet currrentId = 0;\nconst getId = () => currrentId++;\nexport const costSummaryWidget = {\n    id: getId(),\n    titleKey: messages.ocpDashboardCostTitle,\n    forecastPathsType: \"ocp\" /* ocp */,\n    forecastType: \"cost\" /* cost */,\n    reportPathsType: \"ocp\" /* ocp */,\n    reportType: \"cost\" /* cost */,\n    details: {\n        adjustContainerHeight: true,\n        costKey: messages.cost,\n        showHorizontal: true,\n        showTooltip: true,\n        viewAllPath: paths.ocpDetails,\n    },\n    trend: {\n        computedForecastItem: \"cost\" /* cost */,\n        computedForecastInfrastructureItem: \"infrastructure\" /* infrastructure */,\n        computedReportItem: \"cost\" /* cost */,\n        computedReportItemValue: \"total\" /* total */,\n        dailyTitleKey: messages.ocpDashboardDailyCostTitle,\n        titleKey: messages.ocpDashboardCostTrendTitle,\n        type: 0 /* rolling */,\n    },\n    tabsFilter: {\n        limit: 3,\n    },\n    availableTabs: [\"projects\" /* projects */, \"clusters\" /* clusters */],\n    chartFormatter: formatCurrency,\n    chartType: \"dailyTrend\" /* dailyTrend */,\n    currentTab: \"projects\" /* projects */,\n};\nexport const cpuWidget = {\n    id: getId(),\n    titleKey: messages.ocpCpuUsageAndRequests,\n    reportPathsType: \"ocp\" /* ocp */,\n    reportType: \"cpu\" /* cpu */,\n    details: {\n        requestKey: messages.requests,\n        showUnits: true,\n        showUsageFirst: true,\n        usageKey: messages.usage,\n    },\n    trend: {\n        computedReportItem: \"usage\" /* usage */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.ocpDailyUsageAndRequestComparison,\n        type: 1 /* daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"usage\" /* usage */,\n};\nexport const memoryWidget = {\n    id: getId(),\n    titleKey: messages.ocpMemoryUsageAndRequests,\n    reportPathsType: \"ocp\" /* ocp */,\n    reportType: \"memory\" /* memory */,\n    details: {\n        requestKey: messages.requests,\n        showUnits: true,\n        showUsageFirst: true,\n        usageKey: messages.usage,\n    },\n    trend: {\n        computedReportItem: \"usage\" /* usage */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.ocpDailyUsageAndRequestComparison,\n        type: 1 /* daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"usage\" /* usage */,\n};\nexport const volumeWidget = {\n    id: getId(),\n    titleKey: messages.ocpVolumeUsageAndRequests,\n    reportPathsType: \"ocp\" /* ocp */,\n    reportType: \"volume\" /* volume */,\n    details: {\n        requestKey: messages.requests,\n        showUnits: true,\n        showUsageFirst: true,\n        usageKey: messages.usage,\n    },\n    trend: {\n        computedReportItem: \"usage\" /* usage */,\n        computedReportItemValue: \"total\" /* total */,\n        titleKey: messages.ocpDailyUsageAndRequestComparison,\n        type: 1 /* daily */,\n    },\n    chartFormatter: formatUnits,\n    chartType: \"usage\" /* usage */,\n};\n","import { getType } from 'typesafe-actions';\nimport { setWidgetTab } from './ocpDashboardActions';\nimport { costSummaryWidget, cpuWidget, memoryWidget, volumeWidget } from './ocpDashboardWidgets';\nexport const defaultState = {\n    currentWidgets: [costSummaryWidget.id, cpuWidget.id, memoryWidget.id, volumeWidget.id],\n    widgets: {\n        [costSummaryWidget.id]: costSummaryWidget,\n        [cpuWidget.id]: cpuWidget,\n        [memoryWidget.id]: memoryWidget,\n        [volumeWidget.id]: volumeWidget,\n    },\n};\nexport function ocpDashboardReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(setWidgetTab):\n            return Object.assign(Object.assign({}, state), { widgets: Object.assign(Object.assign({}, state.widgets), { [action.payload.id]: Object.assign(Object.assign({}, state.widgets[action.payload.id]), { currentTab: action.payload.tab }) }) });\n        default:\n            return state;\n    }\n}\n","export const selectPagination = (stateProjector) => {\n    return (state) => {\n        return getPagination(stateProjector(state));\n    };\n};\nexport const getPagination = (payload) => {\n    if (payload === null) {\n        return {\n            page: 1,\n            perPage: 1,\n            count: 0,\n        };\n    }\n    let urlParams = null;\n    if (payload.links.next !== null) {\n        urlParams = new URLSearchParams(payload.links.next.split('?')[1]);\n        const limit = Number(urlParams.get('limit'));\n        const offset = Number(urlParams.get('offset')) - limit;\n        return {\n            page: offset / limit + 1,\n            perPage: limit,\n            count: payload.meta.count,\n        };\n    }\n    if (payload.links.previous !== null) {\n        urlParams = new URLSearchParams(payload.links.previous.split('?')[1]);\n        const limit = Number(urlParams.get('limit'));\n        const offset = Number(urlParams.get('offset')) + limit;\n        return {\n            page: offset / limit + 1,\n            perPage: limit,\n            count: payload.meta.count,\n        };\n    }\n    urlParams = new URLSearchParams(payload.links.first.split('?')[1]);\n    return {\n        page: 1,\n        perPage: Number(urlParams.get('limit')),\n        count: payload.meta.count,\n    };\n};\n","export const selectQuery = (stateProjector, keys) => {\n    return (state) => {\n        const params = getQuery(stateProjector(state));\n        return keys.reduce((acc, curr) => {\n            return Object.assign(Object.assign({}, acc), { [curr]: params.get(curr) });\n        }, {});\n    };\n};\nconst getQuery = (payload) => {\n    if (payload === null) {\n        return new URLSearchParams();\n    }\n    const [, search] = payload.links.first.split('?');\n    return new URLSearchParams(search);\n};\n","export const exportStateKey = 'export';\nexport function getExportId(reportPathsType, reportType, query) {\n    return `${reportPathsType}-${reportType}--${query}`;\n}\n","import { exportStateKey, getExportId } from './exportCommon';\nexport const selectExportState = (state) => state[exportStateKey];\nexport const selectExport = (state, reportPathsType, reportType, query) => selectExportState(state).byId.get(getExportId(reportPathsType, reportType, query));\nexport const selectExportFetchStatus = (state, reportPathsType, reportType, query) => selectExportState(state).fetchStatus.get(getExportId(reportPathsType, reportType, query));\nexport const selectExportError = (state, reportPathsType, reportType, query) => selectExportState(state).errors.get(getExportId(reportPathsType, reportType, query));\n","import { AlertVariant } from '@patternfly/react-core';\nimport { addNotification, removeNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { runExport } from 'api/export/exportUtils';\nimport { ExportsLink } from 'components/exports/exportsLink';\nimport { intl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport React from 'react';\nimport { getExportId } from 'store/export/exportCommon';\nimport { selectExport, selectExportFetchStatus } from 'store/export/exportSelectors';\nimport { createAction } from 'typesafe-actions';\nconst expirationMS = 30 * 60 * 1000; // 30 minutes\nexport const fetchExportRequest = createAction('report/request')();\nexport const fetchExportSuccess = createAction('report/success')();\nexport const fetchExportFailure = createAction('report/failure')();\nconst exportSuccessID = 'cost_management_export_success';\nexport function exportReport(reportPathsType, reportType, query, isExportsFeatureEnabled) {\n    return (dispatch, getState) => {\n        if (!isExportExpired(getState(), reportPathsType, reportType, query)) {\n            return;\n        }\n        const meta = {\n            reportId: getExportId(reportPathsType, reportType, query),\n        };\n        dispatch(fetchExportRequest(meta));\n        runExport(reportPathsType, reportType, query)\n            .then(res => {\n            dispatch(fetchExportSuccess(res.data, meta));\n            if (isExportsFeatureEnabled) {\n                const description = intl.formatMessage(messages.exportsSuccessDesc, {\n                    link: React.createElement(ExportsLink, { isActionLink: true, onClick: () => dispatch(removeNotification(exportSuccessID)) }),\n                    value: React.createElement(\"b\", null, intl.formatMessage(messages.exportsTitle)),\n                });\n                dispatch(addNotification({\n                    description,\n                    dismissable: true,\n                    id: exportSuccessID,\n                    title: intl.formatMessage(messages.exportsSuccess),\n                    variant: AlertVariant.success,\n                }));\n            }\n        })\n            .catch(err => {\n            dispatch(fetchExportFailure(err, meta));\n            if (isExportsFeatureEnabled) {\n                dispatch(addNotification({\n                    description: intl.formatMessage(messages.exportsFailedDesc),\n                    dismissable: true,\n                    title: intl.formatMessage(messages.exportsUnavailable),\n                    variant: AlertVariant.danger,\n                }));\n            }\n        });\n    };\n}\nfunction isExportExpired(state, reportPathsType, reportType, query) {\n    const report = selectExport(state, reportPathsType, reportType, query);\n    const fetchStatus = selectExportFetchStatus(state, reportPathsType, reportType, query);\n    if (fetchStatus === 1 /* inProgress */) {\n        return false;\n    }\n    if (!report) {\n        return true;\n    }\n    const now = Date.now();\n    return now > report.timeRequested + expirationMS;\n}\n","import { runExport as runAwsExport } from './awsExport';\nimport { runExport as runAwsOcpExport } from './awsOcpExport';\nimport { runExport as runAzureExport } from './azureExport';\nimport { runExport as runAzureOcpExport } from './azureOcpExport';\nimport { runExport as runGcpExport } from './gcpExport';\nimport { runExport as runGcpOcpExport } from './gcpOcpExport';\nimport { runExport as runIbmExport } from './ibmExport';\nimport { runExport as runOciExport } from './ociExport';\nimport { runExport as runOcpCloudExport } from './ocpCloudExport';\nimport { runExport as runOcpExport } from './ocpExport';\nexport function runExport(reportPathsType, reportType, query) {\n    let report;\n    switch (reportPathsType) {\n        case \"aws\" /* aws */:\n            report = runAwsExport(reportType, query);\n            break;\n        case \"aws_ocp\" /* awsOcp */:\n            report = runAwsOcpExport(reportType, query);\n            break;\n        case \"azure\" /* azure */:\n            report = runAzureExport(reportType, query);\n            break;\n        case \"oci\" /* oci */:\n            report = runOciExport(reportType, query);\n            break;\n        case \"azure_ocp\" /* azureOcp */:\n            report = runAzureOcpExport(reportType, query);\n            break;\n        case \"gcp\" /* gcp */:\n            report = runGcpExport(reportType, query);\n            break;\n        case \"gcp_ocp\" /* gcpOcp */:\n            report = runGcpOcpExport(reportType, query);\n            break;\n        case \"gcp\" /* ibm */:\n            report = runIbmExport(reportType, query);\n            break;\n        case \"ocp_cloud\" /* ocpCloud */:\n            report = runOcpCloudExport(reportType, query);\n            break;\n        case \"ocp\" /* ocp */:\n            report = runOcpExport(reportType, query);\n            break;\n    }\n    return report;\n}\n","import { ReportTypePaths } from 'api/reports/awsReports';\nimport axios from 'axios';\nexport function runExport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`, {\n        headers: {\n            Accept: 'text/csv',\n        },\n    });\n}\n","import { ReportTypePaths } from 'api/reports/awsOcpReports';\nimport axios from 'axios';\nexport function runExport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`, {\n        headers: {\n            Accept: 'text/csv',\n        },\n    });\n}\n","import { ReportTypePaths } from 'api/reports/azureReports';\nimport axios from 'axios';\nexport function runExport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`, {\n        headers: {\n            Accept: 'text/csv',\n        },\n    });\n}\n","import { ReportTypePaths } from 'api/reports/ociReports';\nimport axios from 'axios';\nexport function runExport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`, {\n        headers: {\n            Accept: 'text/csv',\n        },\n    });\n}\n","import { ReportTypePaths } from 'api/reports/azureOcpReports';\nimport axios from 'axios';\nexport function runExport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`, {\n        headers: {\n            Accept: 'text/csv',\n        },\n    });\n}\n","import { ReportTypePaths } from 'api/reports/gcpReports';\nimport axios from 'axios';\nexport function runExport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`, {\n        headers: {\n            Accept: 'text/csv',\n        },\n    });\n}\n","import { ReportTypePaths } from 'api/reports/gcpOcpReports';\nimport axios from 'axios';\nexport function runExport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`, {\n        headers: {\n            Accept: 'text/csv',\n        },\n    });\n}\n","import { ReportTypePaths } from 'api/reports/ibmReports';\nimport axios from 'axios';\nexport function runExport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`, {\n        headers: {\n            Accept: 'text/csv',\n        },\n    });\n}\n","import { ReportTypePaths } from 'api/reports/ocpCloudReports';\nimport axios from 'axios';\nexport function runExport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`, {\n        headers: {\n            Accept: 'text/csv',\n        },\n    });\n}\n","import { ReportTypePaths } from 'api/reports/ocpReports';\nimport axios from 'axios';\nexport function runExport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`, {\n        headers: {\n            Accept: 'text/csv',\n        },\n    });\n}\n","import { resetState } from 'store/ui/uiActions';\nimport { getType } from 'typesafe-actions';\nimport { fetchExportFailure, fetchExportRequest, fetchExportSuccess } from './exportActions';\nconst defaultState = {\n    byId: new Map(),\n    fetchStatus: new Map(),\n    errors: new Map(),\n};\nexport function exportReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(fetchExportRequest):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.payload.reportId, 1 /* inProgress */) });\n        case getType(fetchExportSuccess):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.reportId, 2 /* complete */), byId: new Map(state.byId).set(action.meta.reportId, {\n                    data: action.payload,\n                    timeRequested: Date.now(),\n                }), errors: new Map(state.errors).set(action.meta.reportId, null) });\n        case getType(fetchExportFailure):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.reportId, 2 /* complete */), errors: new Map(state.errors).set(action.meta.reportId, action.payload) });\n        default:\n            return state;\n    }\n}\n","import { createAction } from 'typesafe-actions';\nexport const setFeatureFlags = createAction('feature/init_feature_flags')();\nexport const resetState = createAction('feature/reset_state')();\n","import { getType } from 'typesafe-actions';\nimport { resetState, setFeatureFlags } from './featureFlagsActions';\nexport const defaultState = {\n    isCurrencyFeatureEnabled: false,\n    isExportsFeatureEnabled: false,\n    isIbmFeatureEnabled: false,\n    isOciFeatureEnabled: false,\n};\nexport const stateKey = 'featureFlags';\nexport function featureFlagsReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(setFeatureFlags):\n            return Object.assign(Object.assign({}, state), { isCurrencyFeatureEnabled: action.payload.isCurrencyFeatureEnabled, isExportsFeatureEnabled: action.payload.isExportsFeatureEnabled, isIbmFeatureEnabled: action.payload.isIbmFeatureEnabled, isOciFeatureEnabled: action.payload.isOciFeatureEnabled });\n        default:\n            return state;\n    }\n}\n","import { stateKey } from './featureFlagsReducer';\nexport const selectFeatureFlagsState = (state) => state[stateKey];\nexport const selectIsCurrencyFeatureEnabled = (state) => selectFeatureFlagsState(state).isCurrencyFeatureEnabled;\nexport const selectIsExportsFeatureEnabled = (state) => selectFeatureFlagsState(state).isExportsFeatureEnabled;\nexport const selectIsIbmFeatureEnabled = (state) => selectFeatureFlagsState(state).isIbmFeatureEnabled;\nexport const selectIsOciFeatureEnabled = (state) => selectFeatureFlagsState(state).isOciFeatureEnabled;\n","import axios from 'axios';\nexport const ForecastTypePaths = {\n    [\"cost\" /* cost */]: 'forecasts/aws/costs/',\n};\nexport function runForecast(forecastType, query) {\n    const insights = window.insights;\n    const path = ForecastTypePaths[forecastType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ForecastTypePaths = {\n    [\"cost\" /* cost */]: 'forecasts/openshift/infrastructures/aws/costs/',\n};\nexport function runForecast(forecastType, query) {\n    const insights = window.insights;\n    const path = ForecastTypePaths[forecastType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ForecastTypePaths = {\n    [\"cost\" /* cost */]: 'forecasts/azure/costs/',\n};\nexport function runForecast(forecastType, query) {\n    const insights = window.insights;\n    const path = ForecastTypePaths[forecastType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ForecastTypePaths = {\n    [\"cost\" /* cost */]: 'forecasts/openshift/infrastructures/azure/costs/',\n};\nexport function runForecast(forecastType, query) {\n    const insights = window.insights;\n    const path = ForecastTypePaths[forecastType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ForecastTypePaths = {\n    [\"cost\" /* cost */]: 'forecasts/gcp/costs/',\n};\nexport function runForecast(forecastType, query) {\n    const insights = window.insights;\n    const path = ForecastTypePaths[forecastType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ForecastTypePaths = {\n    [\"cost\" /* cost */]: 'forecasts/openshift/infrastructures/gcp/costs/',\n};\nexport function runForecast(forecastType, query) {\n    const insights = window.insights;\n    const path = ForecastTypePaths[forecastType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ForecastTypePaths = {\n    [\"cost\" /* cost */]: 'forecasts/ibm/costs/',\n};\nexport function runForecast(forecastType, query) {\n    const insights = window.insights;\n    const path = ForecastTypePaths[forecastType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ForecastTypePaths = {\n    [\"cost\" /* cost */]: 'forecasts/oci/costs/',\n};\nexport function runForecast(forecastType, query) {\n    const insights = window.insights;\n    const path = ForecastTypePaths[forecastType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ForecastTypePaths = {\n    [\"cost\" /* cost */]: 'forecasts/openshift/infrastructures/all/costs/',\n};\nexport function runForecast(forecastType, query) {\n    const insights = window.insights;\n    const path = ForecastTypePaths[forecastType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","import axios from 'axios';\nexport const ForecastTypePaths = {\n    [\"cost\" /* cost */]: 'forecasts/openshift/costs/',\n    [\"infrastructure\" /* infrastructure */]: 'forecasts/openshift/costs/',\n    [\"supplementary\" /* supplementary */]: 'forecasts/openshift/costs/',\n};\nexport function runForecast(forecastType, query) {\n    const insights = window.insights;\n    const path = ForecastTypePaths[forecastType];\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`${path}?${query}`);\n        });\n    }\n    else {\n        return axios.get(`${path}?${query}`);\n    }\n}\n","export const forecastStateKey = 'forecast';\nexport function getForecastId(forecastPathsType, forecastType, query) {\n    return `${forecastPathsType}--${forecastType}--${query}`;\n}\n","import { forecastStateKey, getForecastId } from './forecastCommon';\nexport const selectForecastState = (state) => state[forecastStateKey];\nexport const selectForecast = (state, forecastPathsType, forecastType, query) => selectForecastState(state).byId.get(getForecastId(forecastPathsType, forecastType, query));\nexport const selectForecastFetchStatus = (state, forecastPathsType, forecastType, query) => selectForecastState(state).fetchStatus.get(getForecastId(forecastPathsType, forecastType, query));\nexport const selectForecastError = (state, forecastPathsType, forecastType, query) => selectForecastState(state).errors.get(getForecastId(forecastPathsType, forecastType, query));\n","import { runForecast } from 'api/forecasts/forecastUtils';\nimport { createAction } from 'typesafe-actions';\nimport { getForecastId } from './forecastCommon';\nimport { selectForecast, selectForecastFetchStatus } from './forecastSelectors';\nconst expirationMS = 30 * 60 * 1000; // 30 minutes\nexport const fetchForecastRequest = createAction('forecast/request')();\nexport const fetchForecastSuccess = createAction('forecast/success')();\nexport const fetchForecastFailure = createAction('forecast/failure')();\nexport function fetchForecast(forecastPathsType, forecastType, query) {\n    return (dispatch, getState) => {\n        if (!isForecastExpired(getState(), forecastPathsType, forecastType, query)) {\n            return;\n        }\n        const meta = {\n            forecastId: getForecastId(forecastPathsType, forecastType, query),\n        };\n        dispatch(fetchForecastRequest(meta));\n        runForecast(forecastPathsType, forecastType, query)\n            .then(res => {\n            dispatch(fetchForecastSuccess(res.data, meta));\n        })\n            .catch(err => {\n            dispatch(fetchForecastFailure(err, meta));\n        });\n    };\n}\nfunction isForecastExpired(state, forecastPathsType, forecastType, query) {\n    const forecast = selectForecast(state, forecastPathsType, forecastType, query);\n    const fetchStatus = selectForecastFetchStatus(state, forecastPathsType, forecastType, query);\n    if (fetchStatus === 1 /* inProgress */) {\n        return false;\n    }\n    if (!forecast) {\n        return true;\n    }\n    const now = Date.now();\n    return now > forecast.timeRequested + expirationMS;\n}\n","import { runForecast as runAwsForecast } from './awsForecast';\nimport { runForecast as runAwsOcpForecast } from './awsOcpForecast';\nimport { runForecast as runAzureForecast } from './azureForecast';\nimport { runForecast as runAzureOcpForecast } from './azureOcpForecast';\nimport { runForecast as runGcpForecast } from './gcpForecast';\nimport { runForecast as runGcpOcpForecast } from './gcpOcpForecast';\nimport { runForecast as runIbmForecast } from './ibmForecast';\nimport { runForecast as runOciForecast } from './ociForecast';\nimport { runForecast as runOcpCloudForecast } from './ocpCloudForecast';\nimport { runForecast as runOcpForecast } from './ocpForecast';\nexport function runForecast(forecastPathsType, forecastType, query) {\n    let forecast;\n    switch (forecastPathsType) {\n        case \"aws\" /* aws */:\n            forecast = runAwsForecast(forecastType, query);\n            break;\n        case \"aws_ocp\" /* awsOcp */:\n            forecast = runAwsOcpForecast(forecastType, query);\n            break;\n        case \"azure\" /* azure */:\n            forecast = runAzureForecast(forecastType, query);\n            break;\n        case \"azure_ocp\" /* azureOcp */:\n            forecast = runAzureOcpForecast(forecastType, query);\n            break;\n        case \"gcp\" /* gcp */:\n            forecast = runGcpForecast(forecastType, query);\n            break;\n        case \"gcp_ocp\" /* gcpOcp */:\n            forecast = runGcpOcpForecast(forecastType, query);\n            break;\n        case \"gcp\" /* ibm */:\n            forecast = runIbmForecast(forecastType, query);\n            break;\n        case \"oci\" /* oci */:\n            forecast = runOciForecast(forecastType, query);\n            break;\n        case \"ocp\" /* ocp */:\n            forecast = runOcpForecast(forecastType, query);\n            break;\n        case \"ocp_cloud\" /* ocpCloud */:\n            forecast = runOcpCloudForecast(forecastType, query);\n            break;\n    }\n    return forecast;\n}\n","import { resetState } from 'store/ui/uiActions';\nimport { getType } from 'typesafe-actions';\nimport { fetchForecastFailure, fetchForecastRequest, fetchForecastSuccess } from './forecastActions';\nconst defaultState = {\n    byId: new Map(),\n    fetchStatus: new Map(),\n    errors: new Map(),\n};\nexport function forecastReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(fetchForecastRequest):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.payload.forecastId, 1 /* inProgress */) });\n        case getType(fetchForecastSuccess):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.forecastId, 2 /* complete */), byId: new Map(state.byId).set(action.meta.forecastId, Object.assign(Object.assign({}, action.payload), { timeRequested: Date.now() })), errors: new Map(state.errors).set(action.meta.forecastId, null) });\n        case getType(fetchForecastFailure):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.forecastId, 2 /* complete */), errors: new Map(state.errors).set(action.meta.forecastId, action.payload) });\n        default:\n            return state;\n    }\n}\n","import { resetState } from 'store/ui/uiActions';\nimport { getType } from 'typesafe-actions';\nimport { fetchPriceListFailure, fetchPriceListRequest, fetchPriceListSuccess } from './actions';\nexport const stateKey = 'priceList';\nexport const defaultState = {\n    rates: new Map(),\n    error: new Map(),\n    status: new Map(),\n};\nexport function reducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(fetchPriceListRequest):\n            return Object.assign(Object.assign({}, state), { status: new Map(state.status).set(action.payload.providerUuid, 1 /* inProgress */) });\n        case getType(fetchPriceListSuccess):\n            return Object.assign(Object.assign({}, state), { status: new Map(state.status).set(action.meta.providerUuid, 2 /* complete */), rates: new Map(state.rates).set(action.meta.providerUuid, Object.assign(Object.assign({}, action.payload), { timeRequested: Date.now() })), error: new Map(state.error).set(action.meta.providerUuid, null) });\n        case getType(fetchPriceListFailure):\n            return Object.assign(Object.assign({}, state), { error: new Map(state.error).set(action.meta.providerUuid, action.payload), status: new Map(state.status).set(action.meta.providerUuid, 2 /* complete */) });\n        default:\n            return state;\n    }\n}\n","import { fetchRate } from 'api/rates';\nimport { expirationMS } from 'store/common';\nimport { createAction } from 'typesafe-actions';\nimport { cachedRates, status } from './selectors';\nexport const fetchPriceListRequest = createAction('priceList/request')();\nexport const fetchPriceListSuccess = createAction('priceList/success')();\nexport const fetchPriceListFailure = createAction('priceList/failure')();\nfunction isExpired(state, meta) {\n    const cachedData = cachedRates(state, meta.providerUuid);\n    const reqStatus = status(state, meta.providerUuid);\n    if (reqStatus === 1 /* inProgress */) {\n        return false;\n    }\n    if (!cachedData) {\n        return true;\n    }\n    const now = Date.now();\n    return now > cachedData.timeRequested + expirationMS;\n}\nexport function fetchPriceList(providerUuid) {\n    const meta = { providerUuid };\n    return (dispatch, getState) => {\n        if (!isExpired(getState(), meta)) {\n            return;\n        }\n        dispatch(fetchPriceListRequest(meta));\n        return fetchRate(providerUuid)\n            .then(res => {\n            dispatch(fetchPriceListSuccess(res.data, meta));\n        })\n            .catch(err => {\n            dispatch(fetchPriceListFailure(err, meta));\n        });\n    };\n}\n","import { notifications } from '@redhat-cloud-services/frontend-components-notifications';\nimport { combineReducers } from 'redux';\nimport { accountSettingsReducer, accountSettingsStateKey } from 'store/accountSettings';\nimport { awsCostOverviewReducer, awsCostOverviewStateKey } from 'store/breakdown/costOverview/awsCostOverview';\nimport { azureCostOverviewReducer, azureCostOverviewStateKey } from 'store/breakdown/costOverview/azureCostOverview';\nimport { gcpCostOverviewReducer, gcpCostOverviewStateKey } from 'store/breakdown/costOverview/gcpCostOverview';\nimport { ibmCostOverviewReducer, ibmCostOverviewStateKey } from 'store/breakdown/costOverview/ibmCostOverview';\nimport { ociCostOverviewReducer, ociCostOverviewStateKey } from 'store/breakdown/costOverview/ociCostOverview';\nimport { ocpCostOverviewReducer, ocpCostOverviewStateKey } from 'store/breakdown/costOverview/ocpCostOverview';\nimport { awsHistoricalDataReducer, awsHistoricalDataStateKey } from 'store/breakdown/historicalData/awsHistoricalData';\nimport { azureHistoricalDataReducer, azureHistoricalDataStateKey, } from 'store/breakdown/historicalData/azureHistoricalData';\nimport { gcpHistoricalDataReducer, gcpHistoricalDataStateKey } from 'store/breakdown/historicalData/gcpHistoricalData';\nimport { ibmHistoricalDataReducer, ibmHistoricalDataStateKey } from 'store/breakdown/historicalData/ibmHistoricalData';\nimport { ociHistoricalDataReducer, ociHistoricalDataStateKey } from 'store/breakdown/historicalData/ociHistoricalData';\nimport { ocpHistoricalDataReducer, ocpHistoricalDataStateKey } from 'store/breakdown/historicalData/ocpHistoricalData';\nimport { costModelsReducer, costModelsStateKey } from 'store/costModels';\nimport { awsDashboardReducer, awsDashboardStateKey } from 'store/dashboard/awsDashboard';\nimport { awsOcpDashboardReducer, awsOcpDashboardStateKey } from 'store/dashboard/awsOcpDashboard';\nimport { azureDashboardReducer, azureDashboardStateKey } from 'store/dashboard/azureDashboard';\nimport { azureOcpDashboardReducer, azureOcpDashboardStateKey } from 'store/dashboard/azureOcpDashboard';\nimport { gcpDashboardReducer, gcpDashboardStateKey } from 'store/dashboard/gcpDashboard';\nimport { gcpOcpDashboardReducer, gcpOcpDashboardStateKey } from 'store/dashboard/gcpOcpDashboard';\nimport { ibmDashboardReducer, ibmDashboardStateKey } from 'store/dashboard/ibmDashboard';\nimport { ociDashboardReducer, ociDashboardStateKey } from 'store/dashboard/ociDashboard';\nimport { ocpCloudDashboardReducer, ocpCloudDashboardStateKey } from 'store/dashboard/ocpCloudDashboard';\nimport { ocpDashboardReducer, ocpDashboardStateKey } from 'store/dashboard/ocpDashboard';\nimport { exportReducer, exportStateKey } from 'store/export';\nimport { forecastReducer, forecastStateKey } from 'store/forecasts';\nimport { orgReducer, orgStateKey } from 'store/orgs';\nimport { priceListReducer, priceListStateKey } from 'store/priceList';\nimport { reportReducer, reportStateKey } from 'store/reports';\nimport { resourceReducer, resourceStateKey } from 'store/resources';\nimport { sourcesReducer, sourcesStateKey } from 'store/sourceSettings';\nimport { tagReducer, tagStateKey } from 'store/tags';\nimport { featureFlagsReducer, featureFlagsStateKey } from './featureFlags';\nimport { metricsReducer, metricsStateKey } from './metrics';\nimport { providersReducer, providersStateKey } from './providers';\nimport { rbacReducer, rbacStateKey } from './rbac';\nimport { uiReducer, uiStateKey } from './ui';\nimport { userAccessReducer, userAccessStateKey } from './userAccess';\nexport const rootReducer = combineReducers({\n    [accountSettingsStateKey]: accountSettingsReducer,\n    [awsOcpDashboardStateKey]: awsOcpDashboardReducer,\n    [awsCostOverviewStateKey]: awsCostOverviewReducer,\n    [awsDashboardStateKey]: awsDashboardReducer,\n    [awsHistoricalDataStateKey]: awsHistoricalDataReducer,\n    [azureOcpDashboardStateKey]: azureOcpDashboardReducer,\n    [azureCostOverviewStateKey]: azureCostOverviewReducer,\n    [ociCostOverviewStateKey]: ociCostOverviewReducer,\n    [azureDashboardStateKey]: azureDashboardReducer,\n    [ociDashboardStateKey]: ociDashboardReducer,\n    [azureHistoricalDataStateKey]: azureHistoricalDataReducer,\n    [ociHistoricalDataStateKey]: ociHistoricalDataReducer,\n    [costModelsStateKey]: costModelsReducer,\n    [exportStateKey]: exportReducer,\n    [featureFlagsStateKey]: featureFlagsReducer,\n    [gcpCostOverviewStateKey]: gcpCostOverviewReducer,\n    [gcpDashboardStateKey]: gcpDashboardReducer,\n    [gcpOcpDashboardStateKey]: gcpOcpDashboardReducer,\n    [gcpHistoricalDataStateKey]: gcpHistoricalDataReducer,\n    [ibmCostOverviewStateKey]: ibmCostOverviewReducer,\n    [ibmDashboardStateKey]: ibmDashboardReducer,\n    [ibmHistoricalDataStateKey]: ibmHistoricalDataReducer,\n    [metricsStateKey]: metricsReducer,\n    [ocpCostOverviewStateKey]: ocpCostOverviewReducer,\n    [ocpDashboardStateKey]: ocpDashboardReducer,\n    [ocpCloudDashboardStateKey]: ocpCloudDashboardReducer,\n    [ocpHistoricalDataStateKey]: ocpHistoricalDataReducer,\n    [orgStateKey]: orgReducer,\n    [priceListStateKey]: priceListReducer,\n    [providersStateKey]: providersReducer,\n    [rbacStateKey]: rbacReducer,\n    [reportStateKey]: reportReducer,\n    [forecastStateKey]: forecastReducer,\n    [resourceStateKey]: resourceReducer,\n    [sourcesStateKey]: sourcesReducer,\n    [tagStateKey]: tagReducer,\n    [uiStateKey]: uiReducer,\n    [userAccessStateKey]: userAccessReducer,\n    notifications,\n});\n","import { notificationsMiddleware } from '@redhat-cloud-services/frontend-components-notifications';\nimport axios from 'axios';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport thunk from 'redux-thunk';\nimport { rootReducer } from './rootReducer';\nconst composeEnhancers = typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({ serialize: true })\n    : compose;\nexport const middlewares = [thunk, notificationsMiddleware()];\nexport function configureStore(initialState) {\n    const enhancer = composeEnhancers(applyMiddleware(...middlewares));\n    const store = createStore(rootReducer, initialState, enhancer);\n    axios.interceptors.response.use(null, error => {\n        return Promise.reject(error);\n    });\n    return store;\n}\n","import { fetchRateMetrics } from 'api/metrics';\nimport { createAsyncAction } from 'typesafe-actions';\nexport const { request: fetchMetricsRequest, success: fetchMetricsSuccess, failure: fetchMetricsFailure, } = createAsyncAction('fetch/metrics/request', 'fetch/metrics/success', 'fetch/metrics/failure')();\nexport const fetchMetrics = (source_type = '') => {\n    return (dispatch) => {\n        dispatch(fetchMetricsRequest());\n        return fetchRateMetrics(source_type)\n            .then(res => {\n            dispatch(fetchMetricsSuccess(res));\n        })\n            .catch(err => {\n            dispatch(fetchMetricsFailure(err));\n        });\n    };\n};\n","import axios from 'axios';\nexport function fetchRateMetrics(source_type = '') {\n    const query = source_type ? `&source_type=${source_type}` : '';\n    return axios.get(`metrics/?limit=20${query}`);\n}\n","import { resetState } from 'store/ui/uiActions';\nimport { getType } from 'typesafe-actions';\nimport { fetchMetricsFailure, fetchMetricsRequest, fetchMetricsSuccess } from './actions';\nexport const stateKey = 'metrics';\nexport const defaultState = {\n    error: null,\n    status: 0 /* none */,\n    metrics: null,\n};\nexport const reducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(fetchMetricsSuccess):\n            return {\n                error: null,\n                status: 2 /* complete */,\n                metrics: action.payload.data,\n            };\n        case getType(fetchMetricsFailure):\n            return {\n                status: 2 /* complete */,\n                error: action.payload,\n                metrics: null,\n            };\n        case getType(fetchMetricsRequest):\n            return Object.assign(Object.assign({}, state), { status: 1 /* inProgress */ });\n        default:\n            return state;\n    }\n};\n","import { parseApiError } from 'routes/costModels/createCostModelWizard/parseError';\nimport { stateKey } from './reducer';\nexport const metricsState = (state) => state[stateKey];\nexport const status = (state) => metricsState(state).status;\nexport const error = (state) => {\n    const err = metricsState(state).error;\n    if (err === null) {\n        return '';\n    }\n    return parseApiError(err);\n};\nexport const metrics = (state) => {\n    const metricsPayload = metricsState(state).metrics;\n    if (metricsPayload === null) {\n        return {};\n    }\n    return metricsPayload.data.reduce((acc, curr) => {\n        const prev = acc[curr.label_metric] ? Object.assign({}, acc[curr.label_metric]) : {};\n        return Object.assign(Object.assign({}, acc), { [curr.label_metric]: Object.assign(Object.assign({}, prev), { [curr.label_measurement]: curr }) });\n    }, {});\n};\nexport const maxRate = (state) => {\n    const metricsPayload = metricsState(state).metrics;\n    if (metricsPayload === null) {\n        return 0;\n    }\n    return metricsPayload.data.length;\n};\nexport const costTypes = (state) => {\n    const metricsPayload = metricsState(state).metrics;\n    if (metricsPayload === null) {\n        return [];\n    }\n    return metricsPayload.data.reduce((acc, curr) => {\n        if (acc.includes(curr.default_cost_type)) {\n            return acc;\n        }\n        return [curr.default_cost_type, ...acc];\n    }, []);\n};\n","import axios from 'axios';\nexport const OrgTypePaths = {\n    [\"org\" /* org */]: 'organizations/aws/',\n};\nexport function runOrg(orgType, query) {\n    const path = OrgTypePaths[orgType];\n    return axios.get(`${path}?${query}`);\n}\n","export const orgStateKey = 'org';\nexport function getOrgId(orgPathsType, orgType, query) {\n    return `${orgPathsType}--${orgType}--${query}`;\n}\n","import { getOrgId, orgStateKey } from './orgCommon';\nexport const selectOrgState = (state) => state[orgStateKey];\nexport const selectOrg = (state, orgPathsType, orgType, query) => selectOrgState(state).byId.get(getOrgId(orgPathsType, orgType, query));\nexport const selectOrgFetchStatus = (state, orgPathsType, orgType, query) => selectOrgState(state).fetchStatus.get(getOrgId(orgPathsType, orgType, query));\nexport const selectOrgError = (state, orgPathsType, orgType, query) => selectOrgState(state).errors.get(getOrgId(orgPathsType, orgType, query));\n","import { runOrg } from 'api/orgs/orgUtils';\nimport { createAction } from 'typesafe-actions';\nimport { getOrgId } from './orgCommon';\nimport { selectOrg, selectOrgFetchStatus } from './orgSelectors';\nconst expirationMS = 30 * 60 * 1000; // 30 minutes\nexport const fetchOrgRequest = createAction('org/request')();\nexport const fetchOrgSuccess = createAction('org/success')();\nexport const fetchOrgFailure = createAction('org/failure')();\nexport function fetchOrg(orgPathsType, orgType, query) {\n    return (dispatch, getState) => {\n        if (!isOrgExpired(getState(), orgPathsType, orgType, query)) {\n            return;\n        }\n        const meta = {\n            orgId: getOrgId(orgPathsType, orgType, query),\n        };\n        dispatch(fetchOrgRequest(meta));\n        runOrg(orgPathsType, orgType, query)\n            .then(res => {\n            // See https://github.com/project-koku/koku-ui/pull/580\n            // const repsonseData = dropCurrentMonthData(res, query);\n            dispatch(fetchOrgSuccess(res.data, meta));\n        })\n            .catch(err => {\n            dispatch(fetchOrgFailure(err, meta));\n        });\n    };\n}\nfunction isOrgExpired(state, orgPathsType, orgType, query) {\n    const orgReport = selectOrg(state, orgPathsType, orgType, query);\n    const fetchStatus = selectOrgFetchStatus(state, orgPathsType, orgType, query);\n    if (fetchStatus === 1 /* inProgress */) {\n        return false;\n    }\n    if (!orgReport) {\n        return true;\n    }\n    const now = Date.now();\n    return now > orgReport.timeRequested + expirationMS;\n}\n","import { runOrg as runAwsOrg } from './awsOrgs';\nexport function runOrg(orgPathsType, orgType, query) {\n    let orgReport;\n    switch (orgPathsType) {\n        case \"aws\" /* aws */:\n            orgReport = runAwsOrg(orgType, query);\n            break;\n    }\n    return orgReport;\n}\n","import { resetState } from 'store/ui/uiActions';\nimport { getType } from 'typesafe-actions';\nimport { fetchOrgFailure, fetchOrgRequest, fetchOrgSuccess } from './orgActions';\nconst defaultState = {\n    byId: new Map(),\n    fetchStatus: new Map(),\n    errors: new Map(),\n};\nexport function orgReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(fetchOrgRequest):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.payload.orgId, 1 /* inProgress */) });\n        case getType(fetchOrgSuccess):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.orgId, 2 /* complete */), byId: new Map(state.byId).set(action.meta.orgId, Object.assign(Object.assign({}, action.payload), { timeRequested: Date.now() })), errors: new Map(state.errors).set(action.meta.orgId, null) });\n        case getType(fetchOrgFailure):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.orgId, 2 /* complete */), errors: new Map(state.errors).set(action.meta.orgId, action.payload) });\n        default:\n            return state;\n    }\n}\n","export const stateKey = 'providers';\nexport const addProviderKey = 'add-provider';\nexport const awsProvidersQuery = {\n    limit: 100,\n    type: 'AWS',\n};\nexport const azureProvidersQuery = {\n    limit: 100,\n    type: 'Azure',\n};\nexport const gcpProvidersQuery = {\n    limit: 100,\n    type: 'GCP',\n};\nexport const ibmProvidersQuery = {\n    limit: 100,\n    type: 'IBM',\n};\nexport const ociProvidersQuery = {\n    limit: 100,\n    type: 'OCI',\n};\nexport const ocpProvidersQuery = {\n    limit: 100,\n    type: 'OCP',\n};\n// Omitting the type param, returns all providers\nexport const providersQuery = {\n    limit: 1000,\n};\nexport function getReportId(type, query) {\n    return `${type}--${query}`;\n}\n","import { fetchProviders as apiGetProviders } from 'api/providers';\nimport { createAction } from 'typesafe-actions';\nimport { getReportId } from './providersCommon';\nexport const fetchProvidersRequest = createAction('providers/fetch/request')();\nexport const fetchProvidersSuccess = createAction('providers/fetch/success')();\nexport const fetchProvidersFailure = createAction('providers/fetch/failure')();\nexport function fetchProviders(reportType, query) {\n    return dispatch => {\n        const meta = {\n            reportId: getReportId(reportType, query),\n        };\n        dispatch(fetchProvidersRequest(meta));\n        return apiGetProviders(query)\n            .then(res => {\n            dispatch(fetchProvidersSuccess(res.data, meta));\n        })\n            .catch(err => {\n            dispatch(fetchProvidersFailure(err, meta));\n        });\n    };\n}\nexport const clearProviderFailure = createAction('providers/clear/failure');\n","import { resetState } from 'store/ui/uiActions';\nimport { getType } from 'typesafe-actions';\nimport { fetchProvidersFailure, fetchProvidersRequest, fetchProvidersSuccess } from './providersActions';\nexport const defaultState = {\n    byId: new Map(),\n    errors: new Map(),\n    fetchStatus: new Map(),\n};\nexport function providersReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(fetchProvidersRequest):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.payload.reportId, 1 /* inProgress */) });\n        case getType(fetchProvidersSuccess):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.reportId, 2 /* complete */), byId: new Map(state.byId).set(action.meta.reportId, Object.assign({}, action.payload)), errors: new Map(state.errors).set(action.meta.reportId, null) });\n        case getType(fetchProvidersFailure):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.reportId, 2 /* complete */), errors: new Map(state.errors).set(action.meta.reportId, action.payload) });\n        default:\n            return state;\n    }\n}\n","import { addProviderKey, getReportId, stateKey } from './providersCommon';\nexport const selectProvidersState = (state) => state[stateKey];\n// Add provider\nexport const selectAddProviderFetchStatus = (state) => selectProvidersState(state).fetchStatus.get(addProviderKey);\nexport const selectAddProviderError = (state) => selectProvidersState(state).errors.get(addProviderKey);\n// Fetch providers\nexport const selectProviders = (state, providerType, query) => selectProvidersState(state).byId.get(getReportId(providerType, query));\nexport const selectProvidersFetchStatus = (state, providerType, query) => selectProvidersState(state).fetchStatus.get(getReportId(providerType, query));\nexport const selectProvidersError = (state, providerType, query) => selectProvidersState(state).errors.get(getReportId(providerType, query));\n","import { AlertVariant } from '@patternfly/react-core';\nimport { addNotification } from '@redhat-cloud-services/frontend-components-notifications';\nimport { getRBAC } from 'api/rbac';\nimport { intl } from 'components/i18n';\nimport messages from 'locales/messages';\nimport { createAsyncAction } from 'typesafe-actions';\nexport const { request: fetchRbacRequest, success: fetchRbacSuccess, failure: fetchRbacFailure, } = createAsyncAction('fetch/RBAC/request', 'fetch/RBAC/success', 'fetch/RBAC/failure')();\nexport const fetchRbac = () => {\n    return (dispatch) => {\n        dispatch(fetchRbacRequest());\n        return getRBAC()\n            .then(res => {\n            dispatch(fetchRbacSuccess(res));\n        })\n            .catch(err => {\n            dispatch(addNotification({\n                title: intl.formatMessage(messages.rbacErrorTitle),\n                description: intl.formatMessage(messages.rbacErrorDescription),\n                variant: AlertVariant.danger,\n                dismissable: true,\n            }));\n            dispatch(fetchRbacFailure(err));\n        });\n    };\n};\n","export async function getRBAC() {\n    const _insights = window.insights;\n    if (_insights &&\n        _insights.chrome &&\n        _insights.chrome.auth &&\n        _insights.chrome.auth.getUser &&\n        _insights.chrome.getUserPermissions) {\n        const user = await _insights.chrome.auth.getUser();\n        const permissions = await _insights.chrome.getUserPermissions();\n        return {\n            isOrgAdmin: user.identity.user.is_org_admin,\n            permissions,\n        };\n    }\n    return { isOrgAdmin: false, permissions: null };\n}\n","import { resetState } from 'store/ui/uiActions';\nimport { getType } from 'typesafe-actions';\nimport { fetchRbacFailure, fetchRbacRequest, fetchRbacSuccess } from './actions';\nexport const stateKey = 'RBAC';\nexport const defaultState = {\n    isOrgAdmin: false,\n    permissions: null,\n    status: 0 /* none */,\n    error: null,\n};\nexport const reducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(fetchRbacRequest):\n            return Object.assign(Object.assign({}, state), { status: 1 /* inProgress */ });\n        case getType(fetchRbacSuccess):\n            return Object.assign(Object.assign({}, action.payload), { status: 2 /* complete */, error: null });\n        case getType(fetchRbacFailure):\n            return Object.assign(Object.assign({}, state), { status: 2 /* complete */, error: action.payload });\n        default:\n            return state;\n    }\n};\n","import { stateKey } from './reducer';\nexport const selectRbacState = (state) => state[stateKey];\nexport const isCostModelWritePermission = (state) => {\n    const { isOrgAdmin, permissions } = selectRbacState(state);\n    if (isOrgAdmin === true) {\n        return true;\n    }\n    if (!permissions) {\n        return false;\n    }\n    const costModelPermissions = permissions.filter(item => item.permission.startsWith('cost-management'));\n    if (!costModelPermissions) {\n        return false;\n    }\n    // Check for multiple roles; cost-management:cost-model:read and cost-management:cost-model:write\n    // See https://issues.redhat.com/browse/COST-2816\n    for (const item of costModelPermissions) {\n        if (hasWritePermission(item)) {\n            return true;\n        }\n    }\n    return false;\n};\nconst hasWritePermission = costModelPermissions => {\n    const [app, resource, operation] = costModelPermissions.permission.split(':');\n    if (app === 'cost-management' &&\n        (resource === 'write' || resource === '*') &&\n        (operation === 'write' || operation === '*')) {\n        return true;\n    }\n    if ((resource === 'rate' || resource === 'cost_model') && (operation === 'write' || operation === '*')) {\n        return true;\n    }\n    return false;\n};\n","import axios from 'axios';\nexport const ReportTypePaths = {\n    [\"cost\" /* cost */]: 'reports/openshift/costs/',\n    [\"cpu\" /* cpu */]: 'reports/openshift/compute/',\n    [\"memory\" /* memory */]: 'reports/openshift/memory/',\n    [\"volume\" /* volume */]: 'reports/openshift/volumes/',\n};\nexport function runReport(reportType, query) {\n    const path = ReportTypePaths[reportType];\n    return axios.get(`${path}?${query}`);\n}\n","export const reportStateKey = 'report';\nexport function getReportId(reportPathsType, reportType, query) {\n    return `${reportPathsType}--${reportType}--${query}`;\n}\n","import { getReportId, reportStateKey } from './reportCommon';\nexport const selectReportState = (state) => state[reportStateKey];\nexport const selectReport = (state, reportPathsType, reportType, query) => selectReportState(state).byId.get(getReportId(reportPathsType, reportType, query));\nexport const selectReportFetchStatus = (state, reportPathsType, reportType, query) => selectReportState(state).fetchStatus.get(getReportId(reportPathsType, reportType, query));\nexport const selectReportError = (state, reportPathsType, reportType, query) => selectReportState(state).errors.get(getReportId(reportPathsType, reportType, query));\n","import { runReport } from 'api/reports/reportUtils';\nimport { createAction } from 'typesafe-actions';\nimport { getReportId } from './reportCommon';\nimport { selectReport, selectReportFetchStatus } from './reportSelectors';\nconst expirationMS = 30 * 60 * 1000; // 30 minutes\nexport const fetchReportRequest = createAction('report/request')();\nexport const fetchReportSuccess = createAction('report/success')();\nexport const fetchReportFailure = createAction('report/failure')();\nexport function fetchReport(reportPathsType, reportType, query) {\n    return (dispatch, getState) => {\n        if (!isReportExpired(getState(), reportPathsType, reportType, query)) {\n            return;\n        }\n        const meta = {\n            reportId: getReportId(reportPathsType, reportType, query),\n        };\n        dispatch(fetchReportRequest(meta));\n        runReport(reportPathsType, reportType, query)\n            .then(res => {\n            // See https://github.com/project-koku/koku-ui/pull/580\n            // const repsonseData = dropCurrentMonthData(res, query);\n            dispatch(fetchReportSuccess(res.data, meta));\n        })\n            .catch(err => {\n            dispatch(fetchReportFailure(err, meta));\n        });\n    };\n}\nfunction isReportExpired(state, reportPathsType, reportType, query) {\n    const report = selectReport(state, reportPathsType, reportType, query);\n    const fetchStatus = selectReportFetchStatus(state, reportPathsType, reportType, query);\n    if (fetchStatus === 1 /* inProgress */) {\n        return false;\n    }\n    if (!report) {\n        return true;\n    }\n    const now = Date.now();\n    return now > report.timeRequested + expirationMS;\n}\n","import { runReport as runAwsOcpReport } from './awsOcpReports';\nimport { runReport as runAwsReport } from './awsReports';\nimport { runReport as runAzureOcpReport } from './azureOcpReports';\nimport { runReport as runAzureReport } from './azureReports';\nimport { runReport as runGcpOcpReport } from './gcpOcpReports';\nimport { runReport as runGcpReport } from './gcpReports';\nimport { runReport as runIbmReport } from './ibmReports';\nimport { runReport as runOciReport } from './ociReports';\nimport { runReport as runOcpCloudReport } from './ocpCloudReports';\nimport { runReport as runOcpReport } from './ocpReports';\nimport { runReport as runOcpUsageReport } from './ocpUsageReports';\nexport function runReport(reportPathsType, reportType, query) {\n    let report;\n    switch (reportPathsType) {\n        case \"aws\" /* aws */:\n            report = runAwsReport(reportType, query);\n            break;\n        case \"aws_ocp\" /* awsOcp */:\n            report = runAwsOcpReport(reportType, query);\n            break;\n        case \"azure\" /* azure */:\n            report = runAzureReport(reportType, query);\n            break;\n        case \"azure_ocp\" /* azureOcp */:\n            report = runAzureOcpReport(reportType, query);\n            break;\n        case \"gcp\" /* gcp */:\n            report = runGcpReport(reportType, query);\n            break;\n        case \"gcp_ocp\" /* gcpOcp */:\n            report = runGcpOcpReport(reportType, query);\n            break;\n        case \"gcp\" /* ibm */:\n            report = runIbmReport(reportType, query);\n            break;\n        case \"oci\" /* oci */:\n            report = runOciReport(reportType, query);\n            break;\n        case \"ocp\" /* ocp */:\n            report = runOcpReport(reportType, query);\n            break;\n        case \"ocp_cloud\" /* ocpCloud */:\n            report = runOcpCloudReport(reportType, query);\n            break;\n        case \"ocp_usage\" /* ocpUsage */:\n            report = runOcpUsageReport(reportType, query);\n            break;\n    }\n    return report;\n}\n","import { resetState } from 'store/ui/uiActions';\nimport { getType } from 'typesafe-actions';\nimport { fetchReportFailure, fetchReportRequest, fetchReportSuccess } from './reportActions';\nconst defaultState = {\n    byId: new Map(),\n    fetchStatus: new Map(),\n    errors: new Map(),\n};\nexport function reportReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(fetchReportRequest):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.payload.reportId, 1 /* inProgress */) });\n        case getType(fetchReportSuccess):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.reportId, 2 /* complete */), byId: new Map(state.byId).set(action.meta.reportId, Object.assign(Object.assign({}, action.payload), { timeRequested: Date.now() })), errors: new Map(state.errors).set(action.meta.reportId, null) });\n        case getType(fetchReportFailure):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.reportId, 2 /* complete */), errors: new Map(state.errors).set(action.meta.reportId, action.payload) });\n        default:\n            return state;\n    }\n}\n","export const resourceStateKey = 'resource';\nexport function getResourceId(resourcePathsType, resourceType, query) {\n    return `${resourcePathsType}--${resourceType}--${query}`;\n}\n","import { getResourceId, resourceStateKey } from './resourceCommon';\nexport const selectResourceState = (state) => state[resourceStateKey];\nexport const selectResource = (state, resourcePathsType, resourceType, query) => selectResourceState(state).byId.get(getResourceId(resourcePathsType, resourceType, query));\nexport const selectResourceFetchStatus = (state, resourcePathsType, resourceType, query) => selectResourceState(state).fetchStatus.get(getResourceId(resourcePathsType, resourceType, query));\nexport const selectResourceError = (state, resourcePathsType, resourceType, query) => selectResourceState(state).errors.get(getResourceId(resourcePathsType, resourceType, query));\n","import { runResource } from 'api/resources/resourceUtils';\nimport { createAction } from 'typesafe-actions';\nimport { getResourceId } from './resourceCommon';\nimport { selectResource, selectResourceFetchStatus } from './resourceSelectors';\nconst expirationMS = 30 * 60 * 1000; // 30 minutes\nexport const fetchResourceRequest = createAction('resource/request')();\nexport const fetchResourceSuccess = createAction('resource/success')();\nexport const fetchResourceFailure = createAction('resource/failure')();\nexport function fetchResource(resourcePathsType, resourceType, query) {\n    return (dispatch, getState) => {\n        if (!isResourceExpired(getState(), resourcePathsType, resourceType, query)) {\n            return;\n        }\n        const meta = {\n            resourceId: getResourceId(resourcePathsType, resourceType, query),\n        };\n        dispatch(fetchResourceRequest(meta));\n        runResource(resourcePathsType, resourceType, query)\n            .then(res => {\n            dispatch(fetchResourceSuccess(res.data, meta));\n        })\n            .catch(err => {\n            dispatch(fetchResourceFailure(err, meta));\n        });\n    };\n}\nfunction isResourceExpired(state, resourcePathsType, resourceType, query) {\n    const resource = selectResource(state, resourcePathsType, resourceType, query);\n    const fetchStatus = selectResourceFetchStatus(state, resourcePathsType, resourceType, query);\n    if (fetchStatus === 1 /* inProgress */) {\n        return false;\n    }\n    if (!resource) {\n        return true;\n    }\n    const now = Date.now();\n    return now > resource.timeRequested + expirationMS;\n}\n","import { resetState } from 'store/ui/uiActions';\nimport { getType } from 'typesafe-actions';\nimport { fetchResourceFailure, fetchResourceRequest, fetchResourceSuccess } from './resourceActions';\nconst defaultState = {\n    byId: new Map(),\n    fetchStatus: new Map(),\n    errors: new Map(),\n};\nexport function resourceReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(fetchResourceRequest):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.payload.resourceId, 1 /* inProgress */) });\n        case getType(fetchResourceSuccess):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.resourceId, 2 /* complete */), byId: new Map(state.byId).set(action.meta.resourceId, Object.assign(Object.assign({}, action.payload), { timeRequested: Date.now() })), errors: new Map(state.errors).set(action.meta.resourceId, null) });\n        case getType(fetchResourceFailure):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.resourceId, 2 /* complete */), errors: new Map(state.errors).set(action.meta.resourceId, action.payload) });\n        default:\n            return state;\n    }\n}\n","import { fetchProviders as apiGetSources } from 'api/providers';\nimport { createAction, createAsyncAction } from 'typesafe-actions';\nexport const updateFilterToolbar = createAction('fetch/source/filter')();\nexport const { request: fetchSourcesRequest, success: fetchSourcesSuccess, failure: fetchSourcesFailure, } = createAsyncAction('fetch/source/request', 'fetch/source/success', 'fetch/source/failure')();\nexport const fetchSources = (query = '') => {\n    return (dispatch) => {\n        dispatch(fetchSourcesRequest());\n        return apiGetSources(query)\n            .then(res => {\n            dispatch(fetchSourcesSuccess(res));\n        })\n            .catch(err => {\n            dispatch(fetchSourcesFailure(err));\n        });\n    };\n};\n","import { resetState } from 'store/ui/uiActions';\nimport { getType } from 'typesafe-actions';\nimport { fetchSourcesFailure, fetchSourcesRequest, fetchSourcesSuccess, updateFilterToolbar } from './actions';\nexport const stateKey = 'sources';\nexport const defaultState = {\n    sources: null,\n    error: null,\n    status: 0 /* none */,\n    currentFilterType: 'name',\n    currentFilterValue: '',\n    filter: '',\n};\nexport const reducer = (state = defaultState, action) => {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(fetchSourcesRequest):\n            return Object.assign(Object.assign({}, state), { status: 1 /* inProgress */ });\n        case getType(fetchSourcesSuccess):\n            return Object.assign(Object.assign({}, state), { currentFilterValue: '', filter: state.currentFilterValue, status: 2 /* complete */, error: null, sources: action.payload.data });\n        case getType(fetchSourcesFailure):\n            return Object.assign(Object.assign({}, state), { status: 2 /* complete */, error: action.payload });\n        case getType(updateFilterToolbar):\n            return Object.assign(Object.assign({}, state), action.payload);\n        default:\n            return state;\n    }\n};\n","import { selectPagination } from 'store/djangoUtils/pagination';\nimport { selectQuery } from 'store/djangoUtils/query';\nimport { stateKey } from './reducer';\nexport const sourcesState = (state) => state[stateKey];\nexport const sources = (state) => {\n    const srcs = sourcesState(state).sources;\n    if (srcs) {\n        return srcs.data;\n    }\n    return [];\n};\nexport const status = (state) => sourcesState(state).status;\nexport const error = (state) => sourcesState(state).error;\nexport const currentFilterValue = (state) => sourcesState(state).currentFilterValue;\nexport const currentFilterType = (state) => sourcesState(state).currentFilterType;\nexport const filter = (state) => sourcesState(state).filter;\nexport const query = selectQuery((state) => sourcesState(state).sources, ['name', 'type', 'offset', 'limit']);\nexport const pagination = selectPagination((state) => sourcesState(state).sources);\n","import axios from 'axios';\nexport const TagTypePaths = {\n    [\"tag\" /* tag */]: 'tags/openshift/infrastructures/aws/',\n};\nexport function runTag(tagType, query) {\n    const path = TagTypePaths[tagType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const TagTypePaths = {\n    [\"tag\" /* tag */]: 'tags/aws/',\n};\nexport function runTag(tagType, query) {\n    const path = TagTypePaths[tagType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const TagTypePaths = {\n    [\"tag\" /* tag */]: 'tags/openshift/infrastructures/azure/',\n};\nexport function runTag(tagType, query) {\n    const path = TagTypePaths[tagType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const TagTypePaths = {\n    [\"tag\" /* tag */]: 'tags/azure/',\n};\nexport function runTag(tagType, query) {\n    const path = TagTypePaths[tagType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const TagTypePaths = {\n    [\"tag\" /* tag */]: 'tags/openshift/infrastructures/gcp/',\n};\nexport function runTag(tagType, query) {\n    const path = TagTypePaths[tagType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const TagTypePaths = {\n    [\"tag\" /* tag */]: 'tags/gcp/',\n};\nexport function runTag(tagType, query) {\n    const path = TagTypePaths[tagType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const TagTypePaths = {\n    [\"tag\" /* tag */]: 'tags/ibm/',\n};\nexport function runTag(tagType, query) {\n    const path = TagTypePaths[tagType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const TagTypePaths = {\n    [\"tag\" /* tag */]: 'tags/oci/',\n};\nexport function runTag(tagType, query) {\n    const path = TagTypePaths[tagType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const TagTypePaths = {\n    [\"tag\" /* tag */]: 'tags/openshift/infrastructures/all/',\n};\nexport function runTag(tagType, query) {\n    const path = TagTypePaths[tagType];\n    return axios.get(`${path}?${query}`);\n}\n","import axios from 'axios';\nexport const TagTypePaths = {\n    [\"tag\" /* tag */]: 'tags/openshift/',\n};\nexport function runTag(tagType, query) {\n    const path = TagTypePaths[tagType];\n    return axios.get(`${path}?${query}`);\n}\n","export const tagStateKey = 'tag';\nexport function getTagId(tagPathsType, tagType, query) {\n    return `${tagPathsType}--${tagType}--${query}`;\n}\n","import { getTagId, tagStateKey } from './tagCommon';\nexport const selectTagState = (state) => state[tagStateKey];\nexport const selectTag = (state, tagPathsType, tagType, query) => selectTagState(state).byId.get(getTagId(tagPathsType, tagType, query));\nexport const selectTagFetchStatus = (state, tagPathsType, tagType, query) => selectTagState(state).fetchStatus.get(getTagId(tagPathsType, tagType, query));\nexport const selectTagError = (state, tagPathsType, tagType, query) => selectTagState(state).errors.get(getTagId(tagPathsType, tagType, query));\n","import { runTag } from 'api/tags/tagUtils';\nimport { createAction } from 'typesafe-actions';\nimport { getTagId } from './tagCommon';\nimport { selectTag, selectTagFetchStatus } from './tagSelectors';\nconst expirationMS = 30 * 60 * 1000; // 30 minutes\nexport const fetchTagRequest = createAction('tag/request')();\nexport const fetchTagSuccess = createAction('tag/success')();\nexport const fetchTagFailure = createAction('tag/failure')();\nexport function fetchTag(tagPathsType, tagType, query) {\n    return (dispatch, getState) => {\n        if (!isTagExpired(getState(), tagPathsType, tagType, query)) {\n            return;\n        }\n        const meta = {\n            tagId: getTagId(tagPathsType, tagType, query),\n        };\n        dispatch(fetchTagRequest(meta));\n        runTag(tagPathsType, tagType, query)\n            .then(res => {\n            // See https://github.com/project-koku/koku-ui/pull/580\n            // const repsonseData = dropCurrentMonthData(res, query);\n            dispatch(fetchTagSuccess(res.data, meta));\n        })\n            .catch(err => {\n            dispatch(fetchTagFailure(err, meta));\n        });\n    };\n}\nfunction isTagExpired(state, tagPathsType, tagType, query) {\n    const tagReport = selectTag(state, tagPathsType, tagType, query);\n    const fetchStatus = selectTagFetchStatus(state, tagPathsType, tagType, query);\n    if (fetchStatus === 1 /* inProgress */) {\n        return false;\n    }\n    if (!tagReport) {\n        return true;\n    }\n    const now = Date.now();\n    return now > tagReport.timeRequested + expirationMS;\n}\n","import { runTag as runAwsOcpTag } from './awsOcpTags';\nimport { runTag as runAwsTag } from './awsTags';\nimport { runTag as runAzureOcpTag } from './azureOcpTags';\nimport { runTag as runAzureTag } from './azureTags';\nimport { runTag as runGcpOcpTag } from './gcpOcpTags';\nimport { runTag as runGcpTag } from './gcpTags';\nimport { runTag as runIbmTag } from './ibmTags';\nimport { runTag as runOciTag } from './ociTags';\nimport { runTag as runOcpCloudTag } from './ocpCloudTags';\nimport { runTag as runOcpTag } from './ocpTags';\nexport function runTag(tagPathsType, tagType, query) {\n    let tagReport;\n    switch (tagPathsType) {\n        case \"aws\" /* aws */:\n            tagReport = runAwsTag(tagType, query);\n            break;\n        case \"aws_ocp\" /* awsOcp */:\n            tagReport = runAwsOcpTag(tagType, query);\n            break;\n        case \"azure\" /* azure */:\n            tagReport = runAzureTag(tagType, query);\n            break;\n        case \"oci\" /* oci */:\n            tagReport = runOciTag(tagType, query);\n            break;\n        case \"azure_ocp\" /* azureOcp */:\n            tagReport = runAzureOcpTag(tagType, query);\n            break;\n        case \"gcp\" /* gcp */:\n            tagReport = runGcpTag(tagType, query);\n            break;\n        case \"gcp_ocp\" /* gcpOcp */:\n            tagReport = runGcpOcpTag(tagType, query);\n            break;\n        case \"gcp\" /* ibm */:\n            tagReport = runIbmTag(tagType, query);\n            break;\n        case \"ocp\" /* ocp */:\n            tagReport = runOcpTag(tagType, query);\n            break;\n        case \"ocp_cloud\" /* ocpCloud */:\n            tagReport = runOcpCloudTag(tagType, query);\n            break;\n    }\n    return tagReport;\n}\n","import { resetState } from 'store/ui/uiActions';\nimport { getType } from 'typesafe-actions';\nimport { fetchTagFailure, fetchTagRequest, fetchTagSuccess } from './tagActions';\nconst defaultState = {\n    byId: new Map(),\n    fetchStatus: new Map(),\n    errors: new Map(),\n};\nexport function tagReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(fetchTagRequest):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.payload.tagId, 1 /* inProgress */) });\n        case getType(fetchTagSuccess):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.tagId, 2 /* complete */), byId: new Map(state.byId).set(action.meta.tagId, Object.assign(Object.assign({}, action.payload), { timeRequested: Date.now() })), errors: new Map(state.errors).set(action.meta.tagId, null) });\n        case getType(fetchTagFailure):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.tagId, 2 /* complete */), errors: new Map(state.errors).set(action.meta.tagId, action.payload) });\n        default:\n            return state;\n    }\n}\n","import { getType } from 'typesafe-actions';\nimport { closeExportsDrawer, openExportsDrawer, resetState } from './uiActions';\nexport const defaultState = {\n    isExportsDrawerOpen: false,\n};\nexport const stateKey = 'ui';\nexport function uiReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(closeExportsDrawer):\n            return Object.assign(Object.assign({}, state), { isExportsDrawerOpen: false });\n        case getType(openExportsDrawer):\n            return Object.assign(Object.assign({}, state), { isExportsDrawerOpen: true });\n        default:\n            return state;\n    }\n}\n","import { stateKey } from './uiReducer';\nexport const selectUIState = (state) => state[stateKey];\nexport const selectIsExportsDrawerOpen = (state) => selectUIState(state).isExportsDrawerOpen;\n","import { createAction } from 'typesafe-actions';\nexport const closeExportsDrawer = createAction('ui/close_exports_drawer')();\nexport const openExportsDrawer = createAction('ui/open_exports_drawer')();\nexport const resetState = createAction('ui/reset_state')();\n","export const stateKey = 'userAccess';\nexport const userAccessKey = 'user-access';\nexport const awsUserAccessQuery = {\n    type: 'AWS',\n};\nexport const azureUserAccessQuery = {\n    type: 'Azure',\n};\nexport const costModelUserAccessQuery = {\n    type: 'cost_model',\n};\nexport const ocpUserAccessQuery = {\n    type: 'OCP',\n};\nexport const gcpUserAccessQuery = {\n    type: 'GCP',\n};\nexport const ibmUserAccessQuery = {\n    type: 'IBM',\n    beta: true,\n};\n// Omitting the type param returns all user access\nexport const userAccessQuery = {};\nexport function getReportId(type, query) {\n    return `${type}--${query}`;\n}\n","import { fetchUserAccess as apiGetUserAccess } from 'api/userAccess';\nimport { createAction } from 'typesafe-actions';\nimport { getReportId } from './userAccessCommon';\nexport const fetchUserAccessRequest = createAction('userAccess/fetch/request')();\nexport const fetchUserAccessSuccess = createAction('userAccess/fetch/success')();\nexport const fetchUserAccessFailure = createAction('userAccess/fetch/failure')();\nexport function fetchUserAccess(reportType, query) {\n    return dispatch => {\n        const meta = {\n            reportId: getReportId(reportType, query),\n        };\n        dispatch(fetchUserAccessRequest(meta));\n        return apiGetUserAccess(query)\n            .then(res => {\n            dispatch(fetchUserAccessSuccess(res.data, meta));\n        })\n            .catch(err => {\n            dispatch(fetchUserAccessFailure(err, meta));\n        });\n    };\n}\n","import axios from 'axios';\n// If the user-access API is called without a query parameter, all types are returned in the response\nexport function fetchUserAccess(query) {\n    const insights = window.insights;\n    const queryString = query ? `?${query}` : '';\n    if (insights && insights.chrome && insights.chrome.auth && insights.chrome.auth.getUser) {\n        return insights.chrome.auth.getUser().then(() => {\n            return axios.get(`user-access/${queryString}`);\n        });\n    }\n    else {\n        return axios.get(`user-access/${queryString}`);\n    }\n}\n","import { resetState } from 'store/ui/uiActions';\nimport { getType } from 'typesafe-actions';\nimport { fetchUserAccessFailure, fetchUserAccessRequest, fetchUserAccessSuccess } from './userAccessActions';\nexport const defaultState = {\n    byId: new Map(),\n    errors: new Map(),\n    fetchStatus: new Map(),\n};\nexport function userAccessReducer(state = defaultState, action) {\n    switch (action.type) {\n        case getType(resetState):\n            state = defaultState;\n            return state;\n        case getType(fetchUserAccessRequest):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.payload.reportId, 1 /* inProgress */) });\n        case getType(fetchUserAccessSuccess):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.reportId, 2 /* complete */), byId: new Map(state.byId).set(action.meta.reportId, Object.assign({}, action.payload)), errors: new Map(state.errors).set(action.meta.reportId, null) });\n        case getType(fetchUserAccessFailure):\n            return Object.assign(Object.assign({}, state), { fetchStatus: new Map(state.fetchStatus).set(action.meta.reportId, 2 /* complete */), errors: new Map(state.errors).set(action.meta.reportId, action.payload) });\n        default:\n            return state;\n    }\n}\n","import { getReportId, stateKey } from './userAccessCommon';\nexport const selectUserAccessState = (state) => state[stateKey];\n// Fetch userAccess\nexport const selectUserAccess = (state, providerType, query) => selectUserAccessState(state).byId.get(getReportId(providerType, query));\nexport const selectUserAccessFetchStatus = (state, providerType, query) => selectUserAccessState(state).fetchStatus.get(getReportId(providerType, query));\nexport const selectUserAccessError = (state, providerType, query) => selectUserAccessState(state).errors.get(getReportId(providerType, query));\n","import { parseQuery } from 'api/queries/query';\nimport { getCostType as getCostTypeFromLocaleStorage } from 'utils/localStorage';\n// Returns cost type\nexport const getCostType = () => {\n    const query = parseQuery(location.search);\n    if (query.cost_type) {\n        return query.cost_type;\n    }\n    switch (getCostTypeFromLocaleStorage()) {\n        case 'blended_cost':\n            return \"blended_cost\" /* blended */;\n        case 'savingsplan_effective_cost':\n            return \"savingsplan_effective_cost\" /* amortized */;\n        case 'unblended_cost':\n        default:\n            return \"unblended_cost\" /* unblended */;\n    }\n};\n","import { getLocale, intl } from 'components/i18n';\nimport messages from 'locales/messages';\n// Returns the number of decimals for given string\nexport const countDecimals = (value, useLocale = true) => {\n    const decimalSeparator = useLocale ? Number('1.1').toLocaleString(getLocale(), {}).substring(1, 2) : '.';\n    const decimals = value.split(decimalSeparator);\n    return decimals[1] ? decimals[1].length : 0;\n};\n// Currencies are formatted differently, depending on the locale you're using. For example, the dollar\n// sign may appear on the left or the right of the currency symbol for French Vs German.\n//\n// Using the ISO currency code AUD, $12.34 USD is formatted per the locales below.\n// See ICU currencies https://www.localeplanet.com/icu/currency.html\n//\n// en: A$12.34\n// fr: 12,34 $AU\n// de: 12,34 AU$\n//\n// Note: Some currencies do not have decimals, such as JPY, and some have 3 decimals such as IQD.\n// See https://docs.adyen.com/development-resources/currency-codes\nexport const formatCurrency = (value, units, options = {}) => {\n    let fValue = value;\n    if (!value) {\n        fValue = 0;\n    }\n    // Don't specify default fraction digits here, rely on react-intl instead\n    return intl.formatNumber(fValue, Object.assign({ style: 'currency', currency: units ? units.toUpperCase() : 'USD' }, options));\n};\nexport const formatCurrencyAbbreviation = (value, units = 'USD') => {\n    let fValue = value;\n    if (!value) {\n        fValue = 0;\n    }\n    // Derived from https://stackoverflow.com/questions/37799955/how-can-i-format-big-numbers-with-tolocalestring\n    const abbreviationFormats = [\n        { val: 1e15, symbol: 'quadrillion' },\n        { val: 1e12, symbol: 'trillion' },\n        { val: 1e9, symbol: 'billion' },\n        { val: 1e6, symbol: 'million' },\n        { val: 1e3, symbol: 'thousand' },\n    ];\n    // Find the proper format to use\n    let format;\n    if (abbreviationFormats != null) {\n        format = abbreviationFormats.find(f => fValue >= f.val);\n    }\n    // Apply format and insert symbol next to the numeric portion of the formatted string\n    if (format != null) {\n        const { val, symbol } = format;\n        return intl.formatMessage(messages.currencyAbbreviations, {\n            symbol,\n            value: formatCurrency(fValue / val, units, {\n                minimumFractionDigits: 0,\n                maximumFractionDigits: 0,\n            }),\n        });\n    }\n    // If no format was found, format value without abbreviation\n    return formatCurrency(value, units, {\n        minimumFractionDigits: 0,\n        maximumFractionDigits: 0,\n    });\n};\n// Formats cost model rates with 0 to 10 decimals\n// https://issues.redhat.com/browse/COST-1884\nexport const formatCurrencyRate = (value, units, options = {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 10,\n}) => {\n    return formatCurrency(value, units, options);\n};\n// Formats cost model rates with 0 to 10 decimals\n// https://issues.redhat.com/browse/COST-1884\nexport const formatCurrencyRateRaw = (value, units, options = {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 10,\n}) => {\n    return formatCurrencyRaw(value, units, options);\n};\n// Formats without currency symbol\nexport const formatCurrencyRaw = (value, units, options = {}) => {\n    return formatCurrency(value, units, Object.assign({ currencyDisplay: 'code' }, options))\n        .toString()\n        .replace(units, '')\n        .trim();\n};\n// Returns formatted units or currency with given currency-code\nexport const formatUnits = (value, units, options) => {\n    const lookup = unitsLookupKey(units);\n    const fValue = value || 0;\n    switch (lookup) {\n        case 'core_hours':\n        case 'hour':\n        case 'hrs':\n            return formatUsageHrs(fValue, options);\n        case 'gb':\n        case 'gb_hours':\n        case 'gb_mo':\n        case 'gibibyte_month':\n        case 'tag_mo':\n        case 'vm_hours':\n            return formatUsageGb(fValue, options);\n    }\n    return unknownTypeFormatter(fValue, options);\n};\nexport const formatPercentage = (value, options = {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 2,\n}) => {\n    return value.toLocaleString(getLocale(), options);\n};\n// Formats cost model markup with 0 to 10 decimals\n// https://issues.redhat.com/browse/COST-1884\nexport const formatPercentageMarkup = (value, options = {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 10,\n}) => {\n    return value.toLocaleString(getLocale(), options);\n};\nconst formatUsageGb = (value, options = {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n}) => {\n    return value.toLocaleString(getLocale(), options);\n};\nconst formatUsageHrs = (value, options = {\n    minimumFractionDigits: 0,\n    maximumFractionDigits: 0,\n}) => {\n    return value.toLocaleString(getLocale(), options);\n};\n// Returns true if given percentage or currency format is valid for current locale\nexport const isCurrencyFormatValid = (value) => {\n    const decimalSeparator = intl.formatNumber(1.1).toString().replace(/1/g, '');\n    // ^[0-9] The number must start with 0-9\n    // \\d* The number can then have any number of any digits\n    // (...)$ look at the next group from the end (...)$\n    // (...)*(...)? Look for groups optionally. The first is for the comma, the second is for the decimal.\n    // (,\\d{3}){1} Look for one occurrence of a comma followed by exactly three digits\n    // \\.\\d Look for a decimal followed by any number of any digits\n    //\n    // See https://stackoverflow.com/questions/2227370/currency-validation\n    const regex = decimalSeparator === '.' ? /^-?[0-9]\\d*(((,\\d{3}){1})*(\\.\\d*)?)$/ : /^-?[0-9]\\d*(((\\.\\d{3}){1})*(,\\d*)?)$/;\n    return regex.test(value);\n};\n// Returns true if given percentage is valid for current locale\nexport const isPercentageFormatValid = (value) => {\n    return isCurrencyFormatValid(value);\n};\n// This function normalizes a given currency or percentage.\n//\n// Some locales us a comma as the decimal separator (e.g., \"1.234,56\" in German), which must be\n// replaced for APIs where USD decimal format is expected.\n//\n// Note that the group separator (e.g., \"1,234.56\" in USD) must also be removed when formatting\n// currencies and percentages to display in the browser's locale.\nexport const unFormat = (value) => {\n    if (!value) {\n        return value;\n    }\n    const groupSeparator = intl.formatNumber(1111).toString().replace(/1/g, '');\n    const decimalSeparator = intl.formatNumber(1.1).toString().replace(/1/g, '');\n    let rawValue = value.toString().replace(groupSeparator === ',' ? /,/g : /\\./g, '');\n    rawValue = rawValue.replace(decimalSeparator === '.' ? /\\./g : /,/g, '.');\n    return Number.isNaN(rawValue) ? '0' : rawValue;\n};\nconst unknownTypeFormatter = (value, options) => {\n    return value.toLocaleString(getLocale(), options);\n};\n// Returns i18n key for given units\nexport const unitsLookupKey = (units) => {\n    const lookup = units ? units.replace(/[- ]/g, '_').toLowerCase() : '';\n    switch (lookup) {\n        case 'core_hours':\n        case 'gb':\n        case 'gb_hours':\n        case 'gb_mo':\n        case 'cluser_month':\n        case 'pvc_month':\n        case 'gibibyte_month':\n        case 'hour':\n        case 'hrs':\n        case 'tag_mo':\n        case 'vm_hours':\n            return lookup;\n        case 'gb_month':\n            return 'gb_mo';\n        default:\n            return undefined;\n    }\n};\n","export const deleteSessionCookie = name => {\n    // Delete only if cookie exists\n    if (getCookie(name)) {\n        const now = new Date();\n        now.setTime(now.getTime() - 3600);\n        document.cookie = `${name}=; expires=${now.toUTCString()}; path=/`;\n    }\n};\nexport const getCookie = name => {\n    const cookie = document.cookie.match('(^|;)\\\\s*' + name + '\\\\s*=\\\\s*([^;]+)');\n    return cookie ? cookie.pop() : '';\n};\n// Returns session token\nexport const getTokenCookie = () => {\n    return getCookie('cs_jwt');\n};\nexport const setSessionCookie = (name, value) => {\n    document.cookie = `${name}=${value}; path=/`;\n};\n","import { parseQuery } from 'api/queries/query';\nimport { getTokenCookie } from 'utils/cookie';\nconst accountCurrencyID = 'cost_management_account_currency';\nconst costTypeID = 'cost_management_cost_type';\nconst currencyID = 'cost_management_currency';\nconst inactiveSourcesID = 'cost_management_inactive_sources';\nconst sessionTokenID = 'cost_management_session';\n// Returns a subset of the token cookie\nexport const getPartialTokenCookie = () => {\n    const token = getTokenCookie();\n    return token.substring(token.length - 40, token.length);\n};\n/**\n * Session\n */\n// Deletes session token\nexport const deleteSessionToken = () => {\n    localStorage.removeItem(sessionTokenID);\n};\n// Returns session token\nexport const getSessionToken = () => {\n    return localStorage.getItem(sessionTokenID);\n};\n// Invalidates session if not valid and restores query param values\nexport const invalidateSession = () => {\n    if (!isSessionValid()) {\n        deleteSessionToken();\n        // Delete cost type\n        deleteCostType();\n        // Delete currency\n        deleteAccountCurrency();\n        deleteCurrency();\n    }\n};\n// Returns true if session is valid\nexport const isSessionValid = () => {\n    return getSessionToken() === getPartialTokenCookie();\n};\n// Save partial session token\nexport const saveSessionToken = () => {\n    localStorage.setItem(sessionTokenID, getPartialTokenCookie());\n};\n/**\n * Cost type\n */\n// Delete cost type\nexport const deleteCostType = () => {\n    localStorage.removeItem(costTypeID);\n};\n// Returns cost type\nexport const getCostType = () => {\n    const costType = localStorage.getItem(costTypeID);\n    return costType && costType !== null ? costType : undefined;\n};\n// Returns true if cost type is available\nexport const isCostTypeAvailable = () => {\n    const costType = localStorage.getItem(costTypeID);\n    return costType && costType !== null;\n};\n// Restore cost type from query param if available\nexport const restoreCostType = () => {\n    const queryFromRoute = parseQuery(location.search);\n    if (queryFromRoute.cost_type) {\n        setCostType(queryFromRoute.cost_type);\n    }\n};\n// Set cost type\nexport const setCostType = (value) => {\n    localStorage.setItem(costTypeID, value);\n    saveSessionToken();\n};\n/**\n * Currency\n */\n// Deletes account currency\nexport const deleteAccountCurrency = () => {\n    localStorage.removeItem(accountCurrencyID);\n};\n// Deletes currency\nexport const deleteCurrency = () => {\n    localStorage.removeItem(currencyID);\n};\n// Returns account currency\nexport const getAccountCurrency = () => {\n    const units = localStorage.getItem(accountCurrencyID);\n    return units ? units : 'USD';\n};\n// Returns currency\nexport const getCurrency = () => {\n    const units = localStorage.getItem(currencyID);\n    return units ? units : 'USD';\n};\n// Returns true if currency is available\nexport const isCurrencyAvailable = () => {\n    const currency = localStorage.getItem(currencyID);\n    return currency && currency !== null;\n};\n// Restore currency from query param if available\nexport const restoreCurrency = () => {\n    const queryFromRoute = parseQuery(location.search);\n    if (queryFromRoute.currency) {\n        setCurrency(queryFromRoute.currency);\n    }\n};\n// Set account currency\nexport const setAccountCurrency = (value) => {\n    localStorage.setItem(accountCurrencyID, value);\n    saveSessionToken();\n};\n// Set currency\nexport const setCurrency = (value) => {\n    localStorage.setItem(currencyID, value);\n    saveSessionToken();\n};\n/**\n * Inactive sources\n */\n// Deletes inactive sources\nexport const deleteInactiveSources = () => {\n    localStorage.removeItem(inactiveSourcesID);\n};\n// Returns inactive sources\nexport const getInactiveSources = () => {\n    return localStorage.getItem(inactiveSourcesID);\n};\n// Invalidates inactive sources if current session is not valid\nexport const invalidateInactiveSources = () => {\n    if (!isSessionValid()) {\n        deleteSessionToken();\n        deleteInactiveSources();\n    }\n};\n// Returns true if inactive sources is valid for the current session\nexport const isInactiveSourcesValid = () => {\n    return getInactiveSources() && isSessionValid();\n};\n// Set inactive sources\nexport const setInactiveSources = (value) => {\n    localStorage.setItem(inactiveSourcesID, value);\n    saveSessionToken();\n};\n","export const getBaseName = pathname => {\n    let release = '/';\n    const pathName = pathname.split('/');\n    pathName.shift();\n    if (pathName[0] === 'beta') {\n        pathName.shift();\n        release = `/beta/`;\n    }\n    if (pathName[1]) {\n        return `${release}${pathName[0]}/${pathName[1]}`;\n    }\n    return `${release}${pathName[0]}`;\n};\nexport const getReleasePath = () => {\n    const pathName = window.location.pathname.split('/');\n    pathName.shift();\n    let release = '';\n    if (pathName[0] === 'beta') {\n        release = `/beta`;\n    }\n    return release;\n};\n","const hasAccess = (userAccess, userAccessType) => {\n    let result = false;\n    if (userAccess && Array.isArray(userAccess.data)) {\n        // Used with multiple types (e.g., type=)\n        const data = userAccess.data.find(d => d.type === userAccessType);\n        result = data && data.access;\n    }\n    else {\n        // Used with type=any, type=GCP, etc.\n        result = userAccess && userAccess.data === true;\n    }\n    return result;\n};\nconst hasProviders = (providers) => {\n    let result = false;\n    if (providers && providers.meta) {\n        // providers API returns empty data array for no sources\n        result = providers.meta.count > 0;\n    }\n    return result;\n};\n// Returns true if user has access to AWS\nexport const hasAwsAccess = (userAccess) => {\n    return hasAccess(userAccess, \"aws\" /* aws */);\n};\n// Returns true if user has access to AWS and at least one source provider\nexport const isAwsAvailable = (userAccess, awsProviders) => {\n    return hasAwsAccess(userAccess) && hasProviders(awsProviders);\n};\n// Returns true if user has access to Azure\nexport const hasAzureAccess = (userAccess) => {\n    return hasAccess(userAccess, \"azure\" /* azure */);\n};\n// Returns true if user has access to Azure and at least one source provider\nexport const isAzureAvailable = (userAccess, azureProviders) => {\n    return hasAzureAccess(userAccess) && hasProviders(azureProviders);\n};\n// Returns true if user has access to Oci\nexport const hasOciAccess = (userAccess) => {\n    return hasAccess(userAccess, \"oci\" /* oci */);\n};\n// Returns true if user has access to Oci and at least one source provider\nexport const isOciAvailable = (userAccess, ociProviders) => {\n    return hasOciAccess(userAccess) && hasProviders(ociProviders);\n};\n// Returns true if user has access to cost models\nexport const hasCostModelAccess = (userAccess) => {\n    return hasAccess(userAccess, \"cost_model\" /* cost_model */);\n};\n// Returns true if user has access to GCP\nexport const hasGcpAccess = (userAccess) => {\n    return hasAccess(userAccess, \"gcp\" /* gcp */);\n};\n// Returns true if user has access to GCP and at least one source provider\nexport const isGcpAvailable = (userAccess, gcpProviders) => {\n    return hasAccess(userAccess, \"gcp\" /* gcp */) && hasProviders(gcpProviders);\n};\n// Returns true if user has access to IBM\nexport const hasIbmAccess = (userAccess) => {\n    return hasGcpAccess(userAccess);\n};\n// Returns true if user has access to IBM and at least one source provider\nexport const isIbmAvailable = (userAccess, ibmProviders) => {\n    return hasIbmAccess(userAccess) && hasProviders(ibmProviders);\n};\n// Returns true if user has access to OCP\nexport const hasOcpAccess = (userAccess) => {\n    return hasAccess(userAccess, \"ocp\" /* ocp */);\n};\n// Returns true if user has access to OCP and at least one source provider\nexport const isOcpAvailable = (userAccess, ocpProviders) => {\n    return hasOcpAccess(userAccess) && hasProviders(ocpProviders);\n};\n"],"names":["initApi","version","authInterceptor","reqConfig","Object","assign","headers","fetchCostModels","query","addCostModel","request","updateCostModel","uuid","deleteCostModel","fetchProviders","insights","window","queryString","chrome","auth","getUser","then","getQuery","getQueryRoute","parseQuery","logicalAndPrefix","tagPrefix","breakdownDescKey","breakdownTitleKey","orgUnitIdKey","orgUnitNameKey","tagKey","stringify","filter_by","newQuery","JSON","parse","undefined","key","keys","filter","Array","isArray","push","convertFilterBy","encode","indices","parseKey","val","index","indexOf","substring","length","filterByKey","parseFilterByPrefix","group_by","groupByKey","parseGroupByPrefix","ignoreQueryPrefix","getUserAccessQuery","ReportTypePaths","runReport","reportType","path","ResourceTypePaths","isResourceTypeValid","resourcePathsType","resourceType","result","forecast","PageTitleBase","constructor","super","arguments","this","defaultState","state","getPath","location","props","_pathname","pathname","startsWith","currRoute","routes","getPageTitle","messages","render","children","intl","document","title","formatMessage","PageTitle","injectIntl","MaintenanceStateBase","Maintenance","description","Stack","StackItem","url","href","rel","target","MaintenanceState","Main","App","maintenanceMode","componentDidMount","history","init","identifyApp","appAction","appNav","on","event","_a","_b","includes","navId","domEvent","appPathname","replace","basename","componentDidUpdate","prevProps","scrollTo","componentWillUnmount","route","mapStateToProps","mapDispatchToProps","connect","asyncComponent","loader","LoadedComponent","Async","_isMounted","isLoading","Comp","default","setState","styles","content","paddingBottom","paddingTop","exportsIcon","marginLeft","marginRight","exportsLink","display","alignItems","pagination","backgroundColor","toolbarContainer","ExportsLinkBase","handleToggle","closeExportDrawer","isOpen","onClick","openExportDrawer","preventDefault","isActionLink","className","AlertActionLink","style","Button","variant","ExportsLink","locale","navigator","language","split","getLocale","cache","defaultLocale","onError","console","log","NotAuthorizedStateBase","msg","serviceName","NotAuthorizedState","PageHeader","PageHeaderTitle","PermissionsBase","getRoutePath","hasPermissions","isIbmFeatureEnabled","isOciFeatureEnabled","userAccess","userAccessFetchStatus","aws","azure","oci","costModel","gcp","ibm","ocp","userAccessError","userAccessQueryString","featureFlags","Permissions","PermissionsWrapper","permissionsComponent","AysncComponent","PermissionsComponent","defaultMessage","id","awsComputeTitle","awsCostTrendTitle","awsDailyCostTrendTitle","awsDashboardCostTitle","awsDesc","awsDetailsTableAriaLabel","awsDetailsTitle","awsOcpDashboardCostTitle","azureComputeTitle","azureCostTrendTitle","azureDailyCostTrendTitle","azureDashboardCostTitle","azureDesc","azureDetailsTableAriaLabel","azureDetailsTitle","azureOcpDashboardCostTitle","back","breakdownBackToDetails","breakdownBackToDetailsAriaLabel","breakdownBackToTitles","breakdownCostBreakdownAriaLabel","breakdownCostBreakdownTitle","breakdownCostChartAriaDesc","breakdownCostChartTooltip","breakdownCostOverviewTitle","breakdownHistoricalDataTitle","breakdownSummaryTitle","breakdownTitle","breakdownTotalCostDate","calculationType","cancel","chartCostForecastConeLegendLabel","chartCostForecastConeLegendNoDataLabel","chartCostForecastConeLegendTooltip","chartCostForecastConeTooltip","chartCostForecastLegendLabel","chartCostForecastLegendNoDataLabel","chartCostForecastLegendTooltip","chartCostInfrastructureForecastConeLegendLabel","chartCostInfrastructureForecastConeLegendNoDataLabel","chartCostInfrastructureForecastConeLegendTooltip","chartCostInfrastructureForecastLegendLabel","chartCostInfrastructureForecastLegendNoDataLabel","chartCostInfrastructureForecastLegendTooltip","chartCostInfrastructureLegendLabel","chartCostInfrastructureLegendNoDataLabel","chartCostInfrastructureLegendTooltip","chartCostLegendLabel","chartCostLegendNoDataLabel","chartCostLegendTooltip","chartCostSupplementaryLegendLabel","chartCostSupplementaryLegendNoDataLabel","chartCostSupplementaryLegendTooltip","chartDateRange","chartDayOfTheMonth","chartLimitLegendLabel","chartLimitLegendNoDataLabel","chartLimitLegendTooltip","chartNoData","chartOthers","chartRequestsLegendLabel","chartRequestsLegendNoDataLabel","chartRequestsLegendTooltip","chartUsageLegendLabel","chartUsageLegendNoDataLabel","chartUsageLegendTooltip","close","clusters","cost","costCalculations","costManagement","costModels","costModelsAddTagValues","costModelsAssignSources","costModelsAssignSourcesErrorDescription","costModelsAssignSourcesErrorTitle","costModelsAssignSourcesParen","costModelsAssignedSources","costModelsAvailableSources","costModelsCanDelete","costModelsCanNotDelete","costModelsDelete","costModelsDeleteDesc","costModelsDeleteSource","costModelsDescTooLong","costModelsDetailsAssignSourcesTitle","costModelsDistributionDesc","costModelsDistributionEdit","costModelsEmptyState","costModelsEmptyStateDesc","costModelsEmptyStateLearnMore","costModelsEnterTagDescription","costModelsEnterTagKey","costModelsEnterTagRate","costModelsEnterTagValue","costModelsExamplesDoubleMarkup","costModelsExamplesNoAdjust","costModelsExamplesReduceSeventyfive","costModelsExamplesReduceZero","costModelsFilterPlaceholder","costModelsFilterTagKey","costModelsInfoTooLong","costModelsLastChange","costModelsPopover","costModelsPopoverAriaLabel","costModelsRateTooLong","costModelsReadOnly","costModelsRefreshDialog","costModelsRemoveTagLabel","costModelsRequiredField","costModelsRouterErrorTitle","costModelsRouterServerError","costModelsSelectMeasurement","costModelsSelectMetric","costModelsSourceDelete","costModelsSourceDeleteSource","costModelsSourceDeleteSourceDesc","costModelsSourceEmptyStateDesc","costModelsSourceEmptyStateTitle","costModelsSourceTableAriaLabel","costModelsSourceTablePaginationAriaLabel","costModelsSourceType","costModelsTableAriaLabel","costModelsTagRateTableAriaLabel","costModelsTagRateTableDefault","costModelsTagRateTableKey","costModelsTagRateTableRate","costModelsTagRateTableValue","costModelsUUIDEmptyState","costModelsUUIDEmptyStateDesc","costModelsWizardCreateCostModel","costModelsWizardCreatePriceList","costModelsWizardCurrencyToggleLabel","costModelsWizardEmptySourceTypeLabel","costModelsWizardEmptyStateCreate","costModelsWizardEmptyStateOtherTime","costModelsWizardEmptyStateSkipStep","costModelsWizardEmptyStateTitle","costModelsWizardGeneralInfoTitle","costModelsWizardNoRatesAdded","costModelsWizardOnboardAws","costModelsWizardOnboardOcp","costModelsWizardPriceListMetric","costModelsWizardRateAriaLabel","costModelsWizardReviewMarkDiscount","costModelsWizardReviewStatusSubDetails","costModelsWizardReviewStatusSubTitle","costModelsWizardReviewStatusTitle","costModelsWizardSourceCaption","costModelsWizardSourceErrorDescription","costModelsWizardSourceErrorTitle","costModelsWizardSourceSubtitle","costModelsWizardSourceTableAriaLabel","costModelsWizardSourceTableCostModel","costModelsWizardSourceTableDefaultCostModel","costModelsWizardSourceTitle","costModelsWizardSourceWarning","costModelsWizardStepsGenInfo","costModelsWizardStepsPriceList","costModelsWizardStepsReview","costModelsWizardStepsSources","costModelsWizardSubTitleTable","costModelsWizardWarningSources","costTypeAmortized","costTypeAmortizedDesc","costTypeBlended","costTypeBlendedDesc","costTypeLabel","costTypeUnblended","costTypeUnblendedDesc","cpuTitle","create","createCostModelConfirmMsg","createCostModelDesc","createCostModelExit","createCostModelExitYes","createCostModelNoContinue","createCostModelTitle","createRate","currency","currencyAbbreviations","currencyOptions","currencyUnits","dashboardCumulativeCostComparison","dashboardDailyUsageComparison","dashboardDatabaseTitle","dashboardNetworkTitle","dashboardStorageTitle","dashboardTotalCostTooltip","delete","detailsActionsExport","detailsActionsPriceList","detailsClustersModalTitle","detailsColumnManagementTitle","detailsCostValue","detailsEmptyState","detailsMoreClusters","detailsResourceNames","detailsSummaryModalTitle","detailsUnusedRequestsLabel","detailsUnusedUnits","detailsUnusedUsageLabel","detailsUsageCapacity","detailsUsageLimit","detailsUsageRequests","detailsUsageUsage","detailsViewAll","discountMinus","distributionModelDesc","distributionType","docsAddOcpSources","docsConfigCostModels","docsCostModelTerminology","docsUsingCostModels","download","edit","editCostModel","editMarkup","editMarkupOrDiscount","emptyFilterSourceStateSubtitle","emptyFilterStateSubtitle","emptyFilterStateTitle","equalsSymbol","errorStateNotAuthorizedDesc","errorStateNotAuthorizedTitle","errorStateUnexpectedDesc","errorStateUnexpectedTitle","examplesTitle","expiresOn","explorerChartDate","explorerChartTitle","explorerDateRange","explorerMonthDate","explorerTableAriaLabel","explorerTitle","exportAggregateType","exportAll","exportDesc","exportError","exportFileName","exportFormatType","exportFormatTypeTitle","exportGenerate","exportHeading","exportName","exportNameRequired","exportNameTooLong","exportResolution","exportSelected","exportTimeScope","exportTimeScopeTitle","exportTitle","exportsDesc","exportsEmptyState","exportsFailed","exportsFailedDesc","exportsSuccess","exportsSuccessDesc","exportsTableAriaLabel","exportsTitle","exportsUnavailable","filterByButtonAriaLabel","filterByInputAriaLabel","filterByOrgUnitAriaLabel","filterByOrgUnitPlaceholder","filterByPlaceholder","filterByTagKeyAriaLabel","filterByTagKeyPlaceholder","filterByTagValueAriaLabel","filterByTagValueButtonAriaLabel","filterByTagValueInputPlaceholder","filterByTagValuePlaceholder","filterByValues","forDate","gcpComputeTitle","gcpCostTitle","gcpCostTrendTitle","gcpDailyCostTrendTitle","gcpDesc","gcpDetailsTableAriaLabel","gcpDetailsTitle","groupByAll","groupByLabel","groupByTop","groupByValueNames","groupByValues","groupByValuesTitleCase","historicalChartCostLabel","historicalChartDayOfMonthLabel","historicalChartTitle","historicalChartUsageLabel","ibmComputeTitle","ibmCostTitle","ibmCostTrendTitle","ibmDailyCostTrendTitle","ibmDesc","ibmDetailsTableAriaLabel","ibmDetailsTitle","inactiveSourcesGoTo","inactiveSourcesTitle","inactiveSourcesTitleMultiplier","infrastructure","learnMore","loadingStateDesc","loadingStateTitle","maintenanceEmptyStateDesc","maintenanceEmptyStateInfo","maintenanceEmptyStateThanks","manageColumnsAriaLabel","manageColumnsDesc","manageColumnsTitle","markupDescription","markupOrDiscount","markupOrDiscountDesc","markupOrDiscountModalDesc","markupOrDiscountNumber","markupOrDiscountTooLong","markupPlus","markupTitle","measurement","measurementPlaceholder","measurementValues","measurementValuesDesc","memoryTitle","metric","metricPlaceholder","metricValues","monthOverMonthChange","names","next","no","noDataForDate","noDataStateDesc","noDataStateRefresh","noDataStateTitle","noExportsStateTitle","noProvidersStateAwsDesc","noProvidersStateAwsTitle","noProvidersStateAzureDesc","noProvidersStateAzureTitle","noProvidersStateGcpDesc","noProvidersStateGcpTitle","noProvidersStateGetStarted","noProvidersStateIbmDesc","noProvidersStateIbmTitle","noProvidersStateOciDesc","noProvidersStateOciTitle","noProvidersStateOcpAddSources","noProvidersStateOcpDesc","noProvidersStateOcpTitle","noProvidersStateOverviewDesc","noProvidersStateOverviewTitle","noResultsFound","notAuthorizedStateAws","notAuthorizedStateAzure","notAuthorizedStateCostModels","notAuthorizedStateGcp","notAuthorizedStateIbm","notAuthorizedStateOci","notAuthorizedStateOcp","ociComputeTitle","ociCostTrendTitle","ociDailyCostTrendTitle","ociDashboardCostTitle","ociDesc","ociDetailsTableAriaLabel","ociDetailsTitle","ocpCloudDashboardComputeTitle","ocpCloudDashboardCostTitle","ocpCloudDashboardCostTrendTitle","ocpCloudDashboardDailyCostTrendTitle","ocpCpuUsageAndRequests","ocpDailyUsageAndRequestComparison","ocpDashboardCPUUsageAndRequests","ocpDashboardCostTitle","ocpDashboardCostTrendTitle","ocpDashboardDailyCostTitle","ocpDashboardMemoryUsageAndRequests","ocpDashboardVolumeUsageAndRequests","ocpDetailsInfrastructureCost","ocpDetailsInfrastructureCostDesc","ocpDetailsSupplementaryCost","ocpDetailsSupplementaryCostDesc","ocpDetailsTableAriaLabel","ocpDetailsTitle","ocpInfrastructureCostTitle","ocpInfrastructureCostTrendTitle","ocpInfrastructureDailyCostTrendTitle","ocpMemoryUsageAndRequests","ocpSupplementaryCostTitle","ocpSupplementaryCostTrendTitle","ocpSupplementaryDailyCostTrendTitle","ocpUsageCostTitle","ocpUsageDashboardCPUTitle","ocpUsageDashboardCostTrendTitle","ocpVolumeUsageAndRequests","openShift","openShiftCloudInfrastructure","openShiftCloudInfrastructureDesc","openShiftDesc","overviewInfoArialLabel","overviewTitle","pageTitleAws","pageTitleAzure","pageTitleCostModels","pageTitleDefault","pageTitleExplorer","pageTitleGcp","pageTitleIbm","pageTitleOci","pageTitleOcp","pageTitleOverview","percent","percentOfCost","percentSymbol","percentTotalCost","perspective","perspectiveValues","priceList","priceListAddRate","priceListDeleteRate","priceListDeleteRateDesc","priceListDuplicate","priceListEditRate","priceListEmptyRate","priceListEmptyRateDesc","priceListNumberRate","priceListPosNumberRate","rate","rawCostDescription","rawCostTitle","rbacErrorDescription","rbacErrorTitle","redHatStatusUrl","requests","save","select","selectAll","selected","sinceDate","sources","status","statusActions","suggestions","supplementary","tagHeadingKey","tagHeadingTitle","tagHeadingValue","tagNames","timeOfExport","toolBarBulkSelectAll","toolBarBulkSelectAriaDeselect","toolBarBulkSelectAriaSelect","toolBarBulkSelectNone","toolBarBulkSelectPage","toolBarPriceListMeasurementPlaceHolder","toolBarPriceListMetricPlaceHolder","unitTooltips","units","usage","usageCostDescription","usageCostTitle","various","yes","NotFound","AwsBreakdown","AwsDetails","AzureBreakdown","OciBreakdown","AzureDetails","OciDetails","Explorer","GcpBreakdown","GcpDetails","IbmBreakdown","IbmDetails","OcpDetails","OcpBreakdown","Overview","CostModelsDetails","CostModel","paths","awsDetails","awsDetailsBreakdown","azureDetails","azureDetailsBreakdown","explorer","gcpDetails","gcpDetailsBreakdown","ibmDetails","ibmDetailsBreakdown","ociDetails","ociDetailsBreakdown","ocpDetails","ocpDetailsBreakdown","overview","labelKey","component","exact","Routes","map","LoadingState","subTitle","EmptyState","EmptyStateVariant","Spinner","size","Title","headingLevel","EmptyStateBody","parseApiError","error","response","data","Error","errors","er","source","detail","join","message","Unavailable","stateKey","fetchAccountSettingsRequest","createAction","fetchAccountSettingsSuccess","fetchAccountSettingsFailure","dispatch","meta","reportId","res","catch","err","byId","Map","fetchStatus","accountSettingsReducer","action","type","getType","set","payload","value","cost_type","initCurrency","selectAccountSettingsState","selectAccountSettings","get","selectAccountSettingsFetchStatus","selectAccountSettingsError","awsCostOverviewStateKey","currrentId","getId","costWidget","reportPathsType","accountSummaryWidget","reportSummary","reportGroupBy","showWidgetOnGroupBy","regionSummaryWidget","serviceSummaryWidget","currentWidgets","widgets","awsCostOverviewReducer","selectAwsCostOverviewState","selectWidgets","selectWidget","selectCurrentWidgets","azureCostOverviewStateKey","azureCostOverviewReducer","selectAzureCostOverviewState","gcpCostOverviewStateKey","projectSummaryWidget","gcpCostOverviewReducer","selectGcpCostOverviewState","ibmCostOverviewStateKey","ibmCostOverviewReducer","selectIbmCostOverviewState","ociCostOverviewStateKey","ociCostOverviewReducer","selectOciCostOverviewState","ocpCostOverviewStateKey","clusterWidget","cluster","cpuUsageWidget","showCapacityOnGroupBy","memoryUsageWidget","usePlaceholder","ocpCostOverviewReducer","selectOcpCostOverviewState","awsHistoricalDataStateKey","computeUsageWidget","storageUsageWidget","awsHistoricalDataReducer","selectAwsHistoricalDataState","azureHistoricalDataStateKey","azureHistoricalDataReducer","selectAzureHistoricalDataState","gcpHistoricalDataStateKey","gcpHistoricalDataReducer","selectGcpHistoricalDataState","ibmHistoricalDataStateKey","ibmHistoricalDataReducer","selectIbmHistoricalDataState","ociHistoricalDataStateKey","ociHistoricalDataReducer","selectOciHistoricalDataState","ocpHistoricalDataStateKey","ocpHistoricalDataReducer","selectOcpHistoricalDataState","createMapStateToProps","updateFilterToolbar","selectCostModel","resetCostModel","setCostModelDialog","fetchCostModelsRequest","success","fetchCostModelsSuccess","failure","fetchCostModelsFailure","createAsyncAction","updateCostModelsRequest","updateCostModelsSuccess","updateCostModelsFailure","dialog","name","deleteCostModelsRequest","deleteCostModelsSuccess","deleteCostModelsFailure","redirectToCostModelFromSourceUuid","source_uuid","addNotification","AlertVariant","dismissable","currentFilterType","currentFilterValue","isDialogOpen","deleteRate","deleteSource","addSource","addRate","updateRate","deleteMarkup","updateMarkup","deleteDistribution","updateDistribution","createWizard","dialogData","update","current","reducer","costModelsState","cms","dialogs","stateName","costStatus","costError","costData","costQuery","every","updateProcessing","updateError","updateErr","deleteProcessing","deleteError","awsDashboardStateKey","awsDashboardDefaultFilters","time_scope_units","time_scope_value","resolution","awsDashboardTabFilters","limit","getQueryForWidget","widget","savingsPlan","getQueryForWidgetTabs","currentTab","service","tabsFilter","account","region","getGroupByForTab","newFilter","selectAwsDashboardState","selectWidgetQueries","previous","tabs","fetchWidgetForecasts","getState","forecastPathsType","forecastType","fetchWidgetReports","availableTabs","setWidgetTab","changeWidgetTab","tab","computeWidget","titleKey","details","costKey","showUnits","showUsageFirst","showUsageLegendLabel","usageKey","trend","computedReportItem","computedReportItemValue","chartFormatter","format","chartType","costSummaryWidget","adjustContainerHeight","showHorizontal","viewAllPath","computedForecastItem","dailyTitleKey","databaseWidget","networkWidget","storageWidget","awsDashboardReducer","awsOcpDashboardStateKey","awsOcpDashboardDefaultFilters","awsOcpDashboardTabFilters","selectAwsOcpDashboardState","awsDashboard","awsOcpDashboardReducer","azureDashboardStateKey","azureDashboardDefaultFilters","azureDashboardTabFilters","service_name","subscription_guid","resource_location","selectAzureDashboardState","virtualMachineWidget","azureDashboardReducer","azureOcpDashboardStateKey","azureOcpDashboardDefaultFilters","azureOcpDashboardTabFilters","selectAzureOcpDashboardState","azureDashboard","azureOcpDashboardReducer","gcpDashboardStateKey","gcpDashboardDefaultFilters","gcpDashboardTabFilters","gcp_project","selectGcpDashboardState","gcpDashboardReducer","gcpOcpDashboardStateKey","gcpOcpDashboardDefaultFilters","gcpOcpDashboardTabFilters","selectGcpOcpDashboardState","gcpDashboard","gcpOcpDashboardReducer","ibmDashboardStateKey","ibmDashboardDefaultFilters","ibmDashboardTabFilters","project","selectIbmDashboardState","ibmDashboardReducer","ociDashboardStateKey","ociDashboardDefaultFilters","ociDashboardTabFilters","product_service","payer_tenant_id","selectOciDashboardState","ociDashboardReducer","ocpCloudDashboardStateKey","ocpCloudDashboardDefaultFilters","ocpCloudDashboardTabFilters","selectOcpCloudDashboardState","defaultFilter","ocpCloudDashboardReducer","ocpDashboardStateKey","ocpDashboardDefaultFilters","ocpDashboardTabFilters","node","selectOcpDashboardState","showTooltip","computedForecastInfrastructureItem","cpuWidget","requestKey","memoryWidget","volumeWidget","ocpDashboardReducer","selectPagination","stateProjector","getPagination","page","perPage","count","urlParams","links","URLSearchParams","Number","first","selectQuery","params","reduce","acc","curr","search","exportStateKey","getExportId","selectExportState","selectExport","selectExportFetchStatus","selectExportError","fetchExportRequest","fetchExportSuccess","fetchExportFailure","exportSuccessID","exportReport","isExportsFeatureEnabled","report","Date","now","timeRequested","isExportExpired","Accept","link","removeNotification","exportReducer","setFeatureFlags","resetState","isCurrencyFeatureEnabled","featureFlagsReducer","selectFeatureFlagsState","selectIsCurrencyFeatureEnabled","selectIsExportsFeatureEnabled","selectIsIbmFeatureEnabled","selectIsOciFeatureEnabled","ForecastTypePaths","forecastStateKey","getForecastId","selectForecastState","selectForecast","selectForecastFetchStatus","selectForecastError","fetchForecastRequest","fetchForecastSuccess","fetchForecastFailure","fetchForecast","isForecastExpired","forecastId","forecastReducer","rates","fetchPriceListRequest","fetchPriceListSuccess","fetchPriceListFailure","rootReducer","accountSettings","awsOcpDashboard","awsCostOverview","awsHistoricalData","azureOcpDashboard","azureCostOverview","ociCostOverview","ociDashboard","azureHistoricalData","ociHistoricalData","gcpCostOverview","gcpOcpDashboard","gcpHistoricalData","ibmCostOverview","ibmDashboard","ibmHistoricalData","metrics","ocpCostOverview","ocpDashboard","ocpCloudDashboard","ocpHistoricalData","providerUuid","providers","rbac","ui","notifications","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","serialize","middlewares","notificationsMiddleware","configureStore","initialState","enhancer","store","Promise","reject","fetchMetricsRequest","fetchMetricsSuccess","fetchMetricsFailure","fetchMetrics","source_type","fetchRateMetrics","metricsState","metricsPayload","prev","label_metric","label_measurement","maxRate","costTypes","default_cost_type","OrgTypePaths","orgStateKey","getOrgId","orgPathsType","orgType","selectOrgState","selectOrg","selectOrgFetchStatus","selectOrgError","fetchOrgRequest","fetchOrgSuccess","fetchOrgFailure","fetchOrg","orgReport","isOrgExpired","orgId","orgReducer","addProviderKey","providersQuery","getReportId","fetchProvidersRequest","fetchProvidersSuccess","fetchProvidersFailure","providersReducer","selectProvidersState","selectAddProviderFetchStatus","selectAddProviderError","selectProviders","providerType","selectProvidersFetchStatus","selectProvidersError","fetchRbacRequest","fetchRbacSuccess","fetchRbacFailure","fetchRbac","async","_insights","getUserPermissions","user","permissions","isOrgAdmin","identity","is_org_admin","getRBAC","selectRbacState","isCostModelWritePermission","costModelPermissions","item","permission","hasWritePermission","app","resource","operation","reportStateKey","selectReportState","selectReport","selectReportFetchStatus","selectReportError","fetchReportRequest","fetchReportSuccess","fetchReportFailure","fetchReport","isReportExpired","reportReducer","resourceStateKey","getResourceId","selectResourceState","selectResource","selectResourceFetchStatus","selectResourceError","fetchResourceRequest","fetchResourceSuccess","fetchResourceFailure","fetchResource","isResourceExpired","resourceId","resourceReducer","fetchSourcesRequest","fetchSourcesSuccess","fetchSourcesFailure","fetchSources","sourcesState","srcs","TagTypePaths","tagStateKey","getTagId","tagPathsType","tagType","selectTagState","selectTag","selectTagFetchStatus","selectTagError","fetchTagRequest","fetchTagSuccess","fetchTagFailure","fetchTag","tagReport","isTagExpired","tagId","tagReducer","isExportsDrawerOpen","uiReducer","selectUIState","selectIsExportsDrawerOpen","closeExportsDrawer","openExportsDrawer","userAccessQuery","fetchUserAccessRequest","fetchUserAccessSuccess","fetchUserAccessFailure","userAccessReducer","selectUserAccessState","selectUserAccess","selectUserAccessFetchStatus","selectUserAccessError","getCostType","countDecimals","useLocale","decimalSeparator","toLocaleString","decimals","formatCurrency","options","fValue","toUpperCase","formatCurrencyAbbreviation","abbreviationFormats","symbol","find","f","minimumFractionDigits","maximumFractionDigits","formatCurrencyRate","formatCurrencyRateRaw","formatCurrencyRaw","currencyDisplay","toString","trim","formatUnits","unitsLookupKey","formatUsageHrs","formatUsageGb","unknownTypeFormatter","formatPercentage","formatPercentageMarkup","isCurrencyFormatValid","test","isPercentageFormatValid","unFormat","groupSeparator","rawValue","isNaN","lookup","toLowerCase","accountCurrencyID","costTypeID","currencyID","inactiveSourcesID","sessionTokenID","getPartialTokenCookie","token","cookie","match","pop","getCookie","deleteSessionToken","localStorage","removeItem","invalidateSession","isSessionValid","deleteCostType","deleteAccountCurrency","deleteCurrency","getItem","saveSessionToken","setItem","costType","isCostTypeAvailable","restoreCostType","queryFromRoute","setCostType","getAccountCurrency","getCurrency","isCurrencyAvailable","restoreCurrency","setCurrency","setAccountCurrency","deleteInactiveSources","invalidateInactiveSources","isInactiveSourcesValid","setInactiveSources","getBaseName","release","pathName","shift","getReleasePath","hasAccess","userAccessType","d","access","hasProviders","hasAwsAccess","isAwsAvailable","awsProviders","hasAzureAccess","isAzureAvailable","azureProviders","hasOciAccess","isOciAvailable","ociProviders","hasCostModelAccess","hasGcpAccess","isGcpAvailable","gcpProviders","hasIbmAccess","isIbmAvailable","ibmProviders","hasOcpAccess","isOcpAvailable","ocpProviders"],"sourceRoot":""}