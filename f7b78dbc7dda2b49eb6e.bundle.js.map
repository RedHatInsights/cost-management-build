{"version":3,"sources":["webpack://koku-ui/./src/pages/state/noData/index.ts","webpack://koku-ui/./src/pages/state/notAvailable/notAvailable.tsx","webpack://koku-ui/./src/pages/state/notAvailable/index.ts","webpack://koku-ui/./src/pages/views/components/dataToolbar/dataToolbar.styles.ts","webpack://koku-ui/./src/pages/views/components/dataToolbar/dataToolbar.tsx","webpack://koku-ui/./src/pages/views/components/export/exportModal.styles.ts","webpack://koku-ui/./src/pages/views/components/export/exportSubmit.tsx","webpack://koku-ui/./src/pages/views/components/export/exportModal.tsx","webpack://koku-ui/./src/pages/views/components/groupBy/groupBy.styles.ts","webpack://koku-ui/./src/pages/views/components/groupBy/groupByOrg.tsx","webpack://koku-ui/./src/pages/views/components/groupBy/groupByTag.tsx","webpack://koku-ui/./src/pages/views/components/groupBy/groupBy.tsx","webpack://koku-ui/./src/pages/views/details/components/actions/actions.tsx","webpack://koku-ui/./src/pages/views/details/components/breakdown/breakdown.styles.ts","webpack://koku-ui/./src/pages/views/details/components/tag/tag.styles.ts","webpack://koku-ui/./src/pages/views/details/components/tag/tagView.tsx","webpack://koku-ui/./src/pages/views/details/components/tag/tagModal.tsx","webpack://koku-ui/./src/pages/views/details/components/tag/tagLink.tsx","webpack://koku-ui/./src/pages/views/details/components/breakdown/breakdownHeader.styles.ts","webpack://koku-ui/./src/pages/views/details/components/breakdown/breakdownHeader.tsx","webpack://koku-ui/./src/pages/views/details/components/breakdown/breakdownBase.tsx","webpack://koku-ui/./src/pages/views/details/components/cluster/cluster.styles.ts","webpack://koku-ui/./src/pages/views/details/components/cluster/clusterModal.styles.ts","webpack://koku-ui/./src/pages/views/details/components/cluster/clusterView.tsx","webpack://koku-ui/./src/pages/views/details/components/cluster/clusterModal.tsx","webpack://koku-ui/./src/pages/views/details/components/cluster/cluster.tsx","webpack://koku-ui/./src/pages/views/details/components/costChart/costChart.styles.ts","webpack://koku-ui/./src/pages/views/details/components/costChart/costChart.tsx","webpack://koku-ui/./src/pages/views/details/components/summary/summaryModal.styles.ts","webpack://koku-ui/./src/pages/views/details/components/summary/summaryModalView.tsx","webpack://koku-ui/./src/pages/views/details/components/summary/summaryModal.tsx","webpack://koku-ui/./src/pages/views/details/components/summary/summaryCard.styles.ts","webpack://koku-ui/./src/pages/views/details/components/summary/summaryCard.tsx","webpack://koku-ui/./src/pages/views/details/components/usageChart/usageChart.styles.ts","webpack://koku-ui/./src/pages/views/details/components/usageChart/usageChart.tsx","webpack://koku-ui/./src/pages/views/details/components/costOverview/costOverviewBase.tsx","webpack://koku-ui/./src/components/charts/historicalCostChart/historicalCostChart.styles.ts","webpack://koku-ui/./src/components/charts/historicalCostChart/historicalCostChart.tsx","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalChart.styles.ts","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalDataCostChart.tsx","webpack://koku-ui/./src/components/charts/historicalTrendChart/historicalTrendChart.styles.ts","webpack://koku-ui/./src/components/charts/historicalTrendChart/historicalTrendChart.tsx","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalDataTrendChart.tsx","webpack://koku-ui/./src/components/charts/historicalUsageChart/historicalUsageChart.styles.ts","webpack://koku-ui/./src/components/charts/historicalUsageChart/historicalUsageChart.tsx","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalDataUsageChart.tsx","webpack://koku-ui/./src/pages/views/details/components/historicalData/historicalDataBase.tsx","webpack://koku-ui/./src/pages/views/details/ocpDetails/detailsHeader.styles.ts","webpack://koku-ui/./src/pages/views/utils/groupBy.ts","webpack://koku-ui/./src/pages/views/utils/paths.ts","webpack://koku-ui/./src/pages/views/utils/query.ts","webpack://koku-ui/./src/testIds.ts","webpack://koku-ui/./src/utils/dateRange.ts","webpack://koku-ui/./src/utils/equal.ts"],"names":["withRouter","title","PageHeader","PageHeaderTitle","Main","Unavailable","styles","export","marginRight","global_spacer_md","toolbarContainer","backgroundColor","global_BackgroundColor_light_100","paddingBottom","paddingTop","marginLeft","global_spacer_lg","defaultFilters","tag","DataToolbarBase","super","arguments","this","defaultState","categoryInput","filters","cloneDeep","isBulkSelectOpen","isCategoryDropdownOpen","isOrgUnitSelectExpanded","isTagValueDropdownOpen","isTagKeySelectExpanded","isTagValueSelectExpanded","tagKeyValueInput","state","Object","assign","getDefaultCategory","categoryOptions","groupBy","query","props","group_by","option","key","indexOf","getActiveFilters","filter_by","keys","forEach","values","Array","isArray","substring","onDelete","type","chip","filterType","id","setState","prevState","filter","s","_filterType","onFilterRemoved","getBulkSelect","isAllSelected","isBulkSelectDisabled","isDisabled","itemsPerPage","itemsTotal","selectedItems","t","numSelected","length","anySelected","isChecked","dropdownItems","DropdownItem","onClick","onBulkSelectClicked","value","Dropdown","onSelect","onBulkSelect","position","DropdownPosition","toggle","DropdownToggle","splitButtonItems","DropdownToggleCheckbox","onToggle","onBulkSelectToggle","isOpen","action","onBulkSelected","getCurrentCategoryOption","currentCategory","onCategoryClick","onCategorySelect","currentTagKey","undefined","onCategoryToggle","getCategoryInput","categoryOption","ToolbarFilter","categoryName","chips","deleteChip","showToolbarItem","InputGroup","TextInput","name","onChange","onCategoryInputChange","placeholder","onKeyDown","evt","onCategoryInput","Button","variant","ButtonVariant","getDefaultCategoryOptions","event","trim","prevFilters","includes","onFilterAdded","getOrgUnitSelect","options","getOrgUnitOptions","map","toString","compareTo","find","val","selections","push","node","Select","className","SelectVariant","onOrgUnitToggle","onOrgUnitSelect","placeholderText","SelectOption","description","selection","checked","target","prevSelections","getTagKeySelect","selectOptions","getTagKeyOptions","selectOption","ToolbarItem","onClear","onTagKeyClear","onTagKeyToggle","onTagKeySelect","getTagValueSelect","tagKeyOption","getTagValueOptions","onTagValueToggle","onTagValueSelect","onTagValueInputChange","onTagValueInput","getExportButton","isExportDisabled","handleExportClicked","onExportClicked","prevProps","orgReport","tagReport","currentOrgUnit","style","width","data","sortedData","sort","a","b","roots","org","level","filteredOrgs","root","item","unshift","hasTagKeys","hasOwnProperty","keepData","_a","e","p","prototype","call","getOwnPropertySymbols","i","propertyIsEnumerable","__rest","uniqBy","uniq","Set","dateRange","pagination","showBulkSelect","showExport","showFilter","Toolbar","clearAllFilters","collapseListedFiltersBreakpoint","ToolbarContent","ToolbarToggleGroup","breakpoint","toggleIcon","ToolbarGroup","getCategoryDropdown","Boolean","alignment","default","DataToolbar","withTranslation","form","global_spacer_sm","modal","input","global_spacer_xs","ul","marginBottom","reportType","ExportSubmitBase","stateProps","dispatchProps","fetchReportClicked","getExport","report","reportFetchStatus","getFileName","handleClose","reportPathsType","resolution","timeScope","thisMonth","Date","lastMonth","setMonth","getMonth","currentMonth","format","previousMonth","provider","date","onClose","handleFetchReport","exportReport","queryString","testIds","mapStateToProps","isAllItems","items","newQuery","JSON","parse","stringify","limit","offset","time_scope_value","order_by","perspective","getQueryString","reportError","mapDispatchToProps","ExportSubmitConnect","connect","ExportSubmit","resolutionOptions","label","timeScopeOptions","ExportModalBase","handleMonthChange","_","Number","currentTarget","handleResolutionChange","bind","showAggregateType","showTimeScope","sortedItems","orderBy","selectedLabel","Modal","actions","Form","FormGroup","fieldId","index","Radio","isValid","groupItem","ExportModalConnect","ExportModal","groupBySelector","display","alignItems","groupBySelectorLabel","GroupByOrgBase","defaultItem","isGroupByOpen","getCurrentGroupBy","getIdKeyForGroupBy","queryFromRoute","location","search","groupByKeys","getGroupByItems","handleGroupByClear","currentItem","handleGroupBySelect","onItemClicked","handleGroupByToggle","groupByItems","GroupByOrg","GroupByTagBase","tagKey","slice","GroupByTag","groupByOrgOptions","groupByTagOptions","orgReportType","tagReportType","GroupByBase","isGroupByOrgVisible","isGroupByTagVisible","handleGroupByClick","allOptions","component","fetchOrg","fetchTag","orgQueryString","orgReportPathsType","showOrgs","showTags","tagQueryString","tagReportPathsType","endDate","startDate","tagQuery","start_date","end_date","time_scope_units","tagReportFetchStatus","orgReportFetchStatus","GroupByConnect","GroupBy","DetailsActionsBase","isDropdownOpen","isExportModalOpen","getExportModal","handleExportModalClose","handleExportModalOpen","handleOnSelect","handleOnToggle","showPriceListOption","redirectToCostModel","history","source_uuid","KebabToggle","isPlain","DetailsActionsConnect","Actions","content","paddingLeft","paddingRight","dataListHeading","fontWeight","global_FontWeight_bold","groupByHeading","tagLink","tagsContainer","global_spacer_3xl","marginTop","TagViewBase","getDataListItems","result","DataListItem","DataListItemRow","DataListItemCells","dataListCells","DataListCell","groupByValue","dataListItems","DataList","isCompact","TagView","TagModalBase","getTagValueCount","count","nextProps","account","groupByOrgValue","TagModal","TagLinkBase","handleOpen","preventDefault","href","TagLink","cost","global_spacer_xl","costLabel","costValue","textAlign","costLabelDate","fontSize","global_FontSize_sm","color","global_Color_200","header","justifyContent","global_BackgroundColor_100","infoDescription","global_disabled_color_100","global_FontSize_xs","tabs","BreakdownHeaderBase","buildDetailsLink","detailsURL","groupByKey","getTotalCost","hasCost","meta","total","formatValue","units","filterByAccount","groupByOrg","Link","to","Title","headingLevel","size","BreakdownHeader","getIdKeyForTab","tab","BreakdownBase","activeTabKey","getAvailableTabs","contentRef","getTab","Tab","eventKey","tabContentId","tabContentRef","TabTitleText","getTabTitle","getTabContent","availableTabs","TabContent","ref","getTabItem","costOverviewComponent","historicalDataComponent","emptyTab","currentTab","getTabs","Tabs","activeKey","handleTabClick","tabIndex","updateReport","fetchReport","noReport","noLocation","emptyStateTitle","providers","providersFetchStatus","providerType","clustersContainer","height","subTitle","ClusterViewBase","clusters","cluster","ClusterView","ClusterModalBase","ClusterModal","ClusterBase","showAll","charCount","someClusters","allClusters","computedItems","getComputedReportItems","idKey","clusterString","concat","Cluster","chartStyles","chartHeight","chartWidth","chartSkeleton","CostChartBase","getLegendLabel","ChartLabel","text","getSkeleton","Skeleton","skeleton","hasMarkup","markup","hasRaw","raw","hasUsage","usage","markupUnits","rawUnits","usageUnits","markupValue","rawValue","usageValue","markupLabel","rawLabel","usageLabel","LegendLabel","Legend","ChartLegend","gutter","itemsPerRow","labelComponent","dy","lineHeight","rowGutter","ChartPie","ariaDesc","ariaTitle","constrainToVisibleArea","x","y","labels","datum","legendComponent","legendData","legendOrientation","legendPosition","padding","bottom","left","right","top","themeColor","ChartThemeColor","CostChart","mainContent","SummaryModalViewBase","reportGroupBy","status","_item","formatOptions","totalValue","SummaryModalView","SummaryModalBase","SummaryModal","card","viewAllContainer","SummaryBase","isBulletChartModalOpen","getItems","getSummary","reportItem","getViewAll","findIndex","handleBulletChartModalOpen","ButtonType","handleBulletChartModalClose","Card","CardTitle","CardBody","CardFooter","SummaryCard","capacity","legendSkeleton","UsageChartBase","containerRef","observer","noop","handleResize","clientWidth","current","getCpuChart","chartDatum","getChartDatumWithCapacity","getChartDatum","getFreeSpace","ChartBullet","comparativeErrorMeasureData","tooltip","comparativeErrorMeasureLegendData","legend","getChartHeight","legendItemsPerRow","getItemsPerRow","maxDomain","isDatumEmpty","minDomain","primarySegmentedMeasureData","primarySegmentedMeasureLegendData","qualitativeRangeData","ranges","qualitativeRangeLegendData","hasRange","range","hasTotal","hasLimit","Math","trunc","limitUnits","hasRequest","request","requestUnits","hasCapacity","capacityUnits","unusedRequestCapacity","unusedUsageCapacity","unusedRequestCapacityPercentage","unusedUsageCapacityPercentage","Grid","hasGutter","GridItem","md","lg","percentage","UsageChart","PLACEHOLDER","CostOverviewBase","getClusterChart","widget","showWidget","groupById","showWidgetOnGroupBy","getCostChart","Popover","enableFlip","bodyContent","rel","OutlinedQuestionCircleIcon","getCpuUsageChart","getMemoryUsageChart","getSummaryCard","reportSummary","usePlaceholder","getWidgetsColumns","selectWidgets","widgets","visibleWidgets","widgetId","renderedWidget","renderWidget","rows","floor","leftColumnWidgets","rightColumnWidgets","xl","currentCapacityData","fill","currentColorScale","chart_color_green_400","chart_color_green_300","chart_color_green_200","chart_color_green_100","chart_color_green_500","currentInfrastructureCostData","strokeDasharray","currentCostData","previousCapacityData","previousColorScale","chart_color_blue_100","chart_color_blue_200","chart_color_blue_300","chart_color_blue_400","chart_color_blue_500","previousInfrastructureCostData","previousCostData","yAxis","axisLabel","grid","stroke","ticks","tickLabels","xAxis","chart","HistoricalCostChart","hiddenSeries","initDatum","costKey","costInfrastructureKey","costInfrastructureTooltipKey","costTooltipKey","series","childName","legendItem","symbol","cursorVoronoiContainer","getCursorVoronoiContainer","getChart","ChartArea","has","interpolation","formatDatumValue","formatDatumOptions","CursorVoronoiContainer","createContainer","cursorDimension","mouseFollowTooltips","voronoiDimension","voronoiPadding","getLegend","handleLegendClick","currentRequestDate","getDate","previousRequestDate","max","getInteractiveLegendEvents","chartNames","isHidden","legendName","onLegendClick","adjustContainerHeight","containerHeight","xAxisLabel","yAxisLabel","domain","ge","getEndDate","midDate","adjustedContainerHeight","container","disable","ChartLegendTooltip","day","Chart","containerComponent","events","getEvents","theme","ChartAxis","tickValues","dependentAxis","chartContainer","costChart","trendChart","usageChart","HistoricalDataCostChartBase","currentQueryString","previousQueryString","currentReport","currentReportFetchStatus","previousReport","previousReportFetchStatus","currentData","previousData","costUnits","baseQuery","currentQuery","previousQuery","HistoricalDataCostChart","currentMonthData","previousMonthData","HistoricalTrendChart","showUsageLegendLabel","toolTipKey","previousDate","currentDate","HistoricalDataTrendChartBase","isCostChart","isNaN","HistoricalDataTrendChart","currentLimitData","currentRequestData","currentUsageData","previousLimitData","previousRequestData","previousUsageData","HistoricalUsageChart","limitKey","limitTooltipKey","requestKey","requestTooltipKey","usageKey","usageTooltipKey","currentUsageDate","previousUsageDate","HistoricalDataUsageChartBase","useFilter","HistoricalDataUsageChart","HistoricalDataBase","getTrendChart","getUsageChart","costLabelUnit","info","verticalAlign","infoIcon","infoTitle","getGroupById","getGroupByValue","getGroupByOrgValue","getGroupByTagKey","groupByTagKey","tagIndex","getBreakdownPath","basePath","getOrgBreakdownPath","orgUnitId","addQueryFilter","filterValue","found","removeQueryFilter","getTestProps","details","cluster_lnk","historical_data_btn","show_more_btn","tag_lnk","view_all_btn","cancel_btn","submit_btn","login","alert","username_input","password_input","submit","masthead","username","sidebarToggle","logout","onboarding","btn_cancel","btn_back","btn_continue","btn_close","type_selector","type_opt_aws","type_opt_ocp","type_opt_non","name_input","check_box_1","check_box_2","s3_input","clusterid_input","arn_input","add_btn","bucket_input","empty_state_add_btn","resource_name_input","cluster_id_input","type_input","sidebar","nav","link","backdrop","getNoDataForDateRangeString","today","setHours","setMinutes","setSeconds","month","startOfMonth","getForDateRangeString","getSinceDateRangeString","getCurrentMonthDate","setDate","endOfMonth","getMonthDate","getLastDaysDate","getLast30DaysDate","getLast60DaysDate","isEqual","obj1","obj2","split","join"],"mappings":"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","file":"f7b78dbc7dda2b49eb6e.bundle.js","sourcesContent":["import NoData from './noData';\nexport default NoData;\n","import Main from '@redhat-cloud-services/frontend-components/Main';\nimport PageHeader, { PageHeaderTitle } from '@redhat-cloud-services/frontend-components/PageHeader';\nimport Unavailable from '@redhat-cloud-services/frontend-components/Unavailable';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nconst NotAvailable = ({ title }) => {\n    return (React.createElement(React.Fragment, null,\n        title && (React.createElement(PageHeader, null,\n            React.createElement(PageHeaderTitle, { title: title }))),\n        React.createElement(Main, null,\n            React.createElement(Unavailable, null))));\n};\nexport default withRouter(NotAvailable);\n","import NotAvailable from './notAvailable';\nexport default NotAvailable;\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    export: {\n        marginRight: global_spacer_md.value,\n    },\n    toolbarContainer: {\n        backgroundColor: global_BackgroundColor_light_100.value,\n        paddingBottom: global_spacer_md.value,\n        paddingTop: global_spacer_md.value,\n        marginLeft: global_spacer_lg.value,\n        marginRight: global_spacer_lg.value,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport './dataToolbar.scss';\nimport { Button, ButtonVariant, Dropdown, DropdownItem, DropdownPosition, DropdownToggle, DropdownToggleCheckbox, InputGroup, Select, SelectOption, SelectVariant, TextInput, Toolbar, ToolbarContent, ToolbarFilter, ToolbarGroup, ToolbarItem, ToolbarToggleGroup, } from '@patternfly/react-core';\nimport { ExportIcon } from '@patternfly/react-icons/dist/js/icons/export-icon';\nimport { FilterIcon } from '@patternfly/react-icons/dist/js/icons/filter-icon';\nimport { SearchIcon } from '@patternfly/react-icons/dist/js/icons/search-icon';\nimport { orgUnitIdKey, orgUnitNameKey, tagKey, tagPrefix } from 'api/queries/query';\nimport { cloneDeep } from 'lodash';\nimport { uniq, uniqBy } from 'lodash';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { isEqual } from 'utils/equal';\nimport { styles } from './dataToolbar.styles';\nconst defaultFilters = {\n    tag: {},\n};\n// If the number of tag keys are greater or equal, then show text input Vs select\n// See https://github.com/project-koku/koku/pull/2069\nconst tagKeyValueLimit = 50;\nexport class DataToolbarBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            categoryInput: '',\n            filters: cloneDeep(defaultFilters),\n            isBulkSelectOpen: false,\n            isCategoryDropdownOpen: false,\n            isOrgUnitSelectExpanded: false,\n            isTagValueDropdownOpen: false,\n            isTagKeySelectExpanded: false,\n            isTagValueSelectExpanded: false,\n            tagKeyValueInput: '',\n        };\n        this.state = Object.assign({}, this.defaultState);\n        // Initialize\n        this.getDefaultCategory = () => {\n            const { categoryOptions, groupBy, query } = this.props;\n            if (!categoryOptions) {\n                return 'name';\n            }\n            if (query && query.group_by && query.group_by[orgUnitIdKey]) {\n                return orgUnitIdKey;\n            }\n            for (const option of categoryOptions) {\n                if (groupBy === option.key || (groupBy && groupBy.indexOf(tagPrefix) !== -1 && option.key === tagKey)) {\n                    return option.key;\n                }\n            }\n            return categoryOptions[0].key;\n        };\n        this.getActiveFilters = query => {\n            const filters = cloneDeep(defaultFilters);\n            if (query && query.filter_by) {\n                Object.keys(query.filter_by).forEach(key => {\n                    const values = Array.isArray(query.filter_by[key]) ? [...query.filter_by[key]] : [query.filter_by[key]];\n                    if (key.indexOf(tagPrefix) !== -1) {\n                        filters.tag[key.substring(tagPrefix.length)] = values;\n                    }\n                    else {\n                        filters[key] = values;\n                    }\n                });\n            }\n            return filters;\n        };\n        this.onDelete = (type, chip) => {\n            // Todo: workaround for https://github.com/patternfly/patternfly-react/issues/3552\n            // This prevents us from using a localized string, if necessary\n            const filterType = type && type.key ? type.key : type;\n            const id = chip && chip.key ? chip.key : chip;\n            if (filterType) {\n                this.setState((prevState) => {\n                    if (prevState.filters.tag[filterType]) {\n                        // Todo: use ID\n                        prevState.filters.tag[filterType] = prevState.filters.tag[filterType].filter(s => s !== id);\n                    }\n                    else if (prevState.filters[filterType]) {\n                        prevState.filters[filterType] = prevState.filters[filterType].filter(s => s !== id);\n                    }\n                    return {\n                        filters: prevState.filters,\n                    };\n                }, () => {\n                    const { filters } = this.state;\n                    const _filterType = filters.tag[filterType] ? `${tagPrefix}${filterType}` : filterType; // Todo: use ID\n                    this.props.onFilterRemoved(_filterType, id);\n                });\n            }\n            else {\n                this.setState({\n                    filters: cloneDeep(defaultFilters),\n                }, () => {\n                    this.props.onFilterRemoved(null); // Clear all\n                });\n            }\n        };\n        // Bulk select\n        this.getBulkSelect = () => {\n            const { isAllSelected, isBulkSelectDisabled, isDisabled, itemsPerPage, itemsTotal, selectedItems, t } = this.props;\n            const { isBulkSelectOpen } = this.state;\n            const numSelected = isAllSelected ? itemsTotal : selectedItems ? selectedItems.length : 0;\n            const allSelected = (isAllSelected || numSelected === itemsTotal) && itemsTotal > 0;\n            const anySelected = numSelected > 0;\n            const someChecked = anySelected ? null : false;\n            const isChecked = allSelected ? true : someChecked;\n            const dropdownItems = [\n                React.createElement(DropdownItem, { key: \"item-1\", onClick: () => this.onBulkSelectClicked('none') }, t('toolbar.bulk_select.select_none')),\n                React.createElement(DropdownItem, { key: \"item-2\", onClick: () => this.onBulkSelectClicked('page') }, t('toolbar.bulk_select.select_page', {\n                    value: itemsPerPage,\n                })),\n                React.createElement(DropdownItem, { key: \"item-3\", onClick: () => this.onBulkSelectClicked('all') }, t('toolbar.bulk_select.select_all', { value: itemsTotal })),\n            ];\n            return (React.createElement(Dropdown, { onSelect: this.onBulkSelect, position: DropdownPosition.left, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled || isBulkSelectDisabled, splitButtonItems: [\n                        React.createElement(DropdownToggleCheckbox, { id: \"bulk-select\", key: \"bulk-select\", \"aria-label\": anySelected ? t('toolbar.bulk_select.aria_deselect') : t('toolbar.bulk_select.aria_select'), isChecked: isChecked, onClick: () => {\n                                anySelected ? this.onBulkSelectClicked('none') : this.onBulkSelectClicked('all');\n                            } }),\n                    ], onToggle: this.onBulkSelectToggle }, numSelected !== 0 && React.createElement(React.Fragment, null,\n                    numSelected,\n                    \" selected\")), isOpen: isBulkSelectOpen, dropdownItems: dropdownItems }));\n        };\n        this.onBulkSelectClicked = (action) => {\n            const { onBulkSelected } = this.props;\n            if (onBulkSelected) {\n                onBulkSelected(action);\n            }\n        };\n        this.onBulkSelect = () => {\n            this.setState({\n                isBulkSelectOpen: !this.state.isBulkSelectOpen,\n            });\n        };\n        this.onBulkSelectToggle = isOpen => {\n            this.setState({\n                isBulkSelectOpen: isOpen,\n            });\n        };\n        this.getCurrentCategoryOption = () => {\n            const { categoryOptions } = this.props;\n            const { currentCategory } = this.state;\n            if (!categoryOptions) {\n                return undefined;\n            }\n            for (const option of categoryOptions) {\n                if (currentCategory === option.key) {\n                    return option;\n                }\n            }\n            return categoryOptions[0];\n        };\n        this.onCategoryClick = value => {\n            this.setState({\n                currentCategory: value,\n            });\n        };\n        this.onCategorySelect = () => {\n            this.setState({\n                categoryInput: '',\n                currentTagKey: undefined,\n                isCategoryDropdownOpen: !this.state.isCategoryDropdownOpen,\n            });\n        };\n        this.onCategoryToggle = isOpen => {\n            this.setState({\n                isCategoryDropdownOpen: isOpen,\n            });\n        };\n        // Category input\n        this.getCategoryInput = categoryOption => {\n            const { isDisabled, t } = this.props;\n            const { currentCategory, filters, categoryInput } = this.state;\n            return (React.createElement(ToolbarFilter, { categoryName: categoryOption, chips: filters[categoryOption.key], deleteChip: this.onDelete, key: categoryOption.key, showToolbarItem: currentCategory === categoryOption.key },\n                React.createElement(InputGroup, null,\n                    React.createElement(TextInput, { isDisabled: isDisabled, name: `${categoryOption.key}-input`, id: `${categoryOption.key}-input`, type: \"search\", \"aria-label\": t(`filter_by.${categoryOption.key}.input_aria_label`), onChange: this.onCategoryInputChange, value: categoryInput, placeholder: t(`filter_by.${categoryOption.key}.placeholder`), onKeyDown: evt => this.onCategoryInput(evt, categoryOption.key) }),\n                    React.createElement(Button, { isDisabled: isDisabled, variant: ButtonVariant.control, \"aria-label\": t(`filter_by.${categoryOption.key}.button_aria_label`), onClick: evt => this.onCategoryInput(evt, categoryOption.key) },\n                        React.createElement(SearchIcon, null)))));\n        };\n        this.getDefaultCategoryOptions = () => {\n            const { t } = this.props;\n            return [{ name: t('filter_by.values.name'), key: 'name' }];\n        };\n        this.onCategoryInputChange = value => {\n            this.setState({ categoryInput: value });\n        };\n        this.onCategoryInput = (event, key) => {\n            const { categoryInput, currentCategory } = this.state;\n            if ((event.key && event.key !== 'Enter') || categoryInput.trim() === '') {\n                return;\n            }\n            this.setState((prevState) => {\n                const prevFilters = prevState.filters[key];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { [currentCategory]: prevFilters && prevFilters.includes(categoryInput)\n                            ? prevFilters\n                            : prevFilters\n                                ? [...prevFilters, categoryInput]\n                                : [categoryInput] }),\n                    categoryInput: '',\n                };\n            }, () => {\n                this.props.onFilterAdded(currentCategory, categoryInput);\n            });\n        };\n        // Org unit select\n        this.getOrgUnitSelect = () => {\n            const { isDisabled, t } = this.props;\n            const { currentCategory, filters, isOrgUnitSelectExpanded } = this.state;\n            const options = this.getOrgUnitOptions().map(option => ({\n                id: option.key,\n                toString: () => option.name,\n                compareTo: value => filters[orgUnitIdKey] ? filters[orgUnitIdKey].find(val => val === value.id) : false,\n            }));\n            const chips = []; // Get selected items as PatternFly's ToolbarChip type\n            const selections = []; // Select options and selections must be same type\n            if (filters[orgUnitIdKey] && Array.isArray(filters[orgUnitIdKey])) {\n                filters[orgUnitIdKey].map(id => {\n                    const option = options.find(val => val.id === id);\n                    if (option) {\n                        selections.push(option);\n                        chips.push({\n                            key: option.id,\n                            node: option.toString(),\n                        });\n                    }\n                });\n            }\n            // Todo: selectOverride is a workaround for https://github.com/patternfly/patternfly-react/issues/4477\n            return (React.createElement(ToolbarFilter, { categoryName: {\n                    key: orgUnitIdKey,\n                    name: t('filter_by.values.org_unit_id'),\n                }, chips: chips, deleteChip: this.onDelete, key: orgUnitIdKey, showToolbarItem: currentCategory === orgUnitIdKey },\n                React.createElement(Select, { isDisabled: isDisabled, className: \"selectOverride\", variant: SelectVariant.checkbox, \"aria-label\": t('filter_by.org_unit.aria_label'), onToggle: this.onOrgUnitToggle, onSelect: this.onOrgUnitSelect, selections: selections, isOpen: isOrgUnitSelectExpanded, placeholderText: t('filter_by.org_unit.placeholder') }, options.map(option => (React.createElement(SelectOption, { description: option.id, key: option.id, value: option }))))));\n        };\n        this.onOrgUnitSelect = (event, selection) => {\n            const checked = event.target.checked;\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters[orgUnitIdKey] ? prevState.filters[orgUnitIdKey] : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign({}, prevState.filters.tag), [orgUnitIdKey]: checked\n                            ? [...prevSelections, selection.id]\n                            : prevSelections.filter(value => value !== selection.id) }),\n                };\n            }, () => {\n                if (checked) {\n                    this.props.onFilterAdded(orgUnitIdKey, selection.id);\n                }\n                else {\n                    this.onDelete(orgUnitIdKey, selection.id);\n                }\n            });\n        };\n        this.onOrgUnitToggle = isOpen => {\n            this.setState({\n                isOrgUnitSelectExpanded: isOpen,\n            });\n        };\n        // Tag key select\n        this.getTagKeySelect = () => {\n            const { isDisabled, t } = this.props;\n            const { currentCategory, currentTagKey, isTagKeySelectExpanded } = this.state;\n            if (currentCategory !== tagKey) {\n                return null;\n            }\n            const selectOptions = this.getTagKeyOptions().map(selectOption => {\n                return React.createElement(SelectOption, { key: selectOption.key, value: selectOption.key });\n            });\n            return (React.createElement(ToolbarItem, null,\n                React.createElement(Select, { isDisabled: isDisabled, variant: SelectVariant.typeahead, \"aria-label\": t('filter_by.tag_key.aria_label'), onClear: this.onTagKeyClear, onToggle: this.onTagKeyToggle, onSelect: this.onTagKeySelect, isOpen: isTagKeySelectExpanded, placeholderText: t('filter_by.tag_key.placeholder'), selections: currentTagKey }, selectOptions)));\n        };\n        this.onTagKeyClear = () => {\n            this.setState({\n                currentTagKey: undefined,\n                isTagKeySelectExpanded: false,\n            });\n        };\n        this.onTagKeySelect = (event, selection) => {\n            this.setState({\n                currentTagKey: selection,\n                isTagKeySelectExpanded: !this.state.isTagKeySelectExpanded,\n            });\n        };\n        this.onTagKeyToggle = isOpen => {\n            this.setState({\n                isTagKeySelectExpanded: isOpen,\n            });\n        };\n        // Tag value select\n        this.getTagValueSelect = tagKeyOption => {\n            const { isDisabled, t } = this.props;\n            const { currentCategory, currentTagKey, filters, isTagValueSelectExpanded, tagKeyValueInput } = this.state;\n            const selectOptions = this.getTagValueOptions().map(selectOption => {\n                return React.createElement(SelectOption, { key: selectOption.key, value: selectOption.key });\n            });\n            return (React.createElement(ToolbarFilter, { categoryName: tagKeyOption, chips: filters.tag[tagKeyOption.key], deleteChip: this.onDelete, key: tagKeyOption.key, showToolbarItem: currentCategory === tagKey && currentTagKey === tagKeyOption.key }, selectOptions.length < tagKeyValueLimit ? (React.createElement(Select, { isDisabled: isDisabled, variant: SelectVariant.checkbox, \"aria-label\": t('filter_by.tag_value.aria_label'), onToggle: this.onTagValueToggle, onSelect: this.onTagValueSelect, selections: filters.tag[tagKeyOption.key] ? filters.tag[tagKeyOption.key] : [], isOpen: isTagValueSelectExpanded, placeholderText: t('filter_by.tag_value.placeholder') }, selectOptions)) : (React.createElement(InputGroup, null,\n                React.createElement(TextInput, { isDisabled: isDisabled, name: \"tagkeyvalue-input\", id: \"tagkeyvalue-input\", type: \"search\", \"aria-label\": t('filter_by.tag_value.aria_label'), onChange: this.onTagValueInputChange, value: tagKeyValueInput, placeholder: t('filter_by.tag_value.input_placeholder'), onKeyDown: evt => this.onTagValueInput(evt) }),\n                React.createElement(Button, { isDisabled: isDisabled, variant: ButtonVariant.control, \"aria-label\": t('filter_by.tag_value.button_aria_label'), onClick: evt => this.onTagValueInput(evt) },\n                    React.createElement(SearchIcon, null))))));\n        };\n        this.onTagValueInputChange = value => {\n            this.setState({ tagKeyValueInput: value });\n        };\n        this.onTagValueInput = event => {\n            const { currentTagKey, tagKeyValueInput } = this.state;\n            if ((event.key && event.key !== 'Enter') || tagKeyValueInput.trim() === '') {\n                return;\n            }\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters.tag[currentTagKey] ? prevState.filters.tag[currentTagKey] : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign(Object.assign({}, prevState.filters.tag), { [currentTagKey]: [...prevSelections, tagKeyValueInput] }) }),\n                    tagKeyValueInput: '',\n                };\n            }, () => {\n                this.props.onFilterAdded(`${tagPrefix}${currentTagKey}`, tagKeyValueInput);\n            });\n        };\n        this.onTagValueSelect = (event, selection) => {\n            const { currentTagKey } = this.state;\n            const checked = event.target.checked;\n            this.setState((prevState) => {\n                const prevSelections = prevState.filters.tag[currentTagKey] ? prevState.filters.tag[currentTagKey] : [];\n                return {\n                    filters: Object.assign(Object.assign({}, prevState.filters), { tag: Object.assign(Object.assign({}, prevState.filters.tag), { [currentTagKey]: checked\n                                ? [...prevSelections, selection]\n                                : prevSelections.filter(value => value !== selection) }) }),\n                };\n            }, () => {\n                if (checked) {\n                    this.props.onFilterAdded(`${tagPrefix}${currentTagKey}`, selection);\n                }\n                else {\n                    this.onDelete(currentTagKey, selection);\n                }\n            });\n        };\n        this.onTagValueToggle = isOpen => {\n            this.setState({\n                isTagValueSelectExpanded: isOpen,\n            });\n        };\n        // Export button\n        this.getExportButton = () => {\n            const { isDisabled, isExportDisabled } = this.props;\n            return (React.createElement(ToolbarItem, null,\n                React.createElement(Button, { isDisabled: isDisabled || isExportDisabled, onClick: this.handleExportClicked, variant: ButtonVariant.plain },\n                    React.createElement(ExportIcon, null))));\n        };\n        this.handleExportClicked = () => {\n            this.props.onExportClicked();\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            currentCategory: this.getDefaultCategory(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { categoryOptions, groupBy, orgReport, query, tagReport } = this.props;\n        if (categoryOptions !== prevProps.categoryOptions ||\n            groupBy !== prevProps.groupBy ||\n            (query && !isEqual(query, prevProps.query)) ||\n            (orgReport && !isEqual(orgReport, prevProps.orgReport)) ||\n            (tagReport && !isEqual(tagReport, prevProps.tagReport))) {\n            this.setState(() => {\n                const filters = this.getActiveFilters(query);\n                return categoryOptions !== prevProps.categoryOptions || prevProps.groupBy !== groupBy\n                    ? {\n                        categoryInput: '',\n                        currentCategory: this.getDefaultCategory(),\n                        currentOrgUnit: '',\n                        currentTagKey: '',\n                        tagKeyValueInput: '',\n                        filters,\n                    }\n                    : {\n                        filters,\n                    };\n            });\n        }\n    }\n    // Category dropdown\n    getCategoryDropdown() {\n        const { categoryOptions, isDisabled } = this.props;\n        const { isCategoryDropdownOpen } = this.state;\n        if (!categoryOptions) {\n            return null;\n        }\n        return (React.createElement(ToolbarItem, null,\n            React.createElement(Dropdown, { onSelect: this.onCategorySelect, position: DropdownPosition.left, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled, onToggle: this.onCategoryToggle, style: { width: '100%' } },\n                    React.createElement(FilterIcon, null),\n                    \" \",\n                    this.getCurrentCategoryOption().name), isOpen: isCategoryDropdownOpen, dropdownItems: categoryOptions &&\n                    categoryOptions.map(option => (React.createElement(DropdownItem, { key: option.key, onClick: () => this.onCategoryClick(option.key) }, option.name))), style: { width: '100%' } })));\n    }\n    getOrgUnitOptions() {\n        const { orgReport } = this.props;\n        let options = [];\n        if (!(orgReport && orgReport.data)) {\n            return options;\n        }\n        // Sort all names first\n        const sortedData = orgReport.data.sort((a, b) => {\n            if (a[orgUnitNameKey] < b[orgUnitNameKey]) {\n                return -1;\n            }\n            if (a[orgUnitNameKey] > b[orgUnitNameKey]) {\n                return 1;\n            }\n            return 0;\n        });\n        // Move roots first\n        const roots = sortedData.filter(org => org.level === 0);\n        const filteredOrgs = sortedData.filter(org => org.level !== 0);\n        roots.map(root => {\n            const item = sortedData.find(org => org[orgUnitIdKey] === root[orgUnitIdKey]);\n            filteredOrgs.unshift(item);\n        });\n        if (filteredOrgs.length > 0) {\n            options = filteredOrgs.map(org => {\n                return {\n                    key: org[orgUnitIdKey],\n                    name: org[orgUnitNameKey],\n                };\n            });\n        }\n        return options;\n    }\n    getTagKeyOptions() {\n        const { tagReport } = this.props;\n        let data = [];\n        let options = [];\n        if (!(tagReport && tagReport.data)) {\n            return options;\n        }\n        // If the key_only param is used, we have an array of strings\n        let hasTagKeys = false;\n        for (const item of tagReport.data) {\n            if (item.hasOwnProperty('key')) {\n                hasTagKeys = true;\n                break;\n            }\n        }\n        // Workaround for https://github.com/project-koku/koku/issues/1797\n        if (hasTagKeys) {\n            const keepData = tagReport.data.map(\n            // eslint-disable-next-line @typescript-eslint/no-unused-vars\n            (_a) => {\n                var { type } = _a, keepProps = __rest(_a, [\"type\"]);\n                return keepProps;\n            });\n            data = uniqBy(keepData, 'key');\n        }\n        else {\n            data = uniq(tagReport.data);\n        }\n        if (data.length > 0) {\n            options = data.map(item => {\n                const key = hasTagKeys ? item.key : item;\n                return {\n                    key,\n                    name: key,\n                };\n            });\n        }\n        return options;\n    }\n    getTagValueOptions() {\n        const { tagReport } = this.props;\n        const { currentTagKey } = this.state;\n        let data = [];\n        if (tagReport && tagReport.data) {\n            data = [...new Set([...tagReport.data])]; // prune duplicates\n        }\n        let options = [];\n        if (data.length > 0) {\n            for (const tag of data) {\n                if (currentTagKey === tag.key && tag.values) {\n                    options = tag.values.map(val => {\n                        return {\n                            key: val,\n                            name: val,\n                        };\n                    });\n                    break;\n                }\n            }\n        }\n        return options;\n    }\n    render() {\n        const { categoryOptions, dateRange, pagination, showBulkSelect, showExport, showFilter, style } = this.props;\n        const options = categoryOptions ? categoryOptions : this.getDefaultCategoryOptions();\n        // Todo: clearAllFilters workaround https://github.com/patternfly/patternfly-react/issues/4222\n        return (React.createElement(\"div\", { style: style ? style : styles.toolbarContainer },\n            React.createElement(Toolbar, { id: \"details-toolbar\", clearAllFilters: this.onDelete, collapseListedFiltersBreakpoint: \"xl\" },\n                React.createElement(ToolbarContent, null,\n                    React.createElement(ToolbarToggleGroup, { breakpoint: \"xl\", toggleIcon: React.createElement(FilterIcon, null) },\n                        showBulkSelect && React.createElement(ToolbarItem, { variant: \"bulk-select\" }, this.getBulkSelect()),\n                        showFilter && (React.createElement(ToolbarGroup, { variant: \"filter-group\" },\n                            this.getCategoryDropdown(),\n                            this.getTagKeySelect(),\n                            this.getTagKeyOptions().map(option => this.getTagValueSelect(option)),\n                            this.getOrgUnitSelect(),\n                            options &&\n                                options\n                                    .filter(option => option.key !== tagKey && option.key !== orgUnitIdKey)\n                                    .map(option => this.getCategoryInput(option)))),\n                        Boolean(showExport) && React.createElement(ToolbarGroup, null, this.getExportButton()),\n                        dateRange && React.createElement(ToolbarGroup, null, dateRange)),\n                    React.createElement(ToolbarItem, { alignment: { default: 'alignRight' }, variant: \"pagination\" }, pagination)))));\n    }\n}\nconst DataToolbar = withTranslation()(DataToolbarBase);\nexport { DataToolbar };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    form: {\n        marginLeft: global_spacer_sm.var,\n    },\n    modal: {\n        input: {\n            marginRight: global_spacer_xs.var,\n        },\n        ul: {\n            marginLeft: global_spacer_sm.var,\n        },\n    },\n    title: {\n        marginBottom: global_spacer_md.var,\n    },\n};\n","import { Button, ButtonVariant } from '@patternfly/react-core';\nimport { getQuery, orgUnitIdKey } from 'api/queries/query';\nimport { format } from 'date-fns';\nimport fileDownload from 'js-file-download';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { exportActions, exportSelectors } from 'store/exports';\nimport { getTestProps, testIds } from 'testIds';\nconst reportType = \"cost\" /* cost */;\nexport class ExportSubmitBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            fetchReportClicked: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExport = () => {\n            const { report, reportFetchStatus } = this.props;\n            if (report && reportFetchStatus === 2 /* complete */) {\n                fileDownload(report.data, this.getFileName(), 'text/csv');\n                this.handleClose();\n            }\n        };\n        this.getFileName = () => {\n            const { groupBy, reportPathsType, resolution, t, timeScope } = this.props;\n            const thisMonth = new Date();\n            const lastMonth = new Date().setMonth(thisMonth.getMonth() - 1);\n            const currentMonth = format(thisMonth, 'MMMM_yyyy');\n            const previousMonth = format(lastMonth - 1, 'MMMM_yyyy');\n            const fileName = t('export.file.name', {\n                provider: reportPathsType,\n                groupBy,\n                resolution,\n                date: timeScope && timeScope === -2 ? previousMonth : currentMonth,\n            });\n            return `${fileName}.csv`;\n        };\n        this.handleClose = () => {\n            this.setState(Object.assign({}, this.defaultState), () => {\n                this.props.onClose(false);\n            });\n        };\n        this.handleFetchReport = () => {\n            const { exportReport, queryString, reportPathsType } = this.props;\n            exportReport(reportPathsType, reportType, queryString);\n            this.setState({\n                fetchReportClicked: true,\n            }, () => {\n                this.getExport();\n            });\n        };\n    }\n    componentDidUpdate(prevProps) {\n        const { report } = this.props;\n        const { fetchReportClicked } = this.state;\n        if (prevProps.report !== report && fetchReportClicked) {\n            this.getExport();\n        }\n    }\n    render() {\n        const { reportFetchStatus, t } = this.props;\n        return (React.createElement(Button, Object.assign({}, getTestProps(testIds.export.submit_btn), { isDisabled: reportFetchStatus === 1 /* inProgress */, key: \"confirm\", onClick: this.handleFetchReport, variant: ButtonVariant.primary }), t('export.confirm')));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    const { groupBy, isAllItems, items, query, reportPathsType, resolution, timeScope } = props;\n    const getQueryString = () => {\n        const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { filter: {\n                limit: undefined,\n                offset: undefined,\n                resolution: resolution ? resolution : undefined,\n                time_scope_value: timeScope ? timeScope : undefined,\n            }, filter_by: {}, order_by: undefined, perspective: undefined, dateRange: undefined });\n        // Store filter_by as an array so we can add to it below\n        if (query.filter_by) {\n            for (const key of Object.keys(query.filter_by)) {\n                if (newQuery.filter_by[key] === undefined) {\n                    newQuery.filter_by[key] = [];\n                }\n                newQuery.filter_by[key].push(query.filter_by[key]);\n            }\n        }\n        if (isAllItems) {\n            // Ensure group_by isn't overridden -- org_unit_id is not unique\n            if (groupBy === orgUnitIdKey) {\n                if (newQuery.filter_by[orgUnitIdKey] === undefined) {\n                    newQuery.filter_by[orgUnitIdKey] = [];\n                }\n                newQuery.filter_by[orgUnitIdKey].push(query.group_by[orgUnitIdKey]);\n            }\n        }\n        else {\n            if (groupBy === orgUnitIdKey) {\n                for (const item of items) {\n                    // Note that type only exists when grouping by org units\n                    const type = item.type === 'organizational_unit' ? orgUnitIdKey : item.type;\n                    if (newQuery.filter_by[type] === undefined) {\n                        newQuery.filter_by[type] = [];\n                    }\n                    newQuery.filter_by[type].push(item.id);\n                }\n            }\n            else {\n                for (const item of items) {\n                    if (newQuery.filter_by[groupBy] === undefined) {\n                        newQuery.filter_by[groupBy] = [];\n                    }\n                    newQuery.filter_by[groupBy].push(item.id);\n                }\n            }\n        }\n        return getQuery(newQuery);\n    };\n    const queryString = getQueryString();\n    const report = exportSelectors.selectExport(state, reportPathsType, reportType, queryString);\n    const reportError = exportSelectors.selectExportError(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = exportSelectors.selectExportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportError,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    exportReport: exportActions.exportReport,\n};\nconst ExportSubmitConnect = connect(mapStateToProps, mapDispatchToProps)(ExportSubmitBase);\nconst ExportSubmit = withTranslation()(ExportSubmitConnect);\nexport { ExportSubmit };\n","import { Button, ButtonVariant, Form, FormGroup, Modal, Radio } from '@patternfly/react-core';\nimport { tagPrefix } from 'api/queries/query';\nimport { format } from 'date-fns';\nimport { orderBy } from 'lodash';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { exportActions } from 'store/exports';\nimport { getTestProps, testIds } from 'testIds';\nimport { styles } from './exportModal.styles';\nimport { ExportSubmit } from './exportSubmit';\nconst resolutionOptions = [\n    { label: 'export.resolution_daily', value: 'daily' },\n    { label: 'export.resolution_monthly', value: 'monthly' },\n];\nconst timeScopeOptions = [\n    { label: 'export.time_scope_current', value: -1 },\n    { label: 'export.time_scope_previous', value: -2 },\n];\nexport class ExportModalBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            timeScope: -1,\n            resolution: this.props.resolution || 'monthly',\n        };\n        this.state = Object.assign({}, this.defaultState);\n        // Reset defult state upon close -- see https://issues.redhat.com/browse/COST-1134\n        this.handleClose = () => {\n            this.setState(Object.assign({}, this.defaultState), () => {\n                this.props.onClose(false);\n            });\n        };\n        this.handleMonthChange = (_, event) => {\n            this.setState({ timeScope: Number(event.currentTarget.value) });\n        };\n        this.handleResolutionChange = (_, event) => {\n            this.setState({ resolution: event.currentTarget.value });\n        };\n        this.handleMonthChange = this.handleMonthChange.bind(this);\n        this.handleResolutionChange = this.handleResolutionChange.bind(this);\n    }\n    render() {\n        const { groupBy, isAllItems, items, query, reportPathsType, showAggregateType = true, showTimeScope = true, t, } = this.props;\n        const { resolution, timeScope } = this.state;\n        let sortedItems = [...items];\n        if (this.props.isOpen) {\n            if (items && items.length === 0 && isAllItems) {\n                sortedItems = [\n                    {\n                        label: t('export.all'),\n                    },\n                ];\n            }\n            else {\n                sortedItems = orderBy(sortedItems, ['label'], ['asc']);\n            }\n        }\n        let selectedLabel = t('export.selected', { groupBy });\n        if (groupBy.indexOf(tagPrefix) !== -1) {\n            selectedLabel = t('export.selected_tags');\n        }\n        const thisMonth = new Date();\n        const lastMonth = new Date().setMonth(thisMonth.getMonth() - 1);\n        const currentMonth = format(thisMonth, 'MMMM yyyy');\n        const previousMonth = format(lastMonth - 1, 'MMMM yyyy');\n        return (React.createElement(Modal, { style: styles.modal, isOpen: this.props.isOpen, onClose: this.handleClose, title: t('export.title'), variant: \"small\", actions: [\n                React.createElement(ExportSubmit, { groupBy: groupBy, isAllItems: isAllItems, items: items, key: \"confirm\", timeScope: showTimeScope ? timeScope : undefined, onClose: this.handleClose, query: query, reportPathsType: reportPathsType, resolution: resolution }),\n                React.createElement(Button, Object.assign({}, getTestProps(testIds.export.cancel_btn), { key: \"cancel\", onClick: this.handleClose, variant: ButtonVariant.link }), t('export.cancel')),\n            ] },\n            React.createElement(\"div\", { style: styles.title },\n                React.createElement(\"span\", null, t('export.heading', { groupBy }))),\n            React.createElement(Form, { style: styles.form },\n                showAggregateType && (React.createElement(FormGroup, { label: t('export.aggregate_type'), fieldId: \"aggregate-type\" },\n                    React.createElement(React.Fragment, null, resolutionOptions.map((option, index) => (React.createElement(Radio, { key: index, id: `resolution-${index}`, isValid: option.value !== undefined, label: t(option.label), value: option.value, checked: resolution === option.value, name: \"resolution\", onChange: this.handleResolutionChange, \"aria-label\": t(option.label) })))))),\n                showTimeScope && (React.createElement(FormGroup, { label: t('export.time_scope_title'), fieldId: \"timeScope\" },\n                    React.createElement(React.Fragment, null, timeScopeOptions.map((option, index) => (React.createElement(Radio, { key: index, id: `timeScope-${index}`, isValid: option.value !== undefined, label: t(option.label, { date: option.value === -2 ? previousMonth : currentMonth }), value: option.value, checked: timeScope === option.value, name: \"timeScope\", onChange: this.handleMonthChange, \"aria-label\": t(option.label) })))))),\n                React.createElement(FormGroup, { label: selectedLabel, fieldId: \"selected-labels\" },\n                    React.createElement(\"ul\", null, sortedItems.map((groupItem, index) => {\n                        return React.createElement(\"li\", { key: index }, groupItem.label);\n                    }))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps(() => {\n    return {};\n});\nconst mapDispatchToProps = {\n    exportReport: exportActions.exportReport,\n};\nconst ExportModalConnect = connect(mapStateToProps, mapDispatchToProps)(ExportModalBase);\nconst ExportModal = withTranslation()(ExportModalConnect);\nexport { ExportModal };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    groupBySelector: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    groupBySelectorLabel: {\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n};\n","import { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { orgUnitIdKey, orgUnitNameKey, parseQuery } from 'api/queries/query';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './groupBy.styles';\nclass GroupByOrgBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            defaultItem: this.props.groupBy || this.props.options[0].value,\n            isGroupByOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getCurrentGroupBy = () => {\n            const { getIdKeyForGroupBy } = this.props;\n            const queryFromRoute = parseQuery(location.search);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by ? Object.keys(queryFromRoute.group_by) : [];\n            let groupBy = getIdKeyForGroupBy(queryFromRoute.group_by);\n            for (const key of groupByKeys) {\n                const index = key.indexOf(orgUnitIdKey);\n                if (index !== -1) {\n                    groupBy = queryFromRoute.group_by[orgUnitIdKey];\n                    break;\n                }\n            }\n            return groupBy;\n        };\n        this.getGroupByItems = () => {\n            const { orgReport } = this.props;\n            if (!(orgReport && orgReport.data)) {\n                return [];\n            }\n            // Sort all names first\n            const sortedData = orgReport.data.sort((a, b) => {\n                if (a[orgUnitNameKey] < b[orgUnitNameKey]) {\n                    return -1;\n                }\n                if (a[orgUnitNameKey] > b[orgUnitNameKey]) {\n                    return 1;\n                }\n                return 0;\n            });\n            // Move roots first\n            const roots = sortedData.filter(org => org.level === 0);\n            const filteredOrgs = sortedData.filter(org => org.level !== 0);\n            roots.map(root => {\n                const item = sortedData.find(org => org[orgUnitIdKey] === root[orgUnitIdKey]);\n                filteredOrgs.unshift(item);\n            });\n            return filteredOrgs.map(org => ({\n                id: org[orgUnitIdKey],\n                toString: () => org[orgUnitNameKey],\n            }));\n        };\n        this.handleGroupByClear = () => {\n            this.setState({\n                currentItem: undefined,\n            });\n        };\n        this.handleGroupBySelect = (event, selection) => {\n            const { onItemClicked } = this.props;\n            this.setState({\n                currentItem: selection.id,\n                isGroupByOpen: false,\n            });\n            if (onItemClicked) {\n                onItemClicked(`${orgUnitIdKey}${selection.id}`);\n            }\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({ isGroupByOpen });\n        };\n        this.handleGroupByClear = this.handleGroupByClear.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { groupBy } = this.props;\n        if (prevProps.groupBy !== groupBy) {\n            this.setState({ currentItem: this.getCurrentGroupBy() });\n        }\n    }\n    render() {\n        const { isDisabled = false, t } = this.props;\n        const { currentItem, isGroupByOpen } = this.state;\n        const groupByItems = this.getGroupByItems();\n        const selection = groupByItems.find((item) => item.id === currentItem);\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(Select, { \"aria-label\": t('group_by.org_unit_aria_label'), isDisabled: isDisabled, onClear: this.handleGroupByClear, onToggle: this.handleGroupByToggle, onSelect: this.handleGroupBySelect, isOpen: isGroupByOpen, placeholderText: t('group_by.org_unit_placeholder'), selections: selection, variant: SelectVariant.typeahead }, groupByItems.map(item => (React.createElement(SelectOption, { description: item.id, key: item.id, value: item }))))));\n    }\n}\nconst GroupByOrg = withTranslation()(GroupByOrgBase);\nexport { GroupByOrg };\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { Select, SelectOption, SelectVariant } from '@patternfly/react-core';\nimport { parseQuery, tagPrefix } from 'api/queries/query';\nimport { uniq, uniqBy } from 'lodash';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './groupBy.styles';\nclass GroupByTagBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isGroupByOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getGroupByItems = () => {\n            const { tagReport } = this.props;\n            if (!(tagReport && tagReport.data)) {\n                return [];\n            }\n            // If the key_only param is used, we have an array of strings\n            let hasTagKeys = false;\n            for (const item of tagReport.data) {\n                if (item.hasOwnProperty('key')) {\n                    hasTagKeys = true;\n                    break;\n                }\n            }\n            // Workaround for https://github.com/project-koku/koku/issues/1797\n            let data = [];\n            if (hasTagKeys) {\n                const keepData = tagReport.data.map(\n                // eslint-disable-next-line @typescript-eslint/no-unused-vars\n                (_a) => {\n                    var { type } = _a, keepProps = __rest(_a, [\"type\"]);\n                    return keepProps;\n                });\n                data = uniqBy(keepData, 'key');\n            }\n            else {\n                data = uniq(tagReport.data);\n            }\n            return data.map(item => {\n                const tagKey = hasTagKeys ? item.key : item;\n                return React.createElement(SelectOption, { key: item.key, value: tagKey });\n            });\n        };\n        this.getCurrentGroupBy = () => {\n            const queryFromRoute = parseQuery(location.search);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by ? Object.keys(queryFromRoute.group_by) : [];\n            let groupBy;\n            for (const key of groupByKeys) {\n                const index = key.indexOf(tagPrefix);\n                if (index !== -1) {\n                    groupBy = key.slice(tagPrefix.length);\n                    break;\n                }\n            }\n            return groupBy;\n        };\n        this.handleGroupByClear = () => {\n            this.setState({\n                currentItem: undefined,\n            });\n        };\n        this.handleGroupBySelect = (event, selection) => {\n            const { onItemClicked } = this.props;\n            this.setState({\n                currentItem: selection,\n                isGroupByOpen: false,\n            });\n            if (onItemClicked) {\n                onItemClicked(`${tagPrefix}${selection}`);\n            }\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({ isGroupByOpen });\n        };\n        this.handleGroupByClear = this.handleGroupByClear.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { groupBy } = this.props;\n        if (prevProps.groupBy !== groupBy) {\n            this.setState({ currentItem: this.getCurrentGroupBy() });\n        }\n    }\n    render() {\n        const { isDisabled, t } = this.props;\n        const { currentItem, isGroupByOpen } = this.state;\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(Select, { \"aria-label\": t('group_by.tag_key_aria_label'), isDisabled: isDisabled, onClear: this.handleGroupByClear, onToggle: this.handleGroupByToggle, onSelect: this.handleGroupBySelect, isOpen: isGroupByOpen, placeholderText: t('group_by.tag_key_placeholder'), selections: currentItem, variant: SelectVariant.typeahead }, this.getGroupByItems())));\n    }\n}\nconst GroupByTag = withTranslation()(GroupByTagBase);\nexport { GroupByTag };\n","import { Dropdown, DropdownItem, DropdownToggle } from '@patternfly/react-core';\nimport { getQuery, orgUnitIdKey, parseQuery, tagKey, tagPrefix } from 'api/queries/query';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { orgActions, orgSelectors } from 'store/orgs';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { styles } from './groupBy.styles';\nimport { GroupByOrg } from './groupByOrg';\nimport { GroupByTag } from './groupByTag';\nconst groupByOrgOptions = [{ label: orgUnitIdKey, value: orgUnitIdKey }];\nconst groupByTagOptions = [{ label: tagKey, value: tagKey }];\nconst orgReportType = \"org\" /* org */;\nconst tagReportType = \"tag\" /* tag */;\nclass GroupByBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            defaultItem: this.props.groupBy || this.props.options[0].value,\n            isGroupByOpen: false,\n            isGroupByOrgVisible: false,\n            isGroupByTagVisible: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleGroupByClick = value => {\n            const { onItemClicked } = this.props;\n            if (value === orgUnitIdKey || value === tagKey) {\n                this.setState({\n                    currentItem: value,\n                    isGroupByOrgVisible: value === orgUnitIdKey,\n                    isGroupByTagVisible: value === tagKey,\n                });\n            }\n            else {\n                this.setState({\n                    currentItem: value,\n                    isGroupByOrgVisible: false,\n                    isGroupByTagVisible: false,\n                });\n                if (onItemClicked) {\n                    onItemClicked(value);\n                }\n            }\n        };\n        this.getGroupByItems = () => {\n            const { options, orgReport, tagReport, t } = this.props;\n            const allOptions = [...options];\n            if (orgReport && orgReport.data && orgReport.data.length > 0) {\n                allOptions.push(...groupByOrgOptions);\n            }\n            if (tagReport && tagReport.data && tagReport.data.length > 0) {\n                allOptions.push(...groupByTagOptions);\n            }\n            return allOptions.map(option => (React.createElement(DropdownItem, { component: \"button\", key: option.value, onClick: () => this.handleGroupByClick(option.value) }, t(`group_by.values.${option.label}`))));\n        };\n        this.getCurrentGroupBy = () => {\n            const { getIdKeyForGroupBy } = this.props;\n            const { defaultItem } = this.state;\n            const queryFromRoute = parseQuery(location.search);\n            if (!(queryFromRoute && queryFromRoute.group_by)) {\n                return defaultItem;\n            }\n            let groupBy = getIdKeyForGroupBy(queryFromRoute.group_by);\n            const groupByKeys = queryFromRoute && queryFromRoute.group_by ? Object.keys(queryFromRoute.group_by) : [];\n            for (const key of groupByKeys) {\n                let index = key.indexOf(tagPrefix);\n                if (index !== -1) {\n                    groupBy = tagKey;\n                    this.setState({\n                        isGroupByTagVisible: true,\n                    });\n                    break;\n                }\n                index = key.indexOf(orgUnitIdKey);\n                if (index !== -1) {\n                    groupBy = orgUnitIdKey;\n                    this.setState({\n                        isGroupByOrgVisible: true,\n                    });\n                    break;\n                }\n            }\n            return groupBy !== 'date' ? groupBy : defaultItem;\n        };\n        this.handleGroupBySelect = () => {\n            this.setState({\n                isGroupByOpen: !this.state.isGroupByOpen,\n            });\n        };\n        this.handleGroupByToggle = isGroupByOpen => {\n            this.setState({\n                isGroupByOpen,\n            });\n        };\n        this.handleGroupByClick = this.handleGroupByClick.bind(this);\n        this.handleGroupBySelect = this.handleGroupBySelect.bind(this);\n        this.handleGroupByToggle = this.handleGroupByToggle.bind(this);\n    }\n    componentDidMount() {\n        const { fetchOrg, fetchTag, orgQueryString, orgReportPathsType, showOrgs, showTags, tagQueryString, tagReportPathsType, } = this.props;\n        if (showOrgs) {\n            fetchOrg(orgReportPathsType, orgReportType, orgQueryString);\n        }\n        if (showTags) {\n            fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n        }\n        this.setState({\n            currentItem: this.getCurrentGroupBy(),\n        });\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchOrg, fetchTag, groupBy, orgQueryString, orgReportPathsType, perspective, showOrgs, showTags, tagQueryString, tagReportPathsType, } = this.props;\n        if (prevProps.groupBy !== groupBy || prevProps.perspective !== perspective) {\n            if (showOrgs) {\n                fetchOrg(orgReportPathsType, orgReportType, orgQueryString);\n            }\n            if (showTags) {\n                fetchTag(tagReportPathsType, tagReportType, tagQueryString);\n            }\n            let options;\n            if (prevProps.perspective !== perspective) {\n                options = {\n                    isGroupByOrgVisible: false,\n                    isGroupByTagVisible: false,\n                };\n            }\n            this.setState(Object.assign({ currentItem: this.getCurrentGroupBy() }, (options ? options : {})));\n        }\n    }\n    render() {\n        const { getIdKeyForGroupBy, groupBy, isDisabled = false, onItemClicked, orgReport, t, tagReport } = this.props;\n        const { currentItem, isGroupByOpen, isGroupByOrgVisible, isGroupByTagVisible } = this.state;\n        return (React.createElement(\"div\", { style: styles.groupBySelector },\n            React.createElement(\"label\", { style: styles.groupBySelectorLabel }, t('group_by.label')),\n            React.createElement(Dropdown, { onSelect: this.handleGroupBySelect, toggle: React.createElement(DropdownToggle, { isDisabled: isDisabled, onToggle: this.handleGroupByToggle }, t(`group_by.values.${currentItem}`)), isOpen: isGroupByOpen, dropdownItems: [this.getGroupByItems()] }),\n            Boolean(isGroupByOrgVisible) && (React.createElement(GroupByOrg, { getIdKeyForGroupBy: getIdKeyForGroupBy, groupBy: groupBy, isDisabled: isDisabled, onItemClicked: onItemClicked, options: groupByOrgOptions, orgReport: orgReport })),\n            Boolean(isGroupByTagVisible) && (React.createElement(GroupByTag, { groupBy: groupBy, isDisabled: isDisabled, onItemClicked: onItemClicked, options: groupByTagOptions, tagReport: tagReport }))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { endDate, startDate, orgReportPathsType, tagReportPathsType }) => {\n    const tagQuery = endDate && startDate\n        ? {\n            start_date: startDate,\n            end_date: endDate,\n        }\n        : {\n            filter: {\n                resolution: 'monthly',\n                time_scope_units: 'month',\n                time_scope_value: -1,\n            },\n        };\n    // Omitting key_only to share a single, cached request -- although the header doesn't need key values, the toolbar does\n    const tagQueryString = getQuery(Object.assign({}, tagQuery));\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, tagQueryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, tagQueryString);\n    const orgQueryString = getQuery({\n    // TBD...\n    });\n    const orgReport = orgSelectors.selectOrg(state, orgReportPathsType, orgReportType, orgQueryString);\n    const orgReportFetchStatus = orgSelectors.selectOrgFetchStatus(state, orgReportPathsType, orgReportType, orgQueryString);\n    return {\n        orgQueryString,\n        orgReport,\n        orgReportFetchStatus,\n        tagQueryString,\n        tagReport,\n        tagReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchOrg: orgActions.fetchOrg,\n    fetchTag: tagActions.fetchTag,\n};\nconst GroupByConnect = connect(mapStateToProps, mapDispatchToProps)(GroupByBase);\nconst GroupBy = withTranslation()(GroupByConnect);\nexport { GroupBy };\n","import { Dropdown, DropdownItem, KebabToggle } from '@patternfly/react-core';\nimport { tagPrefix } from 'api/queries/query';\nimport { ExportModal } from 'pages/views/components/export/exportModal';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { createMapStateToProps } from 'store/common';\nimport { costModelsActions } from 'store/costModels';\nclass DetailsActionsBase extends React.Component {\n    constructor(stateProps, dispatchProps) {\n        super(stateProps, dispatchProps);\n        this.defaultState = {\n            isDropdownOpen: false,\n            isExportModalOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getExportModal = () => {\n            const { groupBy, item, query, reportPathsType } = this.props;\n            const { isExportModalOpen } = this.state;\n            return (React.createElement(ExportModal, { groupBy: groupBy, isOpen: isExportModalOpen, items: [item], onClose: this.handleExportModalClose, query: query, reportPathsType: reportPathsType }));\n        };\n        this.handleExportModalClose = (isOpen) => {\n            this.setState({ isExportModalOpen: isOpen });\n        };\n        this.handleExportModalOpen = () => {\n            this.setState({ isExportModalOpen: true });\n        };\n        this.handleOnSelect = () => {\n            const { isDropdownOpen } = this.state;\n            this.setState({\n                isDropdownOpen: !isDropdownOpen,\n            });\n        };\n        this.handleOnToggle = (isDropdownOpen) => {\n            this.setState({ isDropdownOpen });\n        };\n        this.handleExportModalClose = this.handleExportModalClose.bind(this);\n        this.handleExportModalOpen = this.handleExportModalOpen.bind(this);\n        this.handleOnToggle = this.handleOnToggle.bind(this);\n        this.handleOnSelect = this.handleOnSelect.bind(this);\n    }\n    render() {\n        const { groupBy, isDisabled, showPriceListOption, t, redirectToCostModel, history, item: { source_uuid }, } = this.props;\n        // tslint:disable:jsx-wrap-multiline\n        const items = [\n            React.createElement(DropdownItem, { component: \"button\", isDisabled: isDisabled, key: \"export-action\", onClick: this.handleExportModalOpen }, t('details.actions.export')),\n        ];\n        if (showPriceListOption) {\n            items.unshift(React.createElement(DropdownItem, { component: \"button\", key: \"price-list-action\", isDisabled: isDisabled || groupBy.includes(tagPrefix) || source_uuid.length === 0, onClick: () => redirectToCostModel(source_uuid[0], history) }, t('details.actions.price_list')));\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(Dropdown, { onSelect: this.handleOnSelect, toggle: React.createElement(KebabToggle, { onToggle: this.handleOnToggle }), isOpen: this.state.isDropdownOpen, isPlain: true, position: \"right\", dropdownItems: items }),\n            this.getExportModal()));\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst mapStateToProps = createMapStateToProps((state, props) => {\n    return {};\n});\nconst mapDispatchToProps = {\n    redirectToCostModel: costModelsActions.redirectToCostModelFromSourceUuid,\n};\nconst DetailsActionsConnect = connect(mapStateToProps, mapDispatchToProps)(DetailsActionsBase);\nconst Actions = withRouter(withTranslation()(DetailsActionsConnect));\nexport { Actions };\n","import global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nexport const styles = {\n    content: {\n        paddingBottom: global_spacer_lg.value,\n        paddingLeft: global_spacer_lg.value,\n        paddingRight: global_spacer_lg.value,\n        paddingTop: global_spacer_lg.value,\n    },\n};\n","import global_FontWeight_bold from '@patternfly/react-tokens/dist/js/global_FontWeight_bold';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    dataListHeading: {\n        fontWeight: global_FontWeight_bold.value,\n    },\n    groupByHeading: {\n        marginBottom: global_spacer_lg.value,\n    },\n    tagLink: {\n        marginLeft: global_spacer_sm.value,\n    },\n    tagsContainer: {\n        marginRight: global_spacer_3xl.value,\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import { DataList, DataListCell, DataListItem, DataListItemCells, DataListItemRow } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { styles } from './tag.styles';\nclass TagViewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getDataListItems = () => {\n            const { tagReport } = this.props;\n            const result = [];\n            if (tagReport) {\n                for (const item of tagReport.data) {\n                    for (const val of item.values) {\n                        const id = `${item.key}:${val}`;\n                        result.push(React.createElement(DataListItem, { \"aria-labelledby\": id, key: `${id}-item` },\n                            React.createElement(DataListItemRow, null,\n                                React.createElement(DataListItemCells, { dataListCells: [\n                                        React.createElement(DataListCell, { key: `${id}-cell1` },\n                                            React.createElement(\"span\", { id: id }, item.key)),\n                                        React.createElement(DataListCell, { key: `${id}-cell2` }, val),\n                                    ] }))));\n                    }\n                }\n            }\n            return result;\n        };\n    }\n    render() {\n        const { groupBy, groupByValue, t } = this.props;\n        const dataListItems = this.getDataListItems();\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", null,\n                React.createElement(\"span\", { style: styles.dataListHeading }, t(`group_by.values.${groupBy}`))),\n            React.createElement(\"div\", { style: styles.groupByHeading },\n                React.createElement(\"span\", null, groupByValue)),\n            React.createElement(DataList, { \"aria-label\": \"Simple data list example\", isCompact: true },\n                React.createElement(DataListItem, { \"aria-labelledby\": \"heading1\" },\n                    React.createElement(DataListItemRow, null,\n                        React.createElement(DataListItemCells, { dataListCells: [\n                                React.createElement(DataListCell, { key: \"primary content\" },\n                                    React.createElement(\"span\", { id: \"heading1\", style: styles.dataListHeading }, t('tag.heading_key'))),\n                                React.createElement(DataListCell, { key: \"secondary content\" },\n                                    React.createElement(\"span\", { id: \"heading2\", style: styles.dataListHeading }, t('tag.heading_value'))),\n                            ] }))),\n                dataListItems.map(item => item))));\n    }\n}\nconst TagView = withTranslation()(connect()(TagViewBase));\nexport { TagView };\n","import { Modal } from '@patternfly/react-core';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { TagView } from './tagView';\nconst tagReportType = \"tag\" /* tag */;\nclass TagModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.getTagValueCount = () => {\n            const { tagReport } = this.props;\n            let count = 0;\n            if (tagReport) {\n                for (const item of tagReport.data) {\n                    if (item.values) {\n                        count += item.values.length;\n                    }\n                }\n            }\n            return count;\n        };\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    componentDidMount() {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        fetchTag(tagReportPathsType, tagReportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchTag(tagReportPathsType, tagReportType, queryString);\n        }\n    }\n    shouldComponentUpdate(nextProps) {\n        const { groupByValue, isOpen } = this.props;\n        return nextProps.groupByValue !== groupByValue || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { groupBy, isOpen, query, tagReport, t } = this.props;\n        // Match page header description\n        const groupByValue = query && query.filter && query.filter.account ? query.filter.account : this.props.groupByValue;\n        return (React.createElement(Modal, { isOpen: isOpen, onClose: this.handleClose, title: t('tag.title', {\n                value: this.getTagValueCount(),\n            }), width: '50%' },\n            React.createElement(TagView, { groupBy: groupBy, groupByValue: groupByValue, tagReport: tagReport })));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { tagReportPathsType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = groupByOrgValue ? orgUnitIdKey : getGroupById(query);\n    const groupByValue = groupByOrgValue ? groupByOrgValue : getGroupByValue(query);\n    const newQuery = {\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        filter_by: Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: groupByValue })),\n    };\n    const queryString = getQuery(newQuery);\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, queryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, queryString);\n    return {\n        groupBy,\n        groupByValue,\n        query,\n        queryString,\n        tagReport,\n        tagReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst TagModal = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(TagModalBase));\nexport { TagModal };\n","import { TagIcon } from '@patternfly/react-icons/dist/js/icons/tag-icon';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { tagActions, tagSelectors } from 'store/tags';\nimport { getTestProps, testIds } from 'testIds';\nimport { styles } from './tag.styles';\nimport { TagModal } from './tagModal';\nconst tagReportType = \"tag\" /* tag */;\nclass TagLinkBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isOpen: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleClose = (isOpen) => {\n            this.setState({ isOpen });\n        };\n        this.handleOpen = event => {\n            this.setState({ isOpen: true });\n            event.preventDefault();\n            return false;\n        };\n        this.handleClose = this.handleClose.bind(this);\n        this.handleOpen = this.handleOpen.bind(this);\n    }\n    componentDidMount() {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        fetchTag(tagReportPathsType, tagReportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchTag, queryString, tagReportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchTag(tagReportPathsType, tagReportType, queryString);\n        }\n    }\n    render() {\n        const { id, tagReport, tagReportPathsType } = this.props;\n        const { isOpen } = this.state;\n        let count = 0;\n        if (tagReport) {\n            for (const item of tagReport.data) {\n                if (item.values) {\n                    count += item.values.length;\n                }\n            }\n        }\n        return (React.createElement(\"div\", { style: styles.tagsContainer, id: id },\n            Boolean(count > 0) && (React.createElement(React.Fragment, null,\n                React.createElement(TagIcon, null),\n                React.createElement(\"a\", Object.assign({}, getTestProps(testIds.details.tag_lnk), { href: \"#/\", onClick: this.handleOpen, style: styles.tagLink }), count))),\n            React.createElement(TagModal, { isOpen: isOpen, onClose: this.handleClose, tagReportPathsType: tagReportPathsType })));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { tagReportPathsType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = groupByOrgValue ? orgUnitIdKey : getGroupById(query);\n    const groupByValue = groupByOrgValue ? groupByOrgValue : getGroupByValue(query);\n    const newQuery = {\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        filter_by: Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: groupByValue })),\n    };\n    const queryString = getQuery(newQuery);\n    const tagReport = tagSelectors.selectTag(state, tagReportPathsType, tagReportType, queryString);\n    const tagReportFetchStatus = tagSelectors.selectTagFetchStatus(state, tagReportPathsType, tagReportType, queryString);\n    return {\n        groupBy,\n        groupByValue,\n        query,\n        queryString,\n        tagReport,\n        tagReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchTag: tagActions.fetchTag,\n};\nconst TagLink = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(TagLinkBase));\nexport { TagLink };\n","import global_BackgroundColor_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_100';\nimport global_Color_200 from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport global_disabled_color_100 from '@patternfly/react-tokens/dist/js/global_disabled_color_100';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_FontSize_xs from '@patternfly/react-tokens/dist/js/global_FontSize_xs';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_xl from '@patternfly/react-tokens/dist/js/global_spacer_xl';\nimport global_spacer_xs from '@patternfly/react-tokens/dist/js/global_spacer_xs';\nexport const styles = {\n    cost: {\n        marginTop: global_spacer_xl.var,\n    },\n    costLabel: {\n        marginTop: global_spacer_xs.var,\n    },\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n        textAlign: 'right',\n    },\n    costLabelDate: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_200.var,\n        textAlign: 'right',\n    },\n    header: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        paddingLeft: global_spacer_lg.var,\n        paddingRight: global_spacer_lg.var,\n        paddingTop: global_spacer_lg.var,\n        backgroundColor: global_BackgroundColor_100.var,\n    },\n    infoDescription: {\n        color: global_disabled_color_100.value,\n        fontSize: global_FontSize_xs.value,\n    },\n    tabs: {\n        display: 'flex',\n    },\n    tag: {\n        marginLeft: global_spacer_lg.var,\n    },\n    title: {\n        paddingBottom: global_spacer_lg.var,\n        paddingTop: global_spacer_md.var,\n    },\n};\n","import './breakdownHeader.scss';\nimport { Title } from '@patternfly/react-core';\nimport { AngleLeftIcon } from '@patternfly/react-icons/dist/js/icons/angle-left-icon';\nimport { breakdownDescKey, breakdownTitleKey, getQueryRoute, orgUnitIdKey } from 'api/queries/query';\nimport { TagLink } from 'pages/views/details/components/tag/tagLink';\nimport { getGroupByOrgValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { Link } from 'react-router-dom';\nimport { getForDateRangeString } from 'utils/dateRange';\nimport { formatValue } from 'utils/formatValue';\nimport { styles } from './breakdownHeader.styles';\nclass BreakdownHeaderBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.buildDetailsLink = () => {\n            const { detailsURL, groupBy, query } = this.props;\n            let groupByKey = groupBy;\n            let value = '*';\n            // Retrieve org unit used by the details page\n            if (query[orgUnitIdKey]) {\n                groupByKey = orgUnitIdKey;\n                value = query[orgUnitIdKey];\n            }\n            const newQuery = Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), { group_by: {\n                    [groupByKey]: value,\n                } });\n            // Don't want these params when returning to the details page\n            if (newQuery.filter) {\n                newQuery.filter.account = undefined;\n                newQuery[breakdownDescKey] = undefined;\n                newQuery[orgUnitIdKey] = undefined;\n                newQuery[breakdownTitleKey] = undefined;\n            }\n            return `${detailsURL}?${getQueryRoute(newQuery)}`;\n        };\n        this.getTotalCost = () => {\n            const { report } = this.props;\n            const hasCost = report && report.meta && report.meta.total && report.meta.total.cost && report.meta.total.cost.total;\n            const cost = formatValue(hasCost ? report.meta.total.cost.total.value : 0, hasCost ? report.meta.total.cost.total.units : 'USD');\n            return cost;\n        };\n    }\n    render() {\n        const { description, groupBy, query, t, tabs, tagReportPathsType, title } = this.props;\n        const filterByAccount = query && query.filter ? query.filter.account : undefined;\n        const groupByOrg = getGroupByOrgValue(query);\n        const showTags = filterByAccount || groupBy === 'account' || groupBy === 'project' || groupBy === 'subscription_guid';\n        // i18n groupBy key\n        const groupByKey = groupBy ? groupBy : filterByAccount ? 'account' : groupByOrg ? orgUnitIdKey : undefined;\n        return (React.createElement(\"header\", { style: styles.header },\n            React.createElement(\"div\", null,\n                React.createElement(\"nav\", { \"aria-label\": \"breadcrumb\", className: \"breadcrumbOverride\" },\n                    React.createElement(\"ol\", { className: \"pf-c-breadcrumb__list\" },\n                        React.createElement(\"li\", { className: \"pf-c-breadcrumb__item\" },\n                            React.createElement(\"span\", { className: \"pf-c-breadcrumb__item-divider\" },\n                                React.createElement(AngleLeftIcon, null)),\n                            React.createElement(Link, { to: this.buildDetailsLink() }, t('breakdown.back_to_details', {\n                                groupBy: groupByKey,\n                                value: tagReportPathsType,\n                            }))))),\n                React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"2xl\" },\n                    t('breakdown.title', { value: title }),\n                    description && React.createElement(\"div\", { style: styles.infoDescription }, description)),\n                React.createElement(\"div\", { style: styles.tabs },\n                    tabs,\n                    React.createElement(\"div\", { style: styles.tag }, Boolean(showTags) && React.createElement(TagLink, { id: \"tags\", tagReportPathsType: tagReportPathsType })))),\n            React.createElement(\"div\", { style: styles.cost },\n                React.createElement(\"div\", { style: styles.costLabel },\n                    React.createElement(Title, { headingLevel: \"h2\", style: styles.costValue, size: \"4xl\" },\n                        React.createElement(\"span\", null, this.getTotalCost()))),\n                React.createElement(\"div\", { style: styles.costLabelDate }, getForDateRangeString(groupByKey, 'breakdown.total_cost_date', 0)))));\n    }\n}\nconst BreakdownHeader = withTranslation()(BreakdownHeaderBase);\nexport { BreakdownHeader };\n","import { Tab, TabContent, Tabs, TabTitleText } from '@patternfly/react-core';\nimport Loading from 'pages/state/loading';\nimport NoData from 'pages/state/noData';\nimport NoProviders from 'pages/state/noProviders';\nimport NotAvailable from 'pages/state/notAvailable';\nimport { hasCurrentMonthData } from 'pages/views/utils/providers';\nimport React from 'react';\nimport { styles } from './breakdown.styles';\nimport { BreakdownHeader } from './breakdownHeader';\nexport const getIdKeyForTab = (tab) => {\n    switch (tab) {\n        case \"cost-overview\" /* costOverview */:\n            return 'cost-overview';\n        case \"historical-data\" /* historicalData */:\n            return 'historical-data';\n    }\n};\nclass BreakdownBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            activeTabKey: 0,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.getAvailableTabs = () => {\n            const availableTabs = [\n                {\n                    contentRef: React.createRef(),\n                    tab: \"cost-overview\" /* costOverview */,\n                },\n                {\n                    contentRef: React.createRef(),\n                    tab: \"historical-data\" /* historicalData */,\n                },\n            ];\n            return availableTabs;\n        };\n        this.getTab = (tab, contentRef, index) => {\n            return (React.createElement(Tab, { eventKey: index, key: `${getIdKeyForTab(tab)}-tab`, tabContentId: `tab-${index}`, tabContentRef: contentRef, title: React.createElement(TabTitleText, null, this.getTabTitle(tab)) }));\n        };\n        this.getTabContent = (availableTabs) => {\n            return availableTabs.map((val, index) => {\n                return (React.createElement(TabContent, { eventKey: index, key: `${getIdKeyForTab(val.tab)}-tabContent`, id: `tab-${index}`, ref: val.contentRef }, this.getTabItem(val.tab, index)));\n            });\n        };\n        this.getTabItem = (tab, index) => {\n            const { costOverviewComponent, historicalDataComponent } = this.props;\n            const { activeTabKey } = this.state;\n            const emptyTab = React.createElement(React.Fragment, null); // Lazily load tabs\n            if (activeTabKey !== index) {\n                return emptyTab;\n            }\n            const currentTab = getIdKeyForTab(tab);\n            if (currentTab === \"cost-overview\" /* costOverview */) {\n                return costOverviewComponent;\n            }\n            else if (currentTab === \"historical-data\" /* historicalData */) {\n                return historicalDataComponent;\n            }\n            else {\n                return emptyTab;\n            }\n        };\n        this.getTabs = (availableTabs) => {\n            const { activeTabKey } = this.state;\n            return (React.createElement(Tabs, { activeKey: activeTabKey, onSelect: this.handleTabClick }, availableTabs.map((val, index) => this.getTab(val.tab, val.contentRef, index))));\n        };\n        this.getTabTitle = (tab) => {\n            const { t } = this.props;\n            if (tab === \"cost-overview\" /* costOverview */) {\n                return t('breakdown.cost_overview_title');\n            }\n            else if (tab === \"historical-data\" /* historicalData */) {\n                return t('breakdown.historical_data_title');\n            }\n        };\n        this.handleTabClick = (event, tabIndex) => {\n            const { activeTabKey } = this.state;\n            if (activeTabKey !== tabIndex) {\n                this.setState({\n                    activeTabKey: tabIndex,\n                });\n            }\n        };\n        this.updateReport = () => {\n            const { location, fetchReport, queryString, reportPathsType, reportType } = this.props;\n            if (location.search) {\n                fetchReport(reportPathsType, reportType, queryString);\n            }\n        };\n    }\n    componentDidMount() {\n        this.updateReport();\n    }\n    componentDidUpdate(prevProps) {\n        const { location, report, reportError, queryString } = this.props;\n        const newQuery = prevProps.queryString !== queryString;\n        const noReport = !report && !reportError;\n        const noLocation = !location.search;\n        if (newQuery || noReport || noLocation) {\n            this.updateReport();\n        }\n    }\n    render() {\n        const { description, detailsURL, emptyStateTitle, groupBy, providers, providersFetchStatus, providerType, query, report, reportError, reportFetchStatus, tagReportPathsType, title, } = this.props;\n        const availableTabs = this.getAvailableTabs();\n        // Note: Providers are fetched via the InactiveSources component used by all routes\n        if (reportError) {\n            return React.createElement(NotAvailable, { title: emptyStateTitle });\n        }\n        else if (providersFetchStatus === 1 /* inProgress */ && reportFetchStatus === 1 /* inProgress */) {\n            return React.createElement(Loading, { title: emptyStateTitle });\n        }\n        else if (providersFetchStatus === 2 /* complete */ && reportFetchStatus === 2 /* complete */) {\n            // API returns empy data array for no sources\n            const noProviders = providers && providers.meta && providers.meta.count === 0 && providersFetchStatus === 2 /* complete */;\n            if (noProviders) {\n                return React.createElement(NoProviders, { providerType: providerType, title: emptyStateTitle });\n            }\n            if (!hasCurrentMonthData(providers)) {\n                return React.createElement(NoData, { title: title });\n            }\n        }\n        return (React.createElement(React.Fragment, null,\n            React.createElement(BreakdownHeader, { description: description, detailsURL: detailsURL, groupBy: groupBy, query: query, report: report, tabs: this.getTabs(availableTabs), tagReportPathsType: tagReportPathsType, title: title }),\n            React.createElement(\"div\", { style: styles.content }, this.getTabContent(availableTabs))));\n    }\n}\nexport default BreakdownBase;\n","import global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    clustersContainer: {\n        marginRight: global_spacer_3xl.value,\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import global_spacer_2xl from '@patternfly/react-tokens/dist/js/global_spacer_2xl';\nexport const styles = {\n    modal: {\n        // Workaround for isLarge not working properly\n        height: '700px',\n        width: '600px',\n    },\n    subTitle: {\n        marginTop: global_spacer_2xl.value,\n        textAlign: 'right',\n    },\n};\n","import React from 'react';\nimport { withTranslation } from 'react-i18next';\nclass ClusterViewBase extends React.Component {\n    render() {\n        const { item } = this.props;\n        if (!item.clusters) {\n            return null;\n        }\n        return item.clusters.map((cluster, index) => React.createElement(\"div\", { key: `cluster-${index}` }, cluster));\n    }\n}\nconst ClusterView = withTranslation()(ClusterViewBase);\nexport { ClusterView, ClusterViewBase };\n","import './clusterModal.scss';\nimport { Modal } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { styles } from './clusterModal.styles';\nimport { ClusterView } from './clusterView';\nclass ClusterModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    shouldComponentUpdate(nextProps) {\n        const { isOpen, item } = this.props;\n        return nextProps.item !== item || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { groupBy, isOpen, item, t } = this.props;\n        return (React.createElement(Modal, { className: \"modalOverride\", style: styles.modal, isOpen: isOpen, onClose: this.handleClose, title: t('details.clusters_modal_title', {\n                groupBy,\n                name: item.label,\n            }), width: '50%' },\n            React.createElement(ClusterView, { item: item })));\n    }\n}\nconst ClusterModal = withTranslation()(ClusterModalBase);\nexport { ClusterModal };\n","import React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { getTestProps, testIds } from 'testIds';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { styles } from './cluster.styles';\nimport { ClusterModal } from './clusterModal';\nclass ClusterBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.defaultState = {\n            isOpen: false,\n            showAll: false,\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleClose = (isOpen) => {\n            this.setState({ isOpen });\n        };\n        this.handleOpen = event => {\n            this.setState({ isOpen: true });\n            event.preventDefault();\n            return false;\n        };\n        this.handleClose = this.handleClose.bind(this);\n        this.handleOpen = this.handleOpen.bind(this);\n    }\n    render() {\n        const { groupBy, report, t } = this.props;\n        const { isOpen, showAll } = this.state;\n        let charCount = 0;\n        const maxChars = 50;\n        const someClusters = [];\n        const allClusters = [];\n        const computedItems = getComputedReportItems({\n            report,\n            idKey: groupBy,\n        });\n        const item = computedItems && computedItems.length ? computedItems[0] : undefined;\n        if (!item) {\n            return null;\n        }\n        for (const cluster of item.clusters) {\n            const prefix = someClusters.length > 0 ? ', ' : '';\n            const clusterString = `${prefix}${cluster}`;\n            if (showAll) {\n                someClusters.push(clusterString);\n            }\n            else if (charCount <= maxChars) {\n                if (charCount + clusterString.length > maxChars) {\n                    someClusters.push(clusterString\n                        .slice(0, maxChars - charCount)\n                        .trim()\n                        .concat('...'));\n                }\n                else {\n                    someClusters.push(clusterString);\n                }\n            }\n            charCount += clusterString.length;\n            allClusters.push(cluster);\n        }\n        return (React.createElement(\"div\", { style: styles.clustersContainer },\n            Boolean(someClusters) && someClusters.map((cluster, index) => React.createElement(\"span\", { key: index }, cluster)),\n            Boolean(someClusters.length < allClusters.length) && (React.createElement(\"a\", Object.assign({}, getTestProps(testIds.details.cluster_lnk), { href: \"#/\", onClick: this.handleOpen }), t('details.more_clusters', {\n                value: allClusters.length - someClusters.length,\n            }))),\n            React.createElement(ClusterModal, { groupBy: groupBy, isOpen: isOpen, item: item, onClose: this.handleClose })));\n    }\n}\nconst Cluster = withTranslation()(ClusterBase);\nexport { Cluster };\n","import global_FontWeight_bold from '@patternfly/react-tokens/dist/js/global_FontWeight_bold';\nimport global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const chartStyles = {\n    chartHeight: 150,\n    chartWidth: 350,\n    subTitle: {\n        fontWeight: global_FontWeight_bold.value,\n    },\n};\nexport const styles = {\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n};\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nimport { ChartLabel, ChartLegend, ChartPie, ChartThemeColor } from '@patternfly/react-charts';\nimport { Skeleton } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { formatValue } from 'utils/formatValue';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { chartStyles, styles } from './costChart.styles';\nclass CostChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        // Override legend layout\n        this.getLegendLabel = () => {\n            return (_a) => {\n                var { values } = _a, props = __rest(_a, [\"values\"]);\n                return (React.createElement(ChartLabel, Object.assign({}, props, { style: [{ fontWeight: chartStyles.subTitle.fontWeight }, {}], text: [values[props.index], props.text] })));\n            };\n        };\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md })));\n        };\n    }\n    render() {\n        const { report, reportFetchStatus, t } = this.props;\n        const hasCost = report && report.meta && report.meta.total && report.meta.total.cost;\n        const hasMarkup = hasCost && report.meta.total.cost.markup;\n        const hasRaw = hasCost && report.meta.total.cost.raw;\n        const hasUsage = hasCost && report.meta.total.cost.usage;\n        const markupUnits = hasMarkup ? report.meta.total.cost.markup.units : 'USD';\n        const rawUnits = hasRaw ? report.meta.total.cost.raw.units : 'USD';\n        const usageUnits = hasUsage ? report.meta.total.cost.usage.units : 'USD';\n        const markupValue = hasMarkup ? report.meta.total.cost.markup.value : 0;\n        const rawValue = hasRaw ? report.meta.total.cost.raw.value : 0;\n        const usageValue = hasUsage ? report.meta.total.cost.usage.value : 0;\n        const markup = formatValue(hasMarkup ? report.meta.total.cost.markup.value : 0, markupUnits);\n        const raw = formatValue(hasRaw ? report.meta.total.cost.raw.value : 0, rawUnits);\n        const usage = formatValue(hasUsage ? report.meta.total.cost.usage.value : 0, usageUnits);\n        const markupLabel = t('breakdown.cost_chart.markup_label');\n        const rawLabel = t('breakdown.cost_chart.raw_label');\n        const usageLabel = t('breakdown.cost_chart.usage_label');\n        // Override legend label layout\n        const LegendLabel = this.getLegendLabel();\n        const Legend = (React.createElement(ChartLegend, { gutter: 25, itemsPerRow: 2, labelComponent: React.createElement(LegendLabel, { dy: 10, lineHeight: 1.5, values: [raw, markup, usage] }), rowGutter: 20 }));\n        return (React.createElement(\"div\", { style: { height: chartStyles.chartHeight, width: chartStyles.chartWidth } }, reportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(ChartPie, { ariaDesc: t('breakdown.cost_chart.aria_desc'), ariaTitle: t('breakdown.cost_chart.aria_title'), constrainToVisibleArea: true, data: [\n                { x: rawLabel, y: rawValue, units: rawUnits },\n                { x: markupLabel, y: markupValue, units: markupUnits },\n                { x: usageLabel, y: usageValue, units: usageUnits },\n            ], height: chartStyles.chartHeight, labels: ({ datum }) => t('breakdown.cost_chart.tooltip', {\n                name: datum.x,\n                value: formatValue(datum.y, datum.units),\n            }), legendComponent: Legend, legendData: [\n                {\n                    name: rawLabel,\n                },\n                {\n                    name: markupLabel,\n                },\n                {\n                    name: usageLabel,\n                },\n            ], legendOrientation: \"vertical\", legendPosition: \"right\", padding: {\n                bottom: 20,\n                left: 0,\n                right: 225,\n                top: 20,\n            }, themeColor: ChartThemeColor.green, width: chartStyles.chartWidth }))));\n    }\n}\nconst CostChart = withTranslation()(CostChartBase);\nexport { CostChart };\n","import global_spacer_xl from '@patternfly/react-tokens/dist/js/global_spacer_xl';\nexport const styles = {\n    mainContent: {\n        marginTop: global_spacer_xl.value,\n    },\n    subTitle: {\n        textAlign: 'right',\n    },\n};\n","import { Title } from '@patternfly/react-core';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { ReportSummaryItem, ReportSummaryItems } from 'components/reports/reportSummary';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue } from 'utils/formatValue';\nimport { formatCurrency } from 'utils/formatValue';\nimport { styles } from './summaryModal.styles';\nconst reportType = \"cost\" /* cost */;\nclass SummaryModalViewBase extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    render() {\n        const { report, reportGroupBy, reportFetchStatus, t } = this.props;\n        const cost = formatCurrency(report && report.meta && report.meta.total ? report.meta.total.cost.total.value : 0);\n        return (React.createElement(React.Fragment, null,\n            React.createElement(\"div\", { style: styles.subTitle },\n                React.createElement(Title, { headingLevel: \"h2\", size: \"xl\" }, t('details.cost_value', { value: cost }))),\n            React.createElement(\"div\", { style: styles.mainContent },\n                React.createElement(ReportSummaryItems, { idKey: reportGroupBy, report: report, status: reportFetchStatus }, ({ items }) => items.map(_item => (React.createElement(ReportSummaryItem, { key: _item.id, formatOptions: {}, formatValue: formatValue, label: _item.label ? _item.label.toString() : '', totalValue: report.meta.total.cost.total.value, units: report.meta.total.cost.total.units, value: _item.cost.total.value })))))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportGroupBy, reportPathsType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = groupByOrgValue ? orgUnitIdKey : getGroupById(query);\n    const groupByValue = groupByOrgValue ? groupByOrgValue : getGroupByValue(query);\n    const newQuery = {\n        filter: {\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        filter_by: Object.assign(Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: undefined })), (groupBy && { [groupBy]: groupByValue })),\n        group_by: Object.assign({}, (reportGroupBy && { [reportGroupBy]: '*' })),\n    };\n    const queryString = getQuery(newQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        queryString,\n        report,\n        reportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst SummaryModalView = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(SummaryModalViewBase));\nexport { SummaryModalView };\n","import './summaryModal.scss';\nimport { Modal } from '@patternfly/react-core';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { SummaryModalView } from './summaryModalView';\nclass SummaryModalBase extends React.Component {\n    constructor(props) {\n        super(props);\n        this.handleClose = () => {\n            this.props.onClose(false);\n        };\n        this.handleClose = this.handleClose.bind(this);\n    }\n    shouldComponentUpdate(nextProps) {\n        const { groupByValue, isOpen } = this.props;\n        return nextProps.groupByValue !== groupByValue || nextProps.isOpen !== isOpen;\n    }\n    render() {\n        const { groupByValue, isOpen, reportGroupBy, reportPathsType, t } = this.props;\n        return (React.createElement(Modal, { className: \"modalOverride\", isOpen: isOpen, onClose: this.handleClose, title: t('details.summary_modal_title', {\n                groupBy: reportGroupBy,\n                name: groupByValue,\n            }), variant: \"large\" },\n            React.createElement(SummaryModalView, { reportGroupBy: reportGroupBy, reportPathsType: reportPathsType })));\n    }\n}\nconst SummaryModal = withTranslation()(SummaryModalBase);\nexport { SummaryModal };\n","import global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    card: {},\n    skeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    viewAllContainer: {\n        marginLeft: '-15px',\n    },\n};\n","import { Button, ButtonType, ButtonVariant, Card, CardBody, CardFooter, CardTitle, Skeleton, Title, } from '@patternfly/react-core';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { ReportSummaryItem, ReportSummaryItems } from 'components/reports/reportSummary';\nimport { SummaryModal } from 'pages/views/details/components/summary/summaryModal';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { getTestProps, testIds } from 'testIds';\nimport { getComputedReportItems } from 'utils/computedReport/getComputedReportItems';\nimport { formatValue } from 'utils/formatValue';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { styles } from './summaryCard.styles';\nclass SummaryBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.state = {\n            isBulletChartModalOpen: false,\n        };\n        this.getItems = () => {\n            const { report, reportGroupBy } = this.props;\n            const computedItems = getComputedReportItems({\n                report,\n                idKey: reportGroupBy,\n            });\n            return computedItems;\n        };\n        this.getSummary = () => {\n            const { report, reportGroupBy, reportFetchStatus } = this.props;\n            return (React.createElement(ReportSummaryItems, { idKey: reportGroupBy, report: report, status: reportFetchStatus }, ({ items }) => items.map(reportItem => (React.createElement(ReportSummaryItem, { key: `${reportItem.id}-item`, formatOptions: {}, formatValue: formatValue, label: reportItem.label ? reportItem.label.toString() : undefined, totalValue: report.meta.total.cost.total.value, units: report.meta.total.cost.total.units, value: reportItem.cost.total.value })))));\n        };\n        this.getViewAll = () => {\n            const { groupBy, query, reportGroupBy, reportPathsType, t } = this.props;\n            const { isBulletChartModalOpen } = this.state;\n            const computedItems = this.getItems();\n            const otherIndex = computedItems.findIndex(i => {\n                const id = i.id;\n                if (id && id !== null) {\n                    return id === 'Other' || id === 'Others';\n                }\n            });\n            if (otherIndex !== -1) {\n                // Match page header description\n                const groupByValue = query && query.filter && query.filter.account ? query.filter.account : this.props.groupByValue;\n                return (React.createElement(\"div\", { style: styles.viewAllContainer },\n                    React.createElement(Button, Object.assign({}, getTestProps(testIds.details.view_all_btn), { onClick: this.handleBulletChartModalOpen, type: ButtonType.button, variant: ButtonVariant.link }), t('details.view_all', { groupBy: reportGroupBy })),\n                    React.createElement(SummaryModal, { groupBy: groupBy, groupByValue: groupByValue, isOpen: isBulletChartModalOpen, onClose: this.handleBulletChartModalClose, query: query, reportGroupBy: reportGroupBy, reportPathsType: reportPathsType })));\n            }\n            else {\n                return null;\n            }\n        };\n        this.handleBulletChartModalClose = (isOpen) => {\n            this.setState({ isBulletChartModalOpen: isOpen });\n        };\n        this.handleBulletChartModalOpen = event => {\n            this.setState({ isBulletChartModalOpen: true });\n            event.preventDefault();\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        if (prevProps.queryString !== queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    render() {\n        const { reportGroupBy, reportFetchStatus, t } = this.props;\n        return (React.createElement(Card, { style: styles.card },\n            React.createElement(CardTitle, null,\n                React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('breakdown.summary_title', { groupBy: reportGroupBy }))),\n            React.createElement(CardBody, null, reportFetchStatus === 1 /* inProgress */ ? (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.skeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.skeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.skeleton, width: skeletonWidth.md }))) : (this.getSummary())),\n            React.createElement(CardFooter, null, this.getViewAll())));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportGroupBy, reportPathsType, reportType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = groupByOrgValue ? orgUnitIdKey : getGroupById(query);\n    const groupByValue = groupByOrgValue ? groupByOrgValue : getGroupByValue(query);\n    const newQuery = {\n        filter: {\n            limit: 3,\n            resolution: 'monthly',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        },\n        filter_by: Object.assign(Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: undefined })), (groupBy && { [groupBy]: groupByValue })),\n        group_by: Object.assign({}, (reportGroupBy && { [reportGroupBy]: '*' })),\n    };\n    const queryString = getQuery(newQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        groupBy,\n        groupByValue,\n        query,\n        queryString,\n        report,\n        reportFetchStatus,\n        reportPathsType,\n        reportType,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst SummaryCard = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(SummaryBase));\nexport { SummaryCard };\n","import global_FontWeight_bold from '@patternfly/react-tokens/dist/js/global_FontWeight_bold';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nexport const styles = {\n    chartSkeleton: {\n        marginBottom: global_spacer_md.value,\n    },\n    capacity: {\n        fontWeight: global_FontWeight_bold.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { ChartBullet } from '@patternfly/react-charts';\nimport { Grid, GridItem, Skeleton } from '@patternfly/react-core';\nimport { parseQuery } from 'api/queries/ocpQuery';\nimport { getQuery } from 'api/queries/query';\nimport { getResizeObserver } from 'components/charts/common/chartUtils';\nimport { getGroupById, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { noop } from 'utils/noop';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { styles } from './usageChart.styles';\nclass UsageChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            width: 0,\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n        this.getCpuChart = () => {\n            const { groupBy, reportFetchStatus, report } = this.props;\n            const { width } = this.state;\n            const chartDatum = groupBy === 'cluster' ? this.getChartDatumWithCapacity() : this.getChartDatum();\n            if (!report || chartDatum.usage.length === 0) {\n                return null;\n            }\n            return (React.createElement(\"div\", { className: \"chartOverride\" }, reportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(React.Fragment, null,\n                Boolean(groupBy === 'cluster') && this.getFreeSpace(),\n                React.createElement(ChartBullet, { comparativeErrorMeasureData: chartDatum.limit.value\n                        ? [\n                            {\n                                tooltip: chartDatum.limit.tooltip,\n                                y: chartDatum.limit.value,\n                            },\n                        ]\n                        : [], comparativeErrorMeasureLegendData: chartDatum.limit.value ? [{ name: chartDatum.limit.legend }] : [], height: this.getChartHeight(), labels: ({ datum }) => `${datum.tooltip}`, legendPosition: \"bottom-left\", legendItemsPerRow: this.getItemsPerRow(), maxDomain: this.isDatumEmpty(chartDatum) ? 100 : undefined, minDomain: 0, padding: {\n                        bottom: 75,\n                        left: 10,\n                        right: 50,\n                        top: 0,\n                    }, primarySegmentedMeasureData: chartDatum.usage.length\n                        ? chartDatum.usage.map(datum => {\n                            return {\n                                tooltip: datum.tooltip,\n                                y: datum.value,\n                            };\n                        })\n                        : [], primarySegmentedMeasureLegendData: chartDatum.usage.length\n                        ? chartDatum.usage.map(datum => {\n                            return {\n                                name: datum.legend,\n                            };\n                        })\n                        : [], qualitativeRangeData: chartDatum.ranges.length\n                        ? [\n                            {\n                                tooltip: chartDatum.ranges[0].tooltip,\n                                y: chartDatum.ranges[0].value,\n                            },\n                        ]\n                        : [], qualitativeRangeLegendData: chartDatum.ranges.length ? [{ name: chartDatum.ranges[0].legend }] : [], width: width })))));\n        };\n        this.getChartHeight = () => {\n            const { groupBy } = this.props;\n            const { width } = this.state;\n            if (groupBy === 'cluster') {\n                return width > 950 ? 115 : width > 450 ? 150 : 210;\n            }\n            else {\n                return width > 700 ? 115 : width > 450 ? 150 : 180;\n            }\n        };\n        this.getItemsPerRow = () => {\n            const { width } = this.state;\n            return width > 950 ? 4 : width > 700 ? 3 : width > 450 ? 2 : 1;\n        };\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, width: skeletonWidth.xs })));\n        };\n        this.isDatumEmpty = (datum) => {\n            let hasRange = false;\n            for (const range of datum.ranges) {\n                if (range.value) {\n                    hasRange = true;\n                    break;\n                }\n            }\n            let hasUsage = false;\n            for (const usage of datum.usage) {\n                if (usage.value) {\n                    hasUsage = true;\n                    break;\n                }\n            }\n            return !(datum.limit.value || hasRange || hasUsage);\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, queryString);\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, queryString, reportPathsType, reportType } = this.props;\n        if (prevProps.queryString !== this.props.queryString) {\n            fetchReport(reportPathsType, reportType, queryString);\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getChartDatum() {\n        const { report, reportType, t } = this.props;\n        const datum = {\n            limit: {},\n            ranges: [],\n            usage: [],\n        };\n        // Always show bullet chart legends https://github.com/project-koku/koku-ui/issues/963\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasLimit = hasTotal && report.meta.total.limit && report.meta.total.limit !== null;\n        const limit = Math.trunc(hasLimit ? report.meta.total.limit.value : 0);\n        const limitUnits = t(`units.${unitLookupKey(hasLimit ? report.meta.total.limit.units : '')}`);\n        datum.limit = {\n            legend: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            tooltip: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            value: Math.trunc(limit),\n        };\n        const hasRequest = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = t(`units.${unitLookupKey(hasRequest ? report.meta.total.request.units : '')}`);\n        datum.ranges = [\n            {\n                legend: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                value: Math.trunc(request),\n            },\n        ];\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = t(`units.${unitLookupKey(hasUsage ? report.meta.total.usage.units : '')}`);\n        datum.usage = [\n            {\n                legend: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                value: Math.trunc(usage),\n            },\n        ];\n        return datum;\n    }\n    getChartDatumWithCapacity() {\n        const { report, reportType, t } = this.props;\n        const datum = {\n            limit: {},\n            ranges: [],\n            usage: [],\n        };\n        // Always show bullet chart legends https://github.com/project-koku/koku-ui/issues/963\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasLimit = hasTotal && report.meta.total.limit && report.meta.total.limit !== null;\n        const limit = Math.trunc(hasLimit ? report.meta.total.limit.value : 0);\n        const limitUnits = t(`units.${unitLookupKey(hasLimit ? report.meta.total.limit.units : '')}`);\n        datum.limit = {\n            legend: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            tooltip: t(`details.usage.${reportType}_limit`, {\n                value: limit,\n                units: limitUnits,\n            }),\n            value: Math.trunc(limit),\n        };\n        const hasCapacity = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const capacity = Math.trunc(hasCapacity ? report.meta.total.capacity.value : 0);\n        const capacityUnits = t(`units.${unitLookupKey(hasCapacity ? report.meta.total.capacity.units : '')}`);\n        datum.ranges = [\n            {\n                legend: t(`details.usage.${reportType}_capacity`, {\n                    value: capacity,\n                    units: capacityUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_capacity`, {\n                    value: capacity,\n                    units: capacityUnits,\n                }),\n                value: Math.trunc(capacity),\n            },\n        ];\n        const hasRequest = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = t(`units.${unitLookupKey(hasRequest ? report.meta.total.request.units : '')}`);\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = t(`units.${unitLookupKey(hasUsage ? report.meta.total.usage.units : '')}`);\n        datum.usage = [\n            {\n                legend: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_usage`, {\n                    value: usage,\n                    units: usageUnits,\n                }),\n                value: Math.trunc(usage),\n            },\n            {\n                legend: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                tooltip: t(`details.usage.${reportType}_requests`, {\n                    value: request,\n                    units: requestUnits,\n                }),\n                value: Math.trunc(request),\n            },\n        ];\n        return datum;\n    }\n    getFreeSpace() {\n        const { report, reportType, t } = this.props;\n        const hasTotal = report && report.meta && report.meta.total;\n        const hasCapacity = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const hasRequest = hasTotal && report.meta.total.request && report.meta.total.request !== null;\n        const hasUsage = hasTotal && report.meta.total.usage && report.meta.total.usage !== null;\n        const capacity = Math.trunc(hasCapacity ? report.meta.total.capacity.value : 0);\n        const request = Math.trunc(hasRequest ? report.meta.total.request.value : 0);\n        const requestUnits = t(`units.${unitLookupKey(hasRequest ? report.meta.total.request.units : '')}`);\n        const usage = Math.trunc(hasUsage ? report.meta.total.usage.value : 0);\n        const usageUnits = t(`units.${unitLookupKey(hasUsage ? report.meta.total.usage.units : '')}`);\n        // Show negative values https://github.com/project-koku/koku-ui/issues/1214\n        const unusedRequestCapacity = capacity - request;\n        const unusedUsageCapacity = capacity - usage;\n        let unusedRequestCapacityPercentage = request > 0 ? (request / capacity) * 100 : 0;\n        if (unusedRequestCapacityPercentage > 100) {\n            unusedRequestCapacityPercentage = 100 - unusedRequestCapacityPercentage;\n        }\n        let unusedUsageCapacityPercentage = capacity > usage ? (usage / capacity) * 100 : 0;\n        if (unusedUsageCapacityPercentage > 100) {\n            unusedUsageCapacityPercentage = 100 - unusedUsageCapacityPercentage;\n        }\n        return (React.createElement(Grid, { hasGutter: true },\n            React.createElement(GridItem, { md: 12, lg: 6 },\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_usage_unused_label`)),\n                React.createElement(\"div\", { style: styles.capacity }, formatValue(unusedUsageCapacity)),\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_usage_unused_units`, {\n                    percentage: formatValue(unusedUsageCapacityPercentage, usageUnits),\n                    units: usageUnits,\n                }))),\n            React.createElement(GridItem, { md: 12, lg: 6 },\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_requests_unused_label`)),\n                React.createElement(\"div\", { style: styles.capacity }, formatValue(unusedRequestCapacity)),\n                React.createElement(\"div\", null, t(`details.usage.${reportType}_requests_unused_units`, {\n                    percentage: formatValue(unusedRequestCapacityPercentage, requestUnits),\n                    units: requestUnits,\n                })))));\n    }\n    render() {\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef }, this.getCpuChart()));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportPathsType, reportType }) => {\n    const query = parseQuery(location.search);\n    const groupBy = getGroupById(query);\n    const groupByValue = getGroupByValue(query);\n    const newQuery = {\n        filter: {\n            time_scope_units: 'month',\n            time_scope_value: -1,\n            resolution: 'monthly',\n        },\n        filter_by: Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (groupBy && { [groupBy]: undefined })),\n        group_by: Object.assign({}, (groupBy && { [groupBy]: groupByValue })),\n    };\n    const queryString = getQuery(newQuery);\n    const report = reportSelectors.selectReport(state, reportPathsType, reportType, queryString);\n    const reportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, queryString);\n    return {\n        groupBy,\n        report,\n        reportFetchStatus,\n        queryString,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst UsageChart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(UsageChartBase));\nexport { UsageChart };\n","import { Button, ButtonVariant, Card, CardBody, CardTitle, Grid, GridItem, Popover, Title, } from '@patternfly/react-core';\nimport { OutlinedQuestionCircleIcon } from '@patternfly/react-icons';\nimport { orgUnitIdKey, tagPrefix } from 'api/queries/query';\nimport { Cluster } from 'pages/views/details/components/cluster/cluster';\nimport { CostChart } from 'pages/views/details/components/costChart/costChart';\nimport { SummaryCard } from 'pages/views/details/components/summary/summaryCard';\nimport { UsageChart } from 'pages/views/details/components/usageChart/usageChart';\nimport { styles } from 'pages/views/details/ocpDetails/detailsHeader.styles';\nimport React from 'react';\nconst PLACEHOLDER = 'placeholder';\nclass CostOverviewBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        // Returns cluster chart\n        this.getClusterChart = (widget) => {\n            const { groupBy, report, t } = this.props;\n            let showWidget = false;\n            for (const groupById of widget.cluster.showWidgetOnGroupBy) {\n                if (groupById === groupBy || (groupById === tagPrefix && groupBy.indexOf(tagPrefix) !== -1)) {\n                    showWidget = true;\n                    break;\n                }\n            }\n            if (showWidget) {\n                return (React.createElement(Card, null,\n                    React.createElement(CardTitle, null,\n                        React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t('breakdown.cluster_title'))),\n                    React.createElement(CardBody, null,\n                        React.createElement(Cluster, { groupBy: widget.cluster.reportGroupBy, report: report }))));\n            }\n            return null;\n        };\n        // Returns cost breakdown chart\n        this.getCostChart = () => {\n            const { report, t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" },\n                        t('breakdown.cost_breakdown_title'),\n                        React.createElement(Popover, { \"aria-label\": t('breakdown.cost_breakdown_aria_label'), enableFlip: true, bodyContent: React.createElement(React.Fragment, null,\n                                React.createElement(\"p\", { style: styles.infoTitle }, t('breakdown.raw_cost_title')),\n                                React.createElement(\"p\", null, t('breakdown.raw_cost_desc')),\n                                React.createElement(\"br\", null),\n                                React.createElement(\"p\", { style: styles.infoTitle }, t('breakdown.usage_cost_title')),\n                                React.createElement(\"p\", null, t('breakdown.usage_cost_desc')),\n                                React.createElement(\"br\", null),\n                                React.createElement(\"p\", { style: styles.infoTitle }, t('breakdown.markup_title')),\n                                React.createElement(\"p\", null, t('breakdown.markup_desc')),\n                                React.createElement(\"br\", null),\n                                React.createElement(\"a\", { href: t('docs.cost_model_terminology'), rel: \"noreferrer\", target: \"_blank\" }, t('learn_more'))) },\n                            React.createElement(Button, { variant: ButtonVariant.plain },\n                                React.createElement(OutlinedQuestionCircleIcon, { style: styles.info }))))),\n                React.createElement(CardBody, null,\n                    React.createElement(CostChart, { report: report }))));\n        };\n        // Returns CPU usage chart\n        this.getCpuUsageChart = (widget) => {\n            const { t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.cpu_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(UsageChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns memory usage chart\n        this.getMemoryUsageChart = (widget) => {\n            const { t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.memory_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(UsageChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns summary card widget\n        this.getSummaryCard = (widget) => {\n            const { groupBy, query } = this.props;\n            let showWidget = false;\n            for (const groupById of widget.reportSummary.showWidgetOnGroupBy) {\n                if (groupById === groupBy ||\n                    (query && query.group_by && query.group_by[orgUnitIdKey]) ||\n                    (groupById === tagPrefix && groupBy && groupBy.indexOf(tagPrefix) !== -1)) {\n                    showWidget = true;\n                    break;\n                }\n            }\n            if (showWidget) {\n                return (React.createElement(SummaryCard, { reportGroupBy: widget.reportSummary.reportGroupBy, reportPathsType: widget.reportPathsType, reportType: widget.reportType }));\n            }\n            else if (widget.reportSummary.usePlaceholder) {\n                return PLACEHOLDER;\n            }\n            return null;\n        };\n        // Helper to fill grid columns instead of rows, based on the order defined by the reducer\n        this.getWidgetsColumns = () => {\n            const { selectWidgets, widgets } = this.props;\n            const visibleWidgets = [];\n            widgets.map(widgetId => {\n                const widget = selectWidgets[widgetId];\n                const renderedWidget = this.renderWidget(widget);\n                if (renderedWidget !== null) {\n                    visibleWidgets.push(renderedWidget);\n                }\n            });\n            const rows = Math.floor(visibleWidgets.length / 2) + (visibleWidgets.length % 2);\n            const leftColumnWidgets = [];\n            const rightColumnWidgets = [];\n            for (let i = 0; i < rows; i++) {\n                if (visibleWidgets[i] !== PLACEHOLDER) {\n                    leftColumnWidgets.push(visibleWidgets[i]);\n                }\n                if (i + rows < visibleWidgets.length) {\n                    if (visibleWidgets[i + rows] !== PLACEHOLDER) {\n                        rightColumnWidgets.push(visibleWidgets[i + rows]);\n                    }\n                }\n            }\n            return { leftColumnWidgets, rightColumnWidgets };\n        };\n    }\n    // Returns rendered widget based on type\n    renderWidget(widget) {\n        switch (widget.type) {\n            case \"cluster\" /* cluster */:\n                return this.getClusterChart(widget);\n            case \"cost\" /* cost */:\n                return this.getCostChart();\n            case \"cpuUsage\" /* cpuUsage */:\n                return this.getCpuUsageChart(widget);\n            case \"memoryUsage\" /* memoryUsage */:\n                return this.getMemoryUsageChart(widget);\n            case \"summary\" /* reportSummary */:\n                return this.getSummaryCard(widget);\n            default:\n                return null;\n        }\n    }\n    render() {\n        // Sort widgets vertically\n        const { leftColumnWidgets, rightColumnWidgets } = this.getWidgetsColumns();\n        return (React.createElement(Grid, { hasGutter: true },\n            React.createElement(GridItem, { lg: 12, xl: 6 },\n                React.createElement(Grid, { hasGutter: true }, leftColumnWidgets.map((widget, index) => {\n                    return React.createElement(GridItem, { key: `widget-${index}` }, widget);\n                }))),\n            React.createElement(GridItem, { lg: 12, xl: 6 },\n                React.createElement(Grid, { hasGutter: true }, rightColumnWidgets.map((widget, index) => {\n                    return React.createElement(GridItem, { key: `widget-${index}` }, widget);\n                })))));\n    }\n}\nexport { CostOverviewBase };\n","import { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { global_spacer_lg } from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport { global_spacer_sm } from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    currentCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    currentCostData: {\n        fill: 'none',\n    },\n    itemsPerRow: 0,\n    previousCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousInfrastructureCostData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    previousCostData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString } from 'components/charts/common/chartDatumUtils';\nimport { getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { noop } from 'utils/noop';\nimport { chartStyles, styles } from './historicalCostChart.styles';\nclass HistoricalCostChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentCostData, currentInfrastructureCostData, previousCostData, previousInfrastructureCostData, } = this.props;\n            const costKey = 'chart.cost_legend_label';\n            const costInfrastructureKey = 'chart.cost_infrastructure_legend_label';\n            const costInfrastructureTooltipKey = 'chart.cost_infrastructure_legend_tooltip';\n            const costTooltipKey = 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousCostData, costKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousCostData, costTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousCostData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentCostData, costKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentCostData, costTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentCostData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'previousInfrastructureCost',\n                    data: previousInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(previousInfrastructureCostData, costInfrastructureKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(previousInfrastructureCostData, costInfrastructureTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousInfrastructureCostData), { stroke: chartStyles.previousColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'currentInfrastructureCost',\n                    data: currentInfrastructureCostData,\n                    legendItem: {\n                        name: getCostRangeString(currentInfrastructureCostData, costInfrastructureKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getCostRangeString(currentInfrastructureCostData, costInfrastructureTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentInfrastructureCostData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 120,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 700 ? chartStyles.itemsPerRow : 2;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\" }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentCostData !== this.props.currentCostData ||\n            prevProps.currentInfrastructureCostData !== this.props.currentInfrastructureCostData ||\n            prevProps.previousCostData !== this.props.previousCostData ||\n            prevProps.previousInfrastructureCostData !== this.props.previousInfrastructureCostData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentInfrastructureCostData, previousInfrastructureCostData } = this.props;\n        const currentRequestDate = currentInfrastructureCostData\n            ? getDate(getDateRange(currentInfrastructureCostData, true, true)[1])\n            : 0;\n        const previousRequestDate = previousInfrastructureCostData\n            ? getDate(getDateRange(previousInfrastructureCostData, true, true)[1])\n            : 0;\n        return currentRequestDate > 0 || previousRequestDate > 0 ? Math.max(currentRequestDate, previousRequestDate) : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 120,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 700\n                ? containerHeight - 25\n                : containerHeight\n            : containerHeight;\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: adjustedContainerHeight }) },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis }))))));\n    }\n}\nexport { HistoricalCostChart };\n","import global_spacer_3xl from '@patternfly/react-tokens/dist/js/global_spacer_3xl';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    chartHeight: 300,\n    chartContainerHeight: 300,\n};\nexport const styles = {\n    chartContainer: {\n        marginLeft: global_spacer_lg.value,\n    },\n    chartSkeleton: {\n        height: '125px',\n        marginBottom: global_spacer_md.value,\n        marginTop: global_spacer_3xl.value,\n    },\n    costChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    legendSkeleton: {\n        marginTop: global_spacer_md.value,\n    },\n    trendChart: {\n        marginBottom: global_spacer_sm.value,\n        marginTop: global_spacer_sm.value,\n    },\n    usageChart: {\n        marginTop: global_spacer_sm.value,\n    },\n};\n","import { Skeleton } from '@patternfly/react-core';\nimport { getQuery, parseQuery } from 'api/queries/query';\nimport { transformReport } from 'components/charts/common/chartDatumUtils';\nimport { HistoricalCostChart } from 'components/charts/historicalCostChart';\nimport { getGroupById, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataCostChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, width: skeletonWidth.xs })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, reportType, t, } = this.props;\n        // Current data\n        const currentData = transformReport(currentReport, 0 /* rolling */, 'date', 'cost');\n        const currentInfrastructureCostData = transformReport(currentReport, 0 /* rolling */, 'date', 'infrastructure');\n        // Previous data\n        const previousData = transformReport(previousReport, 0 /* rolling */, 'date', 'cost');\n        const previousInfrastructureCostData = transformReport(previousReport, 0 /* rolling */, 'date', 'infrastructure');\n        const costUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.cost\n            ? currentReport.meta.total.cost.total.units\n            : 'USD';\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.costChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalCostChart, { adjustContainerHeight: true, containerHeight: chartStyles.chartContainerHeight - 25, currentCostData: currentData, currentInfrastructureCostData: currentInfrastructureCostData, formatDatumValue: formatValue, formatDatumOptions: {}, height: chartStyles.chartHeight, previousCostData: previousData, previousInfrastructureCostData: previousInfrastructureCostData, xAxisLabel: t(`breakdown.historical_chart.day_of_month_label`), yAxisLabel: t(`breakdown.historical_chart.${reportType}_label`, {\n                    units: t(`units.${unitLookupKey(costUnits)}`),\n                }) })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportPathsType, reportType }) => {\n    const query = parseQuery(location.search);\n    const groupBy = getGroupById(query);\n    const groupByValue = getGroupByValue(query);\n    const baseQuery = {\n        filter_by: Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (groupBy && { [groupBy]: undefined })),\n        group_by: Object.assign({}, (groupBy && { [groupBy]: groupByValue })),\n    };\n    const currentQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        } });\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -2,\n        } });\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataCostChart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataCostChartBase));\nexport { HistoricalDataCostChart };\n","import { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { global_spacer_lg } from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport { global_spacer_sm } from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentMonthData: {\n        fill: 'none',\n    },\n    itemsPerRow: 0,\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousMonthData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getCostRangeString, getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { noop } from 'utils/noop';\nimport { chartStyles, styles } from './historicalTrendChart.styles';\nclass HistoricalTrendChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentData, previousData, showUsageLegendLabel = false } = this.props;\n            const key = showUsageLegendLabel ? 'chart.usage_legend_label' : 'chart.cost_legend_label';\n            const toolTipKey = showUsageLegendLabel ? 'chart.usage_legend_tooltip' : 'chart.cost_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousCost',\n                    data: previousData,\n                    legendItem: {\n                        name: getCostRangeString(previousData, key, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(previousData, toolTipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousMonthData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentCost',\n                    data: currentData,\n                    legendItem: {\n                        name: getCostRangeString(currentData, key, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'minus',\n                        },\n                        tooltip: getCostRangeString(currentData, toolTipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentMonthData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 120,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series } = this.state;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: legendItemsPerRow, name: \"legend\" }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentData !== this.props.currentData || prevProps.previousData !== this.props.previousData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentData, previousData } = this.props;\n        const previousDate = previousData ? getDate(getDateRange(previousData, true, true)[1]) : 0;\n        const currentDate = currentData ? getDate(getDateRange(currentData, true, true)[1]) : 0;\n        return currentDate > 0 || previousDate > 0 ? Math.max(currentDate, previousDate) : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { height, containerHeight = height, padding = {\n            bottom: 120,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: containerHeight }) },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis }))))));\n    }\n}\nexport { HistoricalTrendChart };\n","import { Skeleton } from '@patternfly/react-core';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { transformReport } from 'components/charts/common/chartDatumUtils';\nimport { HistoricalTrendChart } from 'components/charts/historicalTrendChart';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataTrendChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, width: skeletonWidth.xs })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, reportType, t, } = this.props;\n        const isCostChart = reportType === \"cost\" /* cost */;\n        // Current data\n        const currentData = transformReport(currentReport, isCostChart ? 0 /* rolling */ : 1 /* daily */, 'date', isCostChart ? 'cost' : 'usage');\n        const previousData = transformReport(previousReport, isCostChart ? 0 /* rolling */ : 1 /* daily */, 'date', isCostChart ? 'cost' : 'usage');\n        const costUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.cost\n            ? currentReport.meta.total.cost.total.units\n            : 'USD';\n        let usageUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.usage\n            ? currentReport.meta.total.usage.units\n            : undefined;\n        let yAxisLabel;\n        if (isCostChart) {\n            yAxisLabel = t(`breakdown.historical_chart.${reportType}_label`, {\n                units: t(`units.${unitLookupKey(costUnits)}`),\n            });\n        }\n        else if (usageUnits && Number.isNaN(Number(currentReport.meta.total.usage.units))) {\n            yAxisLabel = t(`breakdown.historical_chart.units_label`, {\n                units: t(`units.${unitLookupKey(usageUnits)}`),\n            });\n        }\n        else {\n            usageUnits = t(`breakdown.historical_chart.${reportType}_label`);\n            yAxisLabel = t(`breakdown.historical_chart.units_label`, {\n                units: t(`units.${unitLookupKey(usageUnits)}`),\n            });\n        }\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.trendChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalTrendChart, { containerHeight: chartStyles.chartContainerHeight - 50, currentData: currentData, formatDatumValue: formatValue, formatDatumOptions: {}, height: chartStyles.chartHeight, previousData: previousData, units: isCostChart ? costUnits : usageUnits, xAxisLabel: t(`breakdown.historical_chart.day_of_month_label`), yAxisLabel: yAxisLabel })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportPathsType, reportType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = groupByOrgValue ? orgUnitIdKey : getGroupById(query);\n    const groupByValue = groupByOrgValue ? groupByOrgValue : getGroupByValue(query);\n    const baseQuery = {\n        filter_by: Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: undefined })),\n        group_by: Object.assign({}, (groupBy && { [groupBy]: groupByValue })),\n    };\n    const currentQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        } });\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -2,\n        } });\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataTrendChart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataTrendChartBase));\nexport { HistoricalDataTrendChart };\n","import { chart_color_blue_100 } from '@patternfly/react-tokens/dist/js/chart_color_blue_100';\nimport { chart_color_blue_200 } from '@patternfly/react-tokens/dist/js/chart_color_blue_200';\nimport { chart_color_blue_300 } from '@patternfly/react-tokens/dist/js/chart_color_blue_300';\nimport { chart_color_blue_400 } from '@patternfly/react-tokens/dist/js/chart_color_blue_400';\nimport { chart_color_blue_500 } from '@patternfly/react-tokens/dist/js/chart_color_blue_500';\nimport { chart_color_green_100 } from '@patternfly/react-tokens/dist/js/chart_color_green_100';\nimport { chart_color_green_200 } from '@patternfly/react-tokens/dist/js/chart_color_green_200';\nimport { chart_color_green_300 } from '@patternfly/react-tokens/dist/js/chart_color_green_300';\nimport { chart_color_green_400 } from '@patternfly/react-tokens/dist/js/chart_color_green_400';\nimport { chart_color_green_500 } from '@patternfly/react-tokens/dist/js/chart_color_green_500';\nimport { global_spacer_lg } from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport { global_spacer_sm } from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const chartStyles = {\n    currentCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    currentColorScale: [\n        chart_color_green_400.value,\n        chart_color_green_300.value,\n        chart_color_green_200.value,\n        chart_color_green_100.value,\n        chart_color_green_500.value,\n    ],\n    currentLimitData: {\n        fill: 'none',\n    },\n    currentRequestData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    currentUsageData: {\n        fill: 'none',\n    },\n    itemsPerRow: 0,\n    previousCapacityData: {\n        fill: 'none',\n    },\n    // See: https://github.com/project-koku/koku-ui/issues/241\n    previousColorScale: [\n        chart_color_blue_100.value,\n        chart_color_blue_200.value,\n        chart_color_blue_300.value,\n        chart_color_blue_400.value,\n        chart_color_blue_500.value,\n    ],\n    previousLimitData: {\n        fill: 'none',\n    },\n    previousRequestData: {\n        fill: 'none',\n        strokeDasharray: '3,3',\n    },\n    previousUsageData: {\n        fill: 'none',\n    },\n    yAxis: {\n        axisLabel: {\n            padding: 15,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n        tickLabels: {\n            fontSize: 0,\n        },\n    },\n    xAxis: {\n        axisLabel: {\n            padding: 40,\n        },\n        grid: {\n            stroke: 'none',\n        },\n        ticks: {\n            stroke: 'none',\n        },\n    },\n};\nexport const styles = {\n    chart: {\n        marginTop: global_spacer_sm.value,\n    },\n    title: {\n        marginLeft: '-' + global_spacer_lg.value,\n    },\n};\n","import 'components/charts/common/charts-common.scss';\nimport { Chart, ChartArea, ChartAxis, ChartLegend, ChartLegendTooltip, createContainer, getInteractiveLegendEvents, } from '@patternfly/react-charts';\nimport { Title } from '@patternfly/react-core';\nimport { default as ChartTheme } from 'components/charts/chartTheme';\nimport { getDateRange } from 'components/charts/common/chartDatumUtils';\nimport { getUsageRangeString } from 'components/charts/common/chartDatumUtils';\nimport { getChartNames, getDomain, getLegendData, getResizeObserver, getTooltipLabel, initHiddenSeries, isDataAvailable, isSeriesHidden, } from 'components/charts/common/chartUtils';\nimport { getDate } from 'date-fns';\nimport i18next from 'i18next';\nimport React from 'react';\nimport { noop } from 'utils/noop';\nimport { chartStyles, styles } from './historicalUsageChart.styles';\nclass HistoricalUsageChart extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.containerRef = React.createRef();\n        this.observer = noop;\n        this.state = {\n            hiddenSeries: new Set(),\n            width: 0,\n        };\n        this.initDatum = () => {\n            const { currentLimitData, currentRequestData, currentUsageData, previousLimitData, previousRequestData, previousUsageData, } = this.props;\n            const limitKey = 'chart.limit_legend_label';\n            const limitTooltipKey = 'chart.limit_legend_tooltip';\n            const requestKey = 'chart.requests_legend_label';\n            const requestTooltipKey = 'chart.requests_legend_tooltip';\n            const usageKey = 'chart.usage_legend_label';\n            const usageTooltipKey = 'chart.usage_legend_tooltip';\n            // Show all legends, regardless of length -- https://github.com/project-koku/koku-ui/issues/248\n            const series = [\n                {\n                    childName: 'previousUsage',\n                    data: previousUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(previousUsageData, usageKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(previousUsageData, usageTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousUsageData), { stroke: chartStyles.previousColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'currentUsage',\n                    data: currentUsageData,\n                    legendItem: {\n                        name: getUsageRangeString(currentUsageData, usageKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[0],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(currentUsageData, usageTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentUsageData), { stroke: chartStyles.currentColorScale[0] }),\n                    },\n                },\n                {\n                    childName: 'previousRequest',\n                    data: previousRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(previousRequestData, requestKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(previousRequestData, requestTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousRequestData), { stroke: chartStyles.previousColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'currentRequest',\n                    data: currentRequestData,\n                    legendItem: {\n                        name: getUsageRangeString(currentRequestData, requestKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[1],\n                            type: 'dash',\n                        },\n                        tooltip: getUsageRangeString(currentRequestData, requestTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentRequestData), { stroke: chartStyles.currentColorScale[1] }),\n                    },\n                },\n                {\n                    childName: 'previousLimit',\n                    data: previousLimitData,\n                    legendItem: {\n                        name: getUsageRangeString(previousLimitData, limitKey, true, true, 1),\n                        symbol: {\n                            fill: chartStyles.previousColorScale[2],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(previousLimitData, limitTooltipKey, false, false, 1),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.previousLimitData), { stroke: chartStyles.previousColorScale[2] }),\n                    },\n                },\n                {\n                    childName: 'currentLimit',\n                    data: currentLimitData,\n                    legendItem: {\n                        name: getUsageRangeString(currentLimitData, limitKey, true, false),\n                        symbol: {\n                            fill: chartStyles.currentColorScale[2],\n                            type: 'minus',\n                        },\n                        tooltip: getUsageRangeString(currentLimitData, limitTooltipKey, false, false),\n                    },\n                    style: {\n                        data: Object.assign(Object.assign({}, chartStyles.currentLimitData), { stroke: chartStyles.currentColorScale[2] }),\n                    },\n                },\n            ];\n            const cursorVoronoiContainer = this.getCursorVoronoiContainer();\n            this.setState({ cursorVoronoiContainer, series });\n        };\n        this.getChart = (series, index) => {\n            const { hiddenSeries } = this.state;\n            return (React.createElement(ChartArea, { data: !hiddenSeries.has(index) ? series.data : [{ y: null }], interpolation: \"monotoneX\", key: series.childName, name: series.childName, style: series.style }));\n        };\n        // Returns CursorVoronoiContainer component\n        this.getCursorVoronoiContainer = () => {\n            const { formatDatumValue, formatDatumOptions } = this.props;\n            // Note: Container order is important\n            const CursorVoronoiContainer = createContainer('voronoi', 'cursor');\n            return (React.createElement(CursorVoronoiContainer, { cursorDimension: \"x\", labels: ({ datum }) => getTooltipLabel(datum, formatDatumValue, formatDatumOptions), mouseFollowTooltips: true, voronoiDimension: \"x\", voronoiPadding: {\n                    bottom: 130,\n                    left: 8,\n                    right: 8,\n                    top: 8,\n                } }));\n        };\n        this.getLegend = () => {\n            const { legendItemsPerRow } = this.props;\n            const { hiddenSeries, series, width } = this.state;\n            const itemsPerRow = legendItemsPerRow ? legendItemsPerRow : width > 900 ? chartStyles.itemsPerRow : 2;\n            return (React.createElement(ChartLegend, { data: getLegendData(series, hiddenSeries), height: 25, gutter: 20, itemsPerRow: itemsPerRow, name: \"legend\" }));\n        };\n        // Hide each data series individually\n        this.handleLegendClick = (index) => {\n            const hiddenSeries = initHiddenSeries(this.state.series, this.state.hiddenSeries, index);\n            this.setState({ hiddenSeries });\n        };\n        this.handleResize = () => {\n            const { width } = this.state;\n            const { clientWidth = 0 } = this.containerRef.current || {};\n            if (clientWidth !== width) {\n                this.setState({ width: clientWidth });\n            }\n        };\n    }\n    componentDidMount() {\n        this.initDatum();\n        this.observer = getResizeObserver(this.containerRef.current, this.handleResize);\n    }\n    componentDidUpdate(prevProps) {\n        if (prevProps.currentLimitData !== this.props.currentLimitData ||\n            prevProps.currentRequestData !== this.props.currentRequestData ||\n            prevProps.currentUsageData !== this.props.currentUsageData ||\n            prevProps.previousLimitData !== this.props.previousLimitData ||\n            prevProps.previousRequestData !== this.props.previousRequestData ||\n            prevProps.previousUsageData !== this.props.previousUsageData) {\n            this.initDatum();\n        }\n    }\n    componentWillUnmount() {\n        if (this.observer) {\n            this.observer();\n        }\n    }\n    getEndDate() {\n        const { currentRequestData, currentUsageData, previousRequestData, previousUsageData } = this.props;\n        const currentRequestDate = currentRequestData ? getDate(getDateRange(currentRequestData, true, true)[1]) : 0;\n        const currentUsageDate = currentUsageData ? getDate(getDateRange(currentUsageData, true, true)[1]) : 0;\n        const previousRequestDate = previousRequestData ? getDate(getDateRange(previousRequestData, true, true)[1]) : 0;\n        const previousUsageDate = previousUsageData ? getDate(getDateRange(previousUsageData, true, true)[1]) : 0;\n        return currentRequestDate > 0 || currentUsageDate > 0 || previousRequestDate > 0 || previousUsageDate > 0\n            ? Math.max(currentRequestDate, currentUsageDate, previousRequestDate, previousUsageDate)\n            : 31;\n    }\n    // Returns onMouseOver, onMouseOut, and onClick events for the interactive legend\n    getEvents() {\n        const { hiddenSeries, series } = this.state;\n        const result = getInteractiveLegendEvents({\n            chartNames: getChartNames(series),\n            isHidden: index => isSeriesHidden(hiddenSeries, index),\n            legendName: 'legend',\n            onLegendClick: props => this.handleLegendClick(props.index),\n        });\n        return result;\n    }\n    render() {\n        const { adjustContainerHeight, height, containerHeight = height, padding = {\n            bottom: 130,\n            left: 8,\n            right: 8,\n            top: 8,\n        }, title, xAxisLabel, yAxisLabel, } = this.props;\n        const { cursorVoronoiContainer, hiddenSeries, series, width } = this.state;\n        const domain = getDomain(series, hiddenSeries);\n        const endDate = this.getEndDate();\n        const midDate = Math.floor(endDate / 2);\n        const adjustedContainerHeight = adjustContainerHeight\n            ? width > 900\n                ? containerHeight - 50\n                : containerHeight\n            : containerHeight;\n        // Clone original container. See https://issues.redhat.com/browse/COST-762\n        const container = cursorVoronoiContainer\n            ? React.cloneElement(cursorVoronoiContainer, {\n                disable: !isDataAvailable(series, hiddenSeries),\n                labelComponent: (React.createElement(ChartLegendTooltip, { legendData: getLegendData(series, hiddenSeries, true), title: datum => i18next.t('chart.day_of_month_title', { day: datum.x }) })),\n            })\n            : undefined;\n        return (React.createElement(\"div\", { className: \"chartOverride\", ref: this.containerRef },\n            React.createElement(Title, { headingLevel: \"h2\", style: styles.title, size: \"xl\" }, title),\n            React.createElement(\"div\", { style: Object.assign(Object.assign({}, styles.chart), { height: adjustedContainerHeight }) },\n                React.createElement(\"div\", { style: { height, width } },\n                    React.createElement(Chart, { containerComponent: container, domain: domain, events: this.getEvents(), height: height, legendComponent: this.getLegend(), legendData: getLegendData(series, hiddenSeries), legendPosition: \"bottom\", padding: padding, theme: ChartTheme, width: width },\n                        series &&\n                            series.map((s, index) => {\n                                return this.getChart(s, index);\n                            }),\n                        React.createElement(ChartAxis, { label: xAxisLabel, style: chartStyles.xAxis, tickValues: [1, midDate, endDate] }),\n                        React.createElement(ChartAxis, { dependentAxis: true, label: yAxisLabel, style: chartStyles.yAxis }))))));\n    }\n}\nexport { HistoricalUsageChart };\n","import { Skeleton } from '@patternfly/react-core';\nimport { getQuery, logicalAndPrefix, orgUnitIdKey, parseQuery } from 'api/queries/query';\nimport { transformReport } from 'components/charts/common/chartDatumUtils';\nimport { HistoricalUsageChart } from 'components/charts/historicalUsageChart';\nimport { getGroupById, getGroupByOrgValue, getGroupByValue } from 'pages/views/utils/groupBy';\nimport React from 'react';\nimport { withTranslation } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { reportActions, reportSelectors } from 'store/reports';\nimport { formatValue, unitLookupKey } from 'utils/formatValue';\nimport { skeletonWidth } from 'utils/skeleton';\nimport { chartStyles, styles } from './historicalChart.styles';\nclass HistoricalDataUsageChartBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.getSkeleton = () => {\n            return (React.createElement(React.Fragment, null,\n                React.createElement(Skeleton, { style: styles.chartSkeleton, width: skeletonWidth.md }),\n                React.createElement(Skeleton, { style: styles.legendSkeleton, width: skeletonWidth.xs })));\n        };\n    }\n    componentDidMount() {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        fetchReport(reportPathsType, reportType, currentQueryString);\n        fetchReport(reportPathsType, reportType, previousQueryString);\n    }\n    componentDidUpdate(prevProps) {\n        const { fetchReport, currentQueryString, previousQueryString, reportPathsType, reportType } = this.props;\n        if (prevProps.currentQueryString !== currentQueryString) {\n            fetchReport(reportPathsType, reportType, currentQueryString);\n        }\n        if (prevProps.previousQueryString !== previousQueryString) {\n            fetchReport(reportPathsType, reportType, previousQueryString);\n        }\n    }\n    render() {\n        const { currentReport, currentReportFetchStatus, previousReport, previousReportFetchStatus, t } = this.props;\n        // Current data\n        const currentLimitData = transformReport(currentReport, 1 /* daily */, 'date', 'limit');\n        const currentRequestData = transformReport(currentReport, 1 /* daily */, 'date', 'request');\n        const currentUsageData = transformReport(currentReport, 1 /* daily */, 'date', 'usage');\n        // Previous data\n        const previousLimitData = transformReport(previousReport, 1 /* daily */, 'date', 'limit');\n        const previousRequestData = transformReport(previousReport, 1 /* daily */, 'date', 'request');\n        const previousUsageData = transformReport(previousReport, 1 /* daily */, 'date', 'usage');\n        const usageUnits = currentReport && currentReport.meta && currentReport.meta.total && currentReport.meta.total.usage\n            ? currentReport.meta.total.usage.units\n            : '';\n        return (React.createElement(\"div\", { style: styles.chartContainer },\n            React.createElement(\"div\", { style: styles.usageChart }, currentReportFetchStatus === 1 /* inProgress */ &&\n                previousReportFetchStatus === 1 /* inProgress */ ? (this.getSkeleton()) : (React.createElement(HistoricalUsageChart, { adjustContainerHeight: true, containerHeight: chartStyles.chartContainerHeight, currentLimitData: currentLimitData, currentRequestData: currentRequestData, currentUsageData: currentUsageData, formatDatumValue: formatValue, formatDatumOptions: {}, height: chartStyles.chartHeight, previousLimitData: previousLimitData, previousRequestData: previousRequestData, previousUsageData: previousUsageData, xAxisLabel: t(`breakdown.historical_chart.day_of_month_label`), yAxisLabel: t(`breakdown.historical_chart.units_label`, {\n                    units: t(`units.${unitLookupKey(usageUnits)}`),\n                }) })))));\n    }\n}\nconst mapStateToProps = createMapStateToProps((state, { reportPathsType, reportType }) => {\n    const query = parseQuery(location.search);\n    const groupByOrgValue = getGroupByOrgValue(query);\n    const groupBy = getGroupById(query);\n    const groupByValue = getGroupByValue(query);\n    // instance-types and storage APIs must filter org units\n    const useFilter = reportType === \"instance_type\" /* instanceType */ || reportType === \"storage\" /* storage */;\n    const baseQuery = {\n        filter_by: Object.assign(Object.assign(Object.assign(Object.assign({}, (query && query.filter_by && query.filter_by)), (query && query.filter && query.filter.account && { [`${logicalAndPrefix}account`]: query.filter.account })), (groupBy && { [groupBy]: undefined })), (groupByOrgValue && useFilter && { [orgUnitIdKey]: groupByOrgValue })),\n        group_by: Object.assign(Object.assign({}, (groupByOrgValue && !useFilter && { [orgUnitIdKey]: groupByOrgValue })), (groupBy && !groupByOrgValue && { [groupBy]: groupByValue })),\n    };\n    const currentQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -1,\n        } });\n    const currentQueryString = getQuery(currentQuery);\n    const previousQuery = Object.assign(Object.assign({}, baseQuery), { filter: {\n            resolution: 'daily',\n            time_scope_units: 'month',\n            time_scope_value: -2,\n        } });\n    const previousQueryString = getQuery(previousQuery);\n    // Current report\n    const currentReport = reportSelectors.selectReport(state, reportPathsType, reportType, currentQueryString);\n    const currentReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, currentQueryString);\n    // Previous report\n    const previousReport = reportSelectors.selectReport(state, reportPathsType, reportType, previousQueryString);\n    const previousReportFetchStatus = reportSelectors.selectReportFetchStatus(state, reportPathsType, reportType, previousQueryString);\n    return {\n        currentQuery,\n        currentQueryString,\n        currentReport,\n        currentReportFetchStatus,\n        previousQuery,\n        previousQueryString,\n        previousReport,\n        previousReportFetchStatus,\n    };\n});\nconst mapDispatchToProps = {\n    fetchReport: reportActions.fetchReport,\n};\nconst HistoricalDataUsageChart = withTranslation()(connect(mapStateToProps, mapDispatchToProps)(HistoricalDataUsageChartBase));\nexport { HistoricalDataUsageChart };\n","import { Card, CardBody, CardTitle, Grid, GridItem, Title } from '@patternfly/react-core';\nimport React from 'react';\nimport { HistoricalDataCostChart } from './historicalDataCostChart';\nimport { HistoricalDataTrendChart } from './historicalDataTrendChart';\nimport { HistoricalDataUsageChart } from './historicalDataUsageChart';\nclass HistoricalDataBase extends React.Component {\n    constructor() {\n        super(...arguments);\n        // Returns cost chart\n        this.getCostChart = (widget) => {\n            const { t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.historical_chart.${widget.reportType}_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataCostChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns trend chart\n        this.getTrendChart = (widget) => {\n            const { t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.historical_chart.${widget.reportType}_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataTrendChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n        // Returns usage chart\n        this.getUsageChart = (widget) => {\n            const { t } = this.props;\n            return (React.createElement(Card, null,\n                React.createElement(CardTitle, null,\n                    React.createElement(Title, { headingLevel: \"h2\", size: \"lg\" }, t(`breakdown.historical_chart.${widget.reportType}_title`))),\n                React.createElement(CardBody, null,\n                    React.createElement(HistoricalDataUsageChart, { reportPathsType: widget.reportPathsType, reportType: widget.reportType }))));\n        };\n    }\n    // Returns rendered widget based on type\n    renderWidget(widget) {\n        switch (widget.type) {\n            case \"cost\" /* cost */:\n                return this.getCostChart(widget);\n            case \"trend\" /* trend */:\n                return this.getTrendChart(widget);\n            case \"usage\" /* usage */:\n                return this.getUsageChart(widget);\n            default:\n                return null;\n        }\n    }\n    render() {\n        const { selectWidgets, widgets } = this.props;\n        return (React.createElement(Grid, { hasGutter: true }, widgets.map(widgetId => {\n            const widget = selectWidgets[widgetId];\n            return React.createElement(GridItem, { key: `widget-${widgetId}` }, this.renderWidget(widget));\n        })));\n    }\n}\nexport { HistoricalDataBase };\n","import global_BackgroundColor_light_100 from '@patternfly/react-tokens/dist/js/global_BackgroundColor_light_100';\nimport global_Color_100 from '@patternfly/react-tokens/dist/js/global_Color_100';\nimport global_Color_200 from '@patternfly/react-tokens/dist/js/global_Color_200';\nimport global_FontSize_md from '@patternfly/react-tokens/dist/js/global_FontSize_md';\nimport global_FontSize_sm from '@patternfly/react-tokens/dist/js/global_FontSize_sm';\nimport global_spacer_lg from '@patternfly/react-tokens/dist/js/global_spacer_lg';\nimport global_spacer_md from '@patternfly/react-tokens/dist/js/global_spacer_md';\nimport global_spacer_sm from '@patternfly/react-tokens/dist/js/global_spacer_sm';\nexport const styles = {\n    cost: {\n        display: 'flex',\n        alignItems: 'center',\n    },\n    costLabel: {},\n    costValue: {\n        marginTop: 0,\n        marginBottom: 0,\n        marginRight: global_spacer_md.var,\n    },\n    costLabelUnit: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_100.var,\n    },\n    costLabelDate: {\n        fontSize: global_FontSize_sm.value,\n        color: global_Color_200.var,\n    },\n    header: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: global_spacer_lg.var,\n        backgroundColor: global_BackgroundColor_light_100.var,\n    },\n    info: {\n        verticalAlign: 'middle',\n    },\n    infoIcon: {\n        fontSize: global_FontSize_md.value,\n    },\n    infoTitle: {\n        fontWeight: 'bold',\n    },\n    title: {\n        paddingBottom: global_spacer_sm.var,\n    },\n};\n","import { orgUnitIdKey, tagPrefix } from 'api/queries/query';\nexport const getGroupById = (query) => {\n    const groupBys = query && query.group_by ? Object.keys(query.group_by) : [];\n    return groupBys.find(key => key !== orgUnitIdKey);\n};\nexport const getGroupByValue = (query) => {\n    const groupById = getGroupById(query);\n    return groupById ? query.group_by[groupById] : undefined;\n};\nexport const getGroupByOrgValue = (query) => {\n    let groupByOrg;\n    for (const groupBy of Object.keys(query.group_by)) {\n        if (groupBy === orgUnitIdKey) {\n            groupByOrg = query.group_by[orgUnitIdKey];\n            break;\n        }\n    }\n    return groupByOrg;\n};\nexport const getGroupByTagKey = (query) => {\n    let groupByTagKey;\n    for (const groupBy of Object.keys(query.group_by)) {\n        const tagIndex = groupBy.indexOf(tagPrefix);\n        if (tagIndex !== -1) {\n            groupByTagKey = groupBy.substring(tagIndex + tagPrefix.length);\n            break;\n        }\n    }\n    return groupByTagKey;\n};\n","import { getQueryRoute } from 'api/queries/query';\nimport { breakdownDescKey, breakdownTitleKey, orgUnitIdKey } from 'api/queries/query';\nexport const getBreakdownPath = ({ basePath, label, description, groupBy, query, }) => {\n    const newQuery = Object.assign(Object.assign(Object.assign({}, query), (description && description !== label && { [breakdownDescKey]: description })), { group_by: {\n            [groupBy]: label,\n        } });\n    return `${basePath}?${getQueryRoute(newQuery)}`;\n};\nexport const getOrgBreakdownPath = ({ basePath, description, groupBy, groupByOrg, id, orgUnitId, query, title, type, }) => {\n    const newQuery = Object.assign(Object.assign(Object.assign(Object.assign(Object.assign({}, JSON.parse(JSON.stringify(query))), (description && description !== title && { [breakdownDescKey]: description })), (title && { [breakdownTitleKey]: title })), (groupByOrg && orgUnitId && { [orgUnitIdKey]: orgUnitId })), { group_by: {\n            [groupBy]: id,\n        } });\n    if (!newQuery.filter) {\n        newQuery.filter = {};\n    }\n    if (type === 'account') {\n        newQuery.filter.account = id;\n        newQuery.group_by = {\n            [orgUnitIdKey]: groupByOrg,\n        };\n    }\n    else if (type === 'organizational_unit') {\n        newQuery.group_by = {\n            [orgUnitIdKey]: id,\n        };\n    }\n    return `${basePath}?${getQueryRoute(newQuery)}`;\n};\n","export const addQueryFilter = (query, filterType, filterValue) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    // Filter by * won't generate a new request if group_by * already exists\n    if (filterValue === '*' && newQuery.group_by[filterType] === '*') {\n        return;\n    }\n    if (newQuery.filter_by[filterType]) {\n        let found = false;\n        const filters = newQuery.filter_by[filterType];\n        if (!Array.isArray(filters)) {\n            found = filterValue === newQuery.filter_by[filterType];\n        }\n        else {\n            for (const filter of filters) {\n                if (filter === filterValue) {\n                    found = true;\n                    break;\n                }\n            }\n        }\n        if (!found) {\n            newQuery.filter_by[filterType] = [newQuery.filter_by[filterType], filterValue];\n        }\n    }\n    else {\n        newQuery.filter_by[filterType] = [filterValue];\n    }\n    return newQuery;\n};\nexport const removeQueryFilter = (query, filterType, filterValue) => {\n    const newQuery = Object.assign({}, JSON.parse(JSON.stringify(query)));\n    if (filterType === null) {\n        newQuery.filter_by = undefined; // Clear all\n    }\n    else if (filterValue === null) {\n        newQuery.filter_by[filterType] = undefined; // Clear all values\n    }\n    else if (Array.isArray(newQuery.filter_by[filterType])) {\n        const index = newQuery.filter_by[filterType].indexOf(filterValue);\n        if (index > -1) {\n            newQuery.filter_by[filterType] = [\n                ...query.filter_by[filterType].slice(0, index),\n                ...query.filter_by[filterType].slice(index + 1),\n            ];\n        }\n    }\n    else {\n        newQuery.filter_by[filterType] = undefined;\n    }\n    return newQuery;\n};\n","export const testIdProp = 'data-testid';\nexport const getTestProps = (id) => ({ [testIdProp]: id });\nexport const testIds = {\n    details: {\n        cluster_lnk: 'cluster-lnk',\n        historical_data_btn: 'historical-data-btn',\n        show_more_btn: 'show-more-btn',\n        tag_lnk: 'tag-lnk',\n        view_all_btn: 'view-all-btn',\n    },\n    export: {\n        cancel_btn: 'cancel-btn',\n        submit_btn: 'submit-btn',\n    },\n    login: {\n        alert: 'alert',\n        form: 'login-form',\n        username_input: 'username-input',\n        password_input: 'password-input',\n        submit: 'submit',\n    },\n    masthead: {\n        masthead: 'masthead',\n        username: 'username',\n        sidebarToggle: 'sidebar-toggle',\n        logout: 'logout',\n    },\n    onboarding: {\n        btn_cancel: 'btn-cancel',\n        btn_back: 'btn-back',\n        btn_continue: 'btn-continue',\n        btn_close: 'btn-close',\n        type_selector: 'type-selector',\n        type_opt_aws: 'type-option-aws',\n        type_opt_ocp: 'type-option-ocp',\n        type_opt_non: 'type-option-non',\n        name_input: 'name-input',\n        check_box_1: 'check-box-1',\n        check_box_2: 'check-box-2',\n        s3_input: 's3-input',\n        clusterid_input: 'clusterid-input',\n        arn_input: 'arn-input',\n    },\n    providers: {\n        add_btn: 'add-btn',\n        bucket_input: 'bucket-input',\n        cancel_btn: 'cancel-btn',\n        empty_state_add_btn: 'empty_state_add-btn',\n        name_input: 'provider-name-input',\n        resource_name_input: 'provider-resource-name-input',\n        cluster_id_input: 'provider-cluster-id-input',\n        submit_btn: 'submit-btn',\n        type_input: 'provider-type-input',\n    },\n    sidebar: {\n        nav: 'vertical-nav',\n        link: 'vertical-nav-link',\n        backdrop: 'sidebar-backdrop',\n    },\n};\n","import { endOfMonth, format, getDate, getMonth, startOfMonth } from 'date-fns';\nimport i18next from 'i18next';\nexport function getNoDataForDateRangeString(key = 'no_data_for_date', offset = 1) {\n    const today = new Date();\n    today.setHours(0);\n    today.setMinutes(0);\n    today.setSeconds(0);\n    if (offset) {\n        today.setMonth(today.getMonth() - offset);\n    }\n    const month = getMonth(today);\n    const endDate = format(today, 'd');\n    const startDate = format(startOfMonth(today), 'd');\n    return i18next.t(key, {\n        count: getDate(today),\n        endDate,\n        month,\n        startDate,\n    });\n}\nexport function getForDateRangeString(value, key = 'for_date', offset = 1) {\n    const today = new Date();\n    today.setHours(0);\n    today.setMinutes(0);\n    today.setSeconds(0);\n    if (offset) {\n        today.setMonth(today.getMonth() - offset);\n    }\n    const month = getMonth(today);\n    const endDate = format(today, 'd');\n    const startDate = format(startOfMonth(today), 'd');\n    return i18next.t(key, {\n        count: getDate(today),\n        endDate,\n        month,\n        startDate,\n        value,\n    });\n}\nexport function getSinceDateRangeString(key = 'since_date') {\n    const today = new Date();\n    today.setHours(0);\n    today.setMinutes(0);\n    today.setSeconds(0);\n    const month = getMonth(today);\n    const endDate = format(today, 'd');\n    const startDate = format(startOfMonth(today), 'd');\n    return i18next.t(key, {\n        count: getDate(today),\n        endDate,\n        month,\n        startDate,\n    });\n}\nexport function getMonthDate(offset) {\n    const today = new Date();\n    today.setHours(0);\n    today.setMinutes(0);\n    today.setSeconds(0);\n    if (offset) {\n        today.setDate(1); // Required to obtain correct month\n        today.setMonth(today.getMonth() - offset);\n    }\n    const start_date = format(startOfMonth(today), 'yyyy-MM-dd');\n    const end_date = format(offset ? endOfMonth(today) : today, 'yyyy-MM-dd');\n    return { start_date, end_date };\n}\nexport function getCurrentMonthDate() {\n    return getMonthDate(0);\n}\nexport function getPreviousMonthDate() {\n    return getMonthDate(1);\n}\n// Returns offset + 1 days, including today's date. See https://issues.redhat.com/browse/COST-1117\nexport function getLastDaysDate(offset) {\n    const endDate = new Date();\n    const startDate = new Date();\n    startDate.setDate(startDate.getDate() - offset);\n    return {\n        end_date: format(endDate, 'yyyy-MM-dd'),\n        start_date: format(startDate, 'yyyy-MM-dd'),\n    };\n}\n// Returns 31 days, including today's date\nexport function getLast30DaysDate() {\n    return getLastDaysDate(30);\n}\n// Returns 61 days, including today's date\nexport function getLast60DaysDate() {\n    return getLastDaysDate(60);\n}\n","export function isEqual(obj1, obj2) {\n    let a = JSON.stringify(obj1);\n    let b = JSON.stringify(obj2);\n    if (!a) {\n        a = '';\n    }\n    if (!b) {\n        b = '';\n    }\n    return a.split('').sort().join('') === b.split('').sort().join('');\n}\n"],"sourceRoot":""}