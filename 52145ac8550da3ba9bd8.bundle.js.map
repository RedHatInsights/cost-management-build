{"version":3,"sources":["webpack:///./src/pages/providersModal/index.ts","webpack:///./src/components/textInput/textInput.styles.ts","webpack:///./src/components/textInput/textInput.tsx","webpack:///./src/testIds.ts","webpack:///./src/components/randomId/randomId.tsx","webpack:///./src/components/formGroup/formGroup.styles.ts","webpack:///./src/components/formGroup/formGroup.tsx","webpack:///./src/pages/providersModal/providersModal.styles.ts","webpack:///./src/pages/providersModal/providersModal.tsx"],"names":["__webpack_exports__","Object","react_hot_loader__WEBPACK_IMPORTED_MODULE_0__","module","_providersModal__WEBPACK_IMPORTED_MODULE_1__","styles","StyleSheet","create","textInput","width","fontSize","esm","value","paddingTop","paddingRight","paddingBottom","paddingLeft","lineHeight","outline","border",":focus","borderColor","flat","borderBottom","join","error","__rest","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","textInput_TextInput","react_default","a","Component","[object Object]","super","arguments","this","handleChange","evt","props","onChange","currentTarget","handleKeyPressed","onKeyPress","key","preventDefault","_a","className","isFlat","isError","createElement","assign","getTestProps","id","data-testid","testIds","login","alert","form","username_input","password_input","submit","masthead","username","sidebarToggle","logout","providers","add_btn","bucket_input","cancel_btn","name_input","resource_name_input","submit_btn","type_input","sidebar","nav","link","backdrop","currentId","randomId_RandomId","prefix","children","defaultProps","formGroup","marginBottom","label","display","fontWeight","FormGroup","htmlFor","cloneElement","Children","only","providersModal_styles_styles","docs","modal","react_redux_es","common","state","isProviderModalOpen","ui","selectIsProvidersModalOpen","selectAddProviderError","fetchStatus","selectAddProviderFetchStatus","addProvider","clearProviderFailure","closeProvidersModal","es","defaultState","bucket","bucketInvalidMsg","name","nameInvalidMsg","resourceName","resourceNameInvalidMsg","type","handleAddProvider","authentication","provider_resource_name","billing_source","handleCancel","handleBucketChange","RegExp","test","setState","handleNameChange","handleResourceNameChange","prevProps","emptyField","trim","invalidField","bucketError","response","data","nameError","resourceNameError","errorMsg","Modal","isLarge","isOpen","onClose","title","actions","Button","onClick","variant","secondary","isDisabled","primary","Boolean","Alert","danger","href","target","autoFocus","placeholder"],"mappings":"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","file":"52145ac8550da3ba9bd8.bundle.js","sourcesContent":["import { hot } from 'react-hot-loader';\nimport ProvidersModal from './providersModal';\nexport default hot(module)(ProvidersModal);\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_BorderColor, global_BorderColor_dark, global_BorderWidth_md, global_BorderWidth_sm, global_danger_color_100, global_danger_color_200, global_FontSize_md, global_spacer_sm, global_spacer_xl, global_spacer_xs, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    textInput: {\n        width: '100%',\n        fontSize: global_FontSize_md.value,\n        paddingTop: global_spacer_xs.value,\n        paddingRight: global_spacer_xl.value,\n        paddingBottom: global_spacer_xs.value,\n        paddingLeft: global_spacer_sm.value,\n        lineHeight: '24px',\n        outline: 0,\n        border: `${global_BorderWidth_sm.value} solid ${global_BorderColor.value}`,\n        ':focus': {\n            borderColor: global_BorderColor_dark.value,\n        },\n    },\n    flat: {\n        border: 'none',\n        borderBottom: [\n            global_BorderWidth_sm.value,\n            'solid',\n            global_BorderColor.value,\n        ].join(' '),\n        ':focus': {\n            borderBottom: [\n                global_BorderWidth_md.value,\n                'solid',\n                global_BorderColor_dark.value,\n            ].join(' '),\n        },\n    },\n    error: {\n        borderColor: global_danger_color_100.value,\n        ':focus': {\n            borderColor: global_danger_color_200.value,\n        },\n    },\n});\n","var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { styles } from './textInput.styles';\nexport class TextInput extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.handleChange = (evt) => {\n            this.props.onChange(evt.currentTarget.value, evt);\n        };\n        this.handleKeyPressed = (evt) => {\n            if (this.props.onKeyPress && evt.key === 'Enter') {\n                evt.preventDefault();\n                this.props.onKeyPress(evt);\n            }\n        };\n    }\n    render() {\n        const _a = this.props, { className, isFlat, isError } = _a, props = __rest(_a, [\"className\", \"isFlat\", \"isError\"]);\n        return (React.createElement(\"input\", Object.assign({}, props, { className: css(className, styles.textInput, isFlat && styles.flat, isError && styles.error), onChange: this.handleChange, onKeyPress: this.handleKeyPressed })));\n    }\n}\n","export const testIdProp = 'data-testid';\nexport const getTestProps = (id) => ({ [testIdProp]: id });\nexport const testIds = {\n    login: {\n        alert: 'alert',\n        form: 'login-form',\n        username_input: 'username-input',\n        password_input: 'password-input',\n        submit: 'submit',\n    },\n    masthead: {\n        masthead: 'masthead',\n        username: 'username',\n        sidebarToggle: 'sidebar-toggle',\n        logout: 'logout',\n    },\n    providers: {\n        add_btn: 'add-btn',\n        bucket_input: 'bucket-input',\n        cancel_btn: 'cancel-btn',\n        name_input: 'provider-name-input',\n        resource_name_input: 'provider-resource-name-input',\n        submit_btn: 'submit-btn',\n        type_input: 'provider-type-input',\n    },\n    sidebar: {\n        nav: 'vertical-nav',\n        link: 'vertical-nav-link',\n        backdrop: 'sidebar-backdrop',\n    },\n};\n","import React from 'react';\nlet currentId = 0;\nclass RandomId extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.id = `${this.props.prefix}${currentId++}`;\n    }\n    render() {\n        return this.props.children({ id: this.id });\n    }\n}\nRandomId.defaultProps = {\n    prefix: 'random-id-',\n};\nexport { RandomId };\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_FontWeight_normal, global_gutter, global_spacer_sm, } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    formGroup: {\n        marginBottom: global_gutter.value,\n    },\n    label: {\n        display: 'block',\n        fontWeight: global_FontWeight_normal.value,\n        paddingBottom: global_spacer_sm.value,\n    },\n});\n","import { css } from '@patternfly/react-styles';\nimport React from 'react';\nimport { RandomId } from '../randomId';\nimport { styles } from './formGroup.styles';\nexport const FormGroup = ({ label, children }) => (React.createElement(RandomId, { prefix: label }, ({ id }) => (React.createElement(\"div\", { className: css(styles.formGroup) },\n    React.createElement(\"label\", { className: css(styles.label), htmlFor: id }, label),\n    React.createElement(\"div\", null, React.cloneElement(React.Children.only(children), { id }))))));\n","import { StyleSheet } from '@patternfly/react-styles';\nimport { global_spacer_md } from '@patternfly/react-tokens';\nexport const styles = StyleSheet.create({\n    alert: {\n        marginBottom: global_spacer_md.value,\n    },\n    docs: {\n        marginBottom: global_spacer_md.value,\n    },\n    modal: {\n        // Workaround for isLarge not working properly\n        width: '700px',\n    },\n});\n","import { Alert, AlertVariant, Button, ButtonVariant, Modal, } from '@patternfly/react-core';\nimport { css } from '@patternfly/react-styles';\nimport { FormGroup } from 'components/formGroup';\nimport { TextInput } from 'components/textInput';\nimport React from 'react';\nimport { translate } from 'react-i18next';\nimport { connect } from 'react-redux';\nimport { createMapStateToProps } from 'store/common';\nimport { providersActions, providersSelectors } from 'store/providers';\nimport { uiActions, uiSelectors } from 'store/ui';\nimport { getTestProps, testIds } from 'testIds';\nimport { styles } from './providersModal.styles';\nexport class ProvidersModal extends React.Component {\n    constructor() {\n        super(...arguments);\n        this.defaultState = {\n            bucket: '',\n            bucketInvalidMsg: null,\n            name: '',\n            nameInvalidMsg: null,\n            resourceName: '',\n            resourceNameInvalidMsg: null,\n            type: 'AWS',\n        };\n        this.state = Object.assign({}, this.defaultState);\n        this.handleAddProvider = () => {\n            this.props.addProvider({\n                name: this.state.name,\n                type: this.state.type,\n                authentication: {\n                    provider_resource_name: this.state.resourceName,\n                },\n                billing_source: {\n                    bucket: this.state.bucket,\n                },\n            });\n        };\n        this.handleCancel = () => {\n            this.props.closeProvidersModal();\n        };\n        this.handleBucketChange = (bucket) => {\n            const { t } = this.props;\n            const invalid = !new RegExp('^[a-zA-Z0-9.\\\\-_]{0,255}$').test(bucket);\n            const bucketInvalidMsg = invalid ? t('providers.bucket_error') : null;\n            this.setState(() => ({\n                bucket,\n                bucketInvalidMsg,\n            }));\n            this.props.clearProviderFailure(); // Clear previous errors when user edits input field\n        };\n        this.handleNameChange = (name) => {\n            const { t } = this.props;\n            const invalid = !new RegExp('^.?').test(name);\n            const nameInvalidMsg = invalid ? t('providers.name_error') : null;\n            this.setState(() => ({\n                name,\n                nameInvalidMsg,\n            }));\n            this.props.clearProviderFailure(); // Clear previous errors when user edits input field\n        };\n        this.handleResourceNameChange = (resourceName) => {\n            const { t } = this.props;\n            const invalid = resourceName.length > 0 && !new RegExp('^arn:aws:').test(resourceName);\n            const resourceNameInvalidMsg = invalid\n                ? t('providers.resource_name_error')\n                : null;\n            this.setState(() => ({\n                resourceName,\n                resourceNameInvalidMsg,\n            }));\n            this.props.clearProviderFailure(); // Clear previous errors when user edits input field\n        };\n    }\n    componentDidUpdate(prevProps) {\n        const { isProviderModalOpen } = this.props;\n        if (isProviderModalOpen && !prevProps.isProviderModalOpen) {\n            this.setState(Object.assign({}, this.defaultState));\n        }\n    }\n    render() {\n        const { t, error } = this.props;\n        const { bucket, bucketInvalidMsg, name, nameInvalidMsg, resourceName, resourceNameInvalidMsg, } = this.state;\n        const emptyField = bucket.trim().length === 0 ||\n            name.trim().length === 0 ||\n            resourceName.trim().length === 0;\n        const invalidField = bucketInvalidMsg !== null ||\n            nameInvalidMsg !== null ||\n            resourceNameInvalidMsg !== null;\n        const bucketError = error &&\n            error.response &&\n            (error.response.data.bucket || error.response.data.billing_source);\n        const nameError = error && error.response && error.response.data.name;\n        const resourceNameError = error &&\n            error.response &&\n            (error.response.data.provider_resource_name ||\n                error.response.data.authentication);\n        let errorMsg = t('providers.default_error');\n        if (bucketError) {\n            errorMsg =\n                error.response.data.bucket || error.response.data.billing_source.bucket;\n        }\n        else if (nameError) {\n            errorMsg = error.response.data.name;\n        }\n        else if (resourceNameError) {\n            errorMsg =\n                error.response.data.provider_resource_name ||\n                    error.response.data.authentication.provider_resource_name;\n        }\n        return (React.createElement(Modal, { className: css(styles.modal), isLarge: true, isOpen: this.props.isProviderModalOpen, onClose: this.handleCancel, title: 'Add Account', actions: [\n                React.createElement(Button, Object.assign({}, getTestProps(testIds.providers.cancel_btn), { key: \"cancel\", onClick: this.handleCancel, variant: ButtonVariant.secondary }), t('providers.cancel')),\n                React.createElement(Button, Object.assign({}, getTestProps(testIds.providers.submit_btn), { key: \"confirm\", isDisabled: emptyField ||\n                        invalidField ||\n                        this.props.fetchStatus === 1 /* inProgress */, onClick: this.handleAddProvider, variant: ButtonVariant.primary }), t('providers.confirm')),\n            ] },\n            Boolean(error || invalidField) && (React.createElement(\"div\", { className: css(styles.alert) },\n                React.createElement(Alert, Object.assign({}, getTestProps(testIds.login.alert), { variant: AlertVariant.danger, title: bucketInvalidMsg ||\n                        nameInvalidMsg ||\n                        resourceNameInvalidMsg ||\n                        errorMsg })))),\n            React.createElement(\"p\", { className: css(styles.docs) },\n                \"View the\",\n                ' ',\n                React.createElement(\"a\", { href: \"https://koku.readthedocs.io/en/latest/providers.html#adding-an-aws-account\", target: \"_blank\" }, \"Koku documentation\"),\n                ' ',\n                \"and learn how to configure your AWS account to allow Koku access.\"),\n            React.createElement(FormGroup, { label: t('providers.name_label') },\n                React.createElement(TextInput, Object.assign({}, getTestProps(testIds.providers.name_input), { autoFocus: true, isError: Boolean(nameError), isFlat: true, onChange: this.handleNameChange, placeholder: 'AWSHCCM', value: name }))),\n            React.createElement(FormGroup, { label: t('providers.bucket_label') },\n                React.createElement(TextInput, Object.assign({}, getTestProps(testIds.providers.bucket_input), { isError: Boolean(bucketError || bucketInvalidMsg), isFlat: true, type: \"text\", onChange: this.handleBucketChange, placeholder: 'cost-usage-bucket', value: bucket }))),\n            React.createElement(FormGroup, { label: t('providers.resource_name_label') },\n                React.createElement(TextInput, Object.assign({}, getTestProps(testIds.providers.resource_name_input), { isError: Boolean(resourceNameError || resourceNameInvalidMsg), isFlat: true, onChange: this.handleResourceNameChange, placeholder: 'arn:aws:iam::589173575009:role/CostManagement', value: resourceName })))));\n    }\n}\nexport default connect(createMapStateToProps(state => ({\n    isProviderModalOpen: uiSelectors.selectIsProvidersModalOpen(state),\n    error: providersSelectors.selectAddProviderError(state),\n    fetchStatus: providersSelectors.selectAddProviderFetchStatus(state),\n})), {\n    addProvider: providersActions.addProvider,\n    clearProviderFailure: providersActions.clearProviderFailure,\n    closeProvidersModal: uiActions.closeProvidersModal,\n})(translate()(ProvidersModal));\n"],"sourceRoot":""}